/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 497);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
  // This works if the window reference is available
  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_c", function() { return BROWSER_MODULE_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_b", function() { return _document; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_a", function() { return errorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_k", function() { return GenericBrowserDomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_d", function() { return createMeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_i", function() { return SERVER_TRANSITION_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_h", function() { return appInitializerFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_e", function() { return createTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_f", function() { return initTransferState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_j", function() { return _createNgProbe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_platform_browser_g", function() { return EventManagerPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserModule", function() { return BrowserModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "platformBrowser", function() { return platformBrowser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Meta", function() { return Meta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Title", function() { return Title; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disableDebugTools", function() { return disableDebugTools; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableDebugTools", function() { return enableDebugTools; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserTransferStateModule", function() { return BrowserTransferStateModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransferState", function() { return TransferState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeStateKey", function() { return makeStateKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "By", function() { return By; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOCUMENT", function() { return DOCUMENT$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_MANAGER_PLUGINS", function() { return EVENT_MANAGER_PLUGINS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventManager", function() { return EventManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HAMMER_GESTURE_CONFIG", function() { return HAMMER_GESTURE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HAMMER_LOADER", function() { return HAMMER_LOADER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HammerGestureConfig", function() { return HammerGestureConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomSanitizer", function() { return DomSanitizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBROWSER_SANITIZATION_PROVIDERS", function() { return BROWSER_SANITIZATION_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS", function() { return INTERNAL_BROWSER_PLATFORM_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinitDomAdapter", function() { return initDomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBrowserDomAdapter", function() { return BrowserDomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBrowserPlatformLocation", function() { return BrowserPlatformLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵTRANSITION_ID", function() { return TRANSITION_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵBrowserGetTestability", function() { return BrowserGetTestability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵescapeHtml", function() { return escapeHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵELEMENT_PROBE_PROVIDERS", function() { return ELEMENT_PROBE_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomAdapter", function() { return DomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetDOM", function() { return getDOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsetRootDomAdapter", function() { return setRootDomAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomRendererFactory2", function() { return DomRendererFactory2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNAMESPACE_URIS", function() { return NAMESPACE_URIS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵflattenStyles", function() { return flattenStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵshimContentAttribute", function() { return shimContentAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵshimHostAttribute", function() { return shimHostAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomEventsPlugin", function() { return DomEventsPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵHammerGesturesPlugin", function() { return HammerGesturesPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵKeyEventsPlugin", function() { return KeyEventsPlugin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomSharedStylesHost", function() { return DomSharedStylesHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵSharedStylesHost", function() { return SharedStylesHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵDomSanitizerImpl", function() { return DomSanitizerImpl; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(265);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(266);
/**
 * @license Angular v7.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */



/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var _DOM = null;

function getDOM() {
  return _DOM;
}

function setRootDomAdapter(adapter) {
  if (!_DOM) {
    _DOM = adapter;
  }
}
/* tslint:disable:requireParameterType */

/**
 * Provides DOM operations in an environment-agnostic way.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */


var DomAdapter =
/** @class */
function () {
  function DomAdapter() {
    this.resourceLoaderType = null;
  }

  Object.defineProperty(DomAdapter.prototype, "attrToPropMap", {
    /**
     * Maps attribute names to their corresponding property names for cases
     * where attribute name doesn't match property name.
     */
    get: function get() {
      return this._attrToPropMap;
    },
    set: function set(value) {
      this._attrToPropMap = value;
    },
    enumerable: true,
    configurable: true
  });
  return DomAdapter;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Provides DOM operations in any browser environment.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */


var GenericBrowserDomAdapter =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GenericBrowserDomAdapter, _super);

  function GenericBrowserDomAdapter() {
    var _this = _super.call(this) || this;

    _this._animationPrefix = null;
    _this._transitionEnd = null;

    try {
      var element_1 = _this.createElement('div', document);

      if (_this.getStyle(element_1, 'animationName') != null) {
        _this._animationPrefix = '';
      } else {
        var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];

        for (var i = 0; i < domPrefixes.length; i++) {
          if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {
            _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';
            break;
          }
        }
      }

      var transEndEventNames_1 = {
        WebkitTransition: 'webkitTransitionEnd',
        MozTransition: 'transitionend',
        OTransition: 'oTransitionEnd otransitionend',
        transition: 'transitionend'
      };
      Object.keys(transEndEventNames_1).forEach(function (key) {
        if (_this.getStyle(element_1, key) != null) {
          _this._transitionEnd = transEndEventNames_1[key];
        }
      });
    } catch (e) {
      _this._animationPrefix = null;
      _this._transitionEnd = null;
    }

    return _this;
  }

  GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) {
    return el.getDistributedNodes();
  };

  GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {
    el.href = href == null ? baseUrl : baseUrl + '/../' + href;
  };

  GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () {
    return true;
  };

  GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {
    return typeof document.body.createShadowRoot === 'function';
  };

  GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () {
    return this._animationPrefix ? this._animationPrefix : '';
  };

  GenericBrowserDomAdapter.prototype.getTransitionEnd = function () {
    return this._transitionEnd ? this._transitionEnd : '';
  };

  GenericBrowserDomAdapter.prototype.supportsAnimation = function () {
    return this._animationPrefix != null && this._transitionEnd != null;
  };

  return GenericBrowserDomAdapter;
}(DomAdapter);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _attrToPropMap = {
  'class': 'className',
  'innerHtml': 'innerHTML',
  'readonly': 'readOnly',
  'tabindex': 'tabIndex'
};
var DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey

var _keyMap = {
  // The following values are here for cross-browser compatibility and to match the W3C standard
  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/
  '\b': 'Backspace',
  '\t': 'Tab',
  '\x7F': 'Delete',
  '\x1B': 'Escape',
  'Del': 'Delete',
  'Esc': 'Escape',
  'Left': 'ArrowLeft',
  'Right': 'ArrowRight',
  'Up': 'ArrowUp',
  'Down': 'ArrowDown',
  'Menu': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'Win': 'OS'
}; // There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...

var _chromeNumKeyPadMap = {
  'A': '1',
  'B': '2',
  'C': '3',
  'D': '4',
  'E': '5',
  'F': '6',
  'G': '7',
  'H': '8',
  'I': '9',
  'J': '*',
  'K': '+',
  'M': '-',
  'N': '.',
  'O': '/',
  '\x60': '0',
  '\x90': 'NumLock'
};
var nodeContains;

if (_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['Node']) {
  nodeContains = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['Node'].prototype.contains || function (node) {
    return !!(this.compareDocumentPosition(node) & 16);
  };
}
/**
 * A `DomAdapter` powered by full browser DOM APIs.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */

/* tslint:disable:requireParameterType no-console */


var BrowserDomAdapter =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(BrowserDomAdapter, _super);

  function BrowserDomAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  BrowserDomAdapter.prototype.parse = function (templateHtml) {
    throw new Error('parse not implemented');
  };

  BrowserDomAdapter.makeCurrent = function () {
    setRootDomAdapter(new BrowserDomAdapter());
  };

  BrowserDomAdapter.prototype.hasProperty = function (element, name) {
    return name in element;
  };

  BrowserDomAdapter.prototype.setProperty = function (el, name, value) {
    el[name] = value;
  };

  BrowserDomAdapter.prototype.getProperty = function (el, name) {
    return el[name];
  };

  BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {
    var _a;

    (_a = el)[methodName].apply(_a, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
  }; // TODO(tbosch): move this into a separate environment class once we have it


  BrowserDomAdapter.prototype.logError = function (error) {
    if (window.console) {
      if (console.error) {
        console.error(error);
      } else {
        console.log(error);
      }
    }
  };

  BrowserDomAdapter.prototype.log = function (error) {
    if (window.console) {
      window.console.log && window.console.log(error);
    }
  };

  BrowserDomAdapter.prototype.logGroup = function (error) {
    if (window.console) {
      window.console.group && window.console.group(error);
    }
  };

  BrowserDomAdapter.prototype.logGroupEnd = function () {
    if (window.console) {
      window.console.groupEnd && window.console.groupEnd();
    }
  };

  Object.defineProperty(BrowserDomAdapter.prototype, "attrToPropMap", {
    get: function get() {
      return _attrToPropMap;
    },
    enumerable: true,
    configurable: true
  });

  BrowserDomAdapter.prototype.contains = function (nodeA, nodeB) {
    return nodeContains.call(nodeA, nodeB);
  };

  BrowserDomAdapter.prototype.querySelector = function (el, selector) {
    return el.querySelector(selector);
  };

  BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) {
    return el.querySelectorAll(selector);
  };

  BrowserDomAdapter.prototype.on = function (el, evt, listener) {
    el.addEventListener(evt, listener, false);
  };

  BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {
    el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of
    // https://code.google.com/p/dart/issues/detail?id=17406

    return function () {
      el.removeEventListener(evt, listener, false);
    };
  };

  BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) {
    el.dispatchEvent(evt);
  };

  BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {
    var evt = this.getDefaultDocument().createEvent('MouseEvent');
    evt.initEvent(eventType, true, true);
    return evt;
  };

  BrowserDomAdapter.prototype.createEvent = function (eventType) {
    var evt = this.getDefaultDocument().createEvent('Event');
    evt.initEvent(eventType, true, true);
    return evt;
  };

  BrowserDomAdapter.prototype.preventDefault = function (evt) {
    evt.preventDefault();
    evt.returnValue = false;
  };

  BrowserDomAdapter.prototype.isPrevented = function (evt) {
    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;
  };

  BrowserDomAdapter.prototype.getInnerHTML = function (el) {
    return el.innerHTML;
  };

  BrowserDomAdapter.prototype.getTemplateContent = function (el) {
    return 'content' in el && this.isTemplateElement(el) ? el.content : null;
  };

  BrowserDomAdapter.prototype.getOuterHTML = function (el) {
    return el.outerHTML;
  };

  BrowserDomAdapter.prototype.nodeName = function (node) {
    return node.nodeName;
  };

  BrowserDomAdapter.prototype.nodeValue = function (node) {
    return node.nodeValue;
  };

  BrowserDomAdapter.prototype.type = function (node) {
    return node.type;
  };

  BrowserDomAdapter.prototype.content = function (node) {
    if (this.hasProperty(node, 'content')) {
      return node.content;
    } else {
      return node;
    }
  };

  BrowserDomAdapter.prototype.firstChild = function (el) {
    return el.firstChild;
  };

  BrowserDomAdapter.prototype.nextSibling = function (el) {
    return el.nextSibling;
  };

  BrowserDomAdapter.prototype.parentElement = function (el) {
    return el.parentNode;
  };

  BrowserDomAdapter.prototype.childNodes = function (el) {
    return el.childNodes;
  };

  BrowserDomAdapter.prototype.childNodesAsList = function (el) {
    var childNodes = el.childNodes;
    var res = new Array(childNodes.length);

    for (var i = 0; i < childNodes.length; i++) {
      res[i] = childNodes[i];
    }

    return res;
  };

  BrowserDomAdapter.prototype.clearNodes = function (el) {
    while (el.firstChild) {
      el.removeChild(el.firstChild);
    }
  };

  BrowserDomAdapter.prototype.appendChild = function (el, node) {
    el.appendChild(node);
  };

  BrowserDomAdapter.prototype.removeChild = function (el, node) {
    el.removeChild(node);
  };

  BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) {
    el.replaceChild(newChild, oldChild);
  };

  BrowserDomAdapter.prototype.remove = function (node) {
    if (node.parentNode) {
      node.parentNode.removeChild(node);
    }

    return node;
  };

  BrowserDomAdapter.prototype.insertBefore = function (parent, ref, node) {
    parent.insertBefore(node, ref);
  };

  BrowserDomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) {
    nodes.forEach(function (n) {
      return parent.insertBefore(n, ref);
    });
  };

  BrowserDomAdapter.prototype.insertAfter = function (parent, ref, node) {
    parent.insertBefore(node, ref.nextSibling);
  };

  BrowserDomAdapter.prototype.setInnerHTML = function (el, value) {
    el.innerHTML = value;
  };

  BrowserDomAdapter.prototype.getText = function (el) {
    return el.textContent;
  };

  BrowserDomAdapter.prototype.setText = function (el, value) {
    el.textContent = value;
  };

  BrowserDomAdapter.prototype.getValue = function (el) {
    return el.value;
  };

  BrowserDomAdapter.prototype.setValue = function (el, value) {
    el.value = value;
  };

  BrowserDomAdapter.prototype.getChecked = function (el) {
    return el.checked;
  };

  BrowserDomAdapter.prototype.setChecked = function (el, value) {
    el.checked = value;
  };

  BrowserDomAdapter.prototype.createComment = function (text) {
    return this.getDefaultDocument().createComment(text);
  };

  BrowserDomAdapter.prototype.createTemplate = function (html) {
    var t = this.getDefaultDocument().createElement('template');
    t.innerHTML = html;
    return t;
  };

  BrowserDomAdapter.prototype.createElement = function (tagName, doc) {
    doc = doc || this.getDefaultDocument();
    return doc.createElement(tagName);
  };

  BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {
    doc = doc || this.getDefaultDocument();
    return doc.createElementNS(ns, tagName);
  };

  BrowserDomAdapter.prototype.createTextNode = function (text, doc) {
    doc = doc || this.getDefaultDocument();
    return doc.createTextNode(text);
  };

  BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {
    doc = doc || this.getDefaultDocument();
    var el = doc.createElement('SCRIPT');
    el.setAttribute(attrName, attrValue);
    return el;
  };

  BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {
    doc = doc || this.getDefaultDocument();
    var style = doc.createElement('style');
    this.appendChild(style, this.createTextNode(css, doc));
    return style;
  };

  BrowserDomAdapter.prototype.createShadowRoot = function (el) {
    return el.createShadowRoot();
  };

  BrowserDomAdapter.prototype.getShadowRoot = function (el) {
    return el.shadowRoot;
  };

  BrowserDomAdapter.prototype.getHost = function (el) {
    return el.host;
  };

  BrowserDomAdapter.prototype.clone = function (node) {
    return node.cloneNode(true);
  };

  BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {
    return element.getElementsByClassName(name);
  };

  BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {
    return element.getElementsByTagName(name);
  };

  BrowserDomAdapter.prototype.classList = function (element) {
    return Array.prototype.slice.call(element.classList, 0);
  };

  BrowserDomAdapter.prototype.addClass = function (element, className) {
    element.classList.add(className);
  };

  BrowserDomAdapter.prototype.removeClass = function (element, className) {
    element.classList.remove(className);
  };

  BrowserDomAdapter.prototype.hasClass = function (element, className) {
    return element.classList.contains(className);
  };

  BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {
    element.style[styleName] = styleValue;
  };

  BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {
    // IE requires '' instead of null
    // see https://github.com/angular/angular/issues/7916
    element.style[stylename] = '';
  };

  BrowserDomAdapter.prototype.getStyle = function (element, stylename) {
    return element.style[stylename];
  };

  BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {
    var value = this.getStyle(element, styleName) || '';
    return styleValue ? value == styleValue : value.length > 0;
  };

  BrowserDomAdapter.prototype.tagName = function (element) {
    return element.tagName;
  };

  BrowserDomAdapter.prototype.attributeMap = function (element) {
    var res = new Map();
    var elAttrs = element.attributes;

    for (var i = 0; i < elAttrs.length; i++) {
      var attrib = elAttrs.item(i);
      res.set(attrib.name, attrib.value);
    }

    return res;
  };

  BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {
    return element.hasAttribute(attribute);
  };

  BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {
    return element.hasAttributeNS(ns, attribute);
  };

  BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {
    return element.getAttribute(attribute);
  };

  BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {
    return element.getAttributeNS(ns, name);
  };

  BrowserDomAdapter.prototype.setAttribute = function (element, name, value) {
    element.setAttribute(name, value);
  };

  BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {
    element.setAttributeNS(ns, name, value);
  };

  BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) {
    element.removeAttribute(attribute);
  };

  BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {
    element.removeAttributeNS(ns, name);
  };

  BrowserDomAdapter.prototype.templateAwareRoot = function (el) {
    return this.isTemplateElement(el) ? this.content(el) : el;
  };

  BrowserDomAdapter.prototype.createHtmlDocument = function () {
    return document.implementation.createHTMLDocument('fakeTitle');
  };

  BrowserDomAdapter.prototype.getDefaultDocument = function () {
    return document;
  };

  BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {
    try {
      return el.getBoundingClientRect();
    } catch (e) {
      return {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
        width: 0,
        height: 0
      };
    }
  };

  BrowserDomAdapter.prototype.getTitle = function (doc) {
    return doc.title;
  };

  BrowserDomAdapter.prototype.setTitle = function (doc, newTitle) {
    doc.title = newTitle || '';
  };

  BrowserDomAdapter.prototype.elementMatches = function (n, selector) {
    if (this.isElementNode(n)) {
      return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);
    }

    return false;
  };

  BrowserDomAdapter.prototype.isTemplateElement = function (el) {
    return this.isElementNode(el) && el.nodeName === 'TEMPLATE';
  };

  BrowserDomAdapter.prototype.isTextNode = function (node) {
    return node.nodeType === Node.TEXT_NODE;
  };

  BrowserDomAdapter.prototype.isCommentNode = function (node) {
    return node.nodeType === Node.COMMENT_NODE;
  };

  BrowserDomAdapter.prototype.isElementNode = function (node) {
    return node.nodeType === Node.ELEMENT_NODE;
  };

  BrowserDomAdapter.prototype.hasShadowRoot = function (node) {
    return node.shadowRoot != null && node instanceof HTMLElement;
  };

  BrowserDomAdapter.prototype.isShadowRoot = function (node) {
    return node instanceof DocumentFragment;
  };

  BrowserDomAdapter.prototype.importIntoDoc = function (node) {
    return document.importNode(this.templateAwareRoot(node), true);
  };

  BrowserDomAdapter.prototype.adoptNode = function (node) {
    return document.adoptNode(node);
  };

  BrowserDomAdapter.prototype.getHref = function (el) {
    return el.getAttribute('href');
  };

  BrowserDomAdapter.prototype.getEventKey = function (event) {
    var key = event.key;

    if (key == null) {
      key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and
      // Safari cf
      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces

      if (key == null) {
        return 'Unidentified';
      }

      if (key.startsWith('U+')) {
        key = String.fromCharCode(parseInt(key.substring(2), 16));

        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {
          // There is a bug in Chrome for numeric keypad keys:
          // https://code.google.com/p/chromium/issues/detail?id=155654
          // 1, 2, 3 ... are reported as A, B, C ...
          key = _chromeNumKeyPadMap[key];
        }
      }
    }

    return _keyMap[key] || key;
  };

  BrowserDomAdapter.prototype.getGlobalEventTarget = function (doc, target) {
    if (target === 'window') {
      return window;
    }

    if (target === 'document') {
      return doc;
    }

    if (target === 'body') {
      return doc.body;
    }

    return null;
  };

  BrowserDomAdapter.prototype.getHistory = function () {
    return window.history;
  };

  BrowserDomAdapter.prototype.getLocation = function () {
    return window.location;
  };

  BrowserDomAdapter.prototype.getBaseHref = function (doc) {
    var href = getBaseElementHref();
    return href == null ? null : relativePath(href);
  };

  BrowserDomAdapter.prototype.resetBaseElement = function () {
    baseElement = null;
  };

  BrowserDomAdapter.prototype.getUserAgent = function () {
    return window.navigator.userAgent;
  };

  BrowserDomAdapter.prototype.setData = function (element, name, value) {
    this.setAttribute(element, 'data-' + name, value);
  };

  BrowserDomAdapter.prototype.getData = function (element, name) {
    return this.getAttribute(element, 'data-' + name);
  };

  BrowserDomAdapter.prototype.getComputedStyle = function (element) {
    return getComputedStyle(element);
  }; // TODO(tbosch): move this into a separate environment class once we have it


  BrowserDomAdapter.prototype.supportsWebAnimation = function () {
    return typeof Element.prototype['animate'] === 'function';
  };

  BrowserDomAdapter.prototype.performanceNow = function () {
    // performance.now() is not available in all browsers, see
    // http://caniuse.com/#search=performance.now
    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();
  };

  BrowserDomAdapter.prototype.supportsCookies = function () {
    return true;
  };

  BrowserDomAdapter.prototype.getCookie = function (name) {
    return Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["ɵparseCookieValue"])(document.cookie, name);
  };

  BrowserDomAdapter.prototype.setCookie = function (name, value) {
    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does
    // not clear other cookies.
    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);
  };

  return BrowserDomAdapter;
}(GenericBrowserDomAdapter);

var baseElement = null;

function getBaseElementHref() {
  if (!baseElement) {
    baseElement = document.querySelector('base');

    if (!baseElement) {
      return null;
    }
  }

  return baseElement.getAttribute('href');
} // based on urlUtils.js in AngularJS 1


var urlParsingNode;

function relativePath(url) {
  if (!urlParsingNode) {
    urlParsingNode = document.createElement('a');
  }

  urlParsingNode.setAttribute('href', url);
  return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A DI Token representing the main rendering context. In a browser this is the DOM Document.
 *
 * Note: Document might not be available in the Application Context when Application and Rendering
 * Contexts are not the same (e.g. when running the application into a Web Worker).
 *
 * @deprecated import from `@angular/common` instead.
 */


var DOCUMENT$1 = _angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function supportsState() {
  return !!window.history.pushState;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * `PlatformLocation` encapsulates all of the direct calls to platform APIs.
 * This class should not be used directly by an application developer. Instead, use
 * {@link Location}.
 */


var BrowserPlatformLocation =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(BrowserPlatformLocation, _super);

  function BrowserPlatformLocation(_doc) {
    var _this = _super.call(this) || this;

    _this._doc = _doc;

    _this._init();

    return _this;
  } // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it

  /** @internal */


  BrowserPlatformLocation.prototype._init = function () {
    this.location = getDOM().getLocation();
    this._history = getDOM().getHistory();
  };

  BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () {
    return getDOM().getBaseHref(this._doc);
  };

  BrowserPlatformLocation.prototype.onPopState = function (fn) {
    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);
  };

  BrowserPlatformLocation.prototype.onHashChange = function (fn) {
    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);
  };

  Object.defineProperty(BrowserPlatformLocation.prototype, "pathname", {
    get: function get() {
      return this.location.pathname;
    },
    set: function set(newPath) {
      this.location.pathname = newPath;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BrowserPlatformLocation.prototype, "search", {
    get: function get() {
      return this.location.search;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BrowserPlatformLocation.prototype, "hash", {
    get: function get() {
      return this.location.hash;
    },
    enumerable: true,
    configurable: true
  });

  BrowserPlatformLocation.prototype.pushState = function (state, title, url) {
    if (supportsState()) {
      this._history.pushState(state, title, url);
    } else {
      this.location.hash = url;
    }
  };

  BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {
    if (supportsState()) {
      this._history.replaceState(state, title, url);
    } else {
      this.location.hash = url;
    }
  };

  BrowserPlatformLocation.prototype.forward = function () {
    this._history.forward();
  };

  BrowserPlatformLocation.prototype.back = function () {
    this._history.back();
  };

  BrowserPlatformLocation = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], BrowserPlatformLocation);
  return BrowserPlatformLocation;
}(_angular_common__WEBPACK_IMPORTED_MODULE_1__["PlatformLocation"]);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An id that identifies a particular application being bootstrapped, that should
 * match across the client/server boundary.
 */


var TRANSITION_ID = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('TRANSITION_ID');

function appInitializerFactory(transitionId, document, injector) {
  return function () {
    // Wait for all application initializers to be completed before removing the styles set by
    // the server.
    injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ApplicationInitStatus"]).donePromise.then(function () {
      var dom = getDOM();
      var styles = Array.prototype.slice.apply(dom.querySelectorAll(document, "style[ng-transition]"));
      styles.filter(function (el) {
        return dom.getAttribute(el, 'ng-transition') === transitionId;
      }).forEach(function (el) {
        return dom.remove(el);
      });
    });
  };
}

var SERVER_TRANSITION_PROVIDERS = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["APP_INITIALIZER"],
  useFactory: appInitializerFactory,
  deps: [TRANSITION_ID, DOCUMENT$1, _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injector"]],
  multi: true
}];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var BrowserGetTestability =
/** @class */
function () {
  function BrowserGetTestability() {}

  BrowserGetTestability.init = function () {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["setTestabilityGetter"])(new BrowserGetTestability());
  };

  BrowserGetTestability.prototype.addToWindow = function (registry) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['getAngularTestability'] = function (elem, findInAncestors) {
      if (findInAncestors === void 0) {
        findInAncestors = true;
      }

      var testability = registry.findTestabilityInTree(elem, findInAncestors);

      if (testability == null) {
        throw new Error('Could not find testability for element.');
      }

      return testability;
    };

    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['getAllAngularTestabilities'] = function () {
      return registry.getAllTestabilities();
    };

    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['getAllAngularRootElements'] = function () {
      return registry.getAllRootElements();
    };

    var whenAllStable = function whenAllStable(callback
    /** TODO #9100 */
    ) {
      var testabilities = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['getAllAngularTestabilities']();
      var count = testabilities.length;
      var didWork = false;

      var decrement = function decrement(didWork_
      /** TODO #9100 */
      ) {
        didWork = didWork || didWork_;
        count--;

        if (count == 0) {
          callback(didWork);
        }
      };

      testabilities.forEach(function (testability
      /** TODO #9100 */
      ) {
        testability.whenStable(decrement);
      });
    };

    if (!_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['frameworkStabilizers']) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['frameworkStabilizers'] = [];
    }

    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['frameworkStabilizers'].push(whenAllStable);
  };

  BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {
    if (elem == null) {
      return null;
    }

    var t = registry.getTestability(elem);

    if (t != null) {
      return t;
    } else if (!findInAncestors) {
      return null;
    }

    if (getDOM().isShadowRoot(elem)) {
      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);
    }

    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);
  };

  return BrowserGetTestability;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if
 * `name` is `'probe'`.
 * @param name Name under which it will be exported. Keep in mind this will be a property of the
 * global `ng` object.
 * @param value The value to export.
 */


function exportNgVar(name, value) {
  if (typeof COMPILED === 'undefined' || !COMPILED) {
    // Note: we can't export `ng` when using closure enhanced optimization as:
    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global
    // - we can't declare a closure extern as the namespace `ng` is already used within Google
    //   for typings for angularJS (via `goog.provide('ng....')`).
    var ng = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['ng'] = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵglobal"]['ng'] || {};
    ng[name] = value;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CORE_TOKENS = {
  'ApplicationRef': _angular_core__WEBPACK_IMPORTED_MODULE_2__["ApplicationRef"],
  'NgZone': _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
};
var INSPECT_GLOBAL_NAME = 'probe';
var CORE_TOKENS_GLOBAL_NAME = 'coreTokens';
/**
 * Returns a {@link DebugElement} for the given native DOM element, or
 * null if the given native element does not have an Angular view associated
 * with it.
 */

function inspectNativeElement(element) {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["getDebugNode"])(element);
}

function _createNgProbe(coreTokens) {
  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);
  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));
  return function () {
    return inspectNativeElement;
  };
}

function _ngProbeTokensToMap(tokens) {
  return tokens.reduce(function (prev, t) {
    return prev[t.name] = t.token, prev;
  }, {});
}
/**
 * Providers which support debugging Angular applications (e.g. via `ng.probe`).
 */


var ELEMENT_PROBE_PROVIDERS = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["APP_INITIALIZER"],
  useFactory: _createNgProbe,
  deps: [[_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgProbeToken"], new _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]()]],
  multi: true
}];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The injection token for the event-manager plug-in service.
 */

var EVENT_MANAGER_PLUGINS = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('EventManagerPlugins');
/**
 * An injectable service that provides event management for Angular
 * through a browser plug-in.
 */

var EventManager =
/** @class */
function () {
  /**
   * Initializes an instance of the event-manager service.
   */
  function EventManager(plugins, _zone) {
    var _this = this;

    this._zone = _zone;
    this._eventNameToPlugin = new Map();
    plugins.forEach(function (p) {
      return p.manager = _this;
    });
    this._plugins = plugins.slice().reverse();
  }
  /**
   * Registers a handler for a specific element and event.
   *
   * @param element The HTML element to receive event notifications.
   * @param eventName The name of the event to listen for.
   * @param handler A function to call when the notification occurs. Receives the
   * event object as an argument.
   * @returns  A callback function that can be used to remove the handler.
   */


  EventManager.prototype.addEventListener = function (element, eventName, handler) {
    var plugin = this._findPluginFor(eventName);

    return plugin.addEventListener(element, eventName, handler);
  };
  /**
   * Registers a global handler for an event in a target view.
   *
   * @param target A target for global event notifications. One of "window", "document", or "body".
   * @param eventName The name of the event to listen for.
   * @param handler A function to call when the notification occurs. Receives the
   * event object as an argument.
   * @returns A callback function that can be used to remove the handler.
   */


  EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {
    var plugin = this._findPluginFor(eventName);

    return plugin.addGlobalEventListener(target, eventName, handler);
  };
  /**
   * Retrieves the compilation zone in which event listeners are registered.
   */


  EventManager.prototype.getZone = function () {
    return this._zone;
  };
  /** @internal */


  EventManager.prototype._findPluginFor = function (eventName) {
    var plugin = this._eventNameToPlugin.get(eventName);

    if (plugin) {
      return plugin;
    }

    var plugins = this._plugins;

    for (var i = 0; i < plugins.length; i++) {
      var plugin_1 = plugins[i];

      if (plugin_1.supports(eventName)) {
        this._eventNameToPlugin.set(eventName, plugin_1);

        return plugin_1;
      }
    }

    throw new Error("No event manager plugin found for event " + eventName);
  };

  EventManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(EVENT_MANAGER_PLUGINS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Array, _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]])], EventManager);
  return EventManager;
}();

var EventManagerPlugin =
/** @class */
function () {
  function EventManagerPlugin(_doc) {
    this._doc = _doc;
  }

  EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {
    var target = getDOM().getGlobalEventTarget(this._doc, element);

    if (!target) {
      throw new Error("Unsupported event target " + target + " for event " + eventName);
    }

    return this.addEventListener(target, eventName, handler);
  };

  return EventManagerPlugin;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SharedStylesHost =
/** @class */
function () {
  function SharedStylesHost() {
    /** @internal */
    this._stylesSet = new Set();
  }

  SharedStylesHost.prototype.addStyles = function (styles) {
    var _this = this;

    var additions = new Set();
    styles.forEach(function (style) {
      if (!_this._stylesSet.has(style)) {
        _this._stylesSet.add(style);

        additions.add(style);
      }
    });
    this.onStylesAdded(additions);
  };

  SharedStylesHost.prototype.onStylesAdded = function (additions) {};

  SharedStylesHost.prototype.getAllStyles = function () {
    return Array.from(this._stylesSet);
  };

  SharedStylesHost = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])()], SharedStylesHost);
  return SharedStylesHost;
}();

var DomSharedStylesHost =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DomSharedStylesHost, _super);

  function DomSharedStylesHost(_doc) {
    var _this = _super.call(this) || this;

    _this._doc = _doc;
    _this._hostNodes = new Set();
    _this._styleNodes = new Set();

    _this._hostNodes.add(_doc.head);

    return _this;
  }

  DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {
    var _this = this;

    styles.forEach(function (style) {
      var styleEl = _this._doc.createElement('style');

      styleEl.textContent = style;

      _this._styleNodes.add(host.appendChild(styleEl));
    });
  };

  DomSharedStylesHost.prototype.addHost = function (hostNode) {
    this._addStylesToHost(this._stylesSet, hostNode);

    this._hostNodes.add(hostNode);
  };

  DomSharedStylesHost.prototype.removeHost = function (hostNode) {
    this._hostNodes.delete(hostNode);
  };

  DomSharedStylesHost.prototype.onStylesAdded = function (additions) {
    var _this = this;

    this._hostNodes.forEach(function (hostNode) {
      return _this._addStylesToHost(additions, hostNode);
    });
  };

  DomSharedStylesHost.prototype.ngOnDestroy = function () {
    this._styleNodes.forEach(function (styleNode) {
      return getDOM().remove(styleNode);
    });
  };

  DomSharedStylesHost = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], DomSharedStylesHost);
  return DomSharedStylesHost;
}(SharedStylesHost);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NAMESPACE_URIS = {
  'svg': 'http://www.w3.org/2000/svg',
  'xhtml': 'http://www.w3.org/1999/xhtml',
  'xlink': 'http://www.w3.org/1999/xlink',
  'xml': 'http://www.w3.org/XML/1998/namespace',
  'xmlns': 'http://www.w3.org/2000/xmlns/'
};
var COMPONENT_REGEX = /%COMP%/g;
var COMPONENT_VARIABLE = '%COMP%';
var HOST_ATTR = "_nghost-" + COMPONENT_VARIABLE;
var CONTENT_ATTR = "_ngcontent-" + COMPONENT_VARIABLE;

function shimContentAttribute(componentShortId) {
  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);
}

function shimHostAttribute(componentShortId) {
  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);
}

function flattenStyles(compId, styles, target) {
  for (var i = 0; i < styles.length; i++) {
    var style = styles[i];

    if (Array.isArray(style)) {
      flattenStyles(compId, style, target);
    } else {
      style = style.replace(COMPONENT_REGEX, compId);
      target.push(style);
    }
  }

  return target;
}

function decoratePreventDefault(eventHandler) {
  return function (event) {
    var allowDefaultBehavior = eventHandler(event);

    if (allowDefaultBehavior === false) {
      // TODO(tbosch): move preventDefault into event plugins...
      event.preventDefault();
      event.returnValue = false;
    }
  };
}

var DomRendererFactory2 =
/** @class */
function () {
  function DomRendererFactory2(eventManager, sharedStylesHost) {
    this.eventManager = eventManager;
    this.sharedStylesHost = sharedStylesHost;
    this.rendererByCompId = new Map();
    this.defaultRenderer = new DefaultDomRenderer2(eventManager);
  }

  DomRendererFactory2.prototype.createRenderer = function (element, type) {
    if (!element || !type) {
      return this.defaultRenderer;
    }

    switch (type.encapsulation) {
      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewEncapsulation"].Emulated:
        {
          var renderer = this.rendererByCompId.get(type.id);

          if (!renderer) {
            renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);
            this.rendererByCompId.set(type.id, renderer);
          }

          renderer.applyToHost(element);
          return renderer;
        }

      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewEncapsulation"].Native:
      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewEncapsulation"].ShadowDom:
        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);

      default:
        {
          if (!this.rendererByCompId.has(type.id)) {
            var styles = flattenStyles(type.id, type.styles, []);
            this.sharedStylesHost.addStyles(styles);
            this.rendererByCompId.set(type.id, this.defaultRenderer);
          }

          return this.defaultRenderer;
        }
    }
  };

  DomRendererFactory2.prototype.begin = function () {};

  DomRendererFactory2.prototype.end = function () {};

  DomRendererFactory2 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [EventManager, DomSharedStylesHost])], DomRendererFactory2);
  return DomRendererFactory2;
}();

var DefaultDomRenderer2 =
/** @class */
function () {
  function DefaultDomRenderer2(eventManager) {
    this.eventManager = eventManager;
    this.data = Object.create(null);
  }

  DefaultDomRenderer2.prototype.destroy = function () {};

  DefaultDomRenderer2.prototype.createElement = function (name, namespace) {
    if (namespace) {
      return document.createElementNS(NAMESPACE_URIS[namespace], name);
    }

    return document.createElement(name);
  };

  DefaultDomRenderer2.prototype.createComment = function (value) {
    return document.createComment(value);
  };

  DefaultDomRenderer2.prototype.createText = function (value) {
    return document.createTextNode(value);
  };

  DefaultDomRenderer2.prototype.appendChild = function (parent, newChild) {
    parent.appendChild(newChild);
  };

  DefaultDomRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {
    if (parent) {
      parent.insertBefore(newChild, refChild);
    }
  };

  DefaultDomRenderer2.prototype.removeChild = function (parent, oldChild) {
    if (parent) {
      parent.removeChild(oldChild);
    }
  };

  DefaultDomRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {
    var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;

    if (!el) {
      throw new Error("The selector \"" + selectorOrNode + "\" did not match any elements");
    }

    if (!preserveContent) {
      el.textContent = '';
    }

    return el;
  };

  DefaultDomRenderer2.prototype.parentNode = function (node) {
    return node.parentNode;
  };

  DefaultDomRenderer2.prototype.nextSibling = function (node) {
    return node.nextSibling;
  };

  DefaultDomRenderer2.prototype.setAttribute = function (el, name, value, namespace) {
    if (namespace) {
      name = namespace + ":" + name;
      var namespaceUri = NAMESPACE_URIS[namespace];

      if (namespaceUri) {
        el.setAttributeNS(namespaceUri, name, value);
      } else {
        el.setAttribute(name, value);
      }
    } else {
      el.setAttribute(name, value);
    }
  };

  DefaultDomRenderer2.prototype.removeAttribute = function (el, name, namespace) {
    if (namespace) {
      var namespaceUri = NAMESPACE_URIS[namespace];

      if (namespaceUri) {
        el.removeAttributeNS(namespaceUri, name);
      } else {
        el.removeAttribute(namespace + ":" + name);
      }
    } else {
      el.removeAttribute(name);
    }
  };

  DefaultDomRenderer2.prototype.addClass = function (el, name) {
    el.classList.add(name);
  };

  DefaultDomRenderer2.prototype.removeClass = function (el, name) {
    el.classList.remove(name);
  };

  DefaultDomRenderer2.prototype.setStyle = function (el, style, value, flags) {
    if (flags & _angular_core__WEBPACK_IMPORTED_MODULE_2__["RendererStyleFlags2"].DashCase) {
      el.style.setProperty(style, value, !!(flags & _angular_core__WEBPACK_IMPORTED_MODULE_2__["RendererStyleFlags2"].Important) ? 'important' : '');
    } else {
      el.style[style] = value;
    }
  };

  DefaultDomRenderer2.prototype.removeStyle = function (el, style, flags) {
    if (flags & _angular_core__WEBPACK_IMPORTED_MODULE_2__["RendererStyleFlags2"].DashCase) {
      el.style.removeProperty(style);
    } else {
      // IE requires '' instead of null
      // see https://github.com/angular/angular/issues/7916
      el.style[style] = '';
    }
  };

  DefaultDomRenderer2.prototype.setProperty = function (el, name, value) {
    checkNoSyntheticProp(name, 'property');
    el[name] = value;
  };

  DefaultDomRenderer2.prototype.setValue = function (node, value) {
    node.nodeValue = value;
  };

  DefaultDomRenderer2.prototype.listen = function (target, event, callback) {
    checkNoSyntheticProp(event, 'listener');

    if (typeof target === 'string') {
      return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));
    }

    return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));
  };

  return DefaultDomRenderer2;
}();

var AT_CHARCODE = '@'.charCodeAt(0);

function checkNoSyntheticProp(name, nameKind) {
  if (name.charCodeAt(0) === AT_CHARCODE) {
    throw new Error("Found the synthetic " + nameKind + " " + name + ". Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.");
  }
}

var EmulatedEncapsulationDomRenderer2 =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(EmulatedEncapsulationDomRenderer2, _super);

  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component) {
    var _this = _super.call(this, eventManager) || this;

    _this.component = component;
    var styles = flattenStyles(component.id, component.styles, []);
    sharedStylesHost.addStyles(styles);
    _this.contentAttr = shimContentAttribute(component.id);
    _this.hostAttr = shimHostAttribute(component.id);
    return _this;
  }

  EmulatedEncapsulationDomRenderer2.prototype.applyToHost = function (element) {
    _super.prototype.setAttribute.call(this, element, this.hostAttr, '');
  };

  EmulatedEncapsulationDomRenderer2.prototype.createElement = function (parent, name) {
    var el = _super.prototype.createElement.call(this, parent, name);

    _super.prototype.setAttribute.call(this, el, this.contentAttr, '');

    return el;
  };

  return EmulatedEncapsulationDomRenderer2;
}(DefaultDomRenderer2);

var ShadowDomRenderer =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ShadowDomRenderer, _super);

  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {
    var _this = _super.call(this, eventManager) || this;

    _this.sharedStylesHost = sharedStylesHost;
    _this.hostEl = hostEl;
    _this.component = component;

    if (component.encapsulation === _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewEncapsulation"].ShadowDom) {
      _this.shadowRoot = hostEl.attachShadow({
        mode: 'open'
      });
    } else {
      _this.shadowRoot = hostEl.createShadowRoot();
    }

    _this.sharedStylesHost.addHost(_this.shadowRoot);

    var styles = flattenStyles(component.id, component.styles, []);

    for (var i = 0; i < styles.length; i++) {
      var styleEl = document.createElement('style');
      styleEl.textContent = styles[i];

      _this.shadowRoot.appendChild(styleEl);
    }

    return _this;
  }

  ShadowDomRenderer.prototype.nodeOrShadowRoot = function (node) {
    return node === this.hostEl ? this.shadowRoot : node;
  };

  ShadowDomRenderer.prototype.destroy = function () {
    this.sharedStylesHost.removeHost(this.shadowRoot);
  };

  ShadowDomRenderer.prototype.appendChild = function (parent, newChild) {
    return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);
  };

  ShadowDomRenderer.prototype.insertBefore = function (parent, newChild, refChild) {
    return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);
  };

  ShadowDomRenderer.prototype.removeChild = function (parent, oldChild) {
    return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);
  };

  ShadowDomRenderer.prototype.parentNode = function (node) {
    return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));
  };

  return ShadowDomRenderer;
}(DefaultDomRenderer2);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0 = function ɵ0(v) {
  return '__zone_symbol__' + v;
};
/**
 * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'
 * since Angular can do much more
 * efficient bookkeeping than Zone can, because we have additional information. This speeds up
 * addEventListener by 3x.
 */


var __symbol__ = typeof Zone !== 'undefined' && Zone['__symbol__'] || ɵ0;

var ADD_EVENT_LISTENER = __symbol__('addEventListener');

var REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');

var symbolNames = {};
var FALSE = 'FALSE';
var ANGULAR = 'ANGULAR';
var NATIVE_ADD_LISTENER = 'addEventListener';
var NATIVE_REMOVE_LISTENER = 'removeEventListener'; // use the same symbol string which is used in zone.js

var stopSymbol = '__zone_symbol__propagationStopped';
var stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';

var blackListedEvents = typeof Zone !== 'undefined' && Zone[__symbol__('BLACK_LISTED_EVENTS')];

var blackListedMap;

if (blackListedEvents) {
  blackListedMap = {};
  blackListedEvents.forEach(function (eventName) {
    blackListedMap[eventName] = eventName;
  });
}

var isBlackListedEvent = function isBlackListedEvent(eventName) {
  if (!blackListedMap) {
    return false;
  }

  return blackListedMap.hasOwnProperty(eventName);
}; // a global listener to handle all dom event,
// so we do not need to create a closure every time


var globalListener = function globalListener(event) {
  var symbolName = symbolNames[event.type];

  if (!symbolName) {
    return;
  }

  var taskDatas = this[symbolName];

  if (!taskDatas) {
    return;
  }

  var args = [event];

  if (taskDatas.length === 1) {
    // if taskDatas only have one element, just invoke it
    var taskData = taskDatas[0];

    if (taskData.zone !== Zone.current) {
      // only use Zone.run when Zone.current not equals to stored zone
      return taskData.zone.run(taskData.handler, this, args);
    } else {
      return taskData.handler.apply(this, args);
    }
  } else {
    // copy tasks as a snapshot to avoid event handlers remove
    // itself or others
    var copiedTasks = taskDatas.slice();

    for (var i = 0; i < copiedTasks.length; i++) {
      // if other listener call event.stopImmediatePropagation
      // just break
      if (event[stopSymbol] === true) {
        break;
      }

      var taskData = copiedTasks[i];

      if (taskData.zone !== Zone.current) {
        // only use Zone.run when Zone.current not equals to stored zone
        taskData.zone.run(taskData.handler, this, args);
      } else {
        taskData.handler.apply(this, args);
      }
    }
  }
};

var DomEventsPlugin =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DomEventsPlugin, _super);

  function DomEventsPlugin(doc, ngZone, platformId) {
    var _this = _super.call(this, doc) || this;

    _this.ngZone = ngZone;

    if (!platformId || !Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["isPlatformServer"])(platformId)) {
      _this.patchEvent();
    }

    return _this;
  }

  DomEventsPlugin.prototype.patchEvent = function () {
    if (typeof Event === 'undefined' || !Event || !Event.prototype) {
      return;
    }

    if (Event.prototype[stopMethodSymbol]) {
      // already patched by zone.js
      return;
    }

    var delegate = Event.prototype[stopMethodSymbol] = Event.prototype.stopImmediatePropagation;

    Event.prototype.stopImmediatePropagation = function () {
      if (this) {
        this[stopSymbol] = true;
      } // should call native delegate in case
      // in some environment part of the application
      // will not use the patched Event


      delegate && delegate.apply(this, arguments);
    };
  }; // This plugin should come last in the list of plugins, because it accepts all
  // events.


  DomEventsPlugin.prototype.supports = function (eventName) {
    return true;
  };

  DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {
    var _this = this;

    var zoneJsLoaded = element[ADD_EVENT_LISTENER];
    var callback = handler; // if zonejs is loaded and current zone is not ngZone
    // we keep Zone.current on target for later restoration.

    if (zoneJsLoaded && (!_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"].isInAngularZone() || isBlackListedEvent(eventName))) {
      var symbolName = symbolNames[eventName];

      if (!symbolName) {
        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);
      }

      var taskDatas = element[symbolName];
      var globalListenerRegistered = taskDatas && taskDatas.length > 0;

      if (!taskDatas) {
        taskDatas = element[symbolName] = [];
      }

      var zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;

      if (taskDatas.length === 0) {
        taskDatas.push({
          zone: zone,
          handler: callback
        });
      } else {
        var callbackRegistered = false;

        for (var i = 0; i < taskDatas.length; i++) {
          if (taskDatas[i].handler === callback) {
            callbackRegistered = true;
            break;
          }
        }

        if (!callbackRegistered) {
          taskDatas.push({
            zone: zone,
            handler: callback
          });
        }
      }

      if (!globalListenerRegistered) {
        element[ADD_EVENT_LISTENER](eventName, globalListener, false);
      }
    } else {
      element[NATIVE_ADD_LISTENER](eventName, callback, false);
    }

    return function () {
      return _this.removeEventListener(element, eventName, callback);
    };
  };

  DomEventsPlugin.prototype.removeEventListener = function (target, eventName, callback) {
    var underlyingRemove = target[REMOVE_EVENT_LISTENER]; // zone.js not loaded, use native removeEventListener

    if (!underlyingRemove) {
      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);
    }

    var symbolName = symbolNames[eventName];
    var taskDatas = symbolName && target[symbolName];

    if (!taskDatas) {
      // addEventListener not using patched version
      // just call native removeEventListener
      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);
    } // fix issue 20532, should be able to remove
    // listener which was added inside of ngZone


    var found = false;

    for (var i = 0; i < taskDatas.length; i++) {
      // remove listener from taskDatas if the callback equals
      if (taskDatas[i].handler === callback) {
        found = true;
        taskDatas.splice(i, 1);
        break;
      }
    }

    if (found) {
      if (taskDatas.length === 0) {
        // all listeners are removed, we can remove the globalListener from target
        underlyingRemove.apply(target, [eventName, globalListener, false]);
      }
    } else {
      // not found in taskDatas, the callback may be added inside of ngZone
      // use native remove listener to remove the callback
      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);
    }
  };

  DomEventsPlugin = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object, _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"], Object])], DomEventsPlugin);
  return DomEventsPlugin;
}(EventManagerPlugin);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Supported HammerJS recognizer event names.
 */


var EVENT_NAMES = {
  // pan
  'pan': true,
  'panstart': true,
  'panmove': true,
  'panend': true,
  'pancancel': true,
  'panleft': true,
  'panright': true,
  'panup': true,
  'pandown': true,
  // pinch
  'pinch': true,
  'pinchstart': true,
  'pinchmove': true,
  'pinchend': true,
  'pinchcancel': true,
  'pinchin': true,
  'pinchout': true,
  // press
  'press': true,
  'pressup': true,
  // rotate
  'rotate': true,
  'rotatestart': true,
  'rotatemove': true,
  'rotateend': true,
  'rotatecancel': true,
  // swipe
  'swipe': true,
  'swipeleft': true,
  'swiperight': true,
  'swipeup': true,
  'swipedown': true,
  // tap
  'tap': true
};
/**
 * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.
 * @see `HammerGestureConfig`
 *
 * @experimental
 */

var HAMMER_GESTURE_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('HammerGestureConfig');
/** Injection token used to provide a {@link HammerLoader} to Angular. */

var HAMMER_LOADER = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('HammerLoader');
/**
 * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)
 * for gesture recognition. Configures specific event recognition.
 * @experimental
 */

var HammerGestureConfig =
/** @class */
function () {
  function HammerGestureConfig() {
    /**
     * A set of supported event names for gestures to be used in Angular.
     * Angular supports all built-in recognizers, as listed in
     * [HammerJS documentation](http://hammerjs.github.io/).
     */
    this.events = [];
    /**
    * Maps gesture event names to a set of configuration options
    * that specify overrides to the default values for specific properties.
    *
    * The key is a supported event name to be configured,
    * and the options object contains a set of properties, with override values
    * to be applied to the named recognizer event.
    * For example, to disable recognition of the rotate event, specify
    *  `{"rotate": {"enable": false}}`.
    *
    * Properties that are not present take the HammerJS default values.
    * For information about which properties are supported for which events,
    * and their allowed and default values, see
    * [HammerJS documentation](http://hammerjs.github.io/).
    *
    */

    this.overrides = {};
  }
  /**
   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)
   * and attaches it to a given HTML element.
   * @param element The element that will recognize gestures.
   * @returns A HammerJS event-manager object.
   */


  HammerGestureConfig.prototype.buildHammer = function (element) {
    var mc = new Hammer(element, this.options);
    mc.get('pinch').set({
      enable: true
    });
    mc.get('rotate').set({
      enable: true
    });

    for (var eventName in this.overrides) {
      mc.get(eventName).set(this.overrides[eventName]);
    }

    return mc;
  };

  HammerGestureConfig = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])()], HammerGestureConfig);
  return HammerGestureConfig;
}();

var HammerGesturesPlugin =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(HammerGesturesPlugin, _super);

  function HammerGesturesPlugin(doc, _config, console, loader) {
    var _this = _super.call(this, doc) || this;

    _this._config = _config;
    _this.console = console;
    _this.loader = loader;
    return _this;
  }

  HammerGesturesPlugin.prototype.supports = function (eventName) {
    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {
      return false;
    }

    if (!window.Hammer && !this.loader) {
      this.console.warn("The \"" + eventName + "\" event cannot be bound because Hammer.JS is not " + "loaded and no custom loader has been specified.");
      return false;
    }

    return true;
  };

  HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {
    var _this = this;

    var zone = this.manager.getZone();
    eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener
    // until Hammer is loaded.

    if (!window.Hammer && this.loader) {
      // This `addEventListener` method returns a function to remove the added listener.
      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather
      // than remove anything.
      var cancelRegistration_1 = false;

      var deregister_1 = function deregister_1() {
        cancelRegistration_1 = true;
      };

      this.loader().then(function () {
        // If Hammer isn't actually loaded when the custom loader resolves, give up.
        if (!window.Hammer) {
          _this.console.warn("The custom HAMMER_LOADER completed, but Hammer.JS is not present.");

          deregister_1 = function deregister_1() {};

          return;
        }

        if (!cancelRegistration_1) {
          // Now that Hammer is loaded and the listener is being loaded for real,
          // the deregistration function changes from canceling registration to removal.
          deregister_1 = _this.addEventListener(element, eventName, handler);
        }
      }).catch(function () {
        _this.console.warn("The \"" + eventName + "\" event cannot be bound because the custom " + "Hammer.JS loader failed.");

        deregister_1 = function deregister_1() {};
      }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we
      // can change the behavior of `deregister` once the listener is added. Using a closure in
      // this way allows us to avoid any additional data structures to track listener removal.

      return function () {
        deregister_1();
      };
    }

    return zone.runOutsideAngular(function () {
      // Creating the manager bind events, must be done outside of angular
      var mc = _this._config.buildHammer(element);

      var callback = function callback(eventObj) {
        zone.runGuarded(function () {
          handler(eventObj);
        });
      };

      mc.on(eventName, callback);
      return function () {
        mc.off(eventName, callback); // destroy mc to prevent memory leak

        if (typeof mc.destroy === 'function') {
          mc.destroy();
        }
      };
    });
  };

  HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) {
    return this._config.events.indexOf(eventName) > -1;
  };

  HammerGesturesPlugin = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(HAMMER_GESTURE_CONFIG)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(HAMMER_LOADER)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object, HammerGestureConfig, _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵConsole"], Object])], HammerGesturesPlugin);
  return HammerGesturesPlugin;
}(EventManagerPlugin);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Defines supported modifiers for key events.
 */


var MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];

var ɵ0$1 = function ɵ0$1(event) {
  return event.altKey;
},
    ɵ1$1 = function ɵ1$1(event) {
  return event.ctrlKey;
},
    ɵ2$1 = function ɵ2$1(event) {
  return event.metaKey;
},
    ɵ3 = function ɵ3(event) {
  return event.shiftKey;
};
/**
 * Retrieves modifiers from key-event objects.
 */


var MODIFIER_KEY_GETTERS = {
  'alt': ɵ0$1,
  'control': ɵ1$1,
  'meta': ɵ2$1,
  'shift': ɵ3
};
/**
 * @experimental
 * A browser plug-in that provides support for handling of key events in Angular.
 */

var KeyEventsPlugin =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(KeyEventsPlugin, _super);
  /**
   * Initializes an instance of the browser plug-in.
   * @param doc The document in which key events will be detected.
   */


  function KeyEventsPlugin(doc) {
    return _super.call(this, doc) || this;
  }

  KeyEventsPlugin_1 = KeyEventsPlugin;
  /**
    * Reports whether a named key event is supported.
    * @param eventName The event name to query.
    * @return True if the named key event is supported.
   */

  KeyEventsPlugin.prototype.supports = function (eventName) {
    return KeyEventsPlugin_1.parseEventName(eventName) != null;
  };
  /**
   * Registers a handler for a specific element and key event.
   * @param element The HTML element to receive event notifications.
   * @param eventName The name of the key event to listen for.
   * @param handler A function to call when the notification occurs. Receives the
   * event object as an argument.
   * @returns The key event that was registered.
  */


  KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {
    var parsedEvent = KeyEventsPlugin_1.parseEventName(eventName);
    var outsideHandler = KeyEventsPlugin_1.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());
    return this.manager.getZone().runOutsideAngular(function () {
      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);
    });
  };

  KeyEventsPlugin.parseEventName = function (eventName) {
    var parts = eventName.toLowerCase().split('.');
    var domEventName = parts.shift();

    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {
      return null;
    }

    var key = KeyEventsPlugin_1._normalizeKey(parts.pop());

    var fullKey = '';
    MODIFIER_KEYS.forEach(function (modifierName) {
      var index = parts.indexOf(modifierName);

      if (index > -1) {
        parts.splice(index, 1);
        fullKey += modifierName + '.';
      }
    });
    fullKey += key;

    if (parts.length != 0 || key.length === 0) {
      // returning null instead of throwing to let another plugin process the event
      return null;
    }

    var result = {};
    result['domEventName'] = domEventName;
    result['fullKey'] = fullKey;
    return result;
  };

  KeyEventsPlugin.getEventFullKey = function (event) {
    var fullKey = '';
    var key = getDOM().getEventKey(event);
    key = key.toLowerCase();

    if (key === ' ') {
      key = 'space'; // for readability
    } else if (key === '.') {
      key = 'dot'; // because '.' is used as a separator in event names
    }

    MODIFIER_KEYS.forEach(function (modifierName) {
      if (modifierName != key) {
        var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];

        if (modifierGetter(event)) {
          fullKey += modifierName + '.';
        }
      }
    });
    fullKey += key;
    return fullKey;
  };
  /**
   * Configures a handler callback for a key event.
   * @param fullKey The event name that combines all simultaneous keystrokes.
   * @param handler The function that responds to the key event.
   * @param zone The zone in which the event occurred.
   * @returns A callback function.
   */


  KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {
    return function (event
    /** TODO #9100 */
    ) {
      if (KeyEventsPlugin_1.getEventFullKey(event) === fullKey) {
        zone.runGuarded(function () {
          return handler(event);
        });
      }
    };
  };
  /** @internal */


  KeyEventsPlugin._normalizeKey = function (keyName) {
    // TODO: switch to a Map if the mapping grows too much
    switch (keyName) {
      case 'esc':
        return 'escape';

      default:
        return keyName;
    }
  };

  var KeyEventsPlugin_1;
  KeyEventsPlugin = KeyEventsPlugin_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], KeyEventsPlugin);
  return KeyEventsPlugin;
}(EventManagerPlugin);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing
 * values to be safe to use in the different DOM contexts.
 *
 * For example, when binding a URL in an `<a [href]="someValue">` hyperlink, `someValue` will be
 * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on
 * the website.
 *
 * In specific situations, it might be necessary to disable sanitization, for example if the
 * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.
 * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`
 * methods, and then binding to that value from the template.
 *
 * These situations should be very rare, and extraordinary care must be taken to avoid creating a
 * Cross Site Scripting (XSS) security bug!
 *
 * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as
 * close as possible to the source of the value, to make it easy to verify no security bug is
 * created by its use.
 *
 * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that
 * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous
 * code. The sanitizer leaves safe values intact.
 *
 * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in
 * sanitization for the value passed in. Carefully check and audit all values and code paths going
 * into this call. Make sure any user data is appropriately escaped for this security context.
 * For more detail, see the [Security Guide](http://g.co/ng/security).
 *
 *
 */


var DomSanitizer =
/** @class */
function () {
  function DomSanitizer() {}

  return DomSanitizer;
}();

var DomSanitizerImpl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DomSanitizerImpl, _super);

  function DomSanitizerImpl(_doc) {
    var _this = _super.call(this) || this;

    _this._doc = _doc;
    return _this;
  }

  DomSanitizerImpl.prototype.sanitize = function (ctx, value) {
    if (value == null) return null;

    switch (ctx) {
      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["SecurityContext"].NONE:
        return value;

      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["SecurityContext"].HTML:
        if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;
        this.checkNotSafeValue(value, 'HTML');
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵ_sanitizeHtml"])(this._doc, String(value));

      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["SecurityContext"].STYLE:
        if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;
        this.checkNotSafeValue(value, 'Style');
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵ_sanitizeStyle"])(value);

      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["SecurityContext"].SCRIPT:
        if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;
        this.checkNotSafeValue(value, 'Script');
        throw new Error('unsafe value used in a script context');

      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["SecurityContext"].URL:
        if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {
          // Allow resource URLs in URL contexts, they are strictly more trusted.
          return value.changingThisBreaksApplicationSecurity;
        }

        this.checkNotSafeValue(value, 'URL');
        return Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵ_sanitizeUrl"])(String(value));

      case _angular_core__WEBPACK_IMPORTED_MODULE_2__["SecurityContext"].RESOURCE_URL:
        if (value instanceof SafeResourceUrlImpl) {
          return value.changingThisBreaksApplicationSecurity;
        }

        this.checkNotSafeValue(value, 'ResourceURL');
        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');

      default:
        throw new Error("Unexpected SecurityContext " + ctx + " (see http://g.co/ng/security#xss)");
    }
  };

  DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {
    if (value instanceof SafeValueImpl) {
      throw new Error("Required a safe " + expectedType + ", got a " + value.getTypeName() + " " + "(see http://g.co/ng/security#xss)");
    }
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) {
    return new SafeHtmlImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) {
    return new SafeStyleImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) {
    return new SafeScriptImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) {
    return new SafeUrlImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {
    return new SafeResourceUrlImpl(value);
  };

  DomSanitizerImpl = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], DomSanitizerImpl);
  return DomSanitizerImpl;
}(DomSanitizer);

var SafeValueImpl =
/** @class */
function () {
  function SafeValueImpl(changingThisBreaksApplicationSecurity) {
    this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity; // empty
  }

  SafeValueImpl.prototype.toString = function () {
    return "SafeValue must use [property]=binding: " + this.changingThisBreaksApplicationSecurity + " (see http://g.co/ng/security#xss)";
  };

  return SafeValueImpl;
}();

var SafeHtmlImpl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SafeHtmlImpl, _super);

  function SafeHtmlImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeHtmlImpl.prototype.getTypeName = function () {
    return 'HTML';
  };

  return SafeHtmlImpl;
}(SafeValueImpl);

var SafeStyleImpl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SafeStyleImpl, _super);

  function SafeStyleImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeStyleImpl.prototype.getTypeName = function () {
    return 'Style';
  };

  return SafeStyleImpl;
}(SafeValueImpl);

var SafeScriptImpl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SafeScriptImpl, _super);

  function SafeScriptImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeScriptImpl.prototype.getTypeName = function () {
    return 'Script';
  };

  return SafeScriptImpl;
}(SafeValueImpl);

var SafeUrlImpl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SafeUrlImpl, _super);

  function SafeUrlImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeUrlImpl.prototype.getTypeName = function () {
    return 'URL';
  };

  return SafeUrlImpl;
}(SafeValueImpl);

var SafeResourceUrlImpl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SafeResourceUrlImpl, _super);

  function SafeResourceUrlImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeResourceUrlImpl.prototype.getTypeName = function () {
    return 'ResourceURL';
  };

  return SafeResourceUrlImpl;
}(SafeValueImpl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"],
  useValue: _angular_common__WEBPACK_IMPORTED_MODULE_1__["ɵPLATFORM_BROWSER_ID"]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_INITIALIZER"],
  useValue: initDomAdapter,
  multi: true
}, {
  provide: _angular_common__WEBPACK_IMPORTED_MODULE_1__["PlatformLocation"],
  useClass: BrowserPlatformLocation,
  deps: [DOCUMENT$1]
}, {
  provide: DOCUMENT$1,
  useFactory: _document,
  deps: []
}];
/**
 * @security Replacing built-in sanitization providers exposes the application to XSS risks.
 * Attacker-controlled data introduced by an unsanitized provider could expose your
 * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).
 * @experimental
 */

var BROWSER_SANITIZATION_PROVIDERS = [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Sanitizer"],
  useExisting: DomSanitizer
}, {
  provide: DomSanitizer,
  useClass: DomSanitizerImpl,
  deps: [DOCUMENT$1]
}];
var platformBrowser = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["createPlatformFactory"])(_angular_core__WEBPACK_IMPORTED_MODULE_2__["platformCore"], 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);

function initDomAdapter() {
  BrowserDomAdapter.makeCurrent();
  BrowserGetTestability.init();
}

function errorHandler() {
  return new _angular_core__WEBPACK_IMPORTED_MODULE_2__["ErrorHandler"]();
}

function _document() {
  return document;
}

var BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵAPP_ROOT"],
  useValue: true
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ErrorHandler"],
  useFactory: errorHandler,
  deps: []
}, {
  provide: EVENT_MANAGER_PLUGINS,
  useClass: DomEventsPlugin,
  multi: true,
  deps: [DOCUMENT$1, _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"]]
}, {
  provide: EVENT_MANAGER_PLUGINS,
  useClass: KeyEventsPlugin,
  multi: true,
  deps: [DOCUMENT$1]
}, {
  provide: EVENT_MANAGER_PLUGINS,
  useClass: HammerGesturesPlugin,
  multi: true,
  deps: [DOCUMENT$1, HAMMER_GESTURE_CONFIG, _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵConsole"], [new _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"](), HAMMER_LOADER]]
}, {
  provide: HAMMER_GESTURE_CONFIG,
  useClass: HammerGestureConfig,
  deps: []
}, {
  provide: DomRendererFactory2,
  useClass: DomRendererFactory2,
  deps: [EventManager, DomSharedStylesHost]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["RendererFactory2"],
  useExisting: DomRendererFactory2
}, {
  provide: SharedStylesHost,
  useExisting: DomSharedStylesHost
}, {
  provide: DomSharedStylesHost,
  useClass: DomSharedStylesHost,
  deps: [DOCUMENT$1]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Testability"],
  useClass: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Testability"],
  deps: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]]
}, {
  provide: EventManager,
  useClass: EventManager,
  deps: [EVENT_MANAGER_PLUGINS, _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]]
}, ELEMENT_PROBE_PROVIDERS];
/**
 * Exports required infrastructure for all Angular apps.
 * Included by defaults in all Angular apps created with the CLI
 * `new` command.
 * Re-exports `CommonModule` and `ApplicationModule`, making their
 * exports and providers available to all apps.
 *
 *
 */

var BrowserModule =
/** @class */
function () {
  function BrowserModule(parentModule) {
    if (parentModule) {
      throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.");
    }
  }

  BrowserModule_1 = BrowserModule;
  /**
   * Configures a browser-based app to transition from a server-rendered app, if
   * one is present on the page.
   *
   * @param params An object containing an identifier for the app to transition.
   * The ID must match between the client and server versions of the app.
   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.
   *
   * @experimental
   */

  BrowserModule.withServerTransition = function (params) {
    return {
      ngModule: BrowserModule_1,
      providers: [{
        provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["APP_ID"],
        useValue: params.appId
      }, {
        provide: TRANSITION_ID,
        useExisting: _angular_core__WEBPACK_IMPORTED_MODULE_2__["APP_ID"]
      }, SERVER_TRANSITION_PROVIDERS]
    };
  };

  var BrowserModule_1;
  BrowserModule = BrowserModule_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
    providers: BROWSER_MODULE_PROVIDERS,
    exports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["ApplicationModule"]]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["SkipSelf"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(BrowserModule_1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], BrowserModule);
  return BrowserModule;
}();
/**
 * Factory to create Meta service.
 */


function createMeta() {
  return new Meta(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"])(DOCUMENT$1));
}
/**
 * A service that can be used to get and add meta tags.
 *
 * @experimental
 */


var Meta =
/** @class */
function () {
  function Meta(_doc) {
    this._doc = _doc;
    this._dom = getDOM();
  }

  Meta.prototype.addTag = function (tag, forceCreation) {
    if (forceCreation === void 0) {
      forceCreation = false;
    }

    if (!tag) return null;
    return this._getOrCreateElement(tag, forceCreation);
  };

  Meta.prototype.addTags = function (tags, forceCreation) {
    var _this = this;

    if (forceCreation === void 0) {
      forceCreation = false;
    }

    if (!tags) return [];
    return tags.reduce(function (result, tag) {
      if (tag) {
        result.push(_this._getOrCreateElement(tag, forceCreation));
      }

      return result;
    }, []);
  };

  Meta.prototype.getTag = function (attrSelector) {
    if (!attrSelector) return null;
    return this._dom.querySelector(this._doc, "meta[" + attrSelector + "]") || null;
  };

  Meta.prototype.getTags = function (attrSelector) {
    if (!attrSelector) return [];

    var list
    /*NodeList*/
    = this._dom.querySelectorAll(this._doc, "meta[" + attrSelector + "]");

    return list ? [].slice.call(list) : [];
  };

  Meta.prototype.updateTag = function (tag, selector) {
    if (!tag) return null;
    selector = selector || this._parseSelector(tag);
    var meta = this.getTag(selector);

    if (meta) {
      return this._setMetaElementAttributes(tag, meta);
    }

    return this._getOrCreateElement(tag, true);
  };

  Meta.prototype.removeTag = function (attrSelector) {
    this.removeTagElement(this.getTag(attrSelector));
  };

  Meta.prototype.removeTagElement = function (meta) {
    if (meta) {
      this._dom.remove(meta);
    }
  };

  Meta.prototype._getOrCreateElement = function (meta, forceCreation) {
    if (forceCreation === void 0) {
      forceCreation = false;
    }

    if (!forceCreation) {
      var selector = this._parseSelector(meta);

      var elem = this.getTag(selector); // It's allowed to have multiple elements with the same name so it's not enough to
      // just check that element with the same name already present on the page. We also need to
      // check if element has tag attributes

      if (elem && this._containsAttributes(meta, elem)) return elem;
    }

    var element = this._dom.createElement('meta');

    this._setMetaElementAttributes(meta, element);

    var head = this._dom.getElementsByTagName(this._doc, 'head')[0];

    this._dom.appendChild(head, element);

    return element;
  };

  Meta.prototype._setMetaElementAttributes = function (tag, el) {
    var _this = this;

    Object.keys(tag).forEach(function (prop) {
      return _this._dom.setAttribute(el, prop, tag[prop]);
    });
    return el;
  };

  Meta.prototype._parseSelector = function (tag) {
    var attr = tag.name ? 'name' : 'property';
    return attr + "=\"" + tag[attr] + "\"";
  };

  Meta.prototype._containsAttributes = function (tag, elem) {
    var _this = this;

    return Object.keys(tag).every(function (key) {
      return _this._dom.getAttribute(elem, key) === tag[key];
    });
  };

  Meta.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"])({
    factory: createMeta,
    token: Meta,
    providedIn: "root"
  });
  Meta = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
    providedIn: 'root',
    useFactory: createMeta,
    deps: []
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], Meta);
  return Meta;
}();
/**
 * Factory to create Title service.
 */


function createTitle() {
  return new Title(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"])(DOCUMENT$1));
}
/**
 * A service that can be used to get and set the title of a current HTML document.
 *
 * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)
 * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements
 * (representing the `<title>` tag). Instead, this service can be used to set and get the current
 * title value.
 *
 * @experimental
 */


var Title =
/** @class */
function () {
  function Title(_doc) {
    this._doc = _doc;
  }
  /**
   * Get the title of the current HTML document.
   */


  Title.prototype.getTitle = function () {
    return getDOM().getTitle(this._doc);
  };
  /**
   * Set the title of the current HTML document.
   * @param newTitle
   */


  Title.prototype.setTitle = function (newTitle) {
    getDOM().setTitle(this._doc, newTitle);
  };

  Title.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"])({
    factory: createTitle,
    token: Title,
    providedIn: "root"
  });
  Title = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
    providedIn: 'root',
    useFactory: createTitle,
    deps: []
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"])(DOCUMENT$1)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], Title);
  return Title;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var win = typeof window !== 'undefined' && window || {};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ChangeDetectionPerfRecord =
/** @class */
function () {
  function ChangeDetectionPerfRecord(msPerTick, numTicks) {
    this.msPerTick = msPerTick;
    this.numTicks = numTicks;
  }

  return ChangeDetectionPerfRecord;
}();
/**
 * Entry point for all Angular profiling-related debug tools. This object
 * corresponds to the `ng.profiler` in the dev console.
 */


var AngularProfiler =
/** @class */
function () {
  function AngularProfiler(ref) {
    this.appRef = ref.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ApplicationRef"]);
  } // tslint:disable:no-console

  /**
   * Exercises change detection in a loop and then prints the average amount of
   * time in milliseconds how long a single round of change detection takes for
   * the current state of the UI. It runs a minimum of 5 rounds for a minimum
   * of 500 milliseconds.
   *
   * Optionally, a user may pass a `config` parameter containing a map of
   * options. Supported options are:
   *
   * `record` (boolean) - causes the profiler to record a CPU profile while
   * it exercises the change detector. Example:
   *
   * ```
   * ng.profiler.timeChangeDetection({record: true})
   * ```
   */


  AngularProfiler.prototype.timeChangeDetection = function (config) {
    var record = config && config['record'];
    var profileName = 'Change Detection'; // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened

    var isProfilerAvailable = win.console.profile != null;

    if (record && isProfilerAvailable) {
      win.console.profile(profileName);
    }

    var start = getDOM().performanceNow();
    var numTicks = 0;

    while (numTicks < 5 || getDOM().performanceNow() - start < 500) {
      this.appRef.tick();
      numTicks++;
    }

    var end = getDOM().performanceNow();

    if (record && isProfilerAvailable) {
      win.console.profileEnd(profileName);
    }

    var msPerTick = (end - start) / numTicks;
    win.console.log("ran " + numTicks + " change detection cycles");
    win.console.log(msPerTick.toFixed(2) + " ms per check");
    return new ChangeDetectionPerfRecord(msPerTick, numTicks);
  };

  return AngularProfiler;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var PROFILER_GLOBAL_NAME = 'profiler';
/**
 * Enabled Angular debug tools that are accessible via your browser's
 * developer console.
 *
 * Usage:
 *
 * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)
 * 1. Type `ng.` (usually the console will show auto-complete suggestion)
 * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`
 *    then hit Enter.
 *
 * @experimental All debugging apis are currently experimental.
 */

function enableDebugTools(ref) {
  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));
  return ref;
}
/**
 * Disables Angular tools.
 *
 * @experimental All debugging apis are currently experimental.
 */


function disableDebugTools() {
  exportNgVar(PROFILER_GLOBAL_NAME, null);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function escapeHtml(text) {
  var escapedText = {
    '&': '&a;',
    '"': '&q;',
    '\'': '&s;',
    '<': '&l;',
    '>': '&g;'
  };
  return text.replace(/[&"'<>]/g, function (s) {
    return escapedText[s];
  });
}

function unescapeHtml(text) {
  var unescapedText = {
    '&a;': '&',
    '&q;': '"',
    '&s;': '\'',
    '&l;': '<',
    '&g;': '>'
  };
  return text.replace(/&[^;]+;/g, function (s) {
    return unescapedText[s];
  });
}
/**
 * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.
 *
 * Example:
 *
 * ```
 * const COUNTER_KEY = makeStateKey<number>('counter');
 * let value = 10;
 *
 * transferState.set(COUNTER_KEY, value);
 * ```
 *
 * @experimental
 */


function makeStateKey(key) {
  return key;
}
/**
 * A key value store that is transferred from the application on the server side to the application
 * on the client side.
 *
 * `TransferState` will be available as an injectable token. To use it import
 * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.
 *
 * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only
 * boolean, number, string, null and non-class objects will be serialized and deserialzied in a
 * non-lossy manner.
 *
 * @experimental
 */


var TransferState =
/** @class */
function () {
  function TransferState() {
    this.store = {};
    this.onSerializeCallbacks = {};
  }

  TransferState_1 = TransferState;
  /** @internal */

  TransferState.init = function (initState) {
    var transferState = new TransferState_1();
    transferState.store = initState;
    return transferState;
  };
  /**
   * Get the value corresponding to a key. Return `defaultValue` if key is not found.
   */


  TransferState.prototype.get = function (key, defaultValue) {
    return this.store[key] !== undefined ? this.store[key] : defaultValue;
  };
  /**
   * Set the value corresponding to a key.
   */


  TransferState.prototype.set = function (key, value) {
    this.store[key] = value;
  };
  /**
   * Remove a key from the store.
   */


  TransferState.prototype.remove = function (key) {
    delete this.store[key];
  };
  /**
   * Test whether a key exists in the store.
   */


  TransferState.prototype.hasKey = function (key) {
    return this.store.hasOwnProperty(key);
  };
  /**
   * Register a callback to provide the value for a key when `toJson` is called.
   */


  TransferState.prototype.onSerialize = function (key, callback) {
    this.onSerializeCallbacks[key] = callback;
  };
  /**
   * Serialize the current state of the store to JSON.
   */


  TransferState.prototype.toJson = function () {
    // Call the onSerialize callbacks and put those values into the store.
    for (var key in this.onSerializeCallbacks) {
      if (this.onSerializeCallbacks.hasOwnProperty(key)) {
        try {
          this.store[key] = this.onSerializeCallbacks[key]();
        } catch (e) {
          console.warn('Exception in onSerialize callback: ', e);
        }
      }
    }

    return JSON.stringify(this.store);
  };

  var TransferState_1;
  TransferState = TransferState_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])()], TransferState);
  return TransferState;
}();

function initTransferState(doc, appId) {
  // Locate the script tag with the JSON data transferred from the server.
  // The id of the script tag is set to the Angular appId + 'state'.
  var script = doc.getElementById(appId + '-state');
  var initialState = {};

  if (script && script.textContent) {
    try {
      initialState = JSON.parse(unescapeHtml(script.textContent));
    } catch (e) {
      console.warn('Exception while restoring TransferState for app ' + appId, e);
    }
  }

  return TransferState.init(initialState);
}
/**
 * NgModule to install on the client side while using the `TransferState` to transfer state from
 * server to client.
 *
 * @experimental
 */


var BrowserTransferStateModule =
/** @class */
function () {
  function BrowserTransferStateModule() {}

  BrowserTransferStateModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
    providers: [{
      provide: TransferState,
      useFactory: initTransferState,
      deps: [DOCUMENT$1, _angular_core__WEBPACK_IMPORTED_MODULE_2__["APP_ID"]]
    }]
  })], BrowserTransferStateModule);
  return BrowserTransferStateModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Predicates for use with {@link DebugElement}'s query functions.
 *
 * @experimental All debugging apis are currently experimental.
 */


var By =
/** @class */
function () {
  function By() {}
  /**
   * Match all elements.
   *
   * @usageNotes
   * ### Example
   *
   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
   */


  By.all = function () {
    return function (debugElement) {
      return true;
    };
  };
  /**
   * Match elements by the given CSS selector.
   *
   * @usageNotes
   * ### Example
   *
   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
   */


  By.css = function (selector) {
    return function (debugElement) {
      return debugElement.nativeElement != null ? getDOM().elementMatches(debugElement.nativeElement, selector) : false;
    };
  };
  /**
   * Match elements that have the given directive present.
   *
   * @usageNotes
   * ### Example
   *
   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
   */


  By.directive = function (type) {
    return function (debugElement) {
      return debugElement.providerTokens.indexOf(type) !== -1;
    };
  };

  return By;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["Version"]('7.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return _assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};


function __rest(s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : new P(function (resolve) {
        resolve(result.value);
      }).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
function __exportStar(m, exports) {
  for (var p in m) {
    if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
}
function __values(o) {
  var m = typeof Symbol === "function" && o[Symbol.iterator],
      i = 0;
  if (m) return m.call(o);
  return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}

/***/ }),
/* 265 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_e", function() { return COMMON_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_d", function() { return findLocaleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_a", function() { return DEPRECATED_PLURAL_FN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_b", function() { return getPluralCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_g", function() { return COMMON_DEPRECATED_I18N_PIPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_common_f", function() { return COMMON_PIPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵregisterLocaleData", function() { return registerLocaleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return formatDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatCurrency", function() { return formatCurrency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatNumber", function() { return formatNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatPercent", function() { return formatPercent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgLocaleLocalization", function() { return NgLocaleLocalization; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgLocalization", function() { return NgLocalization; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerLocaleData", function() { return registerLocaleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Plural", function() { return Plural; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberFormatStyle", function() { return NumberFormatStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormStyle", function() { return FormStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TranslationWidth", function() { return TranslationWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormatWidth", function() { return FormatWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberSymbol", function() { return NumberSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WeekDay", function() { return WeekDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNumberOfCurrencyDigits", function() { return getNumberOfCurrencyDigits; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrencySymbol", function() { return getCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDayPeriods", function() { return getLocaleDayPeriods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDayNames", function() { return getLocaleDayNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleMonthNames", function() { return getLocaleMonthNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleId", function() { return getLocaleId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleEraNames", function() { return getLocaleEraNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleWeekEndRange", function() { return getLocaleWeekEndRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleFirstDayOfWeek", function() { return getLocaleFirstDayOfWeek; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDateFormat", function() { return getLocaleDateFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleDateTimeFormat", function() { return getLocaleDateTimeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleExtraDayPeriodRules", function() { return getLocaleExtraDayPeriodRules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleExtraDayPeriods", function() { return getLocaleExtraDayPeriods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocalePluralCase", function() { return getLocalePluralCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleTimeFormat", function() { return getLocaleTimeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleNumberSymbol", function() { return getLocaleNumberSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleNumberFormat", function() { return getLocaleNumberFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleCurrencyName", function() { return getLocaleCurrencyName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocaleCurrencySymbol", function() { return getLocaleCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵparseCookieValue", function() { return parseCookieValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommonModule", function() { return CommonModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeprecatedI18NPipesModule", function() { return DeprecatedI18NPipesModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgClass", function() { return NgClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgForOf", function() { return NgForOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgForOfContext", function() { return NgForOfContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgIf", function() { return NgIf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgIfContext", function() { return NgIfContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgPlural", function() { return NgPlural; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgPluralCase", function() { return NgPluralCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgStyle", function() { return NgStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSwitch", function() { return NgSwitch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSwitchCase", function() { return NgSwitchCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSwitchDefault", function() { return NgSwitchDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgTemplateOutlet", function() { return NgTemplateOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgComponentOutlet", function() { return NgComponentOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOCUMENT", function() { return DOCUMENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncPipe", function() { return AsyncPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatePipe", function() { return DatePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I18nPluralPipe", function() { return I18nPluralPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I18nSelectPipe", function() { return I18nSelectPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JsonPipe", function() { return JsonPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LowerCasePipe", function() { return LowerCasePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurrencyPipe", function() { return CurrencyPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DecimalPipe", function() { return DecimalPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PercentPipe", function() { return PercentPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlicePipe", function() { return SlicePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpperCasePipe", function() { return UpperCasePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleCasePipe", function() { return TitleCasePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyValuePipe", function() { return KeyValuePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeprecatedDatePipe", function() { return DeprecatedDatePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeprecatedCurrencyPipe", function() { return DeprecatedCurrencyPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeprecatedDecimalPipe", function() { return DeprecatedDecimalPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeprecatedPercentPipe", function() { return DeprecatedPercentPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_BROWSER_ID", function() { return PLATFORM_BROWSER_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_SERVER_ID", function() { return PLATFORM_SERVER_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_WORKER_APP_ID", function() { return PLATFORM_WORKER_APP_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPLATFORM_WORKER_UI_ID", function() { return PLATFORM_WORKER_UI_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformBrowser", function() { return isPlatformBrowser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformServer", function() { return isPlatformServer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformWorkerApp", function() { return isPlatformWorkerApp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlatformWorkerUi", function() { return isPlatformWorkerUi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewportScroller", function() { return ViewportScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNullViewportScroller", function() { return NullViewportScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlatformLocation", function() { return PlatformLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION_INITIALIZED", function() { return LOCATION_INITIALIZED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationStrategy", function() { return LocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_BASE_HREF", function() { return APP_BASE_HREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashLocationStrategy", function() { return HashLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PathLocationStrategy", function() { return PathLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return Location; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(264);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license Angular v7.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */


/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This class should not be used directly by an application developer. Instead, use
 * {@link Location}.
 *
 * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform
 * agnostic.
 * This means that we can have different implementation of `PlatformLocation` for the different
 * platforms that angular supports. For example, `@angular/platform-browser` provides an
 * implementation specific to the browser environment, while `@angular/platform-webworker` provides
 * one suitable for use with web workers.
 *
 * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}
 * when they need to interact with the DOM apis like pushState, popState, etc...
 *
 * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly
 * by the {@link Router} in order to navigate between routes. Since all interactions between {@link
 * Router} /
 * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`
 * class they are all platform independent.
 *
 *
 */

var PlatformLocation =
/** @class */
function () {
  function PlatformLocation() {}

  return PlatformLocation;
}();
/**
 * @description Indicates when a location is initialized.
 * @experimental
 */


var LOCATION_INITIALIZED = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('Location Initialized');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * `LocationStrategy` is responsible for representing and reading route state
 * from the browser's URL. Angular provides two strategies:
 * {@link HashLocationStrategy} and {@link PathLocationStrategy}.
 *
 * This is used under the hood of the {@link Location} service.
 *
 * Applications should use the {@link Router} or {@link Location} services to
 * interact with application route state.
 *
 * For instance, {@link HashLocationStrategy} produces URLs like
 * `http://example.com#/foo`, and {@link PathLocationStrategy} produces
 * `http://example.com/foo` as an equivalent URL.
 *
 * See these two classes for more.
 *
 *
 */

var LocationStrategy =
/** @class */
function () {
  function LocationStrategy() {}

  return LocationStrategy;
}();
/**
 * The `APP_BASE_HREF` token represents the base href to be used with the
 * {@link PathLocationStrategy}.
 *
 * If you're using {@link PathLocationStrategy}, you must provide a provider to a string
 * representing the URL prefix that should be preserved when generating and recognizing
 * URLs.
 *
 * @usageNotes
 *
 * ### Example
 *
 * ```typescript
 * import {Component, NgModule} from '@angular/core';
 * import {APP_BASE_HREF} from '@angular/common';
 *
 * @NgModule({
 *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]
 * })
 * class AppModule {}
 * ```
 *
 *
 */


var APP_BASE_HREF = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('appBaseHref');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * A service that applications can use to interact with a browser's URL.
 *
 * Depending on which {@link LocationStrategy} is used, `Location` will either persist
 * to the URL's path or the URL's hash segment.
 *
 * @usageNotes
 *
 * It's better to use {@link Router#navigate} service to trigger route changes. Use
 * `Location` only if you need to interact with or create normalized URLs outside of
 * routing.
 *
 * `Location` is responsible for normalizing the URL against the application's base href.
 * A normalized URL is absolute from the URL host, includes the application's base href, and has no
 * trailing slash:
 * - `/my/app/user/123` is normalized
 * - `my/app/user/123` **is not** normalized
 * - `/my/app/user/123/` **is not** normalized
 *
 * ### Example
 *
 * {@example common/location/ts/path_location_component.ts region='LocationComponent'}
 *
 */

var Location =
/** @class */
function () {
  function Location(platformStrategy) {
    var _this = this;
    /** @internal */


    this._subject = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this._platformStrategy = platformStrategy;

    var browserBaseHref = this._platformStrategy.getBaseHref();

    this._baseHref = Location_1.stripTrailingSlash(_stripIndexHtml(browserBaseHref));

    this._platformStrategy.onPopState(function (ev) {
      _this._subject.emit({
        'url': _this.path(true),
        'pop': true,
        'state': ev.state,
        'type': ev.type
      });
    });
  }

  Location_1 = Location;
  /**
   * Returns the normalized URL path.
   */
  // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is
  // removed.

  Location.prototype.path = function (includeHash) {
    if (includeHash === void 0) {
      includeHash = false;
    }

    return this.normalize(this._platformStrategy.path(includeHash));
  };
  /**
   * Normalizes the given path and compares to the current normalized path.
   */


  Location.prototype.isCurrentPathEqualTo = function (path, query) {
    if (query === void 0) {
      query = '';
    }

    return this.path() == this.normalize(path + Location_1.normalizeQueryParams(query));
  };
  /**
   * Given a string representing a URL, returns the normalized URL path without leading or
   * trailing slashes.
   */


  Location.prototype.normalize = function (url) {
    return Location_1.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));
  };
  /**
   * Given a string representing a URL, returns the platform-specific external URL path.
   * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one
   * before normalizing. This method will also add a hash if `HashLocationStrategy` is
   * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
   */


  Location.prototype.prepareExternalUrl = function (url) {
    if (url && url[0] !== '/') {
      url = '/' + url;
    }

    return this._platformStrategy.prepareExternalUrl(url);
  }; // TODO: rename this method to pushState

  /**
   * Changes the browsers URL to the normalized version of the given URL, and pushes a
   * new item onto the platform's history.
   */


  Location.prototype.go = function (path, query, state) {
    if (query === void 0) {
      query = '';
    }

    if (state === void 0) {
      state = null;
    }

    this._platformStrategy.pushState(state, '', path, query);
  };
  /**
   * Changes the browsers URL to the normalized version of the given URL, and replaces
   * the top item on the platform's history stack.
   */


  Location.prototype.replaceState = function (path, query, state) {
    if (query === void 0) {
      query = '';
    }

    if (state === void 0) {
      state = null;
    }

    this._platformStrategy.replaceState(state, '', path, query);
  };
  /**
   * Navigates forward in the platform's history.
   */


  Location.prototype.forward = function () {
    this._platformStrategy.forward();
  };
  /**
   * Navigates back in the platform's history.
   */


  Location.prototype.back = function () {
    this._platformStrategy.back();
  };
  /**
   * Subscribe to the platform's `popState` events.
   */


  Location.prototype.subscribe = function (onNext, onThrow, onReturn) {
    return this._subject.subscribe({
      next: onNext,
      error: onThrow,
      complete: onReturn
    });
  };
  /**
   * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as
   * is.
   */


  Location.normalizeQueryParams = function (params) {
    return params && params[0] !== '?' ? '?' + params : params;
  };
  /**
   * Given 2 parts of a url, join them with a slash if needed.
   */


  Location.joinWithSlash = function (start, end) {
    if (start.length == 0) {
      return end;
    }

    if (end.length == 0) {
      return start;
    }

    var slashes = 0;

    if (start.endsWith('/')) {
      slashes++;
    }

    if (end.startsWith('/')) {
      slashes++;
    }

    if (slashes == 2) {
      return start + end.substring(1);
    }

    if (slashes == 1) {
      return start + end;
    }

    return start + '/' + end;
  };
  /**
   * If url has a trailing slash, remove it, otherwise return url as is. This
   * method looks for the first occurrence of either #, ?, or the end of the
   * line as `/` characters after any of these should not be replaced.
   */


  Location.stripTrailingSlash = function (url) {
    var match = url.match(/#|\?|$/);
    var pathEndIdx = match && match.index || url.length;
    var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);
    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);
  };

  var Location_1;
  Location = Location_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [LocationStrategy])], Location);
  return Location;
}();

function _stripBaseHref(baseHref, url) {
  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;
}

function _stripIndexHtml(url) {
  return url.replace(/\/index.html$/, '');
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * A {@link LocationStrategy} used to configure the {@link Location} service to
 * represent its state in the
 * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)
 * of the browser's URL.
 *
 * For instance, if you call `location.go('/foo')`, the browser's URL will become
 * `example.com#/foo`.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}
 *
 *
 */


var HashLocationStrategy =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__extends"])(HashLocationStrategy, _super);

  function HashLocationStrategy(_platformLocation, _baseHref) {
    var _this = _super.call(this) || this;

    _this._platformLocation = _platformLocation;
    _this._baseHref = '';

    if (_baseHref != null) {
      _this._baseHref = _baseHref;
    }

    return _this;
  }

  HashLocationStrategy.prototype.onPopState = function (fn) {
    this._platformLocation.onPopState(fn);

    this._platformLocation.onHashChange(fn);
  };

  HashLocationStrategy.prototype.getBaseHref = function () {
    return this._baseHref;
  };

  HashLocationStrategy.prototype.path = function (includeHash) {
    if (includeHash === void 0) {
      includeHash = false;
    } // the hash value is always prefixed with a `#`
    // and if it is empty then it will stay empty


    var path = this._platformLocation.hash;
    if (path == null) path = '#';
    return path.length > 0 ? path.substring(1) : path;
  };

  HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {
    var url = Location.joinWithSlash(this._baseHref, internal);
    return url.length > 0 ? '#' + url : url;
  };

  HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {
    var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));

    if (url.length == 0) {
      url = this._platformLocation.pathname;
    }

    this._platformLocation.pushState(state, title, url);
  };

  HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {
    var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));

    if (url.length == 0) {
      url = this._platformLocation.pathname;
    }

    this._platformLocation.replaceState(state, title, url);
  };

  HashLocationStrategy.prototype.forward = function () {
    this._platformLocation.forward();
  };

  HashLocationStrategy.prototype.back = function () {
    this._platformLocation.back();
  };

  HashLocationStrategy = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(APP_BASE_HREF)), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [PlatformLocation, String])], HashLocationStrategy);
  return HashLocationStrategy;
}(LocationStrategy);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * A {@link LocationStrategy} used to configure the {@link Location} service to
 * represent its state in the
 * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the
 * browser's URL.
 *
 * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}
 * or add a base element to the document. This URL prefix that will be preserved
 * when generating and recognizing URLs.
 *
 * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * Similarly, if you add `<base href='/my/app'/>` to the document and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example common/location/ts/path_location_component.ts region='LocationComponent'}
 *
 *
 */


var PathLocationStrategy =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__extends"])(PathLocationStrategy, _super);

  function PathLocationStrategy(_platformLocation, href) {
    var _this = _super.call(this) || this;

    _this._platformLocation = _platformLocation;

    if (href == null) {
      href = _this._platformLocation.getBaseHrefFromDOM();
    }

    if (href == null) {
      throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");
    }

    _this._baseHref = href;
    return _this;
  }

  PathLocationStrategy.prototype.onPopState = function (fn) {
    this._platformLocation.onPopState(fn);

    this._platformLocation.onHashChange(fn);
  };

  PathLocationStrategy.prototype.getBaseHref = function () {
    return this._baseHref;
  };

  PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {
    return Location.joinWithSlash(this._baseHref, internal);
  };

  PathLocationStrategy.prototype.path = function (includeHash) {
    if (includeHash === void 0) {
      includeHash = false;
    }

    var pathname = this._platformLocation.pathname + Location.normalizeQueryParams(this._platformLocation.search);
    var hash = this._platformLocation.hash;
    return hash && includeHash ? "" + pathname + hash : pathname;
  };

  PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {
    var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));

    this._platformLocation.pushState(state, title, externalUrl);
  };

  PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {
    var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));

    this._platformLocation.replaceState(state, title, externalUrl);
  };

  PathLocationStrategy.prototype.forward = function () {
    this._platformLocation.forward();
  };

  PathLocationStrategy.prototype.back = function () {
    this._platformLocation.back();
  };

  PathLocationStrategy = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(APP_BASE_HREF)), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [PlatformLocation, String])], PathLocationStrategy);
  return PathLocationStrategy;
}(LocationStrategy);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// THIS CODE IS GENERATED - DO NOT MODIFY
// See angular/tools/gulp-tasks/cldr/extract.js


var u = undefined;

function plural(n) {
  var i = Math.floor(Math.abs(n)),
      v = n.toString().replace(/^[^.]*\.?/, '').length;
  if (i === 1 && v === 0) return 1;
  return 5;
}

var localeEn = ['en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u], [['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'], ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'], ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']], u, [['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'], ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']], u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0], ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'], ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \'at\' {0}', u], ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'], ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @experimental i18n support is experimental.
 */

var LOCALE_DATA = {};
/**
 * Register global data to be used internally by Angular. See the
 * ["I18n guide"](guide/i18n#i18n-pipes) to know how to import additional locale data.
 *
 * @experimental i18n support is experimental.
 */
// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1

function registerLocaleData(data, localeId, extraData) {
  if (typeof localeId !== 'string') {
    extraData = localeId;
    localeId = data[0
    /* LocaleId */
    ];
  }

  localeId = localeId.toLowerCase().replace(/_/g, '-');
  LOCALE_DATA[localeId] = data;

  if (extraData) {
    LOCALE_DATA[localeId][19
    /* ExtraData */
    ] = extraData;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @internal */


var CURRENCIES_EN = {
  'ADP': [undefined, undefined, 0],
  'AFN': [undefined, undefined, 0],
  'ALL': [undefined, undefined, 0],
  'AMD': [undefined, undefined, 0],
  'AOA': [undefined, 'Kz'],
  'ARS': [undefined, '$'],
  'AUD': ['A$', '$'],
  'BAM': [undefined, 'KM'],
  'BBD': [undefined, '$'],
  'BDT': [undefined, '৳'],
  'BHD': [undefined, undefined, 3],
  'BIF': [undefined, undefined, 0],
  'BMD': [undefined, '$'],
  'BND': [undefined, '$'],
  'BOB': [undefined, 'Bs'],
  'BRL': ['R$'],
  'BSD': [undefined, '$'],
  'BWP': [undefined, 'P'],
  'BYN': [undefined, 'р.', 2],
  'BYR': [undefined, undefined, 0],
  'BZD': [undefined, '$'],
  'CAD': ['CA$', '$', 2],
  'CHF': [undefined, undefined, 2],
  'CLF': [undefined, undefined, 4],
  'CLP': [undefined, '$', 0],
  'CNY': ['CN¥', '¥'],
  'COP': [undefined, '$', 0],
  'CRC': [undefined, '₡', 2],
  'CUC': [undefined, '$'],
  'CUP': [undefined, '$'],
  'CZK': [undefined, 'Kč', 2],
  'DJF': [undefined, undefined, 0],
  'DKK': [undefined, 'kr', 2],
  'DOP': [undefined, '$'],
  'EGP': [undefined, 'E£'],
  'ESP': [undefined, '₧', 0],
  'EUR': ['€'],
  'FJD': [undefined, '$'],
  'FKP': [undefined, '£'],
  'GBP': ['£'],
  'GEL': [undefined, '₾'],
  'GIP': [undefined, '£'],
  'GNF': [undefined, 'FG', 0],
  'GTQ': [undefined, 'Q'],
  'GYD': [undefined, '$', 0],
  'HKD': ['HK$', '$'],
  'HNL': [undefined, 'L'],
  'HRK': [undefined, 'kn'],
  'HUF': [undefined, 'Ft', 2],
  'IDR': [undefined, 'Rp', 0],
  'ILS': ['₪'],
  'INR': ['₹'],
  'IQD': [undefined, undefined, 0],
  'IRR': [undefined, undefined, 0],
  'ISK': [undefined, 'kr', 0],
  'ITL': [undefined, undefined, 0],
  'JMD': [undefined, '$'],
  'JOD': [undefined, undefined, 3],
  'JPY': ['¥', undefined, 0],
  'KHR': [undefined, '៛'],
  'KMF': [undefined, 'CF', 0],
  'KPW': [undefined, '₩', 0],
  'KRW': ['₩', undefined, 0],
  'KWD': [undefined, undefined, 3],
  'KYD': [undefined, '$'],
  'KZT': [undefined, '₸'],
  'LAK': [undefined, '₭', 0],
  'LBP': [undefined, 'L£', 0],
  'LKR': [undefined, 'Rs'],
  'LRD': [undefined, '$'],
  'LTL': [undefined, 'Lt'],
  'LUF': [undefined, undefined, 0],
  'LVL': [undefined, 'Ls'],
  'LYD': [undefined, undefined, 3],
  'MGA': [undefined, 'Ar', 0],
  'MGF': [undefined, undefined, 0],
  'MMK': [undefined, 'K', 0],
  'MNT': [undefined, '₮', 0],
  'MRO': [undefined, undefined, 0],
  'MUR': [undefined, 'Rs', 0],
  'MXN': ['MX$', '$'],
  'MYR': [undefined, 'RM'],
  'NAD': [undefined, '$'],
  'NGN': [undefined, '₦'],
  'NIO': [undefined, 'C$'],
  'NOK': [undefined, 'kr', 2],
  'NPR': [undefined, 'Rs'],
  'NZD': ['NZ$', '$'],
  'OMR': [undefined, undefined, 3],
  'PHP': [undefined, '₱'],
  'PKR': [undefined, 'Rs', 0],
  'PLN': [undefined, 'zł'],
  'PYG': [undefined, '₲', 0],
  'RON': [undefined, 'lei'],
  'RSD': [undefined, undefined, 0],
  'RUB': [undefined, '₽'],
  'RUR': [undefined, 'р.'],
  'RWF': [undefined, 'RF', 0],
  'SBD': [undefined, '$'],
  'SEK': [undefined, 'kr', 2],
  'SGD': [undefined, '$'],
  'SHP': [undefined, '£'],
  'SLL': [undefined, undefined, 0],
  'SOS': [undefined, undefined, 0],
  'SRD': [undefined, '$'],
  'SSP': [undefined, '£'],
  'STD': [undefined, undefined, 0],
  'STN': [undefined, 'Db'],
  'SYP': [undefined, '£', 0],
  'THB': [undefined, '฿'],
  'TMM': [undefined, undefined, 0],
  'TND': [undefined, undefined, 3],
  'TOP': [undefined, 'T$'],
  'TRL': [undefined, undefined, 0],
  'TRY': [undefined, '₺'],
  'TTD': [undefined, '$'],
  'TWD': ['NT$', '$', 2],
  'TZS': [undefined, undefined, 0],
  'UAH': [undefined, '₴'],
  'UGX': [undefined, undefined, 0],
  'USD': ['$'],
  'UYI': [undefined, undefined, 0],
  'UYU': [undefined, '$'],
  'UZS': [undefined, undefined, 0],
  'VEF': [undefined, 'Bs'],
  'VND': ['₫', undefined, 0],
  'VUV': [undefined, undefined, 0],
  'XAF': ['FCFA', undefined, 0],
  'XCD': ['EC$', '$'],
  'XOF': ['CFA', undefined, 0],
  'XPF': ['CFPF', undefined, 0],
  'YER': [undefined, undefined, 0],
  'ZAR': [undefined, 'R'],
  'ZMK': [undefined, undefined, 0],
  'ZMW': [undefined, 'ZK'],
  'ZWD': [undefined, undefined, 0]
};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The different format styles that can be used to represent numbers.
 * Used by the function {@link getLocaleNumberFormat}.
 *
 * @experimental i18n support is experimental.
 */

var NumberFormatStyle;

(function (NumberFormatStyle) {
  NumberFormatStyle[NumberFormatStyle["Decimal"] = 0] = "Decimal";
  NumberFormatStyle[NumberFormatStyle["Percent"] = 1] = "Percent";
  NumberFormatStyle[NumberFormatStyle["Currency"] = 2] = "Currency";
  NumberFormatStyle[NumberFormatStyle["Scientific"] = 3] = "Scientific";
})(NumberFormatStyle || (NumberFormatStyle = {}));
/** @experimental */


var Plural;

(function (Plural) {
  Plural[Plural["Zero"] = 0] = "Zero";
  Plural[Plural["One"] = 1] = "One";
  Plural[Plural["Two"] = 2] = "Two";
  Plural[Plural["Few"] = 3] = "Few";
  Plural[Plural["Many"] = 4] = "Many";
  Plural[Plural["Other"] = 5] = "Other";
})(Plural || (Plural = {}));
/**
 * Some languages use two different forms of strings (standalone and format) depending on the
 * context.
 * Typically the standalone version is the nominative form of the word, and the format version is in
 * the genitive.
 * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.
 *
 * @experimental i18n support is experimental.
 */


var FormStyle;

(function (FormStyle) {
  FormStyle[FormStyle["Format"] = 0] = "Format";
  FormStyle[FormStyle["Standalone"] = 1] = "Standalone";
})(FormStyle || (FormStyle = {}));
/**
 * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),
 * wide (full length), and short (2 characters, only for days).
 *
 * For example the day `Sunday` will be:
 * - Narrow: `S`
 * - Short: `Su`
 * - Abbreviated: `Sun`
 * - Wide: `Sunday`
 *
 * @experimental i18n support is experimental.
 */


var TranslationWidth;

(function (TranslationWidth) {
  TranslationWidth[TranslationWidth["Narrow"] = 0] = "Narrow";
  TranslationWidth[TranslationWidth["Abbreviated"] = 1] = "Abbreviated";
  TranslationWidth[TranslationWidth["Wide"] = 2] = "Wide";
  TranslationWidth[TranslationWidth["Short"] = 3] = "Short";
})(TranslationWidth || (TranslationWidth = {}));
/**
 * Multiple widths are available for formats: short (minimal amount of data), medium (small amount
 * of data), long (complete amount of data), full (complete amount of data and extra information).
 *
 * For example the date-time formats for the english locale will be:
 *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)
 *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)
 *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)
 *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at
 * 9:03:01 AM GMT+01:00`)
 *
 * @experimental i18n support is experimental.
 */


var FormatWidth;

(function (FormatWidth) {
  FormatWidth[FormatWidth["Short"] = 0] = "Short";
  FormatWidth[FormatWidth["Medium"] = 1] = "Medium";
  FormatWidth[FormatWidth["Long"] = 2] = "Long";
  FormatWidth[FormatWidth["Full"] = 3] = "Full";
})(FormatWidth || (FormatWidth = {}));
/**
 * Number symbol that can be used to replace placeholders in number patterns.
 * The placeholders are based on english values:
 *
 * | Name                   | Example for en-US | Meaning                                     |
 * |------------------------|-------------------|---------------------------------------------|
 * | decimal                | 2,345`.`67        | decimal separator                           |
 * | group                  | 2`,`345.67        | grouping separator, typically for thousands |
 * | plusSign               | `+`23             | the plus sign used with numbers             |
 * | minusSign              | `-`23             | the minus sign used with numbers            |
 * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |
 * | perMille               | 234`‰`            | the permille sign (out of 1000)             |
 * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |
 * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |
 * | infinity               | `∞`               | used in +∞ and -∞.                          |
 * | nan                    | `NaN`             | "not a number".                             |
 * | timeSeparator          | 10`:`52           | symbol used between time units              |
 * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to "decimal"    |
 * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to "group"     |
 *
 * @experimental i18n support is experimental.
 */


var NumberSymbol;

(function (NumberSymbol) {
  NumberSymbol[NumberSymbol["Decimal"] = 0] = "Decimal";
  NumberSymbol[NumberSymbol["Group"] = 1] = "Group";
  NumberSymbol[NumberSymbol["List"] = 2] = "List";
  NumberSymbol[NumberSymbol["PercentSign"] = 3] = "PercentSign";
  NumberSymbol[NumberSymbol["PlusSign"] = 4] = "PlusSign";
  NumberSymbol[NumberSymbol["MinusSign"] = 5] = "MinusSign";
  NumberSymbol[NumberSymbol["Exponential"] = 6] = "Exponential";
  NumberSymbol[NumberSymbol["SuperscriptingExponent"] = 7] = "SuperscriptingExponent";
  NumberSymbol[NumberSymbol["PerMille"] = 8] = "PerMille";
  NumberSymbol[NumberSymbol["Infinity"] = 9] = "Infinity";
  NumberSymbol[NumberSymbol["NaN"] = 10] = "NaN";
  NumberSymbol[NumberSymbol["TimeSeparator"] = 11] = "TimeSeparator";
  NumberSymbol[NumberSymbol["CurrencyDecimal"] = 12] = "CurrencyDecimal";
  NumberSymbol[NumberSymbol["CurrencyGroup"] = 13] = "CurrencyGroup";
})(NumberSymbol || (NumberSymbol = {}));
/**
 * The value for each day of the week, based on the en-US locale
 *
 * @experimental
 */


var WeekDay;

(function (WeekDay) {
  WeekDay[WeekDay["Sunday"] = 0] = "Sunday";
  WeekDay[WeekDay["Monday"] = 1] = "Monday";
  WeekDay[WeekDay["Tuesday"] = 2] = "Tuesday";
  WeekDay[WeekDay["Wednesday"] = 3] = "Wednesday";
  WeekDay[WeekDay["Thursday"] = 4] = "Thursday";
  WeekDay[WeekDay["Friday"] = 5] = "Friday";
  WeekDay[WeekDay["Saturday"] = 6] = "Saturday";
})(WeekDay || (WeekDay = {}));
/**
 * The locale id for the chosen locale (e.g `en-GB`).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleId(locale) {
  return findLocaleData(locale)[0
  /* LocaleId */
  ];
}
/**
 * Periods of the day (e.g. `[AM, PM]` for en-US).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDayPeriods(locale, formStyle, width) {
  var data = findLocaleData(locale);
  var amPmData = [data[1
  /* DayPeriodsFormat */
  ], data[2
  /* DayPeriodsStandalone */
  ]];
  var amPm = getLastDefinedValue(amPmData, formStyle);
  return getLastDefinedValue(amPm, width);
}
/**
 * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDayNames(locale, formStyle, width) {
  var data = findLocaleData(locale);
  var daysData = [data[3
  /* DaysFormat */
  ], data[4
  /* DaysStandalone */
  ]];
  var days = getLastDefinedValue(daysData, formStyle);
  return getLastDefinedValue(days, width);
}
/**
 * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleMonthNames(locale, formStyle, width) {
  var data = findLocaleData(locale);
  var monthsData = [data[5
  /* MonthsFormat */
  ], data[6
  /* MonthsStandalone */
  ]];
  var months = getLastDefinedValue(monthsData, formStyle);
  return getLastDefinedValue(months, width);
}
/**
 * Eras for the Gregorian calendar (e.g. AD/BC).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleEraNames(locale, width) {
  var data = findLocaleData(locale);
  var erasData = data[7
  /* Eras */
  ];
  return getLastDefinedValue(erasData, width);
}
/**
 * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).
 * For example in french the value would be 1 because the first day of the week is Monday.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleFirstDayOfWeek(locale) {
  var data = findLocaleData(locale);
  return data[8
  /* FirstDayOfWeek */
  ];
}
/**
 * Range of days in the week that represent the week-end for this locale, based on english days
 * (Sunday = 0, Monday = 1, ...).
 * For example in english the value would be [6,0] for Saturday to Sunday.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleWeekEndRange(locale) {
  var data = findLocaleData(locale);
  return data[9
  /* WeekendRange */
  ];
}
/**
 * Date format that depends on the locale.
 *
 * There are four basic date formats:
 * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).
 *
 *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like
 *  "Tuesday, September 14, 1999".
 *
 * - `long` should contain year, long-month, day.
 *
 *  For example, `MMMM d, y`, corresponding to a date like "September 14, 1999".
 *
 * - `medium` should contain year, abbreviated-month (MMM), day.
 *
 *  For example, `MMM d, y`, corresponding to a date like "Sep 14, 1999".
 *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,
 *  `y/MM/dd`, corresponding to a date like "1999/09/14".
 *
 * - `short` should contain year, numeric-month (MM/M), and day.
 *
 *  For example, `M/d/yy`, corresponding to a date like "9/14/99".
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDateFormat(locale, width) {
  var data = findLocaleData(locale);
  return getLastDefinedValue(data[10
  /* DateFormat */
  ], width);
}
/**
 * Time format that depends on the locale.
 *
 * The standard formats include four basic time formats:
 * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).
 * - `long` should contain hour, minute, second, and zone (z)
 * - `medium` should contain hour, minute, second.
 * - `short` should contain hour, minute.
 *
 * Note: The patterns depend on whether the main country using your language uses 12-hour time or
 * not:
 * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running
 * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle
 * running 0 through 11 (midnight plus 1 minute is 0:01).
 * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0
 * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running
 * 1 through 24 (midnight plus 1 minute is 24:01).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleTimeFormat(locale, width) {
  var data = findLocaleData(locale);
  return getLastDefinedValue(data[11
  /* TimeFormat */
  ], width);
}
/**
 * Date-time format that depends on the locale.
 *
 * The date-time pattern shows how to combine separate patterns for date (represented by {1})
 * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.
 * What you want to pay attention to are:
 * - possibly removing a space for languages that don't use it, such as many East Asian languages
 * - possibly adding a comma, other punctuation, or a combining word
 *
 * For example:
 * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses
 *  `{1}{0}`.
 * - An English formatted date-time using the combining pattern `{1}, {0}` could be
 *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time
 *  portion.
 *
 * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use
 * is normally based on the date style. For example, if the date has a full month and weekday
 * name, the full combining pattern will be used to combine that with a time. If the date has
 * numeric month, the short version of the combining pattern will be used to combine that with a
 * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short
 * styles.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDateTimeFormat(locale, width) {
  var data = findLocaleData(locale);
  var dateTimeFormatData = data[12
  /* DateTimeFormat */
  ];
  return getLastDefinedValue(dateTimeFormatData, width);
}
/**
 * Number symbol that can be used to replace placeholders in number formats.
 * See {@link NumberSymbol} for more information.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleNumberSymbol(locale, symbol) {
  var data = findLocaleData(locale);
  var res = data[13
  /* NumberSymbols */
  ][symbol];

  if (typeof res === 'undefined') {
    if (symbol === NumberSymbol.CurrencyDecimal) {
      return data[13
      /* NumberSymbols */
      ][NumberSymbol.Decimal];
    } else if (symbol === NumberSymbol.CurrencyGroup) {
      return data[13
      /* NumberSymbols */
      ][NumberSymbol.Group];
    }
  }

  return res;
}
/**
 * Number format that depends on the locale.
 *
 * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`
 * when used to format the number 12345.678 could result in "12'345,67". That would happen if the
 * grouping separator for your language is an apostrophe, and the decimal separator is a comma.
 *
 * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;
 * they stand for the decimal separator, and so on, and are NOT real characters.
 * You must NOT "translate" the placeholders; for example, don't change `.` to `,` even though in
 * your language the decimal point is written with a comma. The symbols should be replaced by the
 * local equivalents, using the Number Symbols for your language.
 *
 * Here are the special characters used in number patterns:
 *
 * | Symbol | Meaning |
 * |--------|---------|
 * | . | Replaced automatically by the character used for the decimal point. |
 * | , | Replaced by the "grouping" (thousands) separator. |
 * | 0 | Replaced by a digit (or zero if there aren't enough digits). |
 * | # | Replaced by a digit (or nothing if there aren't enough). |
 * | ¤ | This will be replaced by a currency symbol, such as $ or USD. |
 * | % | This marks a percent format. The % symbol may change position, but must be retained. |
 * | E | This marks a scientific format. The E symbol may change position, but must be retained. |
 * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |
 *
 * You can find more information
 * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)
 *
 * @experimental i18n support is experimental.
 */


function getLocaleNumberFormat(locale, type) {
  var data = findLocaleData(locale);
  return data[14
  /* NumberFormats */
  ][type];
}
/**
 * The symbol used to represent the currency for the main country using this locale (e.g. $ for
 * the locale en-US).
 * The symbol will be `null` if the main country cannot be determined.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleCurrencySymbol(locale) {
  var data = findLocaleData(locale);
  return data[15
  /* CurrencySymbol */
  ] || null;
}
/**
 * The name of the currency for the main country using this locale (e.g. USD for the locale
 * en-US).
 * The name will be `null` if the main country cannot be determined.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleCurrencyName(locale) {
  var data = findLocaleData(locale);
  return data[16
  /* CurrencyName */
  ] || null;
}
/**
 * Returns the currency values for the locale
 */


function getLocaleCurrencies(locale) {
  var data = findLocaleData(locale);
  return data[17
  /* Currencies */
  ];
}
/**
 * The locale plural function used by ICU expressions to determine the plural case to use.
 * See {@link NgPlural} for more information.
 *
 * @experimental i18n support is experimental.
 */


function getLocalePluralCase(locale) {
  var data = findLocaleData(locale);
  return data[18
  /* PluralCase */
  ];
}

function checkFullData(data) {
  if (!data[19
  /* ExtraData */
  ]) {
    throw new Error("Missing extra locale data for the locale \"" + data[0
    /* LocaleId */
    ] + "\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.");
  }
}
/**
 * Rules used to determine which day period to use (See `dayPeriods` below).
 * The rules can either be an array or a single value. If it's an array, consider it as "from"
 * and "to". If it's a single value then it means that the period is only valid at this exact
 * value.
 * There is always the same number of rules as the number of day periods, which means that the
 * first rule is applied to the first day period and so on.
 * You should fallback to AM/PM when there are no rules available.
 *
 * Note: this is only available if you load the full locale data.
 * See the ["I18n guide"](guide/i18n#i18n-pipes) to know how to import additional locale
 * data.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleExtraDayPeriodRules(locale) {
  var data = findLocaleData(locale);
  checkFullData(data);
  var rules = data[19
  /* ExtraData */
  ][2
  /* ExtraDayPeriodsRules */
  ] || [];
  return rules.map(function (rule) {
    if (typeof rule === 'string') {
      return extractTime(rule);
    }

    return [extractTime(rule[0]), extractTime(rule[1])];
  });
}
/**
 * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,
 * noon, afternoon, midnight, ...).
 * You should use the function {@link getLocaleExtraDayPeriodRules} to determine which period to
 * use.
 * You should fallback to AM/PM when there are no day periods available.
 *
 * Note: this is only available if you load the full locale data.
 * See the ["I18n guide"](guide/i18n#i18n-pipes) to know how to import additional locale
 * data.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleExtraDayPeriods(locale, formStyle, width) {
  var data = findLocaleData(locale);
  checkFullData(data);
  var dayPeriodsData = [data[19
  /* ExtraData */
  ][0
  /* ExtraDayPeriodFormats */
  ], data[19
  /* ExtraData */
  ][1
  /* ExtraDayPeriodStandalone */
  ]];
  var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];
  return getLastDefinedValue(dayPeriods, width) || [];
}
/**
 * Returns the first value that is defined in an array, going backwards.
 *
 * To avoid repeating the same data (e.g. when "format" and "standalone" are the same) we only
 * add the first one to the locale data arrays, the other ones are only defined when different.
 * We use this function to retrieve the first defined value.
 *
 * @experimental i18n support is experimental.
 */


function getLastDefinedValue(data, index) {
  for (var i = index; i > -1; i--) {
    if (typeof data[i] !== 'undefined') {
      return data[i];
    }
  }

  throw new Error('Locale data API: locale data undefined');
}
/**
 * Extract the hours and minutes from a string like "15:45"
 */


function extractTime(time) {
  var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(time.split(':'), 2),
      h = _a[0],
      m = _a[1];

  return {
    hours: +h,
    minutes: +m
  };
}
/**
 * Finds the locale data for a locale id
 *
 * @experimental i18n support is experimental.
 */


function findLocaleData(locale) {
  var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');
  var match = LOCALE_DATA[normalizedLocale];

  if (match) {
    return match;
  } // let's try to find a parent locale


  var parentLocale = normalizedLocale.split('-')[0];
  match = LOCALE_DATA[parentLocale];

  if (match) {
    return match;
  }

  if (parentLocale === 'en') {
    return localeEn;
  }

  throw new Error("Missing locale data for the locale \"" + locale + "\".");
}
/**
 * Returns the currency symbol for a given currency code, or the code if no symbol available
 * (e.g.: format narrow = $, format wide = US$, code = USD)
 * If no locale is provided, it uses the locale "en" by default
 *
 * @experimental i18n support is experimental.
 */


function getCurrencySymbol(code, format, locale) {
  if (locale === void 0) {
    locale = 'en';
  }

  var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];
  var symbolNarrow = currency[1
  /* SymbolNarrow */
  ];

  if (format === 'narrow' && typeof symbolNarrow === 'string') {
    return symbolNarrow;
  }

  return currency[0
  /* Symbol */
  ] || code;
} // Most currencies have cents, that's why the default is 2


var DEFAULT_NB_OF_CURRENCY_DIGITS = 2;
/**
 * Returns the number of decimal digits for the given currency.
 * Its value depends upon the presence of cents in that particular currency.
 *
 * @experimental i18n support is experimental.
 */

function getNumberOfCurrencyDigits(code) {
  var digits;
  var currency = CURRENCIES_EN[code];

  if (currency) {
    digits = currency[2
    /* NbOfDigits */
    ];
  }

  return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ISO8601_DATE_REGEX = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/; //    1        2       3         4          5          6          7          8  9     10      11

var NAMED_FORMATS = {};
var DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
var ZoneWidth;

(function (ZoneWidth) {
  ZoneWidth[ZoneWidth["Short"] = 0] = "Short";
  ZoneWidth[ZoneWidth["ShortGMT"] = 1] = "ShortGMT";
  ZoneWidth[ZoneWidth["Long"] = 2] = "Long";
  ZoneWidth[ZoneWidth["Extended"] = 3] = "Extended";
})(ZoneWidth || (ZoneWidth = {}));

var DateType;

(function (DateType) {
  DateType[DateType["FullYear"] = 0] = "FullYear";
  DateType[DateType["Month"] = 1] = "Month";
  DateType[DateType["Date"] = 2] = "Date";
  DateType[DateType["Hours"] = 3] = "Hours";
  DateType[DateType["Minutes"] = 4] = "Minutes";
  DateType[DateType["Seconds"] = 5] = "Seconds";
  DateType[DateType["FractionalSeconds"] = 6] = "FractionalSeconds";
  DateType[DateType["Day"] = 7] = "Day";
})(DateType || (DateType = {}));

var TranslationType;

(function (TranslationType) {
  TranslationType[TranslationType["DayPeriods"] = 0] = "DayPeriods";
  TranslationType[TranslationType["Days"] = 1] = "Days";
  TranslationType[TranslationType["Months"] = 2] = "Months";
  TranslationType[TranslationType["Eras"] = 3] = "Eras";
})(TranslationType || (TranslationType = {}));
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a date according to locale rules.
 *
 * Where:
 * - `value` is a Date, a number (milliseconds since UTC epoch) or an ISO string
 *   (https://www.w3.org/TR/NOTE-datetime).
 * - `format` indicates which date/time components to include. See {@link DatePipe} for more
 *   details.
 * - `locale` is a `string` defining the locale to use.
 * - `timezone` to be used for formatting. It understands UTC/GMT and the continental US time zone
 *   abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).
 *   If not specified, host system settings are used.
 *
 * See {@link DatePipe} for more details.
 */


function formatDate(value, format, locale, timezone) {
  var date = toDate(value);
  var namedFormat = getNamedFormat(locale, format);
  format = namedFormat || format;
  var parts = [];
  var match;

  while (format) {
    match = DATE_FORMATS_SPLIT.exec(format);

    if (match) {
      parts = parts.concat(match.slice(1));
      var part = parts.pop();

      if (!part) {
        break;
      }

      format = part;
    } else {
      parts.push(format);
      break;
    }
  }

  var dateTimezoneOffset = date.getTimezoneOffset();

  if (timezone) {
    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
    date = convertTimezoneToLocal(date, timezone, true);
  }

  var text = '';
  parts.forEach(function (value) {
    var dateFormatter = getDateFormatter(value);
    text += dateFormatter ? dateFormatter(date, locale, dateTimezoneOffset) : value === '\'\'' ? '\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
  });
  return text;
}

function getNamedFormat(locale, format) {
  var localeId = getLocaleId(locale);
  NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};

  if (NAMED_FORMATS[localeId][format]) {
    return NAMED_FORMATS[localeId][format];
  }

  var formatValue = '';

  switch (format) {
    case 'shortDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Short);
      break;

    case 'mediumDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);
      break;

    case 'longDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Long);
      break;

    case 'fullDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Full);
      break;

    case 'shortTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);
      break;

    case 'mediumTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);
      break;

    case 'longTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);
      break;

    case 'fullTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);
      break;

    case 'short':
      var shortTime = getNamedFormat(locale, 'shortTime');
      var shortDate = getNamedFormat(locale, 'shortDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);
      break;

    case 'medium':
      var mediumTime = getNamedFormat(locale, 'mediumTime');
      var mediumDate = getNamedFormat(locale, 'mediumDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);
      break;

    case 'long':
      var longTime = getNamedFormat(locale, 'longTime');
      var longDate = getNamedFormat(locale, 'longDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);
      break;

    case 'full':
      var fullTime = getNamedFormat(locale, 'fullTime');
      var fullDate = getNamedFormat(locale, 'fullDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);
      break;
  }

  if (formatValue) {
    NAMED_FORMATS[localeId][format] = formatValue;
  }

  return formatValue;
}

function formatDateTime(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{([^}]+)}/g, function (match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }

  return str;
}

function padNumber(num, digits, minusSign, trim, negWrap) {
  if (minusSign === void 0) {
    minusSign = '-';
  }

  var neg = '';

  if (num < 0 || negWrap && num <= 0) {
    if (negWrap) {
      num = -num + 1;
    } else {
      num = -num;
      neg = minusSign;
    }
  }

  var strNum = String(num);

  while (strNum.length < digits) {
    strNum = '0' + strNum;
  }

  if (trim) {
    strNum = strNum.substr(strNum.length - digits);
  }

  return neg + strNum;
}

function formatFractionalSeconds(milliseconds, digits) {
  var strMs = padNumber(milliseconds, 3);
  return strMs.substr(0, digits);
}
/**
 * Returns a date formatter that transforms a date into its locale digit representation
 */


function dateGetter(name, size, offset, trim, negWrap) {
  if (offset === void 0) {
    offset = 0;
  }

  if (trim === void 0) {
    trim = false;
  }

  if (negWrap === void 0) {
    negWrap = false;
  }

  return function (date, locale) {
    var part = getDatePart(name, date);

    if (offset > 0 || part > -offset) {
      part += offset;
    }

    if (name === DateType.Hours) {
      if (part === 0 && offset === -12) {
        part = 12;
      }
    } else if (name === DateType.FractionalSeconds) {
      return formatFractionalSeconds(part, size);
    }

    var localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);
    return padNumber(part, size, localeMinus, trim, negWrap);
  };
}

function getDatePart(part, date) {
  switch (part) {
    case DateType.FullYear:
      return date.getFullYear();

    case DateType.Month:
      return date.getMonth();

    case DateType.Date:
      return date.getDate();

    case DateType.Hours:
      return date.getHours();

    case DateType.Minutes:
      return date.getMinutes();

    case DateType.Seconds:
      return date.getSeconds();

    case DateType.FractionalSeconds:
      return date.getMilliseconds();

    case DateType.Day:
      return date.getDay();

    default:
      throw new Error("Unknown DateType value \"" + part + "\".");
  }
}
/**
 * Returns a date formatter that transforms a date into its locale string representation
 */


function dateStrGetter(name, width, form, extended) {
  if (form === void 0) {
    form = FormStyle.Format;
  }

  if (extended === void 0) {
    extended = false;
  }

  return function (date, locale) {
    return getDateTranslation(date, locale, name, width, form, extended);
  };
}
/**
 * Returns the locale translation of a date for a given form, type and width
 */


function getDateTranslation(date, locale, name, width, form, extended) {
  switch (name) {
    case TranslationType.Months:
      return getLocaleMonthNames(locale, form, width)[date.getMonth()];

    case TranslationType.Days:
      return getLocaleDayNames(locale, form, width)[date.getDay()];

    case TranslationType.DayPeriods:
      var currentHours_1 = date.getHours();
      var currentMinutes_1 = date.getMinutes();

      if (extended) {
        var rules = getLocaleExtraDayPeriodRules(locale);
        var dayPeriods_1 = getLocaleExtraDayPeriods(locale, form, width);
        var result_1;
        rules.forEach(function (rule, index) {
          if (Array.isArray(rule)) {
            // morning, afternoon, evening, night
            var _a = rule[0],
                hoursFrom = _a.hours,
                minutesFrom = _a.minutes;
            var _b = rule[1],
                hoursTo = _b.hours,
                minutesTo = _b.minutes;

            if (currentHours_1 >= hoursFrom && currentMinutes_1 >= minutesFrom && (currentHours_1 < hoursTo || currentHours_1 === hoursTo && currentMinutes_1 < minutesTo)) {
              result_1 = dayPeriods_1[index];
            }
          } else {
            // noon or midnight
            var hours = rule.hours,
                minutes = rule.minutes;

            if (hours === currentHours_1 && minutes === currentMinutes_1) {
              result_1 = dayPeriods_1[index];
            }
          }
        });

        if (result_1) {
          return result_1;
        }
      } // if no rules for the day periods, we use am/pm by default


      return getLocaleDayPeriods(locale, form, width)[currentHours_1 < 12 ? 0 : 1];

    case TranslationType.Eras:
      return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];

    default:
      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.
      // However Closure Compiler does not understand that and reports an error in typed mode.
      // The `throw new Error` below works around the problem, and the unexpected: never variable
      // makes sure tsc still checks this code is unreachable.
      var unexpected = name;
      throw new Error("unexpected translation type " + unexpected);
  }
}
/**
 * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or
 * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,
 * extended = +04:30)
 */


function timeZoneGetter(width) {
  return function (date, locale, offset) {
    var zone = -1 * offset;
    var minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);
    var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);

    switch (width) {
      case ZoneWidth.Short:
        return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + padNumber(Math.abs(zone % 60), 2, minusSign);

      case ZoneWidth.ShortGMT:
        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 1, minusSign);

      case ZoneWidth.Long:
        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);

      case ZoneWidth.Extended:
        if (offset === 0) {
          return 'Z';
        } else {
          return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);
        }

      default:
        throw new Error("Unknown zone width \"" + width + "\"");
    }
  };
}

var JANUARY = 0;
var THURSDAY = 4;

function getFirstThursdayOfYear(year) {
  var firstDayOfYear = new Date(year, JANUARY, 1).getDay();
  return new Date(year, 0, 1 + (firstDayOfYear <= THURSDAY ? THURSDAY : THURSDAY + 7) - firstDayOfYear);
}

function getThursdayThisWeek(datetime) {
  return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));
}

function weekGetter(size, monthBased) {
  if (monthBased === void 0) {
    monthBased = false;
  }

  return function (date, locale) {
    var result;

    if (monthBased) {
      var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;
      var today = date.getDate();
      result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);
    } else {
      var firstThurs = getFirstThursdayOfYear(date.getFullYear());
      var thisThurs = getThursdayThisWeek(date);
      var diff = thisThurs.getTime() - firstThurs.getTime();
      result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week
    }

    return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  };
}

var DATE_FORMATS = {}; // Based on CLDR formats:
// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
// See also explanations: http://cldr.unicode.org/translation/date-time
// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x

function getDateFormatter(format) {
  if (DATE_FORMATS[format]) {
    return DATE_FORMATS[format];
  }

  var formatter;

  switch (format) {
    // Era name (AD/BC)
    case 'G':
    case 'GG':
    case 'GGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);
      break;

    case 'GGGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);
      break;

    case 'GGGGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);
      break;
    // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)

    case 'y':
      formatter = dateGetter(DateType.FullYear, 1, 0, false, true);
      break;
    // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)

    case 'yy':
      formatter = dateGetter(DateType.FullYear, 2, 0, true, true);
      break;
    // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)

    case 'yyy':
      formatter = dateGetter(DateType.FullYear, 3, 0, false, true);
      break;
    // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)

    case 'yyyy':
      formatter = dateGetter(DateType.FullYear, 4, 0, false, true);
      break;
    // Month of the year (1-12), numeric

    case 'M':
    case 'L':
      formatter = dateGetter(DateType.Month, 1, 1);
      break;

    case 'MM':
    case 'LL':
      formatter = dateGetter(DateType.Month, 2, 1);
      break;
    // Month of the year (January, ...), string, format

    case 'MMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);
      break;

    case 'MMMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);
      break;

    case 'MMMMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);
      break;
    // Month of the year (January, ...), string, standalone

    case 'LLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);
      break;

    case 'LLLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);
      break;

    case 'LLLLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);
      break;
    // Week of the year (1, ... 52)

    case 'w':
      formatter = weekGetter(1);
      break;

    case 'ww':
      formatter = weekGetter(2);
      break;
    // Week of the month (1, ...)

    case 'W':
      formatter = weekGetter(1, true);
      break;
    // Day of the month (1-31)

    case 'd':
      formatter = dateGetter(DateType.Date, 1);
      break;

    case 'dd':
      formatter = dateGetter(DateType.Date, 2);
      break;
    // Day of the Week

    case 'E':
    case 'EE':
    case 'EEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);
      break;

    case 'EEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);
      break;

    case 'EEEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);
      break;

    case 'EEEEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);
      break;
    // Generic period of the day (am-pm)

    case 'a':
    case 'aa':
    case 'aaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);
      break;

    case 'aaaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);
      break;

    case 'aaaaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);
      break;
    // Extended period of the day (midnight, at night, ...), standalone

    case 'b':
    case 'bb':
    case 'bbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);
      break;

    case 'bbbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);
      break;

    case 'bbbbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);
      break;
    // Extended period of the day (midnight, night, ...), standalone

    case 'B':
    case 'BB':
    case 'BBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);
      break;

    case 'BBBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);
      break;

    case 'BBBBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);
      break;
    // Hour in AM/PM, (1-12)

    case 'h':
      formatter = dateGetter(DateType.Hours, 1, -12);
      break;

    case 'hh':
      formatter = dateGetter(DateType.Hours, 2, -12);
      break;
    // Hour of the day (0-23)

    case 'H':
      formatter = dateGetter(DateType.Hours, 1);
      break;
    // Hour in day, padded (00-23)

    case 'HH':
      formatter = dateGetter(DateType.Hours, 2);
      break;
    // Minute of the hour (0-59)

    case 'm':
      formatter = dateGetter(DateType.Minutes, 1);
      break;

    case 'mm':
      formatter = dateGetter(DateType.Minutes, 2);
      break;
    // Second of the minute (0-59)

    case 's':
      formatter = dateGetter(DateType.Seconds, 1);
      break;

    case 'ss':
      formatter = dateGetter(DateType.Seconds, 2);
      break;
    // Fractional second

    case 'S':
      formatter = dateGetter(DateType.FractionalSeconds, 1);
      break;

    case 'SS':
      formatter = dateGetter(DateType.FractionalSeconds, 2);
      break;

    case 'SSS':
      formatter = dateGetter(DateType.FractionalSeconds, 3);
      break;
    // Timezone ISO8601 short format (-0430)

    case 'Z':
    case 'ZZ':
    case 'ZZZ':
      formatter = timeZoneGetter(ZoneWidth.Short);
      break;
    // Timezone ISO8601 extended format (-04:30)

    case 'ZZZZZ':
      formatter = timeZoneGetter(ZoneWidth.Extended);
      break;
    // Timezone GMT short format (GMT+4)

    case 'O':
    case 'OO':
    case 'OOO': // Should be location, but fallback to format O instead because we don't have the data yet

    case 'z':
    case 'zz':
    case 'zzz':
      formatter = timeZoneGetter(ZoneWidth.ShortGMT);
      break;
    // Timezone GMT long format (GMT+0430)

    case 'OOOO':
    case 'ZZZZ': // Should be location, but fallback to format O instead because we don't have the data yet

    case 'zzzz':
      formatter = timeZoneGetter(ZoneWidth.Long);
      break;

    default:
      return null;
  }

  DATE_FORMATS[format] = formatter;
  return formatter;
}

function timezoneToOffset(timezone, fallback) {
  // Support: IE 9-11 only, Edge 13-15+
  // IE/Edge do not "understand" colon (`:`) in timezone
  timezone = timezone.replace(/:/g, '');
  var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;
  return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;
}

function addDateMinutes(date, minutes) {
  date = new Date(date.getTime());
  date.setMinutes(date.getMinutes() + minutes);
  return date;
}

function convertTimezoneToLocal(date, timezone, reverse) {
  var reverseValue = reverse ? -1 : 1;
  var dateTimezoneOffset = date.getTimezoneOffset();
  var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
  return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));
}
/**
 * Converts a value to date.
 *
 * Supported input formats:
 * - `Date`
 * - number: timestamp
 * - string: numeric (e.g. "1234"), ISO and date strings in a format supported by
 *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).
 *   Note: ISO strings without time return a date without timeoffset.
 *
 * Throws if unable to convert to a date.
 */


function toDate(value) {
  if (isDate(value)) {
    return value;
  }

  if (typeof value === 'number' && !isNaN(value)) {
    return new Date(value);
  }

  if (typeof value === 'string') {
    value = value.trim();
    var parsedNb = parseFloat(value); // any string that only contains numbers, like "1234" but not like "1234hello"

    if (!isNaN(value - parsedNb)) {
      return new Date(parsedNb);
    }

    if (/^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)) {
      /* For ISO Strings without time the day, month and year must be extracted from the ISO String
      before Date creation to avoid time offset and errors in the new Date.
      If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
      date, some browsers (e.g. IE 9) will throw an invalid Date error.
      If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the timeoffset
      is applied.
      Note: ISO months are 0 for January, 1 for February, ... */
      var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(value.split('-').map(function (val) {
        return +val;
      }), 3),
          y = _a[0],
          m = _a[1],
          d = _a[2];

      return new Date(y, m - 1, d);
    }

    var match = void 0;

    if (match = value.match(ISO8601_DATE_REGEX)) {
      return isoStringToDate(match);
    }
  }

  var date = new Date(value);

  if (!isDate(date)) {
    throw new Error("Unable to convert \"" + value + "\" into a date");
  }

  return date;
}
/**
 * Converts a date in ISO8601 to a Date.
 * Used instead of `Date.parse` because of browser discrepancies.
 */


function isoStringToDate(match) {
  var date = new Date(0);
  var tzHour = 0;
  var tzMin = 0; // match[8] means that the string contains "Z" (UTC) or a timezone like "+01:00" or "+0100"

  var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;
  var timeSetter = match[8] ? date.setUTCHours : date.setHours; // if there is a timezone defined like "+01:00" or "+0100"

  if (match[9]) {
    tzHour = Number(match[9] + match[10]);
    tzMin = Number(match[9] + match[11]);
  }

  dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));
  var h = Number(match[4] || 0) - tzHour;
  var m = Number(match[5] || 0) - tzMin;
  var s = Number(match[6] || 0);
  var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);
  timeSetter.call(date, h, m, s, ms);
  return date;
}

function isDate(value) {
  return value instanceof Date && !isNaN(value.valueOf());
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NUMBER_FORMAT_REGEXP = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
var MAX_DIGITS = 22;
var DECIMAL_SEP = '.';
var ZERO_CHAR = '0';
var PATTERN_SEP = ';';
var GROUP_SEP = ',';
var DIGIT_CHAR = '#';
var CURRENCY_CHAR = '¤';
var PERCENT_CHAR = '%';
/**
 * Transforms a number to a locale string based on a style and a format
 */

function formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent) {
  if (isPercent === void 0) {
    isPercent = false;
  }

  var formattedText = '';
  var isZero = false;

  if (!isFinite(value)) {
    formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);
  } else {
    var parsedNumber = parseNumber(value);

    if (isPercent) {
      parsedNumber = toPercent(parsedNumber);
    }

    var minInt = pattern.minInt;
    var minFraction = pattern.minFrac;
    var maxFraction = pattern.maxFrac;

    if (digitsInfo) {
      var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);

      if (parts === null) {
        throw new Error(digitsInfo + " is not a valid digit info");
      }

      var minIntPart = parts[1];
      var minFractionPart = parts[3];
      var maxFractionPart = parts[5];

      if (minIntPart != null) {
        minInt = parseIntAutoRadix(minIntPart);
      }

      if (minFractionPart != null) {
        minFraction = parseIntAutoRadix(minFractionPart);
      }

      if (maxFractionPart != null) {
        maxFraction = parseIntAutoRadix(maxFractionPart);
      } else if (minFractionPart != null && minFraction > maxFraction) {
        maxFraction = minFraction;
      }
    }

    roundNumber(parsedNumber, minFraction, maxFraction);
    var digits = parsedNumber.digits;
    var integerLen = parsedNumber.integerLen;
    var exponent = parsedNumber.exponent;
    var decimals = [];
    isZero = digits.every(function (d) {
      return !d;
    }); // pad zeros for small numbers

    for (; integerLen < minInt; integerLen++) {
      digits.unshift(0);
    } // pad zeros for small numbers


    for (; integerLen < 0; integerLen++) {
      digits.unshift(0);
    } // extract decimals digits


    if (integerLen > 0) {
      decimals = digits.splice(integerLen, digits.length);
    } else {
      decimals = digits;
      digits = [0];
    } // format the integer digits with grouping separators


    var groups = [];

    if (digits.length >= pattern.lgSize) {
      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));
    }

    while (digits.length > pattern.gSize) {
      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));
    }

    if (digits.length) {
      groups.unshift(digits.join(''));
    }

    formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol)); // append the decimal digits

    if (decimals.length) {
      formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');
    }

    if (exponent) {
      formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;
    }
  }

  if (value < 0 && !isZero) {
    formattedText = pattern.negPre + formattedText + pattern.negSuf;
  } else {
    formattedText = pattern.posPre + formattedText + pattern.posSuf;
  }

  return formattedText;
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as currency using locale rules.
 *
 * Use `currency` to format a number as currency.
 *
 * Where:
 * - `value` is a number.
 * - `locale` is a `string` defining the locale to use.
 * - `currency` is the string that represents the currency, it can be its symbol or its name.
 * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such
 *    as `USD` for the US dollar and `EUR` for the euro.
 * - `digitInfo` See {@link DecimalPipe} for more details.
 *
 *
 */


function formatCurrency(value, locale, currency, currencyCode, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);
  pattern.maxFrac = pattern.minFrac;
  var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);
  return res.replace(CURRENCY_CHAR, currency) // if we have 2 time the currency character, the second one is ignored
  .replace(CURRENCY_CHAR, '');
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as a percentage according to locale rules.
 *
 * Where:
 * - `value` is a number.
 * - `locale` is a `string` defining the locale to use.
 * - `digitInfo` See {@link DecimalPipe} for more details.
 *
 *
 */


function formatPercent(value, locale, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);
  return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as text. Group sizing and separator and other locale-specific
 * configurations are based on the locale.
 *
 * Where:
 * - `value` is a number.
 * - `locale` is a `string` defining the locale to use.
 * - `digitInfo` See {@link DecimalPipe} for more details.
 *
 *
 */


function formatNumber(value, locale, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);
}

function parseNumberFormat(format, minusSign) {
  if (minusSign === void 0) {
    minusSign = '-';
  }

  var p = {
    minInt: 1,
    minFrac: 0,
    maxFrac: 0,
    posPre: '',
    posSuf: '',
    negPre: '',
    negSuf: '',
    gSize: 0,
    lgSize: 0
  };
  var patternParts = format.split(PATTERN_SEP);
  var positive = patternParts[0];
  var negative = patternParts[1];
  var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ? positive.split(DECIMAL_SEP) : [positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1), positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)],
      integer = positiveParts[0],
      fraction = positiveParts[1] || '';
  p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));

  for (var i = 0; i < fraction.length; i++) {
    var ch = fraction.charAt(i);

    if (ch === ZERO_CHAR) {
      p.minFrac = p.maxFrac = i + 1;
    } else if (ch === DIGIT_CHAR) {
      p.maxFrac = i + 1;
    } else {
      p.posSuf += ch;
    }
  }

  var groups = integer.split(GROUP_SEP);
  p.gSize = groups[1] ? groups[1].length : 0;
  p.lgSize = groups[2] || groups[1] ? (groups[2] || groups[1]).length : 0;

  if (negative) {
    var trunkLen = positive.length - p.posPre.length - p.posSuf.length,
        pos = negative.indexOf(DIGIT_CHAR);
    p.negPre = negative.substr(0, pos).replace(/'/g, '');
    p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');
  } else {
    p.negPre = minusSign + p.posPre;
    p.negSuf = p.posSuf;
  }

  return p;
} // Transforms a parsed number into a percentage by multiplying it by 100


function toPercent(parsedNumber) {
  // if the number is 0, don't do anything
  if (parsedNumber.digits[0] === 0) {
    return parsedNumber;
  } // Getting the current number of decimals


  var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;

  if (parsedNumber.exponent) {
    parsedNumber.exponent += 2;
  } else {
    if (fractionLen === 0) {
      parsedNumber.digits.push(0, 0);
    } else if (fractionLen === 1) {
      parsedNumber.digits.push(0);
    }

    parsedNumber.integerLen += 2;
  }

  return parsedNumber;
}
/**
 * Parses a number.
 * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/
 */


function parseNumber(num) {
  var numStr = Math.abs(num) + '';
  var exponent = 0,
      digits,
      integerLen;
  var i, j, zeros; // Decimal point?

  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {
    numStr = numStr.replace(DECIMAL_SEP, '');
  } // Exponential form?


  if ((i = numStr.search(/e/i)) > 0) {
    // Work out the exponent.
    if (integerLen < 0) integerLen = i;
    integerLen += +numStr.slice(i + 1);
    numStr = numStr.substring(0, i);
  } else if (integerLen < 0) {
    // There was no decimal point or exponent so it is an integer.
    integerLen = numStr.length;
  } // Count the number of leading zeros.


  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) {
    /* empty */
  }

  if (i === (zeros = numStr.length)) {
    // The digits are all zero.
    digits = [0];
    integerLen = 1;
  } else {
    // Count the number of trailing zeros
    zeros--;

    while (numStr.charAt(zeros) === ZERO_CHAR) {
      zeros--;
    } // Trailing zeros are insignificant so ignore them


    integerLen -= i;
    digits = []; // Convert string to array of digits without leading/trailing zeros.

    for (j = 0; i <= zeros; i++, j++) {
      digits[j] = Number(numStr.charAt(i));
    }
  } // If the number overflows the maximum allowed digits then use an exponent.


  if (integerLen > MAX_DIGITS) {
    digits = digits.splice(0, MAX_DIGITS - 1);
    exponent = integerLen - 1;
    integerLen = 1;
  }

  return {
    digits: digits,
    exponent: exponent,
    integerLen: integerLen
  };
}
/**
 * Round the parsed number to the specified number of decimal places
 * This function changes the parsedNumber in-place
 */


function roundNumber(parsedNumber, minFrac, maxFrac) {
  if (minFrac > maxFrac) {
    throw new Error("The minimum number of digits after fraction (" + minFrac + ") is higher than the maximum (" + maxFrac + ").");
  }

  var digits = parsedNumber.digits;
  var fractionLen = digits.length - parsedNumber.integerLen;
  var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac); // The index of the digit to where rounding is to occur

  var roundAt = fractionSize + parsedNumber.integerLen;
  var digit = digits[roundAt];

  if (roundAt > 0) {
    // Drop fractional digits beyond `roundAt`
    digits.splice(Math.max(parsedNumber.integerLen, roundAt)); // Set non-fractional digits beyond `roundAt` to 0

    for (var j = roundAt; j < digits.length; j++) {
      digits[j] = 0;
    }
  } else {
    // We rounded to zero so reset the parsedNumber
    fractionLen = Math.max(0, fractionLen);
    parsedNumber.integerLen = 1;
    digits.length = Math.max(1, roundAt = fractionSize + 1);
    digits[0] = 0;

    for (var i = 1; i < roundAt; i++) {
      digits[i] = 0;
    }
  }

  if (digit >= 5) {
    if (roundAt - 1 < 0) {
      for (var k = 0; k > roundAt; k--) {
        digits.unshift(0);
        parsedNumber.integerLen++;
      }

      digits.unshift(1);
      parsedNumber.integerLen++;
    } else {
      digits[roundAt - 1]++;
    }
  } // Pad out with zeros to get the required fraction length


  for (; fractionLen < Math.max(0, fractionSize); fractionLen++) {
    digits.push(0);
  }

  var dropTrailingZeros = fractionSize !== 0; // Minimal length = nb of decimals required + current nb of integers
  // Any number besides that is optional and can be removed if it's a trailing 0

  var minLen = minFrac + parsedNumber.integerLen; // Do any carrying, e.g. a digit was rounded up to 10

  var carry = digits.reduceRight(function (carry, d, i, digits) {
    d = d + carry;
    digits[i] = d < 10 ? d : d - 10; // d % 10

    if (dropTrailingZeros) {
      // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)
      if (digits[i] === 0 && i >= minLen) {
        digits.pop();
      } else {
        dropTrailingZeros = false;
      }
    }

    return d >= 10 ? 1 : 0; // Math.floor(d / 10);
  }, 0);

  if (carry) {
    digits.unshift(carry);
    parsedNumber.integerLen++;
  }
}

function parseIntAutoRadix(text) {
  var result = parseInt(text);

  if (isNaN(result)) {
    throw new Error('Invalid integer literal when parsing ' + text);
  }

  return result;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @deprecated from v5
 */


var DEPRECATED_PLURAL_FN = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('UseV4Plurals');
/**
 * @experimental
 */

var NgLocalization =
/** @class */
function () {
  function NgLocalization() {}

  return NgLocalization;
}();
/**
 * Returns the plural category for a given value.
 * - "=value" when the case exists,
 * - the plural category otherwise
 */


function getPluralCategory(value, cases, ngLocalization, locale) {
  var key = "=" + value;

  if (cases.indexOf(key) > -1) {
    return key;
  }

  key = ngLocalization.getPluralCategory(value, locale);

  if (cases.indexOf(key) > -1) {
    return key;
  }

  if (cases.indexOf('other') > -1) {
    return 'other';
  }

  throw new Error("No plural message found for value \"" + value + "\"");
}
/**
 * Returns the plural case based on the locale
 *
 * @experimental
 */


var NgLocaleLocalization =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__extends"])(NgLocaleLocalization, _super);

  function NgLocaleLocalization(locale,
  /** @deprecated from v5 */
  deprecatedPluralFn) {
    var _this = _super.call(this) || this;

    _this.locale = locale;
    _this.deprecatedPluralFn = deprecatedPluralFn;
    return _this;
  }

  NgLocaleLocalization.prototype.getPluralCategory = function (value, locale) {
    var plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) : getLocalePluralCase(locale || this.locale)(value);

    switch (plural) {
      case Plural.Zero:
        return 'zero';

      case Plural.One:
        return 'one';

      case Plural.Two:
        return 'two';

      case Plural.Few:
        return 'few';

      case Plural.Many:
        return 'many';

      default:
        return 'other';
    }
  };

  NgLocaleLocalization = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(DEPRECATED_PLURAL_FN)), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String, Object])], NgLocaleLocalization);
  return NgLocaleLocalization;
}(NgLocalization);
/**
 * Returns the plural case based on the locale
 *
 * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts
 * @experimental
 */


function getPluralCase(locale, nLike) {
  // TODO(vicb): lazy compute
  if (typeof nLike === 'string') {
    nLike = parseInt(nLike, 10);
  }

  var n = nLike;
  var nDecimal = n.toString().replace(/^[^.]*\.?/, '');
  var i = Math.floor(Math.abs(n));
  var v = nDecimal.length;
  var f = parseInt(nDecimal, 10);
  var t = parseInt(n.toString().replace(/^[^.]*\.?|0+$/g, ''), 10) || 0;
  var lang = locale.split('-')[0].toLowerCase();

  switch (lang) {
    case 'af':
    case 'asa':
    case 'az':
    case 'bem':
    case 'bez':
    case 'bg':
    case 'brx':
    case 'ce':
    case 'cgg':
    case 'chr':
    case 'ckb':
    case 'ee':
    case 'el':
    case 'eo':
    case 'es':
    case 'eu':
    case 'fo':
    case 'fur':
    case 'gsw':
    case 'ha':
    case 'haw':
    case 'hu':
    case 'jgo':
    case 'jmc':
    case 'ka':
    case 'kk':
    case 'kkj':
    case 'kl':
    case 'ks':
    case 'ksb':
    case 'ky':
    case 'lb':
    case 'lg':
    case 'mas':
    case 'mgo':
    case 'ml':
    case 'mn':
    case 'nb':
    case 'nd':
    case 'ne':
    case 'nn':
    case 'nnh':
    case 'nyn':
    case 'om':
    case 'or':
    case 'os':
    case 'ps':
    case 'rm':
    case 'rof':
    case 'rwk':
    case 'saq':
    case 'seh':
    case 'sn':
    case 'so':
    case 'sq':
    case 'ta':
    case 'te':
    case 'teo':
    case 'tk':
    case 'tr':
    case 'ug':
    case 'uz':
    case 'vo':
    case 'vun':
    case 'wae':
    case 'xog':
      if (n === 1) return Plural.One;
      return Plural.Other;

    case 'ak':
    case 'ln':
    case 'mg':
    case 'pa':
    case 'ti':
      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;
      return Plural.Other;

    case 'am':
    case 'as':
    case 'bn':
    case 'fa':
    case 'gu':
    case 'hi':
    case 'kn':
    case 'mr':
    case 'zu':
      if (i === 0 || n === 1) return Plural.One;
      return Plural.Other;

    case 'ar':
      if (n === 0) return Plural.Zero;
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;
      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;
      return Plural.Other;

    case 'ast':
    case 'ca':
    case 'de':
    case 'en':
    case 'et':
    case 'fi':
    case 'fy':
    case 'gl':
    case 'it':
    case 'nl':
    case 'sv':
    case 'sw':
    case 'ur':
    case 'yi':
      if (i === 1 && v === 0) return Plural.One;
      return Plural.Other;

    case 'be':
      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;
      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 && !(n % 100 >= 12 && n % 100 <= 14)) return Plural.Few;
      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14) return Plural.Many;
      return Plural.Other;

    case 'br':
      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;
      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;
      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) && !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 || n % 100 >= 90 && n % 100 <= 99)) return Plural.Few;
      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;
      return Plural.Other;

    case 'bs':
    case 'hr':
    case 'sr':
      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11)) return Plural.One;
      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && !(i % 100 >= 12 && i % 100 <= 14) || f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 && !(f % 100 >= 12 && f % 100 <= 14)) return Plural.Few;
      return Plural.Other;

    case 'cs':
    case 'sk':
      if (i === 1 && v === 0) return Plural.One;
      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;
      if (!(v === 0)) return Plural.Many;
      return Plural.Other;

    case 'cy':
      if (n === 0) return Plural.Zero;
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      if (n === 3) return Plural.Few;
      if (n === 6) return Plural.Many;
      return Plural.Other;

    case 'da':
      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;
      return Plural.Other;

    case 'dsb':
    case 'hsb':
      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;
      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;
      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4) return Plural.Few;
      return Plural.Other;

    case 'ff':
    case 'fr':
    case 'hy':
    case 'kab':
      if (i === 0 || i === 1) return Plural.One;
      return Plural.Other;

    case 'fil':
      if (v === 0 && (i === 1 || i === 2 || i === 3) || v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) || !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9)) return Plural.One;
      return Plural.Other;

    case 'ga':
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;
      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;
      return Plural.Other;

    case 'gd':
      if (n === 1 || n === 11) return Plural.One;
      if (n === 2 || n === 12) return Plural.Two;
      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;
      return Plural.Other;

    case 'gv':
      if (v === 0 && i % 10 === 1) return Plural.One;
      if (v === 0 && i % 10 === 2) return Plural.Two;
      if (v === 0 && (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80)) return Plural.Few;
      if (!(v === 0)) return Plural.Many;
      return Plural.Other;

    case 'he':
      if (i === 1 && v === 0) return Plural.One;
      if (i === 2 && v === 0) return Plural.Two;
      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;
      return Plural.Other;

    case 'is':
      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;
      return Plural.Other;

    case 'ksh':
      if (n === 0) return Plural.Zero;
      if (n === 1) return Plural.One;
      return Plural.Other;

    case 'kw':
    case 'naq':
    case 'se':
    case 'smn':
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      return Plural.Other;

    case 'lag':
      if (n === 0) return Plural.Zero;
      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;
      return Plural.Other;

    case 'lt':
      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;
      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.Few;
      if (!(f === 0)) return Plural.Many;
      return Plural.Other;

    case 'lv':
    case 'prg':
      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 || v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19) return Plural.Zero;
      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) || !(v === 2) && f % 10 === 1) return Plural.One;
      return Plural.Other;

    case 'mk':
      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;
      return Plural.Other;

    case 'mt':
      if (n === 1) return Plural.One;
      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10) return Plural.Few;
      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;
      return Plural.Other;

    case 'pl':
      if (i === 1 && v === 0) return Plural.One;
      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && !(i % 100 >= 12 && i % 100 <= 14)) return Plural.Few;
      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 || v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 || v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14) return Plural.Many;
      return Plural.Other;

    case 'pt':
      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;
      return Plural.Other;

    case 'ro':
      if (i === 1 && v === 0) return Plural.One;
      if (!(v === 0) || n === 0 || !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19) return Plural.Few;
      return Plural.Other;

    case 'ru':
    case 'uk':
      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;
      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && !(i % 100 >= 12 && i % 100 <= 14)) return Plural.Few;
      if (v === 0 && i % 10 === 0 || v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 || v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14) return Plural.Many;
      return Plural.Other;

    case 'shi':
      if (i === 0 || n === 1) return Plural.One;
      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;
      return Plural.Other;

    case 'si':
      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;
      return Plural.Other;

    case 'sl':
      if (v === 0 && i % 100 === 1) return Plural.One;
      if (v === 0 && i % 100 === 2) return Plural.Two;
      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0)) return Plural.Few;
      return Plural.Other;

    case 'tzm':
      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99) return Plural.One;
      return Plural.Other;
    // When there is no specification, the default is always "other"
    // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules
    // > other (required—general plural form — also used if the language only has a single form)

    default:
      return Plural.Other;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function parseCookieValue(cookieStr, name) {
  var e_1, _a;

  name = encodeURIComponent(name);

  try {
    for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__values"])(cookieStr.split(';')), _c = _b.next(); !_c.done; _c = _b.next()) {
      var cookie = _c.value;
      var eqIndex = cookie.indexOf('=');

      var _d = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], 2),
          cookieName = _d[0],
          cookieValue = _d[1];

      if (cookieName.trim() === name) {
        return decodeURIComponent(cookieValue);
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return null;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 *     <some-element [ngClass]="'first second'">...</some-element>
 *
 *     <some-element [ngClass]="['first', 'second']">...</some-element>
 *
 *     <some-element [ngClass]="{'first': true, 'second': true, 'third': false}">...</some-element>
 *
 *     <some-element [ngClass]="stringExp|arrayExp|objExp">...</some-element>
 *
 *     <some-element [ngClass]="{'class1 class2 class3' : true}">...</some-element>
 * ```
 *
 * @description
 *
 * Adds and removes CSS classes on an HTML element.
 *
 * The CSS classes are updated as follows, depending on the type of the expression evaluation:
 * - `string` - the CSS classes listed in the string (space delimited) are added,
 * - `Array` - the CSS classes declared as Array elements are added,
 * - `Object` - keys are CSS classes that get added when the expression given in the value
 *              evaluates to a truthy value, otherwise they are removed.
 *
 *
 */


var NgClass =
/** @class */
function () {
  function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {
    this._iterableDiffers = _iterableDiffers;
    this._keyValueDiffers = _keyValueDiffers;
    this._ngEl = _ngEl;
    this._renderer = _renderer;
    this._initialClasses = [];
  }

  Object.defineProperty(NgClass.prototype, "klass", {
    set: function set(value) {
      this._removeClasses(this._initialClasses);

      this._initialClasses = typeof value === 'string' ? value.split(/\s+/) : [];

      this._applyClasses(this._initialClasses);

      this._applyClasses(this._rawClass);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgClass.prototype, "ngClass", {
    set: function set(value) {
      this._removeClasses(this._rawClass);

      this._applyClasses(this._initialClasses);

      this._iterableDiffer = null;
      this._keyValueDiffer = null;
      this._rawClass = typeof value === 'string' ? value.split(/\s+/) : value;

      if (this._rawClass) {
        if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵisListLikeIterable"])(this._rawClass)) {
          this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();
        } else {
          this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();
        }
      }
    },
    enumerable: true,
    configurable: true
  });

  NgClass.prototype.ngDoCheck = function () {
    if (this._iterableDiffer) {
      var iterableChanges = this._iterableDiffer.diff(this._rawClass);

      if (iterableChanges) {
        this._applyIterableChanges(iterableChanges);
      }
    } else if (this._keyValueDiffer) {
      var keyValueChanges = this._keyValueDiffer.diff(this._rawClass);

      if (keyValueChanges) {
        this._applyKeyValueChanges(keyValueChanges);
      }
    }
  };

  NgClass.prototype._applyKeyValueChanges = function (changes) {
    var _this = this;

    changes.forEachAddedItem(function (record) {
      return _this._toggleClass(record.key, record.currentValue);
    });
    changes.forEachChangedItem(function (record) {
      return _this._toggleClass(record.key, record.currentValue);
    });
    changes.forEachRemovedItem(function (record) {
      if (record.previousValue) {
        _this._toggleClass(record.key, false);
      }
    });
  };

  NgClass.prototype._applyIterableChanges = function (changes) {
    var _this = this;

    changes.forEachAddedItem(function (record) {
      if (typeof record.item === 'string') {
        _this._toggleClass(record.item, true);
      } else {
        throw new Error("NgClass can only toggle CSS classes expressed as strings, got " + Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵstringify"])(record.item));
      }
    });
    changes.forEachRemovedItem(function (record) {
      return _this._toggleClass(record.item, false);
    });
  };
  /**
   * Applies a collection of CSS classes to the DOM element.
   *
   * For argument of type Set and Array CSS class names contained in those collections are always
   * added.
   * For argument of type Map CSS class name in the map's key is toggled based on the value (added
   * for truthy and removed for falsy).
   */


  NgClass.prototype._applyClasses = function (rawClassVal) {
    var _this = this;

    if (rawClassVal) {
      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {
        rawClassVal.forEach(function (klass) {
          return _this._toggleClass(klass, true);
        });
      } else {
        Object.keys(rawClassVal).forEach(function (klass) {
          return _this._toggleClass(klass, !!rawClassVal[klass]);
        });
      }
    }
  };
  /**
   * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup
   * purposes.
   */


  NgClass.prototype._removeClasses = function (rawClassVal) {
    var _this = this;

    if (rawClassVal) {
      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {
        rawClassVal.forEach(function (klass) {
          return _this._toggleClass(klass, false);
        });
      } else {
        Object.keys(rawClassVal).forEach(function (klass) {
          return _this._toggleClass(klass, false);
        });
      }
    }
  };

  NgClass.prototype._toggleClass = function (klass, enabled) {
    var _this = this;

    klass = klass.trim();

    if (klass) {
      klass.split(/\s+/g).forEach(function (klass) {
        if (enabled) {
          _this._renderer.addClass(_this._ngEl.nativeElement, klass);
        } else {
          _this._renderer.removeClass(_this._ngEl.nativeElement, klass);
        }
      });
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('class'), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", String), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], NgClass.prototype, "klass", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Object])], NgClass.prototype, "ngClass", null);

  NgClass = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngClass]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]])], NgClass);
  return NgClass;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Instantiates a single {@link Component} type and inserts its Host View into current View.
 * `NgComponentOutlet` provides a declarative approach for dynamic component creation.
 *
 * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and
 * any existing component will get destroyed.
 *
 * @usageNotes
 *
 * ### Fine tune control
 *
 * You can control the component creation process by using the following optional attributes:
 *
 * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for
 * the Component. Defaults to the injector of the current view container.
 *
 * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content
 * section of the component, if exists.
 *
 * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other
 * module, then load a component from that module.
 *
 * ### Syntax
 *
 * Simple
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression"></ng-container>
 * ```
 *
 * Customized injector/content
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   injector: injectorExpression;
 *                                   content: contentNodesExpression;">
 * </ng-container>
 * ```
 *
 * Customized ngModuleFactory
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   ngModuleFactory: moduleFactory;">
 * </ng-container>
 * ```
 *
 * ### A simple example
 *
 * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}
 *
 * A more complete example with additional options:
 *
 * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}

 * A more complete example with ngModuleFactory:
 *
 * {@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}
 *
 * @experimental
 * @ngModule CommonModule
 */


var NgComponentOutlet =
/** @class */
function () {
  function NgComponentOutlet(_viewContainerRef) {
    this._viewContainerRef = _viewContainerRef;
    this._componentRef = null;
    this._moduleRef = null;
  }

  NgComponentOutlet.prototype.ngOnChanges = function (changes) {
    this._viewContainerRef.clear();

    this._componentRef = null;

    if (this.ngComponentOutlet) {
      var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;

      if (changes['ngComponentOutletNgModuleFactory']) {
        if (this._moduleRef) this._moduleRef.destroy();

        if (this.ngComponentOutletNgModuleFactory) {
          var parentModule = elInjector.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleRef"]);
          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);
        } else {
          this._moduleRef = null;
        }
      }

      var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver : elInjector.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]);
      var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);
      this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);
    }
  };

  NgComponentOutlet.prototype.ngOnDestroy = function () {
    if (this._moduleRef) this._moduleRef.destroy();
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["Type"])], NgComponentOutlet.prototype, "ngComponentOutlet", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])], NgComponentOutlet.prototype, "ngComponentOutletInjector", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Array)], NgComponentOutlet.prototype, "ngComponentOutletContent", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleFactory"])], NgComponentOutlet.prototype, "ngComponentOutletNgModuleFactory", void 0);

  NgComponentOutlet = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngComponentOutlet]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]])], NgComponentOutlet);
  return NgComponentOutlet;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NgForOfContext =
/** @class */
function () {
  function NgForOfContext($implicit, ngForOf, index, count) {
    this.$implicit = $implicit;
    this.ngForOf = ngForOf;
    this.index = index;
    this.count = count;
  }

  Object.defineProperty(NgForOfContext.prototype, "first", {
    get: function get() {
      return this.index === 0;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOfContext.prototype, "last", {
    get: function get() {
      return this.index === this.count - 1;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOfContext.prototype, "even", {
    get: function get() {
      return this.index % 2 === 0;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOfContext.prototype, "odd", {
    get: function get() {
      return !this.even;
    },
    enumerable: true,
    configurable: true
  });
  return NgForOfContext;
}();
/**
 * The `NgForOf` directive instantiates a template once per item from an iterable. The context
 * for each instantiated template inherits from the outer context with the given loop variable
 * set to the current item from the iterable.
 *
 * @usageNotes
 *
 * ### Local Variables
 *
 * `NgForOf` provides several exported values that can be aliased to local variables:
 *
 * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).
 * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is
 * more complex then a property access, for example when using the async pipe (`userStreams |
 * async`).
 * - `index: number`: The index of the current item in the iterable.
 * - `first: boolean`: True when the item is the first item in the iterable.
 * - `last: boolean`: True when the item is the last item in the iterable.
 * - `even: boolean`: True when the item has an even index in the iterable.
 * - `odd: boolean`: True when the item has an odd index in the iterable.
 *
 * ```
 * <li *ngFor="let user of userObservable | async as users; index as i; first as isFirst">
 *    {{i}}/{{users.length}}. {{user}} <span *ngIf="isFirst">default</span>
 * </li>
 * ```
 *
 * ### Change Propagation
 *
 * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:
 *
 * * When an item is added, a new instance of the template is added to the DOM.
 * * When an item is removed, its template instance is removed from the DOM.
 * * When items are reordered, their respective templates are reordered in the DOM.
 * * Otherwise, the DOM element for that item will remain the same.
 *
 * Angular uses object identity to track insertions and deletions within the iterator and reproduce
 * those changes in the DOM. This has important implications for animations and any stateful
 * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can
 * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state
 * such as user input.
 *
 * It is possible for the identities of elements in the iterator to change while the data does not.
 * This can happen, for example, if the iterator produced from an RPC to the server, and that
 * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with
 * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old
 * elements were deleted and all new elements inserted). This is an expensive operation and should
 * be avoided if possible.
 *
 * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.
 * `trackBy` takes a function which has two arguments: `index` and `item`.
 * If `trackBy` is given, Angular tracks changes by the return value of the function.
 *
 * ### Syntax
 *
 * - `<li *ngFor="let item of items; index as i; trackBy: trackByFn">...</li>`
 *
 * With `<ng-template>` element:
 *
 * ```
 * <ng-template ngFor let-item [ngForOf]="items" let-i="index" [ngForTrackBy]="trackByFn">
 *   <li>...</li>
 * </ng-template>
 * ```
 *
 * ### Example
 *
 * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed
 * example.
 *
 * @ngModule CommonModule
 */


var NgForOf =
/** @class */
function () {
  function NgForOf(_viewContainer, _template, _differs) {
    this._viewContainer = _viewContainer;
    this._template = _template;
    this._differs = _differs;
    this._ngForOfDirty = true;
    this._differ = null;
  }

  Object.defineProperty(NgForOf.prototype, "ngForOf", {
    set: function set(ngForOf) {
      this._ngForOf = ngForOf;
      this._ngForOfDirty = true;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOf.prototype, "ngForTrackBy", {
    get: function get() {
      return this._trackByFn;
    },
    set: function set(fn) {
      if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["isDevMode"])() && fn != null && typeof fn !== 'function') {
        // TODO(vicb): use a log service once there is a public one available
        if (console && console.warn) {
          console.warn("trackBy must be a function, but received " + JSON.stringify(fn) + ". " + "See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.");
        }
      }

      this._trackByFn = fn;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOf.prototype, "ngForTemplate", {
    set: function set(value) {
      // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1
      // The current type is too restrictive; a template that just uses index, for example,
      // should be acceptable.
      if (value) {
        this._template = value;
      }
    },
    enumerable: true,
    configurable: true
  });

  NgForOf.prototype.ngDoCheck = function () {
    if (this._ngForOfDirty) {
      this._ngForOfDirty = false; // React on ngForOf changes only once all inputs have been initialized

      var value = this._ngForOf;

      if (!this._differ && value) {
        try {
          this._differ = this._differs.find(value).create(this.ngForTrackBy);
        } catch (e) {
          throw new Error("Cannot find a differ supporting object '" + value + "' of type '" + getTypeNameForDebugging(value) + "'. NgFor only supports binding to Iterables such as Arrays.");
        }
      }
    }

    if (this._differ) {
      var changes = this._differ.diff(this._ngForOf);

      if (changes) this._applyChanges(changes);
    }
  };

  NgForOf.prototype._applyChanges = function (changes) {
    var _this = this;

    var insertTuples = [];
    changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {
      if (item.previousIndex == null) {
        var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext(null, _this._ngForOf, -1, -1), currentIndex);

        var tuple = new RecordViewTuple(item, view);
        insertTuples.push(tuple);
      } else if (currentIndex == null) {
        _this._viewContainer.remove(adjustedPreviousIndex);
      } else {
        var view = _this._viewContainer.get(adjustedPreviousIndex);

        _this._viewContainer.move(view, currentIndex);

        var tuple = new RecordViewTuple(item, view);
        insertTuples.push(tuple);
      }
    });

    for (var i = 0; i < insertTuples.length; i++) {
      this._perViewChange(insertTuples[i].view, insertTuples[i].record);
    }

    for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {
      var viewRef = this._viewContainer.get(i);

      viewRef.context.index = i;
      viewRef.context.count = ilen;
      viewRef.context.ngForOf = this._ngForOf;
    }

    changes.forEachIdentityChange(function (record) {
      var viewRef = _this._viewContainer.get(record.currentIndex);

      viewRef.context.$implicit = record.item;
    });
  };

  NgForOf.prototype._perViewChange = function (view, record) {
    view.context.$implicit = record.item;
  };
  /**
   * Assert the correct type of the context for the template that `NgForOf` will render.
   *
   * The presence of this method is a signal to the Ivy template type check compiler that the
   * `NgForOf` structural directive renders its template with a specific context type.
   */


  NgForOf.ngTemplateContextGuard = function (dir, ctx) {
    return true;
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Object])], NgForOf.prototype, "ngForOf", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Function])], NgForOf.prototype, "ngForTrackBy", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]])], NgForOf.prototype, "ngForTemplate", null);

  NgForOf = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngFor][ngForOf]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"]])], NgForOf);
  return NgForOf;
}();

var RecordViewTuple =
/** @class */
function () {
  function RecordViewTuple(record, view) {
    this.record = record;
    this.view = view;
  }

  return RecordViewTuple;
}();

function getTypeNameForDebugging(type) {
  return type['name'] || _typeof(type);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Conditionally includes a template based on the value of an `expression`.
 *
 * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place
 * when expression is truthy or falsy respectively. Typically the:
 *  - `then` template is the inline template of `ngIf` unless bound to a different value.
 *  - `else` template is blank unless it is bound.
 *
 *
 * @usageNotes
 *
 * ### Most common usage
 *
 * The most common usage of the `ngIf` directive is to conditionally show the inline template as
 * seen in this example:
 * {@example common/ngIf/ts/module.ts region='NgIfSimple'}
 *
 * ### Showing an alternative template using `else`
 *
 * If it is necessary to display a template when the `expression` is falsy use the `else` template
 * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.
 * The template can be defined anywhere in the component view but is typically placed right after
 * `ngIf` for readability.
 *
 * {@example common/ngIf/ts/module.ts region='NgIfElse'}
 *
 * ### Using non-inlined `then` template
 *
 * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using
 * a binding (just like `else`). Because `then` and `else` are bindings, the template references can
 * change at runtime as shown in this example.
 *
 * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}
 *
 * ### Storing conditional result in a variable
 *
 * A common pattern is that we need to show a set of properties from the same object. If the
 * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against
 * dereferencing a `null` value. This is especially the case when waiting on async data such as
 * when using the `async` pipe as shown in following example:
 *
 * ```
 * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!
 * ```
 *
 * There are several inefficiencies in the above example:
 *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the
 *    example above.
 *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.
 *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.
 *  - We have to place the `async` pipe in parenthesis.
 *
 * A better way to do this is to use `ngIf` and store the result of the condition in a local
 * variable as shown in the the example below:
 *
 * {@example common/ngIf/ts/module.ts region='NgIfAs'}
 *
 * Notice that:
 *  - We use only one `async` pipe and hence only one subscription gets created.
 *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.
 *  - The local `user` can then be bound repeatedly in a more efficient way.
 *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only
 *    display the data if `userStream` returns a value.
 *  - We can display an alternative template while waiting for the data.
 *
 * ### Syntax
 *
 * Simple form:
 * - `<div *ngIf="condition">...</div>`
 * - `<ng-template [ngIf]="condition"><div>...</div></ng-template>`
 *
 * Form with an else block:
 * ```
 * <div *ngIf="condition; else elseBlock">...</div>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * Form with a `then` and `else` block:
 * ```
 * <div *ngIf="condition; then thenBlock else elseBlock"></div>
 * <ng-template #thenBlock>...</ng-template>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * Form with storing the value locally:
 * ```
 * <div *ngIf="condition as value; else elseBlock">{{value}}</div>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * @ngModule CommonModule
 */


var NgIf =
/** @class */
function () {
  function NgIf(_viewContainer, templateRef) {
    this._viewContainer = _viewContainer;
    this._context = new NgIfContext();
    this._thenTemplateRef = null;
    this._elseTemplateRef = null;
    this._thenViewRef = null;
    this._elseViewRef = null;
    this._thenTemplateRef = templateRef;
  }

  Object.defineProperty(NgIf.prototype, "ngIf", {
    set: function set(condition) {
      this._context.$implicit = this._context.ngIf = condition;

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgIf.prototype, "ngIfThen", {
    set: function set(templateRef) {
      assertTemplate('ngIfThen', templateRef);
      this._thenTemplateRef = templateRef;
      this._thenViewRef = null; // clear previous view if any.

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgIf.prototype, "ngIfElse", {
    set: function set(templateRef) {
      assertTemplate('ngIfElse', templateRef);
      this._elseTemplateRef = templateRef;
      this._elseViewRef = null; // clear previous view if any.

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });

  NgIf.prototype._updateView = function () {
    if (this._context.$implicit) {
      if (!this._thenViewRef) {
        this._viewContainer.clear();

        this._elseViewRef = null;

        if (this._thenTemplateRef) {
          this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);
        }
      }
    } else {
      if (!this._elseViewRef) {
        this._viewContainer.clear();

        this._thenViewRef = null;

        if (this._elseTemplateRef) {
          this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);
        }
      }
    }
  };
  /**
   * Assert the correct type of the expression bound to the `ngIf` input within the template.
   *
   * The presence of this method is a signal to the Ivy template type check compiler that when the
   * `NgIf` structural directive renders its template, the type of the expression bound to `ngIf`
   * should be narrowed in some way. For `NgIf`, it is narrowed to be non-null, which allows the
   * strictNullChecks feature of TypeScript to work with `NgIf`.
   */


  NgIf.ngTemplateGuard_ngIf = function (dir, expr) {
    return true;
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Object])], NgIf.prototype, "ngIf", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Object])], NgIf.prototype, "ngIfThen", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Object])], NgIf.prototype, "ngIfElse", null);

  NgIf = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngIf]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]])], NgIf);
  return NgIf;
}();

var NgIfContext =
/** @class */
function () {
  function NgIfContext() {
    this.$implicit = null;
    this.ngIf = null;
  }

  return NgIfContext;
}();

function assertTemplate(property, templateRef) {
  var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);

  if (!isTemplateRefOrNull) {
    throw new Error(property + " must be a TemplateRef, but received '" + Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵstringify"])(templateRef) + "'.");
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SwitchView =
/** @class */
function () {
  function SwitchView(_viewContainerRef, _templateRef) {
    this._viewContainerRef = _viewContainerRef;
    this._templateRef = _templateRef;
    this._created = false;
  }

  SwitchView.prototype.create = function () {
    this._created = true;

    this._viewContainerRef.createEmbeddedView(this._templateRef);
  };

  SwitchView.prototype.destroy = function () {
    this._created = false;

    this._viewContainerRef.clear();
  };

  SwitchView.prototype.enforceState = function (created) {
    if (created && !this._created) {
      this.create();
    } else if (!created && this._created) {
      this.destroy();
    }
  };

  return SwitchView;
}();
/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 *     <container-element [ngSwitch]="switch_expression">
 *       <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *       <some-element *ngSwitchCase="match_expression_2">...</some-element>
 *       <some-other-element *ngSwitchCase="match_expression_3">...</some-other-element>
 *       <ng-container *ngSwitchCase="match_expression_3">
 *         <!-- use a ng-container to group multiple root nodes -->
 *         <inner-element></inner-element>
 *         <inner-other-element></inner-other-element>
 *       </ng-container>
 *       <some-element *ngSwitchDefault>...</some-element>
 *     </container-element>
 * ```
 * @description
 *
 * Adds / removes DOM sub-trees when the nest match expressions matches the switch expression.
 *
 * `NgSwitch` stamps out nested views when their match expression value matches the value of the
 * switch expression.
 *
 * In other words:
 * - you define a container element (where you place the directive with a switch expression on the
 * `[ngSwitch]="..."` attribute)
 * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view
 * root elements.
 *
 * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will
 * be preserved at the location.
 *
 * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the
 * expression is evaluated.
 * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is
 * stamped out.
 *
 *
 */


var NgSwitch =
/** @class */
function () {
  function NgSwitch() {
    this._defaultUsed = false;
    this._caseCount = 0;
    this._lastCaseCheckIndex = 0;
    this._lastCasesMatched = false;
  }

  Object.defineProperty(NgSwitch.prototype, "ngSwitch", {
    set: function set(newValue) {
      this._ngSwitch = newValue;

      if (this._caseCount === 0) {
        this._updateDefaultCases(true);
      }
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  NgSwitch.prototype._addCase = function () {
    return this._caseCount++;
  };
  /** @internal */


  NgSwitch.prototype._addDefault = function (view) {
    if (!this._defaultViews) {
      this._defaultViews = [];
    }

    this._defaultViews.push(view);
  };
  /** @internal */


  NgSwitch.prototype._matchCase = function (value) {
    var matched = value == this._ngSwitch;
    this._lastCasesMatched = this._lastCasesMatched || matched;
    this._lastCaseCheckIndex++;

    if (this._lastCaseCheckIndex === this._caseCount) {
      this._updateDefaultCases(!this._lastCasesMatched);

      this._lastCaseCheckIndex = 0;
      this._lastCasesMatched = false;
    }

    return matched;
  };

  NgSwitch.prototype._updateDefaultCases = function (useDefault) {
    if (this._defaultViews && useDefault !== this._defaultUsed) {
      this._defaultUsed = useDefault;

      for (var i = 0; i < this._defaultViews.length; i++) {
        var defaultView = this._defaultViews[i];
        defaultView.enforceState(useDefault);
      }
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Object])], NgSwitch.prototype, "ngSwitch", null);

  NgSwitch = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngSwitch]'
  })], NgSwitch);
  return NgSwitch;
}();
/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 * </container-element>
 *```
 * @description
 *
 * Creates a view that will be added/removed from the parent {@link NgSwitch} when the
 * given expression evaluate to respectively the same/different value as the switch
 * expression.
 *
 * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch
 * expression.
 *
 * If multiple match expressions match the switch expression value, all of them are displayed.
 *
 * See {@link NgSwitch} for more details and example.
 *
 *
 */


var NgSwitchCase =
/** @class */
function () {
  function NgSwitchCase(viewContainer, templateRef, ngSwitch) {
    this.ngSwitch = ngSwitch;

    ngSwitch._addCase();

    this._view = new SwitchView(viewContainer, templateRef);
  }

  NgSwitchCase.prototype.ngDoCheck = function () {
    this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object)], NgSwitchCase.prototype, "ngSwitchCase", void 0);

  NgSwitchCase = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngSwitchCase]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"], NgSwitch])], NgSwitchCase);
  return NgSwitchCase;
}();
/**
 * @ngModule CommonModule
 * @usageNotes
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *   <some-other-element *ngSwitchDefault>...</some-other-element>
 * </container-element>
 * ```
 *
 * @description
 *
 * Creates a view that is added to the parent {@link NgSwitch} when no case expressions
 * match the switch expression.
 *
 * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch
 * expression.
 *
 * See {@link NgSwitch} for more details and example.
 *
 *
 */


var NgSwitchDefault =
/** @class */
function () {
  function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {
    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));
  }

  NgSwitchDefault = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngSwitchDefault]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"], NgSwitch])], NgSwitchDefault);
  return NgSwitchDefault;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 * <some-element [ngPlural]="value">
 *   <ng-template ngPluralCase="=0">there is nothing</ng-template>
 *   <ng-template ngPluralCase="=1">there is one</ng-template>
 *   <ng-template ngPluralCase="few">there are a few</ng-template>
 * </some-element>
 * ```
 *
 * @description
 *
 * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.
 *
 * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees
 * that match the switch expression's pluralization category.
 *
 * To use this directive you must provide a container element that sets the `[ngPlural]` attribute
 * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their
 * expression:
 * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value
 *   matches the switch expression exactly,
 * - otherwise, the view will be treated as a "category match", and will only display if exact
 *   value matches aren't found and the value maps to its category for the defined locale.
 *
 * See http://cldr.unicode.org/index/cldr-spec/plural-rules
 *
 * @experimental
 */


var NgPlural =
/** @class */
function () {
  function NgPlural(_localization) {
    this._localization = _localization;
    this._caseViews = {};
  }

  Object.defineProperty(NgPlural.prototype, "ngPlural", {
    set: function set(value) {
      this._switchValue = value;

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });

  NgPlural.prototype.addCase = function (value, switchView) {
    this._caseViews[value] = switchView;
  };

  NgPlural.prototype._updateView = function () {
    this._clearViews();

    var cases = Object.keys(this._caseViews);
    var key = getPluralCategory(this._switchValue, cases, this._localization);

    this._activateView(this._caseViews[key]);
  };

  NgPlural.prototype._clearViews = function () {
    if (this._activeView) this._activeView.destroy();
  };

  NgPlural.prototype._activateView = function (view) {
    if (view) {
      this._activeView = view;

      this._activeView.create();
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Number), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Number])], NgPlural.prototype, "ngPlural", null);

  NgPlural = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngPlural]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [NgLocalization])], NgPlural);
  return NgPlural;
}();
/**
 * @ngModule CommonModule
 *
 * @description
 *
 * Creates a view that will be added/removed from the parent {@link NgPlural} when the
 * given expression matches the plural expression according to CLDR rules.
 *
 * @usageNotes
 * ```
 * <some-element [ngPlural]="value">
 *   <ng-template ngPluralCase="=0">...</ng-template>
 *   <ng-template ngPluralCase="other">...</ng-template>
 * </some-element>
 *```
 *
 * See {@link NgPlural} for more details and example.
 *
 * @experimental
 */


var NgPluralCase =
/** @class */
function () {
  function NgPluralCase(value, template, viewContainer, ngPlural) {
    this.value = value;
    var isANumber = !isNaN(Number(value));
    ngPlural.addCase(isANumber ? "=" + value : value, new SwitchView(viewContainer, template));
  }

  NgPluralCase = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngPluralCase]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Attribute"])('ngPluralCase')), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String, _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], NgPlural])], NgPluralCase);
  return NgPluralCase;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 * <some-element [ngStyle]="{'font-style': styleExp}">...</some-element>
 *
 * <some-element [ngStyle]="{'max-width.px': widthExp}">...</some-element>
 *
 * <some-element [ngStyle]="objExp">...</some-element>
 * ```
 *
 * @description
 *
 * Update an HTML element styles.
 *
 * The styles are updated according to the value of the expression evaluation:
 * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),
 * - values are the values assigned to those properties (expressed in the given unit).
 *
 *
 */


var NgStyle =
/** @class */
function () {
  function NgStyle(_differs, _ngEl, _renderer) {
    this._differs = _differs;
    this._ngEl = _ngEl;
    this._renderer = _renderer;
  }

  Object.defineProperty(NgStyle.prototype, "ngStyle", {
    set: function set(values) {
      this._ngStyle = values;

      if (!this._differ && values) {
        this._differ = this._differs.find(values).create();
      }
    },
    enumerable: true,
    configurable: true
  });

  NgStyle.prototype.ngDoCheck = function () {
    if (this._differ) {
      var changes = this._differ.diff(this._ngStyle);

      if (changes) {
        this._applyChanges(changes);
      }
    }
  };

  NgStyle.prototype._applyChanges = function (changes) {
    var _this = this;

    changes.forEachRemovedItem(function (record) {
      return _this._setStyle(record.key, null);
    });
    changes.forEachAddedItem(function (record) {
      return _this._setStyle(record.key, record.currentValue);
    });
    changes.forEachChangedItem(function (record) {
      return _this._setStyle(record.key, record.currentValue);
    });
  };

  NgStyle.prototype._setStyle = function (nameAndUnit, value) {
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(nameAndUnit.split('.'), 2),
        name = _a[0],
        unit = _a[1];

    value = value != null && unit ? "" + value + unit : value;

    if (value != null) {
      this._renderer.setStyle(this._ngEl.nativeElement, name, value);
    } else {
      this._renderer.removeStyle(this._ngEl.nativeElement, name);
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [Object])], NgStyle.prototype, "ngStyle", null);

  NgStyle = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngStyle]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]])], NgStyle);
  return NgStyle;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @description
 *
 * Inserts an embedded view from a prepared `TemplateRef`.
 *
 * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.
 * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding
 * by the local template `let` declarations.
 *
 * @usageNotes
 * ```
 * <ng-container *ngTemplateOutlet="templateRefExp; context: contextExp"></ng-container>
 * ```
 *
 * Using the key `$implicit` in the context object will set its value as default.
 *
 * ### Example
 *
 * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}
 *
 */


var NgTemplateOutlet =
/** @class */
function () {
  function NgTemplateOutlet(_viewContainerRef) {
    this._viewContainerRef = _viewContainerRef;
  }

  NgTemplateOutlet.prototype.ngOnChanges = function (changes) {
    var recreateView = this._shouldRecreateView(changes);

    if (recreateView) {
      if (this._viewRef) {
        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));
      }

      if (this.ngTemplateOutlet) {
        this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);
      }
    } else {
      if (this._viewRef && this.ngTemplateOutletContext) {
        this._updateExistingContext(this.ngTemplateOutletContext);
      }
    }
  };
  /**
   * We need to re-create existing embedded view if:
   * - templateRef has changed
   * - context has changes
   *
   * We mark context object as changed when the corresponding object
   * shape changes (new properties are added or existing properties are removed).
   * In other words we consider context with the same properties as "the same" even
   * if object reference changes (see https://github.com/angular/angular/issues/13407).
   */


  NgTemplateOutlet.prototype._shouldRecreateView = function (changes) {
    var ctxChange = changes['ngTemplateOutletContext'];
    return !!changes['ngTemplateOutlet'] || ctxChange && this._hasContextShapeChanged(ctxChange);
  };

  NgTemplateOutlet.prototype._hasContextShapeChanged = function (ctxChange) {
    var e_1, _a;

    var prevCtxKeys = Object.keys(ctxChange.previousValue || {});
    var currCtxKeys = Object.keys(ctxChange.currentValue || {});

    if (prevCtxKeys.length === currCtxKeys.length) {
      try {
        for (var currCtxKeys_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__values"])(currCtxKeys), currCtxKeys_1_1 = currCtxKeys_1.next(); !currCtxKeys_1_1.done; currCtxKeys_1_1 = currCtxKeys_1.next()) {
          var propName = currCtxKeys_1_1.value;

          if (prevCtxKeys.indexOf(propName) === -1) {
            return true;
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (currCtxKeys_1_1 && !currCtxKeys_1_1.done && (_a = currCtxKeys_1.return)) _a.call(currCtxKeys_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      return false;
    } else {
      return true;
    }
  };

  NgTemplateOutlet.prototype._updateExistingContext = function (ctx) {
    var e_2, _a;

    try {
      for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__values"])(Object.keys(ctx)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var propName = _c.value;
        this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", Object)], NgTemplateOutlet.prototype, "ngTemplateOutletContext", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"])], NgTemplateOutlet.prototype, "ngTemplateOutlet", void 0);

  NgTemplateOutlet = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngTemplateOutlet]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]])], NgTemplateOutlet);
  return NgTemplateOutlet;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of Angular directives that are likely to be used in each and every Angular
 * application.
 */


var COMMON_DIRECTIVES = [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function invalidPipeArgumentError(type, value) {
  return Error("InvalidPipeArgument: '" + value + "' for pipe '" + Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵstringify"])(type) + "'");
}

var NumberFormatter =
/** @class */
function () {
  function NumberFormatter() {}

  NumberFormatter.format = function (num, locale, style, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var minimumIntegerDigits = opts.minimumIntegerDigits,
        minimumFractionDigits = opts.minimumFractionDigits,
        maximumFractionDigits = opts.maximumFractionDigits,
        currency = opts.currency,
        _a = opts.currencyAsSymbol,
        currencyAsSymbol = _a === void 0 ? false : _a;
    var options = {
      minimumIntegerDigits: minimumIntegerDigits,
      minimumFractionDigits: minimumFractionDigits,
      maximumFractionDigits: maximumFractionDigits,
      style: NumberFormatStyle[style].toLowerCase()
    };

    if (style == NumberFormatStyle.Currency) {
      options.currency = typeof currency == 'string' ? currency : undefined;
      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';
    }

    return new Intl.NumberFormat(locale, options).format(num);
  };

  return NumberFormatter;
}();

var DATE_FORMATS_SPLIT$1 = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;
var PATTERN_ALIASES = {
  // Keys are quoted so they do not get renamed during closure compilation.
  'yMMMdjms': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1), digitCondition('hour', 1), digitCondition('minute', 1), digitCondition('second', 1)])),
  'yMdjm': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1), digitCondition('hour', 1), digitCondition('minute', 1)])),
  'yMMMMEEEEd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4), digitCondition('day', 1)])),
  'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),
  'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),
  'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),
  'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),
  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))
};
var DATE_FORMATS$1 = {
  // Keys are quoted so they do not get renamed.
  'yyyy': datePartGetterFactory(digitCondition('year', 4)),
  'yy': datePartGetterFactory(digitCondition('year', 2)),
  'y': datePartGetterFactory(digitCondition('year', 1)),
  'MMMM': datePartGetterFactory(nameCondition('month', 4)),
  'MMM': datePartGetterFactory(nameCondition('month', 3)),
  'MM': datePartGetterFactory(digitCondition('month', 2)),
  'M': datePartGetterFactory(digitCondition('month', 1)),
  'LLLL': datePartGetterFactory(nameCondition('month', 4)),
  'L': datePartGetterFactory(nameCondition('month', 1)),
  'dd': datePartGetterFactory(digitCondition('day', 2)),
  'd': datePartGetterFactory(digitCondition('day', 1)),
  'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),
  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),
  'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),
  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),
  'jj': datePartGetterFactory(digitCondition('hour', 2)),
  'j': datePartGetterFactory(digitCondition('hour', 1)),
  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),
  'm': datePartGetterFactory(digitCondition('minute', 1)),
  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),
  's': datePartGetterFactory(digitCondition('second', 1)),
  // while ISO 8601 requires fractions to be prefixed with `.` or `,`
  // we can be just safely rely on using `sss` since we currently don't support single or two digit
  // fractions
  'sss': datePartGetterFactory(digitCondition('second', 3)),
  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),
  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),
  'EE': datePartGetterFactory(nameCondition('weekday', 2)),
  'E': datePartGetterFactory(nameCondition('weekday', 1)),
  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),
  'Z': timeZoneGetter$1('short'),
  'z': timeZoneGetter$1('long'),
  'ww': datePartGetterFactory({}),
  // first Thursday of the year. not support ?
  'w': datePartGetterFactory({}),
  // of the year not support ?
  'G': datePartGetterFactory(nameCondition('era', 1)),
  'GG': datePartGetterFactory(nameCondition('era', 2)),
  'GGG': datePartGetterFactory(nameCondition('era', 3)),
  'GGGG': datePartGetterFactory(nameCondition('era', 4))
};

function digitModifier(inner) {
  return function (date, locale) {
    var result = inner(date, locale);
    return result.length == 1 ? '0' + result : result;
  };
}

function hourClockExtractor(inner) {
  return function (date, locale) {
    return inner(date, locale).split(' ')[1];
  };
}

function hourExtractor(inner) {
  return function (date, locale) {
    return inner(date, locale).split(' ')[0];
  };
}

function intlDateFormat(date, locale, options) {
  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\u200e\u200f]/g, '');
}

function timeZoneGetter$1(timezone) {
  // To workaround `Intl` API restriction for single timezone let format with 24 hours
  var options = {
    hour: '2-digit',
    hour12: false,
    timeZoneName: timezone
  };
  return function (date, locale) {
    var result = intlDateFormat(date, locale, options); // Then extract first 3 letters that related to hours

    return result ? result.substring(3) : '';
  };
}

function hour12Modify(options, value) {
  options.hour12 = value;
  return options;
}

function digitCondition(prop, len) {
  var result = {};
  result[prop] = len === 2 ? '2-digit' : 'numeric';
  return result;
}

function nameCondition(prop, len) {
  var result = {};

  if (len < 4) {
    result[prop] = len > 1 ? 'short' : 'narrow';
  } else {
    result[prop] = 'long';
  }

  return result;
}

function combine(options) {
  return options.reduce(function (merged, opt) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, merged, opt);
  }, {});
}

function datePartGetterFactory(ret) {
  return function (date, locale) {
    return intlDateFormat(date, locale, ret);
  };
}

var DATE_FORMATTER_CACHE = new Map();

function dateFormatter(format, date, locale) {
  var fn = PATTERN_ALIASES[format];
  if (fn) return fn(date, locale);
  var cacheKey = format;
  var parts = DATE_FORMATTER_CACHE.get(cacheKey);

  if (!parts) {
    parts = [];
    var match = void 0;
    DATE_FORMATS_SPLIT$1.exec(format);
    var _format = format;

    while (_format) {
      match = DATE_FORMATS_SPLIT$1.exec(_format);

      if (match) {
        parts = parts.concat(match.slice(1));
        _format = parts.pop();
      } else {
        parts.push(_format);
        _format = null;
      }
    }

    DATE_FORMATTER_CACHE.set(cacheKey, parts);
  }

  return parts.reduce(function (text, part) {
    var fn = DATE_FORMATS$1[part];
    return text + (fn ? fn(date, locale) : partToTime(part));
  }, '');
}

function partToTime(part) {
  return part === '\'\'' ? '\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
}

var DateFormatter =
/** @class */
function () {
  function DateFormatter() {}

  DateFormatter.format = function (date, locale, pattern) {
    return dateFormatter(pattern, date, locale);
  };

  return DateFormatter;
}();
/**
* @license
* Copyright Google Inc. All Rights Reserved.
*
* Use of this source code is governed by an MIT-style license that can be
* found in the LICENSE file at https://angular.io/license
  */

/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a date according to locale rules.
 *
 * Where:
 * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string
 * (https://www.w3.org/TR/NOTE-datetime).
 * - `format` indicates which date/time components to include. The format can be predefined as
 *   shown below or custom as shown in the table.
 *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)
 *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)
 *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)
 *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)
 *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)
 *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)
 *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)
 *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)
 *
 *
 *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |
 *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|
 *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |
 *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |
 *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |
 *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |
 *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |
 *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |
 *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|
 *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |
 *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |
 *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |
 *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |
 *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |
 *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |
 *
 * In javascript, only the components specified will be respected (not the ordering,
 * punctuations, ...) and details of the formatting will be dependent on the locale.
 *
 * Timezone of the formatted text will be the local system timezone of the end-user's machine.
 *
 * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not
 * applied and the formatted text will have the same day, month and year of the expression.
 *
 * WARNINGS:
 * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.
 *   Instead users should treat the date as an immutable object and change the reference when the
 *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run
 *   which would be an expensive operation).
 * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera
 *   browsers.
 *
 * @usageNotes
 *
 * ### Examples
 *
 * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)
 * in the _local_ time and locale is 'en-US':
 *
 * {@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}
 *
 *
 */


var DeprecatedDatePipe =
/** @class */
function () {
  function DeprecatedDatePipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedDatePipe_1 = DeprecatedDatePipe;

  DeprecatedDatePipe.prototype.transform = function (value, pattern) {
    if (pattern === void 0) {
      pattern = 'mediumDate';
    }

    if (value == null || value === '' || value !== value) return null;
    var date;

    if (typeof value === 'string') {
      value = value.trim();
    }

    if (isDate$1(value)) {
      date = value;
    } else if (!isNaN(value - parseFloat(value))) {
      date = new Date(parseFloat(value));
    } else if (typeof value === 'string' && /^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)) {
      /**
       * For ISO Strings without time the day, month and year must be extracted from the ISO String
       * before Date creation to avoid time offset and errors in the new Date.
       * If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
       * date, some browsers (e.g. IE 9) will throw an invalid Date error
       * If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the
       * timeoffset
       * is applied
       * Note: ISO months are 0 for January, 1 for February, ...
       */
      var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(value.split('-').map(function (val) {
        return parseInt(val, 10);
      }), 3),
          y = _a[0],
          m = _a[1],
          d = _a[2];

      date = new Date(y, m - 1, d);
    } else {
      date = new Date(value);
    }

    if (!isDate$1(date)) {
      var match = void 0;

      if (typeof value === 'string' && (match = value.match(ISO8601_DATE_REGEX))) {
        date = isoStringToDate(match);
      } else {
        throw invalidPipeArgumentError(DeprecatedDatePipe_1, value);
      }
    }

    return DateFormatter.format(date, this._locale, DeprecatedDatePipe_1._ALIASES[pattern] || pattern);
  };

  var DeprecatedDatePipe_1;
  /** @internal */

  DeprecatedDatePipe._ALIASES = {
    'medium': 'yMMMdjms',
    'short': 'yMdjm',
    'fullDate': 'yMMMMEEEEd',
    'longDate': 'yMMMMd',
    'mediumDate': 'yMMMd',
    'shortDate': 'yMd',
    'mediumTime': 'jms',
    'shortTime': 'jm'
  };
  DeprecatedDatePipe = DeprecatedDatePipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'date',
    pure: true
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], DeprecatedDatePipe);
  return DeprecatedDatePipe;
}();

function isDate$1(value) {
  return value instanceof Date && !isNaN(value.valueOf());
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function formatNumber$1(pipe, locale, value, style, digits, currency, currencyAsSymbol) {
  if (currency === void 0) {
    currency = null;
  }

  if (currencyAsSymbol === void 0) {
    currencyAsSymbol = false;
  }

  if (value == null) return null; // Convert strings to numbers

  value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;

  if (typeof value !== 'number') {
    throw invalidPipeArgumentError(pipe, value);
  }

  var minInt;
  var minFraction;
  var maxFraction;

  if (style !== NumberFormatStyle.Currency) {
    // rely on Intl default for currency
    minInt = 1;
    minFraction = 0;
    maxFraction = 3;
  }

  if (digits) {
    var parts = digits.match(NUMBER_FORMAT_REGEXP);

    if (parts === null) {
      throw new Error(digits + " is not a valid digit info for number pipes");
    }

    if (parts[1] != null) {
      // min integer digits
      minInt = parseIntAutoRadix(parts[1]);
    }

    if (parts[3] != null) {
      // min fraction digits
      minFraction = parseIntAutoRadix(parts[3]);
    }

    if (parts[5] != null) {
      // max fraction digits
      maxFraction = parseIntAutoRadix(parts[5]);
    }
  }

  return NumberFormatter.format(value, locale, style, {
    minimumIntegerDigits: minInt,
    minimumFractionDigits: minFraction,
    maximumFractionDigits: maxFraction,
    currency: currency,
    currencyAsSymbol: currencyAsSymbol
  });
}
/**
 * Formats a number as text. Group sizing and separator and other locale-specific
 * configurations are based on the active locale.
 *
 * where `expression` is a number:
 *  - `digitInfo` is a `string` which has a following format: <br>
 *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>
 *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.
 *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.
 *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.
 *
 * For more information on the acceptable range for each of these numbers and other
 * details see your native internationalization library.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See [Browser Support](guide/browser-support) for details.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}
 *
 * @ngModule CommonModule
 */


var DeprecatedDecimalPipe =
/** @class */
function () {
  function DeprecatedDecimalPipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedDecimalPipe_1 = DeprecatedDecimalPipe;

  DeprecatedDecimalPipe.prototype.transform = function (value, digits) {
    return formatNumber$1(DeprecatedDecimalPipe_1, this._locale, value, NumberFormatStyle.Decimal, digits);
  };

  var DeprecatedDecimalPipe_1;
  DeprecatedDecimalPipe = DeprecatedDecimalPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'number'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], DeprecatedDecimalPipe);
  return DeprecatedDecimalPipe;
}();
/**
 * @ngModule CommonModule
 *
 * @description
 *
 * Formats a number as percentage according to locale rules.
 *
 * - `digitInfo` See {@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See [Browser Support](guide/browser-support) for details.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}
 *
 *
 */


var DeprecatedPercentPipe =
/** @class */
function () {
  function DeprecatedPercentPipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedPercentPipe_1 = DeprecatedPercentPipe;

  DeprecatedPercentPipe.prototype.transform = function (value, digits) {
    return formatNumber$1(DeprecatedPercentPipe_1, this._locale, value, NumberFormatStyle.Percent, digits);
  };

  var DeprecatedPercentPipe_1;
  DeprecatedPercentPipe = DeprecatedPercentPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'percent'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], DeprecatedPercentPipe);
  return DeprecatedPercentPipe;
}();
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as currency using locale rules.
 *
 * Use `currency` to format a number as currency.
 *
 * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such
 *    as `USD` for the US dollar and `EUR` for the euro.
 * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.
 *   - `true`: use symbol (e.g. `$`).
 *   - `false`(default): use code (e.g. `USD`).
 * - `digitInfo` See {@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See [Browser Support](guide/browser-support) for details.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}
 *
 *
 */


var DeprecatedCurrencyPipe =
/** @class */
function () {
  function DeprecatedCurrencyPipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedCurrencyPipe_1 = DeprecatedCurrencyPipe;

  DeprecatedCurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {
    if (currencyCode === void 0) {
      currencyCode = 'USD';
    }

    if (symbolDisplay === void 0) {
      symbolDisplay = false;
    }

    return formatNumber$1(DeprecatedCurrencyPipe_1, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);
  };

  var DeprecatedCurrencyPipe_1;
  DeprecatedCurrencyPipe = DeprecatedCurrencyPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'currency'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], DeprecatedCurrencyPipe);
  return DeprecatedCurrencyPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of deprecated i18n pipes that require intl api
 *
 * @deprecated from v5
 */


var COMMON_DEPRECATED_I18N_PIPES = [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ObservableStrategy =
/** @class */
function () {
  function ObservableStrategy() {}

  ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {
    return async.subscribe({
      next: updateLatestValue,
      error: function error(e) {
        throw e;
      }
    });
  };

  ObservableStrategy.prototype.dispose = function (subscription) {
    subscription.unsubscribe();
  };

  ObservableStrategy.prototype.onDestroy = function (subscription) {
    subscription.unsubscribe();
  };

  return ObservableStrategy;
}();

var PromiseStrategy =
/** @class */
function () {
  function PromiseStrategy() {}

  PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {
    return async.then(updateLatestValue, function (e) {
      throw e;
    });
  };

  PromiseStrategy.prototype.dispose = function (subscription) {};

  PromiseStrategy.prototype.onDestroy = function (subscription) {};

  return PromiseStrategy;
}();

var _promiseStrategy = new PromiseStrategy();

var _observableStrategy = new ObservableStrategy();
/**
 * @ngModule CommonModule
 * @description
 *
 * Unwraps a value from an asynchronous primitive.
 *
 * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has
 * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for
 * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid
 * potential memory leaks.
 *
 * @usageNotes
 *
 * ### Examples
 *
 * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the
 * promise.
 *
 * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}
 *
 * It's also possible to use `async` with Observables. The example below binds the `time` Observable
 * to the view. The Observable continuously updates the view with the current time.
 *
 * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}
 *
 */


var AsyncPipe =
/** @class */
function () {
  function AsyncPipe(_ref) {
    this._ref = _ref;
    this._latestValue = null;
    this._latestReturnedValue = null;
    this._subscription = null;
    this._obj = null;
    this._strategy = null;
  }

  AsyncPipe_1 = AsyncPipe;

  AsyncPipe.prototype.ngOnDestroy = function () {
    if (this._subscription) {
      this._dispose();
    }
  };

  AsyncPipe.prototype.transform = function (obj) {
    if (!this._obj) {
      if (obj) {
        this._subscribe(obj);
      }

      this._latestReturnedValue = this._latestValue;
      return this._latestValue;
    }

    if (obj !== this._obj) {
      this._dispose();

      return this.transform(obj);
    }

    if (this._latestValue === this._latestReturnedValue) {
      return this._latestReturnedValue;
    }

    this._latestReturnedValue = this._latestValue;
    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["WrappedValue"].wrap(this._latestValue);
  };

  AsyncPipe.prototype._subscribe = function (obj) {
    var _this = this;

    this._obj = obj;
    this._strategy = this._selectStrategy(obj);
    this._subscription = this._strategy.createSubscription(obj, function (value) {
      return _this._updateLatestValue(obj, value);
    });
  };

  AsyncPipe.prototype._selectStrategy = function (obj) {
    if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵisPromise"])(obj)) {
      return _promiseStrategy;
    }

    if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵisObservable"])(obj)) {
      return _observableStrategy;
    }

    throw invalidPipeArgumentError(AsyncPipe_1, obj);
  };

  AsyncPipe.prototype._dispose = function () {
    this._strategy.dispose(this._subscription);

    this._latestValue = null;
    this._latestReturnedValue = null;
    this._subscription = null;
    this._obj = null;
  };

  AsyncPipe.prototype._updateLatestValue = function (async, value) {
    if (async === this._obj) {
      this._latestValue = value;

      this._ref.markForCheck();
    }
  };

  var AsyncPipe_1;
  AsyncPipe = AsyncPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'async',
    pure: false
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])], AsyncPipe);
  return AsyncPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Transforms text to all lower case.
 *
 * @see `UpperCasePipe`
 * @see `TitleCasePipe`
 * @usageNotes
 *
 * The following example defines a view that allows the user to enter
 * text, and then uses the pipe to convert the input text to all lower case.
 *
 * <code-example path="common/pipes/ts/lowerupper_pipe.ts" region='LowerUpperPipe'></code-example>
 *
 * @ngModule CommonModule
 */


var LowerCasePipe =
/** @class */
function () {
  function LowerCasePipe() {}

  LowerCasePipe_1 = LowerCasePipe;
  /**
   * @param value The string to transform to lower case.
   */

  LowerCasePipe.prototype.transform = function (value) {
    if (!value) return value;

    if (typeof value !== 'string') {
      throw invalidPipeArgumentError(LowerCasePipe_1, value);
    }

    return value.toLowerCase();
  };

  var LowerCasePipe_1;
  LowerCasePipe = LowerCasePipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'lowercase'
  })], LowerCasePipe);
  return LowerCasePipe;
}(); //
// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result
// can be achieved by using /\p{L}\S*/gu and also known as Unicode Property Escapes
// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no
// transpilation of this functionality down to ES5 without external tool, the only solution is
// to use already transpiled form. Example can be found here -
// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1
//


var unicodeWordMatch = /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;
/**
 * Transforms text to title case.
 * Capitalizes the first letter of each word, and transforms the
 * rest of the word to lower case.
 * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.
 *
 * @see `LowerCasePipe`
 * @see `UpperCasePipe`
 *
 * @usageNotes
 * The following example shows the result of transforming various strings into title case.
 *
 * <code-example path="common/pipes/ts/titlecase_pipe.ts" region='TitleCasePipe'></code-example>
 *
 * @ngModule CommonModule
 */

var TitleCasePipe =
/** @class */
function () {
  function TitleCasePipe() {}

  TitleCasePipe_1 = TitleCasePipe;
  /**
   * @param value The string to transform to title case.
   */

  TitleCasePipe.prototype.transform = function (value) {
    if (!value) return value;

    if (typeof value !== 'string') {
      throw invalidPipeArgumentError(TitleCasePipe_1, value);
    }

    return value.replace(unicodeWordMatch, function (txt) {
      return txt[0].toUpperCase() + txt.substr(1).toLowerCase();
    });
  };

  var TitleCasePipe_1;
  TitleCasePipe = TitleCasePipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'titlecase'
  })], TitleCasePipe);
  return TitleCasePipe;
}();
/**
 * Transforms text to all upper case.
 * @see `LowerCasePipe`
 * @see `TitleCasePipe`
 *
 * @ngModule CommonModule
 */


var UpperCasePipe =
/** @class */
function () {
  function UpperCasePipe() {}

  UpperCasePipe_1 = UpperCasePipe;
  /**
   * @param value The string to transform to upper case.
   */

  UpperCasePipe.prototype.transform = function (value) {
    if (!value) return value;

    if (typeof value !== 'string') {
      throw invalidPipeArgumentError(UpperCasePipe_1, value);
    }

    return value.toUpperCase();
  };

  var UpperCasePipe_1;
  UpperCasePipe = UpperCasePipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'uppercase'
  })], UpperCasePipe);
  return UpperCasePipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// clang-format off

/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a date value according to locale rules.
 *
 * Only the `en-US` locale data comes with Angular. To localize dates
 * in another language, you must import the corresponding locale data.
 * See the [I18n guide](guide/i18n#i18n-pipes) for more information.
 *
 * @see `formatDate()`
 *
 *
 * @usageNotes
 *
 * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to
 * reformat the date on every change-detection cycle, treat the date as an immutable object
 * and change the reference when the pipe needs to run again.
 *
 * ### Pre-defined format options
 *
 * Examples are given in `en-US` locale.
 *
 * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).
 * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).
 * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM
 * GMT+1`).
 * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at
 * 9:03:01 AM GMT+01:00`).
 * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).
 * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).
 * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).
 * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).
 * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).
 * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).
 * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).
 * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).
 *
 * ### Custom format options
 *
 * You can construct a format string using symbols to specify the components
 * of a date-time value, as described in the following table.
 * Format details depend on the locale.
 * Fields marked with (*) are only available in the extra data set for the given locale.
 *
 *  | Field type         | Format      | Description                                                   | Example Value                                              |
 *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|
 *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |
 *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |
 *  |                    | GGGGG       | Narrow                                                        | A                                                          |
 *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |
 *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |
 *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |
 *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |
 *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |
 *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |
 *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |
 *  |                    | MMMM        | Wide                                                          | September                                                  |
 *  |                    | MMMMM       | Narrow                                                        | S                                                          |
 *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |
 *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |
 *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |
 *  |                    | LLLL        | Wide                                                          | September                                                  |
 *  |                    | LLLLL       | Narrow                                                        | S                                                          |
 *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |
 *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |
 *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |
 *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |
 *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |
 *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |
 *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |
 *  |                    | EEEEE       | Narrow                                                        | T                                                          |
 *  |                    | EEEEEE      | Short                                                         | Tu                                                         |
 *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |
 *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |
 *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |
 *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |
 *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |
 *  |                    | BBBBB       | Narrow                                                        | md                                                         |
 *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |
 *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |
 *  |                    | bbbbb       | Narrow                                                        | md                                                         |
 *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |
 *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |
 *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |
 *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |
 *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |
 *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |
 *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |
 *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |
 *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |
 *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |
 *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |
 *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |
 *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |
 *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |
 *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |
 *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |
 *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |
 *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |
 *
 * Note that timezone correction is not applied to an ISO string that has no time component, such as "2016-09-19"
 *
 * ### Format examples
 *
 * These examples transform a date into various formats,
 * assuming that `dateObj` is a JavaScript `Date` object for
 * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,
 * given in the local time for the `en-US` locale.
 *
 * ```
 * {{ dateObj | date }}               // output is 'Jun 15, 2015'
 * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'
 * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'
 * {{ dateObj | date:'mmss' }}        // output is '43:11'
 * ```
 *
 * ### Usage example
 *
 * The following component uses a date pipe to display the current date in different formats.
 *
 * ```
 * @Component({
 *  selector: 'date-pipe',
 *  template: `<div>
 *    <p>Today is {{today | date}}</p>
 *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>
 *    <p>The time is {{today | date:'h:mm a z'}}</p>
 *  </div>`
 * })
 * // Get the current date and time as a date-time value.
 * export class DatePipeComponent {
 *   today: number = Date.now();
 * }
 * ```
 *
 */
// clang-format on


var DatePipe =
/** @class */
function () {
  function DatePipe(locale) {
    this.locale = locale;
  }

  DatePipe_1 = DatePipe;
  /**
   * @param value The date expression: a `Date` object,  a number
   * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).
   * @param format The date/time components to include, using predefined options or a
   * custom format string.
   * @param timezone A timezone offset (such as `'+0430'`), or a standard
   * UTC/GMT or continental US timezone abbreviation. Default is
   * the local system timezone of the end-user's machine.
   * @param locale A locale code for the locale format rules to use.
   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
   * @returns A date string in the desired format.
   */

  DatePipe.prototype.transform = function (value, format, timezone, locale) {
    if (format === void 0) {
      format = 'mediumDate';
    }

    if (value == null || value === '' || value !== value) return null;

    try {
      return formatDate(value, format, locale || this.locale, timezone);
    } catch (error) {
      throw invalidPipeArgumentError(DatePipe_1, error.message);
    }
  };

  var DatePipe_1;
  DatePipe = DatePipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'date',
    pure: true
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], DatePipe);
  return DatePipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var _INTERPOLATION_REGEXP = /#/g;
/**
 * @ngModule CommonModule
 * @description
 *
 * Maps a value to a string that pluralizes the value according to locale rules.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}
 *
 * @experimental
 */

var I18nPluralPipe =
/** @class */
function () {
  function I18nPluralPipe(_localization) {
    this._localization = _localization;
  }

  I18nPluralPipe_1 = I18nPluralPipe;
  /**
   * @param value the number to be formatted
   * @param pluralMap an object that mimics the ICU format, see
   * http://userguide.icu-project.org/formatparse/messages.
   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
   * default).
   */

  I18nPluralPipe.prototype.transform = function (value, pluralMap, locale) {
    if (value == null) return '';

    if (_typeof(pluralMap) !== 'object' || pluralMap === null) {
      throw invalidPipeArgumentError(I18nPluralPipe_1, pluralMap);
    }

    var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);
    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());
  };

  var I18nPluralPipe_1;
  I18nPluralPipe = I18nPluralPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'i18nPlural',
    pure: true
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [NgLocalization])], I18nPluralPipe);
  return I18nPluralPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Generic selector that displays the string that matches the current value.
 *
 * If none of the keys of the `mapping` match the `value`, then the content
 * of the `other` key is returned when present, otherwise an empty string is returned.
 *
 * @usageNotes
 *
 * ### Example
 *
 * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}
 *
 * @experimental
 */


var I18nSelectPipe =
/** @class */
function () {
  function I18nSelectPipe() {}

  I18nSelectPipe_1 = I18nSelectPipe;
  /**
   * @param value a string to be internationalized.
   * @param mapping an object that indicates the text that should be displayed
   * for different values of the provided `value`.
   */

  I18nSelectPipe.prototype.transform = function (value, mapping) {
    if (value == null) return '';

    if (_typeof(mapping) !== 'object' || typeof value !== 'string') {
      throw invalidPipeArgumentError(I18nSelectPipe_1, mapping);
    }

    if (mapping.hasOwnProperty(value)) {
      return mapping[value];
    }

    if (mapping.hasOwnProperty('other')) {
      return mapping['other'];
    }

    return '';
  };

  var I18nSelectPipe_1;
  I18nSelectPipe = I18nSelectPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'i18nSelect',
    pure: true
  })], I18nSelectPipe);
  return I18nSelectPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Converts a value into its JSON-format representation.  Useful for debugging.
 *
 * @usageNotes
 *
 * The following component uses a JSON pipe to convert an object
 * to JSON format, and displays the string in both formats for comparison.
 *
 * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}
 *
 */


var JsonPipe =
/** @class */
function () {
  function JsonPipe() {}
  /**
   * @param value A value of any type to convert into a JSON-format string.
   */


  JsonPipe.prototype.transform = function (value) {
    return JSON.stringify(value, null, 2);
  };

  JsonPipe = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'json',
    pure: false
  })], JsonPipe);
  return JsonPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function makeKeyValuePair(key, value) {
  return {
    key: key,
    value: value
  };
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Transforms Object or Map into an array of key value pairs.
 *
 * The output array will be ordered by keys.
 * By default the comparator will be by Unicode point value.
 * You can optionally pass a compareFn if your keys are complex types.
 *
 * @usageNotes
 * ### Examples
 *
 * This examples show how an Object or a Map and be iterated by ngFor with the use of this keyvalue
 * pipe.
 *
 * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}
 */


var KeyValuePipe =
/** @class */
function () {
  function KeyValuePipe(differs) {
    this.differs = differs;
  }

  KeyValuePipe.prototype.transform = function (input, compareFn) {
    var _this = this;

    if (compareFn === void 0) {
      compareFn = defaultComparator;
    }

    if (!input || !(input instanceof Map) && _typeof(input) !== 'object') {
      return null;
    }

    if (!this.differ) {
      // make a differ for whatever type we've been passed in
      this.differ = this.differs.find(input).create();
    }

    var differChanges = this.differ.diff(input);

    if (differChanges) {
      this.keyValues = [];
      differChanges.forEachItem(function (r) {
        _this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));
      });
      this.keyValues.sort(compareFn);
    }

    return this.keyValues;
  };

  KeyValuePipe = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'keyvalue',
    pure: false
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"]])], KeyValuePipe);
  return KeyValuePipe;
}();

function defaultComparator(keyValueA, keyValueB) {
  var a = keyValueA.key;
  var b = keyValueB.key; // if same exit with 0;

  if (a === b) return 0; // make sure that undefined are at the end of the sort.

  if (a === undefined) return 1;
  if (b === undefined) return -1; // make sure that nulls are at the end of the sort.

  if (a === null) return 1;
  if (b === null) return -1;

  if (typeof a == 'string' && typeof b == 'string') {
    return a < b ? -1 : 1;
  }

  if (typeof a == 'number' && typeof b == 'number') {
    return a - b;
  }

  if (typeof a == 'boolean' && typeof b == 'boolean') {
    return a < b ? -1 : 1;
  } // `a` and `b` are of different types. Compare their string values.


  var aString = String(a);
  var bString = String(b);
  return aString == bString ? 0 : aString < bString ? -1 : 1;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Transforms a number into a string,
 * formatted according to locale rules that determine group sizing and
 * separator, decimal-point character, and other locale-specific
 * configurations.
 *
 * If no parameters are specified, the function rounds off to the nearest value using this
 * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).
 * The behavior differs from that of the JavaScript ```Math.round()``` function.
 * In the following case for example, the pipe rounds down where
 * ```Math.round()``` rounds up:
 *
 * ```html
 * -2.5 | number:'1.0-0'
 * > -3
 * Math.round(-2.5)
 * > -2
 * ```
 *
 * @see `formatNumber()`
 *
 * @usageNotes
 * The following code shows how the pipe transforms numbers
 * into text strings, according to various format specifications,
 * where the caller's default locale is `en-US`.
 *
 * ### Example
 *
 * <code-example path="common/pipes/ts/number_pipe.ts" region='NumberPipe'></code-example>
 *
 */


var DecimalPipe =
/** @class */
function () {
  function DecimalPipe(_locale) {
    this._locale = _locale;
  }

  DecimalPipe_1 = DecimalPipe;
  /**
   * @param value The number to be formatted.
   * @param digitsInfo Decimal representation options, specified by a string
   * in the following format:<br>
   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
   *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.
   * Default is `1`.
   *   - `minFractionDigits`: The minimum number of digits after the decimal point.
   * Default is `0`.
   *   - `maxFractionDigits`: The maximum number of digits after the decimal point.
   * Default is `3`.
   * @param locale A locale code for the locale format rules to use.
   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
   */

  DecimalPipe.prototype.transform = function (value, digitsInfo, locale) {
    if (isEmpty(value)) return null;
    locale = locale || this._locale;

    try {
      var num = strToNumber(value);
      return formatNumber(num, locale, digitsInfo);
    } catch (error) {
      throw invalidPipeArgumentError(DecimalPipe_1, error.message);
    }
  };

  var DecimalPipe_1;
  DecimalPipe = DecimalPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'number'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], DecimalPipe);
  return DecimalPipe;
}();
/**
 * @ngModule CommonModule
 * @description
 *
 * Transforms a number to a percentage
 * string, formatted according to locale rules that determine group sizing and
 * separator, decimal-point character, and other locale-specific
 * configurations.
 *
 * @see `formatPercent()`
 *
 * @usageNotes
 * The following code shows how the pipe transforms numbers
 * into text strings, according to various format specifications,
 * where the caller's default locale is `en-US`.
 *
 * <code-example path="common/pipes/ts/percent_pipe.ts" region='PercentPipe'></code-example>
 *
 *
 */


var PercentPipe =
/** @class */
function () {
  function PercentPipe(_locale) {
    this._locale = _locale;
  }

  PercentPipe_1 = PercentPipe;
  /**
   *
   * @param value The number to be formatted as a percentage.
   * @param digitsInfo Decimal representation options, specified by a string
   * in the following format:<br>
   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
   *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.
   * Default is `1`.
   *   - `minFractionDigits`: The minimum number of digits after the decimal point.
   * Default is `0`.
   *   - `maxFractionDigits`: The maximum number of digits after the decimal point.
   * Default is `3`.
   * @param locale A locale code for the locale format rules to use.
   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
   */

  PercentPipe.prototype.transform = function (value, digitsInfo, locale) {
    if (isEmpty(value)) return null;
    locale = locale || this._locale;

    try {
      var num = strToNumber(value);
      return formatPercent(num, locale, digitsInfo);
    } catch (error) {
      throw invalidPipeArgumentError(PercentPipe_1, error.message);
    }
  };

  var PercentPipe_1;
  PercentPipe = PercentPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'percent'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], PercentPipe);
  return PercentPipe;
}();
/**
 * @ngModule CommonModule
 * @description
 *
 * Transforms a number to a currency string, formatted according to locale rules
 * that determine group sizing and separator, decimal-point character,
 * and other locale-specific configurations.
 *
 * @see `getCurrencySymbol()`
 * @see `formatCurrency()`
 *
 * @usageNotes
 * The following code shows how the pipe transforms numbers
 * into text strings, according to various format specifications,
 * where the caller's default locale is `en-US`.
 *
 * <code-example path="common/pipes/ts/currency_pipe.ts" region='CurrencyPipe'></code-example>
 *
 *
 */


var CurrencyPipe =
/** @class */
function () {
  function CurrencyPipe(_locale) {
    this._locale = _locale;
  }

  CurrencyPipe_1 = CurrencyPipe;
  /**
   *
   * @param value The number to be formatted as currency.
   * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,
   * such as `USD` for the US dollar and `EUR` for the euro.
   * @param display The format for the currency indicator. One of the following:
   *   - `code`: Show the code (such as `USD`).
   *   - `symbol`(default): Show the symbol (such as `$`).
   *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their
   * currency.
   * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the
   * locale has no narrow symbol, uses the standard symbol for the locale.
   *   - String: Use the given string value instead of a code or a symbol.
   * For example, an empty string will suppress the currency & symbol.
   *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.
   *
   * @param digitsInfo Decimal representation options, specified by a string
   * in the following format:<br>
   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
   *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.
   * Default is `1`.
   *   - `minFractionDigits`: The minimum number of digits after the decimal point.
   * Default is `0`.
   *   - `maxFractionDigits`: The maximum number of digits after the decimal point.
   * Default is `3`.
   * If not provided, the number will be formatted with the proper amount of digits,
   * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.
   * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.
   * @param locale A locale code for the locale format rules to use.
   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
   */

  CurrencyPipe.prototype.transform = function (value, currencyCode, display, digitsInfo, locale) {
    if (display === void 0) {
      display = 'symbol';
    }

    if (isEmpty(value)) return null;
    locale = locale || this._locale;

    if (typeof display === 'boolean') {
      if (console && console.warn) {
        console.warn("Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".");
      }

      display = display ? 'symbol' : 'code';
    }

    var currency = currencyCode || 'USD';

    if (display !== 'code') {
      if (display === 'symbol' || display === 'symbol-narrow') {
        currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);
      } else {
        currency = display;
      }
    }

    try {
      var num = strToNumber(value);
      return formatCurrency(num, locale, currency, currencyCode, digitsInfo);
    } catch (error) {
      throw invalidPipeArgumentError(CurrencyPipe_1, error.message);
    }
  };

  var CurrencyPipe_1;
  CurrencyPipe = CurrencyPipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'currency'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__metadata"])("design:paramtypes", [String])], CurrencyPipe);
  return CurrencyPipe;
}();

function isEmpty(value) {
  return value == null || value === '' || value !== value;
}
/**
 * Transforms a string into a number (if needed).
 */


function strToNumber(value) {
  // Convert strings to numbers
  if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {
    return Number(value);
  }

  if (typeof value !== 'number') {
    throw new Error(value + " is not a number");
  }

  return value;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Creates a new `Array` or `String` containing a subset (slice) of the elements.
 *
 * @usageNotes
 *
 * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`
 * and `String.prototype.slice()`.
 *
 * When operating on an `Array`, the returned `Array` is always a copy even when all
 * the elements are being returned.
 *
 * When operating on a blank value, the pipe returns the blank value.
 *
 * ### List Example
 *
 * This `ngFor` example:
 *
 * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}
 *
 * produces the following:
 *
 * ```html
 * <li>b</li>
 * <li>c</li>
 * ```
 *
 * ### String Examples
 *
 * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}
 *
 */


var SlicePipe =
/** @class */
function () {
  function SlicePipe() {}

  SlicePipe_1 = SlicePipe;
  /**
   * @param value a list or a string to be sliced.
   * @param start the starting index of the subset to return:
   *   - **a positive integer**: return the item at `start` index and all items after
   *     in the list or string expression.
   *   - **a negative integer**: return the item at `start` index from the end and all items after
   *     in the list or string expression.
   *   - **if positive and greater than the size of the expression**: return an empty list or
   * string.
   *   - **if negative and greater than the size of the expression**: return entire list or string.
   * @param end the ending index of the subset to return:
   *   - **omitted**: return all items until the end.
   *   - **if positive**: return all items before `end` index of the list or string.
   *   - **if negative**: return all items before `end` index from the end of the list or string.
   */

  SlicePipe.prototype.transform = function (value, start, end) {
    if (value == null) return value;

    if (!this.supports(value)) {
      throw invalidPipeArgumentError(SlicePipe_1, value);
    }

    return value.slice(start, end);
  };

  SlicePipe.prototype.supports = function (obj) {
    return typeof obj === 'string' || Array.isArray(obj);
  };

  var SlicePipe_1;
  SlicePipe = SlicePipe_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
    name: 'slice',
    pure: false
  })], SlicePipe);
  return SlicePipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of Angular pipes that are likely to be used in each and every application.
 */


var COMMON_PIPES = [AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Note: This does not contain the location providers,
// as they need some platform specific implementations to work.

/**
 * Exports all the basic Angular directives and pipes,
 * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.
 * Re-exported by `BrowserModule`, which is included automatically in the root
 * `AppModule` when you create a new app with the CLI `new` command.
 *
 * * The `providers` options configure the NgModule's injector to provide
 * localization dependencies to members.
 * * The `exports` options make the declared directives and pipes available for import
 * by other NgModules.
 *
 */

var CommonModule =
/** @class */
function () {
  function CommonModule() {}

  CommonModule = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
    declarations: [COMMON_DIRECTIVES, COMMON_PIPES],
    exports: [COMMON_DIRECTIVES, COMMON_PIPES],
    providers: [{
      provide: NgLocalization,
      useClass: NgLocaleLocalization
    }]
  })], CommonModule);
  return CommonModule;
}();

var ɵ0 = getPluralCase;
/**
 * A module that contains the deprecated i18n pipes.
 *
 * @deprecated from v5
 */

var DeprecatedI18NPipesModule =
/** @class */
function () {
  function DeprecatedI18NPipesModule() {}

  DeprecatedI18NPipesModule = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
    declarations: [COMMON_DEPRECATED_I18N_PIPES],
    exports: [COMMON_DEPRECATED_I18N_PIPES],
    providers: [{
      provide: DEPRECATED_PLURAL_FN,
      useValue: ɵ0
    }]
  })], DeprecatedI18NPipesModule);
  return DeprecatedI18NPipesModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A DI Token representing the main rendering context. In a browser this is the DOM Document.
 *
 * Note: Document might not be available in the Application Context when Application and Rendering
 * Contexts are not the same (e.g. when running the application into a Web Worker).
 *
 *
 */


var DOCUMENT = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('DocumentToken');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var PLATFORM_BROWSER_ID = 'browser';
var PLATFORM_SERVER_ID = 'server';
var PLATFORM_WORKER_APP_ID = 'browserWorkerApp';
var PLATFORM_WORKER_UI_ID = 'browserWorkerUi';
/**
 * Returns whether a platform id represents a browser platform.
 * @experimental
 */

function isPlatformBrowser(platformId) {
  return platformId === PLATFORM_BROWSER_ID;
}
/**
 * Returns whether a platform id represents a server platform.
 * @experimental
 */


function isPlatformServer(platformId) {
  return platformId === PLATFORM_SERVER_ID;
}
/**
 * Returns whether a platform id represents a web worker app platform.
 * @experimental
 */


function isPlatformWorkerApp(platformId) {
  return platformId === PLATFORM_WORKER_APP_ID;
}
/**
 * Returns whether a platform id represents a web worker UI platform.
 * @experimental
 */


function isPlatformWorkerUi(platformId) {
  return platformId === PLATFORM_WORKER_UI_ID;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Version"]('7.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Manages the scroll position.
 */

var ViewportScroller =
/** @class */
function () {
  function ViewportScroller() {} // De-sugared tree-shakable injection
  // See #23917

  /** @nocollapse */


  ViewportScroller.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    providedIn: 'root',
    factory: function factory() {
      return new BrowserViewportScroller(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(DOCUMENT), window);
    }
  });
  return ViewportScroller;
}();
/**
 * Manages the scroll position.
 */


var BrowserViewportScroller =
/** @class */
function () {
  function BrowserViewportScroller(document, window) {
    this.document = document;
    this.window = window;

    this.offset = function () {
      return [0, 0];
    };
  }
  /**
   * Configures the top offset used when scrolling to an anchor.
   *
   * * When given a number, the service will always use the number.
   * * When given a function, the service will invoke the function every time it restores scroll
   * position.
   */


  BrowserViewportScroller.prototype.setOffset = function (offset) {
    if (Array.isArray(offset)) {
      this.offset = function () {
        return offset;
      };
    } else {
      this.offset = offset;
    }
  };
  /**
   * Returns the current scroll position.
   */


  BrowserViewportScroller.prototype.getScrollPosition = function () {
    if (this.supportScrollRestoration()) {
      return [this.window.scrollX, this.window.scrollY];
    } else {
      return [0, 0];
    }
  };
  /**
   * Sets the scroll position.
   */


  BrowserViewportScroller.prototype.scrollToPosition = function (position) {
    if (this.supportScrollRestoration()) {
      this.window.scrollTo(position[0], position[1]);
    }
  };
  /**
   * Scrolls to the provided anchor.
   */


  BrowserViewportScroller.prototype.scrollToAnchor = function (anchor) {
    if (this.supportScrollRestoration()) {
      var elSelectedById = this.document.querySelector("#" + anchor);

      if (elSelectedById) {
        this.scrollToElement(elSelectedById);
        return;
      }

      var elSelectedByName = this.document.querySelector("[name='" + anchor + "']");

      if (elSelectedByName) {
        this.scrollToElement(elSelectedByName);
        return;
      }
    }
  };
  /**
   * Disables automatic scroll restoration provided by the browser.
   */


  BrowserViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) {
    if (this.supportScrollRestoration()) {
      var history_1 = this.window.history;

      if (history_1 && history_1.scrollRestoration) {
        history_1.scrollRestoration = scrollRestoration;
      }
    }
  };

  BrowserViewportScroller.prototype.scrollToElement = function (el) {
    var rect = el.getBoundingClientRect();
    var left = rect.left + this.window.pageXOffset;
    var top = rect.top + this.window.pageYOffset;
    var offset = this.offset();
    this.window.scrollTo(left - offset[0], top - offset[1]);
  };
  /**
   * We only support scroll restoration when we can get a hold of window.
   * This means that we do not support this behavior when running in a web worker.
   *
   * Lifting this restriction right now would require more changes in the dom adapter.
   * Since webworkers aren't widely used, we will lift it once RouterScroller is
   * battle-tested.
   */


  BrowserViewportScroller.prototype.supportScrollRestoration = function () {
    try {
      return !!this.window && !!this.window.scrollTo;
    } catch (e) {
      return false;
    }
  };

  return BrowserViewportScroller;
}();
/**
 * Provides an empty implementation of the viewport scroller. This will
 * live in @angular/common as it will be used by both platform-server and platform-webworker.
 */


var NullViewportScroller =
/** @class */
function () {
  function NullViewportScroller() {}
  /**
   * Empty implementation
   */


  NullViewportScroller.prototype.setOffset = function (offset) {};
  /**
   * Empty implementation
   */


  NullViewportScroller.prototype.getScrollPosition = function () {
    return [0, 0];
  };
  /**
   * Empty implementation
   */


  NullViewportScroller.prototype.scrollToPosition = function (position) {};
  /**
   * Empty implementation
   */


  NullViewportScroller.prototype.scrollToAnchor = function (anchor) {};
  /**
   * Empty implementation
   */


  NullViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) {};

  return NullViewportScroller;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_l", function() { return APPLICATION_MODULE_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_i", function() { return _iterableDiffersFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_j", function() { return _keyValueDiffersFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_k", function() { return _localeFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_f", function() { return _appIdRandomProviderFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_g", function() { return DefaultIterableDifferFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_h", function() { return DefaultKeyValueDifferFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_c", function() { return ReflectiveInjector_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_d", function() { return ReflectiveDependency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_e", function() { return resolveReflectiveProviders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_m", function() { return wtfEnabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_o", function() { return createScope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_n", function() { return detectWTF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_r", function() { return endTimeRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_p", function() { return leave; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_q", function() { return startTimeRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bb", function() { return NG_INJECTABLE_DEF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_w", function() { return _getViewData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_x", function() { return bindingUpdated; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_v", function() { return getPreviousOrParentTNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bf", function() { return getOrCreatePlayerContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_be", function() { return loadInternal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_y", function() { return createElementRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_z", function() { return createTemplateRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_ba", function() { return createViewRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_a", function() { return makeParamDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_b", function() { return makePropDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_bc", function() { return getClosureSafeProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_s", function() { return _def; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_t", function() { return DebugRendererFactory2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_core_core_u", function() { return DebugContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlatform", function() { return createPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assertPlatform", function() { return assertPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "destroyPlatform", function() { return destroyPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPlatform", function() { return getPlatform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlatformRef", function() { return PlatformRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationRef", function() { return ApplicationRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPlatformFactory", function() { return createPlatformFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgProbeToken", function() { return NgProbeToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableProdMode", function() { return enableProdMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDevMode", function() { return isDevMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_ID", function() { return APP_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PACKAGE_ROOT_URL", function() { return PACKAGE_ROOT_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PLATFORM_INITIALIZER", function() { return PLATFORM_INITIALIZER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PLATFORM_ID", function() { return PLATFORM_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_BOOTSTRAP_LISTENER", function() { return APP_BOOTSTRAP_LISTENER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_INITIALIZER", function() { return APP_INITIALIZER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationInitStatus", function() { return ApplicationInitStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DebugElement", function() { return DebugElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DebugNode", function() { return DebugNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asNativeElements", function() { return asNativeElements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDebugNode", function() { return getDebugNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Testability", function() { return Testability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestabilityRegistry", function() { return TestabilityRegistry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTestabilityGetter", function() { return setTestabilityGetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TRANSLATIONS", function() { return TRANSLATIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TRANSLATIONS_FORMAT", function() { return TRANSLATIONS_FORMAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCALE_ID", function() { return LOCALE_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MissingTranslationStrategy", function() { return MissingTranslationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationModule", function() { return ApplicationModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wtfCreateScope", function() { return wtfCreateScope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wtfLeave", function() { return wtfLeave; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wtfStartTimeRange", function() { return wtfStartTimeRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wtfEndTimeRange", function() { return wtfEndTimeRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventEmitter", function() { return EventEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorHandler", function() { return ErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sanitizer", function() { return Sanitizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SecurityContext", function() { return SecurityContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ANALYZE_FOR_ENTRY_COMPONENTS", function() { return ANALYZE_FOR_ENTRY_COMPONENTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Attribute", function() { return Attribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentChild", function() { return ContentChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentChildren", function() { return ContentChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Query", function() { return Query; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewChild", function() { return ViewChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewChildren", function() { return ViewChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return Component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Directive", function() { return Directive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HostBinding", function() { return HostBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HostListener", function() { return HostListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Input", function() { return Input; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Output", function() { return Output; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pipe", function() { return Pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CUSTOM_ELEMENTS_SCHEMA", function() { return CUSTOM_ELEMENTS_SCHEMA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NO_ERRORS_SCHEMA", function() { return NO_ERRORS_SCHEMA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModule", function() { return NgModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEncapsulation", function() { return ViewEncapsulation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Version", function() { return Version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defineInjectable", function() { return defineInjectable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defineInjector", function() { return defineInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forwardRef", function() { return forwardRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveForwardRef", function() { return resolveForwardRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Injectable", function() { return Injectable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inject", function() { return inject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INJECTOR", function() { return INJECTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Injector", function() { return Injector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReflectiveInjector", function() { return ReflectiveInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInjector", function() { return createInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolvedReflectiveFactory", function() { return ResolvedReflectiveFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReflectiveKey", function() { return ReflectiveKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InjectionToken", function() { return InjectionToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Inject", function() { return Inject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Optional", function() { return Optional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Self", function() { return Self; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SkipSelf", function() { return SkipSelf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Host", function() { return Host; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgZone", function() { return NgZone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNoopNgZone", function() { return NoopNgZone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderComponentType", function() { return RenderComponentType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Renderer", function() { return Renderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Renderer2", function() { return Renderer2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RendererFactory2", function() { return RendererFactory2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RendererStyleFlags2", function() { return RendererStyleFlags2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RootRenderer", function() { return RootRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPILER_OPTIONS", function() { return COMPILER_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Compiler", function() { return Compiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompilerFactory", function() { return CompilerFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleWithComponentFactories", function() { return ModuleWithComponentFactories; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentFactory", function() { return ComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentRef", function() { return ComponentRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentFactoryResolver", function() { return ComponentFactoryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementRef", function() { return ElementRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleFactory", function() { return NgModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleRef", function() { return NgModuleRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleFactoryLoader", function() { return NgModuleFactoryLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getModuleFactory", function() { return getModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryList", function() { return QueryList$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemJsNgModuleLoader", function() { return SystemJsNgModuleLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemJsNgModuleLoaderConfig", function() { return SystemJsNgModuleLoaderConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateRef", function() { return TemplateRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewContainerRef", function() { return ViewContainerRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmbeddedViewRef", function() { return EmbeddedViewRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewRef", function() { return ViewRef$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeDetectionStrategy", function() { return ChangeDetectionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeDetectorRef", function() { return ChangeDetectorRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultIterableDiffer", function() { return DefaultIterableDiffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IterableDiffers", function() { return IterableDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyValueDiffers", function() { return KeyValueDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleChange", function() { return SimpleChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WrappedValue", function() { return WrappedValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "platformCore", function() { return platformCore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵALLOW_MULTIPLE_PLATFORMS", function() { return ALLOW_MULTIPLE_PLATFORMS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵAPP_ID_RANDOM_PROVIDER", function() { return APP_ID_RANDOM_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefaultIterableDiffers", function() { return defaultIterableDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefaultKeyValueDiffers", function() { return defaultKeyValueDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdevModeEqual", function() { return devModeEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisListLikeIterable", function() { return isListLikeIterable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵChangeDetectorStatus", function() { return ChangeDetectorStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisDefaultChangeDetectionStrategy", function() { return isDefaultChangeDetectionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵConsole", function() { return Console; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetInjectableDef", function() { return getInjectableDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinject", function() { return inject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsetCurrentInjector", function() { return setCurrentInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵAPP_ROOT", function() { return APP_ROOT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵivyEnabled", function() { return ivyEnabled$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵComponentFactory", function() { return ComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵCodegenComponentFactoryResolver", function() { return CodegenComponentFactoryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵresolveComponentResources", function() { return resolveComponentResources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵReflectionCapabilities", function() { return ReflectionCapabilities; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRenderDebugInfo", function() { return RenderDebugInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ_sanitizeHtml", function() { return _sanitizeHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ_sanitizeStyle", function() { return _sanitizeStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ_sanitizeUrl", function() { return _sanitizeUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵglobal", function() { return _global; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵlooseIdentical", function() { return looseIdentical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵstringify", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmakeDecorator", function() { return makeDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisObservable", function() { return isObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵisPromise", function() { return isPromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵclearOverrides", function() { return clearOverrides; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinitServicesIfNeeded", function() { return initServicesIfNeeded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵoverrideComponentView", function() { return overrideComponentView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵoverrideProvider", function() { return overrideProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR", function() { return NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefineBase", function() { return defineBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefineComponent", function() { return defineComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefineDirective", function() { return defineDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefinePipe", function() { return definePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdefineNgModule", function() { return defineNgModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdetectChanges", function() { return detectChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵrenderComponent", function() { return renderComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRender3ComponentFactory", function() { return ComponentFactory$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRender3ComponentRef", function() { return ComponentRef$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdirectiveInject", function() { return directiveInject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinjectAttribute", function() { return injectAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetFactoryOf", function() { return getFactoryOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetInheritedFactory", function() { return getInheritedFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵtemplateRefExtractor", function() { return templateRefExtractor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵPublicFeature", function() { return PublicFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵInheritDefinitionFeature", function() { return InheritDefinitionFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNgOnChangesFeature", function() { return NgOnChangesFeature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRender3NgModuleRef", function() { return NgModuleRef$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmarkDirty", function() { return markDirty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNgModuleFactory", function() { return NgModuleFactory$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵNO_CHANGE", function() { return NO_CHANGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcontainer", function() { return container; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵnextContext", function() { return nextContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementStart", function() { return elementStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵnamespaceHTML", function() { return namespaceHTML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵnamespaceMathML", function() { return namespaceMathML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵnamespaceSVG", function() { return namespaceSVG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelement", function() { return element; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵlistener", function() { return listener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵtext", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵembeddedViewStart", function() { return embeddedViewStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵquery", function() { return query; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵregisterContentQuery", function() { return registerContentQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵprojection", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbind", function() { return bind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation1", function() { return interpolation1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation2", function() { return interpolation2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation3", function() { return interpolation3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation4", function() { return interpolation4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation5", function() { return interpolation5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation6", function() { return interpolation6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation7", function() { return interpolation7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolation8", function() { return interpolation8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolationV", function() { return interpolationV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpipeBind1", function() { return pipeBind1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpipeBind2", function() { return pipeBind2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpipeBind3", function() { return pipeBind3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpipeBind4", function() { return pipeBind4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpipeBindV", function() { return pipeBindV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction0", function() { return pureFunction0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction1", function() { return pureFunction1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction2", function() { return pureFunction2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction3", function() { return pureFunction3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction4", function() { return pureFunction4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction5", function() { return pureFunction5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction6", function() { return pureFunction6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction7", function() { return pureFunction7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunction8", function() { return pureFunction8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpureFunctionV", function() { return pureFunctionV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetCurrentView", function() { return getCurrentView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵrestoreView", function() { return restoreView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcontainerRefreshStart", function() { return containerRefreshStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcontainerRefreshEnd", function() { return containerRefreshEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵqueryRefresh", function() { return queryRefresh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵloadQueryList", function() { return loadQueryList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementEnd", function() { return elementEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementProperty", function() { return elementProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵprojectionDef", function() { return projectionDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵreference", function() { return reference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵenableBindings", function() { return enableBindings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdisableBindings", function() { return disableBindings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementAttribute", function() { return elementAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementStyling", function() { return elementStyling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementStylingMap", function() { return elementStylingMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementStyleProp", function() { return elementStyleProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementStylingApply", function() { return elementStylingApply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementClassProp", function() { return elementClassProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵtextBinding", function() { return textBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵtemplate", function() { return template; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵembeddedViewEnd", function() { return embeddedViewEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵstore", function() { return store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵload", function() { return load; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpipe", function() { return pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵwhenRendered", function() { return whenRendered; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nAttribute", function() { return i18nAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nExp", function() { return i18nExp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nStart", function() { return i18nStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nEnd", function() { return i18nEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nApply", function() { return i18nApply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nExpMapping", function() { return i18nExpMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation1", function() { return i18nInterpolation1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation2", function() { return i18nInterpolation2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation3", function() { return i18nInterpolation3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation4", function() { return i18nInterpolation4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation5", function() { return i18nInterpolation5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation6", function() { return i18nInterpolation6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation7", function() { return i18nInterpolation7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolation8", function() { return i18nInterpolation8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nInterpolationV", function() { return i18nInterpolationV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi18nMapping", function() { return i18nMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵWRAP_RENDERER_FACTORY2", function() { return WRAP_RENDERER_FACTORY2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵRender3DebugRendererFactory2", function() { return Render3DebugRendererFactory2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileNgModuleDefs", function() { return R3_COMPILE_NGMODULE_DEFS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpatchComponentDefWithScope", function() { return R3_PATCH_COMPONENT_DEF_WTIH_SCOPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileComponent", function() { return R3_COMPILE_COMPONENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileDirective", function() { return R3_COMPILE_DIRECTIVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompilePipe", function() { return R3_COMPILE_PIPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsanitizeHtml", function() { return sanitizeHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsanitizeStyle", function() { return sanitizeStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsanitizeUrl", function() { return sanitizeUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵsanitizeResourceUrl", function() { return sanitizeResourceUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustHtml", function() { return bypassSanitizationTrustHtml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustStyle", function() { return bypassSanitizationTrustStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustScript", function() { return bypassSanitizationTrustScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustUrl", function() { return bypassSanitizationTrustUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbypassSanitizationTrustResourceUrl", function() { return bypassSanitizationTrustResourceUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetContext", function() { return getContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵaddPlayer", function() { return addPlayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetPlayers", function() { return getPlayers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcompileNgModuleFactory__POST_NGCC__", function() { return compileNgModuleFactory__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_COMPILE_COMPONENT__POST_NGCC__", function() { return R3_COMPILE_COMPONENT__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_COMPILE_DIRECTIVE__POST_NGCC__", function() { return R3_COMPILE_DIRECTIVE__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_COMPILE_INJECTABLE__POST_NGCC__", function() { return R3_COMPILE_INJECTABLE__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_COMPILE_NGMODULE__POST_NGCC__", function() { return R3_COMPILE_NGMODULE__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_COMPILE_PIPE__POST_NGCC__", function() { return R3_COMPILE_PIPE__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵivyEnable__POST_NGCC__", function() { return ivyEnable__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_ELEMENT_REF_FACTORY__POST_NGCC__", function() { return R3_ELEMENT_REF_FACTORY__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_TEMPLATE_REF_FACTORY__POST_NGCC__", function() { return R3_TEMPLATE_REF_FACTORY__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__", function() { return R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__", function() { return R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵR3_RENDERER2_FACTORY__POST_NGCC__", function() { return R3_RENDERER2_FACTORY__POST_NGCC__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵregisterModuleFactory", function() { return registerModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵEMPTY_ARRAY", function() { return EMPTY_ARRAY$4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵEMPTY_MAP", function() { return EMPTY_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵand", function() { return anchorDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵccf", function() { return createComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcmf", function() { return createNgModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵcrt", function() { return createRendererType2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵdid", function() { return directiveDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵeld", function() { return elementDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵelementEventFullName", function() { return elementEventFullName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵgetComponentViewDefinitionFactory", function() { return getComponentViewDefinitionFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinlineInterpolate", function() { return inlineInterpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵinterpolate", function() { return interpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmod", function() { return moduleDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵmpd", function() { return moduleProvideDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵncd", function() { return ngContentDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵnov", function() { return nodeValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpid", function() { return pipeDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵprd", function() { return providerDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpad", function() { return pureArrayDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵpod", function() { return pureObjectDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵppd", function() { return purePipeDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵqud", function() { return queryDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵted", function() { return textDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵunv", function() { return unwrapValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵvid", function() { return viewDef; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(267);
/* harmony import */ var _angular_compiler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(364);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(365);
function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/**
 * @license Angular v7.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function getClosureSafeProperty(objWithPropertyToExtract){for(var key in objWithPropertyToExtract){if(objWithPropertyToExtract[key]===getClosureSafeProperty){return key;}}throw Error('Could not find renamed property on target object.');}/**
 * Sets properties on a target object from a source object, but only if
 * the property doesn't already exist on the target object.
 * @param target The target to set properties on
 * @param source The source of the property keys and values to set
 */function fillProperties(target,source){for(var key in source){if(source.hasOwnProperty(key)&&!target.hasOwnProperty(key)){target[key]=source[key];}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NG_COMPONENT_DEF=getClosureSafeProperty({ngComponentDef:getClosureSafeProperty});var NG_DIRECTIVE_DEF=getClosureSafeProperty({ngDirectiveDef:getClosureSafeProperty});var NG_INJECTABLE_DEF=getClosureSafeProperty({ngInjectableDef:getClosureSafeProperty});var NG_INJECTOR_DEF=getClosureSafeProperty({ngInjectorDef:getClosureSafeProperty});var NG_PIPE_DEF=getClosureSafeProperty({ngPipeDef:getClosureSafeProperty});var NG_MODULE_DEF=getClosureSafeProperty({ngModuleDef:getClosureSafeProperty});var NG_BASE_DEF=getClosureSafeProperty({ngBaseDef:getClosureSafeProperty});/**
 * If a directive is diPublic, bloomAdd sets a property on the type with this constant as
 * the key and the directive's unique ID as the value. This allows us to map directives to their
 * bloom filter bit for DI.
 */var NG_ELEMENT_ID=getClosureSafeProperty({__NG_ELEMENT_ID__:getClosureSafeProperty});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and
 * in which injectors (if any) it will be available.
 *
 * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an
 * `InjectableType`.
 *
 * Options:
 * * `providedIn` determines which injectors will include the injectable, by either associating it
 *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be
 *   provided in the `'root'` injector, which will be the application-level injector in most apps.
 * * `factory` gives the zero argument function which will create an instance of the injectable.
 *   The factory can call `inject` to access the `Injector` and request injection of dependencies.
 *
 * @experimental
 */function defineInjectable(opts){return{providedIn:opts.providedIn||null,factory:opts.factory,value:undefined};}/**
 * Construct an `InjectorDef` which configures an injector.
 *
 * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an
 * `InjectorType`.
 *
 * Options:
 *
 * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to
 *   create the type must be provided. If that factory function needs to inject arguments, it can
 *   use the `inject` function.
 * * `providers`: an optional array of providers to add to the injector. Each provider must
 *   either have a factory or point to a type which has an `ngInjectableDef` static property (the
 *   type must be an `InjectableType`).
 * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s
 *   whose providers will also be added to the injector. Locally provided types will override
 *   providers from imports.
 *
 * @experimental
 */function defineInjector(options){return{factory:options.factory,providers:options.providers||[],imports:options.imports||[]};}/**
 * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.
 *
 * @param type type which may have `ngInjectableDef`
 */function getInjectableDef(type){return type.hasOwnProperty(NG_INJECTABLE_DEF)?type[NG_INJECTABLE_DEF]:null;}/**
 * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.
 *
 * @param type type which may have `ngInjectorDef`
 */function getInjectorDef(type){return type.hasOwnProperty(NG_INJECTOR_DEF)?type[NG_INJECTOR_DEF]:null;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Creates a token that can be used in a DI Provider.
 *
 * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a
 * runtime representation) such as when injecting an interface, callable type, array or
 * parametrized type.
 *
 * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by
 * the `Injector`. This provides additional level of type safety.
 *
 * ```
 * interface MyInterface {...}
 * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));
 * // myInterface is inferred to be MyInterface.
 * ```
 *
 * When creating an `InjectionToken`, you can optionally specify a factory function which returns
 * (possibly by creating) a default value of the parameterized type `T`. This sets up the
 * `InjectionToken` using this factory as a provider as if it was defined explicitly in the
 * application's root injector. If the factory function, which takes zero arguments, needs to inject
 * dependencies, it can do so using the `inject` function. See below for an example.
 *
 * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which
 * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As
 * mentioned above, `'root'` is the default value for `providedIn`.
 *
 * @usageNotes
 * ### Basic Example
 *
 * ### Plain InjectionToken
 *
 * {@example core/di/ts/injector_spec.ts region='InjectionToken'}
 *
 * ### Tree-shakable InjectionToken
 *
 * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}
 *
 */var InjectionToken=/** @class */function(){function InjectionToken(_desc,options){this._desc=_desc;/** @internal */this.ngMetadataName='InjectionToken';if(options!==undefined){this.ngInjectableDef=defineInjectable({providedIn:options.providedIn||'root',factory:options.factory});}else{this.ngInjectableDef=undefined;}}InjectionToken.prototype.toString=function(){return"InjectionToken "+this._desc;};return InjectionToken;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ANNOTATIONS='__annotations__';var PARAMETERS='__parameters__';var PROP_METADATA='__prop__metadata__';/**
 * @suppress {globalThis}
 */function makeDecorator(name,props,parentClass,additionalProcessing,typeFn){var metaCtor=makeMetadataCtor(props);function DecoratorFactory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a;if(this instanceof DecoratorFactory){metaCtor.call.apply(metaCtor,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([this],args));return this;}var annotationInstance=new((_a=DecoratorFactory).bind.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],args)))();return function TypeDecorator(cls){if(typeFn)typeFn.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([cls],args));// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var annotations=cls.hasOwnProperty(ANNOTATIONS)?cls[ANNOTATIONS]:Object.defineProperty(cls,ANNOTATIONS,{value:[]})[ANNOTATIONS];annotations.push(annotationInstance);if(additionalProcessing)additionalProcessing(cls);return cls;};}if(parentClass){DecoratorFactory.prototype=Object.create(parentClass.prototype);}DecoratorFactory.prototype.ngMetadataName=name;DecoratorFactory.annotationCls=DecoratorFactory;return DecoratorFactory;}function makeMetadataCtor(props){return function ctor(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(props){var values=props.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));for(var propName in values){this[propName]=values[propName];}}};}function makeParamDecorator(name,props,parentClass){var metaCtor=makeMetadataCtor(props);function ParamDecoratorFactory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a;if(this instanceof ParamDecoratorFactory){metaCtor.apply(this,args);return this;}var annotationInstance=new((_a=ParamDecoratorFactory).bind.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],args)))();ParamDecorator.annotation=annotationInstance;return ParamDecorator;function ParamDecorator(cls,unusedKey,index){// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var parameters=cls.hasOwnProperty(PARAMETERS)?cls[PARAMETERS]:Object.defineProperty(cls,PARAMETERS,{value:[]})[PARAMETERS];// there might be gaps if some in between parameters do not have annotations.
// we pad with nulls.
while(parameters.length<=index){parameters.push(null);}(parameters[index]=parameters[index]||[]).push(annotationInstance);return cls;}}if(parentClass){ParamDecoratorFactory.prototype=Object.create(parentClass.prototype);}ParamDecoratorFactory.prototype.ngMetadataName=name;ParamDecoratorFactory.annotationCls=ParamDecoratorFactory;return ParamDecoratorFactory;}function makePropDecorator(name,props,parentClass,additionalProcessing){var metaCtor=makeMetadataCtor(props);function PropDecoratorFactory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a;if(this instanceof PropDecoratorFactory){metaCtor.apply(this,args);return this;}var decoratorInstance=new((_a=PropDecoratorFactory).bind.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],args)))();function PropDecorator(target,name){var constructor=target.constructor;// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var meta=constructor.hasOwnProperty(PROP_METADATA)?constructor[PROP_METADATA]:Object.defineProperty(constructor,PROP_METADATA,{value:{}})[PROP_METADATA];meta[name]=meta.hasOwnProperty(name)&&meta[name]||[];meta[name].unshift(decoratorInstance);if(additionalProcessing)additionalProcessing.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([target,name],args));}return PropDecorator;}if(parentClass){PropDecoratorFactory.prototype=Object.create(parentClass.prototype);}PropDecoratorFactory.prototype.ngMetadataName=name;PropDecoratorFactory.annotationCls=PropDecoratorFactory;return PropDecoratorFactory;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This token can be used to create a virtual provider that will populate the
 * `entryComponents` fields of components and ng modules based on its `useValue`.
 * All components that are referenced in the `useValue` value (either directly
 * or in a nested array or map) will be added to the `entryComponents` property.
 *
 * @usageNotes
 * ### Example
 * The following example shows how the router can populate the `entryComponents`
 * field of an NgModule based on the router configuration which refers
 * to components.
 *
 * ```typescript
 * // helper function inside the router
 * function provideRoutes(routes) {
 *   return [
 *     {provide: ROUTES, useValue: routes},
 *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}
 *   ];
 * }
 *
 * // user code
 * let routes = [
 *   {path: '/root', component: RootComp},
 *   {path: '/teams', component: TeamsComp}
 * ];
 *
 * @NgModule({
 *   providers: [provideRoutes(routes)]
 * })
 * class ModuleWithRoutes {}
 * ```
 *
 * @experimental
 */var ANALYZE_FOR_ENTRY_COMPONENTS=new InjectionToken('AnalyzeForEntryComponents');/**
 * Attribute decorator and metadata.
 *
 * @Annotation
 */var Attribute=makeParamDecorator('Attribute',function(attributeName){return{attributeName:attributeName};});/**
 * Base class for query metadata.
 *
 * @see `ContentChildren`.
 * @see `ContentChild`.
 * @see `ViewChildren`.
 * @see `ViewChild`.
 */var Query=/** @class */function(){function Query(){}return Query;}();/**
 * ContentChildren decorator and metadata.
 *
 *
 *  @Annotation
 */var ContentChildren=makePropDecorator('ContentChildren',function(selector,data){if(data===void 0){data={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:false,isViewQuery:false,descendants:false},data);},Query);/**
 * ContentChild decorator and metadata.
 *
 *
 * @Annotation
 */var ContentChild=makePropDecorator('ContentChild',function(selector,data){if(data===void 0){data={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:true,isViewQuery:false,descendants:true},data);},Query);/**
 * ViewChildren decorator and metadata.
 *
 * @Annotation
 */var ViewChildren=makePropDecorator('ViewChildren',function(selector,data){if(data===void 0){data={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:false,isViewQuery:true,descendants:true},data);},Query);/**
 * ViewChild decorator and metadata.
 *
 * @Annotation
 */var ViewChild=makePropDecorator('ViewChild',function(selector,data){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:true,isViewQuery:true,descendants:true},data);},Query);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * The strategy that the default change detector uses to detect changes.
 * When set, takes effect the next time change detection is triggered.
 *
 */var ChangeDetectionStrategy;(function(ChangeDetectionStrategy){/**
     * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated
     * until reactivated by setting the strategy to `Default` (`CheckAlways`).
     * Change detection can still be explictly invoked.
     */ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"]=0]="OnPush";/**
     * Use the default `CheckAlways` strategy, in which change detection is automatic until
     * explicitly deactivated.
     */ChangeDetectionStrategy[ChangeDetectionStrategy["Default"]=1]="Default";})(ChangeDetectionStrategy||(ChangeDetectionStrategy={}));/**
 * Defines the possible states of the default change detector.
 * @see `ChangeDetectorRef`
 */var ChangeDetectorStatus;(function(ChangeDetectorStatus){/**
     * A state in which, after calling `detectChanges()`, the change detector
     * state becomes `Checked`, and must be explicitly invoked or reactivated.
     */ChangeDetectorStatus[ChangeDetectorStatus["CheckOnce"]=0]="CheckOnce";/**
     * A state in which change detection is skipped until the change detector mode
     * becomes `CheckOnce`.
     */ChangeDetectorStatus[ChangeDetectorStatus["Checked"]=1]="Checked";/**
     * A state in which change detection continues automatically until explictly
     * deactivated.
     */ChangeDetectorStatus[ChangeDetectorStatus["CheckAlways"]=2]="CheckAlways";/**
     * A state in which a change detector sub tree is not a part of the main tree and
     * should be skipped.
     */ChangeDetectorStatus[ChangeDetectorStatus["Detached"]=3]="Detached";/**
     * Indicates that the change detector encountered an error checking a binding
     * or calling a directive lifecycle method and is now in an inconsistent state. Change
     * detectors in this state do not detect changes.
     */ChangeDetectorStatus[ChangeDetectorStatus["Errored"]=4]="Errored";/**
     * Indicates that the change detector has been destroyed.
     */ChangeDetectorStatus[ChangeDetectorStatus["Destroyed"]=5]="Destroyed";})(ChangeDetectorStatus||(ChangeDetectorStatus={}));/**
 * Reports whether a given strategy is currently the default for change detection.
 * @param changeDetectionStrategy The strategy to check.
 * @returns True if the given strategy is the current default, false otherwise.
 * @see `ChangeDetectorStatus`
 * @see `ChangeDetectorRef`
 */function isDefaultChangeDetectionStrategy(changeDetectionStrategy){return changeDetectionStrategy==null||changeDetectionStrategy===ChangeDetectionStrategy.Default;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var __window=typeof window!=='undefined'&&window;var __self=typeof self!=='undefined'&&typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope&&self;var __global=typeof global!=='undefined'&&global;// Check __global first, because in Node tests both __global and __window may be defined and _global
// should be __global in that case.
var _global=__global||__window||__self;var promise=Promise.resolve(0);var _symbolIterator=null;function getSymbolIterator(){if(!_symbolIterator){var Symbol_1=_global['Symbol'];if(Symbol_1&&Symbol_1.iterator){_symbolIterator=Symbol_1.iterator;}else{// es6-shim specific logic
var keys=Object.getOwnPropertyNames(Map.prototype);for(var i=0;i<keys.length;++i){var key=keys[i];if(key!=='entries'&&key!=='size'&&Map.prototype[key]===Map.prototype['entries']){_symbolIterator=key;}}}}return _symbolIterator;}function scheduleMicroTask(fn){if(typeof Zone==='undefined'){// use promise to schedule microTask instead of use Zone
promise.then(function(){fn&&fn.apply(null,null);});}else{Zone.current.scheduleMicroTask('scheduleMicrotask',fn);}}// JS has NaN !== NaN
function looseIdentical(a,b){return a===b||typeof a==='number'&&typeof b==='number'&&isNaN(a)&&isNaN(b);}function stringify(token){if(typeof token==='string'){return token;}if(token instanceof Array){return'['+token.map(stringify).join(', ')+']';}if(token==null){return''+token;}if(token.overriddenName){return""+token.overriddenName;}if(token.name){return""+token.name;}var res=token.toString();if(res==null){return''+res;}var newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Allows to refer to references which are not yet defined.
 *
 * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of
 * DI is declared, but not yet defined. It is also used when the `token` which we use when creating
 * a query is not yet defined.
 *
 * @usageNotes
 * ### Example
 * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}
 * @experimental
 */function forwardRef(forwardRefFn){forwardRefFn.__forward_ref__=forwardRef;forwardRefFn.toString=function(){return stringify(this());};return forwardRefFn;}/**
 * Lazily retrieves the reference value from a forwardRef.
 *
 * Acts as the identity function when given a non-forward-ref value.
 *
 * @usageNotes
 * ### Example
 *
 * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}
 *
 * @see `forwardRef`
 * @experimental
 */function resolveForwardRef(type){if(typeof type==='function'&&type.hasOwnProperty('__forward_ref__')&&type.__forward_ref__===forwardRef){return type();}else{return type;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Inject decorator and metadata.
 *
 * @Annotation
 */var Inject=makeParamDecorator('Inject',function(token){return{token:token};});/**
 * Optional decorator and metadata.
 *
 * @Annotation
 */var Optional=makeParamDecorator('Optional');/**
 * Self decorator and metadata.
 *
 * @Annotation
 */var Self=makeParamDecorator('Self');/**
 * SkipSelf decorator and metadata.
 *
 * @Annotation
 */var SkipSelf=makeParamDecorator('SkipSelf');/**
 * Host decorator and metadata.
 *
 * @Annotation
 */var Host=makeParamDecorator('Host');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var SOURCE='__source';var _THROW_IF_NOT_FOUND=new Object();var THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;/**
 * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.
 *
 * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a
 * project.
 *
 * @experimental
 */var INJECTOR=new InjectionToken('INJECTOR');var NullInjector=/** @class */function(){function NullInjector(){}NullInjector.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=_THROW_IF_NOT_FOUND;}if(notFoundValue===_THROW_IF_NOT_FOUND){// Intentionally left behind: With dev tools open the debugger will stop here. There is no
// reason why correctly written application should cause this exception.
// TODO(misko): uncomment the next line once `ngDevMode` works with closure.
// if(ngDevMode) debugger;
throw new Error("NullInjectorError: No provider for "+stringify(token)+"!");}return notFoundValue;};return NullInjector;}();/**
 * Concrete injectors implement this interface.
 *
 * For more details, see the ["Dependency Injection Guide"](guide/dependency-injection).
 *
 * @usageNotes
 * ### Example
 *
 * {@example core/di/ts/injector_spec.ts region='Injector'}
 *
 * `Injector` returns itself when given `Injector` as a token:
 *
 * {@example core/di/ts/injector_spec.ts region='injectInjector'}
 *
 *
 */var Injector=/** @class */function(){function Injector(){}/**
     * Create a new Injector which is configure using `StaticProvider`s.
     *
     * @usageNotes
     * ### Example
     *
     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}
     */Injector.create=function(options,parent){if(Array.isArray(options)){return new StaticInjector(options,parent);}else{return new StaticInjector(options.providers,options.parent,options.name||null);}};Injector.THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;Injector.NULL=new NullInjector();Injector.ngInjectableDef=defineInjectable({providedIn:'any',factory:function factory(){return inject(INJECTOR);}});return Injector;}();var IDENT=function IDENT(value){return value;};var EMPTY=[];var CIRCULAR=IDENT;var MULTI_PROVIDER_FN=function MULTI_PROVIDER_FN(){return Array.prototype.slice.call(arguments);};var USE_VALUE=getClosureSafeProperty({provide:String,useValue:getClosureSafeProperty});var NG_TOKEN_PATH='ngTokenPath';var NG_TEMP_TOKEN_PATH='ngTempTokenPath';var NULL_INJECTOR=Injector.NULL;var NEW_LINE=/\n/gm;var NO_NEW_LINE='ɵ';var StaticInjector=/** @class */function(){function StaticInjector(providers,parent,source){if(parent===void 0){parent=NULL_INJECTOR;}if(source===void 0){source=null;}this.parent=parent;this.source=source;var records=this._records=new Map();records.set(Injector,{token:Injector,fn:IDENT,deps:EMPTY,value:this,useNew:false});records.set(INJECTOR,{token:INJECTOR,fn:IDENT,deps:EMPTY,value:this,useNew:false});recursivelyProcessProviders(records,providers);}StaticInjector.prototype.get=function(token,notFoundValue,flags){if(flags===void 0){flags=0/* Default */;}var record=this._records.get(token);try{return tryResolveToken(token,record,this._records,this.parent,notFoundValue,flags);}catch(e){var tokenPath=e[NG_TEMP_TOKEN_PATH];if(token[SOURCE]){tokenPath.unshift(token[SOURCE]);}e.message=formatError('\n'+e.message,tokenPath,this.source);e[NG_TOKEN_PATH]=tokenPath;e[NG_TEMP_TOKEN_PATH]=null;throw e;}};StaticInjector.prototype.toString=function(){var tokens=[],records=this._records;records.forEach(function(v,token){return tokens.push(stringify(token));});return"StaticInjector["+tokens.join(', ')+"]";};return StaticInjector;}();function resolveProvider(provider){var deps=computeDeps(provider);var fn=IDENT;var value=EMPTY;var useNew=false;var provide=resolveForwardRef(provider.provide);if(USE_VALUE in provider){// We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.
value=provider.useValue;}else if(provider.useFactory){fn=provider.useFactory;}else if(provider.useExisting);else if(provider.useClass){useNew=true;fn=resolveForwardRef(provider.useClass);}else if(typeof provide=='function'){useNew=true;fn=provide;}else{throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',provider);}return{deps:deps,fn:fn,useNew:useNew,value:value};}function multiProviderMixError(token){return staticError('Cannot mix multi providers and regular providers',token);}function recursivelyProcessProviders(records,provider){if(provider){provider=resolveForwardRef(provider);if(provider instanceof Array){// if we have an array recurse into the array
for(var i=0;i<provider.length;i++){recursivelyProcessProviders(records,provider[i]);}}else if(typeof provider==='function'){// Functions were supported in ReflectiveInjector, but are not here. For safety give useful
// error messages
throw staticError('Function/Class not supported',provider);}else if(provider&&_typeof(provider)==='object'&&provider.provide){// At this point we have what looks like a provider: {provide: ?, ....}
var token=resolveForwardRef(provider.provide);var resolvedProvider=resolveProvider(provider);if(provider.multi===true){// This is a multi provider.
var multiProvider=records.get(token);if(multiProvider){if(multiProvider.fn!==MULTI_PROVIDER_FN){throw multiProviderMixError(token);}}else{// Create a placeholder factory which will look up the constituents of the multi provider.
records.set(token,multiProvider={token:provider.provide,deps:[],useNew:false,fn:MULTI_PROVIDER_FN,value:EMPTY});}// Treat the provider as the token.
token=provider;multiProvider.deps.push({token:token,options:6/* Default */});}var record=records.get(token);if(record&&record.fn==MULTI_PROVIDER_FN){throw multiProviderMixError(token);}records.set(token,resolvedProvider);}else{throw staticError('Unexpected provider',provider);}}}function tryResolveToken(token,record,records,parent,notFoundValue,flags){try{return resolveToken(token,record,records,parent,notFoundValue,flags);}catch(e){// ensure that 'e' is of type Error.
if(!(e instanceof Error)){e=new Error(e);}var path=e[NG_TEMP_TOKEN_PATH]=e[NG_TEMP_TOKEN_PATH]||[];path.unshift(token);if(record&&record.value==CIRCULAR){// Reset the Circular flag.
record.value=EMPTY;}throw e;}}function resolveToken(token,record,records,parent,notFoundValue,flags){var _a;var value;if(record&&!(flags&4/* SkipSelf */)){// If we don't have a record, this implies that we don't own the provider hence don't know how
// to resolve it.
value=record.value;if(value==CIRCULAR){throw Error(NO_NEW_LINE+'Circular dependency');}else if(value===EMPTY){record.value=CIRCULAR;var obj=undefined;var useNew=record.useNew;var fn=record.fn;var depRecords=record.deps;var deps=EMPTY;if(depRecords.length){deps=[];for(var i=0;i<depRecords.length;i++){var depRecord=depRecords[i];var options=depRecord.options;var childRecord=options&2/* CheckSelf */?records.get(depRecord.token):undefined;deps.push(tryResolveToken(// Current Token to resolve
depRecord.token,// A record which describes how to resolve the token.
// If undefined, this means we don't have such a record
childRecord,// Other records we know about.
records,// If we don't know how to resolve dependency and we should not check parent for it,
// than pass in Null injector.
!childRecord&&!(options&4/* CheckParent */)?NULL_INJECTOR:parent,options&1/* Optional */?null:Injector.THROW_IF_NOT_FOUND,0/* Default */));}}record.value=value=useNew?new((_a=fn).bind.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],deps)))():fn.apply(obj,deps);}}else if(!(flags&2/* Self */)){value=parent.get(token,notFoundValue,0/* Default */);}return value;}function computeDeps(provider){var deps=EMPTY;var providerDeps=provider.deps;if(providerDeps&&providerDeps.length){deps=[];for(var i=0;i<providerDeps.length;i++){var options=6/* Default */;var token=resolveForwardRef(providerDeps[i]);if(token instanceof Array){for(var j=0,annotations=token;j<annotations.length;j++){var annotation=annotations[j];if(annotation instanceof Optional||annotation==Optional){options=options|1/* Optional */;}else if(annotation instanceof SkipSelf||annotation==SkipSelf){options=options&~2/* CheckSelf */;}else if(annotation instanceof Self||annotation==Self){options=options&~4/* CheckParent */;}else if(annotation instanceof Inject){token=annotation.token;}else{token=resolveForwardRef(annotation);}}}deps.push({token:token,options:options});}}else if(provider.useExisting){var token=resolveForwardRef(provider.useExisting);deps=[{token:token,options:6/* Default */}];}else if(!providerDeps&&!(USE_VALUE in provider)){// useValue & useExisting are the only ones which are exempt from deps all others need it.
throw staticError('\'deps\' required',provider);}return deps;}function formatError(text,obj,source){if(source===void 0){source=null;}text=text&&text.charAt(0)==='\n'&&text.charAt(1)==NO_NEW_LINE?text.substr(2):text;var context=stringify(obj);if(obj instanceof Array){context=obj.map(stringify).join(' -> ');}else if(_typeof(obj)==='object'){var parts=[];for(var key in obj){if(obj.hasOwnProperty(key)){var value=obj[key];parts.push(key+':'+(typeof value==='string'?JSON.stringify(value):stringify(value)));}}context="{"+parts.join(', ')+"}";}return"StaticInjectorError"+(source?'('+source+')':'')+"["+context+"]: "+text.replace(NEW_LINE,'\n  ');}function staticError(text,obj){return new Error(formatError(text,obj));}/**
 * Current injector value used by `inject`.
 * - `undefined`: it is an error to call `inject`
 * - `null`: `inject` can be called but there is no injector (limp-mode).
 * - Injector instance: Use the injector for resolution.
 */var _currentInjector=undefined;function setCurrentInjector(injector){var former=_currentInjector;_currentInjector=injector;return former;}function inject(token,flags){if(flags===void 0){flags=0/* Default */;}if(_currentInjector===undefined){throw new Error("inject() must be called from an injection context");}else if(_currentInjector===null){var injectableDef=getInjectableDef(token);if(injectableDef&&injectableDef.providedIn=='root'){return injectableDef.value===undefined?injectableDef.value=injectableDef.factory():injectableDef.value;}if(flags&8/* Optional */)return null;throw new Error("Injector: NOT_FOUND ["+stringify(token)+"]");}else{return _currentInjector.get(token,flags&8/* Optional */?null:undefined,flags);}}function injectArgs(types){var args=[];for(var i=0;i<types.length;i++){var arg=types[i];if(Array.isArray(arg)){if(arg.length===0){throw new Error('Arguments array must have arguments.');}var type=undefined;var flags=0/* Default */;for(var j=0;j<arg.length;j++){var meta=arg[j];if(meta instanceof Optional||meta.ngMetadataName==='Optional'){flags|=8/* Optional */;}else if(meta instanceof SkipSelf||meta.ngMetadataName==='SkipSelf'){flags|=4/* SkipSelf */;}else if(meta instanceof Self||meta.ngMetadataName==='Self'){flags|=2/* Self */;}else if(meta instanceof Inject){type=meta.token;}else{type=meta;}}args.push(inject(type,flags));}else{args.push(inject(arg));}}return args;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @description
 *
 * Represents a type that a Component or other object is instances of.
 *
 * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by
 * the `MyCustomComponent` constructor function.
 *
 *
 */var Type=Function;function isType(v){return typeof v==='function';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Attention: These regex has to hold even if the code is minified!
 */var DELEGATE_CTOR=/^function\s+\S+\(\)\s*{[\s\S]+\.apply\(this,\s*arguments\)/;var INHERITED_CLASS=/^class\s+[A-Za-z\d$_]*\s*extends\s+[A-Za-z\d$_]+\s*{/;var INHERITED_CLASS_WITH_CTOR=/^class\s+[A-Za-z\d$_]*\s*extends\s+[A-Za-z\d$_]+\s*{[\s\S]*constructor\s*\(/;var ReflectionCapabilities=/** @class */function(){function ReflectionCapabilities(reflect){this._reflect=reflect||_global['Reflect'];}ReflectionCapabilities.prototype.isReflectionEnabled=function(){return true;};ReflectionCapabilities.prototype.factory=function(t){return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return new(t.bind.apply(t,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],args)))();};};/** @internal */ReflectionCapabilities.prototype._zipTypesAndAnnotations=function(paramTypes,paramAnnotations){var result;if(typeof paramTypes==='undefined'){result=new Array(paramAnnotations.length);}else{result=new Array(paramTypes.length);}for(var i=0;i<result.length;i++){// TS outputs Object for parameters without types, while Traceur omits
// the annotations. For now we preserve the Traceur behavior to aid
// migration, but this can be revisited.
if(typeof paramTypes==='undefined'){result[i]=[];}else if(paramTypes[i]!=Object){result[i]=[paramTypes[i]];}else{result[i]=[];}if(paramAnnotations&&paramAnnotations[i]!=null){result[i]=result[i].concat(paramAnnotations[i]);}}return result;};ReflectionCapabilities.prototype._ownParameters=function(type,parentCtor){var typeStr=type.toString();// If we have no decorators, we only have function.length as metadata.
// In that case, to detect whether a child class declared an own constructor or not,
// we need to look inside of that constructor to check whether it is
// just calling the parent.
// This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439
// that sets 'design:paramtypes' to []
// if a class inherits from another class but has no ctor declared itself.
if(DELEGATE_CTOR.exec(typeStr)||INHERITED_CLASS.exec(typeStr)&&!INHERITED_CLASS_WITH_CTOR.exec(typeStr)){return null;}// Prefer the direct API.
if(type.parameters&&type.parameters!==parentCtor.parameters){return type.parameters;}// API of tsickle for lowering decorators to properties on the class.
var tsickleCtorParams=type.ctorParameters;if(tsickleCtorParams&&tsickleCtorParams!==parentCtor.ctorParameters){// Newer tsickle uses a function closure
// Retain the non-function case for compatibility with older tsickle
var ctorParameters=typeof tsickleCtorParams==='function'?tsickleCtorParams():tsickleCtorParams;var paramTypes_1=ctorParameters.map(function(ctorParam){return ctorParam&&ctorParam.type;});var paramAnnotations_1=ctorParameters.map(function(ctorParam){return ctorParam&&convertTsickleDecoratorIntoMetadata(ctorParam.decorators);});return this._zipTypesAndAnnotations(paramTypes_1,paramAnnotations_1);}// API for metadata created by invoking the decorators.
var paramAnnotations=type.hasOwnProperty(PARAMETERS)&&type[PARAMETERS];var paramTypes=this._reflect&&this._reflect.getOwnMetadata&&this._reflect.getOwnMetadata('design:paramtypes',type);if(paramTypes||paramAnnotations){return this._zipTypesAndAnnotations(paramTypes,paramAnnotations);}// If a class has no decorators, at least create metadata
// based on function.length.
// Note: We know that this is a real constructor as we checked
// the content of the constructor above.
return new Array(type.length).fill(undefined);};ReflectionCapabilities.prototype.parameters=function(type){// Note: only report metadata if we have at least one class decorator
// to stay in sync with the static reflector.
if(!isType(type)){return[];}var parentCtor=getParentCtor(type);var parameters=this._ownParameters(type,parentCtor);if(!parameters&&parentCtor!==Object){parameters=this.parameters(parentCtor);}return parameters||[];};ReflectionCapabilities.prototype._ownAnnotations=function(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.annotations&&typeOrFunc.annotations!==parentCtor.annotations){var annotations=typeOrFunc.annotations;if(typeof annotations==='function'&&annotations.annotations){annotations=annotations.annotations;}return annotations;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.decorators&&typeOrFunc.decorators!==parentCtor.decorators){return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);}// API for metadata created by invoking the decorators.
if(typeOrFunc.hasOwnProperty(ANNOTATIONS)){return typeOrFunc[ANNOTATIONS];}return null;};ReflectionCapabilities.prototype.annotations=function(typeOrFunc){if(!isType(typeOrFunc)){return[];}var parentCtor=getParentCtor(typeOrFunc);var ownAnnotations=this._ownAnnotations(typeOrFunc,parentCtor)||[];var parentAnnotations=parentCtor!==Object?this.annotations(parentCtor):[];return parentAnnotations.concat(ownAnnotations);};ReflectionCapabilities.prototype._ownPropMetadata=function(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.propMetadata&&typeOrFunc.propMetadata!==parentCtor.propMetadata){var propMetadata=typeOrFunc.propMetadata;if(typeof propMetadata==='function'&&propMetadata.propMetadata){propMetadata=propMetadata.propMetadata;}return propMetadata;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.propDecorators&&typeOrFunc.propDecorators!==parentCtor.propDecorators){var propDecorators_1=typeOrFunc.propDecorators;var propMetadata_1={};Object.keys(propDecorators_1).forEach(function(prop){propMetadata_1[prop]=convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);});return propMetadata_1;}// API for metadata created by invoking the decorators.
if(typeOrFunc.hasOwnProperty(PROP_METADATA)){return typeOrFunc[PROP_METADATA];}return null;};ReflectionCapabilities.prototype.propMetadata=function(typeOrFunc){if(!isType(typeOrFunc)){return{};}var parentCtor=getParentCtor(typeOrFunc);var propMetadata={};if(parentCtor!==Object){var parentPropMetadata_1=this.propMetadata(parentCtor);Object.keys(parentPropMetadata_1).forEach(function(propName){propMetadata[propName]=parentPropMetadata_1[propName];});}var ownPropMetadata=this._ownPropMetadata(typeOrFunc,parentCtor);if(ownPropMetadata){Object.keys(ownPropMetadata).forEach(function(propName){var decorators=[];if(propMetadata.hasOwnProperty(propName)){decorators.push.apply(decorators,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(propMetadata[propName]));}decorators.push.apply(decorators,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(ownPropMetadata[propName]));propMetadata[propName]=decorators;});}return propMetadata;};ReflectionCapabilities.prototype.hasLifecycleHook=function(type,lcProperty){return type instanceof Type&&lcProperty in type.prototype;};ReflectionCapabilities.prototype.guards=function(type){return{};};ReflectionCapabilities.prototype.getter=function(name){return new Function('o','return o.'+name+';');};ReflectionCapabilities.prototype.setter=function(name){return new Function('o','v','return o.'+name+' = v;');};ReflectionCapabilities.prototype.method=function(name){var functionBody="if (!o."+name+") throw new Error('\""+name+"\" is undefined');\n        return o."+name+".apply(o, args);";return new Function('o','args',functionBody);};// There is not a concept of import uri in Js, but this is useful in developing Dart applications.
ReflectionCapabilities.prototype.importUri=function(type){// StaticSymbol
if(_typeof(type)==='object'&&type['filePath']){return type['filePath'];}// Runtime type
return"./"+stringify(type);};ReflectionCapabilities.prototype.resourceUri=function(type){return"./"+stringify(type);};ReflectionCapabilities.prototype.resolveIdentifier=function(name,moduleUrl,members,runtime){return runtime;};ReflectionCapabilities.prototype.resolveEnum=function(enumIdentifier,name){return enumIdentifier[name];};return ReflectionCapabilities;}();function convertTsickleDecoratorIntoMetadata(decoratorInvocations){if(!decoratorInvocations){return[];}return decoratorInvocations.map(function(decoratorInvocation){var decoratorType=decoratorInvocation.type;var annotationCls=decoratorType.annotationCls;var annotationArgs=decoratorInvocation.args?decoratorInvocation.args:[];return new(annotationCls.bind.apply(annotationCls,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],annotationArgs)))();});}function getParentCtor(ctor){var parentProto=ctor.prototype?Object.getPrototypeOf(ctor.prototype):null;var parentCtor=parentProto?parentProto.constructor:null;// Note: We always use `Object` as the null value
// to simplify checking later on.
return parentCtor||Object;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Used to resolve resource URLs on `@Component` when used with JIT compilation.
 *
 * Example:
 * ```
 * @Component({
 *   selector: 'my-comp',
 *   templateUrl: 'my-comp.html', // This requires asynchronous resolution
 * })
 * class MyComponnent{
 * }
 *
 * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`
 * // needs to be resolved because `renderComponent` is synchronous process.
 * // renderComponent(MyComponent);
 *
 * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into
 * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.
 * // Use browser's `fetch` function as the default resource resolution strategy.
 * resolveComponentResources(fetch).then(() => {
 *   // After resolution all URLs have been converted into strings.
 *   renderComponent(MyComponent);
 * });
 *
 * ```
 *
 * NOTE: In AOT the resolution happens during compilation, and so there should be no need
 * to call this method outside JIT mode.
 *
 * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved
 * URL. Browser's `fetch` method is a good default implementation.
 */function resolveComponentResources(resourceResolver){// Store all promises which are fetching the resources.
var urlFetches=[];// Cache so that we don't fetch the same resource more than once.
var urlMap=new Map();function cachedResourceResolve(url){var promise=urlMap.get(url);if(!promise){var resp=resourceResolver(url);urlMap.set(url,promise=resp.then(unwrapResponse));urlFetches.push(promise);}return promise;}componentResourceResolutionQueue.forEach(function(component){if(component.templateUrl){cachedResourceResolve(component.templateUrl).then(function(template){component.template=template;component.templateUrl=undefined;});}var styleUrls=component.styleUrls;var styles=component.styles||(component.styles=[]);var styleOffset=component.styles.length;styleUrls&&styleUrls.forEach(function(styleUrl,index){styles.push('');// pre-allocate array.
cachedResourceResolve(styleUrl).then(function(style){styles[styleOffset+index]=style;styleUrls.splice(styleUrls.indexOf(styleUrl),1);if(styleUrls.length==0){component.styleUrls=undefined;}});});});componentResourceResolutionQueue.clear();return Promise.all(urlFetches).then(function(){return null;});}var componentResourceResolutionQueue=new Set();function maybeQueueResolutionOfComponentResources(metadata){if(componentNeedsResolution(metadata)){componentResourceResolutionQueue.add(metadata);}}function componentNeedsResolution(component){return component.templateUrl||component.styleUrls&&component.styleUrls.length;}function unwrapResponse(response){return typeof response=='string'?response:response.text();}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Defines template and style encapsulation options available for Component's {@link Component}.
 *
 * See {@link Component#encapsulation encapsulation}.
 *
 * @usageNotes
 * ### Example
 * {@example core/ts/metadata/encapsulation.ts region='longform'}
 */var ViewEncapsulation;(function(ViewEncapsulation){/**
     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host
     * Element and pre-processing the style rules provided via {@link Component#styles styles} or
     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all
     * selectors.
     *
     * This is the default option.
     */ViewEncapsulation[ViewEncapsulation["Emulated"]=0]="Emulated";/**
     * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.
     * Use the native encapsulation mechanism of the renderer.
     *
     * For the DOM this means using the deprecated [Shadow DOM
     * v0](https://w3c.github.io/webcomponents/spec/shadow/) and
     * creating a ShadowRoot for Component's Host Element.
     */ViewEncapsulation[ViewEncapsulation["Native"]=1]="Native";/**
     * Don't provide any template or style encapsulation.
     */ViewEncapsulation[ViewEncapsulation["None"]=2]="None";/**
     * Use Shadow DOM to encapsulate styles.
     *
     * For the DOM this means using modern [Shadow
     * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and
     * creating a ShadowRoot for Component's Host Element.
     */ViewEncapsulation[ViewEncapsulation["ShadowDom"]=3]="ShadowDom";})(ViewEncapsulation||(ViewEncapsulation={}));/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function ngDevModeResetPerfCounters(){var newCounters={firstTemplatePass:0,tNode:0,tView:0,rendererCreateTextNode:0,rendererSetText:0,rendererCreateElement:0,rendererAddEventListener:0,rendererSetAttribute:0,rendererRemoveAttribute:0,rendererSetProperty:0,rendererSetClassName:0,rendererAddClass:0,rendererRemoveClass:0,rendererSetStyle:0,rendererRemoveStyle:0,rendererDestroy:0,rendererDestroyNode:0,rendererMoveNode:0,rendererRemoveNode:0,rendererCreateComment:0};// NOTE: Under Ivy we may have both window & global defined in the Node
//    environment since ensureDocument() in render3.ts sets global.window.
if(typeof window!='undefined'){// Make sure to refer to ngDevMode as ['ngDevMode'] for closure.
window['ngDevMode']=newCounters;}if(typeof global!='undefined'){// Make sure to refer to ngDevMode as ['ngDevMode'] for closure.
global['ngDevMode']=newCounters;}if(typeof self!='undefined'){// Make sure to refer to ngDevMode as ['ngDevMode'] for closure.
self['ngDevMode']=newCounters;}return newCounters;}/**
 * This checks to see if the `ngDevMode` has been set. If yes,
 * than we honor it, otherwise we default to dev mode with additional checks.
 *
 * The idea is that unless we are doing production build where we explicitly
 * set `ngDevMode == false` we should be helping the developer by providing
 * as much early warning and errors as possible.
 */if(typeof ngDevMode==='undefined'||ngDevMode){ngDevModeResetPerfCounters();}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EMPTY$1={};var EMPTY_ARRAY=[];if(typeof ngDevMode!=='undefined'&&ngDevMode){Object.freeze(EMPTY$1);Object.freeze(EMPTY_ARRAY);}var _renderCompCount=0;/**
 * Create a component definition object.
 *
 *
 * # Example
 * ```
 * class MyDirective {
 *   // Generated by Angular Template Compiler
 *   // [Symbol] syntax will not be supported by TypeScript until v2.7
 *   static ngComponentDef = defineComponent({
 *     ...
 *   });
 * }
 * ```
 */function defineComponent(componentDefinition){var type=componentDefinition.type;var pipeTypes=componentDefinition.pipes;var directiveTypes=componentDefinition.directives;var declaredInputs={};var encapsulation=componentDefinition.encapsulation||ViewEncapsulation.Emulated;var styles=componentDefinition.styles||EMPTY_ARRAY;var animations=componentDefinition.animations||null;var data=componentDefinition.data||{};if(animations){data.animations=animations;}var def={type:type,diPublic:null,consts:componentDefinition.consts,vars:componentDefinition.vars,hostVars:componentDefinition.hostVars||0,factory:componentDefinition.factory,template:componentDefinition.template||null,hostBindings:componentDefinition.hostBindings||null,contentQueries:componentDefinition.contentQueries||null,contentQueriesRefresh:componentDefinition.contentQueriesRefresh||null,attributes:componentDefinition.attributes||null,inputs:invertObject(componentDefinition.inputs,declaredInputs),declaredInputs:declaredInputs,outputs:invertObject(componentDefinition.outputs),exportAs:componentDefinition.exportAs||null,onInit:type.prototype.ngOnInit||null,doCheck:type.prototype.ngDoCheck||null,afterContentInit:type.prototype.ngAfterContentInit||null,afterContentChecked:type.prototype.ngAfterContentChecked||null,afterViewInit:type.prototype.ngAfterViewInit||null,afterViewChecked:type.prototype.ngAfterViewChecked||null,onDestroy:type.prototype.ngOnDestroy||null,onPush:componentDefinition.changeDetection===ChangeDetectionStrategy.OnPush,directiveDefs:directiveTypes?function(){return(typeof directiveTypes==='function'?directiveTypes():directiveTypes).map(extractDirectiveDef);}:null,pipeDefs:pipeTypes?function(){return(typeof pipeTypes==='function'?pipeTypes():pipeTypes).map(extractPipeDef);}:null,selectors:componentDefinition.selectors,viewQuery:componentDefinition.viewQuery||null,features:componentDefinition.features||null,data:data,// TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the
// next line. Also `None` should be 0 not 2.
encapsulation:encapsulation,providers:EMPTY_ARRAY,viewProviders:EMPTY_ARRAY,id:"c"+_renderCompCount++,styles:styles};var feature=componentDefinition.features;feature&&feature.forEach(function(fn){return fn(def);});return def;}function extractDirectiveDef(type){var def=getComponentDef(type)||getDirectiveDef(type);if(ngDevMode&&!def){throw new Error("'"+type.name+"' is neither 'ComponentType' or 'DirectiveType'.");}return def;}function extractPipeDef(type){var def=getPipeDef(type);if(ngDevMode&&!def){throw new Error("'"+type.name+"' is not a 'PipeType'.");}return def;}function defineNgModule(def){var res={type:def.type,bootstrap:def.bootstrap||EMPTY_ARRAY,declarations:def.declarations||EMPTY_ARRAY,imports:def.imports||EMPTY_ARRAY,exports:def.exports||EMPTY_ARRAY,transitiveCompileScopes:null};return res;}/**
 * Inverts an inputs or outputs lookup such that the keys, which were the
 * minified keys, are part of the values, and the values are parsed so that
 * the publicName of the property is the new key
 *
 * e.g. for
 *
 * ```
 * class Comp {
 *   @Input()
 *   propName1: string;
 *
 *   @Input('publicName')
 *   propName2: number;
 * }
 * ```
 *
 * will be serialized as
 *
 * ```
 * {
 *   a0: 'propName1',
 *   b1: ['publicName', 'propName2'],
 * }
 * ```
 *
 * becomes
 *
 * ```
 * {
 *  'propName1': 'a0',
 *  'publicName': 'b1'
 * }
 * ```
 *
 * Optionally the function can take `secondary` which will result in:
 *
 * ```
 * {
 *  'propName1': 'a0',
 *  'propName2': 'b1'
 * }
 * ```
 *

 */function invertObject(obj,secondary){if(obj==null)return EMPTY$1;var newLookup={};for(var minifiedKey in obj){if(obj.hasOwnProperty(minifiedKey)){var publicName=obj[minifiedKey];var declaredName=publicName;if(Array.isArray(publicName)){declaredName=publicName[1];publicName=publicName[0];}newLookup[publicName]=minifiedKey;if(secondary){secondary[declaredName]=minifiedKey;}}}return newLookup;}/**
 * Create a base definition
 *
 * # Example
 * ```
 * class ShouldBeInherited {
 *   static ngBaseDef = defineBase({
 *      ...
 *   })
 * }
 * @param baseDefinition The base definition parameters
 */function defineBase(baseDefinition){var declaredInputs={};return{inputs:invertObject(baseDefinition.inputs,declaredInputs),declaredInputs:declaredInputs,outputs:invertObject(baseDefinition.outputs)};}/**
 * Create a directive definition object.
 *
 * # Example
 * ```
 * class MyDirective {
 *   // Generated by Angular Template Compiler
 *   // [Symbol] syntax will not be supported by TypeScript until v2.7
 *   static ngDirectiveDef = defineDirective({
 *     ...
 *   });
 * }
 * ```
 */var defineDirective=defineComponent;/**
 * Create a pipe definition object.
 *
 * # Example
 * ```
 * class MyPipe implements PipeTransform {
 *   // Generated by Angular Template Compiler
 *   static ngPipeDef = definePipe({
 *     ...
 *   });
 * }
 * ```
 * @param pipeDef Pipe definition generated by the compiler
 */function definePipe(pipeDef){return{name:pipeDef.name,factory:pipeDef.factory,pure:pipeDef.pure!==false,onDestroy:pipeDef.type.prototype.ngOnDestroy||null};}/**
 * The following getter methods retrieve the definition form the type. Currently the retrieval
 * honors inheritance, but in the future we may change the rule to require that definitions are
 * explicit. This would require some sort of migration strategy.
 */function getComponentDef(type){return type[NG_COMPONENT_DEF]||null;}function getDirectiveDef(type){return type[NG_DIRECTIVE_DEF]||null;}function getPipeDef(type){return type[NG_PIPE_DEF]||null;}function getNgModuleDef(type){return type[NG_MODULE_DEF]||null;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function assertEqual(actual,expected,msg){if(actual!=expected){throwError(msg);}}function assertNotEqual(actual,expected,msg){if(actual==expected){throwError(msg);}}function assertLessThan(actual,expected,msg){if(actual>=expected){throwError(msg);}}function assertGreaterThan(actual,expected,msg){if(actual<=expected){throwError(msg);}}function assertDefined(actual,msg){if(actual==null){throwError(msg);}}function assertComponentType(actual,msg){if(msg===void 0){msg='Type passed in is not ComponentType, it does not have \'ngComponentDef\' property.';}if(!getComponentDef(actual)){throwError(msg);}}function assertNgModuleType(actual,msg){if(msg===void 0){msg='Type passed in is not NgModuleType, it does not have \'ngModuleDef\' property.';}if(!getNgModuleDef(actual)){throwError(msg);}}function throwError(msg){// tslint:disable-next-line
debugger;// Left intentionally for better debugger experience.
throw new Error("ASSERTION ERROR: "+msg);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This property will be monkey-patched on elements, components and directives
 */var MONKEY_PATCH_KEY_NAME='__ngContext__';/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */var HEADER_OFFSET=17;// Below are constants for LViewData indices to help us look up LViewData members
// without having to remember the specific indices.
// Uglify will inline these when minifying so there shouldn't be a cost.
var TVIEW=0;var FLAGS=1;var PARENT=2;var NEXT=3;var QUERIES=4;var HOST=5;var HOST_NODE=6;var BINDING_INDEX=7;var CLEANUP=8;var CONTEXT=9;var INJECTOR$1=10;var RENDERER=11;var SANITIZER=12;var TAIL=13;var CONTAINER_INDEX=14;var CONTENT_QUERIES=15;var DECLARATION_VIEW=16;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function devModeEqual(a,b){var isListLikeIterableA=isListLikeIterable(a);var isListLikeIterableB=isListLikeIterable(b);if(isListLikeIterableA&&isListLikeIterableB){return areIterablesEqual(a,b,devModeEqual);}else{var isAObject=a&&(_typeof(a)==='object'||typeof a==='function');var isBObject=b&&(_typeof(b)==='object'||typeof b==='function');if(!isListLikeIterableA&&isAObject&&!isListLikeIterableB&&isBObject){return true;}else{return looseIdentical(a,b);}}}/**
 * Indicates that the result of a {@link Pipe} transformation has changed even though the
 * reference has not changed.
 *
 * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value
 * is stored.
 *
 * Example:
 *
 * ```
 * if (this._latestValue === this._latestReturnedValue) {
 *    return this._latestReturnedValue;
 *  } else {
 *    this._latestReturnedValue = this._latestValue;
 *    return WrappedValue.wrap(this._latestValue); // this will force update
 *  }
 * ```
 *
 */var WrappedValue=/** @class */function(){function WrappedValue(value){this.wrapped=value;}/** Creates a wrapped value. */WrappedValue.wrap=function(value){return new WrappedValue(value);};/**
     * Returns the underlying value of a wrapped value.
     * Returns the given `value` when it is not wrapped.
     **/WrappedValue.unwrap=function(value){return WrappedValue.isWrapped(value)?value.wrapped:value;};/** Returns true if `value` is a wrapped value. */WrappedValue.isWrapped=function(value){return value instanceof WrappedValue;};return WrappedValue;}();/**
 * Represents a basic change from a previous to a new value.
 *
 */var SimpleChange=/** @class */function(){function SimpleChange(previousValue,currentValue,firstChange){this.previousValue=previousValue;this.currentValue=currentValue;this.firstChange=firstChange;}/**
     * Check whether the new value is the first value assigned.
     */SimpleChange.prototype.isFirstChange=function(){return this.firstChange;};return SimpleChange;}();function isListLikeIterable(obj){if(!isJsObject(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&// JS Map are iterables but return entries as [k, v]
getSymbolIterator()in obj;// JS Iterable have a Symbol.iterator prop
}function areIterablesEqual(a,b,comparator){var iterator1=a[getSymbolIterator()]();var iterator2=b[getSymbolIterator()]();while(true){var item1=iterator1.next();var item2=iterator2.next();if(item1.done&&item2.done)return true;if(item1.done||item2.done)return false;if(!comparator(item1.value,item2.value))return false;}}function iterateListLike(obj,fn){if(Array.isArray(obj)){for(var i=0;i<obj.length;i++){fn(obj[i]);}}else{var iterator=obj[getSymbolIterator()]();var item=void 0;while(!(item=iterator.next()).done){fn(item.value);}}}function isJsObject(o){return o!==null&&(typeof o==='function'||_typeof(o)==='object');}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Below are constants for LContainer indices to help us look up LContainer members
 * without having to remember the specific indices.
 * Uglify will inline these when minifying so there shouldn't be a cost.
 */var ACTIVE_INDEX=0;var VIEWS=1;// PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.
// As we already have these constants in LViewData, we don't need to re-create them.
var NATIVE=6;var RENDER_PARENT=7;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Returns whether the values are different from a change detection stand point.
 *
 * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.
 */function isDifferent(a,b,checkNoChangesMode){if(ngDevMode&&checkNoChangesMode){return!devModeEqual(a,b);}// NaN is the only value that is not equal to itself so the first
// test checks if both a and b are not NaN
return!(a!==a&&b!==b)&&a!==b;}function stringify$1(value){if(typeof value=='function')return value.name||value;if(typeof value=='string')return value;if(value==null)return'';return''+value;}/**
 * Flattens an array in non-recursive way. Input arrays are not modified.
 */function flatten(list){var result=[];var i=0;while(i<list.length){var item=list[i];if(Array.isArray(item)){if(item.length>0){list=item.concat(list.slice(i+1));i=0;}else{i++;}}else{result.push(item);i++;}}return result;}/** Retrieves a value from any `LViewData` or `TData`. */function loadInternal(index,arr){ngDevMode&&assertDataInRangeInternal(index+HEADER_OFFSET,arr);return arr[index+HEADER_OFFSET];}function assertDataInRangeInternal(index,arr){assertLessThan(index,arr?arr.length:0,'index expected to be a valid data index');}/**
 * Takes the value of a slot in `LViewData` and returns the element node.
 *
 * Normally, element nodes are stored flat, but if the node has styles/classes on it,
 * it might be wrapped in a styling context. Or if that node has a directive that injects
 * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,
 * it will be wrapped in LViewData. It could even have all three, so we keep looping
 * until we find something that isn't an array.
 *
 * @param value The initial value in `LViewData`
 */function readElementValue(value){while(Array.isArray(value)){value=value[HOST];}return value;}/**
 * Retrieves an element value from the provided `viewData`, by unwrapping
 * from any containers, component views, or style contexts.
 */function getNativeByIndex(index,arr){return readElementValue(arr[index+HEADER_OFFSET]);}function getNativeByTNode(tNode,hostView){return readElementValue(hostView[tNode.index]);}function getTNode(index,view){return view[TVIEW].data[index+HEADER_OFFSET];}function getComponentViewByIndex(nodeIndex,hostView){// Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.
var slotValue=hostView[nodeIndex];return slotValue.length>=HEADER_OFFSET?slotValue:slotValue[HOST];}function isContentQueryHost(tNode){return(tNode.flags&16384/* hasContentQuery */)!==0;}function isComponent(tNode){return(tNode.flags&4096/* isComponent */)===4096/* isComponent */;}function isLContainer(value){// Styling contexts are also arrays, but their first index contains an element node
return Array.isArray(value)&&typeof value[ACTIVE_INDEX]==='number';}/**
 * Retrieve the root view from any component by walking the parent `LViewData` until
 * reaching the root `LViewData`.
 *
 * @param component any component
 */function getRootView(target){ngDevMode&&assertDefined(target,'component');var lViewData=Array.isArray(target)?target:readPatchedLViewData(target);while(lViewData&&!(lViewData[FLAGS]&64/* IsRoot */)){lViewData=lViewData[PARENT];}return lViewData;}function getRootContext(viewOrComponent){return getRootView(viewOrComponent)[CONTEXT];}/**
 * Returns the monkey-patch value data present on the target (which could be
 * a component, directive or a DOM node).
 */function readPatchedData(target){return target[MONKEY_PATCH_KEY_NAME];}function readPatchedLViewData(target){var value=readPatchedData(target);if(value){return Array.isArray(value)?value:value.lViewData;}return null;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /** Returns the matching `LContext` data for a given DOM node, directive or component instance.
 *
 * This function will examine the provided DOM element, component, or directive instance\'s
 * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched
 * value will be that of the newly created `LContext`.
 *
 * If the monkey-patched value is the `LViewData` instance then the context value for that
 * target will be created and the monkey-patch reference will be updated. Therefore when this
 * function is called it may mutate the provided element\'s, component\'s or any of the associated
 * directive\'s monkey-patch values.
 *
 * If the monkey-patch value is not detected then the code will walk up the DOM until an element
 * is found which contains a monkey-patch reference. When that occurs then the provided element
 * will be updated with a new context (which is then returned). If the monkey-patch value is not
 * detected for a component/directive instance then it will throw an error (all components and
 * directives should be automatically monkey-patched by ivy).
 */function getContext(target){var mpValue=readPatchedData(target);if(mpValue){// only when it's an array is it considered an LViewData instance
// ... otherwise it's an already constructed LContext instance
if(Array.isArray(mpValue)){var lViewData=mpValue;var nodeIndex=void 0;var component=undefined;var directives=undefined;if(isComponentInstance(target)){nodeIndex=findViaComponent(lViewData,target);if(nodeIndex==-1){throw new Error('The provided component was not found in the application');}component=target;}else if(isDirectiveInstance(target)){nodeIndex=findViaDirective(lViewData,target);if(nodeIndex==-1){throw new Error('The provided directive was not found in the application');}directives=discoverDirectives(nodeIndex,lViewData,false);}else{nodeIndex=findViaNativeElement(lViewData,target);if(nodeIndex==-1){return null;}}// the goal is not to fill the entire context full of data because the lookups
// are expensive. Instead, only the target data (the element, compontent or
// directive details) are filled into the context. If called multiple times
// with different target values then the missing target data will be filled in.
var native=readElementValue(lViewData[nodeIndex]);var existingCtx=readPatchedData(native);var context=existingCtx&&!Array.isArray(existingCtx)?existingCtx:createLContext(lViewData,nodeIndex,native);// only when the component has been discovered then update the monkey-patch
if(component&&context.component===undefined){context.component=component;attachPatchData(context.component,context);}// only when the directives have been discovered then update the monkey-patch
if(directives&&context.directives===undefined){context.directives=directives;for(var i=0;i<directives.length;i++){attachPatchData(directives[i],context);}}attachPatchData(context.native,context);mpValue=context;}}else{var rElement=target;ngDevMode&&assertDomElement(rElement);// if the context is not found then we need to traverse upwards up the DOM
// to find the nearest element that has already been monkey patched with data
var parent_1=rElement;while(parent_1=parent_1.parentNode){var parentContext=readPatchedData(parent_1);if(parentContext){var lViewData=void 0;if(Array.isArray(parentContext)){lViewData=parentContext;}else{lViewData=parentContext.lViewData;}// the edge of the app was also reached here through another means
// (maybe because the DOM was changed manually).
if(!lViewData){return null;}var index=findViaNativeElement(lViewData,rElement);if(index>=0){var native=readElementValue(lViewData[index]);var context=createLContext(lViewData,index,native);attachPatchData(native,context);mpValue=context;break;}}}}return mpValue||null;}/**
 * Creates an empty instance of a `LContext` context
 */function createLContext(lViewData,nodeIndex,native){return{lViewData:lViewData,nodeIndex:nodeIndex,native:native,component:undefined,directives:undefined,localRefs:undefined};}/**
 * Takes a component instance and returns the view for that component.
 *
 * @param componentInstance
 * @returns The component's view
 */function getComponentViewByInstance(componentInstance){var lViewData=readPatchedData(componentInstance);var view;if(Array.isArray(lViewData)){var nodeIndex=findViaComponent(lViewData,componentInstance);view=getComponentViewByIndex(nodeIndex,lViewData);var context=createLContext(lViewData,nodeIndex,view[HOST]);context.component=componentInstance;attachPatchData(componentInstance,context);attachPatchData(context.native,context);}else{var context=lViewData;view=getComponentViewByIndex(context.nodeIndex,context.lViewData);}return view;}/**
 * Assigns the given data to the given target (which could be a component,
 * directive or DOM node instance) using monkey-patching.
 */function attachPatchData(target,data){target[MONKEY_PATCH_KEY_NAME]=data;}function isComponentInstance(instance){return instance&&instance.constructor&&instance.constructor.ngComponentDef;}function isDirectiveInstance(instance){return instance&&instance.constructor&&instance.constructor.ngDirectiveDef;}/**
 * Locates the element within the given LViewData and returns the matching index
 */function findViaNativeElement(lViewData,target){var tNode=lViewData[TVIEW].firstChild;while(tNode){var native=getNativeByTNode(tNode,lViewData);if(native===target){return tNode.index;}tNode=traverseNextElement(tNode);}return-1;}/**
 * Locates the next tNode (child, sibling or parent).
 */function traverseNextElement(tNode){if(tNode.child){return tNode.child;}else if(tNode.next){return tNode.next;}else if(tNode.parent){return tNode.parent.next||null;}return null;}/**
 * Locates the component within the given LViewData and returns the matching index
 */function findViaComponent(lViewData,componentInstance){var componentIndices=lViewData[TVIEW].components;if(componentIndices){for(var i=0;i<componentIndices.length;i++){var elementComponentIndex=componentIndices[i];var componentView=getComponentViewByIndex(elementComponentIndex,lViewData);if(componentView[CONTEXT]===componentInstance){return elementComponentIndex;}}}else{var rootComponentView=getComponentViewByIndex(HEADER_OFFSET,lViewData);var rootComponent=rootComponentView[CONTEXT];if(rootComponent===componentInstance){// we are dealing with the root element here therefore we know that the
// element is the very first element after the HEADER data in the lView
return HEADER_OFFSET;}}return-1;}/**
 * Locates the directive within the given LViewData and returns the matching index
 */function findViaDirective(lViewData,directiveInstance){// if a directive is monkey patched then it will (by default)
// have a reference to the LViewData of the current view. The
// element bound to the directive being search lives somewhere
// in the view data. We loop through the nodes and check their
// list of directives for the instance.
var tNode=lViewData[TVIEW].firstChild;while(tNode){var directiveIndexStart=getDirectiveStartIndex(tNode);var directiveIndexEnd=getDirectiveEndIndex(tNode,directiveIndexStart);for(var i=directiveIndexStart;i<directiveIndexEnd;i++){if(lViewData[i]===directiveInstance){return tNode.index;}}tNode=traverseNextElement(tNode);}return-1;}function assertDomElement(element){assertEqual(element.nodeType,1,'The provided value must be an instance of an HTMLElement');}/**
 * Returns a list of directives extracted from the given view based on the
 * provided list of directive index values.
 *
 * @param nodeIndex The node index
 * @param lViewData The target view data
 * @param includeComponents Whether or not to include components in returned directives
 */function discoverDirectives(nodeIndex,lViewData,includeComponents){var tNode=lViewData[TVIEW].data[nodeIndex];var directiveStartIndex=getDirectiveStartIndex(tNode);var directiveEndIndex=getDirectiveEndIndex(tNode,directiveStartIndex);if(!includeComponents&&tNode.flags&4096/* isComponent */)directiveStartIndex++;return lViewData.slice(directiveStartIndex,directiveEndIndex);}/**
 * Returns a map of local references (local reference name => element or directive instance) that
 * exist on a given element.
 */function discoverLocalRefs(lViewData,nodeIndex){var tNode=lViewData[TVIEW].data[nodeIndex];if(tNode&&tNode.localNames){var result={};for(var i=0;i<tNode.localNames.length;i+=2){var localRefName=tNode.localNames[i];var directiveIndex=tNode.localNames[i+1];result[localRefName]=directiveIndex===-1?getNativeByTNode(tNode,lViewData):lViewData[directiveIndex];}return result;}return null;}function getDirectiveStartIndex(tNode){// the tNode instances store a flag value which then has a
// pointer which tells the starting index of where all the
// active directives are in the master directive array
return tNode.flags>>15/* DirectiveStartingIndexShift */;}function getDirectiveEndIndex(tNode,startIndex){// The end value is also a part of the same flag
// (see `TNodeFlags` to see how the flag bit shifting
// values are used).
var count=tNode.flags&4095/* DirectiveCountMask */;return count?startIndex+count:-1;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into
 * TView.initHooks during directiveCreate.
 *
 * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:
 * directive index), then saved in the even indices of the initHooks array. The odd indices
 * hold the hook functions themselves.
 *
 * @param index The index of the directive in LViewData
 * @param hooks The static hooks map on the directive def
 * @param tView The current TView
 */function queueInitHooks(index,onInit,doCheck,tView){ngDevMode&&assertEqual(tView.firstTemplatePass,true,'Should only be called on first template pass');if(onInit){(tView.initHooks||(tView.initHooks=[])).push(index,onInit);}if(doCheck){(tView.initHooks||(tView.initHooks=[])).push(index,doCheck);(tView.checkHooks||(tView.checkHooks=[])).push(index,doCheck);}}/**
 * Loops through the directives on a node and queues all their hooks except ngOnInit
 * and ngDoCheck, which are queued separately in directiveCreate.
 */function queueLifecycleHooks(flags,tView){if(tView.firstTemplatePass){var start=flags>>15/* DirectiveStartingIndexShift */;var count=flags&4095/* DirectiveCountMask */;var end=start+count;// It's necessary to loop through the directives at elementEnd() (rather than processing in
// directiveCreate) so we can preserve the current hook order. Content, view, and destroy
// hooks for projected components and directives must be called *before* their hosts.
for(var i=start;i<end;i++){var def=tView.data[i];queueContentHooks(def,tView,i);queueViewHooks(def,tView,i);queueDestroyHooks(def,tView,i);}}}/** Queues afterContentInit and afterContentChecked hooks on TView */function queueContentHooks(def,tView,i){if(def.afterContentInit){(tView.contentHooks||(tView.contentHooks=[])).push(i,def.afterContentInit);}if(def.afterContentChecked){(tView.contentHooks||(tView.contentHooks=[])).push(i,def.afterContentChecked);(tView.contentCheckHooks||(tView.contentCheckHooks=[])).push(i,def.afterContentChecked);}}/** Queues afterViewInit and afterViewChecked hooks on TView */function queueViewHooks(def,tView,i){if(def.afterViewInit){(tView.viewHooks||(tView.viewHooks=[])).push(i,def.afterViewInit);}if(def.afterViewChecked){(tView.viewHooks||(tView.viewHooks=[])).push(i,def.afterViewChecked);(tView.viewCheckHooks||(tView.viewCheckHooks=[])).push(i,def.afterViewChecked);}}/** Queues onDestroy hooks on TView */function queueDestroyHooks(def,tView,i){if(def.onDestroy!=null){(tView.destroyHooks||(tView.destroyHooks=[])).push(i,def.onDestroy);}}/**
 * Calls onInit and doCheck calls if they haven't already been called.
 *
 * @param currentView The current view
 */function executeInitHooks(currentView,tView,creationMode){if(currentView[FLAGS]&16/* RunInit */){executeHooks(currentView,tView.initHooks,tView.checkHooks,creationMode);currentView[FLAGS]&=~16/* RunInit */;}}/**
 * Iterates over afterViewInit and afterViewChecked functions and calls them.
 *
 * @param currentView The current view
 */function executeHooks(data,allHooks,checkHooks,creationMode){var hooksToCall=creationMode?allHooks:checkHooks;if(hooksToCall){callHooks(data,hooksToCall);}}/**
 * Calls lifecycle hooks with their contexts, skipping init hooks if it's not
 * creation mode.
 *
 * @param currentView The current view
 * @param arr The array in which the hooks are found
 */function callHooks(currentView,arr){for(var i=0;i<arr.length;i+=2){arr[i+1].call(currentView[arr[i]]);}}/** Called when directives inject each other (creating a circular dependency) */function throwCyclicDependencyError(token){throw new Error("Cannot instantiate cyclic dependency! "+token);}/** Called when there are multiple component selectors that match a given node */function throwMultipleComponentError(tNode){throw new Error("Multiple components match node with tagname "+tNode.tagName);}/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */function throwErrorIfNoChangesMode(creationMode,checkNoChangesMode,oldValue,currValue){if(checkNoChangesMode){var msg="ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '"+oldValue+"'. Current value: '"+currValue+"'.";if(creationMode){msg+=" It seems like the view has been created after its parent and its children have been dirty checked."+" Has it been created in a change detection hook ?";}// TODO: include debug context
throw new Error(msg);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TNODE=8;var PARENT_INJECTOR=8;var INJECTOR_SIZE=9;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NG_PROJECT_AS_ATTR_NAME='ngProjectAs';/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // TODO: cleanup once the code is merged in angular/angular
var RendererStyleFlags3;(function(RendererStyleFlags3){RendererStyleFlags3[RendererStyleFlags3["Important"]=1]="Important";RendererStyleFlags3[RendererStyleFlags3["DashCase"]=2]="DashCase";})(RendererStyleFlags3||(RendererStyleFlags3={}));/** Returns whether the `renderer` is a `ProceduralRenderer3` */function isProceduralRenderer(renderer){return!!renderer.listen;}var domRendererFactory3={createRenderer:function createRenderer(hostElement,rendererType){return document;}};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function assertNodeType(tNode,type){assertDefined(tNode,'should be called with a TNode');assertEqual(tNode.type,type,"should be a "+typeName(type));}function assertNodeOfPossibleTypes(tNode){var types=[];for(var _i=1;_i<arguments.length;_i++){types[_i-1]=arguments[_i];}assertDefined(tNode,'should be called with a TNode');var found=types.some(function(type){return tNode.type===type;});assertEqual(found,true,"Should be one of "+types.map(typeName).join(', ')+" but got "+typeName(tNode.type));}function typeName(type){if(type==1/* Projection */)return'Projection';if(type==0/* Container */)return'Container';if(type==2/* View */)return'View';if(type==3/* Element */)return'Element';if(type==4/* ElementContainer */)return'ElementContainer';return'<unknown>';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /** Retrieves the parent element of a given node. */function getParentNative(tNode,currentView){return tNode.parent==null?getHostNative(currentView):getNativeByTNode(tNode.parent,currentView);}/**
 * Gets the host element given a view. Will return null if the current view is an embedded view,
 * which does not have a host element.
 */function getHostNative(currentView){var hostTNode=currentView[HOST_NODE];return hostTNode&&hostTNode.type!==2/* View */?getNativeByTNode(hostTNode,currentView[PARENT]):null;}function getLContainer(tNode,embeddedView){if(tNode.index===-1){// This is a dynamically created view inside a dynamic container.
// If the host index is -1, the view has not yet been inserted, so it has no parent.
var containerHostIndex=embeddedView[CONTAINER_INDEX];return containerHostIndex>-1?embeddedView[PARENT][containerHostIndex]:null;}else{// This is a inline view node (e.g. embeddedViewStart)
return embeddedView[PARENT][tNode.parent.index];}}/**
 * Retrieves render parent for a given view.
 * Might be null if a view is not yet attached to any container.
 */function getContainerRenderParent(tViewNode,view){var container=getLContainer(tViewNode,view);return container?container[RENDER_PARENT]:null;}/**
 * Stack used to keep track of projection nodes in walkTNodeTree.
 *
 * This is deliberately created outside of walkTNodeTree to avoid allocating
 * a new array each time the function is called. Instead the array will be
 * re-used by each invocation. This works because the function is not reentrant.
 */var projectionNodeStack=[];/**
 * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first
 * one found, or on all of them.
 *
 * @param viewToWalk the view to walk
 * @param action identifies the action to be performed on the elements
 * @param renderer the current renderer.
 * @param renderParent Optional the render parent node to be set in all LContainers found,
 * required for action modes Insert and Destroy.
 * @param beforeNode Optional the node before which elements should be added, required for action
 * Insert.
 */function walkTNodeTree(viewToWalk,action,renderer,renderParent,beforeNode){var rootTNode=viewToWalk[TVIEW].node;var projectionNodeIndex=-1;var currentView=viewToWalk;var tNode=rootTNode.child;while(tNode){var nextTNode=null;if(tNode.type===3/* Element */){executeNodeAction(action,renderer,renderParent,getNativeByTNode(tNode,currentView),beforeNode);var nodeOrContainer=currentView[tNode.index];if(isLContainer(nodeOrContainer)){// This element has an LContainer, and its comment needs to be handled
executeNodeAction(action,renderer,renderParent,nodeOrContainer[NATIVE],beforeNode);}}else if(tNode.type===0/* Container */){var lContainer=currentView[tNode.index];executeNodeAction(action,renderer,renderParent,lContainer[NATIVE],beforeNode);if(renderParent)lContainer[RENDER_PARENT]=renderParent;if(lContainer[VIEWS].length){currentView=lContainer[VIEWS][0];nextTNode=currentView[TVIEW].node;// When the walker enters a container, then the beforeNode has to become the local native
// comment node.
beforeNode=lContainer[NATIVE];}}else if(tNode.type===1/* Projection */){var componentView=findComponentView(currentView);var componentHost=componentView[HOST_NODE];var head=componentHost.projection[tNode.projection];// Must store both the TNode and the view because this projection node could be nested
// deeply inside embedded views, and we need to get back down to this particular nested view.
projectionNodeStack[++projectionNodeIndex]=tNode;projectionNodeStack[++projectionNodeIndex]=currentView;if(head){currentView=componentView[PARENT];nextTNode=currentView[TVIEW].data[head.index];}}else{// Otherwise, this is a View or an ElementContainer
nextTNode=tNode.child;}if(nextTNode===null){// this last node was projected, we need to get back down to its projection node
if(tNode.next===null&&tNode.flags&8192/* isProjected */){currentView=projectionNodeStack[projectionNodeIndex--];tNode=projectionNodeStack[projectionNodeIndex--];}nextTNode=tNode.next;/**
             * Find the next node in the TNode tree, taking into account the place where a node is
             * projected (in the shadow DOM) rather than where it comes from (in the light DOM).
             *
             * If there is no sibling node, then it goes to the next sibling of the parent node...
             * until it reaches rootNode (at which point null is returned).
             */while(!nextTNode){// If parent is null, we're crossing the view boundary, so we should get the host TNode.
tNode=tNode.parent||currentView[TVIEW].node;if(tNode===null||tNode===rootTNode)return null;// When exiting a container, the beforeNode must be restored to the previous value
if(tNode.type===0/* Container */){currentView=currentView[PARENT];beforeNode=currentView[tNode.index][NATIVE];}if(tNode.type===2/* View */&&currentView[NEXT]){currentView=currentView[NEXT];nextTNode=currentView[TVIEW].node;}else{nextTNode=tNode.next;}}}tNode=nextTNode;}}/**
 * Given a current view, finds the nearest component's host (LElement).
 *
 * @param lViewData LViewData for which we want a host element node
 * @returns The host node
 */function findComponentView(lViewData){var rootTNode=lViewData[HOST_NODE];while(rootTNode&&rootTNode.type===2/* View */){ngDevMode&&assertDefined(lViewData[PARENT],'viewData.parent');lViewData=lViewData[PARENT];rootTNode=lViewData[HOST_NODE];}return lViewData;}/**
 * NOTE: for performance reasons, the possible actions are inlined within the function instead of
 * being passed as an argument.
 */function executeNodeAction(action,renderer,parent,node,beforeNode){if(action===0/* Insert */){isProceduralRenderer(renderer)?renderer.insertBefore(parent,node,beforeNode):parent.insertBefore(node,beforeNode,true);}else if(action===1/* Detach */){isProceduralRenderer(renderer)?renderer.removeChild(parent,node):parent.removeChild(node);}else if(action===2/* Destroy */){ngDevMode&&ngDevMode.rendererDestroyNode++;renderer.destroyNode(node);}}function createTextNode(value,renderer){return isProceduralRenderer(renderer)?renderer.createText(stringify$1(value)):renderer.createTextNode(stringify$1(value));}function addRemoveViewFromContainer(viewToWalk,insertMode,beforeNode){var renderParent=getContainerRenderParent(viewToWalk[TVIEW].node,viewToWalk);ngDevMode&&assertNodeType(viewToWalk[TVIEW].node,2/* View */);if(renderParent){var renderer=viewToWalk[RENDERER];walkTNodeTree(viewToWalk,insertMode?0/* Insert */:1/* Detach */,renderer,renderParent,beforeNode);}}/**
 * Traverses down and up the tree of views and containers to remove listeners and
 * call onDestroy callbacks.
 *
 * Notes:
 *  - Because it's used for onDestroy calls, it needs to be bottom-up.
 *  - Must process containers instead of their views to avoid splicing
 *  when views are destroyed and re-added.
 *  - Using a while loop because it's faster than recursion
 *  - Destroy only called on movement to sibling or movement to parent (laterally or up)
 *
 *  @param rootView The view to destroy
 */function destroyViewTree(rootView){// If the view has no children, we can clean it up and return early.
if(rootView[TVIEW].childIndex===-1){return cleanUpView(rootView);}var viewOrContainer=getLViewChild(rootView);while(viewOrContainer){var next=null;if(viewOrContainer.length>=HEADER_OFFSET){// If LViewData, traverse down to child.
var view=viewOrContainer;if(view[TVIEW].childIndex>-1)next=getLViewChild(view);}else{// If container, traverse down to its first LViewData.
var container=viewOrContainer;if(container[VIEWS].length)next=container[VIEWS][0];}if(next==null){// Only clean up view when moving to the side or up, as destroy hooks
// should be called in order from the bottom up.
while(viewOrContainer&&!viewOrContainer[NEXT]&&viewOrContainer!==rootView){cleanUpView(viewOrContainer);viewOrContainer=getParentState(viewOrContainer,rootView);}cleanUpView(viewOrContainer||rootView);next=viewOrContainer&&viewOrContainer[NEXT];}viewOrContainer=next;}}/**
 * Inserts a view into a container.
 *
 * This adds the view to the container's array of active views in the correct
 * position. It also adds the view's elements to the DOM if the container isn't a
 * root node of another view (in that case, the view's elements will be added when
 * the container's parent view is added later).
 *
 * @param lView The view to insert
 * @param lContainer The container into which the view should be inserted
 * @param parentView The new parent of the inserted view
 * @param index The index at which to insert the view
 * @param containerIndex The index of the container node, if dynamic
 */function insertView(lView,lContainer,parentView,index,containerIndex){var views=lContainer[VIEWS];if(index>0){// This is a new view, we need to add it to the children.
views[index-1][NEXT]=lView;}if(index<views.length){lView[NEXT]=views[index];views.splice(index,0,lView);}else{views.push(lView);lView[NEXT]=null;}// Dynamically inserted views need a reference to their parent container's host so it's
// possible to jump from a view to its container's next when walking the node tree.
if(containerIndex>-1){lView[CONTAINER_INDEX]=containerIndex;lView[PARENT]=parentView;}// Notify query that a new view has been added
if(lView[QUERIES]){lView[QUERIES].insertView(index);}// Sets the attached flag
lView[FLAGS]|=8/* Attached */;}/**
 * Detaches a view from a container.
 *
 * This method splices the view from the container's array of active views. It also
 * removes the view's elements from the DOM.
 *
 * @param lContainer The container from which to detach a view
 * @param removeIndex The index of the view to detach
 * @param detached Whether or not this view is already detached.
 */function detachView(lContainer,removeIndex,detached){var views=lContainer[VIEWS];var viewToDetach=views[removeIndex];if(removeIndex>0){views[removeIndex-1][NEXT]=viewToDetach[NEXT];}views.splice(removeIndex,1);if(!detached){addRemoveViewFromContainer(viewToDetach,false);}if(viewToDetach[QUERIES]){viewToDetach[QUERIES].removeView();}viewToDetach[CONTAINER_INDEX]=-1;viewToDetach[PARENT]=null;// Unsets the attached flag
viewToDetach[FLAGS]&=~8/* Attached */;}/**
 * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.
 *
 * @param lContainer The container from which to remove a view
 * @param tContainer The TContainer node associated with the LContainer
 * @param removeIndex The index of the view to remove
 */function removeView(lContainer,containerHost,removeIndex){var view=lContainer[VIEWS][removeIndex];detachView(lContainer,removeIndex,!!containerHost.detached);destroyLView(view);}/** Gets the child of the given LViewData */function getLViewChild(viewData){var childIndex=viewData[TVIEW].childIndex;return childIndex===-1?null:viewData[childIndex];}/**
 * A standalone function which destroys an LView,
 * conducting cleanup (e.g. removing listeners, calling onDestroys).
 *
 * @param view The view to be destroyed.
 */function destroyLView(view){var renderer=view[RENDERER];if(isProceduralRenderer(renderer)&&renderer.destroyNode){walkTNodeTree(view,2/* Destroy */,renderer,null);}destroyViewTree(view);// Sets the destroyed flag
view[FLAGS]|=32/* Destroyed */;}/**
 * Determines which LViewOrLContainer to jump to when traversing back up the
 * tree in destroyViewTree.
 *
 * Normally, the view's parent LView should be checked, but in the case of
 * embedded views, the container (which is the view node's parent, but not the
 * LView's parent) needs to be checked for a possible next property.
 *
 * @param state The LViewOrLContainer for which we need a parent state
 * @param rootView The rootView, so we don't propagate too far up the view tree
 * @returns The correct parent LViewOrLContainer
 */function getParentState(state,rootView){var tNode;if(state.length>=HEADER_OFFSET&&(tNode=state[HOST_NODE])&&tNode.type===2/* View */){// if it's an embedded view, the state needs to go up to the container, in case the
// container has a next
return getLContainer(tNode,state);}else{// otherwise, use parent view for containers or component views
return state[PARENT]===rootView?null:state[PARENT];}}/**
 * Removes all listeners and call all onDestroys in a given view.
 *
 * @param view The LViewData to clean up
 */function cleanUpView(viewOrContainer){if(viewOrContainer.length>=HEADER_OFFSET){var view=viewOrContainer;removeListeners(view);executeOnDestroys(view);executePipeOnDestroys(view);// For component views only, the local renderer is destroyed as clean up time.
if(view[TVIEW].id===-1&&isProceduralRenderer(view[RENDERER])){ngDevMode&&ngDevMode.rendererDestroy++;view[RENDERER].destroy();}}}/** Removes listeners and unsubscribes from output subscriptions */function removeListeners(viewData){var cleanup=viewData[TVIEW].cleanup;if(cleanup!=null){for(var i=0;i<cleanup.length-1;i+=2){if(typeof cleanup[i]==='string'){// This is a listener with the native renderer
var native=readElementValue(viewData[cleanup[i+1]]);var listener=viewData[CLEANUP][cleanup[i+2]];native.removeEventListener(cleanup[i],listener,cleanup[i+3]);i+=2;}else if(typeof cleanup[i]==='number'){// This is a listener with renderer2 (cleanup fn can be found by index)
var cleanupFn=viewData[CLEANUP][cleanup[i]];cleanupFn();}else{// This is a cleanup function that is grouped with the index of its context
var context=viewData[CLEANUP][cleanup[i+1]];cleanup[i].call(context);}}viewData[CLEANUP]=null;}}/** Calls onDestroy hooks for this view */function executeOnDestroys(view){var tView=view[TVIEW];var destroyHooks;if(tView!=null&&(destroyHooks=tView.destroyHooks)!=null){callHooks(view,destroyHooks);}}/** Calls pipe destroy hooks for this view */function executePipeOnDestroys(viewData){var pipeDestroyHooks=viewData[TVIEW]&&viewData[TVIEW].pipeDestroyHooks;if(pipeDestroyHooks){callHooks(viewData,pipeDestroyHooks);}}function getRenderParent(tNode,currentView){if(canInsertNativeNode(tNode,currentView)){var hostTNode=currentView[HOST_NODE];return tNode.parent==null&&hostTNode.type===2/* View */?getContainerRenderParent(hostTNode,currentView):getParentNative(tNode,currentView);}return null;}function canInsertNativeChildOfElement(tNode){// If the parent is null, then we are inserting across views. This happens when we
// insert a root element of the component view into the component host element and it
// should always be eager.
if(tNode.parent==null||// We should also eagerly insert if the parent is a regular, non-component element
// since we know that this relationship will never be broken.
tNode.parent.type===3/* Element */&&!(tNode.parent.flags&4096/* isComponent */)){return true;}// Parent is a Component. Component's content nodes are not inserted immediately
// because they will be projected, and so doing insert at this point would be wasteful.
// Since the projection would than move it to its final destination.
return false;}/**
 * We might delay insertion of children for a given view if it is disconnected.
 * This might happen for 2 main reasons:
 * - view is not inserted into any container (view was created but not inserted yet)
 * - view is inserted into a container but the container itself is not inserted into the DOM
 * (container might be part of projection or child of a view that is not inserted yet).
 *
 * In other words we can insert children of a given view if this view was inserted into a container
 * and
 * the container itself has its render parent determined.
 */function canInsertNativeChildOfView(viewTNode,view){// Because we are inserting into a `View` the `View` may be disconnected.
var container=getLContainer(viewTNode,view);if(container==null||container[RENDER_PARENT]==null){// The `View` is not inserted into a `Container` or the parent `Container`
// itself is disconnected. So we have to delay.
return false;}// The parent `Container` is in inserted state, so we can eagerly insert into
// this location.
return true;}/**
 * Returns whether a native element can be inserted into the given parent.
 *
 * There are two reasons why we may not be able to insert a element immediately.
 * - Projection: When creating a child content element of a component, we have to skip the
 *   insertion because the content of a component will be projected.
 *   `<component><content>delayed due to projection</content></component>`
 * - Parent container is disconnected: This can happen when we are inserting a view into
 *   parent container, which itself is disconnected. For example the parent container is part
 *   of a View which has not be inserted or is mare for projection but has not been inserted
 *   into destination.
 *

 *
 * @param parent The parent where the child will be inserted into.
 * @param currentView Current LView being processed.
 * @return boolean Whether the child should be inserted now (or delayed until later).
 */function canInsertNativeNode(tNode,currentView){var currentNode=tNode;var parent=tNode.parent;if(tNode.parent&&tNode.parent.type===4/* ElementContainer */){currentNode=getHighestElementContainer(tNode);parent=currentNode.parent;}if(parent===null)parent=currentView[HOST_NODE];if(parent&&parent.type===2/* View */){return canInsertNativeChildOfView(parent,currentView);}else{// Parent is a regular element or a component
return canInsertNativeChildOfElement(currentNode);}}/**
 * Inserts a native node before another native node for a given parent using {@link Renderer3}.
 * This is a utility function that can be used when native nodes were determined - it abstracts an
 * actual renderer being used.
 */function nativeInsertBefore(renderer,parent,child,beforeNode){if(isProceduralRenderer(renderer)){renderer.insertBefore(parent,child,beforeNode);}else{parent.insertBefore(child,beforeNode,true);}}/**
 * Appends the `child` element to the `parent`.
 *
 * The element insertion might be delayed {@link canInsertNativeNode}.
 *
 * @param childEl The child that should be appended
 * @param childTNode The TNode of the child element
 * @param currentView The current LView
 * @returns Whether or not the child was appended
 */function appendChild(childEl,childTNode,currentView){if(childEl!==null&&canInsertNativeNode(childTNode,currentView)){var renderer=currentView[RENDERER];var parentEl=getParentNative(childTNode,currentView);var parentTNode=childTNode.parent||currentView[HOST_NODE];if(parentTNode.type===2/* View */){var lContainer=getLContainer(parentTNode,currentView);var views=lContainer[VIEWS];var index=views.indexOf(currentView);nativeInsertBefore(renderer,lContainer[RENDER_PARENT],childEl,getBeforeNodeForView(index,views,lContainer[NATIVE]));}else if(parentTNode.type===4/* ElementContainer */){var elementContainer=getHighestElementContainer(childTNode);var renderParent=getRenderParent(elementContainer,currentView);nativeInsertBefore(renderer,renderParent,childEl,parentEl);}else{isProceduralRenderer(renderer)?renderer.appendChild(parentEl,childEl):parentEl.appendChild(childEl);}return true;}return false;}/**
 * Gets the top-level ng-container if ng-containers are nested.
 *
 * @param ngContainer The TNode of the starting ng-container
 * @returns tNode The TNode of the highest level ng-container
 */function getHighestElementContainer(ngContainer){while(ngContainer.parent!=null&&ngContainer.parent.type===4/* ElementContainer */){ngContainer=ngContainer.parent;}return ngContainer;}function getBeforeNodeForView(index,views,containerNative){if(index+1<views.length){var view=views[index+1];var viewTNode=view[HOST_NODE];return viewTNode.child?getNativeByTNode(viewTNode.child,view):containerNative;}else{return containerNative;}}/**
 * Removes the `child` element from the DOM if not in view and not projected.
 *
 * @param childTNode The TNode of the child to remove
 * @param childEl The child that should be removed
 * @param currentView The current LView
 * @returns Whether or not the child was removed
 */function removeChild(childTNode,childEl,currentView){// We only remove the element if not in View or not projected.
if(childEl!==null&&canInsertNativeNode(childTNode,currentView)){var parentNative=getParentNative(childTNode,currentView);var renderer=currentView[RENDERER];isProceduralRenderer(renderer)?renderer.removeChild(parentNative,childEl):parentNative.removeChild(childEl);return true;}return false;}/**
 * Appends a projected node to the DOM, or in the case of a projected container,
 * appends the nodes from all of the container's active views to the DOM.
 *
 * @param projectedTNode The TNode to be projected
 * @param tProjectionNode The projection (ng-content) TNode
 * @param currentView Current LView
 * @param projectionView Projection view (view above current)
 */function appendProjectedNode(projectedTNode,tProjectionNode,currentView,projectionView){var native=getNativeByTNode(projectedTNode,projectionView);appendChild(native,tProjectionNode,currentView);// the projected contents are processed while in the shadow view (which is the currentView)
// therefore we need to extract the view where the host element lives since it's the
// logical container of the content projected views
attachPatchData(native,projectionView);var renderParent=getRenderParent(tProjectionNode,currentView);var nodeOrContainer=projectionView[projectedTNode.index];if(projectedTNode.type===0/* Container */){// The node we are adding is a container and we are adding it to an element which
// is not a component (no more re-projection).
// Alternatively a container is projected at the root of a component's template
// and can't be re-projected (as not content of any component).
// Assign the final projection location in those cases.
nodeOrContainer[RENDER_PARENT]=renderParent;var views=nodeOrContainer[VIEWS];for(var i=0;i<views.length;i++){addRemoveViewFromContainer(views[i],true,nodeOrContainer[NATIVE]);}}else{if(projectedTNode.type===4/* ElementContainer */){var ngContainerChildTNode=projectedTNode.child;while(ngContainerChildTNode){appendProjectedNode(ngContainerChildTNode,tProjectionNode,currentView,projectionView);ngContainerChildTNode=ngContainerChildTNode.next;}}if(isLContainer(nodeOrContainer)){nodeOrContainer[RENDER_PARENT]=renderParent;appendChild(nodeOrContainer[NATIVE],tProjectionNode,currentView);}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function isCssClassMatching(nodeClassAttrVal,cssClassToMatch){var nodeClassesLen=nodeClassAttrVal.length;var matchIndex=nodeClassAttrVal.indexOf(cssClassToMatch);var matchEndIdx=matchIndex+cssClassToMatch.length;if(matchIndex===-1// no match
||matchIndex>0&&nodeClassAttrVal[matchIndex-1]!==' '// no space before
||matchEndIdx<nodeClassesLen&&nodeClassAttrVal[matchEndIdx]!==' ')// no space after
{return false;}return true;}/**
 * A utility function to match an Ivy node static data against a simple CSS selector
 *
 * @param node static data to match
 * @param selector
 * @returns true if node matches the selector.
 */function isNodeMatchingSelector(tNode,selector){ngDevMode&&assertDefined(selector[0],'Selector should have a tag name');var mode=4/* ELEMENT */;var nodeAttrs=tNode.attrs;var selectOnlyMarkerIdx=nodeAttrs?nodeAttrs.indexOf(1/* SelectOnly */):-1;// When processing ":not" selectors, we skip to the next ":not" if the
// current one doesn't match
var skipToNextSelector=false;for(var i=0;i<selector.length;i++){var current=selector[i];if(typeof current==='number'){// If we finish processing a :not selector and it hasn't failed, return false
if(!skipToNextSelector&&!isPositive(mode)&&!isPositive(current)){return false;}// If we are skipping to the next :not() and this mode flag is positive,
// it's a part of the current :not() selector, and we should keep skipping
if(skipToNextSelector&&isPositive(current))continue;skipToNextSelector=false;mode=current|mode&1/* NOT */;continue;}if(skipToNextSelector)continue;if(mode&4/* ELEMENT */){mode=2/* ATTRIBUTE */|mode&1/* NOT */;if(current!==''&&current!==tNode.tagName){if(isPositive(mode))return false;skipToNextSelector=true;}}else{var attrName=mode&8/* CLASS */?'class':current;var attrIndexInNode=findAttrIndexInNode(attrName,nodeAttrs);if(attrIndexInNode===-1){if(isPositive(mode))return false;skipToNextSelector=true;continue;}var selectorAttrValue=mode&8/* CLASS */?current:selector[++i];if(selectorAttrValue!==''){var nodeAttrValue=void 0;var maybeAttrName=nodeAttrs[attrIndexInNode];if(selectOnlyMarkerIdx>-1&&attrIndexInNode>selectOnlyMarkerIdx){nodeAttrValue='';}else{ngDevMode&&assertNotEqual(maybeAttrName,0/* NamespaceURI */,'We do not match directives on namespaced attributes');nodeAttrValue=nodeAttrs[attrIndexInNode+1];}if(mode&8/* CLASS */&&!isCssClassMatching(nodeAttrValue,selectorAttrValue)||mode&2/* ATTRIBUTE */&&selectorAttrValue!==nodeAttrValue){if(isPositive(mode))return false;skipToNextSelector=true;}}}}return isPositive(mode)||skipToNextSelector;}function isPositive(mode){return(mode&1/* NOT */)===0;}/**
 * Examines an attributes definition array from a node to find the index of the
 * attribute with the specified name.
 *
 * NOTE: Will not find namespaced attributes.
 *
 * @param name the name of the attribute to find
 * @param attrs the attribute array to examine
 */function findAttrIndexInNode(name,attrs){if(attrs===null)return-1;var selectOnlyMode=false;var i=0;while(i<attrs.length){var maybeAttrName=attrs[i];if(maybeAttrName===name){return i;}else if(maybeAttrName===0/* NamespaceURI */){// NOTE(benlesh): will not find namespaced attributes. This is by design.
i+=4;}else{if(maybeAttrName===1/* SelectOnly */){selectOnlyMode=true;}i+=selectOnlyMode?1:2;}}return-1;}function isNodeMatchingSelectorList(tNode,selector){for(var i=0;i<selector.length;i++){if(isNodeMatchingSelector(tNode,selector[i])){return true;}}return false;}function getProjectAsAttrValue(tNode){var nodeAttrs=tNode.attrs;if(nodeAttrs!=null){var ngProjectAsAttrIdx=nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);// only check for ngProjectAs in attribute names, don't accidentally match attribute's value
// (attribute names are stored at even indexes)
if((ngProjectAsAttrIdx&1)===0){return nodeAttrs[ngProjectAsAttrIdx+1];}}return null;}/**
 * Checks a given node against matching selectors and returns
 * selector index (or 0 if none matched).
 *
 * This function takes into account the ngProjectAs attribute: if present its value will be compared
 * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.
 */function matchingSelectorIndex(tNode,selectors,textSelectors){var ngProjectAsAttrVal=getProjectAsAttrValue(tNode);for(var i=0;i<selectors.length;i++){// if a node has the ngProjectAs attribute match it against unparsed selector
// match a node against a parsed selector only if ngProjectAs attribute is not present
if(ngProjectAsAttrVal===textSelectors[i]||ngProjectAsAttrVal===null&&isNodeMatchingSelectorList(tNode,selectors[i])){return i+1;// first matching selector "captures" a given node
}}return 0;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EMPTY_ARR=[];var EMPTY_OBJ={};function createEmptyStylingContext(element,sanitizer,initialStylingValues){return[null,sanitizer||null,initialStylingValues||[null],0,0,element||null,null,null// PreviousMultiStyleValue
];}/**
 * Used clone a copy of a pre-computed template of a styling context.
 *
 * A pre-computed template is designed to be computed once for a given element
 * (instructions.ts has logic for caching this).
 */function allocStylingContext(element,templateStyleContext){// each instance gets a copy
var context=templateStyleContext.slice();context[5/* ElementPosition */]=element;return context;}/**
 * Retrieve the `StylingContext` at a given index.
 *
 * This method lazily creates the `StylingContext`. This is because in most cases
 * we have styling without any bindings. Creating `StylingContext` eagerly would mean that
 * every style declaration such as `<div style="color: red">` would result `StyleContext`
 * which would create unnecessary memory pressure.
 *
 * @param index Index of the style allocation. See: `elementStyling`.
 * @param viewData The view to search for the styling context
 */function getStylingContext(index,viewData){var storageIndex=index+HEADER_OFFSET;var slotValue=viewData[storageIndex];var wrapper=viewData;while(Array.isArray(slotValue)){wrapper=slotValue;slotValue=slotValue[HOST];}if(isStylingContext(wrapper)){return wrapper;}else{// This is an LViewData or an LContainer
var stylingTemplate=getTNode(index,viewData).stylingTemplate;if(wrapper!==viewData)storageIndex=HOST;return wrapper[storageIndex]=stylingTemplate?allocStylingContext(slotValue,stylingTemplate):createEmptyStylingContext(slotValue);}}function isStylingContext(value){// Not an LViewData or an LContainer
return typeof value[FLAGS]!=='number'&&typeof value[ACTIVE_INDEX]!=='number';}function getOrCreatePlayerContext(target,context){context=context||getContext(target);if(ngDevMode&&!context){throw new Error('Only elements that exist in an Angular application can be used for player access');}var lViewData=context.lViewData,nodeIndex=context.nodeIndex;var stylingContext=getStylingContext(nodeIndex-HEADER_OFFSET,lViewData);return stylingContext[0/* PlayerContext */]||allocPlayerContext(stylingContext);}function allocPlayerContext(data){return data[0/* PlayerContext */]=[];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Creates a styling context template where styling information is stored.
 * Any styles that are later referenced using `updateStyleProp` must be
 * passed in within this function. Initial values for those styles are to
 * be declared after all initial style properties are declared (this change in
 * mode between declarations and initial styles is made possible using a special
 * enum value found in `definition.ts`).
 *
 * @param initialStyleDeclarations a list of style declarations and initial style values
 *    that are used later within the styling context.
 *
 *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']
 *       This implies that `width` and `height` will be later styled and that the `width`
 *       property has an initial value of `100px`.
 *
 * @param initialClassDeclarations a list of class declarations and initial class values
 *    that are used later within the styling context.
 *
 *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]
 *       This implies that `foo` and `bar` will be later styled and that the `foo`
 *       class will be applied to the element as an initial class since it's true
 */function createStylingContextTemplate(initialClassDeclarations,initialStyleDeclarations,styleSanitizer){var initialStylingValues=[null];var context=createEmptyStylingContext(null,styleSanitizer,initialStylingValues);// we use two maps since a class name might collide with a CSS style prop
var stylesLookup={};var classesLookup={};var totalStyleDeclarations=0;if(initialStyleDeclarations){var hasPassedDeclarations=false;for(var i=0;i<initialStyleDeclarations.length;i++){var v=initialStyleDeclarations[i];// this flag value marks where the declarations end the initial values begin
if(v===1/* VALUES_MODE */){hasPassedDeclarations=true;}else{var prop=v;if(hasPassedDeclarations){var value=initialStyleDeclarations[++i];initialStylingValues.push(value);stylesLookup[prop]=initialStylingValues.length-1;}else{totalStyleDeclarations++;stylesLookup[prop]=0;}}}}// make where the class offsets begin
context[4/* ClassOffsetPosition */]=totalStyleDeclarations;if(initialClassDeclarations){var hasPassedDeclarations=false;for(var i=0;i<initialClassDeclarations.length;i++){var v=initialClassDeclarations[i];// this flag value marks where the declarations end the initial values begin
if(v===1/* VALUES_MODE */){hasPassedDeclarations=true;}else{var className=v;if(hasPassedDeclarations){var value=initialClassDeclarations[++i];initialStylingValues.push(value);classesLookup[className]=initialStylingValues.length-1;}else{classesLookup[className]=0;}}}}var styleProps=Object.keys(stylesLookup);var classNames=Object.keys(classesLookup);var classNamesIndexStart=styleProps.length;var totalProps=styleProps.length+classNames.length;// *2 because we are filling for both single and multi style spaces
var maxLength=totalProps*3/* Size */*2+8/* SingleStylesStartPosition */;// we need to fill the array from the start so that we can access
// both the multi and the single array positions in the same loop block
for(var i=8/* SingleStylesStartPosition */;i<maxLength;i++){context.push(null);}var singleStart=8/* SingleStylesStartPosition */;var multiStart=totalProps*3/* Size */+8/* SingleStylesStartPosition */;// fill single and multi-level styles
for(var i=0;i<totalProps;i++){var isClassBased_1=i>=classNamesIndexStart;var prop=isClassBased_1?classNames[i-classNamesIndexStart]:styleProps[i];var indexForInitial=isClassBased_1?classesLookup[prop]:stylesLookup[prop];var initialValue=initialStylingValues[indexForInitial];var indexForMulti=i*3/* Size */+multiStart;var indexForSingle=i*3/* Size */+singleStart;var initialFlag=prepareInitialFlag(prop,isClassBased_1,styleSanitizer||null);setFlag(context,indexForSingle,pointers(initialFlag,indexForInitial,indexForMulti));setProp(context,indexForSingle,prop);setValue(context,indexForSingle,null);var flagForMulti=initialFlag|(initialValue!==null?1/* Dirty */:0/* None */);setFlag(context,indexForMulti,pointers(flagForMulti,indexForInitial,indexForSingle));setProp(context,indexForMulti,prop);setValue(context,indexForMulti,null);}// there is no initial value flag for the master index since it doesn't
// reference an initial style value
setFlag(context,3/* MasterFlagPosition */,pointers(0,0,multiStart));setContextDirty(context,initialStylingValues.length>1);return context;}/**
 * Sets and resolves all `multi` styling on an `StylingContext` so that they can be
 * applied to the element once `renderStyling` is called.
 *
 * All missing styles/class (any values that are not provided in the new `styles`
 * or `classes` params) will resolve to `null` within their respective positions
 * in the context.
 *
 * @param context The styling context that will be updated with the
 *    newly provided style values.
 * @param classes The key/value map of CSS class names that will be used for the update.
 * @param styles The key/value map of CSS styles that will be used for the update.
 */function updateStylingMap(context,classes,styles){styles=styles||null;// early exit (this is what's done to avoid using ctx.bind() to cache the value)
var ignoreAllClassUpdates=classes===context[6/* PreviousMultiClassValue */];var ignoreAllStyleUpdates=styles===context[7/* PreviousMultiStyleValue */];if(ignoreAllClassUpdates&&ignoreAllStyleUpdates)return;var classNames=EMPTY_ARR;var applyAllClasses=false;// each time a string-based value pops up then it shouldn't require a deep
// check of what's changed.
if(!ignoreAllClassUpdates){context[6/* PreviousMultiClassValue */]=classes;if(typeof classes=='string'){classNames=classes.split(/\s+/);// this boolean is used to avoid having to create a key/value map of `true` values
// since a classname string implies that all those classes are added
applyAllClasses=true;}else{classNames=classes?Object.keys(classes):EMPTY_ARR;}}classes=classes||EMPTY_OBJ;if(!ignoreAllStyleUpdates){context[7/* PreviousMultiStyleValue */]=styles;}var styleProps=styles?Object.keys(styles):EMPTY_ARR;styles=styles||EMPTY_OBJ;var classesStartIndex=styleProps.length;var multiStartIndex=getMultiStartIndex(context);var dirty=false;var ctxIndex=multiStartIndex;var propIndex=0;var propLimit=styleProps.length+classNames.length;// the main loop here will try and figure out how the shape of the provided
// styles differ with respect to the context. Later if the context/styles/classes
// are off-balance then they will be dealt in another loop after this one
while(ctxIndex<context.length&&propIndex<propLimit){var isClassBased_2=propIndex>=classesStartIndex;var processValue=!isClassBased_2&&!ignoreAllStyleUpdates||isClassBased_2&&!ignoreAllClassUpdates;// when there is a cache-hit for a string-based class then we should
// avoid doing any work diffing any of the changes
if(processValue){var adjustedPropIndex=isClassBased_2?propIndex-classesStartIndex:propIndex;var newProp=isClassBased_2?classNames[adjustedPropIndex]:styleProps[adjustedPropIndex];var newValue=isClassBased_2?applyAllClasses?true:classes[newProp]:styles[newProp];var prop=getProp(context,ctxIndex);if(prop===newProp){var value=getValue(context,ctxIndex);var flag=getPointers(context,ctxIndex);if(hasValueChanged(flag,value,newValue)){setValue(context,ctxIndex,newValue);var initialValue=getInitialValue(context,flag);// there is no point in setting this to dirty if the previously
// rendered value was being referenced by the initial style (or null)
if(hasValueChanged(flag,initialValue,newValue)){setDirty(context,ctxIndex,true);dirty=true;}}}else{var indexOfEntry=findEntryPositionByProp(context,newProp,ctxIndex);if(indexOfEntry>0){// it was found at a later point ... just swap the values
var valueToCompare=getValue(context,indexOfEntry);var flagToCompare=getPointers(context,indexOfEntry);swapMultiContextEntries(context,ctxIndex,indexOfEntry);if(hasValueChanged(flagToCompare,valueToCompare,newValue)){var initialValue=getInitialValue(context,flagToCompare);setValue(context,ctxIndex,newValue);if(hasValueChanged(flagToCompare,initialValue,newValue)){setDirty(context,ctxIndex,true);dirty=true;}}}else{// we only care to do this if the insertion is in the middle
var newFlag=prepareInitialFlag(newProp,isClassBased_2,getStyleSanitizer(context));insertNewMultiProperty(context,ctxIndex,isClassBased_2,newProp,newFlag,newValue);dirty=true;}}}ctxIndex+=3/* Size */;propIndex++;}// this means that there are left-over values in the context that
// were not included in the provided styles/classes and in this
// case the  goal is to "remove" them from the context (by nullifying)
while(ctxIndex<context.length){var flag=getPointers(context,ctxIndex);var isClassBased_3=(flag&2/* Class */)===2/* Class */;var processValue=!isClassBased_3&&!ignoreAllStyleUpdates||isClassBased_3&&!ignoreAllClassUpdates;if(processValue){var value=getValue(context,ctxIndex);var doRemoveValue=valueExists(value,isClassBased_3);if(doRemoveValue){setDirty(context,ctxIndex,true);setValue(context,ctxIndex,null);dirty=true;}}ctxIndex+=3/* Size */;}// this means that there are left-over properties in the context that
// were not detected in the context during the loop above. In that
// case we want to add the new entries into the list
var sanitizer=getStyleSanitizer(context);while(propIndex<propLimit){var isClassBased_4=propIndex>=classesStartIndex;var processValue=!isClassBased_4&&!ignoreAllStyleUpdates||isClassBased_4&&!ignoreAllClassUpdates;if(processValue){var adjustedPropIndex=isClassBased_4?propIndex-classesStartIndex:propIndex;var prop=isClassBased_4?classNames[adjustedPropIndex]:styleProps[adjustedPropIndex];var value=isClassBased_4?applyAllClasses?true:classes[prop]:styles[prop];var flag=prepareInitialFlag(prop,isClassBased_4,sanitizer)|1/* Dirty */;context.push(flag,prop,value);dirty=true;}propIndex++;}if(dirty){setContextDirty(context,true);}}/**
 * Sets and resolves a single styling property/value on the provided `StylingContext` so
 * that they can be applied to the element once `renderStyling` is called.
 *
 * Note that prop-level styling values are considered higher priority than any styling that
 * has been applied using `updateStylingMap`, therefore, when styling values are rendered
 * then any styles/classes that have been applied using this function will be considered first
 * (then multi values second and then initial values as a backup).
 *
 * @param context The styling context that will be updated with the
 *    newly provided style value.
 * @param index The index of the property which is being updated.
 * @param value The CSS style value that will be assigned
 */function updateStyleProp(context,index,value){var singleIndex=8/* SingleStylesStartPosition */+index*3/* Size */;var currValue=getValue(context,singleIndex);var currFlag=getPointers(context,singleIndex);// didn't change ... nothing to make a note of
if(hasValueChanged(currFlag,currValue,value)){// the value will always get updated (even if the dirty flag is skipped)
setValue(context,singleIndex,value);var indexForMulti=getMultiOrSingleIndex(currFlag);// if the value is the same in the multi-area then there's no point in re-assembling
var valueForMulti=getValue(context,indexForMulti);if(!valueForMulti||hasValueChanged(currFlag,valueForMulti,value)){var multiDirty=false;var singleDirty=true;var isClassBased_5=(currFlag&2/* Class */)===2/* Class */;// only when the value is set to `null` should the multi-value get flagged
if(!valueExists(value,isClassBased_5)&&valueExists(valueForMulti,isClassBased_5)){multiDirty=true;singleDirty=false;}setDirty(context,indexForMulti,multiDirty);setDirty(context,singleIndex,singleDirty);setContextDirty(context,true);}}}/**
 * This method will toggle the referenced CSS class (by the provided index)
 * within the given context.
 *
 * @param context The styling context that will be updated with the
 *    newly provided class value.
 * @param index The index of the CSS class which is being updated.
 * @param addOrRemove Whether or not to add or remove the CSS class
 */function updateClassProp(context,index,addOrRemove){var adjustedIndex=index+context[4/* ClassOffsetPosition */];updateStyleProp(context,adjustedIndex,addOrRemove);}/**
 * Renders all queued styling using a renderer onto the given element.
 *
 * This function works by rendering any styles (that have been applied
 * using `updateStylingMap`) and any classes (that have been applied using
 * `updateStyleProp`) onto the provided element using the provided renderer.
 * Just before the styles/classes are rendered a final key/value style map
 * will be assembled (if `styleStore` or `classStore` are provided).
 *
 * @param lElement the element that the styles will be rendered on
 * @param context The styling context that will be used to determine
 *      what styles will be rendered
 * @param renderer the renderer that will be used to apply the styling
 * @param styleStore if provided, the updated style values will be applied
 *    to this key/value map instead of being renderered via the renderer.
 * @param classStore if provided, the updated class values will be applied
 *    to this key/value map instead of being renderered via the renderer.
 */function renderStyling(context,renderer,styleStore,classStore){if(isContextDirty(context)){var native=context[5/* ElementPosition */];var multiStartIndex=getMultiStartIndex(context);var styleSanitizer=getStyleSanitizer(context);for(var i=8/* SingleStylesStartPosition */;i<context.length;i+=3/* Size */){// there is no point in rendering styles that have not changed on screen
if(isDirty(context,i)){var prop=getProp(context,i);var value=getValue(context,i);var flag=getPointers(context,i);var isClassBased_6=flag&2/* Class */?true:false;var isInSingleRegion=i<multiStartIndex;var valueToApply=value;// VALUE DEFER CASE 1: Use a multi value instead of a null single value
// this check implies that a single value was removed and we
// should now defer to a multi value and use that (if set).
if(isInSingleRegion&&!valueExists(valueToApply,isClassBased_6)){// single values ALWAYS have a reference to a multi index
var multiIndex=getMultiOrSingleIndex(flag);valueToApply=getValue(context,multiIndex);}// VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)
// the initial value will always be a string or null,
// therefore we can safely adopt it incase there's nothing else
// note that this should always be a falsy check since `false` is used
// for both class and style comparisons (styles can't be false and false
// classes are turned off and should therefore defer to their initial values)
if(!valueExists(valueToApply,isClassBased_6)){valueToApply=getInitialValue(context,flag);}if(isClassBased_6){setClass(native,prop,valueToApply?true:false,renderer,classStore);}else{var sanitizer=flag&4/* Sanitize */?styleSanitizer:null;setStyle(native,prop,valueToApply,renderer,sanitizer,styleStore);}setDirty(context,i,false);}}setContextDirty(context,false);}}/**
 * This function renders a given CSS prop/value entry using the
 * provided renderer. If a `store` value is provided then
 * that will be used a render context instead of the provided
 * renderer.
 *
 * @param native the DOM Element
 * @param prop the CSS style property that will be rendered
 * @param value the CSS style value that will be rendered
 * @param renderer
 * @param store an optional key/value map that will be used as a context to render styles on
 */function setStyle(native,prop,value,renderer,sanitizer,store){value=sanitizer&&value?sanitizer(prop,value):value;if(store){store[prop]=value;}else if(value){ngDevMode&&ngDevMode.rendererSetStyle++;isProceduralRenderer(renderer)?renderer.setStyle(native,prop,value,RendererStyleFlags3.DashCase):native['style'].setProperty(prop,value);}else{ngDevMode&&ngDevMode.rendererRemoveStyle++;isProceduralRenderer(renderer)?renderer.removeStyle(native,prop,RendererStyleFlags3.DashCase):native['style'].removeProperty(prop);}}/**
 * This function renders a given CSS class value using the provided
 * renderer (by adding or removing it from the provided element).
 * If a `store` value is provided then that will be used a render
 * context instead of the provided renderer.
 *
 * @param native the DOM Element
 * @param prop the CSS style property that will be rendered
 * @param value the CSS style value that will be rendered
 * @param renderer
 * @param store an optional key/value map that will be used as a context to render styles on
 */function setClass(native,className,add,renderer,store){if(store){store[className]=add;}else if(add){ngDevMode&&ngDevMode.rendererAddClass++;isProceduralRenderer(renderer)?renderer.addClass(native,className):native['classList'].add(className);}else{ngDevMode&&ngDevMode.rendererRemoveClass++;isProceduralRenderer(renderer)?renderer.removeClass(native,className):native['classList'].remove(className);}}function setDirty(context,index,isDirtyYes){var adjustedIndex=index>=8/* SingleStylesStartPosition */?index+0/* FlagsOffset */:index;if(isDirtyYes){context[adjustedIndex]|=1/* Dirty */;}else{context[adjustedIndex]&=~1/* Dirty */;}}function isDirty(context,index){var adjustedIndex=index>=8/* SingleStylesStartPosition */?index+0/* FlagsOffset */:index;return(context[adjustedIndex]&1/* Dirty */)==1/* Dirty */;}function isClassBased(context,index){var adjustedIndex=index>=8/* SingleStylesStartPosition */?index+0/* FlagsOffset */:index;return(context[adjustedIndex]&2/* Class */)==2/* Class */;}function isSanitizable(context,index){var adjustedIndex=index>=8/* SingleStylesStartPosition */?index+0/* FlagsOffset */:index;return(context[adjustedIndex]&4/* Sanitize */)==4/* Sanitize */;}function pointers(configFlag,staticIndex,dynamicIndex){return configFlag&7/* BitMask */|staticIndex<<3/* BitCountSize */|dynamicIndex<<14/* BitCountSize */+3/* BitCountSize */;}function getInitialValue(context,flag){var index=getInitialIndex(flag);return context[2/* InitialStylesPosition */][index];}function getInitialIndex(flag){return flag>>3/* BitCountSize */&16383/* BitMask */;}function getMultiOrSingleIndex(flag){var index=flag>>14/* BitCountSize */+3/* BitCountSize */&16383/* BitMask */;return index>=8/* SingleStylesStartPosition */?index:-1;}function getMultiStartIndex(context){return getMultiOrSingleIndex(context[3/* MasterFlagPosition */]);}function getStyleSanitizer(context){return context[1/* StyleSanitizerPosition */];}function setProp(context,index,prop){context[index+1/* PropertyOffset */]=prop;}function setValue(context,index,value){context[index+2/* ValueOffset */]=value;}function setFlag(context,index,flag){var adjustedIndex=index===3/* MasterFlagPosition */?index:index+0/* FlagsOffset */;context[adjustedIndex]=flag;}function getPointers(context,index){var adjustedIndex=index===3/* MasterFlagPosition */?index:index+0/* FlagsOffset */;return context[adjustedIndex];}function getValue(context,index){return context[index+2/* ValueOffset */];}function getProp(context,index){return context[index+1/* PropertyOffset */];}function isContextDirty(context){return isDirty(context,3/* MasterFlagPosition */);}function setContextDirty(context,isDirtyYes){setDirty(context,3/* MasterFlagPosition */,isDirtyYes);}function findEntryPositionByProp(context,prop,startIndex){for(var i=(startIndex||0)+1/* PropertyOffset */;i<context.length;i+=3/* Size */){var thisProp=context[i];if(thisProp==prop){return i-1/* PropertyOffset */;}}return-1;}function swapMultiContextEntries(context,indexA,indexB){var tmpValue=getValue(context,indexA);var tmpProp=getProp(context,indexA);var tmpFlag=getPointers(context,indexA);var flagA=tmpFlag;var flagB=getPointers(context,indexB);var singleIndexA=getMultiOrSingleIndex(flagA);if(singleIndexA>=0){var _flag=getPointers(context,singleIndexA);var _initial=getInitialIndex(_flag);setFlag(context,singleIndexA,pointers(_flag,_initial,indexB));}var singleIndexB=getMultiOrSingleIndex(flagB);if(singleIndexB>=0){var _flag=getPointers(context,singleIndexB);var _initial=getInitialIndex(_flag);setFlag(context,singleIndexB,pointers(_flag,_initial,indexA));}setValue(context,indexA,getValue(context,indexB));setProp(context,indexA,getProp(context,indexB));setFlag(context,indexA,getPointers(context,indexB));setValue(context,indexB,tmpValue);setProp(context,indexB,tmpProp);setFlag(context,indexB,tmpFlag);}function updateSinglePointerValues(context,indexStartPosition){for(var i=indexStartPosition;i<context.length;i+=3/* Size */){var multiFlag=getPointers(context,i);var singleIndex=getMultiOrSingleIndex(multiFlag);if(singleIndex>0){var singleFlag=getPointers(context,singleIndex);var initialIndexForSingle=getInitialIndex(singleFlag);var flagValue=(isDirty(context,singleIndex)?1/* Dirty */:0/* None */)|(isClassBased(context,singleIndex)?2/* Class */:0/* None */)|(isSanitizable(context,singleIndex)?4/* Sanitize */:0/* None */);var updatedFlag=pointers(flagValue,initialIndexForSingle,i);setFlag(context,singleIndex,updatedFlag);}}}function insertNewMultiProperty(context,index,classBased,name,flag,value){var doShift=index<context.length;// prop does not exist in the list, add it in
context.splice(index,0,flag|1/* Dirty */|(classBased?2/* Class */:0/* None */),name,value);if(doShift){// because the value was inserted midway into the array then we
// need to update all the shifted multi values' single value
// pointers to point to the newly shifted location
updateSinglePointerValues(context,index+3/* Size */);}}function valueExists(value,isClassBased){if(isClassBased){return value?true:false;}return value!==null;}function prepareInitialFlag(name,isClassBased,sanitizer){if(isClassBased){return 2/* Class */;}else if(sanitizer&&sanitizer(name)){return 4/* Sanitize */;}return 0/* None */;}function hasValueChanged(flag,a,b){var isClassBased=flag&2/* Class */;var hasValues=a&&b;var usesSanitizer=flag&4/* Sanitize */;// the toString() comparison ensures that a value is checked
// ... otherwise (during sanitization bypassing) the === comparsion
// would fail since a new String() instance is created
if(!isClassBased&&hasValues&&usesSanitizer){// we know for sure we're dealing with strings at this point
return a.toString()!==b.toString();}// everything else is safe to check with a normal equality check
return a!==b;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A permanent marker promise which signifies that the current CD tree is
 * clean.
 */var _CLEAN_PROMISE=Promise.resolve(null);/**
 * Token set in currentMatches while dependencies are being resolved.
 *
 * If we visit a directive that has a value set to CIRCULAR, we know we've
 * already seen it, and thus have a circular dependency.
 */var CIRCULAR$1='__CIRCULAR__';/**
 * This property gets set before entering a template.
 *
 * This renderer can be one of two varieties of Renderer3:
 *
 * - ObjectedOrientedRenderer3
 *
 * This is the native browser API style, e.g. operations are methods on individual objects
 * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload
 * size).
 *
 * - ProceduralRenderer3
 *
 * In non-native browser environments (e.g. platforms such as web-workers), this is the facade
 * that enables element manipulation. This also facilitates backwards compatibility with
 * Renderer2.
 */var renderer;function getRenderer(){// top level variables should not be exported for performance reasons (PERF_NOTES.md)
return renderer;}var rendererFactory;function getRendererFactory(){// top level variables should not be exported for performance reasons (PERF_NOTES.md)
return rendererFactory;}function getCurrentSanitizer(){return viewData&&viewData[SANITIZER];}/**
 * Store the element depth count. This is used to identify the root elements of the template
 * so that we can than attach `LViewData` to only those elements.
 */var elementDepthCount;/**
 * Stores whether directives should be matched to elements.
 *
 * When template contains `ngNonBindable` than we need to prevent the runtime form matching
 * directives on children of that element.
 *
 * Example:
 * ```
 * <my-comp my-directive>
 *   Should match component / directive.
 * </my-comp>
 * <div ngNonBindable>
 *   <my-comp my-directive>
 *     Should not match component / directive because we are in ngNonBindable.
 *   </my-comp>
 * </div>
 * ```
 */var bindingsEnabled;/**
 * Returns the current OpaqueViewState instance.
 *
 * Used in conjunction with the restoreView() instruction to save a snapshot
 * of the current view and restore it when listeners are invoked. This allows
 * walking the declaration view tree in listeners to get vars from parent views.
 */function getCurrentView(){return viewData;}/**
 * Restores `contextViewData` to the given OpaqueViewState instance.
 *
 * Used in conjunction with the getCurrentView() instruction to save a snapshot
 * of the current view and restore it when listeners are invoked. This allows
 * walking the declaration view tree in listeners to get vars from parent views.
 *
 * @param viewToRestore The OpaqueViewState instance to restore.
 */function restoreView(viewToRestore){contextViewData=viewToRestore;}/** Used to set the parent property when nodes are created and track query results. */var previousOrParentTNode;function getPreviousOrParentTNode(){// top level variables should not be exported for performance reasons (PERF_NOTES.md)
return previousOrParentTNode;}function setEnvironment(tNode,view){previousOrParentTNode=tNode;viewData=view;}/**
 * If `isParent` is:
 *  - `true`: then `previousOrParentTNode` points to a parent node.
 *  - `false`: then `previousOrParentTNode` points to previous node (sibling).
 */var isParent;var tView;var currentQueries;/**
 * Query instructions can ask for "current queries" in 2 different cases:
 * - when creating view queries (at the root of a component view, before any node is created - in
 * this case currentQueries points to view queries)
 * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we
 * create content queries).
 */function getOrCreateCurrentQueries(QueryType){// if this is the first content query on a node, any existing LQueries needs to be cloned
// in subsequent template passes, the cloning occurs before directive instantiation.
if(previousOrParentTNode&&previousOrParentTNode!==viewData[HOST_NODE]&&!isContentQueryHost(previousOrParentTNode)){currentQueries&&(currentQueries=currentQueries.clone());previousOrParentTNode.flags|=16384/* hasContentQuery */;}return currentQueries||(currentQueries=new QueryType(null,null,null));}/**
 * This property gets set before entering a template.
 */var creationMode;function getCreationMode(){// top level variables should not be exported for performance reasons (PERF_NOTES.md)
return creationMode;}/**
 * State of the current view being processed.
 *
 * An array of nodes (text, element, container, etc), pipes, their bindings, and
 * any local variables that need to be stored between invocations.
 */var viewData;/**
 * Internal function that returns the current LViewData instance.
 *
 * The getCurrentView() instruction should be used for anything public.
 */function _getViewData(){// top level variables should not be exported for performance reasons (PERF_NOTES.md)
return viewData;}/**
 * The last viewData retrieved by nextContext().
 * Allows building nextContext() and reference() calls.
 *
 * e.g. const inner = x().$implicit; const outer = x().$implicit;
 */var contextViewData=null;function getCleanup(view){// top level variables should not be exported for performance reasons (PERF_NOTES.md)
return view[CLEANUP]||(view[CLEANUP]=[]);}function getTViewCleanup(view){return view[TVIEW].cleanup||(view[TVIEW].cleanup=[]);}/**
 * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.
 *
 * Necessary to support ChangeDetectorRef.checkNoChanges().
 */var checkNoChangesMode=false;/** Whether or not this is the first time the current view has been processed. */var firstTemplatePass=true;/**
 * The root index from which pure function instructions should calculate their binding
 * indices. In component views, this is TView.bindingStartIndex. In a host binding
 * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.
 */var bindingRootIndex=-1;// top level variables should not be exported for performance reasons (PERF_NOTES.md)
function getBindingRoot(){return bindingRootIndex;}/**
 * Swap the current state with a new state.
 *
 * For performance reasons we store the state in the top level of the module.
 * This way we minimize the number of properties to read. Whenever a new view
 * is entered we have to store the state for later, and when the view is
 * exited the state has to be restored
 *
 * @param newView New state to become active
 * @param host Element to which the View is a child of
 * @returns the previous state;
 */function enterView(newView,hostTNode){var oldView=viewData;tView=newView&&newView[TVIEW];creationMode=newView&&(newView[FLAGS]&1/* CreationMode */)===1/* CreationMode */;firstTemplatePass=newView&&tView.firstTemplatePass;bindingRootIndex=newView&&tView.bindingStartIndex;renderer=newView&&newView[RENDERER];previousOrParentTNode=hostTNode;isParent=true;viewData=contextViewData=newView;oldView&&(oldView[QUERIES]=currentQueries);currentQueries=newView&&newView[QUERIES];return oldView;}/**
 * Used in lieu of enterView to make it clear when we are exiting a child view. This makes
 * the direction of traversal (up or down the view tree) a bit clearer.
 *
 * @param newView New state to become active
 * @param creationOnly An optional boolean to indicate that the view was processed in creation mode
 * only, i.e. the first update will be done later. Only possible for dynamically created views.
 */function leaveView(newView,creationOnly){if(!creationOnly){if(!checkNoChangesMode){executeHooks(viewData,tView.viewHooks,tView.viewCheckHooks,creationMode);}// Views are clean and in update mode after being checked, so these bits are cleared
viewData[FLAGS]&=~(1/* CreationMode */|4/* Dirty */);}viewData[FLAGS]|=16/* RunInit */;viewData[BINDING_INDEX]=tView.bindingStartIndex;enterView(newView,null);}/**
 * Refreshes the view, executing the following steps in that order:
 * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host
 * bindings, refreshes child components.
 * Note: view hooks are triggered later when leaving the view.
 */function refreshDescendantViews(){setHostBindings();var parentFirstTemplatePass=firstTemplatePass;// This needs to be set before children are processed to support recursive components
tView.firstTemplatePass=firstTemplatePass=false;if(!checkNoChangesMode){executeInitHooks(viewData,tView,creationMode);}refreshDynamicEmbeddedViews(viewData);// Content query results must be refreshed before content hooks are called.
refreshContentQueries(tView);if(!checkNoChangesMode){executeHooks(viewData,tView.contentHooks,tView.contentCheckHooks,creationMode);}refreshChildComponents(tView.components,parentFirstTemplatePass);}/** Sets the host bindings for the current view. */function setHostBindings(){if(tView.expandoInstructions){bindingRootIndex=viewData[BINDING_INDEX]=tView.expandoStartIndex;var currentDirectiveIndex=-1;var currentElementIndex=-1;for(var i=0;i<tView.expandoInstructions.length;i++){var instruction=tView.expandoInstructions[i];if(typeof instruction==='number'){if(instruction<=0){// Negative numbers mean that we are starting new EXPANDO block and need to update
// the current element and directive index.
currentElementIndex=-instruction;if(typeof viewData[bindingRootIndex]==='number'){// We've hit an injector. It may or may not exist depending on whether
// there is a public directive on this node.
bindingRootIndex+=INJECTOR_SIZE;}currentDirectiveIndex=bindingRootIndex;}else{// This is either the injector size (so the binding root can skip over directives
// and get to the first set of host bindings on this node) or the host var count
// (to get to the next set of host bindings on this node).
bindingRootIndex+=instruction;}}else{// If it's not a number, it's a host binding function that needs to be executed.
viewData[BINDING_INDEX]=bindingRootIndex;// We must subtract the header offset because the load() instruction
// expects a raw, unadjusted index.
instruction(currentDirectiveIndex-HEADER_OFFSET,currentElementIndex);currentDirectiveIndex++;}}}}/** Refreshes content queries for all directives in the given view. */function refreshContentQueries(tView){if(tView.contentQueries!=null){for(var i=0;i<tView.contentQueries.length;i+=2){var directiveDefIdx=tView.contentQueries[i];var directiveDef=tView.data[directiveDefIdx];directiveDef.contentQueriesRefresh(directiveDefIdx-HEADER_OFFSET,tView.contentQueries[i+1]);}}}/** Refreshes child components in the current view. */function refreshChildComponents(components,parentFirstTemplatePass){if(components!=null){for(var i=0;i<components.length;i++){componentRefresh(components[i],parentFirstTemplatePass);}}}function executeInitAndContentHooks(){if(!checkNoChangesMode){executeInitHooks(viewData,tView,creationMode);executeHooks(viewData,tView.contentHooks,tView.contentCheckHooks,creationMode);}}function createLViewData(renderer,tView,context,flags,sanitizer){var instance=tView.blueprint.slice();instance[FLAGS]=flags|1/* CreationMode */|8/* Attached */|16/* RunInit */;instance[PARENT]=instance[DECLARATION_VIEW]=viewData;instance[CONTEXT]=context;instance[INJECTOR$1]=viewData?viewData[INJECTOR$1]:null;instance[RENDERER]=renderer;instance[SANITIZER]=sanitizer||null;return instance;}function createNodeAtIndex(index,type,native,name,attrs){var adjustedIndex=index+HEADER_OFFSET;ngDevMode&&assertLessThan(adjustedIndex,viewData.length,"Slot should have been initialized with null");viewData[adjustedIndex]=native;var tNode=tView.data[adjustedIndex];if(tNode==null){tNode=tView.data[adjustedIndex]=createTNode(type,adjustedIndex,name,attrs,null);// Now link ourselves into the tree.
if(previousOrParentTNode){if(isParent&&previousOrParentTNode.child==null&&(tNode.parent!==null||previousOrParentTNode.type===2/* View */)){// We are in the same view, which means we are adding content node to the parent view.
previousOrParentTNode.child=tNode;}else if(!isParent){previousOrParentTNode.next=tNode;}}}if(tView.firstChild==null&&type===3/* Element */){tView.firstChild=tNode;}previousOrParentTNode=tNode;isParent=true;return tNode;}function createViewNode(index,view){// View nodes are not stored in data because they can be added / removed at runtime (which
// would cause indices to change). Their TNodes are instead stored in tView.node.
if(view[TVIEW].node==null){view[TVIEW].node=createTNode(2/* View */,index,null,null,null);}isParent=true;return previousOrParentTNode=view[HOST_NODE]=view[TVIEW].node;}/**
 * When elements are created dynamically after a view blueprint is created (e.g. through
 * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future
 * template passes.
 */function adjustBlueprintForNewNode(view){var tView=view[TVIEW];if(tView.firstTemplatePass){tView.expandoStartIndex++;tView.blueprint.push(null);view.push(null);}}//////////////////////////
//// Render
//////////////////////////
/**
 * Resets the application state.
 */function resetComponentState(){isParent=false;previousOrParentTNode=null;elementDepthCount=0;bindingsEnabled=true;}/**
 * Used for creating the LViewNode of a dynamic embedded view,
 * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().
 * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).
 */function createEmbeddedViewAndNode(tView,context,declarationView,renderer,queries,injectorIndex){var _isParent=isParent;var _previousOrParentTNode=previousOrParentTNode;isParent=true;previousOrParentTNode=null;var lView=createLViewData(renderer,tView,context,2/* CheckAlways */,getCurrentSanitizer());lView[DECLARATION_VIEW]=declarationView;if(queries){lView[QUERIES]=queries.createView();}createViewNode(-1,lView);if(tView.firstTemplatePass){tView.node.injectorIndex=injectorIndex;}isParent=_isParent;previousOrParentTNode=_previousOrParentTNode;return lView;}/**
 * Used for rendering embedded views (e.g. dynamically created views)
 *
 * Dynamically created views must store/retrieve their TViews differently from component views
 * because their template functions are nested in the template functions of their hosts, creating
 * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside
 * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we
 * can't store TViews in the template function itself (as we do for comps). Instead, we store the
 * TView for dynamically created views on their host TNode, which only has one instance.
 */function renderEmbeddedTemplate(viewToRender,tView,context,rf){var _isParent=isParent;var _previousOrParentTNode=previousOrParentTNode;var oldView;if(viewToRender[FLAGS]&64/* IsRoot */){// This is a root view inside the view tree
tickRootContext(viewToRender[CONTEXT]);}else{try{isParent=true;previousOrParentTNode=null;oldView=enterView(viewToRender,viewToRender[HOST_NODE]);namespaceHTML();tView.template(rf,context);if(rf&2/* Update */){refreshDescendantViews();}else{// This must be set to false immediately after the first creation run because in an
// ngFor loop, all the views will be created together before update mode runs and turns
// off firstTemplatePass. If we don't set it here, instances will perform directive
// matching, etc again and again.
viewToRender[TVIEW].firstTemplatePass=firstTemplatePass=false;}}finally{// renderEmbeddedTemplate() is called twice, once for creation only and then once for
// update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.
var isCreationOnly=(rf&1/* Create */)===1/* Create */;leaveView(oldView,isCreationOnly);isParent=_isParent;previousOrParentTNode=_previousOrParentTNode;}}}/**
 * Retrieves a context at the level specified and saves it as the global, contextViewData.
 * Will get the next level up if level is not specified.
 *
 * This is used to save contexts of parent views so they can be bound in embedded views, or
 * in conjunction with reference() to bind a ref from a parent view.
 *
 * @param level The relative level of the view from which to grab context compared to contextVewData
 * @returns context
 */function nextContext(level){if(level===void 0){level=1;}contextViewData=walkUpViews(level,contextViewData);return contextViewData[CONTEXT];}function renderComponentOrTemplate(hostView,componentOrContext,templateFn){var oldView=enterView(hostView,hostView[HOST_NODE]);try{if(rendererFactory.begin){rendererFactory.begin();}if(templateFn){namespaceHTML();templateFn(getRenderFlags(hostView),componentOrContext);refreshDescendantViews();}else{executeInitAndContentHooks();// Element was stored at 0 in data and directive was stored at 0 in directives
// in renderComponent()
setHostBindings();componentRefresh(HEADER_OFFSET,false);}}finally{if(rendererFactory.end){rendererFactory.end();}leaveView(oldView);}}/**
 * This function returns the default configuration of rendering flags depending on when the
 * template is in creation mode or update mode. By default, the update block is run with the
 * creation block when the view is in creation mode. Otherwise, the update block is run
 * alone.
 *
 * Dynamically created views do NOT use this configuration (update block and create block are
 * always run separately).
 */function getRenderFlags(view){return view[FLAGS]&1/* CreationMode */?1/* Create */|2/* Update */:2/* Update */;}//////////////////////////
//// Namespace
//////////////////////////
var _currentNamespace=null;function namespaceSVG(){_currentNamespace='http://www.w3.org/2000/svg/';}function namespaceMathML(){_currentNamespace='http://www.w3.org/1998/MathML/';}function namespaceHTML(){_currentNamespace=null;}//////////////////////////
//// Element
//////////////////////////
/**
 * Creates an empty element using {@link elementStart} and {@link elementEnd}
 *
 * @param index Index of the element in the data array
 * @param name Name of the DOM Node
 * @param attrs Statically bound set of attributes to be written into the DOM element on creation.
 * @param localRefs A set of local reference bindings on the element.
 */function element(index,name,attrs,localRefs){elementStart(index,name,attrs,localRefs);elementEnd();}/**
 * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.
 * The instruction must later be followed by `elementContainerEnd()` call.
 *
 * @param index Index of the element in the LViewData array
 * @param attrs Set of attributes to be used when matching directives.
 * @param localRefs A set of local reference bindings on the element.
 *
 * Even if this instruction accepts a set of attributes no actual attribute values are propagated to
 * the DOM (as a comment node can't have attributes). Attributes are here only for directive
 * matching purposes and setting initial inputs of directives.
 */function elementContainerStart(index,attrs,localRefs){ngDevMode&&assertEqual(viewData[BINDING_INDEX],tView.bindingStartIndex,'element containers should be created before any bindings');ngDevMode&&ngDevMode.rendererCreateComment++;var native=renderer.createComment(ngDevMode?'ng-container':'');ngDevMode&&assertDataInRange(index-1);var tNode=createNodeAtIndex(index,4/* ElementContainer */,native,null,attrs||null);appendChild(native,tNode,viewData);createDirectivesAndLocals(localRefs);}/** Mark the end of the <ng-container>. */function elementContainerEnd(){if(isParent){isParent=false;}else{ngDevMode&&assertHasParent();previousOrParentTNode=previousOrParentTNode.parent;}ngDevMode&&assertNodeType(previousOrParentTNode,4/* ElementContainer */);currentQueries&&(currentQueries=currentQueries.addNode(previousOrParentTNode));queueLifecycleHooks(previousOrParentTNode.flags,tView);}/**
 * Create DOM element. The instruction must later be followed by `elementEnd()` call.
 *
 * @param index Index of the element in the LViewData array
 * @param name Name of the DOM Node
 * @param attrs Statically bound set of attributes to be written into the DOM element on creation.
 * @param localRefs A set of local reference bindings on the element.
 *
 * Attributes and localRefs are passed as an array of strings where elements with an even index
 * hold an attribute name and elements with an odd index hold an attribute value, ex.:
 * ['id', 'warning5', 'class', 'alert']
 */function elementStart(index,name,attrs,localRefs){ngDevMode&&assertEqual(viewData[BINDING_INDEX],tView.bindingStartIndex,'elements should be created before any bindings ');ngDevMode&&ngDevMode.rendererCreateElement++;var native=elementCreate(name);ngDevMode&&assertDataInRange(index-1);var tNode=createNodeAtIndex(index,3/* Element */,native,name,attrs||null);if(attrs){setUpAttributes(native,attrs);}appendChild(native,tNode,viewData);createDirectivesAndLocals(localRefs);// any immediate children of a component or template container must be pre-emptively
// monkey-patched with the component view data so that the element can be inspected
// later on using any element discovery utility methods (see `element_discovery.ts`)
if(elementDepthCount===0){attachPatchData(native,viewData);}elementDepthCount++;}/**
 * Creates a native element from a tag name, using a renderer.
 * @param name the tag name
 * @param overriddenRenderer Optional A renderer to override the default one
 * @returns the element created
 */function elementCreate(name,overriddenRenderer){var native;var rendererToUse=overriddenRenderer||renderer;if(isProceduralRenderer(rendererToUse)){native=rendererToUse.createElement(name,_currentNamespace);}else{if(_currentNamespace===null){native=rendererToUse.createElement(name);}else{native=rendererToUse.createElementNS(_currentNamespace,name);}}return native;}/**
 * Creates directive instances and populates local refs.
 *
 * @param localRefs Local refs of the node in question
 * @param localRefExtractor mapping function that extracts local ref value from TNode
 */function createDirectivesAndLocals(localRefs,localRefExtractor){if(localRefExtractor===void 0){localRefExtractor=getNativeByTNode;}if(!bindingsEnabled)return;if(firstTemplatePass){ngDevMode&&ngDevMode.firstTemplatePass++;cacheMatchingDirectivesForNode(previousOrParentTNode,tView,localRefs||null);}else{instantiateDirectivesDirectly();}saveResolvedLocalsInData(localRefExtractor);}/**
 * On first template pass, we match each node against available directive selectors and save
 * the resulting defs in the correct instantiation order for subsequent change detection runs
 * (so dependencies are always created before the directives that inject them).
 */function cacheMatchingDirectivesForNode(tNode,tView,localRefs){// Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.
var exportsMap=localRefs?{'':-1}:null;var matches=tView.currentMatches=findDirectiveMatches(tNode);generateExpandoBlock(tNode,matches);var totalHostVars=0;if(matches){for(var i=0;i<matches.length;i+=2){var def=matches[i];var valueIndex=i+1;resolveDirective(def,valueIndex,matches);totalHostVars+=def.hostVars;saveNameToExportMap(matches[valueIndex],def,exportsMap);}}if(exportsMap)cacheMatchingLocalNames(tNode,localRefs,exportsMap);prefillHostVars(totalHostVars);}/**
 * Generates a new block in TView.expandoInstructions for this node.
 *
 * Each expando block starts with the element index (turned negative so we can distinguish
 * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.
 */function generateExpandoBlock(tNode,matches){var directiveCount=matches?matches.length/2:0;var elementIndex=-(tNode.index-HEADER_OFFSET);if(directiveCount>0){(tView.expandoInstructions||(tView.expandoInstructions=[])).push(elementIndex,directiveCount);}}/**
 * On the first template pass, we need to reserve space for host binding values
 * after directives are matched (so all directives are saved, then bindings).
 * Because we are updating the blueprint, we only need to do this once.
 */function prefillHostVars(totalHostVars){for(var i=0;i<totalHostVars;i++){viewData.push(NO_CHANGE);tView.blueprint.push(NO_CHANGE);tView.data.push(null);}}/** Matches the current node against all available selectors. */function findDirectiveMatches(tNode){var registry=tView.directiveRegistry;var matches=null;if(registry){for(var i=0;i<registry.length;i++){var def=registry[i];if(isNodeMatchingSelectorList(tNode,def.selectors)){matches||(matches=[]);if(def.diPublic)def.diPublic(def);if(def.template){if(tNode.flags&4096/* isComponent */)throwMultipleComponentError(tNode);addComponentLogic(def);// The component is always stored first with directives after.
matches.unshift(def,null);}else{matches.push(def,null);}}}}return matches;}function resolveDirective(def,valueIndex,matches){if(matches[valueIndex]===null){matches[valueIndex]=CIRCULAR$1;var instance=def.factory();return directiveCreate(matches[valueIndex]=viewData.length,instance,def);}else if(matches[valueIndex]===CIRCULAR$1){// If we revisit this directive before it's resolved, we know it's circular
throwCyclicDependencyError(def.type);}return null;}/** Stores index of component's host element so it will be queued for view refresh during CD. */function queueComponentIndexForCheck(){if(firstTemplatePass){(tView.components||(tView.components=[])).push(previousOrParentTNode.index);}}/** Stores index of directive and host element so it will be queued for binding refresh during CD.
 */function queueHostBindingForCheck(dirIndex,def){ngDevMode&&assertEqual(firstTemplatePass,true,'Should only be called in first template pass.');tView.expandoInstructions.push(def.hostBindings,def.hostVars);}/**
 * This function instantiates the given directives.
 */function instantiateDirectivesDirectly(){ngDevMode&&assertEqual(firstTemplatePass,false,"Directives should only be instantiated directly after first template pass");var count=previousOrParentTNode.flags&4095/* DirectiveCountMask */;if(isContentQueryHost(previousOrParentTNode)&&currentQueries){currentQueries=currentQueries.clone();}if(count>0){var start=previousOrParentTNode.flags>>15/* DirectiveStartingIndexShift */;var end=start+count;for(var i=start;i<end;i++){var def=tView.data[i];// Component view must be set on node before the factory is created so
// ChangeDetectorRefs have a way to store component view on creation.
if(def.template){addComponentLogic(def);}directiveCreate(i,def.factory(),def);}}}/** Caches local names and their matching directive indices for query and template lookups. */function cacheMatchingLocalNames(tNode,localRefs,exportsMap){if(localRefs){var localNames=tNode.localNames=[];// Local names must be stored in tNode in the same order that localRefs are defined
// in the template to ensure the data is loaded in the same slots as their refs
// in the template (for template queries).
for(var i=0;i<localRefs.length;i+=2){var index=exportsMap[localRefs[i+1]];if(index==null)throw new Error("Export of name '"+localRefs[i+1]+"' not found!");localNames.push(localRefs[i],index);}}}/**
 * Builds up an export map as directives are created, so local refs can be quickly mapped
 * to their directive instances.
 */function saveNameToExportMap(index,def,exportsMap){if(exportsMap){if(def.exportAs)exportsMap[def.exportAs]=index;if(def.template)exportsMap['']=index;}}/**
 * Takes a list of local names and indices and pushes the resolved local variable values
 * to LViewData in the same order as they are loaded in the template with load().
 */function saveResolvedLocalsInData(localRefExtractor){var localNames=previousOrParentTNode.localNames;var tNode=previousOrParentTNode;if(localNames){var localIndex=previousOrParentTNode.index+1;for(var i=0;i<localNames.length;i+=2){var index=localNames[i+1];var value=index===-1?localRefExtractor(tNode,viewData):viewData[index];viewData[localIndex++]=value;}}}/**
 * Gets TView from a template function or creates a new TView
 * if it doesn't already exist.
 *
 * @param templateFn The template from which to get static data
 * @param consts The number of nodes, local refs, and pipes in this view
 * @param vars The number of bindings and pure function bindings in this view
 * @param directives Directive defs that should be saved on TView
 * @param pipes Pipe defs that should be saved on TView
 * @returns TView
 */function getOrCreateTView(templateFn,consts,vars,directives,pipes,viewQuery){// TODO(misko): reading `ngPrivateData` here is problematic for two reasons
// 1. It is a megamorphic call on each invocation.
// 2. For nested embedded views (ngFor inside ngFor) the template instance is per
//    outer template invocation, which means that no such property will exist
// Correct solution is to only put `ngPrivateData` on the Component template
// and not on embedded templates.
return templateFn.ngPrivateData||(templateFn.ngPrivateData=createTView(-1,templateFn,consts,vars,directives,pipes,viewQuery));}/**
 * Creates a TView instance
 *
 * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic
 * @param templateFn Template function
 * @param consts The number of nodes, local refs, and pipes in this template
 * @param directives Registry of directives for this view
 * @param pipes Registry of pipes for this view
 */function createTView(viewIndex,templateFn,consts,vars,directives,pipes,viewQuery){ngDevMode&&ngDevMode.tView++;var bindingStartIndex=HEADER_OFFSET+consts;// This length does not yet contain host bindings from child directives because at this point,
// we don't know which directives are active on this template. As soon as a directive is matched
// that has a host binding, we will update the blueprint with that def's hostVars count.
var initialViewLength=bindingStartIndex+vars;var blueprint=createViewBlueprint(bindingStartIndex,initialViewLength);return blueprint[TVIEW]={id:viewIndex,blueprint:blueprint,template:templateFn,viewQuery:viewQuery,node:null,data:blueprint.slice(),childIndex:-1,bindingStartIndex:bindingStartIndex,expandoStartIndex:initialViewLength,expandoInstructions:null,firstTemplatePass:true,initHooks:null,checkHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,pipeDestroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:typeof directives==='function'?directives():directives,pipeRegistry:typeof pipes==='function'?pipes():pipes,currentMatches:null,firstChild:null};}function createViewBlueprint(bindingStartIndex,initialViewLength){var blueprint=new Array(initialViewLength).fill(null,0,bindingStartIndex).fill(NO_CHANGE,bindingStartIndex);blueprint[CONTAINER_INDEX]=-1;blueprint[BINDING_INDEX]=bindingStartIndex;return blueprint;}function setUpAttributes(native,attrs){var isProc=isProceduralRenderer(renderer);var i=0;while(i<attrs.length){var attrName=attrs[i];if(attrName===1/* SelectOnly */)break;if(attrName===NG_PROJECT_AS_ATTR_NAME){i+=2;}else{ngDevMode&&ngDevMode.rendererSetAttribute++;if(attrName===0/* NamespaceURI */){// Namespaced attributes
var namespaceURI=attrs[i+1];var attrName_1=attrs[i+2];var attrVal=attrs[i+3];isProc?renderer.setAttribute(native,attrName_1,attrVal,namespaceURI):native.setAttributeNS(namespaceURI,attrName_1,attrVal);i+=4;}else{// Standard attributes
var attrVal=attrs[i+1];isProc?renderer.setAttribute(native,attrName,attrVal):native.setAttribute(attrName,attrVal);i+=2;}}}}function createError(text,token){return new Error("Renderer: "+text+" ["+stringify$1(token)+"]");}/**
 * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.
 *
 * @param elementOrSelector Render element or CSS selector to locate the element.
 */function locateHostElement(factory,elementOrSelector){ngDevMode&&assertDataInRange(-1);rendererFactory=factory;var defaultRenderer=factory.createRenderer(null,null);var rNode=typeof elementOrSelector==='string'?isProceduralRenderer(defaultRenderer)?defaultRenderer.selectRootElement(elementOrSelector):defaultRenderer.querySelector(elementOrSelector):elementOrSelector;if(ngDevMode&&!rNode){if(typeof elementOrSelector==='string'){throw createError('Host node with selector not found:',elementOrSelector);}else{throw createError('Host node is required:',elementOrSelector);}}return rNode;}/**
 * Adds an event listener to the current node.
 *
 * If an output exists on one of the node's directives, it also subscribes to the output
 * and saves the subscription for later cleanup.
 *
 * @param eventName Name of the event
 * @param listenerFn The function to be called when event emits
 * @param useCapture Whether or not to use capture in event listener.
 */function listener(eventName,listenerFn,useCapture){if(useCapture===void 0){useCapture=false;}var tNode=previousOrParentTNode;ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */,0/* Container */,4/* ElementContainer */);// add native event listener - applicable to elements only
if(tNode.type===3/* Element */){var native=getNativeByTNode(previousOrParentTNode,viewData);ngDevMode&&ngDevMode.rendererAddEventListener++;// In order to match current behavior, native DOM event listeners must be added for all
// events (including outputs).
if(isProceduralRenderer(renderer)){var cleanupFn=renderer.listen(native,eventName,listenerFn);storeCleanupFn(viewData,cleanupFn);}else{var wrappedListener=wrapListenerWithPreventDefault(listenerFn);native.addEventListener(eventName,wrappedListener,useCapture);var cleanupInstances=getCleanup(viewData);cleanupInstances.push(wrappedListener);if(firstTemplatePass){getTViewCleanup(viewData).push(eventName,tNode.index,cleanupInstances.length-1,useCapture);}}}// subscribe to directive outputs
if(tNode.outputs===undefined){// if we create TNode here, inputs must be undefined so we know they still need to be
// checked
tNode.outputs=generatePropertyAliases(tNode.flags,1/* Output */);}var outputs=tNode.outputs;var outputData;if(outputs&&(outputData=outputs[eventName])){createOutput(outputData,listenerFn);}}/**
 * Iterates through the outputs associated with a particular event name and subscribes to
 * each output.
 */function createOutput(outputs,listener){for(var i=0;i<outputs.length;i+=2){ngDevMode&&assertDataInRange(outputs[i],viewData);var subscription=viewData[outputs[i]][outputs[i+1]].subscribe(listener);storeCleanupWithContext(viewData,subscription,subscription.unsubscribe);}}/**
 * Saves context for this cleanup function in LView.cleanupInstances.
 *
 * On the first template pass, saves in TView:
 * - Cleanup function
 * - Index of context we just saved in LView.cleanupInstances
 */function storeCleanupWithContext(view,context,cleanupFn){if(!view)view=viewData;getCleanup(view).push(context);if(view[TVIEW].firstTemplatePass){getTViewCleanup(view).push(cleanupFn,view[CLEANUP].length-1);}}/**
 * Saves the cleanup function itself in LView.cleanupInstances.
 *
 * This is necessary for functions that are wrapped with their contexts, like in renderer2
 * listeners.
 *
 * On the first template pass, the index of the cleanup function is saved in TView.
 */function storeCleanupFn(view,cleanupFn){getCleanup(view).push(cleanupFn);if(view[TVIEW].firstTemplatePass){getTViewCleanup(view).push(view[CLEANUP].length-1,null);}}/** Mark the end of the element. */function elementEnd(){if(isParent){isParent=false;}else{ngDevMode&&assertHasParent();previousOrParentTNode=previousOrParentTNode.parent;}ngDevMode&&assertNodeType(previousOrParentTNode,3/* Element */);currentQueries&&(currentQueries=currentQueries.addNode(previousOrParentTNode));queueLifecycleHooks(previousOrParentTNode.flags,tView);elementDepthCount--;}/**
 * Updates the value of removes an attribute on an Element.
 *
 * @param number index The index of the element in the data array
 * @param name name The name of the attribute.
 * @param value value The attribute is removed when value is `null` or `undefined`.
 *                  Otherwise the attribute value is set to the stringified value.
 * @param sanitizer An optional function used to sanitize the value.
 */function elementAttribute(index,name,value,sanitizer){if(value!==NO_CHANGE){var element_1=getNativeByIndex(index,viewData);if(value==null){ngDevMode&&ngDevMode.rendererRemoveAttribute++;isProceduralRenderer(renderer)?renderer.removeAttribute(element_1,name):element_1.removeAttribute(name);}else{ngDevMode&&ngDevMode.rendererSetAttribute++;var strValue=sanitizer==null?stringify$1(value):sanitizer(value);isProceduralRenderer(renderer)?renderer.setAttribute(element_1,name,strValue):element_1.setAttribute(name,strValue);}}}/**
 * Update a property on an Element.
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.
 *
 * @param index The index of the element to update in the data array
 * @param propName Name of property. Because it is going to DOM, this is not subject to
 *        renaming as part of minification.
 * @param value New value to write.
 * @param sanitizer An optional function used to sanitize the value.
 */function elementProperty(index,propName,value,sanitizer){if(value===NO_CHANGE)return;var element=getNativeByIndex(index,viewData);var tNode=getTNode(index,viewData);// if tNode.inputs is undefined, a listener has created outputs, but inputs haven't
// yet been checked
if(tNode&&tNode.inputs===undefined){// mark inputs as checked
tNode.inputs=generatePropertyAliases(tNode.flags,0/* Input */);}var inputData=tNode&&tNode.inputs;var dataValue;if(inputData&&(dataValue=inputData[propName])){setInputsForProperty(dataValue,value);if(isComponent(tNode))markDirtyIfOnPush(index+HEADER_OFFSET);}else if(tNode.type===3/* Element */){// It is assumed that the sanitizer is only added when the compiler determines that the property
// is risky, so sanitization can be done without further checks.
value=sanitizer!=null?sanitizer(value):value;ngDevMode&&ngDevMode.rendererSetProperty++;isProceduralRenderer(renderer)?renderer.setProperty(element,propName,value):element.setProperty?element.setProperty(propName,value):element[propName]=value;}}/**
 * Enables directive matching on elements.
 *
 *  * Example:
 * ```
 * <my-comp my-directive>
 *   Should match component / directive.
 * </my-comp>
 * <div ngNonBindable>
 *   <!-- disabledBindings() -->
 *   <my-comp my-directive>
 *     Should not match component / directive because we are in ngNonBindable.
 *   </my-comp>
 *   <!-- enableBindings() -->
 * </div>
 * ```
 */function enableBindings(){bindingsEnabled=true;}/**
 * Disables directive matching on element.
 *
 *  * Example:
 * ```
 * <my-comp my-directive>
 *   Should match component / directive.
 * </my-comp>
 * <div ngNonBindable>
 *   <!-- disabledBindings() -->
 *   <my-comp my-directive>
 *     Should not match component / directive because we are in ngNonBindable.
 *   </my-comp>
 *   <!-- enableBindings() -->
 * </div>
 * ```
 */function disableBindings(){bindingsEnabled=false;}/**
 * Constructs a TNode object from the arguments.
 *
 * @param type The type of the node
 * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET
 * @param tagName The tag name of the node
 * @param attrs The attributes defined on this node
 * @param tViews Any TViews attached to this node
 * @returns the TNode object
 */function createTNode(type,adjustedIndex,tagName,attrs,tViews){ngDevMode&&ngDevMode.tNode++;var parent=isParent?previousOrParentTNode:previousOrParentTNode&&previousOrParentTNode.parent;// Parents cannot cross component boundaries because components will be used in multiple places,
// so it's only set if the view is the same.
var parentInSameView=parent&&viewData&&parent!==viewData[HOST_NODE];var tParent=parentInSameView?parent:null;return{type:type,index:adjustedIndex,injectorIndex:tParent?tParent.injectorIndex:-1,flags:0,tagName:tagName,attrs:attrs,localNames:null,initialInputs:undefined,inputs:undefined,outputs:undefined,tViews:tViews,next:null,child:null,parent:tParent,detached:null,stylingTemplate:null,projection:null};}/**
 * Given a list of directive indices and minified input names, sets the
 * input properties on the corresponding directives.
 */function setInputsForProperty(inputs,value){for(var i=0;i<inputs.length;i+=2){ngDevMode&&assertDataInRange(inputs[i],viewData);viewData[inputs[i]][inputs[i+1]]=value;}}/**
 * Consolidates all inputs or outputs of all directives on this logical node.
 *
 * @param number tNodeFlags node flags
 * @param Direction direction whether to consider inputs or outputs
 * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise
 */function generatePropertyAliases(tNodeFlags,direction){var count=tNodeFlags&4095/* DirectiveCountMask */;var propStore=null;if(count>0){var start=tNodeFlags>>15/* DirectiveStartingIndexShift */;var end=start+count;var isInput=direction===0/* Input */;var defs=tView.data;for(var i=start;i<end;i++){var directiveDef=defs[i];var propertyAliasMap=isInput?directiveDef.inputs:directiveDef.outputs;for(var publicName in propertyAliasMap){if(propertyAliasMap.hasOwnProperty(publicName)){propStore=propStore||{};var internalName=propertyAliasMap[publicName];var hasProperty=propStore.hasOwnProperty(publicName);hasProperty?propStore[publicName].push(i,internalName):propStore[publicName]=[i,internalName];}}}}return propStore;}/**
 * Add or remove a class in a `classList` on a DOM element.
 *
 * This instruction is meant to handle the [class.foo]="exp" case
 *
 * @param index The index of the element to update in the data array
 * @param className Name of class to toggle. Because it is going to DOM, this is not subject to
 *        renaming as part of minification.
 * @param value A value indicating if a given class should be added or removed.
 */function elementClassProp(index,stylingIndex,value){updateClassProp(getStylingContext(index,viewData),stylingIndex,value?true:false);}/**
 * Assign any inline style values to the element during creation mode.
 *
 * This instruction is meant to be called during creation mode to apply all styling
 * (e.g. `style="..."`) values to the element. This is also where the provided index
 * value is allocated for the styling details for its corresponding element (the element
 * index is the previous index value from this one).
 *
 * (Note this function calls `elementStylingApply` immediately when called.)
 *
 *
 * @param index Index value which will be allocated to store styling data for the element.
 *        (Note that this is not the element index, but rather an index value allocated
 *        specifically for element styling--the index must be the next index after the element
 *        index.)
 * @param classDeclarations A key/value array of CSS classes that will be registered on the element.
 *   Each individual style will be used on the element as long as it is not overridden
 *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)
 *   bindings. If a class binding changes its value to a falsy value then the matching initial
 *   class value that are passed in here will be applied to the element (if matched).
 * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.
 *   Each individual style will be used on the element as long as it is not overridden
 *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)
 *   bindings. If a style binding changes its value to null then the initial styling
 *   values that are passed in here will be applied to the element (if matched).
 * @param styleSanitizer An optional sanitizer function that will be used (if provided)
 *   to sanitize the any CSS property values that are applied to the element (during rendering).
 */function elementStyling(classDeclarations,styleDeclarations,styleSanitizer){var tNode=previousOrParentTNode;if(!tNode.stylingTemplate){// initialize the styling template.
tNode.stylingTemplate=createStylingContextTemplate(classDeclarations,styleDeclarations,styleSanitizer);}if(styleDeclarations&&styleDeclarations.length||classDeclarations&&classDeclarations.length){elementStylingApply(tNode.index-HEADER_OFFSET);}}/**
 * Apply all styling values to the element which have been queued by any styling instructions.
 *
 * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`
 * have been issued against the element. This function will also determine if any styles have
 * changed and will then skip the operation if there is nothing new to render.
 *
 * Once called then all queued styles will be flushed.
 *
 * @param index Index of the element's styling storage that will be rendered.
 *        (Note that this is not the element index, but rather an index value allocated
 *        specifically for element styling--the index must be the next index after the element
 *        index.)
 */function elementStylingApply(index){renderStyling(getStylingContext(index,viewData),renderer);}/**
 * Queue a given style to be rendered on an Element.
 *
 * If the style value is `null` then it will be removed from the element
 * (or assigned a different value depending if there are any styles placed
 * on the element with `elementStyle` or any styles that are present
 * from when the element was created (with `elementStyling`).
 *
 * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)
 *
 * @param index Index of the element's styling storage to change in the data array.
 *        (Note that this is not the element index, but rather an index value allocated
 *        specifically for element styling--the index must be the next index after the element
 *        index.)
 * @param styleIndex Index of the style property on this element. (Monotonically increasing.)
 * @param value New value to write (null to remove).
 * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.
 *        Note that when a suffix is provided then the underlying sanitizer will
 *        be ignored.
 */function elementStyleProp(index,styleIndex,value,suffix){var valueToAdd=null;if(value){if(suffix){// when a suffix is applied then it will bypass
// sanitization entirely (b/c a new string is created)
valueToAdd=stringify$1(value)+suffix;}else{// sanitization happens by dealing with a String value
// this means that the string value will be passed through
// into the style rendering later (which is where the value
// will be sanitized before it is applied)
valueToAdd=value;}}updateStyleProp(getStylingContext(index,viewData),styleIndex,valueToAdd);}/**
 * Queue a key/value map of styles to be rendered on an Element.
 *
 * This instruction is meant to handle the `[style]="exp"` usage. When styles are applied to
 * the Element they will then be placed with respect to any styles set with `elementStyleProp`.
 * If any styles are set to `null` then they will be removed from the element (unless the same
 * style properties have been assigned to the element during creation using `elementStyling`).
 *
 * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)
 *
 * @param index Index of the element's styling storage to change in the data array.
 *        (Note that this is not the element index, but rather an index value allocated
 *        specifically for element styling--the index must be the next index after the element
 *        index.)
 * @param classes A key/value style map of CSS classes that will be added to the given element.
 *        Any missing classes (that have already been applied to the element beforehand) will be
 *        removed (unset) from the element's list of CSS classes.
 * @param styles A key/value style map of the styles that will be applied to the given element.
 *        Any missing styles (that have already been applied to the element beforehand) will be
 *        removed (unset) from the element's styling.
 */function elementStylingMap(index,classes,styles){updateStylingMap(getStylingContext(index,viewData),classes,styles);}//////////////////////////
//// Text
//////////////////////////
/**
 * Create static text node
 *
 * @param index Index of the node in the data array
 * @param value Value to write. This value will be stringified.
 */function text(index,value){ngDevMode&&assertEqual(viewData[BINDING_INDEX],tView.bindingStartIndex,'text nodes should be created before any bindings');ngDevMode&&ngDevMode.rendererCreateTextNode++;var textNative=createTextNode(value,renderer);var tNode=createNodeAtIndex(index,3/* Element */,textNative,null,null);// Text nodes are self closing.
isParent=false;appendChild(textNative,tNode,viewData);}/**
 * Create text node with binding
 * Bindings should be handled externally with the proper interpolation(1-8) method
 *
 * @param index Index of the node in the data array.
 * @param value Stringified value to write.
 */function textBinding(index,value){if(value!==NO_CHANGE){ngDevMode&&assertDataInRange(index+HEADER_OFFSET);var element_2=getNativeByIndex(index,viewData);ngDevMode&&assertDefined(element_2,'native element should exist');ngDevMode&&ngDevMode.rendererSetText++;isProceduralRenderer(renderer)?renderer.setValue(element_2,stringify$1(value)):element_2.textContent=stringify$1(value);}}//////////////////////////
//// Directive
//////////////////////////
/**
 * Create a directive and their associated content queries.
 *
 * NOTE: directives can be created in order other than the index order. They can also
 *       be retrieved before they are created in which case the value will be null.
 *
 * @param directive The directive instance.
 * @param directiveDef DirectiveDef object which contains information about the template.
 */function directiveCreate(directiveDefIdx,directive,directiveDef){var native=getNativeByTNode(previousOrParentTNode,viewData);var instance=baseDirectiveCreate(directiveDefIdx,directive,directiveDef,native);if(directiveDef.template){var componentView=getComponentViewByIndex(previousOrParentTNode.index,viewData);componentView[CONTEXT]=directive;}if(firstTemplatePass){// Init hooks are queued now so ngOnInit is called in host components before
// any projected components.
queueInitHooks(directiveDefIdx,directiveDef.onInit,directiveDef.doCheck,tView);}ngDevMode&&assertDefined(previousOrParentTNode,'previousOrParentTNode');if(previousOrParentTNode&&previousOrParentTNode.attrs){setInputsFromAttrs(directiveDefIdx,instance,directiveDef.inputs,previousOrParentTNode);}if(directiveDef.contentQueries){directiveDef.contentQueries();}return instance;}function addComponentLogic(def){var native=getNativeByTNode(previousOrParentTNode,viewData);var tView=getOrCreateTView(def.template,def.consts,def.vars,def.directiveDefs,def.pipeDefs,def.viewQuery);// Only component views should be added to the view tree directly. Embedded views are
// accessed through their containers because they may be removed / re-added later.
var componentView=addToViewTree(viewData,previousOrParentTNode.index,createLViewData(rendererFactory.createRenderer(native,def),tView,null,def.onPush?4/* Dirty */:2/* CheckAlways */,getCurrentSanitizer()));componentView[HOST_NODE]=previousOrParentTNode;// Component view will always be created before any injected LContainers,
// so this is a regular element, wrap it with the component view
componentView[HOST]=viewData[previousOrParentTNode.index];viewData[previousOrParentTNode.index]=componentView;if(firstTemplatePass){queueComponentIndexForCheck();previousOrParentTNode.flags=viewData.length<<15/* DirectiveStartingIndexShift */|4096/* isComponent */;}}/**
 * A lighter version of directiveCreate() that is used for the root component
 *
 * This version does not contain features that we don't already support at root in
 * current Angular. Example: local refs and inputs on root component.
 */function baseDirectiveCreate(index,directive,directiveDef,native){ngDevMode&&assertEqual(viewData[BINDING_INDEX],tView.bindingStartIndex,'directives should be created before any bindings');ngDevMode&&assertPreviousIsParent();attachPatchData(directive,viewData);if(native){attachPatchData(native,viewData);}viewData[index]=directive;if(firstTemplatePass){var flags=previousOrParentTNode.flags;if(flags===0){// When the first directive is created:
// - save the index,
// - set the number of directives to 1
previousOrParentTNode.flags=index<<15/* DirectiveStartingIndexShift */|flags&4096/* isComponent */|1;}else{// Only need to bump the size when subsequent directives are created
ngDevMode&&assertNotEqual(flags&4095/* DirectiveCountMask */,4095/* DirectiveCountMask */,'Reached the max number of directives');previousOrParentTNode.flags++;}tView.data.push(directiveDef);tView.blueprint.push(null);if(directiveDef.hostBindings)queueHostBindingForCheck(index,directiveDef);}else{var diPublic=directiveDef.diPublic;if(diPublic)diPublic(directiveDef);}if(directiveDef.attributes!=null&&previousOrParentTNode.type==3/* Element */){setUpAttributes(native,directiveDef.attributes);}return directive;}/**
 * Sets initial input properties on directive instances from attribute data
 *
 * @param directiveIndex Index of the directive in directives array
 * @param instance Instance of the directive on which to set the initial inputs
 * @param inputs The list of inputs from the directive def
 * @param tNode The static data for this node
 */function setInputsFromAttrs(directiveIndex,instance,inputs,tNode){var initialInputData=tNode.initialInputs;if(initialInputData===undefined||directiveIndex>=initialInputData.length){initialInputData=generateInitialInputs(directiveIndex,inputs,tNode);}var initialInputs=initialInputData[directiveIndex];if(initialInputs){for(var i=0;i<initialInputs.length;i+=2){instance[initialInputs[i]]=initialInputs[i+1];}}}/**
 * Generates initialInputData for a node and stores it in the template's static storage
 * so subsequent template invocations don't have to recalculate it.
 *
 * initialInputData is an array containing values that need to be set as input properties
 * for directives on this node, but only once on creation. We need this array to support
 * the case where you set an @Input property of a directive using attribute-like syntax.
 * e.g. if you have a `name` @Input, you can set it once like this:
 *
 * <my-component name="Bess"></my-component>
 *
 * @param directiveIndex Index to store the initial input data
 * @param inputs The list of inputs from the directive def
 * @param tNode The static data on this node
 */function generateInitialInputs(directiveIndex,inputs,tNode){var initialInputData=tNode.initialInputs||(tNode.initialInputs=[]);initialInputData[directiveIndex]=null;var attrs=tNode.attrs;var i=0;while(i<attrs.length){var attrName=attrs[i];if(attrName===1/* SelectOnly */)break;if(attrName===0/* NamespaceURI */){// We do not allow inputs on namespaced attributes.
i+=4;continue;}var minifiedInputName=inputs[attrName];var attrValue=attrs[i+1];if(minifiedInputName!==undefined){var inputsToStore=initialInputData[directiveIndex]||(initialInputData[directiveIndex]=[]);inputsToStore.push(minifiedInputName,attrValue);}i+=2;}return initialInputData;}//////////////////////////
//// ViewContainer & View
//////////////////////////
/**
 * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.
 *
 * @param hostNative The host element for the LContainer
 * @param hostTNode The host TNode for the LContainer
 * @param currentView The parent view of the LContainer
 * @param native The native comment element
 * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case
 * @returns LContainer
 */function createLContainer(hostNative,hostTNode,currentView,native,isForViewContainerRef){return[isForViewContainerRef?-1:0,[],currentView,null,null,hostNative,native,getRenderParent(hostTNode,currentView)// renderParent
];}/**
 * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.
 *
 * <ng-template #foo>
 *    <div></div>
 * </ng-template>
 *
 * @param index The index of the container in the data array
 * @param templateFn Inline template
 * @param consts The number of nodes, local refs, and pipes for this template
 * @param vars The number of bindings for this template
 * @param tagName The name of the container element, if applicable
 * @param attrs The attrs attached to the container, if applicable
 * @param localRefs A set of local reference bindings on the element.
 * @param localRefExtractor A function which extracts local-refs values from the template.
 *        Defaults to the current element associated with the local-ref.
 */function template(index,templateFn,consts,vars,tagName,attrs,localRefs,localRefExtractor){// TODO: consider a separate node type for templates
var tNode=containerInternal(index,tagName||null,attrs||null);if(firstTemplatePass){tNode.tViews=createTView(-1,templateFn,consts,vars,tView.directiveRegistry,tView.pipeRegistry,null);}createDirectivesAndLocals(localRefs,localRefExtractor);currentQueries&&(currentQueries=currentQueries.addNode(previousOrParentTNode));queueLifecycleHooks(tNode.flags,tView);isParent=false;}/**
 * Creates an LContainer for inline views, e.g.
 *
 * % if (showing) {
 *   <div></div>
 * % }
 *
 * @param index The index of the container in the data array
 */function container(index){var tNode=containerInternal(index,null,null);firstTemplatePass&&(tNode.tViews=[]);isParent=false;}function containerInternal(index,tagName,attrs){ngDevMode&&assertEqual(viewData[BINDING_INDEX],tView.bindingStartIndex,'container nodes should be created before any bindings');var adjustedIndex=index+HEADER_OFFSET;var comment=renderer.createComment(ngDevMode?'container':'');ngDevMode&&ngDevMode.rendererCreateComment++;var tNode=createNodeAtIndex(index,0/* Container */,comment,tagName,attrs);var lContainer=viewData[adjustedIndex]=createLContainer(viewData[adjustedIndex],tNode,viewData,comment);appendChild(comment,tNode,viewData);// Containers are added to the current view tree instead of their embedded views
// because views can be removed and re-inserted.
addToViewTree(viewData,index+HEADER_OFFSET,lContainer);if(currentQueries){// prepare place for matching nodes from views inserted into a given container
lContainer[QUERIES]=currentQueries.container();}ngDevMode&&assertNodeType(previousOrParentTNode,0/* Container */);return tNode;}/**
 * Sets a container up to receive views.
 *
 * @param index The index of the container in the data array
 */function containerRefreshStart(index){previousOrParentTNode=loadInternal(index,tView.data);ngDevMode&&assertNodeType(previousOrParentTNode,0/* Container */);isParent=true;viewData[index+HEADER_OFFSET][ACTIVE_INDEX]=0;if(!checkNoChangesMode){// We need to execute init hooks here so ngOnInit hooks are called in top level views
// before they are called in embedded views (for backwards compatibility).
executeInitHooks(viewData,tView,creationMode);}}/**
 * Marks the end of the LContainer.
 *
 * Marking the end of LContainer is the time when to child views get inserted or removed.
 */function containerRefreshEnd(){if(isParent){isParent=false;}else{ngDevMode&&assertNodeType(previousOrParentTNode,2/* View */);ngDevMode&&assertHasParent();previousOrParentTNode=previousOrParentTNode.parent;}ngDevMode&&assertNodeType(previousOrParentTNode,0/* Container */);var lContainer=viewData[previousOrParentTNode.index];var nextIndex=lContainer[ACTIVE_INDEX];// remove extra views at the end of the container
while(nextIndex<lContainer[VIEWS].length){removeView(lContainer,previousOrParentTNode,nextIndex);}}/**
 * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them
 * by executing an associated template function.
 */function refreshDynamicEmbeddedViews(lViewData){for(var current=getLViewChild(lViewData);current!==null;current=current[NEXT]){// Note: current can be an LViewData or an LContainer instance, but here we are only interested
// in LContainer. We can tell it's an LContainer because its length is less than the LViewData
// header.
if(current.length<HEADER_OFFSET&&current[ACTIVE_INDEX]===-1){var container_1=current;for(var i=0;i<container_1[VIEWS].length;i++){var dynamicViewData=container_1[VIEWS][i];// The directives and pipes are not needed here as an existing view is only being refreshed.
ngDevMode&&assertDefined(dynamicViewData[TVIEW],'TView must be allocated');renderEmbeddedTemplate(dynamicViewData,dynamicViewData[TVIEW],dynamicViewData[CONTEXT],2/* Update */);}}}}/**
 * Looks for a view with a given view block id inside a provided LContainer.
 * Removes views that need to be deleted in the process.
 *
 * @param lContainer to search for views
 * @param tContainerNode to search for views
 * @param startIdx starting index in the views array to search from
 * @param viewBlockId exact view block id to look for
 * @returns index of a found view or -1 if not found
 */function scanForView(lContainer,tContainerNode,startIdx,viewBlockId){var views=lContainer[VIEWS];for(var i=startIdx;i<views.length;i++){var viewAtPositionId=views[i][TVIEW].id;if(viewAtPositionId===viewBlockId){return views[i];}else if(viewAtPositionId<viewBlockId){// found a view that should not be at this position - remove
removeView(lContainer,tContainerNode,i);}else{// found a view with id greater than the one we are searching for
// which means that required view doesn't exist and can't be found at
// later positions in the views array - stop the search here
break;}}return null;}/**
 * Marks the start of an embedded view.
 *
 * @param viewBlockId The ID of this view
 * @return boolean Whether or not this view is in creation mode
 */function embeddedViewStart(viewBlockId,consts,vars){// The previous node can be a view node if we are processing an inline for loop
var containerTNode=previousOrParentTNode.type===2/* View */?previousOrParentTNode.parent:previousOrParentTNode;var lContainer=viewData[containerTNode.index];var currentView=viewData;ngDevMode&&assertNodeType(containerTNode,0/* Container */);var viewToRender=scanForView(lContainer,containerTNode,lContainer[ACTIVE_INDEX],viewBlockId);if(viewToRender){isParent=true;enterView(viewToRender,viewToRender[TVIEW].node);}else{// When we create a new LView, we always reset the state of the instructions.
viewToRender=createLViewData(renderer,getOrCreateEmbeddedTView(viewBlockId,consts,vars,containerTNode),null,2/* CheckAlways */,getCurrentSanitizer());if(lContainer[QUERIES]){viewToRender[QUERIES]=lContainer[QUERIES].createView();}createViewNode(viewBlockId,viewToRender);enterView(viewToRender,viewToRender[TVIEW].node);}if(lContainer){if(creationMode){// it is a new view, insert it into collection of views for a given container
insertView(viewToRender,lContainer,currentView,lContainer[ACTIVE_INDEX],-1);}lContainer[ACTIVE_INDEX]++;}return getRenderFlags(viewToRender);}/**
 * Initialize the TView (e.g. static data) for the active embedded view.
 *
 * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's
 * static data for a particular node would overwrite the static data for a node in the view above
 * it with the same index (since it's in the same template).
 *
 * @param viewIndex The index of the TView in TNode.tViews
 * @param consts The number of nodes, local refs, and pipes in this template
 * @param vars The number of bindings and pure function bindings in this template
 * @param container The parent container in which to look for the view's static data
 * @returns TView
 */function getOrCreateEmbeddedTView(viewIndex,consts,vars,parent){ngDevMode&&assertNodeType(parent,0/* Container */);var containerTViews=parent.tViews;ngDevMode&&assertDefined(containerTViews,'TView expected');ngDevMode&&assertEqual(Array.isArray(containerTViews),true,'TViews should be in an array');if(viewIndex>=containerTViews.length||containerTViews[viewIndex]==null){containerTViews[viewIndex]=createTView(viewIndex,null,consts,vars,tView.directiveRegistry,tView.pipeRegistry,null);}return containerTViews[viewIndex];}/** Marks the end of an embedded view. */function embeddedViewEnd(){var viewHost=viewData[HOST_NODE];refreshDescendantViews();leaveView(viewData[PARENT]);previousOrParentTNode=viewHost;isParent=false;}/////////////
/**
 * Refreshes components by entering the component view and processing its bindings, queries, etc.
 *
 * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)
 */function componentRefresh(adjustedElementIndex,parentFirstTemplatePass){ngDevMode&&assertDataInRange(adjustedElementIndex);var hostView=getComponentViewByIndex(adjustedElementIndex,viewData);ngDevMode&&assertNodeType(tView.data[adjustedElementIndex],3/* Element */);// Only attached CheckAlways components or attached, dirty OnPush components should be checked
if(viewAttached(hostView)&&hostView[FLAGS]&(2/* CheckAlways */|4/* Dirty */)){parentFirstTemplatePass&&syncViewWithBlueprint(hostView);detectChangesInternal(hostView,hostView[CONTEXT]);}}/**
 * Syncs an LViewData instance with its blueprint if they have gotten out of sync.
 *
 * Typically, blueprints and their view instances should always be in sync, so the loop here
 * will be skipped. However, consider this case of two components side-by-side:
 *
 * App template:
 * ```
 * <comp></comp>
 * <comp></comp>
 * ```
 *
 * The following will happen:
 * 1. App template begins processing.
 * 2. First <comp> is matched as a component and its LViewData is created.
 * 3. Second <comp> is matched as a component and its LViewData is created.
 * 4. App template completes processing, so it's time to check child templates.
 * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.
 * 6. Second <comp> template is checked. Its blueprint has been updated by the first
 * <comp> template, but its LViewData was created before this update, so it is out of sync.
 *
 * Note that embedded views inside ngFor loops will never be out of sync because these views
 * are processed as soon as they are created.
 *
 * @param componentView The view to sync
 */function syncViewWithBlueprint(componentView){var componentTView=componentView[TVIEW];for(var i=componentView.length;i<componentTView.blueprint.length;i++){componentView[i]=componentTView.blueprint[i];}}/** Returns a boolean for whether the view is attached */function viewAttached(view){return(view[FLAGS]&8/* Attached */)===8/* Attached */;}/**
 * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.
 * It takes all the selectors from the entire component's template and decides where
 * each projected node belongs (it re-distributes nodes among "buckets" where each "bucket" is
 * backed by a selector).
 *
 * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,
 * un-parsed form.
 *
 * The parsed form is needed for efficient matching of a node against a given CSS selector.
 * The un-parsed, textual form is needed for support of the ngProjectAs attribute.
 *
 * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more
 * drawbacks:
 * - having only a textual form would require runtime parsing of CSS selectors;
 * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a
 * template author).
 *
 * @param selectors A collection of parsed CSS selectors
 * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form
 */function projectionDef(selectors,textSelectors){var componentNode=findComponentView(viewData)[HOST_NODE];if(!componentNode.projection){var noOfNodeBuckets=selectors?selectors.length+1:1;var pData=componentNode.projection=new Array(noOfNodeBuckets).fill(null);var tails=pData.slice();var componentChild=componentNode.child;while(componentChild!==null){var bucketIndex=selectors?matchingSelectorIndex(componentChild,selectors,textSelectors):0;var nextNode=componentChild.next;if(tails[bucketIndex]){tails[bucketIndex].next=componentChild;}else{pData[bucketIndex]=componentChild;componentChild.next=null;}tails[bucketIndex]=componentChild;componentChild=nextNode;}}}/**
 * Stack used to keep track of projection nodes in projection() instruction.
 *
 * This is deliberately created outside of projection() to avoid allocating
 * a new array each time the function is called. Instead the array will be
 * re-used by each invocation. This works because the function is not reentrant.
 */var projectionNodeStack$1=[];/**
 * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call
 * to the projectionDef instruction.
 *
 * @param nodeIndex
 * @param selectorIndex:
 *        - 0 when the selector is `*` (or unspecified as this is the default value),
 *        - 1 based index of the selector from the {@link projectionDef}
 */function projection(nodeIndex,selectorIndex,attrs){if(selectorIndex===void 0){selectorIndex=0;}var tProjectionNode=createNodeAtIndex(nodeIndex,1/* Projection */,null,null,attrs||null);// We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.
if(tProjectionNode.projection===null)tProjectionNode.projection=selectorIndex;// `<ng-content>` has no content
isParent=false;// re-distribution of projectable nodes is stored on a component's view level
var componentView=findComponentView(viewData);var componentNode=componentView[HOST_NODE];var nodeToProject=componentNode.projection[selectorIndex];var projectedView=componentView[PARENT];var projectionNodeIndex=-1;while(nodeToProject){if(nodeToProject.type===1/* Projection */){// This node is re-projected, so we must go up the tree to get its projected nodes.
var currentComponentView=findComponentView(projectedView);var currentComponentHost=currentComponentView[HOST_NODE];var firstProjectedNode=currentComponentHost.projection[nodeToProject.projection];if(firstProjectedNode){projectionNodeStack$1[++projectionNodeIndex]=nodeToProject;projectionNodeStack$1[++projectionNodeIndex]=projectedView;nodeToProject=firstProjectedNode;projectedView=currentComponentView[PARENT];continue;}}else{// This flag must be set now or we won't know that this node is projected
// if the nodes are inserted into a container later.
nodeToProject.flags|=8192/* isProjected */;appendProjectedNode(nodeToProject,tProjectionNode,viewData,projectedView);}// If we are finished with a list of re-projected nodes, we need to get
// back to the root projection node that was re-projected.
if(nodeToProject.next===null&&projectedView!==componentView[PARENT]){projectedView=projectionNodeStack$1[projectionNodeIndex--];nodeToProject=projectionNodeStack$1[projectionNodeIndex--];}nodeToProject=nodeToProject.next;}}/**
 * Adds LViewData or LContainer to the end of the current view tree.
 *
 * This structure will be used to traverse through nested views to remove listeners
 * and call onDestroy callbacks.
 *
 * @param currentView The view where LViewData or LContainer should be added
 * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header
 * @param state The LViewData or LContainer to add to the view tree
 * @returns The state passed in
 */function addToViewTree(currentView,adjustedHostIndex,state){if(currentView[TAIL]){currentView[TAIL][NEXT]=state;}else if(firstTemplatePass){tView.childIndex=adjustedHostIndex;}currentView[TAIL]=state;return state;}///////////////////////////////
//// Change detection
///////////////////////////////
/** If node is an OnPush component, marks its LViewData dirty. */function markDirtyIfOnPush(viewIndex){var view=getComponentViewByIndex(viewIndex,viewData);if(!(view[FLAGS]&2/* CheckAlways */)){view[FLAGS]|=4/* Dirty */;}}/** Wraps an event listener with preventDefault behavior. */function wrapListenerWithPreventDefault(listenerFn){return function wrapListenerIn_preventDefault(e){if(listenerFn(e)===false){e.preventDefault();// Necessary for legacy browsers that don't support preventDefault (e.g. IE)
e.returnValue=false;}};}/** Marks current view and all ancestors dirty */function markViewDirty(view){var currentView=view;while(currentView&&!(currentView[FLAGS]&64/* IsRoot */)){currentView[FLAGS]|=4/* Dirty */;currentView=currentView[PARENT];}currentView[FLAGS]|=4/* Dirty */;ngDevMode&&assertDefined(currentView[CONTEXT],'rootContext should be defined');var rootContext=currentView[CONTEXT];var nothingScheduled=rootContext.flags===0/* Empty */;rootContext.flags|=1/* DetectChanges */;if(nothingScheduled){scheduleTick(rootContext);}}/**
 * Used to schedule change detection on the whole application.
 *
 * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.
 * It is usually called indirectly by calling `markDirty` when the view needs to be
 * re-rendered.
 *
 * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple
 * `scheduleTick` requests. The scheduling function can be overridden in
 * `renderComponent`'s `scheduler` option.
 */function scheduleTick(rootContext){if(rootContext.clean==_CLEAN_PROMISE){var res_1;rootContext.clean=new Promise(function(r){return res_1=r;});rootContext.scheduler(function(){if(rootContext.flags&1/* DetectChanges */){rootContext.flags&=~1/* DetectChanges */;tickRootContext(rootContext);}if(rootContext.flags&2/* FlushPlayers */){rootContext.flags&=~2/* FlushPlayers */;var playerHandler=rootContext.playerHandler;if(playerHandler){playerHandler.flushPlayers();}}rootContext.clean=_CLEAN_PROMISE;res_1(null);});}}function tickRootContext(rootContext){for(var i=0;i<rootContext.components.length;i++){var rootComponent=rootContext.components[i];renderComponentOrTemplate(readPatchedLViewData(rootComponent),rootComponent);}}/**
 * Synchronously perform change detection on a component (and possibly its sub-components).
 *
 * This function triggers change detection in a synchronous way on a component. There should
 * be very little reason to call this function directly since a preferred way to do change
 * detection is to {@link markDirty} the component and wait for the scheduler to call this method
 * at some future point in time. This is because a single user action often results in many
 * components being invalidated and calling change detection on each component synchronously
 * would be inefficient. It is better to wait until all components are marked as dirty and
 * then perform single change detection across all of the components
 *
 * @param component The component which the change detection should be performed on.
 */function detectChanges(component){detectChangesInternal(getComponentViewByInstance(component),component);}/**
 * Synchronously perform change detection on a root view and its components.
 *
 * @param lViewData The view which the change detection should be performed on.
 */function detectChangesInRootView(lViewData){tickRootContext(lViewData[CONTEXT]);}/**
 * Checks the change detector and its children, and throws if any changes are detected.
 *
 * This is used in development mode to verify that running change detection doesn't
 * introduce other changes.
 */function checkNoChanges(component){checkNoChangesMode=true;try{detectChanges(component);}finally{checkNoChangesMode=false;}}/**
 * Checks the change detector on a root view and its components, and throws if any changes are
 * detected.
 *
 * This is used in development mode to verify that running change detection doesn't
 * introduce other changes.
 *
 * @param lViewData The view which the change detection should be checked on.
 */function checkNoChangesInRootView(lViewData){checkNoChangesMode=true;try{detectChangesInRootView(lViewData);}finally{checkNoChangesMode=false;}}/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */function detectChangesInternal(hostView,component){var hostTView=hostView[TVIEW];var oldView=enterView(hostView,hostView[HOST_NODE]);var templateFn=hostTView.template;var viewQuery=hostTView.viewQuery;try{namespaceHTML();createViewQuery(viewQuery,hostView[FLAGS],component);templateFn(getRenderFlags(hostView),component);refreshDescendantViews();updateViewQuery(viewQuery,component);}finally{leaveView(oldView);}}function createViewQuery(viewQuery,flags,component){if(viewQuery&&flags&1/* CreationMode */){viewQuery(1/* Create */,component);}}function updateViewQuery(viewQuery,component){if(viewQuery){viewQuery(2/* Update */,component);}}/**
 * Mark the component as dirty (needing change detection).
 *
 * Marking a component dirty will schedule a change detection on this
 * component at some point in the future. Marking an already dirty
 * component as dirty is a noop. Only one outstanding change detection
 * can be scheduled per component tree. (Two components bootstrapped with
 * separate `renderComponent` will have separate schedulers)
 *
 * When the root component is bootstrapped with `renderComponent`, a scheduler
 * can be provided.
 *
 * @param component Component to mark as dirty.
 */function markDirty(component){ngDevMode&&assertDefined(component,'component');markViewDirty(getComponentViewByInstance(component));}/** A special value which designates that a value has not changed. */var NO_CHANGE={};/**
 * Creates a single value binding.
 *
 * @param value Value to diff
 */function bind(value){return bindingUpdated(viewData[BINDING_INDEX]++,value)?value:NO_CHANGE;}/**
 * Create interpolation bindings with a variable number of expressions.
 *
 * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.
 * Those are faster because there is no need to create an array of expressions and iterate over it.
 *
 * `values`:
 * - has static text at even indexes,
 * - has evaluated expressions at odd indexes.
 *
 * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function interpolationV(values){ngDevMode&&assertLessThan(2,values.length,'should have at least 3 values');ngDevMode&&assertEqual(values.length%2,1,'should have an odd number of values');var different=false;for(var i=1;i<values.length;i+=2){// Check if bindings (odd indexes) have changed
bindingUpdated(viewData[BINDING_INDEX]++,values[i])&&(different=true);}if(!different){return NO_CHANGE;}// Build the updated content
var content=values[0];for(var i=1;i<values.length;i+=2){content+=stringify$1(values[i])+values[i+1];}return content;}/**
 * Creates an interpolation binding with 1 expression.
 *
 * @param prefix static value used for concatenation only.
 * @param v0 value checked for change.
 * @param suffix static value used for concatenation only.
 */function interpolation1(prefix,v0,suffix){var different=bindingUpdated(viewData[BINDING_INDEX]++,v0);return different?prefix+stringify$1(v0)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 2 expressions. */function interpolation2(prefix,v0,i0,v1,suffix){var different=bindingUpdated2(viewData[BINDING_INDEX],v0,v1);viewData[BINDING_INDEX]+=2;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 3 expressions. */function interpolation3(prefix,v0,i0,v1,i1,v2,suffix){var different=bindingUpdated3(viewData[BINDING_INDEX],v0,v1,v2);viewData[BINDING_INDEX]+=3;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+suffix:NO_CHANGE;}/** Create an interpolation binding with 4 expressions. */function interpolation4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);viewData[BINDING_INDEX]+=4;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 5 expressions. */function interpolation5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated(viewData[BINDING_INDEX]+4,v4)||different;viewData[BINDING_INDEX]+=5;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 6 expressions. */function interpolation6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated2(viewData[BINDING_INDEX]+4,v4,v5)||different;viewData[BINDING_INDEX]+=6;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+i4+stringify$1(v5)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 7 expressions. */function interpolation7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated3(viewData[BINDING_INDEX]+4,v4,v5,v6)||different;viewData[BINDING_INDEX]+=7;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+i4+stringify$1(v5)+i5+stringify$1(v6)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 8 expressions. */function interpolation8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated4(viewData[BINDING_INDEX]+4,v4,v5,v6,v7)||different;viewData[BINDING_INDEX]+=8;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+i4+stringify$1(v5)+i5+stringify$1(v6)+i6+stringify$1(v7)+suffix:NO_CHANGE;}/** Store a value in the `data` at a given `index`. */function store(index,value){// We don't store any static data for local variables, so the first time
// we see the template, we should store as null to avoid a sparse array
var adjustedIndex=index+HEADER_OFFSET;if(adjustedIndex>=tView.data.length){tView.data[adjustedIndex]=null;}viewData[adjustedIndex]=value;}/**
 * Retrieves a local reference from the current contextViewData.
 *
 * If the reference to retrieve is in a parent view, this instruction is used in conjunction
 * with a nextContext() call, which walks up the tree and updates the contextViewData instance.
 *
 * @param index The index of the local ref in contextViewData.
 */function reference(index){return loadInternal(index,contextViewData);}function walkUpViews(nestingLevel,currentView){while(nestingLevel>0){ngDevMode&&assertDefined(currentView[DECLARATION_VIEW],'Declaration view should be defined if nesting level is greater than 0.');currentView=currentView[DECLARATION_VIEW];nestingLevel--;}return currentView;}function loadQueryList(queryListIdx){ngDevMode&&assertDefined(viewData[CONTENT_QUERIES],'Content QueryList array should be defined if reading a query.');ngDevMode&&assertDataInRange(queryListIdx,viewData[CONTENT_QUERIES]);return viewData[CONTENT_QUERIES][queryListIdx];}/** Retrieves a value from current `viewData`. */function load(index){return loadInternal(index,viewData);}/** Gets the current binding value. */function getBinding(bindingIndex){ngDevMode&&assertDataInRange(viewData[bindingIndex]);ngDevMode&&assertNotEqual(viewData[bindingIndex],NO_CHANGE,'Stored value should never be NO_CHANGE.');return viewData[bindingIndex];}/** Updates binding if changed, then returns whether it was updated. */function bindingUpdated(bindingIndex,value){ngDevMode&&assertNotEqual(value,NO_CHANGE,'Incoming value should never be NO_CHANGE.');ngDevMode&&assertLessThan(bindingIndex,viewData.length,"Slot should have been initialized to NO_CHANGE");if(viewData[bindingIndex]===NO_CHANGE){viewData[bindingIndex]=value;}else if(isDifferent(viewData[bindingIndex],value,checkNoChangesMode)){throwErrorIfNoChangesMode(creationMode,checkNoChangesMode,viewData[bindingIndex],value);viewData[bindingIndex]=value;}else{return false;}return true;}/** Updates binding and returns the value. */function updateBinding(bindingIndex,value){return viewData[bindingIndex]=value;}/** Updates 2 bindings if changed, then returns whether either was updated. */function bindingUpdated2(bindingIndex,exp1,exp2){var different=bindingUpdated(bindingIndex,exp1);return bindingUpdated(bindingIndex+1,exp2)||different;}/** Updates 3 bindings if changed, then returns whether any was updated. */function bindingUpdated3(bindingIndex,exp1,exp2,exp3){var different=bindingUpdated2(bindingIndex,exp1,exp2);return bindingUpdated(bindingIndex+2,exp3)||different;}/** Updates 4 bindings if changed, then returns whether any was updated. */function bindingUpdated4(bindingIndex,exp1,exp2,exp3,exp4){var different=bindingUpdated2(bindingIndex,exp1,exp2);return bindingUpdated2(bindingIndex+2,exp3,exp4)||different;}function getTView(){return tView;}/**
 * Registers a QueryList, associated with a content query, for later refresh (part of a view
 * refresh).
 */function registerContentQuery(queryList){var savedContentQueriesLength=(viewData[CONTENT_QUERIES]||(viewData[CONTENT_QUERIES]=[])).push(queryList);if(firstTemplatePass){var currentDirectiveIndex=viewData.length-1;var tViewContentQueries=tView.contentQueries||(tView.contentQueries=[]);var lastSavedDirectiveIndex=tView.contentQueries.length?tView.contentQueries[tView.contentQueries.length-2]:-1;if(currentDirectiveIndex!==lastSavedDirectiveIndex){tViewContentQueries.push(currentDirectiveIndex,savedContentQueriesLength-1);}}}function assertPreviousIsParent(){assertEqual(isParent,true,'previousOrParentTNode should be a parent');}function assertHasParent(){assertDefined(previousOrParentTNode.parent,'previousOrParentTNode should have a parent');}function assertDataInRange(index,arr){if(arr==null)arr=viewData;assertDataInRangeInternal(index,arr||viewData);}var CLEAN_PROMISE=_CLEAN_PROMISE;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Root component will always have an element index of 0 and an injector size of 1
var ROOT_EXPANDO_INSTRUCTIONS=[0,1];/**
 * Bootstraps a Component into an existing host element and returns an instance
 * of the component.
 *
 * Use this function to bootstrap a component into the DOM tree. Each invocation
 * of this function will create a separate tree of components, injectors and
 * change detection cycles and lifetimes. To dynamically insert a new component
 * into an existing tree such that it shares the same injection, change detection
 * and object lifetime, use {@link ViewContainer#createComponent}.
 *
 * @param componentType Component to bootstrap
 * @param options Optional parameters which control bootstrapping
 */function renderComponent(componentType/* Type as workaround for: Microsoft/TypeScript/issues/4881 */,opts){if(opts===void 0){opts={};}ngDevMode&&assertComponentType(componentType);var rendererFactory=opts.rendererFactory||domRendererFactory3;var sanitizer=opts.sanitizer||null;var componentDef=getComponentDef(componentType);if(componentDef.type!=componentType)componentDef.type=componentType;// The first index of the first selector is the tag name.
var componentTag=componentDef.selectors[0][0];var hostRNode=locateHostElement(rendererFactory,opts.host||componentTag);var rootFlags=componentDef.onPush?4/* Dirty */|64/* IsRoot */:2/* CheckAlways */|64/* IsRoot */;var rootContext=createRootContext(opts.scheduler||requestAnimationFrame.bind(window),opts.playerHandler||null);var renderer=rendererFactory.createRenderer(hostRNode,componentDef);var rootView=createLViewData(renderer,createTView(-1,null,1,0,null,null,null),rootContext,rootFlags);rootView[INJECTOR$1]=opts.injector||null;var oldView=enterView(rootView,null);var component;try{if(rendererFactory.begin)rendererFactory.begin();var componentView=createRootComponentView(hostRNode,componentDef,rootView,renderer,sanitizer);component=createRootComponent(hostRNode,componentView,componentDef,rootView,rootContext,opts.hostFeatures||null);executeInitAndContentHooks();detectChangesInternal(componentView,component);}finally{leaveView(oldView);if(rendererFactory.end)rendererFactory.end();}return component;}/**
 * Creates the root component view and the root component node.
 *
 * @param rNode Render host element.
 * @param def ComponentDef
 * @param rootView The parent view where the host node is stored
 * @param renderer The current renderer
 * @param sanitizer The sanitizer, if provided
 *
 * @returns Component view created
 */function createRootComponentView(rNode,def,rootView,renderer,sanitizer){resetComponentState();var tView=rootView[TVIEW];var componentView=createLViewData(renderer,getOrCreateTView(def.template,def.consts,def.vars,def.directiveDefs,def.pipeDefs,def.viewQuery),null,def.onPush?4/* Dirty */:2/* CheckAlways */,sanitizer);var tNode=createNodeAtIndex(0,3/* Element */,rNode,null,null);if(tView.firstTemplatePass){tView.expandoInstructions=ROOT_EXPANDO_INSTRUCTIONS.slice();if(def.diPublic)def.diPublic(def);tNode.flags=rootView.length<<15/* DirectiveStartingIndexShift */|4096/* isComponent */;}// Store component view at node index, with node as the HOST
componentView[HOST]=rootView[HEADER_OFFSET];componentView[HOST_NODE]=tNode;return rootView[HEADER_OFFSET]=componentView;}/**
 * Creates a root component and sets it up with features and host bindings. Shared by
 * renderComponent() and ViewContainerRef.createComponent().
 */function createRootComponent(hostRNode,componentView,componentDef,rootView,rootContext,hostFeatures){// Create directive instance with factory() and store at next index in viewData
var component=baseDirectiveCreate(rootView.length,componentDef.factory(),componentDef,hostRNode);rootContext.components.push(component);componentView[CONTEXT]=component;hostFeatures&&hostFeatures.forEach(function(feature){return feature(component,componentDef);});if(rootView[TVIEW].firstTemplatePass)prefillHostVars(componentDef.hostVars);setHostBindings();return component;}function createRootContext(scheduler,playerHandler){return{components:[],scheduler:scheduler,clean:CLEAN_PROMISE,playerHandler:playerHandler||null,flags:0/* Empty */};}/**
 * Used to enable lifecycle hooks on the root component.
 *
 * Include this feature when calling `renderComponent` if the root component
 * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't
 * be called properly.
 *
 * Example:
 *
 * ```
 * renderComponent(AppComponent, {features: [RootLifecycleHooks]});
 * ```
 */function LifecycleHooksFeature(component,def){var rootTView=readPatchedLViewData(component)[TVIEW];var dirIndex=rootTView.data.length-1;queueInitHooks(dirIndex,def.onInit,def.doCheck,rootTView);queueLifecycleHooks(dirIndex<<15/* DirectiveStartingIndexShift */|1,rootTView);}/**
 * Retrieve the root context for any component by walking the parent `LView` until
 * reaching the root `LView`.
 *
 * @param component any component
 */function getRootContext$1(component){var rootContext=getRootView(component)[CONTEXT];ngDevMode&&assertDefined(rootContext,'rootContext');return rootContext;}/**
 * Wait on component until it is rendered.
 *
 * This function returns a `Promise` which is resolved when the component's
 * change detection is executed. This is determined by finding the scheduler
 * associated with the `component`'s render tree and waiting until the scheduler
 * flushes. If nothing is scheduled, the function returns a resolved promise.
 *
 * Example:
 * ```
 * await whenRendered(myComponent);
 * ```
 *
 * @param component Component to wait upon
 * @returns Promise which resolves when the component is rendered.
 */function whenRendered(component){return getRootContext$1(component).clean;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}
 * @param definition The definition to examine
 */function isComponentDef(definition){var def=definition;return typeof def.template==='function';}function getSuperType(type){return Object.getPrototypeOf(type.prototype).constructor;}/**
 * Merges the definition from a super class to a sub class.
 * @param definition The definition that is a SubClass of another directive of component
 */function InheritDefinitionFeature(definition){var superType=getSuperType(definition.type);var _loop_1=function _loop_1(){var e_1,_a;var superDef=undefined;if(isComponentDef(definition)){// Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
superDef=superType.ngComponentDef||superType.ngDirectiveDef;}else{if(superType.ngComponentDef){throw new Error('Directives cannot inherit Components');}// Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
superDef=superType.ngDirectiveDef;}var baseDef=superType.ngBaseDef;// Some fields in the definition may be empty, if there were no values to put in them that
// would've justified object creation. Unwrap them if necessary.
if(baseDef||superDef){var writeableDef=definition;writeableDef.inputs=maybeUnwrapEmpty(definition.inputs);writeableDef.declaredInputs=maybeUnwrapEmpty(definition.declaredInputs);writeableDef.outputs=maybeUnwrapEmpty(definition.outputs);}if(baseDef){// Merge inputs and outputs
fillProperties(definition.inputs,baseDef.inputs);fillProperties(definition.declaredInputs,baseDef.declaredInputs);fillProperties(definition.outputs,baseDef.outputs);}if(superDef){// Merge hostBindings
var prevHostBindings_1=definition.hostBindings;var superHostBindings_1=superDef.hostBindings;if(superHostBindings_1){if(prevHostBindings_1){definition.hostBindings=function(directiveIndex,elementIndex){superHostBindings_1(directiveIndex,elementIndex);prevHostBindings_1(directiveIndex,elementIndex);};}else{definition.hostBindings=superHostBindings_1;}}// Merge View Queries
if(isComponentDef(definition)&&isComponentDef(superDef)){var prevViewQuery_1=definition.viewQuery;var superViewQuery_1=superDef.viewQuery;if(superViewQuery_1){if(prevViewQuery_1){definition.viewQuery=function(rf,ctx){superViewQuery_1(rf,ctx);prevViewQuery_1(rf,ctx);};}else{definition.viewQuery=superViewQuery_1;}}}// Merge Content Queries
var prevContentQueries_1=definition.contentQueries;var superContentQueries_1=superDef.contentQueries;if(superContentQueries_1){if(prevContentQueries_1){definition.contentQueries=function(){superContentQueries_1();prevContentQueries_1();};}else{definition.contentQueries=superContentQueries_1;}}// Merge Content Queries Refresh
var prevContentQueriesRefresh_1=definition.contentQueriesRefresh;var superContentQueriesRefresh_1=superDef.contentQueriesRefresh;if(superContentQueriesRefresh_1){if(prevContentQueriesRefresh_1){definition.contentQueriesRefresh=function(directiveIndex,queryIndex){superContentQueriesRefresh_1(directiveIndex,queryIndex);prevContentQueriesRefresh_1(directiveIndex,queryIndex);};}else{definition.contentQueriesRefresh=superContentQueriesRefresh_1;}}// Merge inputs and outputs
fillProperties(definition.inputs,superDef.inputs);fillProperties(definition.declaredInputs,superDef.declaredInputs);fillProperties(definition.outputs,superDef.outputs);// Inherit hooks
// Assume super class inheritance feature has already run.
definition.afterContentChecked=definition.afterContentChecked||superDef.afterContentChecked;definition.afterContentInit=definition.afterContentInit||superDef.afterContentInit;definition.afterViewChecked=definition.afterViewChecked||superDef.afterViewChecked;definition.afterViewInit=definition.afterViewInit||superDef.afterViewInit;definition.doCheck=definition.doCheck||superDef.doCheck;definition.onDestroy=definition.onDestroy||superDef.onDestroy;definition.onInit=definition.onInit||superDef.onInit;// Run parent features
var features=superDef.features;if(features){try{for(var features_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(features),features_1_1=features_1.next();!features_1_1.done;features_1_1=features_1.next()){var feature=features_1_1.value;if(feature&&feature!==InheritDefinitionFeature){feature(definition);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(features_1_1&&!features_1_1.done&&(_a=features_1.return))_a.call(features_1);}finally{if(e_1)throw e_1.error;}}}return"break";}else{// Even if we don't have a definition, check the type for the hooks and use those if need be
var superPrototype=superType.prototype;if(superPrototype){definition.afterContentChecked=definition.afterContentChecked||superPrototype.afterContentChecked;definition.afterContentInit=definition.afterContentInit||superPrototype.afterContentInit;definition.afterViewChecked=definition.afterViewChecked||superPrototype.afterViewChecked;definition.afterViewInit=definition.afterViewInit||superPrototype.afterViewInit;definition.doCheck=definition.doCheck||superPrototype.doCheck;definition.onDestroy=definition.onDestroy||superPrototype.onDestroy;definition.onInit=definition.onInit||superPrototype.onInit;}}superType=Object.getPrototypeOf(superType);};while(superType){var state_1=_loop_1();if(state_1==="break")break;}}function maybeUnwrapEmpty(value){if(value===EMPTY$1){return{};}else if(value===EMPTY_ARRAY){return[];}else{return value;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var PRIVATE_PREFIX='__ngOnChanges_';/**
 * The NgOnChangesFeature decorates a component with support for the ngOnChanges
 * lifecycle hook, so it should be included in any component that implements
 * that hook.
 *
 * If the component or directive uses inheritance, the NgOnChangesFeature MUST
 * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise
 * inherited properties will not be propagated to the ngOnChanges lifecycle
 * hook.
 *
 * Example usage:
 *
 * ```
 * static ngComponentDef = defineComponent({
 *   ...
 *   inputs: {name: 'publicName'},
 *   features: [NgOnChangesFeature]
 * });
 * ```
 */function NgOnChangesFeature(definition){var declaredToMinifiedInputs=definition.declaredInputs;var proto=definition.type.prototype;var _loop_1=function _loop_1(declaredName){if(declaredToMinifiedInputs.hasOwnProperty(declaredName)){var minifiedKey=declaredToMinifiedInputs[declaredName];var privateMinKey_1=PRIVATE_PREFIX+minifiedKey;// Walk the prototype chain to see if we find a property descriptor
// That way we can honor setters and getters that were inherited.
var originalProperty=undefined;var checkProto=proto;while(!originalProperty&&checkProto&&Object.getPrototypeOf(checkProto)!==Object.getPrototypeOf(Object.prototype)){originalProperty=Object.getOwnPropertyDescriptor(checkProto,minifiedKey);checkProto=Object.getPrototypeOf(checkProto);}var getter=originalProperty&&originalProperty.get;var setter_1=originalProperty&&originalProperty.set;// create a getter and setter for property
Object.defineProperty(proto,minifiedKey,{get:getter||(setter_1?undefined:function(){return this[privateMinKey_1];}),set:function set(value){var simpleChanges=this[PRIVATE_PREFIX];if(!simpleChanges){simpleChanges={};// Place where we will store SimpleChanges if there is a change
Object.defineProperty(this,PRIVATE_PREFIX,{value:simpleChanges,writable:true});}var isFirstChange=!this.hasOwnProperty(privateMinKey_1);var currentChange=simpleChanges[declaredName];if(currentChange){currentChange.currentValue=value;}else{simpleChanges[declaredName]=new SimpleChange(this[privateMinKey_1],value,isFirstChange);}if(isFirstChange){// Create a place where the actual value will be stored and make it non-enumerable
Object.defineProperty(this,privateMinKey_1,{value:value,writable:true});}else{this[privateMinKey_1]=value;}if(setter_1)setter_1.call(this,value);},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}};for(var declaredName in declaredToMinifiedInputs){_loop_1(declaredName);}// If an onInit hook is defined, it will need to wrap the ngOnChanges call
// so the call order is changes-init-check in creation mode. In subsequent
// change detection runs, only the check wrapper will be called.
if(definition.onInit!=null){definition.onInit=onChangesWrapper(definition.onInit);}definition.doCheck=onChangesWrapper(definition.doCheck);}function onChangesWrapper(delegateHook){return function(){var simpleChanges=this[PRIVATE_PREFIX];if(simpleChanges!=null){this.ngOnChanges(simpleChanges);this[PRIVATE_PREFIX]=null;}if(delegateHook)delegateHook.apply(this);};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * The number of slots in each bloom filter (used by DI). The larger this number, the fewer
 * directives that will share slots, and thus, the fewer false positives when checking for
 * the existence of a directive.
 */var BLOOM_SIZE=256;var BLOOM_MASK=BLOOM_SIZE-1;/** Counter used to generate unique IDs for directives. */var nextNgElementId=0;/**
 * Registers this directive as present in its node's injector by flipping the directive's
 * corresponding bit in the injector's bloom filter.
 *
 * @param injectorIndex The index of the node injector where this token should be registered
 * @param tView The TView for the injector's bloom filters
 * @param type The directive token to register
 */function bloomAdd(injectorIndex,tView,type){if(tView.firstTemplatePass){var id=type[NG_ELEMENT_ID];// Set a unique ID on the directive type, so if something tries to inject the directive,
// we can easily retrieve the ID and hash it into the bloom bit that should be checked.
if(id==null){id=type[NG_ELEMENT_ID]=nextNgElementId++;}// We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),
// so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.
var bloomBit=id&BLOOM_MASK;// Create a mask that targets the specific bit associated with the directive.
// JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
// to bit positions 0 - 31 in a 32 bit integer.
var mask=1<<bloomBit;// Use the raw bloomBit number to determine which bloom filter bucket we should check
// e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc
var b7=bloomBit&0x80;var b6=bloomBit&0x40;var b5=bloomBit&0x20;var tData=tView.data;if(b7){b6?b5?tData[injectorIndex+7]|=mask:tData[injectorIndex+6]|=mask:b5?tData[injectorIndex+5]|=mask:tData[injectorIndex+4]|=mask;}else{b6?b5?tData[injectorIndex+3]|=mask:tData[injectorIndex+2]|=mask:b5?tData[injectorIndex+1]|=mask:tData[injectorIndex]|=mask;}}}function getOrCreateNodeInjector(){return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(),_getViewData());}/**
 * Creates (or gets an existing) injector for a given element or container.
 *
 * @param tNode for which an injector should be retrieved / created.
 * @param hostView View where the node is stored
 * @returns Node injector
 */function getOrCreateNodeInjectorForNode(tNode,hostView){var existingInjectorIndex=getInjectorIndex(tNode,hostView);if(existingInjectorIndex!==-1){return existingInjectorIndex;}var tView=hostView[TVIEW];if(tView.firstTemplatePass){tNode.injectorIndex=hostView.length;setUpBloom(tView.data,tNode);// foundation for node bloom
setUpBloom(hostView,null);// foundation for cumulative bloom
setUpBloom(tView.blueprint,null);}var parentLoc=getParentInjectorLocation(tNode,hostView);var parentIndex=parentLoc&32767/* InjectorIndexMask */;var parentView=getParentInjectorView(parentLoc,hostView);var parentData=parentView[TVIEW].data;var injectorIndex=tNode.injectorIndex;// If a parent injector can't be found, its location is set to -1.
// In that case, we don't need to set up a cumulative bloom
if(parentLoc!==-1){for(var i=0;i<PARENT_INJECTOR;i++){var bloomIndex=parentIndex+i;// Creates a cumulative bloom filter that merges the parent's bloom filter
// and its own cumulative bloom (which contains tokens for all ancestors)
hostView[injectorIndex+i]=parentView[bloomIndex]|parentData[bloomIndex];}}hostView[injectorIndex+PARENT_INJECTOR]=parentLoc;return injectorIndex;}function setUpBloom(arr,footer){arr.push(0,0,0,0,0,0,0,0,footer);}function getInjectorIndex(tNode,hostView){if(tNode.injectorIndex===-1||// If the injector index is the same as its parent's injector index, then the index has been
// copied down from the parent node. No injector has been created yet on this node.
tNode.parent&&tNode.parent.injectorIndex===tNode.injectorIndex||// After the first template pass, the injector index might exist but the parent values
// might not have been calculated yet for this instance
hostView[tNode.injectorIndex+PARENT_INJECTOR]==null){return-1;}else{return tNode.injectorIndex;}}/**
 * Finds the index of the parent injector, with a view offset if applicable. Used to set the
 * parent injector initially.
 */function getParentInjectorLocation(tNode,view){if(tNode.parent&&tNode.parent.injectorIndex!==-1){return tNode.parent.injectorIndex;// view offset is 0
}// For most cases, the parent injector index can be found on the host node (e.g. for component
// or container), so this loop will be skipped, but we must keep the loop here to support
// the rarer case of deeply nested <ng-template> tags or inline views.
var hostTNode=view[HOST_NODE];var viewOffset=1;while(hostTNode&&hostTNode.injectorIndex===-1){view=view[DECLARATION_VIEW];hostTNode=view[HOST_NODE];viewOffset++;}return hostTNode?hostTNode.injectorIndex|viewOffset<<15/* ViewOffsetShift */:-1;}/**
 * Unwraps a parent injector location number to find the view offset from the current injector,
 * then walks up the declaration view tree until the view is found that contains the parent
 * injector.
 *
 * @param location The location of the parent injector, which contains the view offset
 * @param startView The LViewData instance from which to start walking up the view tree
 * @returns The LViewData instance that contains the parent injector
 */function getParentInjectorView(location,startView){var viewOffset=location>>15/* ViewOffsetShift */;var parentView=startView;// For most cases, the parent injector can be found on the host node (e.g. for component
// or container), but we must keep the loop here to support the rarer case of deeply nested
// <ng-template> tags or inline views, where the parent injector might live many views
// above the child injector.
while(viewOffset>0){parentView=parentView[DECLARATION_VIEW];viewOffset--;}return parentView;}/**
 * Makes a directive public to the DI system by adding it to an injector's bloom filter.
 *
 * @param di The node injector in which a directive will be added
 * @param def The definition of the directive to be made public
 */function diPublicInInjector(injectorIndex,view,def){bloomAdd(injectorIndex,view[TVIEW],def.type);}/**
 * Makes a directive public to the DI system by adding it to an injector's bloom filter.
 *
 * @param def The definition of the directive to be made public
 */function diPublic(def){diPublicInInjector(getOrCreateNodeInjector(),_getViewData(),def);}function directiveInject(token,flags){if(flags===void 0){flags=0/* Default */;}var hostTNode=getPreviousOrParentTNode();return getOrCreateInjectable(hostTNode,_getViewData(),token,flags);}/**
 * Inject static attribute value into directive constructor.
 *
 * This method is used with `factory` functions which are generated as part of
 * `defineDirective` or `defineComponent`. The method retrieves the static value
 * of an attribute. (Dynamic attributes are not supported since they are not resolved
 *  at the time of injection and can change over time.)
 *
 * # Example
 * Given:
 * ```
 * @Component(...)
 * class MyComponent {
 *   constructor(@Attribute('title') title: string) { ... }
 * }
 * ```
 * When instantiated with
 * ```
 * <my-component title="Hello"></my-component>
 * ```
 *
 * Then factory method generated is:
 * ```
 * MyComponent.ngComponentDef = defineComponent({
 *   factory: () => new MyComponent(injectAttribute('title'))
 *   ...
 * })
 * ```
 *
 * @experimental
 */function injectAttribute(attrNameToInject){var tNode=getPreviousOrParentTNode();ngDevMode&&assertNodeOfPossibleTypes(tNode,0/* Container */,3/* Element */,4/* ElementContainer */);ngDevMode&&assertDefined(tNode,'expecting tNode');var attrs=tNode.attrs;if(attrs){for(var i=0;i<attrs.length;i=i+2){var attrName=attrs[i];if(attrName===1/* SelectOnly */)break;if(attrName==attrNameToInject){return attrs[i+1];}}}return undefined;}/**
 * Returns the value associated to the given token from the injectors.
 *
 * Look for the injector providing the token by walking up the node injector tree and then
 * the module injector tree.
 *
 * @param nodeInjector Node injector where the search should start
 * @param token The token to look for
 * @param flags Injection flags
 * @returns the value from the injector or `null` when not found
 */function getOrCreateInjectable(hostTNode,hostView,token,flags){if(flags===void 0){flags=0/* Default */;}var bloomHash=bloomHashBitOrFactory(token);// If the ID stored here is a function, this is a special object like ElementRef or TemplateRef
// so just call the factory function to create it.
if(typeof bloomHash==='function')return bloomHash();// If the token has a bloom hash, then it is a directive that is public to the injection system
// (diPublic) otherwise fall back to the module injector.
if(bloomHash!=null){var startInjectorIndex=getInjectorIndex(hostTNode,hostView);var injectorIndex=startInjectorIndex;var injectorView=hostView;var parentLocation=-1;// If we should skip this injector or if an injector doesn't exist on this node (e.g. all
// directives on this node are private), start by searching the parent injector.
if(flags&4/* SkipSelf */||injectorIndex===-1){parentLocation=injectorIndex===-1?getParentInjectorLocation(hostTNode,hostView):injectorView[injectorIndex+PARENT_INJECTOR];if(shouldNotSearchParent(flags,parentLocation)){injectorIndex=-1;}else{injectorIndex=parentLocation&32767/* InjectorIndexMask */;injectorView=getParentInjectorView(parentLocation,injectorView);}}while(injectorIndex!==-1){// Traverse up the injector tree until we find a potential match or until we know there
// *isn't* a match. Outer loop is necessary in case we get a false positive injector.
while(injectorIndex!==-1){// Check the current injector. If it matches, stop searching for an injector.
if(injectorHasToken(bloomHash,injectorIndex,injectorView[TVIEW].data)){break;}parentLocation=injectorView[injectorIndex+PARENT_INJECTOR];if(shouldNotSearchParent(flags,parentLocation)){injectorIndex=-1;break;}// If the ancestor bloom filter value has the bit corresponding to the directive, traverse
// up to find the specific injector. If the ancestor bloom filter does not have the bit, we
// can abort.
if(injectorHasToken(bloomHash,injectorIndex,injectorView)){injectorIndex=parentLocation&32767/* InjectorIndexMask */;injectorView=getParentInjectorView(parentLocation,injectorView);}else{injectorIndex=-1;break;}}// If no injector is found, we *know* that there is no ancestor injector that contains the
// token, so we abort.
if(injectorIndex===-1){break;}// At this point, we have an injector which *may* contain the token, so we step through the
// directives associated with the injector's corresponding node to get the directive instance.
var instance=void 0;if(instance=searchDirectivesOnInjector(injectorIndex,injectorView,token)){return instance;}// If we *didn't* find the directive for the token and we are searching the current node's
// injector, it's possible the directive is on this node and hasn't been created yet.
if(injectorIndex===startInjectorIndex&&hostView===injectorView&&(instance=searchMatchesQueuedForCreation(token,injectorView[TVIEW]))){return instance;}// The def wasn't found anywhere on this node, so it was a false positive.
// Traverse up the tree and continue searching.
injectorIndex=parentLocation&32767/* InjectorIndexMask */;injectorView=getParentInjectorView(parentLocation,injectorView);}}var moduleInjector=hostView[INJECTOR$1];var formerInjector=setCurrentInjector(moduleInjector);try{return inject(token,flags);}finally{setCurrentInjector(formerInjector);}}function searchMatchesQueuedForCreation(token,hostTView){var matches=hostTView.currentMatches;if(matches){for(var i=0;i<matches.length;i+=2){var def=matches[i];if(def.type===token){return resolveDirective(def,i+1,matches);}}}return null;}function searchDirectivesOnInjector(injectorIndex,injectorView,token){var tNode=injectorView[TVIEW].data[injectorIndex+TNODE];var nodeFlags=tNode.flags;var count=nodeFlags&4095/* DirectiveCountMask */;if(count!==0){var start=nodeFlags>>15/* DirectiveStartingIndexShift */;var end=start+count;var defs=injectorView[TVIEW].data;for(var i=start;i<end;i++){// Get the definition for the directive at this index and, if it is injectable (diPublic),
// and matches the given token, return the directive instance.
var directiveDef=defs[i];if(directiveDef.type===token&&directiveDef.diPublic){return injectorView[i];}}}return null;}/**
 * Returns the bit in an injector's bloom filter that should be used to determine whether or not
 * the directive might be provided by the injector.
 *
 * When a directive is public, it is added to the bloom filter and given a unique ID that can be
 * retrieved on the Type. When the directive isn't public or the token is not a directive `null`
 * is returned as the node injector can not possibly provide that token.
 *
 * @param token the injection token
 * @returns the matching bit to check in the bloom filter or `null` if the token is not known.
 */function bloomHashBitOrFactory(token){var tokenId=token[NG_ELEMENT_ID];return typeof tokenId==='number'?tokenId&BLOOM_MASK:tokenId;}function injectorHasToken(bloomHash,injectorIndex,injectorView){// Create a mask that targets the specific bit associated with the directive we're looking for.
// JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
// to bit positions 0 - 31 in a 32 bit integer.
var mask=1<<bloomHash;var b7=bloomHash&0x80;var b6=bloomHash&0x40;var b5=bloomHash&0x20;// Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:
// bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.
// Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.
var value;if(b7){value=b6?b5?injectorView[injectorIndex+7]:injectorView[injectorIndex+6]:b5?injectorView[injectorIndex+5]:injectorView[injectorIndex+4];}else{value=b6?b5?injectorView[injectorIndex+3]:injectorView[injectorIndex+2]:b5?injectorView[injectorIndex+1]:injectorView[injectorIndex];}// If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,
// this injector is a potential match.
return!!(value&mask);}/** Returns true if flags prevent parent injector from being searched for tokens */function shouldNotSearchParent(flags,parentLocation){return flags&2/* Self */||flags&1/* Host */&&parentLocation>>15/* ViewOffsetShift */>0;}var NodeInjector=/** @class */function(){function NodeInjector(_tNode,_hostView){this._tNode=_tNode;this._hostView=_hostView;this._injectorIndex=getOrCreateNodeInjectorForNode(_tNode,_hostView);}NodeInjector.prototype.get=function(token){setEnvironment(this._tNode,this._hostView);return getOrCreateInjectable(this._tNode,this._hostView,token);};return NodeInjector;}();function getFactoryOf(type){var typeAny=type;var def=getComponentDef(typeAny)||getDirectiveDef(typeAny)||getPipeDef(typeAny)||getInjectableDef(typeAny)||getInjectorDef(typeAny);if(!def||def.factory===undefined){return null;}return def.factory;}function getInheritedFactory(type){var proto=Object.getPrototypeOf(type.prototype).constructor;var factory=getFactoryOf(proto);if(factory!==null){return factory;}else{// There is no factory defined. Either this was improper usage of inheritance
// (no Angular decorator on the superclass) or there is no constructor at all
// in the inheritance chain. Since the two cases cannot be distinguished, the
// latter has to be assumed.
return function(t){return new t();};}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This feature publishes the directive (or component) into the DI system, making it visible to
 * others for injection.
 *
 * @param definition
 */function PublicFeature(definition){definition.diPublic=diPublic;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents a component created by a `ComponentFactory`.
 * Provides access to the component instance and related objects,
 * and provides the means of destroying the instance.
 *
 */var ComponentRef=/** @class */function(){function ComponentRef(){}return ComponentRef;}();var ComponentFactory=/** @class */function(){function ComponentFactory(){}return ComponentFactory;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function noComponentFactoryError(component){var error=Error("No component factory found for "+stringify(component)+". Did you add it to @NgModule.entryComponents?");error[ERROR_COMPONENT]=component;return error;}var ERROR_COMPONENT='ngComponent';var _NullComponentFactoryResolver=/** @class */function(){function _NullComponentFactoryResolver(){}_NullComponentFactoryResolver.prototype.resolveComponentFactory=function(component){throw noComponentFactoryError(component);};return _NullComponentFactoryResolver;}();var ComponentFactoryResolver=/** @class */function(){function ComponentFactoryResolver(){}ComponentFactoryResolver.NULL=new _NullComponentFactoryResolver();return ComponentFactoryResolver;}();var CodegenComponentFactoryResolver=/** @class */function(){function CodegenComponentFactoryResolver(factories,_parent,_ngModule){this._parent=_parent;this._ngModule=_ngModule;this._factories=new Map();for(var i=0;i<factories.length;i++){var factory=factories[i];this._factories.set(factory.componentType,factory);}}CodegenComponentFactoryResolver.prototype.resolveComponentFactory=function(component){var factory=this._factories.get(component);if(!factory&&this._parent){factory=this._parent.resolveComponentFactory(component);}if(!factory){throw noComponentFactoryError(component);}return new ComponentFactoryBoundToModule(factory,this._ngModule);};return CodegenComponentFactoryResolver;}();var ComponentFactoryBoundToModule=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ComponentFactoryBoundToModule,_super);function ComponentFactoryBoundToModule(factory,ngModule){var _this=_super.call(this)||this;_this.factory=factory;_this.ngModule=ngModule;_this.selector=factory.selector;_this.componentType=factory.componentType;_this.ngContentSelectors=factory.ngContentSelectors;_this.inputs=factory.inputs;_this.outputs=factory.outputs;return _this;}ComponentFactoryBoundToModule.prototype.create=function(injector,projectableNodes,rootSelectorOrNode,ngModule){return this.factory.create(injector,projectableNodes,rootSelectorOrNode,ngModule||this.ngModule);};return ComponentFactoryBoundToModule;}(ComponentFactory);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents an instance of an NgModule created via a {@link NgModuleFactory}.
 *
 * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this
 * NgModule Instance.
 *
 *
 */var NgModuleRef=/** @class */function(){function NgModuleRef(){}return NgModuleRef;}();/**
 * @experimental
 */var NgModuleFactory=/** @class */function(){function NgModuleFactory(){}return NgModuleFactory;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ViewRef=/** @class */function(){function ViewRef(_view,_context,_componentIndex){this._context=_context;this._componentIndex=_componentIndex;this._appRef=null;this._viewContainerRef=null;/**
         * @internal
         */this._tViewNode=null;this._view=_view;}Object.defineProperty(ViewRef.prototype,"context",{get:function get(){return this._context?this._context:this._lookUpContext();},enumerable:true,configurable:true});Object.defineProperty(ViewRef.prototype,"destroyed",{get:function get(){return(this._view[FLAGS]&32/* Destroyed */)===32/* Destroyed */;},enumerable:true,configurable:true});ViewRef.prototype.destroy=function(){if(this._viewContainerRef&&viewAttached(this._view)){this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));this._viewContainerRef=null;}destroyLView(this._view);};ViewRef.prototype.onDestroy=function(callback){storeCleanupFn(this._view,callback);};/**
     * Marks a view and all of its ancestors dirty.
     *
     * It also triggers change detection by calling `scheduleTick` internally, which coalesces
     * multiple `markForCheck` calls to into one change detection run.
     *
     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is
     * checked when it needs to be re-rendered but the two normal triggers haven't marked it
     * dirty (i.e. inputs haven't changed and events haven't fired in the view).
     *
     * <!-- TODO: Add a link to a chapter on OnPush components -->
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Component({
     *   selector: 'my-app',
     *   template: `Number of ticks: {{numberOfTicks}}`
     *   changeDetection: ChangeDetectionStrategy.OnPush,
     * })
     * class AppComponent {
     *   numberOfTicks = 0;
     *
     *   constructor(private ref: ChangeDetectorRef) {
     *     setInterval(() => {
     *       this.numberOfTicks++;
     *       // the following is required, otherwise the view will not be updated
     *       this.ref.markForCheck();
     *     }, 1000);
     *   }
     * }
     * ```
     */ViewRef.prototype.markForCheck=function(){markViewDirty(this._view);};/**
     * Detaches the view from the change detection tree.
     *
     * Detached views will not be checked during change detection runs until they are
     * re-attached, even if they are dirty. `detach` can be used in combination with
     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change
     * detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * @usageNotes
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds. We can do that by detaching
     * the component's change detector and doing a local check every five seconds.
     *
     * ```typescript
     * class DataProvider {
     *   // in a real application the returned data will be different every time
     *   get data() {
     *     return [1,2,3,4,5];
     *   }
     * }
     *
     * @Component({
     *   selector: 'giant-list',
     *   template: `
     *     <li *ngFor="let d of dataProvider.data">Data {{d}}</li>
     *   `,
     * })
     * class GiantList {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {
     *     ref.detach();
     *     setInterval(() => {
     *       this.ref.detectChanges();
     *     }, 5000);
     *   }
     * }
     *
     * @Component({
     *   selector: 'app',
     *   providers: [DataProvider],
     *   template: `
     *     <giant-list><giant-list>
     *   `,
     * })
     * class App {
     * }
     * ```
     */ViewRef.prototype.detach=function(){this._view[FLAGS]&=~8/* Attached */;};/**
     * Re-attaches a view to the change detection tree.
     *
     * This can be used to re-attach views that were previously detached from the tree
     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     *
     * @usageNotes
     * ### Example
     *
     * The following example creates a component displaying `live` data. The component will detach
     * its change detector from the main change detector tree when the component's live property
     * is set to false.
     *
     * ```typescript
     * class DataProvider {
     *   data = 1;
     *
     *   constructor() {
     *     setInterval(() => {
     *       this.data = this.data * 2;
     *     }, 500);
     *   }
     * }
     *
     * @Component({
     *   selector: 'live-data',
     *   inputs: ['live'],
     *   template: 'Data: {{dataProvider.data}}'
     * })
     * class LiveData {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}
     *
     *   set live(value) {
     *     if (value) {
     *       this.ref.reattach();
     *     } else {
     *       this.ref.detach();
     *     }
     *   }
     * }
     *
     * @Component({
     *   selector: 'my-app',
     *   providers: [DataProvider],
     *   template: `
     *     Live Update: <input type="checkbox" [(ngModel)]="live">
     *     <live-data [live]="live"><live-data>
     *   `,
     * })
     * class AppComponent {
     *   live = true;
     * }
     * ```
     */ViewRef.prototype.reattach=function(){this._view[FLAGS]|=8/* Attached */;};/**
     * Checks the view and its children.
     *
     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement
     * local change detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * @usageNotes
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine, the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds.
     *
     * We can do that by detaching the component's change detector and doing a local change detection
     * check every five seconds.
     *
     * See {@link ChangeDetectorRef#detach detach} for more information.
     */ViewRef.prototype.detectChanges=function(){var rendererFactory=getRendererFactory();if(rendererFactory.begin){rendererFactory.begin();}detectChanges(this.context);if(rendererFactory.end){rendererFactory.end();}};/**
     * Checks the change detector and its children, and throws if any changes are detected.
     *
     * This is used in development mode to verify that running change detection doesn't
     * introduce other changes.
     */ViewRef.prototype.checkNoChanges=function(){checkNoChanges(this.context);};ViewRef.prototype.attachToViewContainerRef=function(vcRef){this._viewContainerRef=vcRef;};ViewRef.prototype.detachFromAppRef=function(){this._appRef=null;};ViewRef.prototype.attachToAppRef=function(appRef){this._appRef=appRef;};ViewRef.prototype._lookUpContext=function(){return this._context=this._view[PARENT][this._componentIndex];};return ViewRef;}();/** @internal */var RootViewRef=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RootViewRef,_super);function RootViewRef(_view){var _this=_super.call(this,_view,null,-1)||this;_this._view=_view;return _this;}RootViewRef.prototype.detectChanges=function(){detectChangesInRootView(this._view);};RootViewRef.prototype.checkNoChanges=function(){checkNoChangesInRootView(this._view);};return RootViewRef;}(ViewRef);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Creates an ElementRef from the most recent node.
 *
 * @returns The ElementRef instance to use
 */function injectElementRef(ElementRefToken){return createElementRef(ElementRefToken,getPreviousOrParentTNode(),_getViewData());}var R3ElementRef;/**
 * Creates an ElementRef given a node.
 *
 * @param ElementRefToken The ElementRef type
 * @param tNode The node for which you'd like an ElementRef
 * @param view The view to which the node belongs
 * @returns The ElementRef instance to use
 */function createElementRef(ElementRefToken,tNode,view){if(!R3ElementRef){// TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug
R3ElementRef=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ElementRef_,_super);function ElementRef_(){return _super!==null&&_super.apply(this,arguments)||this;}return ElementRef_;}(ElementRefToken);}return new R3ElementRef(getNativeByTNode(tNode,view));}var R3TemplateRef;/**
 * Creates a TemplateRef given a node.
 *
 * @returns The TemplateRef instance to use
 */function injectTemplateRef(TemplateRefToken,ElementRefToken){return createTemplateRef(TemplateRefToken,ElementRefToken,getPreviousOrParentTNode(),_getViewData());}/**
 * Creates a TemplateRef and stores it on the injector.
 *
 * @param TemplateRefToken The TemplateRef type
 * @param ElementRefToken The ElementRef type
 * @param hostTNode The node that is requesting a TemplateRef
 * @param hostView The view to which the node belongs
 * @returns The TemplateRef instance to use
 */function createTemplateRef(TemplateRefToken,ElementRefToken,hostTNode,hostView){if(!R3TemplateRef){// TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug
R3TemplateRef=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TemplateRef_,_super);function TemplateRef_(_declarationParentView,elementRef,_tView,_renderer,_queries,_injectorIndex){var _this=_super.call(this)||this;_this._declarationParentView=_declarationParentView;_this.elementRef=elementRef;_this._tView=_tView;_this._renderer=_renderer;_this._queries=_queries;_this._injectorIndex=_injectorIndex;return _this;}TemplateRef_.prototype.createEmbeddedView=function(context,container$$1,hostTNode,hostView,index){var lView=createEmbeddedViewAndNode(this._tView,context,this._declarationParentView,this._renderer,this._queries,this._injectorIndex);if(container$$1){insertView(lView,container$$1,hostView,index,hostTNode.index);}renderEmbeddedTemplate(lView,this._tView,context,1/* Create */);var viewRef=new ViewRef(lView,context,-1);viewRef._tViewNode=lView[HOST_NODE];return viewRef;};return TemplateRef_;}(TemplateRefToken);}var hostContainer=hostView[hostTNode.index];ngDevMode&&assertNodeType(hostTNode,0/* Container */);ngDevMode&&assertDefined(hostTNode.tViews,'TView must be allocated');return new R3TemplateRef(hostView,createElementRef(ElementRefToken,hostTNode,hostView),hostTNode.tViews,getRenderer(),hostContainer[QUERIES],hostTNode.injectorIndex);}var R3ViewContainerRef;/**
 * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef
 * already exists, retrieves the existing ViewContainerRef.
 *
 * @returns The ViewContainerRef instance to use
 */function injectViewContainerRef(ViewContainerRefToken,ElementRefToken){var previousTNode=getPreviousOrParentTNode();return createContainerRef(ViewContainerRefToken,ElementRefToken,previousTNode,_getViewData());}/**
 * Creates a ViewContainerRef and stores it on the injector.
 *
 * @param ViewContainerRefToken The ViewContainerRef type
 * @param ElementRefToken The ElementRef type
 * @param hostTNode The node that is requesting a ViewContainerRef
 * @param hostView The view to which the node belongs
 * @returns The ViewContainerRef instance to use
 */function createContainerRef(ViewContainerRefToken,ElementRefToken,hostTNode,hostView){if(!R3ViewContainerRef){// TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug
R3ViewContainerRef=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ViewContainerRef_,_super);function ViewContainerRef_(_lContainer,_hostTNode,_hostView){var _this=_super.call(this)||this;_this._lContainer=_lContainer;_this._hostTNode=_hostTNode;_this._hostView=_hostView;_this._viewRefs=[];return _this;}Object.defineProperty(ViewContainerRef_.prototype,"element",{get:function get(){return createElementRef(ElementRefToken,this._hostTNode,this._hostView);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"injector",{get:function get(){return new NodeInjector(this._hostTNode,this._hostView);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"parentInjector",{/** @deprecated No replacement */get:function get(){var parentLocation=getParentInjectorLocation(this._hostTNode,this._hostView);var parentView=getParentInjectorView(parentLocation,this._hostView);var parentIndex=parentLocation&32767/* InjectorIndexMask */;var parentTNode=parentView[TVIEW].data[parentIndex];return parentLocation===-1?new NullInjector():new NodeInjector(parentTNode,parentView);},enumerable:true,configurable:true});ViewContainerRef_.prototype.clear=function(){while(this._lContainer[VIEWS].length){this.remove(0);}};ViewContainerRef_.prototype.get=function(index){return this._viewRefs[index]||null;};Object.defineProperty(ViewContainerRef_.prototype,"length",{get:function get(){return this._lContainer[VIEWS].length;},enumerable:true,configurable:true});ViewContainerRef_.prototype.createEmbeddedView=function(templateRef,context,index){var adjustedIdx=this._adjustIndex(index);var viewRef=templateRef.createEmbeddedView(context||{},this._lContainer,this._hostTNode,this._hostView,adjustedIdx);viewRef.attachToViewContainerRef(this);this._viewRefs.splice(adjustedIdx,0,viewRef);return viewRef;};ViewContainerRef_.prototype.createComponent=function(componentFactory,index,injector,projectableNodes,ngModuleRef){var contextInjector=injector||this.parentInjector;if(!ngModuleRef&&contextInjector){ngModuleRef=contextInjector.get(NgModuleRef,null);}var componentRef=componentFactory.create(contextInjector,projectableNodes,undefined,ngModuleRef);this.insert(componentRef.hostView,index);return componentRef;};ViewContainerRef_.prototype.insert=function(viewRef,index){if(viewRef.destroyed){throw new Error('Cannot insert a destroyed View in a ViewContainer!');}var lView=viewRef._view;var adjustedIdx=this._adjustIndex(index);insertView(lView,this._lContainer,this._hostView,adjustedIdx,this._hostTNode.index);var beforeNode=getBeforeNodeForView(adjustedIdx,this._lContainer[VIEWS],this._lContainer[NATIVE]);addRemoveViewFromContainer(lView,true,beforeNode);viewRef.attachToViewContainerRef(this);this._viewRefs.splice(adjustedIdx,0,viewRef);return viewRef;};ViewContainerRef_.prototype.move=function(viewRef,newIndex){var index=this.indexOf(viewRef);this.detach(index);this.insert(viewRef,this._adjustIndex(newIndex));return viewRef;};ViewContainerRef_.prototype.indexOf=function(viewRef){return this._viewRefs.indexOf(viewRef);};ViewContainerRef_.prototype.remove=function(index){var adjustedIdx=this._adjustIndex(index,-1);removeView(this._lContainer,this._hostTNode,adjustedIdx);this._viewRefs.splice(adjustedIdx,1);};ViewContainerRef_.prototype.detach=function(index){var adjustedIdx=this._adjustIndex(index,-1);detachView(this._lContainer,adjustedIdx,!!this._hostTNode.detached);return this._viewRefs.splice(adjustedIdx,1)[0]||null;};ViewContainerRef_.prototype._adjustIndex=function(index,shift){if(shift===void 0){shift=0;}if(index==null){return this._lContainer[VIEWS].length+shift;}if(ngDevMode){assertGreaterThan(index,-1,'index must be positive');// +1 because it's legal to insert at the end.
assertLessThan(index,this._lContainer[VIEWS].length+1+shift,'index');}return index;};return ViewContainerRef_;}(ViewContainerRefToken);}ngDevMode&&assertNodeOfPossibleTypes(hostTNode,0/* Container */,3/* Element */,4/* ElementContainer */);var lContainer;var slotValue=hostView[hostTNode.index];if(isLContainer(slotValue)){// If the host is a container, we don't need to create a new LContainer
lContainer=slotValue;lContainer[ACTIVE_INDEX]=-1;}else{var comment=hostView[RENDERER].createComment(ngDevMode?'container':'');ngDevMode&&ngDevMode.rendererCreateComment++;hostView[hostTNode.index]=lContainer=createLContainer(slotValue,hostTNode,hostView,comment,true);appendChild(comment,hostTNode,hostView);addToViewTree(hostView,hostTNode.index,lContainer);}return new R3ViewContainerRef(lContainer,hostTNode,hostView);}/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */function injectChangeDetectorRef(){return createViewRef(getPreviousOrParentTNode(),_getViewData(),null);}/**
 * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).
 *
 * @param hostTNode The node that is requesting a ChangeDetectorRef
 * @param hostView The view to which the node belongs
 * @param context The context for this change detector ref
 * @returns The ChangeDetectorRef to use
 */function createViewRef(hostTNode,hostView,context){if(isComponent(hostTNode)){var componentIndex=hostTNode.flags>>15/* DirectiveStartingIndexShift */;var componentView=getComponentViewByIndex(hostTNode.index,hostView);return new ViewRef(componentView,context,componentIndex);}else if(hostTNode.type===3/* Element */){var hostComponentView=findComponentView(hostView);return new ViewRef(hostComponentView,hostComponentView[CONTEXT],-1);}return null;}function getOrCreateRenderer2(view){var renderer=view[RENDERER];if(isProceduralRenderer(renderer)){return renderer;}else{throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');}}/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */function injectRenderer2(){return getOrCreateRenderer2(_getViewData());}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var R3_ELEMENT_REF_FACTORY=injectElementRef;var R3_TEMPLATE_REF_FACTORY=injectTemplateRef;var R3_CHANGE_DETECTOR_REF_FACTORY=injectChangeDetectorRef;var R3_VIEW_CONTAINER_REF_FACTORY=injectViewContainerRef;var R3_RENDERER2_FACTORY=injectRenderer2;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function noopFactory(){var tokens=[];for(var _i=0;_i<arguments.length;_i++){tokens[_i]=arguments[_i];}}var R3_ELEMENT_REF_FACTORY__POST_NGCC__=R3_ELEMENT_REF_FACTORY;var R3_TEMPLATE_REF_FACTORY__POST_NGCC__=R3_TEMPLATE_REF_FACTORY;var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__=R3_CHANGE_DETECTOR_REF_FACTORY;var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__=R3_VIEW_CONTAINER_REF_FACTORY;var R3_RENDERER2_FACTORY__POST_NGCC__=R3_RENDERER2_FACTORY;var R3_ELEMENT_REF_FACTORY__PRE_NGCC__=noopFactory;var R3_TEMPLATE_REF_FACTORY__PRE_NGCC__=noopFactory;var R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__=noopFactory;var R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__=noopFactory;var R3_RENDERER2_FACTORY__PRE_NGCC__=noopFactory;var R3_ELEMENT_REF_FACTORY$1=R3_ELEMENT_REF_FACTORY__PRE_NGCC__;var R3_TEMPLATE_REF_FACTORY$1=R3_TEMPLATE_REF_FACTORY__PRE_NGCC__;var R3_CHANGE_DETECTOR_REF_FACTORY$1=R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__;var R3_VIEW_CONTAINER_REF_FACTORY$1=R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__;var R3_RENDERER2_FACTORY$1=R3_RENDERER2_FACTORY__PRE_NGCC__;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A wrapper around a native element inside of a View.
 *
 * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM
 * element.
 *
 * @security Permitting direct access to the DOM can make your application more vulnerable to
 * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the
 * [Security Guide](http://g.co/ng/security).
 *
 *
 */ // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,
// i.e. users have to ask for what they need. With that, we can build better analysis tools
// and could do better codegen in the future.
var ElementRef=/** @class */function(){function ElementRef(nativeElement){this.nativeElement=nativeElement;}/** @internal */ElementRef.__NG_ELEMENT_ID__=function(){return R3_ELEMENT_REF_FACTORY$1(ElementRef);};return ElementRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @deprecated Use `RendererType2` (and `Renderer2`) instead.
 */var RenderComponentType=/** @class */function(){function RenderComponentType(id,templateUrl,slotCount,encapsulation,styles,animations){this.id=id;this.templateUrl=templateUrl;this.slotCount=slotCount;this.encapsulation=encapsulation;this.styles=styles;this.animations=animations;}return RenderComponentType;}();/**
 * @deprecated Debug info is handled internally in the view engine now.
 */var RenderDebugInfo=/** @class */function(){function RenderDebugInfo(){}return RenderDebugInfo;}();/**
 * @deprecated Use the `Renderer2` instead.
 */var Renderer=/** @class */function(){function Renderer(){}return Renderer;}();var Renderer2Interceptor=new InjectionToken('Renderer2Interceptor');/**
 * Injectable service that provides a low-level interface for modifying the UI.
 *
 * Use this service to bypass Angular's templating and make custom UI changes that can't be
 * expressed declaratively. For example if you need to set a property or an attribute whose name is
 * not statically known, use {@link Renderer#setElementProperty setElementProperty} or
 * {@link Renderer#setElementAttribute setElementAttribute} respectively.
 *
 * If you are implementing a custom renderer, you must implement this interface.
 *
 * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.
 *
 * @deprecated Use `RendererFactory2` instead.
 */var RootRenderer=/** @class */function(){function RootRenderer(){}return RootRenderer;}();/**
 * Creates and initializes a custom renderer that implements the `Renderer2` base class.
 *
 * @experimental
 */var RendererFactory2=/** @class */function(){function RendererFactory2(){}return RendererFactory2;}();/**
 * Flags for renderer-specific style modifiers.
 * @experimental
 */var RendererStyleFlags2;(function(RendererStyleFlags2){/**
     * Marks a style as important.
     */RendererStyleFlags2[RendererStyleFlags2["Important"]=1]="Important";/**
     * Marks a style as using dash case naming (this-is-dash-case).
     */RendererStyleFlags2[RendererStyleFlags2["DashCase"]=2]="DashCase";})(RendererStyleFlags2||(RendererStyleFlags2={}));/**
 * Extend this base class to implement custom rendering. By default, Angular
 * renders a template into DOM. You can use custom rendering to intercept
 * rendering calls, or to render to something other than DOM.
 *
 * Create your custom renderer using `RendererFactory2`.
 *
 * Use a custom renderer to bypass Angular's templating and
 * make custom UI changes that can't be expressed declaratively.
 * For example if you need to set a property or an attribute whose name is
 * not statically known, use the `setProperty()` or
 * `setAttribute()` method.
 *
 * @experimental
 */var Renderer2=/** @class */function(){function Renderer2(){}/** @internal */Renderer2.__NG_ELEMENT_ID__=function(){return R3_RENDERER2_FACTORY$1();};return Renderer2;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ComponentFactoryResolver$1=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ComponentFactoryResolver$$1,_super);function ComponentFactoryResolver$$1(){return _super!==null&&_super.apply(this,arguments)||this;}ComponentFactoryResolver$$1.prototype.resolveComponentFactory=function(component){ngDevMode&&assertComponentType(component);var componentDef=getComponentDef(component);return new ComponentFactory$1(componentDef);};return ComponentFactoryResolver$$1;}(ComponentFactoryResolver);function toRefArray(map){var array=[];for(var nonMinified in map){if(map.hasOwnProperty(nonMinified)){var minified=map[nonMinified];array.push({propName:minified,templateName:nonMinified});}}return array;}/**
 * Default {@link RootContext} for all components rendered with {@link renderComponent}.
 */var ROOT_CONTEXT=new InjectionToken('ROOT_CONTEXT_TOKEN',{providedIn:'root',factory:function factory(){return createRootContext(inject(SCHEDULER));}});/**
 * A change detection scheduler token for {@link RootContext}. This token is the default value used
 * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.
 */var SCHEDULER=new InjectionToken('SCHEDULER_TOKEN',{providedIn:'root',factory:function factory(){var useRaf=typeof requestAnimationFrame!=='undefined'&&typeof window!=='undefined';return useRaf?requestAnimationFrame.bind(window):setTimeout;}});/**
 * A function used to wrap the `RendererFactory2`.
 * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.
 */var WRAP_RENDERER_FACTORY2=new InjectionToken('WRAP_RENDERER_FACTORY2');/**
 * Render3 implementation of {@link viewEngine_ComponentFactory}.
 */var ComponentFactory$1=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ComponentFactory$$1,_super);function ComponentFactory$$1(componentDef){var _this=_super.call(this)||this;_this.componentDef=componentDef;_this.componentType=componentDef.type;_this.selector=componentDef.selectors[0][0];_this.ngContentSelectors=[];return _this;}Object.defineProperty(ComponentFactory$$1.prototype,"inputs",{get:function get(){return toRefArray(this.componentDef.inputs);},enumerable:true,configurable:true});Object.defineProperty(ComponentFactory$$1.prototype,"outputs",{get:function get(){return toRefArray(this.componentDef.outputs);},enumerable:true,configurable:true});ComponentFactory$$1.prototype.create=function(injector,projectableNodes,rootSelectorOrNode,ngModule){var isInternalRootView=rootSelectorOrNode===undefined;var rendererFactory;if(ngModule){var wrapper=ngModule.injector.get(WRAP_RENDERER_FACTORY2,function(v){return v;});rendererFactory=wrapper(ngModule.injector.get(RendererFactory2));}else{rendererFactory=domRendererFactory3;}var hostRNode=isInternalRootView?elementCreate(this.selector,rendererFactory.createRenderer(null,this.componentDef)):locateHostElement(rendererFactory,rootSelectorOrNode);// The first index of the first selector is the tag name.
var componentTag=this.componentDef.selectors[0][0];var rootFlags=this.componentDef.onPush?4/* Dirty */|64/* IsRoot */:2/* CheckAlways */|64/* IsRoot */;var rootContext=ngModule&&!isInternalRootView?ngModule.injector.get(ROOT_CONTEXT):createRootContext(requestAnimationFrame.bind(window));var renderer=rendererFactory.createRenderer(hostRNode,this.componentDef);// Create the root view. Uses empty TView and ContentTemplate.
var rootView=createLViewData(renderer,createTView(-1,null,1,0,null,null,null),rootContext,rootFlags);rootView[INJECTOR$1]=ngModule&&ngModule.injector||null;// rootView is the parent when bootstrapping
var oldView=enterView(rootView,null);var component;var tElementNode;try{if(rendererFactory.begin)rendererFactory.begin();var componentView=createRootComponentView(hostRNode,this.componentDef,rootView,renderer);tElementNode=getTNode(0,rootView);// Transform the arrays of native nodes into a structure that can be consumed by the
// projection instruction. This is needed to support the reprojection of these nodes.
if(projectableNodes){var index=0;var projection$$1=tElementNode.projection=[];for(var i=0;i<projectableNodes.length;i++){var nodeList=projectableNodes[i];var firstTNode=null;var previousTNode=null;for(var j=0;j<nodeList.length;j++){adjustBlueprintForNewNode(rootView);var tNode=createNodeAtIndex(++index,3/* Element */,nodeList[j],null,null);previousTNode?previousTNode.next=tNode:firstTNode=tNode;previousTNode=tNode;}projection$$1.push(firstTNode);}}// TODO: should LifecycleHooksFeature and other host features be generated by the compiler and
// executed here?
// Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref
component=createRootComponent(hostRNode,componentView,this.componentDef,rootView,rootContext,[LifecycleHooksFeature]);// Execute the template in creation mode only, and then turn off the CreationMode flag
renderEmbeddedTemplate(componentView,componentView[TVIEW],component,1/* Create */);componentView[FLAGS]&=~1/* CreationMode */;}finally{enterView(oldView,null);if(rendererFactory.end)rendererFactory.end();}var componentRef=new ComponentRef$1(this.componentType,component,rootView,injector,createElementRef(ElementRef,tElementNode,rootView));if(isInternalRootView){// The host element of the internal root view is attached to the component's host view node
componentRef.hostView._tViewNode.child=tElementNode;}return componentRef;};return ComponentFactory$$1;}(ComponentFactory);var componentFactoryResolver=new ComponentFactoryResolver$1();/**
 * Represents an instance of a Component created via a {@link ComponentFactory}.
 *
 * `ComponentRef` provides access to the Component Instance as well other objects related to this
 * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}
 * method.
 *
 */var ComponentRef$1=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ComponentRef$$1,_super);function ComponentRef$$1(componentType,instance,rootView,injector,location){var _this=_super.call(this)||this;_this.location=location;_this.destroyCbs=[];_this.instance=instance;_this.hostView=_this.changeDetectorRef=new RootViewRef(rootView);_this.hostView._tViewNode=createViewNode(-1,rootView);_this.injector=injector;_this.componentType=componentType;return _this;}ComponentRef$$1.prototype.destroy=function(){ngDevMode&&assertDefined(this.destroyCbs,'NgModule already destroyed');this.destroyCbs.forEach(function(fn){return fn();});this.destroyCbs=null;};ComponentRef$$1.prototype.onDestroy=function(callback){ngDevMode&&assertDefined(this.destroyCbs,'NgModule already destroyed');this.destroyCbs.push(callback);};return ComponentRef$$1;}(ComponentRef);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var i18nTagRegex=/{\$([^}]+)}/g;/**
 * Takes a translation string, the initial list of placeholders (elements and expressions) and the
 * indexes of their corresponding expression nodes to return a list of instructions for each
 * template function.
 *
 * Because embedded templates have different indexes for each placeholder, each parameter (except
 * the translation) is an array, where each value corresponds to a different template, by order of
 * appearance.
 *
 * @param translation A translation string where placeholders are represented by `{$name}`
 * @param elements An array containing, for each template, the maps of element placeholders and
 * their indexes.
 * @param expressions An array containing, for each template, the maps of expression placeholders
 * and their indexes.
 * @param templateRoots An array of template roots whose content should be ignored when
 * generating the instructions for their parent template.
 * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is
 * an ng-container.
 *
 * @returns A list of instructions used to translate each template.
 */function i18nMapping(translation,elements,expressions,templateRoots,lastChildIndex){var translationParts=translation.split(i18nTagRegex);var nbTemplates=templateRoots?templateRoots.length+1:1;var instructions=new Array(nbTemplates).fill(undefined);generateMappingInstructions(0,0,translationParts,instructions,elements,expressions,templateRoots,lastChildIndex);return instructions;}/**
 * Internal function that reads the translation parts and generates a set of instructions for each
 * template.
 *
 * See `i18nMapping()` for more details.
 *
 * @param tmplIndex The order of appearance of the template.
 * 0 for the root template, following indexes match the order in `templateRoots`.
 * @param partIndex The current index in `translationParts`.
 * @param translationParts The translation string split into an array of placeholders and text
 * elements.
 * @param instructions The current list of instructions to update.
 * @param elements An array containing, for each template, the maps of element placeholders and
 * their indexes.
 * @param expressions An array containing, for each template, the maps of expression placeholders
 * and their indexes.
 * @param templateRoots An array of template roots whose content should be ignored when
 * generating the instructions for their parent template.
 * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is
 * an ng-container.
 *
 * @returns the current index in `translationParts`
 */function generateMappingInstructions(tmplIndex,partIndex,translationParts,instructions,elements,expressions,templateRoots,lastChildIndex){var tmplInstructions=[];var phVisited=[];var openedTagCount=0;var maxIndex=0;var currentElements=elements&&elements[tmplIndex]?elements[tmplIndex]:null;var currentExpressions=expressions&&expressions[tmplIndex]?expressions[tmplIndex]:null;instructions[tmplIndex]=tmplInstructions;for(;partIndex<translationParts.length;partIndex++){// The value can either be text or the name of a placeholder (element/template root/expression)
var value=translationParts[partIndex];// Odd indexes are placeholders
if(partIndex&1){var phIndex=void 0;if(currentElements&&currentElements[value]!==undefined){phIndex=currentElements[value];// The placeholder represents a DOM element, add an instruction to move it
var templateRootIndex=templateRoots?templateRoots.indexOf(value):-1;if(templateRootIndex!==-1&&templateRootIndex+1!==tmplIndex){// This is a template root, it has no closing tag, not treating it as an element
tmplInstructions.push(phIndex|-2147483648/* TemplateRoot */);}else{tmplInstructions.push(phIndex|1073741824/* Element */);openedTagCount++;}phVisited.push(value);}else if(currentExpressions&&currentExpressions[value]!==undefined){phIndex=currentExpressions[value];// The placeholder represents an expression, add an instruction to move it
tmplInstructions.push(phIndex|1610612736/* Expression */);phVisited.push(value);}else{// It is a closing tag
tmplInstructions.push(-1073741824/* CloseNode */);if(tmplIndex>0){openedTagCount--;// If we have reached the closing tag for this template, exit the loop
if(openedTagCount===0){break;}}}if(phIndex!==undefined&&phIndex>maxIndex){maxIndex=phIndex;}if(templateRoots){var newTmplIndex=templateRoots.indexOf(value)+1;if(newTmplIndex!==0&&newTmplIndex!==tmplIndex){partIndex=generateMappingInstructions(newTmplIndex,partIndex,translationParts,instructions,elements,expressions,templateRoots,lastChildIndex);}}}else if(value){// It's a non-empty string, create a text node
tmplInstructions.push(536870912/* Text */,value);}}// Add instructions to remove elements that are not used in the translation
if(elements){var tmplElements=elements[tmplIndex];if(tmplElements){var phKeys=Object.keys(tmplElements);for(var i=0;i<phKeys.length;i++){var ph=phKeys[i];if(phVisited.indexOf(ph)===-1){var index=tmplElements[ph];// Add an instruction to remove the element
tmplInstructions.push(index|-536870912/* RemoveNode */);if(index>maxIndex){maxIndex=index;}}}}}// Add instructions to remove expressions that are not used in the translation
if(expressions){var tmplExpressions=expressions[tmplIndex];if(tmplExpressions){var phKeys=Object.keys(tmplExpressions);for(var i=0;i<phKeys.length;i++){var ph=phKeys[i];if(phVisited.indexOf(ph)===-1){var index=tmplExpressions[ph];if(ngDevMode){assertLessThan(index.toString(2).length,28,"Index "+index+" is too big and will overflow");}// Add an instruction to remove the expression
tmplInstructions.push(index|-536870912/* RemoveNode */);if(index>maxIndex){maxIndex=index;}}}}}if(tmplIndex===0&&typeof lastChildIndex==='number'){// The current parent is an ng-container and it has more children after the translation that we
// need to append to keep the order of the DOM nodes correct
for(var i=maxIndex+1;i<=lastChildIndex;i++){if(ngDevMode){assertLessThan(i.toString(2).length,28,"Index "+i+" is too big and will overflow");}tmplInstructions.push(i|-1610612736/* Any */);}}return partIndex;}function appendI18nNode(tNode,parentTNode,previousTNode){if(ngDevMode){ngDevMode.rendererMoveNode++;}var viewData=_getViewData();// On first pass, re-organize node tree to put this node in the correct position.
var firstTemplatePass=viewData[TVIEW].firstTemplatePass;if(firstTemplatePass){if(previousTNode===parentTNode&&tNode!==parentTNode.child){tNode.next=parentTNode.child;parentTNode.child=tNode;}else if(previousTNode!==parentTNode&&tNode!==previousTNode.next){tNode.next=previousTNode.next;previousTNode.next=tNode;}else{tNode.next=null;}if(parentTNode!==viewData[HOST_NODE]){tNode.parent=parentTNode;}}appendChild(getNativeByTNode(tNode,viewData),tNode,viewData);var slotValue=viewData[tNode.index];if(tNode.type!==0/* Container */&&isLContainer(slotValue)){// Nodes that inject ViewContainerRef also have a comment node that should be moved
appendChild(slotValue[NATIVE],tNode,viewData);}return tNode;}function i18nAttribute(index,attrs){// placeholder for i18nAttribute function
}function i18nExp(expression){// placeholder for i18nExp function
}function i18nStart(index,message,subTemplateIndex){if(subTemplateIndex===void 0){subTemplateIndex=0;}// placeholder for i18nExp function
}function i18nEnd(){}// placeholder for i18nEnd function
/**
 * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.
 *
 * @param startIndex Index of the first element to translate (for instance the first child of the
 * element with the i18n attribute).
 * @param instructions The list of instructions to apply on the current view.
 */function i18nApply(startIndex,instructions){var viewData=_getViewData();if(ngDevMode){assertEqual(viewData[BINDING_INDEX],viewData[TVIEW].bindingStartIndex,'i18nApply should be called before any binding');}if(!instructions){return;}var renderer=getRenderer();var startTNode=getTNode(startIndex,viewData);var localParentTNode=startTNode.parent||viewData[HOST_NODE];var localPreviousTNode=localParentTNode;resetComponentState();// We don't want to add to the tree with the wrong previous node
for(var i=0;i<instructions.length;i++){var instruction=instructions[i];switch(instruction&-536870912/* InstructionMask */){case 1073741824/* Element */:var elementTNode=getTNode(instruction&536870911/* IndexMask */,viewData);localPreviousTNode=appendI18nNode(elementTNode,localParentTNode,localPreviousTNode);localParentTNode=elementTNode;break;case 1610612736/* Expression */:case-2147483648/* TemplateRoot */:case-1610612736/* Any */:var nodeIndex=instruction&536870911/* IndexMask */;localPreviousTNode=appendI18nNode(getTNode(nodeIndex,viewData),localParentTNode,localPreviousTNode);break;case 536870912/* Text */:if(ngDevMode){ngDevMode.rendererCreateTextNode++;}var value=instructions[++i];var textRNode=createTextNode(value,renderer);// If we were to only create a `RNode` then projections won't move the text.
// Create text node at the current end of viewData. Must subtract header offset because
// createNodeAtIndex takes a raw index (not adjusted by header offset).
adjustBlueprintForNewNode(viewData);var textTNode=createNodeAtIndex(viewData.length-1-HEADER_OFFSET,3/* Element */,textRNode,null,null);localPreviousTNode=appendI18nNode(textTNode,localParentTNode,localPreviousTNode);resetComponentState();break;case-1073741824/* CloseNode */:localPreviousTNode=localParentTNode;localParentTNode=localParentTNode.parent||viewData[HOST_NODE];break;case-536870912/* RemoveNode */:if(ngDevMode){ngDevMode.rendererRemoveNode++;}var removeIndex=instruction&536870911/* IndexMask */;var removedElement=getNativeByIndex(removeIndex,viewData);var removedTNode=getTNode(removeIndex,viewData);removeChild(removedTNode,removedElement||null,viewData);var slotValue=load(removeIndex);if(isLContainer(slotValue)){var lContainer=slotValue;if(removedTNode.type!==0/* Container */){removeChild(removedTNode,lContainer[NATIVE]||null,viewData);}removedTNode.detached=true;lContainer[RENDER_PARENT]=null;}break;}}}/**
 * Takes a translation string and the initial list of expressions and returns a list of instructions
 * that will be used to translate an attribute.
 * Even indexes contain static strings, while odd indexes contain the index of the expression whose
 * value will be concatenated into the final translation.
 */function i18nExpMapping(translation,placeholders){var staticText=translation.split(i18nTagRegex);// odd indexes are placeholders
for(var i=1;i<staticText.length;i+=2){staticText[i]=placeholders[staticText[i]];}return staticText;}/**
 * Checks if the value of an expression has changed and replaces it by its value in a translation,
 * or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation1(instructions,v0){var different=bindingUpdated(_getViewData()[BINDING_INDEX]++,v0);if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){res+=stringify$1(v0);}else{res+=instructions[i];}}return res;}/**
 * Checks if the values of up to 2 expressions have changed and replaces them by their values in a
 * translation, or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 * @param v1 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation2(instructions,v0,v1){var viewData=_getViewData();var different=bindingUpdated2(viewData[BINDING_INDEX],v0,v1);viewData[BINDING_INDEX]+=2;if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){// Extract bits
var idx=instructions[i];var b1=idx&1;// Get the value from the argument vx where x = idx
var value=b1?v1:v0;res+=stringify$1(value);}else{res+=instructions[i];}}return res;}/**
 * Checks if the values of up to 3 expressions have changed and replaces them by their values in a
 * translation, or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 * @param v1 value checked for change.
 * @param v2 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation3(instructions,v0,v1,v2){var viewData=_getViewData();var different=bindingUpdated3(viewData[BINDING_INDEX],v0,v1,v2);viewData[BINDING_INDEX]+=3;if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){// Extract bits
var idx=instructions[i];var b2=idx&2;var b1=idx&1;// Get the value from the argument vx where x = idx
var value=b2?v2:b1?v1:v0;res+=stringify$1(value);}else{res+=instructions[i];}}return res;}/**
 * Checks if the values of up to 4 expressions have changed and replaces them by their values in a
 * translation, or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 * @param v1 value checked for change.
 * @param v2 value checked for change.
 * @param v3 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation4(instructions,v0,v1,v2,v3){var viewData=_getViewData();var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);viewData[BINDING_INDEX]+=4;if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){// Extract bits
var idx=instructions[i];var b2=idx&2;var b1=idx&1;// Get the value from the argument vx where x = idx
var value=b2?b1?v3:v2:b1?v1:v0;res+=stringify$1(value);}else{res+=instructions[i];}}return res;}/**
 * Checks if the values of up to 5 expressions have changed and replaces them by their values in a
 * translation, or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 * @param v1 value checked for change.
 * @param v2 value checked for change.
 * @param v3 value checked for change.
 * @param v4 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation5(instructions,v0,v1,v2,v3,v4){var viewData=_getViewData();var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated(viewData[BINDING_INDEX]+4,v4)||different;viewData[BINDING_INDEX]+=5;if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){// Extract bits
var idx=instructions[i];var b4=idx&4;var b2=idx&2;var b1=idx&1;// Get the value from the argument vx where x = idx
var value=b4?v4:b2?b1?v3:v2:b1?v1:v0;res+=stringify$1(value);}else{res+=instructions[i];}}return res;}/**
 * Checks if the values of up to 6 expressions have changed and replaces them by their values in a
 * translation, or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 * @param v1 value checked for change.
 * @param v2 value checked for change.
 * @param v3 value checked for change.
 * @param v4 value checked for change.
 * @param v5 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation6(instructions,v0,v1,v2,v3,v4,v5){var viewData=_getViewData();var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated2(viewData[BINDING_INDEX]+4,v4,v5)||different;viewData[BINDING_INDEX]+=6;if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){// Extract bits
var idx=instructions[i];var b4=idx&4;var b2=idx&2;var b1=idx&1;// Get the value from the argument vx where x = idx
var value=b4?b1?v5:v4:b2?b1?v3:v2:b1?v1:v0;res+=stringify$1(value);}else{res+=instructions[i];}}return res;}/**
 * Checks if the values of up to 7 expressions have changed and replaces them by their values in a
 * translation, or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 * @param v1 value checked for change.
 * @param v2 value checked for change.
 * @param v3 value checked for change.
 * @param v4 value checked for change.
 * @param v5 value checked for change.
 * @param v6 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation7(instructions,v0,v1,v2,v3,v4,v5,v6){var viewData=_getViewData();var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated3(viewData[BINDING_INDEX]+4,v4,v5,v6)||different;viewData[BINDING_INDEX]+=7;if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){// Extract bits
var idx=instructions[i];var b4=idx&4;var b2=idx&2;var b1=idx&1;// Get the value from the argument vx where x = idx
var value=b4?b2?v6:b1?v5:v4:b2?b1?v3:v2:b1?v1:v0;res+=stringify$1(value);}else{res+=instructions[i];}}return res;}/**
 * Checks if the values of up to 8 expressions have changed and replaces them by their values in a
 * translation, or returns NO_CHANGE.
 *
 * @param instructions A list of instructions that will be used to translate an attribute.
 * @param v0 value checked for change.
 * @param v1 value checked for change.
 * @param v2 value checked for change.
 * @param v3 value checked for change.
 * @param v4 value checked for change.
 * @param v5 value checked for change.
 * @param v6 value checked for change.
 * @param v7 value checked for change.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolation8(instructions,v0,v1,v2,v3,v4,v5,v6,v7){var viewData=_getViewData();var different=bindingUpdated4(viewData[BINDING_INDEX],v0,v1,v2,v3);different=bindingUpdated4(viewData[BINDING_INDEX]+4,v4,v5,v6,v7)||different;viewData[BINDING_INDEX]+=8;if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are bindings
if(i&1){// Extract bits
var idx=instructions[i];var b4=idx&4;var b2=idx&2;var b1=idx&1;// Get the value from the argument vx where x = idx
var value=b4?b2?b1?v7:v6:b1?v5:v4:b2?b1?v3:v2:b1?v1:v0;res+=stringify$1(value);}else{res+=instructions[i];}}return res;}/**
 * Create a translated interpolation binding with a variable number of expressions.
 *
 * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster
 * because there is no need to create an array of expressions and iterate over it.
 *
 * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function i18nInterpolationV(instructions,values){var viewData=_getViewData();var different=false;for(var i=0;i<values.length;i++){// Check if bindings have changed
bindingUpdated(viewData[BINDING_INDEX]++,values[i])&&(different=true);}if(!different){return NO_CHANGE;}var res='';for(var i=0;i<instructions.length;i++){// Odd indexes are placeholders
if(i&1){res+=stringify$1(values[instructions[i]]);}else{res+=instructions[i];}}return res;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An internal token whose presence in an injector indicates that the injector should treat itself
 * as a root scoped injector when processing requests for unknown tokens which may indicate
 * they are provided in the root scope.
 */var APP_ROOT=new InjectionToken('The presence of this token marks an injector as being the root injector.');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Marker which indicates that a value has not yet been created from the factory function.
 */var NOT_YET={};/**
 * Marker which indicates that the factory function for a token is in the process of being called.
 *
 * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates
 * injection of a dependency has recursively attempted to inject the original token, and there is
 * a circular dependency among the providers.
 */var CIRCULAR$2={};var EMPTY_ARRAY$1=[];/**
 * A lazily initialized NullInjector.
 */var NULL_INJECTOR$2=undefined;function getNullInjector(){if(NULL_INJECTOR$2===undefined){NULL_INJECTOR$2=new NullInjector();}return NULL_INJECTOR$2;}/**
 * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.
 *
 * @experimental
 */function createInjector(defType,parent,additionalProviders){if(parent===void 0){parent=null;}if(additionalProviders===void 0){additionalProviders=null;}parent=parent||getNullInjector();return new R3Injector(defType,additionalProviders,parent);}var R3Injector=/** @class */function(){function R3Injector(def,additionalProviders,parent){var _this=this;this.parent=parent;/**
         * Map of tokens to records which contain the instances of those tokens.
         */this.records=new Map();/**
         * The transitive set of `InjectorType`s which define this injector.
         */this.injectorDefTypes=new Set();/**
         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.
         */this.onDestroy=new Set();/**
         * Flag indicating that this injector was previously destroyed.
         */this.destroyed=false;// Start off by creating Records for every provider declared in every InjectorType
// included transitively in `def`.
deepForEach([def],function(injectorDef){return _this.processInjectorType(injectorDef,new Set());});additionalProviders&&deepForEach(additionalProviders,function(provider){return _this.processProvider(provider);});// Make sure the INJECTOR token provides this injector.
this.records.set(INJECTOR,makeRecord(undefined,this));// Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide
// any injectable scoped to APP_ROOT_SCOPE.
this.isRootInjector=this.records.has(APP_ROOT);// Eagerly instantiate the InjectorType classes themselves.
this.injectorDefTypes.forEach(function(defType){return _this.get(defType);});}/**
     * Destroy the injector and release references to every instance or provider associated with it.
     *
     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a
     * hook was found.
     */R3Injector.prototype.destroy=function(){this.assertNotDestroyed();// Set destroyed = true first, in case lifecycle hooks re-enter destroy().
this.destroyed=true;try{// Call all the lifecycle hooks.
this.onDestroy.forEach(function(service){return service.ngOnDestroy();});}finally{// Release all references.
this.records.clear();this.onDestroy.clear();this.injectorDefTypes.clear();}};R3Injector.prototype.get=function(token,notFoundValue,flags){if(notFoundValue===void 0){notFoundValue=THROW_IF_NOT_FOUND;}if(flags===void 0){flags=0/* Default */;}this.assertNotDestroyed();// Set the injection context.
var previousInjector=setCurrentInjector(this);try{// Check for the SkipSelf flag.
if(!(flags&4/* SkipSelf */)){// SkipSelf isn't set, check if the record belongs to this injector.
var record=this.records.get(token);if(record===undefined){// No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef
// with a scope matching this injector.
var def=couldBeInjectableType(token)&&getInjectableDef(token);if(def&&this.injectableDefInScope(def)){// Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here
// all along.
record=injectableDefRecord(token);this.records.set(token,record);}}// If a record was found, get the instance for it and return it.
if(record!==undefined){return this.hydrate(token,record);}}// Select the next injector based on the Self flag - if self is set, the next injector is
// the NullInjector, otherwise it's the parent.
var next=!(flags&2/* Self */)?this.parent:getNullInjector();return this.parent.get(token,notFoundValue);}finally{// Lastly, clean up the state by restoring the previous injector.
setCurrentInjector(previousInjector);}};R3Injector.prototype.assertNotDestroyed=function(){if(this.destroyed){throw new Error('Injector has already been destroyed.');}};/**
     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers
     * to this injector.
     */R3Injector.prototype.processInjectorType=function(defOrWrappedDef,parents){var _this=this;defOrWrappedDef=resolveForwardRef(defOrWrappedDef);// Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an
// InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic
// read, so care is taken to only do the read once.
// First attempt to read the ngInjectorDef.
var def=getInjectorDef(defOrWrappedDef);// If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.
var ngModule=def==null&&defOrWrappedDef.ngModule||undefined;// Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,
// then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type
// is the `ngModule`.
var defType=ngModule===undefined?defOrWrappedDef:ngModule;// If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some
// extra providers.
var providers=ngModule!==undefined&&defOrWrappedDef.providers||EMPTY_ARRAY$1;// Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual
// `InjectorDef` is on its `ngModule`.
if(ngModule!==undefined){def=getInjectorDef(ngModule);}// If no definition was found, it might be from exports. Remove it.
if(def==null){return;}// Check for circular dependencies.
if(parents.has(defType)){throw new Error("Circular dependency: type "+stringify(defType)+" ends up importing itself.");}// Track the InjectorType and add a provider for it.
this.injectorDefTypes.add(defType);this.records.set(defType,makeRecord(def.factory));// Add providers in the same way that @NgModule resolution did:
// First, include providers from any imports.
if(def.imports!=null){// Before processing defType's imports, add it to the set of parents. This way, if it ends
// up deeply importing itself, this can be detected.
parents.add(defType);try{deepForEach(def.imports,function(imported){return _this.processInjectorType(imported,parents);});}finally{// Remove it from the parents set when finished.
parents.delete(defType);}}// Next, include providers listed on the definition itself.
if(def.providers!=null){deepForEach(def.providers,function(provider){return _this.processProvider(provider);});}// Finally, include providers from an InjectorDefTypeWithProviders if there was one.
deepForEach(providers,function(provider){return _this.processProvider(provider);});};/**
     * Process a `SingleProvider` and add it.
     */R3Injector.prototype.processProvider=function(provider){// Determine the token from the provider. Either it's its own token, or has a {provide: ...}
// property.
provider=resolveForwardRef(provider);var token=isTypeProvider(provider)?provider:resolveForwardRef(provider.provide);// Construct a `Record` for the provider.
var record=providerToRecord(provider);if(!isTypeProvider(provider)&&provider.multi===true){// If the provider indicates that it's a multi-provider, process it specially.
// First check whether it's been defined already.
var multiRecord_1=this.records.get(token);if(multiRecord_1){// It has. Throw a nice error if
if(multiRecord_1.multi===undefined){throw new Error("Mixed multi-provider for "+token+".");}}else{multiRecord_1=makeRecord(undefined,NOT_YET,true);multiRecord_1.factory=function(){return injectArgs(multiRecord_1.multi);};this.records.set(token,multiRecord_1);}token=provider;multiRecord_1.multi.push(provider);}else{var existing=this.records.get(token);if(existing&&existing.multi!==undefined){throw new Error("Mixed multi-provider for "+stringify(token));}}this.records.set(token,record);};R3Injector.prototype.hydrate=function(token,record){if(record.value===CIRCULAR$2){throw new Error("Circular dep for "+stringify(token));}else if(record.value===NOT_YET){record.value=CIRCULAR$2;record.value=record.factory();}if(_typeof(record.value)==='object'&&record.value&&hasOnDestroy(record.value)){this.onDestroy.add(record.value);}return record.value;};R3Injector.prototype.injectableDefInScope=function(def){if(!def.providedIn){return false;}else if(typeof def.providedIn==='string'){return def.providedIn==='any'||def.providedIn==='root'&&this.isRootInjector;}else{return this.injectorDefTypes.has(def.providedIn);}};return R3Injector;}();function injectableDefRecord(token){var injectableDef=getInjectableDef(token);if(injectableDef===null){if(token instanceof InjectionToken){throw new Error("Token "+stringify(token)+" is missing an ngInjectableDef definition.");}// TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a
// no-args constructor.
return makeRecord(function(){return new token();});}return makeRecord(injectableDef.factory);}function providerToRecord(provider){var token=resolveForwardRef(provider);var value=NOT_YET;var factory=undefined;if(isTypeProvider(provider)){return injectableDefRecord(provider);}else{token=resolveForwardRef(provider.provide);if(isValueProvider(provider)){value=provider.useValue;}else if(isExistingProvider(provider)){factory=function factory(){return inject(provider.useExisting);};}else if(isFactoryProvider(provider)){factory=function factory(){return provider.useFactory.apply(provider,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(injectArgs(provider.deps||[])));};}else{var classRef_1=provider.useClass||token;if(hasDeps(provider)){factory=function factory(){return new(classRef_1.bind.apply(classRef_1,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],injectArgs(provider.deps))))();};}else{return injectableDefRecord(classRef_1);}}}return makeRecord(factory,value);}function makeRecord(factory,value,multi){if(value===void 0){value=NOT_YET;}if(multi===void 0){multi=false;}return{factory:factory,value:value,multi:multi?[]:undefined};}function deepForEach(input,fn){input.forEach(function(value){return Array.isArray(value)?deepForEach(value,fn):fn(value);});}function isValueProvider(value){return USE_VALUE in value;}function isExistingProvider(value){return!!value.useExisting;}function isFactoryProvider(value){return!!value.useFactory;}function isTypeProvider(value){return typeof value==='function';}function hasDeps(value){return!!value.deps;}function hasOnDestroy(value){return _typeof(value)==='object'&&value!=null&&value.ngOnDestroy&&typeof value.ngOnDestroy==='function';}function couldBeInjectableType(value){return typeof value==='function'||_typeof(value)==='object'&&value instanceof InjectionToken;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var COMPONENT_FACTORY_RESOLVER={provide:ComponentFactoryResolver,useFactory:function useFactory(){return new ComponentFactoryResolver$1();},deps:[]};var NgModuleRef$1=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgModuleRef$$1,_super);function NgModuleRef$$1(ngModuleType,parentInjector){var _this=_super.call(this)||this;// tslint:disable-next-line:require-internal-with-underscore
_this._bootstrapComponents=[];_this.destroyCbs=[];var ngModuleDef=getNgModuleDef(ngModuleType);ngDevMode&&assertDefined(ngModuleDef,"NgModule '"+stringify(ngModuleType)+"' is not a subtype of 'NgModuleType'.");_this._bootstrapComponents=ngModuleDef.bootstrap;var additionalProviders=[COMPONENT_FACTORY_RESOLVER,{provide:NgModuleRef,useValue:_this}];_this.injector=createInjector(ngModuleType,parentInjector,additionalProviders);_this.instance=_this.injector.get(ngModuleType);_this.componentFactoryResolver=new ComponentFactoryResolver$1();return _this;}NgModuleRef$$1.prototype.destroy=function(){ngDevMode&&assertDefined(this.destroyCbs,'NgModule already destroyed');this.destroyCbs.forEach(function(fn){return fn();});this.destroyCbs=null;};NgModuleRef$$1.prototype.onDestroy=function(callback){ngDevMode&&assertDefined(this.destroyCbs,'NgModule already destroyed');this.destroyCbs.push(callback);};return NgModuleRef$$1;}(NgModuleRef);var NgModuleFactory$1=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgModuleFactory$$1,_super);function NgModuleFactory$$1(moduleType){var _this=_super.call(this)||this;_this.moduleType=moduleType;return _this;}NgModuleFactory$$1.prototype.create=function(parentInjector){return new NgModuleRef$1(this.moduleType,parentInjector);};return NgModuleFactory$$1;}(NgModuleFactory);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Bindings for pure functions are stored after regular bindings.
 *
 * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|
 * ------------------------------------------------------------------------------------------
 * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |
 * ------------------------------------------------------------------------------------------
 *                    ^                      ^
 *      TView.bindingStartIndex      TView.expandoStartIndex
 *
 * Pure function instructions are given an offset from the binding root. Adding the offset to the
 * binding root gives the first index where the bindings are stored. In component views, the binding
 * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +
 * any directive instances + any hostVars in directives evaluated before it.
 *
 * See VIEW_DATA.md for more information about host binding resolution.
 */ /**
 * If the value hasn't been saved, calls the pure function to store and return the
 * value. If it has been saved, returns the saved value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn Function that returns a value
 * @param thisArg Optional calling context of pureFn
 * @returns value
 */function pureFunction0(slotOffset,pureFn,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;return getCreationMode()?updateBinding(bindingIndex,thisArg?pureFn.call(thisArg):pureFn()):getBinding(bindingIndex);}/**
 * If the value of the provided exp has changed, calls the pure function to return
 * an updated value. Or if the value has not changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn Function that returns an updated value
 * @param exp Updated expression value
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction1(slotOffset,pureFn,exp,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;return bindingUpdated(bindingIndex,exp)?updateBinding(bindingIndex+1,thisArg?pureFn.call(thisArg,exp):pureFn(exp)):getBinding(bindingIndex+1);}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction2(slotOffset,pureFn,exp1,exp2,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;return bindingUpdated2(bindingIndex,exp1,exp2)?updateBinding(bindingIndex+2,thisArg?pureFn.call(thisArg,exp1,exp2):pureFn(exp1,exp2)):getBinding(bindingIndex+2);}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction3(slotOffset,pureFn,exp1,exp2,exp3,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;return bindingUpdated3(bindingIndex,exp1,exp2,exp3)?updateBinding(bindingIndex+3,thisArg?pureFn.call(thisArg,exp1,exp2,exp3):pureFn(exp1,exp2,exp3)):getBinding(bindingIndex+3);}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction4(slotOffset,pureFn,exp1,exp2,exp3,exp4,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;return bindingUpdated4(bindingIndex,exp1,exp2,exp3,exp4)?updateBinding(bindingIndex+4,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4):pureFn(exp1,exp2,exp3,exp4)):getBinding(bindingIndex+4);}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction5(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;var different=bindingUpdated4(bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated(bindingIndex+4,exp5)||different?updateBinding(bindingIndex+5,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5):pureFn(exp1,exp2,exp3,exp4,exp5)):getBinding(bindingIndex+5);}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction6(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;var different=bindingUpdated4(bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated2(bindingIndex+4,exp5,exp6)||different?updateBinding(bindingIndex+6,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6):pureFn(exp1,exp2,exp3,exp4,exp5,exp6)):getBinding(bindingIndex+6);}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param exp7
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction7(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;var different=bindingUpdated4(bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated3(bindingIndex+4,exp5,exp6,exp7)||different?updateBinding(bindingIndex+7,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7)):getBinding(bindingIndex+7);}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param exp7
 * @param exp8
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunction8(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;var different=bindingUpdated4(bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated4(bindingIndex+4,exp5,exp6,exp7,exp8)||different?updateBinding(bindingIndex+8,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8)):getBinding(bindingIndex+8);}/**
 * pureFunction instruction that can support any number of bindings.
 *
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param slotOffset the offset from binding root to the reserved slot
 * @param pureFn A pure function that takes binding values and builds an object or array
 * containing those values.
 * @param exps An array of binding values
 * @param thisArg Optional calling context of pureFn
 * @returns Updated or cached value
 */function pureFunctionV(slotOffset,pureFn,exps,thisArg){// TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings
var bindingIndex=getBindingRoot()+slotOffset;var different=false;for(var i=0;i<exps.length;i++){bindingUpdated(bindingIndex++,exps[i])&&(different=true);}return different?updateBinding(bindingIndex,pureFn.apply(thisArg,exps)):getBinding(bindingIndex);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Create a pipe.
 *
 * @param index Pipe index where the pipe will be stored.
 * @param pipeName The name of the pipe
 * @returns T the instance of the pipe.
 */function pipe(index,pipeName){var tView=getTView();var pipeDef;var adjustedIndex=index+HEADER_OFFSET;if(tView.firstTemplatePass){pipeDef=getPipeDef$1(pipeName,tView.pipeRegistry);tView.data[adjustedIndex]=pipeDef;if(pipeDef.onDestroy){(tView.pipeDestroyHooks||(tView.pipeDestroyHooks=[])).push(adjustedIndex,pipeDef.onDestroy);}}else{pipeDef=tView.data[adjustedIndex];}var pipeInstance=pipeDef.factory();store(index,pipeInstance);return pipeInstance;}/**
 * Searches the pipe registry for a pipe with the given name. If one is found,
 * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.
 *
 * @param name Name of pipe to resolve
 * @param registry Full list of available pipes
 * @returns Matching PipeDef
 */function getPipeDef$1(name,registry){if(registry){for(var i=0;i<registry.length;i++){var pipeDef=registry[i];if(name===pipeDef.name){return pipeDef;}}}throw new Error("Pipe with name '"+name+"' not found!");}/**
 * Invokes a pipe with 1 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 */function pipeBind1(index,slotOffset,v1){var pipeInstance=load(index);return isPure(index)?pureFunction1(slotOffset,pipeInstance.transform,v1,pipeInstance):pipeInstance.transform(v1);}/**
 * Invokes a pipe with 2 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 */function pipeBind2(index,slotOffset,v1,v2){var pipeInstance=load(index);return isPure(index)?pureFunction2(slotOffset,pipeInstance.transform,v1,v2,pipeInstance):pipeInstance.transform(v1,v2);}/**
 * Invokes a pipe with 3 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 * @param v3 4rd argument to {@link PipeTransform#transform}.
 */function pipeBind3(index,slotOffset,v1,v2,v3){var pipeInstance=load(index);return isPure(index)?pureFunction3(slotOffset,pipeInstance.transform,v1,v2,v3,pipeInstance):pipeInstance.transform(v1,v2,v3);}/**
 * Invokes a pipe with 4 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 * @param v3 3rd argument to {@link PipeTransform#transform}.
 * @param v4 4th argument to {@link PipeTransform#transform}.
 */function pipeBind4(index,slotOffset,v1,v2,v3,v4){var pipeInstance=load(index);return isPure(index)?pureFunction4(slotOffset,pipeInstance.transform,v1,v2,v3,v4,pipeInstance):pipeInstance.transform(v1,v2,v3,v4);}/**
 * Invokes a pipe with variable number of arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param slotOffset the offset in the reserved slot space
 * @param values Array of arguments to pass to {@link PipeTransform#transform} method.
 */function pipeBindV(index,slotOffset,values){var pipeInstance=load(index);return isPure(index)?pureFunctionV(slotOffset,pipeInstance.transform,values,pipeInstance):pipeInstance.transform.apply(pipeInstance,values);}function isPure(index){return getTView().data[index+HEADER_OFFSET].pure;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Use in directives and components to emit custom events synchronously
 * or asynchronously, and register handlers for those events by subscribing
 * to an instance.
 *
 * @usageNotes
 *
 * In the following example, a component defines two output properties
 * that create event emitters. When the title is clicked, the emitter
 * emits an open or close event to toggle the current visibility state.
 *
 * ```
 * @Component({
 *   selector: 'zippy',
 *   template: `
 *   <div class="zippy">
 *     <div (click)="toggle()">Toggle</div>
 *     <div [hidden]="!visible">
 *       <ng-content></ng-content>
 *     </div>
 *  </div>`})
 * export class Zippy {
 *   visible: boolean = true;
 *   @Output() open: EventEmitter<any> = new EventEmitter();
 *   @Output() close: EventEmitter<any> = new EventEmitter();
 *
 *   toggle() {
 *     this.visible = !this.visible;
 *     if (this.visible) {
 *       this.open.emit(null);
 *     } else {
 *       this.close.emit(null);
 *     }
 *   }
 * }
 * ```
 *
 * Access the event object with the `$event` argument passed to the output event
 * handler:
 *
 * ```
 * <zippy (open)="onOpen($event)" (close)="onClose($event)"></zippy>
 * ```
 *
 * ### Notes
 *
 * Uses Rx.Observable but provides an adapter to make it work as specified here:
 * https://github.com/jhusain/observable-spec
 *
 * Once a reference implementation of the spec is available, switch to it.
 *
 */var EventEmitter=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(EventEmitter,_super);/**
     * Creates an instance of this class that can
     * deliver events synchronously or asynchronously.
     *
     * @param isAsync When true, deliver events asynchronously.
     *
     */function EventEmitter(isAsync){if(isAsync===void 0){isAsync=false;}var _this=_super.call(this)||this;_this.__isAsync=isAsync;return _this;}/**
     * Emits an event containing a given value.
     * @param value The value to emit.
     */EventEmitter.prototype.emit=function(value){_super.prototype.next.call(this,value);};/**
     * Registers handlers for events emitted by this instance.
     * @param generatorOrNext When supplied, a custom handler for emitted events.
     * @param error When supplied, a custom handler for an error notification
     * from this emitter.
     * @param complete When supplied, a custom handler for a completion
     * notification from this emitter.
     */EventEmitter.prototype.subscribe=function(generatorOrNext,error,complete){var schedulerFn;var errorFn=function errorFn(err){return null;};var completeFn=function completeFn(){return null;};if(generatorOrNext&&_typeof(generatorOrNext)==='object'){schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext.next(value);});}:function(value){generatorOrNext.next(value);};if(generatorOrNext.error){errorFn=this.__isAsync?function(err){setTimeout(function(){return generatorOrNext.error(err);});}:function(err){generatorOrNext.error(err);};}if(generatorOrNext.complete){completeFn=this.__isAsync?function(){setTimeout(function(){return generatorOrNext.complete();});}:function(){generatorOrNext.complete();};}}else{schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext(value);});}:function(value){generatorOrNext(value);};if(error){errorFn=this.__isAsync?function(err){setTimeout(function(){return error(err);});}:function(err){error(err);};}if(complete){completeFn=this.__isAsync?function(){setTimeout(function(){return complete();});}:function(){complete();};}}var sink=_super.prototype.subscribe.call(this,schedulerFn,errorFn,completeFn);if(generatorOrNext instanceof rxjs__WEBPACK_IMPORTED_MODULE_1__["Subscription"]){generatorOrNext.add(sink);}return sink;};return EventEmitter;}(rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents an embedded template that can be used to instantiate embedded views.
 * To instantiate embedded views based on a template, use the `ViewContainerRef`
 * method `createEmbeddedView()`.
 *
 * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`
 * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view
 * is injected into the constructor of the directive,
 * using the `TemplateRef` token.
 *
 * You can also use a `Query` to find a `TemplateRef` associated with
 * a component or a directive.
 *
 * @see `ViewContainerRef`
 * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)
 *
 */var TemplateRef=/** @class */function(){function TemplateRef(){}/** @internal */TemplateRef.__NG_ELEMENT_ID__=function(){return R3_TEMPLATE_REF_FACTORY$1(TemplateRef,ElementRef);};return TemplateRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var LQueries_=/** @class */function(){function LQueries_(parent,shallow,deep){this.parent=parent;this.shallow=shallow;this.deep=deep;}LQueries_.prototype.track=function(queryList,predicate,descend,read){if(descend){this.deep=createQuery(this.deep,queryList,predicate,read!=null?read:null);}else{this.shallow=createQuery(this.shallow,queryList,predicate,read!=null?read:null);}};LQueries_.prototype.clone=function(){return new LQueries_(this,null,this.deep);};LQueries_.prototype.container=function(){var shallowResults=copyQueriesToContainer(this.shallow);var deepResults=copyQueriesToContainer(this.deep);return shallowResults||deepResults?new LQueries_(this,shallowResults,deepResults):null;};LQueries_.prototype.createView=function(){var shallowResults=copyQueriesToView(this.shallow);var deepResults=copyQueriesToView(this.deep);return shallowResults||deepResults?new LQueries_(this,shallowResults,deepResults):null;};LQueries_.prototype.insertView=function(index){insertView$1(index,this.shallow);insertView$1(index,this.deep);};LQueries_.prototype.addNode=function(tNode){add(this.deep,tNode);if(isContentQueryHost(tNode)){add(this.shallow,tNode);if(tNode.parent&&isContentQueryHost(tNode.parent)){// if node has a content query and parent also has a content query
// both queries need to check this node for shallow matches
add(this.parent.shallow,tNode);}return this.parent;}isRootNodeOfQuery(tNode)&&add(this.shallow,tNode);return this;};LQueries_.prototype.removeView=function(){removeView$1(this.shallow);removeView$1(this.deep);};return LQueries_;}();function isRootNodeOfQuery(tNode){return tNode.parent===null||isContentQueryHost(tNode.parent);}function copyQueriesToContainer(query){var result=null;while(query){var containerValues=[];// prepare room for views
query.values.push(containerValues);var clonedQuery={next:result,list:query.list,predicate:query.predicate,values:containerValues,containerValues:null};result=clonedQuery;query=query.next;}return result;}function copyQueriesToView(query){var result=null;while(query){var clonedQuery={next:result,list:query.list,predicate:query.predicate,values:[],containerValues:query.values};result=clonedQuery;query=query.next;}return result;}function insertView$1(index,query){while(query){ngDevMode&&assertDefined(query.containerValues,'View queries need to have a pointer to container values.');query.containerValues.splice(index,0,query.values);query=query.next;}}function removeView$1(query){while(query){ngDevMode&&assertDefined(query.containerValues,'View queries need to have a pointer to container values.');var containerValues=query.containerValues;var viewValuesIdx=containerValues.indexOf(query.values);var removed=containerValues.splice(viewValuesIdx,1);// mark a query as dirty only when removed view had matching modes
ngDevMode&&assertEqual(removed.length,1,'removed.length');if(removed[0].length){query.list.setDirty();}query=query.next;}}/**
 * Iterates over local names for a given node and returns directive index
 * (or -1 if a local name points to an element).
 *
 * @param tNode static data of a node to check
 * @param selector selector to match
 * @returns directive index, -1 or null if a selector didn't match any of the local names
 */function getIdxOfMatchingSelector(tNode,selector){var localNames=tNode.localNames;if(localNames){for(var i=0;i<localNames.length;i+=2){if(localNames[i]===selector){return localNames[i+1];}}}return null;}/**
 * Iterates over all the directives for a node and returns index of a directive for a given type.
 *
 * @param tNode TNode on which directives are present.
 * @param currentView The view we are currently processing
 * @param type Type of a directive to look for.
 * @returns Index of a found directive or null when none found.
 */function getIdxOfMatchingDirective(tNode,currentView,type){var defs=currentView[TVIEW].data;if(defs){var flags=tNode.flags;var count=flags&4095/* DirectiveCountMask */;var start=flags>>15/* DirectiveStartingIndexShift */;var end=start+count;for(var i=start;i<end;i++){var def=defs[i];if(def.type===type&&def.diPublic){return i;}}}return null;}// TODO: "read" should be an AbstractType (FW-486)
function queryRead(tNode,currentView,read){var factoryFn=read[NG_ELEMENT_ID];if(typeof factoryFn==='function'){return factoryFn();}else{var matchingIdx=getIdxOfMatchingDirective(tNode,currentView,read);if(matchingIdx!==null){return currentView[matchingIdx];}}return null;}function queryReadByTNodeType(tNode,currentView){if(tNode.type===3/* Element */||tNode.type===4/* ElementContainer */){return createElementRef(ElementRef,tNode,currentView);}if(tNode.type===0/* Container */){return createTemplateRef(TemplateRef,ElementRef,tNode,currentView);}return null;}function add(query,tNode){var currentView=_getViewData();while(query){var predicate=query.predicate;var type=predicate.type;if(type){// if read token and / or strategy is not specified, use type as read token
var result=queryRead(tNode,currentView,predicate.read||type);if(result!==null){addMatch(query,result);}}else{var selector=predicate.selector;for(var i=0;i<selector.length;i++){var directiveIdx=getIdxOfMatchingSelector(tNode,selector[i]);if(directiveIdx!==null){var result=null;if(predicate.read){result=queryRead(tNode,currentView,predicate.read);}else{if(directiveIdx>-1){result=currentView[directiveIdx];}else{// if read token and / or strategy is not specified,
// detect it using appropriate tNode type
result=queryReadByTNodeType(tNode,currentView);}}if(result!==null){addMatch(query,result);}}}}query=query.next;}}function addMatch(query,matchingValue){query.values.push(matchingValue);query.list.setDirty();}function createPredicate(predicate,read){var isArray=Array.isArray(predicate);return{type:isArray?null:predicate,selector:isArray?predicate:null,read:read};}function createQuery(previous,queryList,predicate,read){return{next:previous,list:queryList,predicate:createPredicate(predicate,read),values:queryList._valuesTree,containerValues:null};}var QueryList_=/** @class */function(){function QueryList_(){this.dirty=true;this.changes=new EventEmitter();this._values=[];/** @internal */this._valuesTree=[];}Object.defineProperty(QueryList_.prototype,"length",{get:function get(){return this._values.length;},enumerable:true,configurable:true});Object.defineProperty(QueryList_.prototype,"first",{get:function get(){var values=this._values;return values.length?values[0]:null;},enumerable:true,configurable:true});Object.defineProperty(QueryList_.prototype,"last",{get:function get(){var values=this._values;return values.length?values[values.length-1]:null;},enumerable:true,configurable:true});/**
     * See
     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
     */QueryList_.prototype.map=function(fn){return this._values.map(fn);};/**
     * See
     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
     */QueryList_.prototype.filter=function(fn){return this._values.filter(fn);};/**
     * See
     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
     */QueryList_.prototype.find=function(fn){return this._values.find(fn);};/**
     * See
     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
     */QueryList_.prototype.reduce=function(fn,init){return this._values.reduce(fn,init);};/**
     * See
     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
     */QueryList_.prototype.forEach=function(fn){this._values.forEach(fn);};/**
     * See
     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
     */QueryList_.prototype.some=function(fn){return this._values.some(fn);};QueryList_.prototype.toArray=function(){return this._values.slice(0);};QueryList_.prototype[getSymbolIterator()]=function(){return this._values[getSymbolIterator()]();};QueryList_.prototype.toString=function(){return this._values.toString();};QueryList_.prototype.reset=function(res){this._values=flatten(res);this.dirty=false;};QueryList_.prototype.notifyOnChanges=function(){this.changes.emit(this);};QueryList_.prototype.setDirty=function(){this.dirty=true;};QueryList_.prototype.destroy=function(){this.changes.complete();this.changes.unsubscribe();};return QueryList_;}();var QueryList=QueryList_;/**
 * Creates and returns a QueryList.
 *
 * @param memoryIndex The index in memory where the QueryList should be saved. If null,
 * this is is a content query and the QueryList will be saved later through directiveCreate.
 * @param predicate The type for which the query will search
 * @param descend Whether or not to descend into children
 * @param read What to save in the query
 * @returns QueryList<T>
 */function query(memoryIndex,predicate,descend,// TODO: "read" should be an AbstractType (FW-486)
read){ngDevMode&&assertPreviousIsParent();var queryList=new QueryList();var queries=getOrCreateCurrentQueries(LQueries_);queries.track(queryList,predicate,descend,read);storeCleanupWithContext(null,queryList,queryList.destroy);if(memoryIndex!=null){store(memoryIndex,queryList);}return queryList;}/**
 * Refreshes a query by combining matches from all active views and removing matches from deleted
 * views.
 * Returns true if a query got dirty during change detection, false otherwise.
 */function queryRefresh(queryList){var queryListImpl=queryList;if(queryList.dirty){queryList.reset(queryListImpl._valuesTree);queryList.notifyOnChanges();return true;}return false;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the
 * `<ng-template>` element.
 */function templateRefExtractor(tNode,currentView){return createTemplateRef(TemplateRef,ElementRef,tNode,currentView);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var BRAND='__SANITIZER_TRUSTED_BRAND__';function allowSanitizationBypass(value,type){return value instanceof String&&value[BRAND]===type?true:false;}/**
 * Mark `html` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link htmlSanitizer} to be trusted implicitly.
 *
 * @param trustedHtml `html` string which needs to be implicitly trusted.
 * @returns a `html` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustHtml(trustedHtml){return bypassSanitizationTrustString(trustedHtml,"Html"/* Html */);}/**
 * Mark `style` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link styleSanitizer} to be trusted implicitly.
 *
 * @param trustedStyle `style` string which needs to be implicitly trusted.
 * @returns a `style` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustStyle(trustedStyle){return bypassSanitizationTrustString(trustedStyle,"Style"/* Style */);}/**
 * Mark `script` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link scriptSanitizer} to be trusted implicitly.
 *
 * @param trustedScript `script` string which needs to be implicitly trusted.
 * @returns a `script` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustScript(trustedScript){return bypassSanitizationTrustString(trustedScript,"Script"/* Script */);}/**
 * Mark `url` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link urlSanitizer} to be trusted implicitly.
 *
 * @param trustedUrl `url` string which needs to be implicitly trusted.
 * @returns a `url` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustUrl(trustedUrl){return bypassSanitizationTrustString(trustedUrl,"Url"/* Url */);}/**
 * Mark `url` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.
 *
 * @param trustedResourceUrl `url` string which needs to be implicitly trusted.
 * @returns a `url` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustResourceUrl(trustedResourceUrl){return bypassSanitizationTrustString(trustedResourceUrl,"ResourceUrl"/* ResourceUrl */);}function bypassSanitizationTrustString(trustedString,mode){var trusted=new String(trustedString);trusted[BRAND]=mode;return trusted;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.
 *
 * For more information on how to run and debug tests with either Ivy or View Engine (legacy),
 * please see [BAZEL.md](./docs/BAZEL.md).
 */var _devMode=true;var _runModeLocked=false;/**
 * Returns whether Angular is in development mode. After called once,
 * the value is locked and won't change any more.
 *
 * By default, this is true, unless a user calls `enableProdMode` before calling this.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function isDevMode(){_runModeLocked=true;return _devMode;}/**
 * Disable Angular's development mode, which turns off assertions and other
 * checks within the framework.
 *
 * One important assertion this disables verifies that a change detection pass
 * does not result in additional changes to any bindings (also known as
 * unidirectional data flow).
 */function enableProdMode(){if(_runModeLocked){throw new Error('Cannot enable prod mode after platform setup.');}_devMode=false;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML
 * that needs sanitizing.
 * Depending upon browser support we must use one of three strategies for doing this.
 * Support: Safari 10.x -> XHR strategy
 * Support: Firefox -> DomParser strategy
 * Default: InertDocument strategy
 */var InertBodyHelper=/** @class */function(){function InertBodyHelper(defaultDoc){this.defaultDoc=defaultDoc;this.inertDocument=this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');this.inertBodyElement=this.inertDocument.body;if(this.inertBodyElement==null){// usually there should be only one body element in the document, but IE doesn't have any, so
// we need to create one.
var inertHtml=this.inertDocument.createElement('html');this.inertDocument.appendChild(inertHtml);this.inertBodyElement=this.inertDocument.createElement('body');inertHtml.appendChild(this.inertBodyElement);}this.inertBodyElement.innerHTML='<svg><g onload="this.parentNode.remove()"></g></svg>';if(this.inertBodyElement.querySelector&&!this.inertBodyElement.querySelector('svg')){// We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element
// so use the XHR strategy.
this.getInertBodyElement=this.getInertBodyElement_XHR;return;}this.inertBodyElement.innerHTML='<svg><p><style><img src="</style><img src=x onerror=alert(1)//">';if(this.inertBodyElement.querySelector&&this.inertBodyElement.querySelector('svg img')){// We just hit the Firefox bug - which prevents the inner img JS from being sanitized
// so use the DOMParser strategy, if it is available.
// If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we
// fall through to the default strategy below.
if(isDOMParserAvailable()){this.getInertBodyElement=this.getInertBodyElement_DOMParser;return;}}// None of the bugs were hit so it is safe for us to use the default InertDocument strategy
this.getInertBodyElement=this.getInertBodyElement_InertDocument;}/**
     * Use XHR to create and fill an inert body element (on Safari 10.1)
     * See
     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449
     */InertBodyHelper.prototype.getInertBodyElement_XHR=function(html){// We add these extra elements to ensure that the rest of the content is parsed as expected
// e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the
// `<head>` tag.
html='<body><remove></remove>'+html+'</body>';try{html=encodeURI(html);}catch(e){return null;}var xhr=new XMLHttpRequest();xhr.responseType='document';xhr.open('GET','data:text/html;charset=utf-8,'+html,false);xhr.send(undefined);var body=xhr.response.body;body.removeChild(body.firstChild);return body;};/**
     * Use DOMParser to create and fill an inert body element (on Firefox)
     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7
     *
     */InertBodyHelper.prototype.getInertBodyElement_DOMParser=function(html){// We add these extra elements to ensure that the rest of the content is parsed as expected
// e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the
// `<head>` tag.
html='<body><remove></remove>'+html+'</body>';try{var body=new window.DOMParser().parseFromString(html,'text/html').body;body.removeChild(body.firstChild);return body;}catch(e){return null;}};/**
     * Use an HTML5 `template` element, if supported, or an inert body element created via
     * `createHtmlDocument` to create and fill an inert DOM element.
     * This is the default sane strategy to use if the browser does not require one of the specialised
     * strategies above.
     */InertBodyHelper.prototype.getInertBodyElement_InertDocument=function(html){// Prefer using <template> element if supported.
var templateEl=this.inertDocument.createElement('template');if('content'in templateEl){templateEl.innerHTML=html;return templateEl;}this.inertBodyElement.innerHTML=html;// Support: IE 9-11 only
// strip custom-namespaced attributes on IE<=11
if(this.defaultDoc.documentMode){this.stripCustomNsAttrs(this.inertBodyElement);}return this.inertBodyElement;};/**
     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.
     * 'ns1:xlink:foo').
     *
     * This is undesirable since we don't want to allow any of these custom attributes. This method
     * strips them all.
     */InertBodyHelper.prototype.stripCustomNsAttrs=function(el){var elAttrs=el.attributes;// loop backwards so that we can support removals.
for(var i=elAttrs.length-1;0<i;i--){var attrib=elAttrs.item(i);var attrName=attrib.name;if(attrName==='xmlns:ns1'||attrName.indexOf('ns1:')===0){el.removeAttribute(attrName);}}var childNode=el.firstChild;while(childNode){if(childNode.nodeType===Node.ELEMENT_NODE)this.stripCustomNsAttrs(childNode);childNode=childNode.nextSibling;}};return InertBodyHelper;}();/**
 * We need to determine whether the DOMParser exists in the global context.
 * The try-catch is because, on some browsers, trying to access this property
 * on window can actually throw an error.
 *
 * @suppress {uselessCode}
 */function isDOMParserAvailable(){try{return!!window.DOMParser;}catch(e){return false;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * This regular expression matches a subset of URLs that will not cause script
 * execution if used in URL context within a HTML document. Specifically, this
 * regular expression matches if (comment from here on and regex copied from
 * Soy's EscapingConventions):
 * (1) Either a protocol in a whitelist (http, https, mailto or ftp).
 * (2) or no protocol.  A protocol must be followed by a colon. The below
 *     allows that by allowing colons only after one of the characters [/?#].
 *     A colon after a hash (#) must be in the fragment.
 *     Otherwise, a colon after a (?) must be in a query.
 *     Otherwise, a colon after a single solidus (/) must be in a path.
 *     Otherwise, a colon after a double solidus (//) must be in the authority
 *     (before port).
 *
 * The pattern disallows &, used in HTML entity declarations before
 * one of the characters in [/?#]. This disallows HTML entities used in the
 * protocol name, which should never happen, e.g. "h&#116;tp" for "http".
 * It also disallows HTML entities in the first path part of a relative path,
 * e.g. "foo&lt;bar/baz".  Our existing escaping functions should not produce
 * that. More importantly, it disallows masking of a colon,
 * e.g. "javascript&#58;...".
 *
 * This regular expression was taken from the Closure sanitization library.
 */var SAFE_URL_PATTERN=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;/** A pattern that matches safe data URLs. Only matches image, video and audio types. */var DATA_URL_PATTERN=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function _sanitizeUrl(url){url=String(url);if(url.match(SAFE_URL_PATTERN)||url.match(DATA_URL_PATTERN))return url;if(isDevMode()){console.warn("WARNING: sanitizing unsafe URL value "+url+" (see http://g.co/ng/security#xss)");}return'unsafe:'+url;}function sanitizeSrcset(srcset){srcset=String(srcset);return srcset.split(',').map(function(srcset){return _sanitizeUrl(srcset.trim());}).join(', ');}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function tagSet(tags){var e_1,_a;var res={};try{for(var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(tags.split(',')),_c=_b.next();!_c.done;_c=_b.next()){var t=_c.value;res[t]=true;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return res;}function merge$1(){var sets=[];for(var _i=0;_i<arguments.length;_i++){sets[_i]=arguments[_i];}var e_2,_a;var res={};try{for(var sets_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(sets),sets_1_1=sets_1.next();!sets_1_1.done;sets_1_1=sets_1.next()){var s=sets_1_1.value;for(var v in s){if(s.hasOwnProperty(v))res[v]=true;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(sets_1_1&&!sets_1_1.done&&(_a=sets_1.return))_a.call(sets_1);}finally{if(e_2)throw e_2.error;}}return res;}// Good source of info about elements and attributes
// http://dev.w3.org/html5/spec/Overview.html#semantics
// http://simon.html5.org/html-elements
// Safe Void Elements - HTML5
// http://dev.w3.org/html5/spec/Overview.html#void-elements
var VOID_ELEMENTS=tagSet('area,br,col,hr,img,wbr');// Elements that you can, intentionally, leave open (and which close themselves)
// http://dev.w3.org/html5/spec/Overview.html#optional-tags
var OPTIONAL_END_TAG_BLOCK_ELEMENTS=tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');var OPTIONAL_END_TAG_INLINE_ELEMENTS=tagSet('rp,rt');var OPTIONAL_END_TAG_ELEMENTS=merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS,OPTIONAL_END_TAG_BLOCK_ELEMENTS);// Safe Block Elements - HTML5
var BLOCK_ELEMENTS=merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS,tagSet('address,article,'+'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,'+'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));// Inline Elements - HTML5
var INLINE_ELEMENTS=merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS,tagSet('a,abbr,acronym,audio,b,'+'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,'+'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));var VALID_ELEMENTS=merge$1(VOID_ELEMENTS,BLOCK_ELEMENTS,INLINE_ELEMENTS,OPTIONAL_END_TAG_ELEMENTS);// Attributes that have href and hence need to be sanitized
var URI_ATTRS=tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');// Attributes that have special href set hence need to be sanitized
var SRCSET_ATTRS=tagSet('srcset');var HTML_ATTRS=tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,'+'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,'+'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,'+'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,'+'valign,value,vspace,width');// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security
// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via
// innerHTML is required, SVG attributes should be added here.
// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those
// can be sanitized, but they increase security surface area without a legitimate use case, so they
// are left out here.
var VALID_ATTRS=merge$1(URI_ATTRS,SRCSET_ATTRS,HTML_ATTRS);/**
 * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe
 * attributes.
 */var SanitizingHtmlSerializer=/** @class */function(){function SanitizingHtmlSerializer(){// Explicitly track if something was stripped, to avoid accidentally warning of sanitization just
// because characters were re-encoded.
this.sanitizedSomething=false;this.buf=[];}SanitizingHtmlSerializer.prototype.sanitizeChildren=function(el){// This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.
// However this code never accesses properties off of `document` before deleting its contents
// again, so it shouldn't be vulnerable to DOM clobbering.
var current=el.firstChild;while(current){if(current.nodeType===Node.ELEMENT_NODE){this.startElement(current);}else if(current.nodeType===Node.TEXT_NODE){this.chars(current.nodeValue);}else{// Strip non-element, non-text nodes.
this.sanitizedSomething=true;}if(current.firstChild){current=current.firstChild;continue;}while(current){// Leaving the element. Walk up and to the right, closing tags as we go.
if(current.nodeType===Node.ELEMENT_NODE){this.endElement(current);}var next=this.checkClobberedElement(current,current.nextSibling);if(next){current=next;break;}current=this.checkClobberedElement(current,current.parentNode);}}return this.buf.join('');};SanitizingHtmlSerializer.prototype.startElement=function(element){var tagName=element.nodeName.toLowerCase();if(!VALID_ELEMENTS.hasOwnProperty(tagName)){this.sanitizedSomething=true;return;}this.buf.push('<');this.buf.push(tagName);var elAttrs=element.attributes;for(var i=0;i<elAttrs.length;i++){var elAttr=elAttrs.item(i);var attrName=elAttr.name;var lower=attrName.toLowerCase();if(!VALID_ATTRS.hasOwnProperty(lower)){this.sanitizedSomething=true;continue;}var value=elAttr.value;// TODO(martinprobst): Special case image URIs for data:image/...
if(URI_ATTRS[lower])value=_sanitizeUrl(value);if(SRCSET_ATTRS[lower])value=sanitizeSrcset(value);this.buf.push(' ',attrName,'="',encodeEntities(value),'"');}this.buf.push('>');};SanitizingHtmlSerializer.prototype.endElement=function(current){var tagName=current.nodeName.toLowerCase();if(VALID_ELEMENTS.hasOwnProperty(tagName)&&!VOID_ELEMENTS.hasOwnProperty(tagName)){this.buf.push('</');this.buf.push(tagName);this.buf.push('>');}};SanitizingHtmlSerializer.prototype.chars=function(chars){this.buf.push(encodeEntities(chars));};SanitizingHtmlSerializer.prototype.checkClobberedElement=function(node,nextNode){if(nextNode&&(node.compareDocumentPosition(nextNode)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY){throw new Error("Failed to sanitize html because the element is clobbered: "+node.outerHTML);}return nextNode;};return SanitizingHtmlSerializer;}();// Regular Expressions for parsing tags and attributes
var SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;// ! to ~ is the ASCII range.
var NON_ALPHANUMERIC_REGEXP=/([^\#-~ |!])/g;/**
 * Escapes all potentially dangerous characters, so that the
 * resulting string can be safely inserted into attribute or
 * element text.
 * @param value
 */function encodeEntities(value){return value.replace(/&/g,'&amp;').replace(SURROGATE_PAIR_REGEXP,function(match){var hi=match.charCodeAt(0);var low=match.charCodeAt(1);return'&#'+((hi-0xD800)*0x400+(low-0xDC00)+0x10000)+';';}).replace(NON_ALPHANUMERIC_REGEXP,function(match){return'&#'+match.charCodeAt(0)+';';}).replace(/</g,'&lt;').replace(/>/g,'&gt;');}var inertBodyHelper;/**
 * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to
 * the DOM in a browser environment.
 */function _sanitizeHtml(defaultDoc,unsafeHtmlInput){var inertBodyElement=null;try{inertBodyHelper=inertBodyHelper||new InertBodyHelper(defaultDoc);// Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).
var unsafeHtml=unsafeHtmlInput?String(unsafeHtmlInput):'';inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);// mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser
// trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.
var mXSSAttempts=5;var parsedHtml=unsafeHtml;do{if(mXSSAttempts===0){throw new Error('Failed to sanitize html because the input is unstable');}mXSSAttempts--;unsafeHtml=parsedHtml;parsedHtml=inertBodyElement.innerHTML;inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);}while(unsafeHtml!==parsedHtml);var sanitizer=new SanitizingHtmlSerializer();var safeHtml=sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement)||inertBodyElement);if(isDevMode()&&sanitizer.sanitizedSomething){console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');}return safeHtml;}finally{// In case anything goes wrong, clear out inertElement to reset the entire DOM structure.
if(inertBodyElement){var parent_1=getTemplateContent(inertBodyElement)||inertBodyElement;while(parent_1.firstChild){parent_1.removeChild(parent_1.firstChild);}}}}function getTemplateContent(el){return'content'in el/** Microsoft/TypeScript#21517 */&&isTemplateElement(el)?el.content:null;}function isTemplateElement(el){return el.nodeType===Node.ELEMENT_NODE&&el.nodeName==='TEMPLATE';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property
 * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly
 * handled.
 *
 * See DomSanitizer for more details on security in Angular applications.
 *
 *
 */var SecurityContext;(function(SecurityContext){SecurityContext[SecurityContext["NONE"]=0]="NONE";SecurityContext[SecurityContext["HTML"]=1]="HTML";SecurityContext[SecurityContext["STYLE"]=2]="STYLE";SecurityContext[SecurityContext["SCRIPT"]=3]="SCRIPT";SecurityContext[SecurityContext["URL"]=4]="URL";SecurityContext[SecurityContext["RESOURCE_URL"]=5]="RESOURCE_URL";})(SecurityContext||(SecurityContext={}));/**
 * Sanitizer is used by the views to sanitize potentially dangerous values.
 *
 *
 */var Sanitizer=/** @class */function(){function Sanitizer(){}return Sanitizer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Regular expression for safe style values.
 *
 * Quotes (" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.
 *
 * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or
 * font-family) and hence could allow multiple values to get injected, but that should pose no risk
 * of XSS.
 *
 * The function expression checks only for XSS safety, not for CSS validity.
 *
 * This regular expression was taken from the Closure sanitization library, and augmented for
 * transformation values.
 */var VALUES='[-,."\'%_!# a-zA-Z0-9]+';var TRANSFORMATION_FNS='(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';var COLOR_FNS='(?:rgb|hsl)a?';var GRADIENTS='(?:repeating-)?(?:linear|radial)-gradient';var CSS3_FNS='(?:calc|attr)';var FN_ARGS='\\([-0-9.%, #a-zA-Z]+\\)';var SAFE_STYLE_VALUE=new RegExp("^("+VALUES+"|"+("(?:"+TRANSFORMATION_FNS+"|"+COLOR_FNS+"|"+GRADIENTS+"|"+CSS3_FNS+")")+(FN_ARGS+")$"),'g');/**
 * Matches a `url(...)` value with an arbitrary argument as long as it does
 * not contain parentheses.
 *
 * The URL value still needs to be sanitized separately.
 *
 * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted
 * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.
 * by observing whether scroll bars are displayed, or character ranges used by a font face
 * definition.
 *
 * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that
 * binding a URL value without further cooperation from the page will cause an information leak, and
 * if so, it is just a leak, not a full blown XSS vulnerability.
 *
 * Given the common use case, low likelihood of attack vector, and low impact of an attack, this
 * code is permissive and allows URLs that sanitize otherwise.
 */var URL_RE=/^url\(([^)]+)\)$/;/**
 * Checks that quotes (" and ') are properly balanced inside a string. Assumes
 * that neither escape (\) nor any other character that could result in
 * breaking out of a string parsing context are allowed;
 * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.
 *
 * This code was taken from the Closure sanitization library.
 */function hasBalancedQuotes(value){var outsideSingle=true;var outsideDouble=true;for(var i=0;i<value.length;i++){var c=value.charAt(i);if(c==='\''&&outsideDouble){outsideSingle=!outsideSingle;}else if(c==='"'&&outsideSingle){outsideDouble=!outsideDouble;}}return outsideSingle&&outsideDouble;}/**
 * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single
 * value) and returns a value that is safe to use in a browser environment.
 */function _sanitizeStyle(value){value=String(value).trim();// Make sure it's actually a string.
if(!value)return'';// Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for
// reasoning behind this.
var urlMatch=value.match(URL_RE);if(urlMatch&&_sanitizeUrl(urlMatch[1])===urlMatch[1]||value.match(SAFE_STYLE_VALUE)&&hasBalancedQuotes(value)){return value;// Safe style values.
}if(isDevMode()){console.warn("WARNING: sanitizing unsafe style value "+value+" (see http://g.co/ng/security#xss).");}return'unsafe';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing
 * dangerous content.
 *
 * This method parses the `html` and locates potentially dangerous content (such as urls and
 * javascript) and removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.
 *
 * @param unsafeHtml untrusted `html`, typically from the user.
 * @returns `html` string which is safe to display to user, because all of the dangerous javascript
 * and urls have been removed.
 */function sanitizeHtml(unsafeHtml){var s=getCurrentSanitizer();if(s){return s.sanitize(SecurityContext.HTML,unsafeHtml)||'';}if(allowSanitizationBypass(unsafeHtml,"Html"/* Html */)){return unsafeHtml.toString();}return _sanitizeHtml(document,stringify$1(unsafeHtml));}/**
 * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing
 * dangerous content.
 *
 * This method parses the `style` and locates potentially dangerous content (such as urls and
 * javascript) and removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.
 *
 * @param unsafeStyle untrusted `style`, typically from the user.
 * @returns `style` string which is safe to bind to the `style` properties, because all of the
 * dangerous javascript and urls have been removed.
 */function sanitizeStyle(unsafeStyle){var s=getCurrentSanitizer();if(s){return s.sanitize(SecurityContext.STYLE,unsafeStyle)||'';}if(allowSanitizationBypass(unsafeStyle,"Style"/* Style */)){return unsafeStyle.toString();}return _sanitizeStyle(stringify$1(unsafeStyle));}/**
 * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing
 * dangerous
 * content.
 *
 * This method parses the `url` and locates potentially dangerous content (such as javascript) and
 * removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.
 *
 * @param unsafeUrl untrusted `url`, typically from the user.
 * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
 * all of the dangerous javascript has been removed.
 */function sanitizeUrl(unsafeUrl){var s=getCurrentSanitizer();if(s){return s.sanitize(SecurityContext.URL,unsafeUrl)||'';}if(allowSanitizationBypass(unsafeUrl,"Url"/* Url */)){return unsafeUrl.toString();}return _sanitizeUrl(stringify$1(unsafeUrl));}/**
 * A `url` sanitizer which only lets trusted `url`s through.
 *
 * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.
 *
 * @param unsafeResourceUrl untrusted `url`, typically from the user.
 * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
 * only trusted `url`s have been allowed to pass.
 */function sanitizeResourceUrl(unsafeResourceUrl){var s=getCurrentSanitizer();if(s){return s.sanitize(SecurityContext.RESOURCE_URL,unsafeResourceUrl)||'';}if(allowSanitizationBypass(unsafeResourceUrl,"ResourceUrl"/* ResourceUrl */)){return unsafeResourceUrl.toString();}throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');}/**
 * A `script` sanitizer which only lets trusted javascript through.
 *
 * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.
 *
 * @param unsafeScript untrusted `script`, typically from the user.
 * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,
 * because only trusted `scripts`s have been allowed to pass.
 */function sanitizeScript(unsafeScript){var s=getCurrentSanitizer();if(s){return s.sanitize(SecurityContext.SCRIPT,unsafeScript)||'';}if(allowSanitizationBypass(unsafeScript,"Script"/* Script */)){return unsafeScript.toString();}throw new Error('unsafe value used in a script context');}/**
 * The default style sanitizer will handle sanitization for style properties by
 * sanitizing any CSS property that can include a `url` value (usually image-based properties)
 */var defaultStyleSanitizer=function defaultStyleSanitizer(prop,value){if(value===undefined){return prop==='background-image'||prop==='background'||prop==='border-image'||prop==='filter'||prop==='filter'||prop==='list-style'||prop==='list-style-image';}return sanitizeStyle(value);};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.
 *
 * This should be kept up to date with the public exports of @angular/core.
 */var angularCoreEnv={'ɵdefineBase':defineBase,'ɵdefineComponent':defineComponent,'ɵdefineDirective':defineDirective,'defineInjectable':defineInjectable,'defineInjector':defineInjector,'ɵdefineNgModule':defineNgModule,'ɵdefinePipe':definePipe,'ɵdirectiveInject':directiveInject,'ɵgetFactoryOf':getFactoryOf,'ɵgetInheritedFactory':getInheritedFactory,'inject':inject,'ɵinjectAttribute':injectAttribute,'ɵtemplateRefExtractor':templateRefExtractor,'ɵNgOnChangesFeature':NgOnChangesFeature,'ɵPublicFeature':PublicFeature,'ɵInheritDefinitionFeature':InheritDefinitionFeature,'ɵelementAttribute':elementAttribute,'ɵbind':bind,'ɵcontainer':container,'ɵnextContext':nextContext,'ɵcontainerRefreshStart':containerRefreshStart,'ɵcontainerRefreshEnd':containerRefreshEnd,'ɵloadQueryList':loadQueryList,'ɵnamespaceHTML':namespaceHTML,'ɵnamespaceMathML':namespaceMathML,'ɵnamespaceSVG':namespaceSVG,'ɵenableBindings':enableBindings,'ɵdisableBindings':disableBindings,'ɵelementStart':elementStart,'ɵelementEnd':elementEnd,'ɵelement':element,'ɵEC':elementContainerStart,'ɵeC':elementContainerEnd,'ɵpureFunction0':pureFunction0,'ɵpureFunction1':pureFunction1,'ɵpureFunction2':pureFunction2,'ɵpureFunction3':pureFunction3,'ɵpureFunction4':pureFunction4,'ɵpureFunction5':pureFunction5,'ɵpureFunction6':pureFunction6,'ɵpureFunction7':pureFunction7,'ɵpureFunction8':pureFunction8,'ɵpureFunctionV':pureFunctionV,'ɵgetCurrentView':getCurrentView,'ɵrestoreView':restoreView,'ɵinterpolation1':interpolation1,'ɵinterpolation2':interpolation2,'ɵinterpolation3':interpolation3,'ɵinterpolation4':interpolation4,'ɵinterpolation5':interpolation5,'ɵinterpolation6':interpolation6,'ɵinterpolation7':interpolation7,'ɵinterpolation8':interpolation8,'ɵinterpolationV':interpolationV,'ɵelementClassProp':elementClassProp,'ɵlistener':listener,'ɵload':load,'ɵprojection':projection,'ɵelementProperty':elementProperty,'ɵpipeBind1':pipeBind1,'ɵpipeBind2':pipeBind2,'ɵpipeBind3':pipeBind3,'ɵpipeBind4':pipeBind4,'ɵpipeBindV':pipeBindV,'ɵprojectionDef':projectionDef,'ɵpipe':pipe,'ɵquery':query,'ɵqueryRefresh':queryRefresh,'ɵregisterContentQuery':registerContentQuery,'ɵreference':reference,'ɵelementStyling':elementStyling,'ɵelementStylingMap':elementStylingMap,'ɵelementStyleProp':elementStyleProp,'ɵelementStylingApply':elementStylingApply,'ɵtemplate':template,'ɵtext':text,'ɵtextBinding':textBinding,'ɵembeddedViewStart':embeddedViewStart,'ɵembeddedViewEnd':embeddedViewEnd,'ɵi18nAttribute':i18nAttribute,'ɵi18nExp':i18nExp,'ɵi18nStart':i18nStart,'ɵi18nEnd':i18nEnd,'ɵi18nApply':i18nApply,'ɵsanitizeHtml':sanitizeHtml,'ɵsanitizeStyle':sanitizeStyle,'ɵdefaultStyleSanitizer':defaultStyleSanitizer,'ɵsanitizeResourceUrl':sanitizeResourceUrl,'ɵsanitizeScript':sanitizeScript,'ɵsanitizeUrl':sanitizeUrl};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _reflect=null;function getReflect(){return _reflect=_reflect||new ReflectionCapabilities();}function reflectDependencies(type){return convertDependencies(getReflect().parameters(type));}function convertDependencies(deps){return deps.map(function(dep){return reflectDependency(dep);});}function reflectDependency(dep){var meta={token:new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["LiteralExpr"](null),host:false,optional:false,resolved:_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["R3ResolvedDependencyType"].Token,self:false,skipSelf:false};function setTokenAndResolvedType(token){if(token===Injector){meta.resolved=_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["R3ResolvedDependencyType"].Injector;}else{meta.resolved=_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["R3ResolvedDependencyType"].Token;}meta.token=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](token);}if(Array.isArray(dep)){if(dep.length===0){throw new Error('Dependency array must have arguments.');}for(var j=0;j<dep.length;j++){var param=dep[j];if(param instanceof Optional||param.__proto__.ngMetadataName==='Optional'){meta.optional=true;}else if(param instanceof SkipSelf||param.__proto__.ngMetadataName==='SkipSelf'){meta.skipSelf=true;}else if(param instanceof Self||param.__proto__.ngMetadataName==='Self'){meta.self=true;}else if(param instanceof Host||param.__proto__.ngMetadataName==='Host'){meta.host=true;}else if(param instanceof Inject){meta.token=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](param.token);}else if(param instanceof Attribute){if(param.attributeName===undefined){throw new Error("Attribute name must be defined.");}meta.token=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["LiteralExpr"](param.attributeName);meta.resolved=_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["R3ResolvedDependencyType"].Attribute;}else{setTokenAndResolvedType(param);}}}else{setTokenAndResolvedType(dep);}return meta;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EMPTY_ARRAY$2=[];/**
 * Compiles a module in JIT mode.
 *
 * This function automatically gets called when a class has a `@NgModule` decorator.
 */function compileNgModule$1(moduleType,ngModule){compileNgModuleDefs(moduleType,ngModule);setScopeOnDeclaredComponents(moduleType,ngModule);}/**
 * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.
 */function compileNgModuleDefs(moduleType,ngModule){var declarations=flatten$1(ngModule.declarations||EMPTY_ARRAY$2);var ngModuleDef=null;Object.defineProperty(moduleType,NG_MODULE_DEF,{get:function get(){if(ngModuleDef===null){var meta={type:wrap(moduleType),bootstrap:flatten$1(ngModule.bootstrap||EMPTY_ARRAY$2).map(wrapReference),declarations:declarations.map(wrapReference),imports:flatten$1(ngModule.imports||EMPTY_ARRAY$2).map(expandModuleWithProviders).map(wrapReference),exports:flatten$1(ngModule.exports||EMPTY_ARRAY$2).map(expandModuleWithProviders).map(wrapReference),emitInline:true};var res=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["compileNgModule"])(meta);ngModuleDef=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["jitExpression"])(res.expression,angularCoreEnv,"ng://"+moduleType.name+"/ngModuleDef.js",[]);}return ngModuleDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});var ngInjectorDef=null;Object.defineProperty(moduleType,NG_INJECTOR_DEF,{get:function get(){if(ngInjectorDef===null){var meta={name:moduleType.name,type:wrap(moduleType),deps:reflectDependencies(moduleType),providers:new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](ngModule.providers||EMPTY_ARRAY$2),imports:new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"]([ngModule.imports||EMPTY_ARRAY$2,ngModule.exports||EMPTY_ARRAY$2])};var res=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["compileInjector"])(meta);ngInjectorDef=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["jitExpression"])(res.expression,angularCoreEnv,"ng://"+moduleType.name+"/ngInjectorDef.js",res.statements);}return ngInjectorDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}/**
 * Some declared components may be compiled asynchronously, and thus may not have their
 * ngComponentDef set yet. If this is the case, then a reference to the module is written into
 * the `ngSelectorScope` property of the declared type.
 */function setScopeOnDeclaredComponents(moduleType,ngModule){var declarations=flatten$1(ngModule.declarations||EMPTY_ARRAY$2);var transitiveScopes=transitiveScopesFor(moduleType);declarations.forEach(function(declaration){if(declaration.hasOwnProperty(NG_COMPONENT_DEF)){// An `ngComponentDef` field exists - go ahead and patch the component directly.
var component=declaration;var componentDef=getComponentDef(component);patchComponentDefWithScope(componentDef,transitiveScopes);}else if(!declaration.hasOwnProperty(NG_DIRECTIVE_DEF)&&!declaration.hasOwnProperty(NG_PIPE_DEF)){// Set `ngSelectorScope` for future reference when the component compilation finishes.
declaration.ngSelectorScope=moduleType;}});}/**
 * Patch the definition of a component with directives and pipes from the compilation scope of
 * a given module.
 */function patchComponentDefWithScope(componentDef,transitiveScopes){componentDef.directiveDefs=function(){return Array.from(transitiveScopes.compilation.directives).map(function(dir){return getDirectiveDef(dir)||getComponentDef(dir);}).filter(function(def){return!!def;});};componentDef.pipeDefs=function(){return Array.from(transitiveScopes.compilation.pipes).map(function(pipe){return getPipeDef(pipe);});};}/**
 * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.
 *
 * This operation is memoized and the result is cached on the module's definition. It can be called
 * on modules with components that have not fully compiled yet, but the result should not be used
 * until they have.
 */function transitiveScopesFor(moduleType){if(!isNgModule(moduleType)){throw new Error(moduleType.name+" does not have an ngModuleDef");}var def=getNgModuleDef(moduleType);if(def.transitiveCompileScopes!==null){return def.transitiveCompileScopes;}var scopes={compilation:{directives:new Set(),pipes:new Set()},exported:{directives:new Set(),pipes:new Set()}};def.declarations.forEach(function(declared){var declaredWithDefs=declared;if(getPipeDef(declaredWithDefs)){scopes.compilation.pipes.add(declared);}else{// Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't
// had its template compiled yet. In either case, it gets added to the compilation's
// directives.
scopes.compilation.directives.add(declared);}});def.imports.forEach(function(imported){var importedTyped=imported;if(!isNgModule(importedTyped)){throw new Error("Importing "+importedTyped.name+" which does not have an ngModuleDef");}// When this module imports another, the imported module's exported directives and pipes are
// added to the compilation scope of this module.
var importedScope=transitiveScopesFor(importedTyped);importedScope.exported.directives.forEach(function(entry){return scopes.compilation.directives.add(entry);});importedScope.exported.pipes.forEach(function(entry){return scopes.compilation.pipes.add(entry);});});def.exports.forEach(function(exported){var exportedTyped=exported;// Either the type is a module, a pipe, or a component/directive (which may not have an
// ngComponentDef as it might be compiled asynchronously).
if(isNgModule(exportedTyped)){// When this module exports another, the exported module's exported directives and pipes are
// added to both the compilation and exported scopes of this module.
var exportedScope=transitiveScopesFor(exportedTyped);exportedScope.exported.directives.forEach(function(entry){scopes.compilation.directives.add(entry);scopes.exported.directives.add(entry);});exportedScope.exported.pipes.forEach(function(entry){scopes.compilation.pipes.add(entry);scopes.exported.pipes.add(entry);});}else if(getNgModuleDef(exportedTyped)){scopes.exported.pipes.add(exportedTyped);}else{scopes.exported.directives.add(exportedTyped);}});def.transitiveCompileScopes=scopes;return scopes;}function flatten$1(values){var out=[];values.forEach(function(value){if(Array.isArray(value)){out.push.apply(out,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(flatten$1(value)));}else{out.push(value);}});return out;}function expandModuleWithProviders(value){if(isModuleWithProviders(value)){return value.ngModule;}return value;}function wrap(value){return new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](value);}function wrapReference(value){var wrapped=wrap(value);return{value:wrapped,type:wrapped};}function isModuleWithProviders(value){return value.ngModule!==undefined;}function isNgModule(value){return!!getNgModuleDef(value);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Compile an Angular component according to its decorator metadata, and patch the resulting
 * ngComponentDef onto the component type.
 *
 * Compilation may be asynchronous (due to the need to resolve URLs for the component template or
 * other resources, for example). In the event that compilation is not immediate, `compileComponent`
 * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`
 * until the global queue has been resolved with a call to `resolveComponentResources`.
 */function compileComponent(type,metadata){var ngComponentDef=null;// Metadata may have resources which need to be resolved.
maybeQueueResolutionOfComponentResources(metadata);Object.defineProperty(type,NG_COMPONENT_DEF,{get:function get(){if(ngComponentDef===null){if(componentNeedsResolution(metadata)){var error=["Component '"+stringify(type)+"' is not resolved:"];if(metadata.templateUrl){error.push(" - templateUrl: "+stringify(metadata.templateUrl));}if(metadata.styleUrls&&metadata.styleUrls.length){error.push(" - styleUrls: "+JSON.stringify(metadata.styleUrls));}error.push("Did you run and wait for 'resolveComponentResources()'?");throw new Error(error.join('\n'));}// The ConstantPool is a requirement of the JIT'er.
var constantPool=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["ConstantPool"]();// Parse the template and check for errors.
var template=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["parseTemplate"])(metadata.template,"ng://"+stringify(type)+"/template.html",{preserveWhitespaces:metadata.preserveWhitespaces||false},'');if(template.errors!==undefined){var errors=template.errors.map(function(err){return err.toString();}).join(', ');throw new Error("Errors during JIT compilation of template for "+stringify(type)+": "+errors);}var animations=metadata.animations!==null?new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](metadata.animations):null;// Compile the component metadata, including template, into an expression.
// TODO(alxhub): implement inputs, outputs, queries, etc.
var res=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["compileComponentFromMetadata"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},directiveMetadata(type,metadata),{template:template,directives:new Map(),pipes:new Map(),viewQueries:[],wrapDirectivesInClosure:false,styles:metadata.styles||[],encapsulation:metadata.encapsulation||ViewEncapsulation.Emulated,animations:animations}),constantPool,Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["makeBindingParser"])());var preStatements=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(constantPool.statements,res.statements);ngComponentDef=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["jitExpression"])(res.expression,angularCoreEnv,"ng://"+type.name+"/ngComponentDef.js",preStatements);// If component compilation is async, then the @NgModule annotation which declares the
// component may execute and set an ngSelectorScope property on the component type. This
// allows the component to patch itself with directiveDefs from the module after it
// finishes compiling.
if(hasSelectorScope(type)){var scopes=transitiveScopesFor(type.ngSelectorScope);patchComponentDefWithScope(ngComponentDef,scopes);}}return ngComponentDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}function hasSelectorScope(component){return component.ngSelectorScope!==undefined;}/**
 * Compile an Angular directive according to its decorator metadata, and patch the resulting
 * ngDirectiveDef onto the component type.
 *
 * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which
 * will resolve when compilation completes and the directive becomes usable.
 */function compileDirective(type,directive){var ngDirectiveDef=null;Object.defineProperty(type,NG_DIRECTIVE_DEF,{get:function get(){if(ngDirectiveDef===null){var constantPool=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["ConstantPool"]();var sourceMapUrl="ng://"+(type&&type.name)+"/ngDirectiveDef.js";var res=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["compileDirectiveFromMetadata"])(directiveMetadata(type,directive),constantPool,Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["makeBindingParser"])());var preStatements=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(constantPool.statements,res.statements);ngDirectiveDef=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["jitExpression"])(res.expression,angularCoreEnv,sourceMapUrl,preStatements);}return ngDirectiveDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}function extendsDirectlyFromObject(type){return Object.getPrototypeOf(type.prototype)===Object.prototype;}/**
 * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a
 * `Component`).
 */function directiveMetadata(type,metadata){// Reflect inputs and outputs.
var propMetadata=getReflect().propMetadata(type);var host=extractHostBindings(metadata,propMetadata);var inputsFromMetadata=parseInputOutputs(metadata.inputs||[]);var outputsFromMetadata=parseInputOutputs(metadata.outputs||[]);var inputsFromType={};var outputsFromType={};var _loop_1=function _loop_1(field){if(propMetadata.hasOwnProperty(field)){propMetadata[field].forEach(function(ann){if(isInput(ann)){inputsFromType[field]=ann.bindingPropertyName||field;}else if(isOutput(ann)){outputsFromType[field]=ann.bindingPropertyName||field;}});}};for(var field in propMetadata){_loop_1(field);}return{name:type.name,type:new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](type),typeArgumentCount:0,selector:metadata.selector,deps:reflectDependencies(type),host:host,inputs:Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},inputsFromMetadata,inputsFromType),outputs:Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},outputsFromMetadata,outputsFromType),queries:[],lifecycle:{usesOnChanges:type.prototype.ngOnChanges!==undefined},typeSourceSpan:null,usesInheritance:!extendsDirectlyFromObject(type),exportAs:metadata.exportAs||null};}function extractHostBindings(metadata,propMetadata){// First parse the declarations from the metadata.
var _a=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["parseHostBindings"])(metadata.host||{}),attributes=_a.attributes,listeners=_a.listeners,properties=_a.properties,animations=_a.animations;if(Object.keys(animations).length>0){throw new Error("Animation bindings are as-of-yet unsupported in Ivy");}var _loop_2=function _loop_2(field){if(propMetadata.hasOwnProperty(field)){propMetadata[field].forEach(function(ann){if(isHostBinding(ann)){properties[ann.hostPropertyName||field]=field;}else if(isHostListener(ann)){listeners[ann.eventName||field]=field+"("+(ann.args||[]).join(',')+")";}});}};// Next, loop over the properties of the object, looking for @HostBinding and @HostListener.
for(var field in propMetadata){_loop_2(field);}return{attributes:attributes,listeners:listeners,properties:properties};}function isInput(value){return value.ngMetadataName==='Input';}function isOutput(value){return value.ngMetadataName==='Output';}function isHostBinding(value){return value.ngMetadataName==='HostBinding';}function isHostListener(value){return value.ngMetadataName==='HostListener';}function parseInputOutputs(values){return values.reduce(function(map,value){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(value.split(',').map(function(piece){return piece.trim();}),2),field=_a[0],property=_a[1];map[field]=property||field;return map;},{});}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting
 * `ngInjectableDef` onto the injectable type.
 */function compileInjectable$1(type,srcMeta){// Allow the compilation of a class with a `@Injectable()` decorator without parameters
var meta=srcMeta||{providedIn:null};var def=null;Object.defineProperty(type,NG_INJECTABLE_DEF,{get:function get(){if(def===null){// Check whether the injectable metadata includes a provider specification.
var hasAProvider=isUseClassProvider(meta)||isUseFactoryProvider(meta)||isUseValueProvider(meta)||isUseExistingProvider(meta);var ctorDeps=reflectDependencies(type);var userDeps=undefined;if((isUseClassProvider(meta)||isUseFactoryProvider(meta))&&meta.deps!==undefined){userDeps=convertDependencies(meta.deps);}// Decide which flavor of factory to generate, based on the provider specified.
// Only one of the use* fields should be set.
var useClass=undefined;var useFactory=undefined;var useValue=undefined;var useExisting=undefined;if(!hasAProvider){// In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.
// The deps will have been reflected above, causing the factory to create the class by
// calling
// its constructor with injected deps.
useClass=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](type);}else if(isUseClassProvider(meta)){// The user explicitly specified useClass, and may or may not have provided deps.
useClass=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](meta.useClass);}else if(isUseValueProvider(meta)){// The user explicitly specified useValue.
useValue=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](meta.useValue);}else if(isUseFactoryProvider(meta)){// The user explicitly specified useFactory.
useFactory=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](meta.useFactory);}else if(isUseExistingProvider(meta)){// The user explicitly specified useExisting.
useExisting=new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](meta.useExisting);}else{// Can't happen - either hasAProvider will be false, or one of the providers will be set.
throw new Error("Unreachable state.");}var _a=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["compileInjectable"])({name:type.name,type:new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](type),providedIn:computeProvidedIn(meta.providedIn),useClass:useClass,useFactory:useFactory,useValue:useValue,useExisting:useExisting,ctorDeps:ctorDeps,userDeps:userDeps}),expression=_a.expression,statements=_a.statements;def=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["jitExpression"])(expression,angularCoreEnv,"ng://"+type.name+"/ngInjectableDef.js",statements);}return def;}});}function computeProvidedIn(providedIn){if(providedIn==null||typeof providedIn==='string'){return new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["LiteralExpr"](providedIn);}else{return new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](providedIn);}}function isUseClassProvider(meta){return meta.useClass!==undefined;}var ɵ0$1=getClosureSafeProperty;var USE_VALUE$1=getClosureSafeProperty({provide:String,useValue:ɵ0$1});function isUseValueProvider(meta){return USE_VALUE$1 in meta;}function isUseFactoryProvider(meta){return meta.useFactory!==undefined;}function isUseExistingProvider(meta){return meta.useExisting!==undefined;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function compilePipe(type,meta){var ngPipeDef=null;Object.defineProperty(type,NG_PIPE_DEF,{get:function get(){if(ngPipeDef===null){var sourceMapUrl="ng://"+stringify$1(type)+"/ngPipeDef.js";var name_1=type.name;var res=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["compilePipeFromMetadata"])({name:name_1,type:new _angular_compiler__WEBPACK_IMPORTED_MODULE_2__["WrappedNodeExpr"](type),deps:reflectDependencies(type),pipeName:meta.name,pure:meta.pure!==undefined?meta.pure:true});ngPipeDef=Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_2__["jitExpression"])(res.expression,angularCoreEnv,sourceMapUrl,res.statements);}return ngPipeDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ivyEnabled=true;var R3_COMPILE_COMPONENT=compileComponent;var R3_COMPILE_DIRECTIVE=compileDirective;var R3_COMPILE_INJECTABLE=compileInjectable$1;var R3_COMPILE_NGMODULE=compileNgModule$1;var R3_COMPILE_PIPE=compilePipe;var R3_COMPILE_NGMODULE_DEFS=compileNgModuleDefs;var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE=patchComponentDefWithScope;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function noop(){}var R3_COMPILE_COMPONENT__POST_NGCC__=R3_COMPILE_COMPONENT;var R3_COMPILE_DIRECTIVE__POST_NGCC__=R3_COMPILE_DIRECTIVE;var R3_COMPILE_INJECTABLE__POST_NGCC__=R3_COMPILE_INJECTABLE;var R3_COMPILE_NGMODULE__POST_NGCC__=R3_COMPILE_NGMODULE;var R3_COMPILE_PIPE__POST_NGCC__=R3_COMPILE_PIPE;var ivyEnable__POST_NGCC__=ivyEnabled;var R3_COMPILE_COMPONENT__PRE_NGCC__=noop;var R3_COMPILE_DIRECTIVE__PRE_NGCC__=noop;var R3_COMPILE_INJECTABLE__PRE_NGCC__=preR3InjectableCompile;var R3_COMPILE_NGMODULE__PRE_NGCC__=preR3NgModuleCompile;var R3_COMPILE_PIPE__PRE_NGCC__=noop;var ivyEnable__PRE_NGCC__=false;var ivyEnabled$1=ivyEnable__PRE_NGCC__;var R3_COMPILE_COMPONENT$1=R3_COMPILE_COMPONENT__PRE_NGCC__;var R3_COMPILE_DIRECTIVE$1=R3_COMPILE_DIRECTIVE__PRE_NGCC__;var R3_COMPILE_INJECTABLE$1=R3_COMPILE_INJECTABLE__PRE_NGCC__;var R3_COMPILE_NGMODULE$1=R3_COMPILE_NGMODULE__PRE_NGCC__;var R3_COMPILE_PIPE$1=R3_COMPILE_PIPE__PRE_NGCC__;////////////////////////////////////////////////////////////
// Glue code which should be removed after Ivy is default //
////////////////////////////////////////////////////////////
function preR3NgModuleCompile(moduleType,metadata){var imports=metadata&&metadata.imports||[];if(metadata&&metadata.exports){imports=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(imports,[metadata.exports]);}moduleType.ngInjectorDef=defineInjector({factory:convertInjectableProviderToFactory(moduleType,{useClass:moduleType}),providers:metadata&&metadata.providers,imports:imports});}var ɵ0$2=getClosureSafeProperty;var USE_VALUE$2=getClosureSafeProperty({provide:String,useValue:ɵ0$2});var EMPTY_ARRAY$3=[];function convertInjectableProviderToFactory(type,provider){if(!provider){var reflectionCapabilities=new ReflectionCapabilities();var deps_1=reflectionCapabilities.parameters(type);// TODO - convert to flags.
return function(){return new(type.bind.apply(type,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],injectArgs(deps_1))))();};}if(USE_VALUE$2 in provider){var valueProvider_1=provider;return function(){return valueProvider_1.useValue;};}else if(provider.useExisting){var existingProvider_1=provider;return function(){return inject(existingProvider_1.useExisting);};}else if(provider.useFactory){var factoryProvider_1=provider;return function(){return factoryProvider_1.useFactory.apply(factoryProvider_1,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(injectArgs(factoryProvider_1.deps||EMPTY_ARRAY$3)));};}else if(provider.useClass){var classProvider_1=provider;var deps_2=provider.deps;if(!deps_2){var reflectionCapabilities=new ReflectionCapabilities();deps_2=reflectionCapabilities.parameters(type);}return function(){var _a;return new((_a=classProvider_1.useClass).bind.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],injectArgs(deps_2))))();};}else{var deps_3=provider.deps;if(!deps_3){var reflectionCapabilities=new ReflectionCapabilities();deps_3=reflectionCapabilities.parameters(type);}return function(){return new(type.bind.apply(type,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],injectArgs(deps_3))))();};}}/**
 * Supports @Injectable() in JIT mode for Render2.
 */function preR3InjectableCompile(injectableType,options){if(options&&options.providedIn!==undefined&&!getInjectableDef(injectableType)){injectableType.ngInjectableDef=defineInjectable({providedIn:options.providedIn,factory:convertInjectableProviderToFactory(injectableType,options)});}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Type of the Directive metadata.
 */var Directive=makeDecorator('Directive',function(dir){if(dir===void 0){dir={};}return dir;},undefined,undefined,function(type,meta){return R3_COMPILE_DIRECTIVE$1(type,meta);});/**
 * Component decorator and metadata.
 *
 * @usageNotes
 *
 * ### Using animations
 *
 * The following snippet shows an animation trigger in a component's
 * metadata. The trigger is attached to an element in the component's
 * template, using "@_trigger_name_", and a state expression that is evaluated
 * at run time to determine whether the animation should start.
 *
 * ```typescript
 * @Component({
 *   selector: 'animation-cmp',
 *   templateUrl: 'animation-cmp.html',
 *   animations: [
 *     trigger('myTriggerName', [
 *       state('on', style({ opacity: 1 }),
 *       state('off', style({ opacity: 0 }),
 *       transition('on => off', [
 *         animate("1s")
 *       ])
 *     ])
 *   ]
 * })
 * ```
 *
 * ```html
 * <!-- animation-cmp.html -->
 * <div @myTriggerName="expression">...</div>
 * ```
 *
 * ### Preserving whitespace
 *
 * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.
 * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).
 * To change the default setting for all components in your application, set
 * the `preserveWhitespaces` option of the AOT compiler.
 *
 * Current implementation removes whitespace characters as follows:
 * - Trims all whitespaces at the beginning and the end of a template.
 * - Removes whitespace-only text nodes. For example,
 * `<button>Action 1</button>  <button>Action 2</button>` becomes
 * `<button>Action 1</button><button>Action 2</button>`.
 * - Replaces a series of whitespace characters in text nodes with a single space.
 * For example, `<span>\n some text\n</span>` becomes `<span> some text </span>`.
 * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,
 * where whitespace characters are significant.
 *
 * Note that these transformations can influence DOM nodes layout, although impact
 * should be minimal.
 *
 * You can override the default behavior to preserve whitespace characters
 * in certain fragments of a template. For example, you can exclude an entire
 * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:
 *
 * ```html
 * <div ngPreserveWhitespaces>
 *     whitespaces are preserved here
 *     <span>    and here </span>
 * </div>
 * ```
 *
 * You can force a single space to be preserved in a text node by using `&ngsp;`,
 * which is replaced with a space character by Angular's template
 * compiler:
 *
 * ```html
 * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>
 * <!-->compiled to be equivalent to:</>
 *  <a>Spaces</a> <a>between</a> <a>links.</a>
 * ```
 *
 * Note that sequences of `&ngsp;` are still collapsed to just one space character when
 * the `preserveWhitespaces` option is set to `false`.
 *
 * ```html
 * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>
 * <!-->compiled to be equivalent to:</>
 *  <a>Spaces</a> <a>between</a> <a>links.</a>
 * ```
 *
 * To preserve sequences of whitespace characters, use the
 * `ngPreserveWhitespaces` attribute.
 *
 * @Annotation
 */var Component=makeDecorator('Component',function(c){if(c===void 0){c={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({changeDetection:ChangeDetectionStrategy.Default},c);},Directive,undefined,function(type,meta){return R3_COMPILE_COMPONENT$1(type,meta);});/**
 *
 *
 * @Annotation
 */var Pipe=makeDecorator('Pipe',function(p){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({pure:true},p);},undefined,undefined,function(type,meta){return R3_COMPILE_PIPE$1(type,meta);});var initializeBaseDef=function initializeBaseDef(target){var constructor=target.constructor;var inheritedBaseDef=constructor.ngBaseDef;var baseDef=constructor.ngBaseDef={inputs:{},outputs:{},declaredInputs:{}};if(inheritedBaseDef){fillProperties(baseDef.inputs,inheritedBaseDef.inputs);fillProperties(baseDef.outputs,inheritedBaseDef.outputs);fillProperties(baseDef.declaredInputs,inheritedBaseDef.declaredInputs);}};/**
 * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.
 * @param key "inputs" or "outputs"
 */var updateBaseDefFromIOProp=function updateBaseDefFromIOProp(getProp){return function(target,name){var args=[];for(var _i=2;_i<arguments.length;_i++){args[_i-2]=arguments[_i];}var constructor=target.constructor;if(!constructor.hasOwnProperty(NG_BASE_DEF)){initializeBaseDef(target);}var baseDef=constructor.ngBaseDef;var defProp=getProp(baseDef);defProp[name]=args[0];};};/**
 *
 * @Annotation
 */var Input=makePropDecorator('Input',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};},undefined,updateBaseDefFromIOProp(function(baseDef){return baseDef.inputs||{};}));/**
 *
 * @Annotation
 */var Output=makePropDecorator('Output',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};},undefined,updateBaseDefFromIOProp(function(baseDef){return baseDef.outputs||{};}));/**
 *
 * @Annotation
 */var HostBinding=makePropDecorator('HostBinding',function(hostPropertyName){return{hostPropertyName:hostPropertyName};});/**
 * Binds a CSS event to a host listener and supplies configuration metadata.
 * Angular invokes the supplied handler method when the host element emits the specified event,
 * and updates the bound element with the result.
 * If the handler method returns false, applies `preventDefault` on the bound element.
 *
 * @usageNotes
 *
 * The following example declares a directive
 * that attaches a click listener to a button and counts clicks.
 *
 * ```
 * @Directive({selector: 'button[counting]'})
 * class CountClicks {
 *   numberOfClicks = 0;
 *
 *   @HostListener('click', ['$event.target'])
 *   onClick(btn) {
 *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);
 *  }
 * }
 *
 * @Component({
 *   selector: 'app',
 *   template: '<button counting>Increment</button>',
 * })
 * class App {}
 * ```
 *
 * @Annotation
 */var HostListener=makePropDecorator('HostListener',function(eventName,args){return{eventName:eventName,args:args};});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Defines a schema that allows an NgModule to contain the following:
 * - Non-Angular elements named with dash case (`-`).
 * - Element properties named with dash case (`-`).
 * Dash case is the naming convention for custom elements.
 *
 *
 */var CUSTOM_ELEMENTS_SCHEMA={name:'custom-elements'};/**
 * Defines a schema that allows any property on any element.
 *
 * @experimental
 */var NO_ERRORS_SCHEMA={name:'no-errors-schema'};/**
 * @Annotation
 */var NgModule=makeDecorator('NgModule',function(ngModule){return ngModule;},undefined,undefined,/**
 * Decorator that marks the following class as an NgModule, and supplies
 * configuration metadata for it.
 *
 * * The `declarations` and `entryComponents` options configure the compiler
 * with information about what belongs to the NgModule.
 * * The `providers` options configures the NgModule's injector to provide
 * dependencies the NgModule members.
 * * The `imports` and `exports` options bring in members from other modules, and make
 * this module's members available to others.
 */function(type,meta){return R3_COMPILE_NGMODULE$1(type,meta);});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @description Represents the version of Angular
 *
 *
 */var Version=/** @class */function(){function Version(full){this.full=full;this.major=full.split('.')[0];this.minor=full.split('.')[1];this.patch=full.split('.').slice(2).join('.');}return Version;}();var VERSION=new Version('7.0.0');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
* Injectable decorator and metadata.
*
* @Annotation
*/var Injectable=makeDecorator('Injectable',undefined,undefined,undefined,function(type,meta){return R3_COMPILE_INJECTABLE$1(type,meta);});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ERROR_DEBUG_CONTEXT='ngDebugContext';var ERROR_ORIGINAL_ERROR='ngOriginalError';var ERROR_LOGGER='ngErrorLogger';function getDebugContext(error){return error[ERROR_DEBUG_CONTEXT];}function getOriginalError(error){return error[ERROR_ORIGINAL_ERROR];}function getErrorLogger(error){return error[ERROR_LOGGER]||defaultErrorLogger;}function defaultErrorLogger(console){var values=[];for(var _i=1;_i<arguments.length;_i++){values[_i-1]=arguments[_i];}console.error.apply(console,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(values));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Provides a hook for centralized exception handling.
 *
 * The default implementation of `ErrorHandler` prints error messages to the `console`. To
 * intercept error handling, write a custom exception handler that replaces this default as
 * appropriate for your app.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * class MyErrorHandler implements ErrorHandler {
 *   handleError(error) {
 *     // do something with the exception
 *   }
 * }
 *
 * @NgModule({
 *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]
 * })
 * class MyModule {}
 * ```
 */var ErrorHandler=/** @class */function(){function ErrorHandler(){/**
         * @internal
         */this._console=console;}ErrorHandler.prototype.handleError=function(error){var originalError=this._findOriginalError(error);var context=this._findContext(error);// Note: Browser consoles show the place from where console.error was called.
// We can use this to give users additional information about the error.
var errorLogger=getErrorLogger(error);errorLogger(this._console,"ERROR",error);if(originalError){errorLogger(this._console,"ORIGINAL ERROR",originalError);}if(context){errorLogger(this._console,'ERROR CONTEXT',context);}};/** @internal */ErrorHandler.prototype._findContext=function(error){if(error){return getDebugContext(error)?getDebugContext(error):this._findContext(getOriginalError(error));}return null;};/** @internal */ErrorHandler.prototype._findOriginalError=function(error){var e=getOriginalError(error);while(e&&getOriginalError(e)){e=getOriginalError(e);}return e;};return ErrorHandler;}();function wrappedError(message,originalError){var msg=message+" caused by: "+(originalError instanceof Error?originalError.message:originalError);var error=Error(msg);error[ERROR_ORIGINAL_ERROR]=originalError;return error;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function findFirstClosedCycle(keys){var res=[];for(var i=0;i<keys.length;++i){if(res.indexOf(keys[i])>-1){res.push(keys[i]);return res;}res.push(keys[i]);}return res;}function constructResolvingPath(keys){if(keys.length>1){var reversed=findFirstClosedCycle(keys.slice().reverse());var tokenStrs=reversed.map(function(k){return stringify(k.token);});return' ('+tokenStrs.join(' -> ')+')';}return'';}function injectionError(injector,key,constructResolvingMessage,originalError){var keys=[key];var errMsg=constructResolvingMessage(keys);var error=originalError?wrappedError(errMsg,originalError):Error(errMsg);error.addKey=addKey;error.keys=keys;error.injectors=[injector];error.constructResolvingMessage=constructResolvingMessage;error[ERROR_ORIGINAL_ERROR]=originalError;return error;}function addKey(injector,key){this.injectors.push(injector);this.keys.push(key);// Note: This updated message won't be reflected in the `.stack` property
this.message=this.constructResolvingMessage(this.keys);}/**
 * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the
 * {@link Injector} does not have a {@link Provider} for the given key.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {
 *   constructor(b:B) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 */function noProviderError(injector,key){return injectionError(injector,key,function(keys){var first=stringify(keys[0].token);return"No provider for "+first+"!"+constructResolvingPath(keys);});}/**
 * Thrown when dependencies form a cycle.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * var injector = Injector.resolveAndCreate([
 *   {provide: "one", useFactory: (two) => "two", deps: [[new Inject("two")]]},
 *   {provide: "two", useFactory: (one) => "one", deps: [[new Inject("one")]]}
 * ]);
 *
 * expect(() => injector.get("one")).toThrowError();
 * ```
 *
 * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.
 */function cyclicDependencyError(injector,key){return injectionError(injector,key,function(keys){return"Cannot instantiate cyclic dependency!"+constructResolvingPath(keys);});}/**
 * Thrown when a constructing type returns with an Error.
 *
 * The `InstantiationError` class contains the original error plus the dependency graph which caused
 * this object to be instantiated.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {
 *   constructor() {
 *     throw new Error('message');
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([A]);

 * try {
 *   injector.get(A);
 * } catch (e) {
 *   expect(e instanceof InstantiationError).toBe(true);
 *   expect(e.originalException.message).toEqual("message");
 *   expect(e.originalStack).toBeDefined();
 * }
 * ```
 */function instantiationError(injector,originalException,originalStack,key){return injectionError(injector,key,function(keys){var first=stringify(keys[0].token);return originalException.message+": Error during instantiation of "+first+"!"+constructResolvingPath(keys)+".";},originalException);}/**
 * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}
 * creation.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate(["not a type"])).toThrowError();
 * ```
 */function invalidProviderError(provider){return Error("Invalid provider - only instances of Provider and Type are allowed, got: "+provider);}/**
 * Thrown when the class has no annotation information.
 *
 * Lack of annotation information prevents the {@link Injector} from determining which dependencies
 * need to be injected into the constructor.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {
 *   constructor(b) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 *
 * This error is also thrown when the class not marked with {@link Injectable} has parameter types.
 *
 * ```typescript
 * class B {}
 *
 * class A {
 *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.
 * }
 *
 * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();
 * ```
 *
 */function noAnnotationError(typeOrFunc,params){var signature=[];for(var i=0,ii=params.length;i<ii;i++){var parameter=params[i];if(!parameter||parameter.length==0){signature.push('?');}else{signature.push(parameter.map(stringify).join(' '));}}return Error('Cannot resolve all parameters for \''+stringify(typeOrFunc)+'\'('+signature.join(', ')+'). '+'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \''+stringify(typeOrFunc)+'\' is decorated with Injectable.');}/**
 * Thrown when getting an object by index.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * class A {}
 *
 * var injector = Injector.resolveAndCreate([A]);
 *
 * expect(() => injector.getAt(100)).toThrowError();
 * ```
 *
 */function outOfBoundsError(index){return Error("Index "+index+" is out-of-bounds.");}// TODO: add a working example after alpha38 is released
/**
 * Thrown when a multi provider and a regular provider are bound to the same token.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate([
 *   { provide: "Strings", useValue: "string1", multi: true},
 *   { provide: "Strings", useValue: "string2", multi: false}
 * ])).toThrowError();
 * ```
 */function mixingMultiProvidersWithRegularProvidersError(provider1,provider2){return Error("Cannot mix multi providers and regular providers, got: "+provider1+" "+provider2);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A unique object used for retrieving items from the {@link ReflectiveInjector}.
 *
 * Keys have:
 * - a system-wide unique `id`.
 * - a `token`.
 *
 * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows
 * the
 * injector to store created objects in a more efficient way.
 *
 * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when
 * resolving
 * providers.
 * @deprecated No replacement
 */var ReflectiveKey=/** @class */function(){/**
     * Private
     */function ReflectiveKey(token,id){this.token=token;this.id=id;if(!token){throw new Error('Token must be defined!');}this.displayName=stringify(this.token);}/**
     * Retrieves a `Key` for a token.
     */ReflectiveKey.get=function(token){return _globalKeyRegistry.get(resolveForwardRef(token));};Object.defineProperty(ReflectiveKey,"numberOfKeys",{/**
         * @returns the number of keys registered in the system.
         */get:function get(){return _globalKeyRegistry.numberOfKeys;},enumerable:true,configurable:true});return ReflectiveKey;}();var KeyRegistry=/** @class */function(){function KeyRegistry(){this._allKeys=new Map();}KeyRegistry.prototype.get=function(token){if(token instanceof ReflectiveKey)return token;if(this._allKeys.has(token)){return this._allKeys.get(token);}var newKey=new ReflectiveKey(token,ReflectiveKey.numberOfKeys);this._allKeys.set(token,newKey);return newKey;};Object.defineProperty(KeyRegistry.prototype,"numberOfKeys",{get:function get(){return this._allKeys.size;},enumerable:true,configurable:true});return KeyRegistry;}();var _globalKeyRegistry=new KeyRegistry();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Provides access to reflection data about symbols. Used internally by Angular
 * to power dependency injection and compilation.
 */var Reflector=/** @class */function(){function Reflector(reflectionCapabilities){this.reflectionCapabilities=reflectionCapabilities;}Reflector.prototype.updateCapabilities=function(caps){this.reflectionCapabilities=caps;};Reflector.prototype.factory=function(type){return this.reflectionCapabilities.factory(type);};Reflector.prototype.parameters=function(typeOrFunc){return this.reflectionCapabilities.parameters(typeOrFunc);};Reflector.prototype.annotations=function(typeOrFunc){return this.reflectionCapabilities.annotations(typeOrFunc);};Reflector.prototype.propMetadata=function(typeOrFunc){return this.reflectionCapabilities.propMetadata(typeOrFunc);};Reflector.prototype.hasLifecycleHook=function(type,lcProperty){return this.reflectionCapabilities.hasLifecycleHook(type,lcProperty);};Reflector.prototype.getter=function(name){return this.reflectionCapabilities.getter(name);};Reflector.prototype.setter=function(name){return this.reflectionCapabilities.setter(name);};Reflector.prototype.method=function(name){return this.reflectionCapabilities.method(name);};Reflector.prototype.importUri=function(type){return this.reflectionCapabilities.importUri(type);};Reflector.prototype.resourceUri=function(type){return this.reflectionCapabilities.resourceUri(type);};Reflector.prototype.resolveIdentifier=function(name,moduleUrl,members,runtime){return this.reflectionCapabilities.resolveIdentifier(name,moduleUrl,members,runtime);};Reflector.prototype.resolveEnum=function(identifier,name){return this.reflectionCapabilities.resolveEnum(identifier,name);};return Reflector;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * The {@link Reflector} used internally in Angular to access metadata
 * about symbols.
 */var reflector=new Reflector(new ReflectionCapabilities());/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * `Dependency` is used by the framework to extend DI.
 * This is internal to Angular and should not be used directly.
 */var ReflectiveDependency=/** @class */function(){function ReflectiveDependency(key,optional,visibility){this.key=key;this.optional=optional;this.visibility=visibility;}ReflectiveDependency.fromKey=function(key){return new ReflectiveDependency(key,false,null);};return ReflectiveDependency;}();var _EMPTY_LIST=[];var ResolvedReflectiveProvider_=/** @class */function(){function ResolvedReflectiveProvider_(key,resolvedFactories,multiProvider){this.key=key;this.resolvedFactories=resolvedFactories;this.multiProvider=multiProvider;this.resolvedFactory=this.resolvedFactories[0];}return ResolvedReflectiveProvider_;}();/**
 * An internal resolved representation of a factory function created by resolving `Provider`.
 * @experimental
 */var ResolvedReflectiveFactory=/** @class */function(){function ResolvedReflectiveFactory(/**
     * Factory function which can return an instance of an object represented by a key.
     */factory,/**
     * Arguments (dependencies) to the `factory` function.
     */dependencies){this.factory=factory;this.dependencies=dependencies;}return ResolvedReflectiveFactory;}();/**
 * Resolve a single provider.
 */function resolveReflectiveFactory(provider){var factoryFn;var resolvedDeps;if(provider.useClass){var useClass=resolveForwardRef(provider.useClass);factoryFn=reflector.factory(useClass);resolvedDeps=_dependenciesFor(useClass);}else if(provider.useExisting){factoryFn=function factoryFn(aliasInstance){return aliasInstance;};resolvedDeps=[ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];}else if(provider.useFactory){factoryFn=provider.useFactory;resolvedDeps=constructDependencies(provider.useFactory,provider.deps);}else{factoryFn=function factoryFn(){return provider.useValue;};resolvedDeps=_EMPTY_LIST;}return new ResolvedReflectiveFactory(factoryFn,resolvedDeps);}/**
 * Converts the `Provider` into `ResolvedProvider`.
 *
 * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider
 * syntax.
 */function resolveReflectiveProvider(provider){return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide),[resolveReflectiveFactory(provider)],provider.multi||false);}/**
 * Resolve a list of Providers.
 */function resolveReflectiveProviders(providers){var normalized=_normalizeProviders(providers,[]);var resolved=normalized.map(resolveReflectiveProvider);var resolvedProviderMap=mergeResolvedReflectiveProviders(resolved,new Map());return Array.from(resolvedProviderMap.values());}/**
 * Merges a list of ResolvedProviders into a list where each key is contained exactly once and
 * multi providers have been merged.
 */function mergeResolvedReflectiveProviders(providers,normalizedProvidersMap){for(var i=0;i<providers.length;i++){var provider=providers[i];var existing=normalizedProvidersMap.get(provider.key.id);if(existing){if(provider.multiProvider!==existing.multiProvider){throw mixingMultiProvidersWithRegularProvidersError(existing,provider);}if(provider.multiProvider){for(var j=0;j<provider.resolvedFactories.length;j++){existing.resolvedFactories.push(provider.resolvedFactories[j]);}}else{normalizedProvidersMap.set(provider.key.id,provider);}}else{var resolvedProvider=void 0;if(provider.multiProvider){resolvedProvider=new ResolvedReflectiveProvider_(provider.key,provider.resolvedFactories.slice(),provider.multiProvider);}else{resolvedProvider=provider;}normalizedProvidersMap.set(provider.key.id,resolvedProvider);}}return normalizedProvidersMap;}function _normalizeProviders(providers,res){providers.forEach(function(b){if(b instanceof Type){res.push({provide:b,useClass:b});}else if(b&&_typeof(b)=='object'&&b.provide!==undefined){res.push(b);}else if(b instanceof Array){_normalizeProviders(b,res);}else{throw invalidProviderError(b);}});return res;}function constructDependencies(typeOrFunc,dependencies){if(!dependencies){return _dependenciesFor(typeOrFunc);}else{var params_1=dependencies.map(function(t){return[t];});return dependencies.map(function(t){return _extractToken(typeOrFunc,t,params_1);});}}function _dependenciesFor(typeOrFunc){var params=reflector.parameters(typeOrFunc);if(!params)return[];if(params.some(function(p){return p==null;})){throw noAnnotationError(typeOrFunc,params);}return params.map(function(p){return _extractToken(typeOrFunc,p,params);});}function _extractToken(typeOrFunc,metadata,params){var token=null;var optional=false;if(!Array.isArray(metadata)){if(metadata instanceof Inject){return _createDependency(metadata.token,optional,null);}else{return _createDependency(metadata,optional,null);}}var visibility=null;for(var i=0;i<metadata.length;++i){var paramMetadata=metadata[i];if(paramMetadata instanceof Type){token=paramMetadata;}else if(paramMetadata instanceof Inject){token=paramMetadata.token;}else if(paramMetadata instanceof Optional){optional=true;}else if(paramMetadata instanceof Self||paramMetadata instanceof SkipSelf){visibility=paramMetadata;}else if(paramMetadata instanceof InjectionToken){token=paramMetadata;}}token=resolveForwardRef(token);if(token!=null){return _createDependency(token,optional,visibility);}else{throw noAnnotationError(typeOrFunc,params);}}function _createDependency(token,optional,visibility){return new ReflectiveDependency(ReflectiveKey.get(token),optional,visibility);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Threshold for the dynamic version
var UNDEFINED=new Object();/**
 * A ReflectiveDependency injection container used for instantiating objects and resolving
 * dependencies.
 *
 * An `Injector` is a replacement for a `new` operator, which can automatically resolve the
 * constructor dependencies.
 *
 * In typical use, application code asks for the dependencies in the constructor and they are
 * resolved by the `Injector`.
 *
 * @usageNotes
 * ### Example
 *
 * The following example creates an `Injector` configured to create `Engine` and `Car`.
 *
 * ```typescript
 * @Injectable()
 * class Engine {
 * }
 *
 * @Injectable()
 * class Car {
 *   constructor(public engine:Engine) {}
 * }
 *
 * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
 * var car = injector.get(Car);
 * expect(car instanceof Car).toBe(true);
 * expect(car.engine instanceof Engine).toBe(true);
 * ```
 *
 * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`
 * resolve all of the object's dependencies automatically.
 *
 * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.
 */var ReflectiveInjector=/** @class */function(){function ReflectiveInjector(){}/**
     * Turns an array of provider definitions into an array of resolved providers.
     *
     * A resolution is a process of flattening multiple nested arrays and converting individual
     * providers into an array of `ResolvedReflectiveProvider`s.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
     *
     * expect(providers.length).toEqual(2);
     *
     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
     * expect(providers[0].key.displayName).toBe("Car");
     * expect(providers[0].dependencies.length).toEqual(1);
     * expect(providers[0].factory).toBeDefined();
     *
     * expect(providers[1].key.displayName).toBe("Engine");
     * });
     * ```
     *
     */ReflectiveInjector.resolve=function(providers){return resolveReflectiveProviders(providers);};/**
     * Resolves an array of providers and creates an injector from those providers.
     *
     * The passed-in providers can be an array of `Type`, `Provider`,
     * or a recursive array of more providers.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     */ReflectiveInjector.resolveAndCreate=function(providers,parent){var ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders,parent);};/**
     * Creates an injector from previously resolved providers.
     *
     * This API is the recommended way to construct injectors in performance-sensitive parts.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, Engine]);
     * var injector = ReflectiveInjector.fromResolvedProviders(providers);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     * @experimental
     */ReflectiveInjector.fromResolvedProviders=function(providers,parent){return new ReflectiveInjector_(providers,parent);};return ReflectiveInjector;}();var ReflectiveInjector_=/** @class */function(){/**
     * Private
     */function ReflectiveInjector_(_providers,_parent){/** @internal */this._constructionCounter=0;this._providers=_providers;this.parent=_parent||null;var len=_providers.length;this.keyIds=new Array(len);this.objs=new Array(len);for(var i=0;i<len;i++){this.keyIds[i]=_providers[i].key.id;this.objs[i]=UNDEFINED;}}ReflectiveInjector_.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=THROW_IF_NOT_FOUND;}return this._getByKey(ReflectiveKey.get(token),null,notFoundValue);};ReflectiveInjector_.prototype.resolveAndCreateChild=function(providers){var ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return this.createChildFromResolved(ResolvedReflectiveProviders);};ReflectiveInjector_.prototype.createChildFromResolved=function(providers){var inj=new ReflectiveInjector_(providers);inj.parent=this;return inj;};ReflectiveInjector_.prototype.resolveAndInstantiate=function(provider){return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);};ReflectiveInjector_.prototype.instantiateResolved=function(provider){return this._instantiateProvider(provider);};ReflectiveInjector_.prototype.getProviderAtIndex=function(index){if(index<0||index>=this._providers.length){throw outOfBoundsError(index);}return this._providers[index];};/** @internal */ReflectiveInjector_.prototype._new=function(provider){if(this._constructionCounter++>this._getMaxNumberOfObjects()){throw cyclicDependencyError(this,provider.key);}return this._instantiateProvider(provider);};ReflectiveInjector_.prototype._getMaxNumberOfObjects=function(){return this.objs.length;};ReflectiveInjector_.prototype._instantiateProvider=function(provider){if(provider.multiProvider){var res=new Array(provider.resolvedFactories.length);for(var i=0;i<provider.resolvedFactories.length;++i){res[i]=this._instantiate(provider,provider.resolvedFactories[i]);}return res;}else{return this._instantiate(provider,provider.resolvedFactories[0]);}};ReflectiveInjector_.prototype._instantiate=function(provider,ResolvedReflectiveFactory$$1){var _this=this;var factory=ResolvedReflectiveFactory$$1.factory;var deps;try{deps=ResolvedReflectiveFactory$$1.dependencies.map(function(dep){return _this._getByReflectiveDependency(dep);});}catch(e){if(e.addKey){e.addKey(this,provider.key);}throw e;}var obj;try{obj=factory.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(deps));}catch(e){throw instantiationError(this,e,e.stack,provider.key);}return obj;};ReflectiveInjector_.prototype._getByReflectiveDependency=function(dep){return this._getByKey(dep.key,dep.visibility,dep.optional?null:THROW_IF_NOT_FOUND);};ReflectiveInjector_.prototype._getByKey=function(key,visibility,notFoundValue){if(key===ReflectiveInjector_.INJECTOR_KEY){return this;}if(visibility instanceof Self){return this._getByKeySelf(key,notFoundValue);}else{return this._getByKeyDefault(key,notFoundValue,visibility);}};ReflectiveInjector_.prototype._getObjByKeyId=function(keyId){for(var i=0;i<this.keyIds.length;i++){if(this.keyIds[i]===keyId){if(this.objs[i]===UNDEFINED){this.objs[i]=this._new(this._providers[i]);}return this.objs[i];}}return UNDEFINED;};/** @internal */ReflectiveInjector_.prototype._throwOrNull=function(key,notFoundValue){if(notFoundValue!==THROW_IF_NOT_FOUND){return notFoundValue;}else{throw noProviderError(this,key);}};/** @internal */ReflectiveInjector_.prototype._getByKeySelf=function(key,notFoundValue){var obj=this._getObjByKeyId(key.id);return obj!==UNDEFINED?obj:this._throwOrNull(key,notFoundValue);};/** @internal */ReflectiveInjector_.prototype._getByKeyDefault=function(key,notFoundValue,visibility){var inj;if(visibility instanceof SkipSelf){inj=this.parent;}else{inj=this;}while(inj instanceof ReflectiveInjector_){var inj_=inj;var obj=inj_._getObjByKeyId(key.id);if(obj!==UNDEFINED)return obj;inj=inj_.parent;}if(inj!==null){return inj.get(key.token,notFoundValue);}else{return this._throwOrNull(key,notFoundValue);}};Object.defineProperty(ReflectiveInjector_.prototype,"displayName",{get:function get(){var providers=_mapProviders(this,function(b){return' "'+b.key.displayName+'" ';}).join(', ');return"ReflectiveInjector(providers: ["+providers+"])";},enumerable:true,configurable:true});ReflectiveInjector_.prototype.toString=function(){return this.displayName;};ReflectiveInjector_.INJECTOR_KEY=ReflectiveKey.get(Injector);return ReflectiveInjector_;}();function _mapProviders(injector,fn){var res=new Array(injector._providers.length);for(var i=0;i<injector._providers.length;++i){res[i]=fn(injector.getProviderAtIndex(i));}return res;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Determine if the argument is shaped like a Promise
 */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}/**
 * Determine if the argument is an Observable
 */function isObservable(obj){// TODO: use isObservable once we update pass rxjs 6.1
// https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03
return!!obj&&typeof obj.subscribe==='function';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A function that will be executed when an application is initialized.
 */var APP_INITIALIZER=new InjectionToken('Application Initializer');/**
 * A class that reflects the state of running {@link APP_INITIALIZER}s.
 */var ApplicationInitStatus=/** @class */function(){function ApplicationInitStatus(appInits){var _this=this;this.appInits=appInits;this.initialized=false;this.done=false;this.donePromise=new Promise(function(res,rej){_this.resolve=res;_this.reject=rej;});}/** @internal */ApplicationInitStatus.prototype.runInitializers=function(){var _this=this;if(this.initialized){return;}var asyncInitPromises=[];var complete=function complete(){_this.done=true;_this.resolve();};if(this.appInits){for(var i=0;i<this.appInits.length;i++){var initResult=this.appInits[i]();if(isPromise(initResult)){asyncInitPromises.push(initResult);}}}Promise.all(asyncInitPromises).then(function(){complete();}).catch(function(e){_this.reject(e);});if(asyncInitPromises.length===0){complete();}this.initialized=true;};ApplicationInitStatus=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0,Inject(APP_INITIALIZER)),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0,Optional()),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes",[Array])],ApplicationInitStatus);return ApplicationInitStatus;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A DI Token representing a unique string id assigned to the application by Angular and used
 * primarily for prefixing application attributes and CSS styles when
 * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.
 *
 * If you need to avoid randomly generated value to be used as an application id, you can provide
 * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}
 * using this token.
 * @experimental
 */var APP_ID=new InjectionToken('AppId');function _appIdRandomProviderFactory(){return""+_randomChar()+_randomChar()+_randomChar();}/**
 * Providers that will generate a random APP_ID_TOKEN.
 * @experimental
 */var APP_ID_RANDOM_PROVIDER={provide:APP_ID,useFactory:_appIdRandomProviderFactory,deps:[]};function _randomChar(){return String.fromCharCode(97+Math.floor(Math.random()*25));}/**
 * A function that will be executed when a platform is initialized.
 * @experimental
 */var PLATFORM_INITIALIZER=new InjectionToken('Platform Initializer');/**
 * A token that indicates an opaque platform id.
 * @experimental
 */var PLATFORM_ID=new InjectionToken('Platform ID');/**
 * All callbacks provided via this token will be called for every component that is bootstrapped.
 * Signature of the callback:
 *
 * `(componentRef: ComponentRef) => void`.
 *
 * @experimental
 */var APP_BOOTSTRAP_LISTENER=new InjectionToken('appBootstrapListener');/**
 * A token which indicates the root directory of the application
 * @experimental
 */var PACKAGE_ROOT_URL=new InjectionToken('Application Packages Root URL');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Console=/** @class */function(){function Console(){}Console.prototype.log=function(message){// tslint:disable-next-line:no-console
console.log(message);};// Note: for reporting errors use `DOM.logError()` as it is platform specific
Console.prototype.warn=function(message){// tslint:disable-next-line:no-console
console.warn(message);};Console=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable()],Console);return Console;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Combination of NgModuleFactory and ComponentFactorys.
 *
 * @experimental
 */var ModuleWithComponentFactories=/** @class */function(){function ModuleWithComponentFactories(ngModuleFactory,componentFactories){this.ngModuleFactory=ngModuleFactory;this.componentFactories=componentFactories;}return ModuleWithComponentFactories;}();function _throwError(){throw new Error("Runtime compiler is not loaded");}/**
 * Low-level service for running the angular compiler during runtime
 * to create {@link ComponentFactory}s, which
 * can later be used to create and render a Component instance.
 *
 * Each `@NgModule` provides an own `Compiler` to its injector,
 * that will use the directives/pipes of the ng module for compilation
 * of components.
 *
 */var Compiler=/** @class */function(){function Compiler(){}/**
     * Compiles the given NgModule and all of its components. All templates of the components listed
     * in `entryComponents` have to be inlined.
     */Compiler.prototype.compileModuleSync=function(moduleType){throw _throwError();};/**
     * Compiles the given NgModule and all of its components
     */Compiler.prototype.compileModuleAsync=function(moduleType){throw _throwError();};/**
     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.
     */Compiler.prototype.compileModuleAndAllComponentsSync=function(moduleType){throw _throwError();};/**
     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.
     */Compiler.prototype.compileModuleAndAllComponentsAsync=function(moduleType){throw _throwError();};/**
     * Clears all caches.
     */Compiler.prototype.clearCache=function(){};/**
     * Clears the cache for the given component/ngModule.
     */Compiler.prototype.clearCacheFor=function(type){};/**
     * Returns the id for a given NgModule, if one is defined and known to the compiler.
     */Compiler.prototype.getModuleId=function(moduleType){return undefined;};Compiler=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable()],Compiler);return Compiler;}();/**
 * Token to provide CompilerOptions in the platform injector.
 *
 * @experimental
 */var COMPILER_OPTIONS=new InjectionToken('compilerOptions');/**
 * A factory for creating a Compiler
 *
 * @experimental
 */var CompilerFactory=/** @class */function(){function CompilerFactory(){}return CompilerFactory;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var trace;var events;function detectWTF(){var wtf=_global/** TODO #9100 */['wtf'];if(wtf){trace=wtf['trace'];if(trace){events=trace['events'];return true;}}return false;}function createScope(signature,flags){if(flags===void 0){flags=null;}return events.createScope(signature,flags);}function leave(scope,returnValue){trace.leaveScope(scope,returnValue);return returnValue;}function startTimeRange(rangeType,action){return trace.beginTimeRange(rangeType,action);}function endTimeRange(range){trace.endTimeRange(range);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * True if WTF is enabled.
 */var wtfEnabled=detectWTF();function noopScope(arg0,arg1){return null;}/**
 * Create trace scope.
 *
 * Scopes must be strictly nested and are analogous to stack frames, but
 * do not have to follow the stack frames. Instead it is recommended that they follow logical
 * nesting. You may want to use
 * [Event
 * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)
 * as they are defined in WTF.
 *
 * Used to mark scope entry. The return value is used to leave the scope.
 *
 *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');
 *
 *     someMethod() {
 *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI
 *        // DO SOME WORK HERE
 *        return wtfLeave(s, 123); // Return value 123
 *     }
 *
 * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can
 * negatively impact the performance of your application. For this reason we recommend that
 * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and
 * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to
 * exception, will produce incorrect trace, but presence of exception signifies logic error which
 * needs to be fixed before the app should be profiled. Add try-finally only when you expect that
 * an exception is expected during normal execution while profiling.
 *
 * @experimental
 */var wtfCreateScope=wtfEnabled?createScope:function(signature,flags){return noopScope;};/**
 * Used to mark end of Scope.
 *
 * - `scope` to end.
 * - `returnValue` (optional) to be passed to the WTF.
 *
 * Returns the `returnValue for easy chaining.
 * @experimental
 */var wtfLeave=wtfEnabled?leave:function(s,r){return r;};/**
 * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.
 * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been
 * enabled.
 *
 *     someMethod() {
 *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');
 *        var future = new Future.delay(5).then((_) {
 *          wtfEndTimeRange(s);
 *        });
 *     }
 * @experimental
 */var wtfStartTimeRange=wtfEnabled?startTimeRange:function(rangeType,action){return null;};/**
 * Ends a async time range operation.
 * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been
 * enabled.
 * @experimental
 */var wtfEndTimeRange=wtfEnabled?endTimeRange:function(r){return null;};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An injectable service for executing work inside or outside of the Angular zone.
 *
 * The most common use of this service is to optimize performance when starting a work consisting of
 * one or more asynchronous tasks that don't require UI updates or error handling to be handled by
 * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks
 * can reenter the Angular zone via {@link #run}.
 *
 * <!-- TODO: add/fix links to:
 *   - docs explaining zones and the use of zones in Angular and change-detection
 *   - link to runOutsideAngular/run (throughout this file!)
 *   -->
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * import {Component, NgZone} from '@angular/core';
 * import {NgIf} from '@angular/common';
 *
 * @Component({
 *   selector: 'ng-zone-demo',
 *   template: `
 *     <h2>Demo: NgZone</h2>
 *
 *     <p>Progress: {{progress}}%</p>
 *     <p *ngIf="progress >= 100">Done processing {{label}} of Angular zone!</p>
 *
 *     <button (click)="processWithinAngularZone()">Process within Angular zone</button>
 *     <button (click)="processOutsideOfAngularZone()">Process outside of Angular zone</button>
 *   `,
 * })
 * export class NgZoneDemo {
 *   progress: number = 0;
 *   label: string;
 *
 *   constructor(private _ngZone: NgZone) {}
 *
 *   // Loop inside the Angular zone
 *   // so the UI DOES refresh after each setTimeout cycle
 *   processWithinAngularZone() {
 *     this.label = 'inside';
 *     this.progress = 0;
 *     this._increaseProgress(() => console.log('Inside Done!'));
 *   }
 *
 *   // Loop outside of the Angular zone
 *   // so the UI DOES NOT refresh after each setTimeout cycle
 *   processOutsideOfAngularZone() {
 *     this.label = 'outside';
 *     this.progress = 0;
 *     this._ngZone.runOutsideAngular(() => {
 *       this._increaseProgress(() => {
 *         // reenter the Angular zone and display done
 *         this._ngZone.run(() => { console.log('Outside Done!'); });
 *       });
 *     });
 *   }
 *
 *   _increaseProgress(doneCallback: () => void) {
 *     this.progress += 1;
 *     console.log(`Current progress: ${this.progress}%`);
 *
 *     if (this.progress < 100) {
 *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);
 *     } else {
 *       doneCallback();
 *     }
 *   }
 * }
 * ```
 *
 * @experimental
 */var NgZone=/** @class */function(){function NgZone(_a){var _b=_a.enableLongStackTrace,enableLongStackTrace=_b===void 0?false:_b;this.hasPendingMicrotasks=false;this.hasPendingMacrotasks=false;/**
         * Whether there are no outstanding microtasks or macrotasks.
         */this.isStable=true;/**
         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.
         */this.onUnstable=new EventEmitter(false);/**
         * Notifies when there is no more microtasks enqueued in the current VM Turn.
         * This is a hint for Angular to do change detection, which may enqueue more microtasks.
         * For this reason this event can fire multiple times per VM Turn.
         */this.onMicrotaskEmpty=new EventEmitter(false);/**
         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which
         * implies we are about to relinquish VM turn.
         * This event gets called just once.
         */this.onStable=new EventEmitter(false);/**
         * Notifies that an error has been delivered.
         */this.onError=new EventEmitter(false);if(typeof Zone=='undefined'){throw new Error("In this configuration Angular requires Zone.js");}Zone.assertZonePatched();var self=this;self._nesting=0;self._outer=self._inner=Zone.current;if(Zone['wtfZoneSpec']){self._inner=self._inner.fork(Zone['wtfZoneSpec']);}if(Zone['TaskTrackingZoneSpec']){self._inner=self._inner.fork(new Zone['TaskTrackingZoneSpec']());}if(enableLongStackTrace&&Zone['longStackTraceZoneSpec']){self._inner=self._inner.fork(Zone['longStackTraceZoneSpec']);}forkInnerZoneWithAngularBehavior(self);}NgZone.isInAngularZone=function(){return Zone.current.get('isAngularZone')===true;};NgZone.assertInAngularZone=function(){if(!NgZone.isInAngularZone()){throw new Error('Expected to be in Angular Zone, but it is not!');}};NgZone.assertNotInAngularZone=function(){if(NgZone.isInAngularZone()){throw new Error('Expected to not be in Angular Zone, but it is!');}};/**
     * Executes the `fn` function synchronously within the Angular zone and returns value returned by
     * the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     */NgZone.prototype.run=function(fn,applyThis,applyArgs){return this._inner.run(fn,applyThis,applyArgs);};/**
     * Executes the `fn` function synchronously within the Angular zone as a task and returns value
     * returned by the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     */NgZone.prototype.runTask=function(fn,applyThis,applyArgs,name){var zone=this._inner;var task=zone.scheduleEventTask('NgZoneEvent: '+name,fn,EMPTY_PAYLOAD,noop$1,noop$1);try{return zone.runTask(task,applyThis,applyArgs);}finally{zone.cancelTask(task);}};/**
     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
     * rethrown.
     */NgZone.prototype.runGuarded=function(fn,applyThis,applyArgs){return this._inner.runGuarded(fn,applyThis,applyArgs);};/**
     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
     * the function.
     *
     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do
     * work that
     * doesn't trigger Angular change-detection or is subject to Angular's error handling.
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * outside of the Angular zone.
     *
     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.
     */NgZone.prototype.runOutsideAngular=function(fn){return this._outer.run(fn);};return NgZone;}();function noop$1(){}var EMPTY_PAYLOAD={};function checkStable(zone){if(zone._nesting==0&&!zone.hasPendingMicrotasks&&!zone.isStable){try{zone._nesting++;zone.onMicrotaskEmpty.emit(null);}finally{zone._nesting--;if(!zone.hasPendingMicrotasks){try{zone.runOutsideAngular(function(){return zone.onStable.emit(null);});}finally{zone.isStable=true;}}}}}function forkInnerZoneWithAngularBehavior(zone){zone._inner=zone._inner.fork({name:'angular',properties:{'isAngularZone':true},onInvokeTask:function onInvokeTask(delegate,current,target,task,applyThis,applyArgs){try{onEnter(zone);return delegate.invokeTask(target,task,applyThis,applyArgs);}finally{onLeave(zone);}},onInvoke:function onInvoke(delegate,current,target,callback,applyThis,applyArgs,source){try{onEnter(zone);return delegate.invoke(target,callback,applyThis,applyArgs,source);}finally{onLeave(zone);}},onHasTask:function onHasTask(delegate,current,target,hasTaskState){delegate.hasTask(target,hasTaskState);if(current===target){// We are only interested in hasTask events which originate from our zone
// (A child hasTask event is not interesting to us)
if(hasTaskState.change=='microTask'){zone.hasPendingMicrotasks=hasTaskState.microTask;checkStable(zone);}else if(hasTaskState.change=='macroTask'){zone.hasPendingMacrotasks=hasTaskState.macroTask;}}},onHandleError:function onHandleError(delegate,current,target,error){delegate.handleError(target,error);zone.runOutsideAngular(function(){return zone.onError.emit(error);});return false;}});}function onEnter(zone){zone._nesting++;if(zone.isStable){zone.isStable=false;zone.onUnstable.emit(null);}}function onLeave(zone){zone._nesting--;checkStable(zone);}/**
 * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls
 * to framework to perform rendering.
 */var NoopNgZone=/** @class */function(){function NoopNgZone(){this.hasPendingMicrotasks=false;this.hasPendingMacrotasks=false;this.isStable=true;this.onUnstable=new EventEmitter();this.onMicrotaskEmpty=new EventEmitter();this.onStable=new EventEmitter();this.onError=new EventEmitter();}NoopNgZone.prototype.run=function(fn){return fn();};NoopNgZone.prototype.runGuarded=function(fn){return fn();};NoopNgZone.prototype.runOutsideAngular=function(fn){return fn();};NoopNgZone.prototype.runTask=function(fn){return fn();};return NoopNgZone;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * The Testability service provides testing hooks that can be accessed from
 * the browser and by services such as Protractor. Each bootstrapped Angular
 * application on the page will have an instance of Testability.
 * @experimental
 */var Testability=/** @class */function(){function Testability(_ngZone){var _this=this;this._ngZone=_ngZone;this._pendingCount=0;this._isZoneStable=true;/**
         * Whether any work was done since the last 'whenStable' callback. This is
         * useful to detect if this could have potentially destabilized another
         * component while it is stabilizing.
         * @internal
         */this._didWork=false;this._callbacks=[];this._watchAngularEvents();_ngZone.run(function(){_this.taskTrackingZone=Zone.current.get('TaskTrackingZone');});}Testability.prototype._watchAngularEvents=function(){var _this=this;this._ngZone.onUnstable.subscribe({next:function next(){_this._didWork=true;_this._isZoneStable=false;}});this._ngZone.runOutsideAngular(function(){_this._ngZone.onStable.subscribe({next:function next(){NgZone.assertNotInAngularZone();scheduleMicroTask(function(){_this._isZoneStable=true;_this._runCallbacksIfReady();});}});});};/**
     * Increases the number of pending request
     * @deprecated pending requests are now tracked with zones.
     */Testability.prototype.increasePendingRequestCount=function(){this._pendingCount+=1;this._didWork=true;return this._pendingCount;};/**
     * Decreases the number of pending request
     * @deprecated pending requests are now tracked with zones
     */Testability.prototype.decreasePendingRequestCount=function(){this._pendingCount-=1;if(this._pendingCount<0){throw new Error('pending async requests below zero');}this._runCallbacksIfReady();return this._pendingCount;};/**
     * Whether an associated application is stable
     */Testability.prototype.isStable=function(){return this._isZoneStable&&this._pendingCount===0&&!this._ngZone.hasPendingMacrotasks;};Testability.prototype._runCallbacksIfReady=function(){var _this=this;if(this.isStable()){// Schedules the call backs in a new frame so that it is always async.
scheduleMicroTask(function(){while(_this._callbacks.length!==0){var cb=_this._callbacks.pop();clearTimeout(cb.timeoutId);cb.doneCb(_this._didWork);}_this._didWork=false;});}else{// Still not stable, send updates.
var pending_1=this.getPendingTasks();this._callbacks=this._callbacks.filter(function(cb){if(cb.updateCb&&cb.updateCb(pending_1)){clearTimeout(cb.timeoutId);return false;}return true;});this._didWork=true;}};Testability.prototype.getPendingTasks=function(){if(!this.taskTrackingZone){return[];}// Copy the tasks data so that we don't leak tasks.
return this.taskTrackingZone.macroTasks.map(function(t){return{source:t.source,// From TaskTrackingZone:
// https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40
creationLocation:t.creationLocation,data:t.data};});};Testability.prototype.addCallback=function(cb,timeout,updateCb){var _this=this;var timeoutId=-1;if(timeout&&timeout>0){timeoutId=setTimeout(function(){_this._callbacks=_this._callbacks.filter(function(cb){return cb.timeoutId!==timeoutId;});cb(_this._didWork,_this.getPendingTasks());},timeout);}this._callbacks.push({doneCb:cb,timeoutId:timeoutId,updateCb:updateCb});};/**
     * Wait for the application to be stable with a timeout. If the timeout is reached before that
     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.
     *
     * @param doneCb The callback to invoke when Angular is stable or the timeout expires
     *    whichever comes first.
     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not
     *    specified, whenStable() will wait forever.
     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of
     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked
     *    and no further updates will be issued.
     */Testability.prototype.whenStable=function(doneCb,timeout,updateCb){if(updateCb&&!this.taskTrackingZone){throw new Error('Task tracking zone is required when passing an update callback to '+'whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');}// These arguments are 'Function' above to keep the public API simple.
this.addCallback(doneCb,timeout,updateCb);this._runCallbacksIfReady();};/**
     * Get the number of pending requests
     * @deprecated pending requests are now tracked with zones
     */Testability.prototype.getPendingRequestCount=function(){return this._pendingCount;};/**
     * Find providers by name
     * @param using The root element to search from
     * @param provider The name of binding variable
     * @param exactMatch Whether using exactMatch
     */Testability.prototype.findProviders=function(using,provider,exactMatch){// TODO(juliemr): implement.
return[];};Testability=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes",[NgZone])],Testability);return Testability;}();/**
 * A global registry of {@link Testability} instances for specific elements.
 * @experimental
 */var TestabilityRegistry=/** @class */function(){function TestabilityRegistry(){/** @internal */this._applications=new Map();_testabilityGetter.addToWindow(this);}/**
     * Registers an application with a testability hook so that it can be tracked
     * @param token token of application, root element
     * @param testability Testability hook
     */TestabilityRegistry.prototype.registerApplication=function(token,testability){this._applications.set(token,testability);};/**
     * Unregisters an application.
     * @param token token of application, root element
     */TestabilityRegistry.prototype.unregisterApplication=function(token){this._applications.delete(token);};/**
     * Unregisters all applications
     */TestabilityRegistry.prototype.unregisterAllApplications=function(){this._applications.clear();};/**
     * Get a testability hook associated with the application
     * @param elem root element
     */TestabilityRegistry.prototype.getTestability=function(elem){return this._applications.get(elem)||null;};/**
     * Get all registered testabilities
     */TestabilityRegistry.prototype.getAllTestabilities=function(){return Array.from(this._applications.values());};/**
     * Get all registered applications(root elements)
     */TestabilityRegistry.prototype.getAllRootElements=function(){return Array.from(this._applications.keys());};/**
     * Find testability of a node in the Tree
     * @param elem node
     * @param findInAncestors whether finding testability in ancestors if testability was not found in
     * current node
     */TestabilityRegistry.prototype.findTestabilityInTree=function(elem,findInAncestors){if(findInAncestors===void 0){findInAncestors=true;}return _testabilityGetter.findTestabilityInTree(this,elem,findInAncestors);};TestabilityRegistry=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes",[])],TestabilityRegistry);return TestabilityRegistry;}();var _NoopGetTestability=/** @class */function(){function _NoopGetTestability(){}_NoopGetTestability.prototype.addToWindow=function(registry){};_NoopGetTestability.prototype.findTestabilityInTree=function(registry,elem,findInAncestors){return null;};return _NoopGetTestability;}();/**
 * Set the {@link GetTestability} implementation used by the Angular testing framework.
 * @experimental
 */function setTestabilityGetter(getter){_testabilityGetter=getter;}var _testabilityGetter=new _NoopGetTestability();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _platform;var compileNgModuleFactory=compileNgModuleFactory__PRE_NGCC__;function compileNgModuleFactory__PRE_NGCC__(injector,options,moduleType){var compilerFactory=injector.get(CompilerFactory);var compiler=compilerFactory.createCompiler([options]);return compiler.compileModuleAsync(moduleType);}function compileNgModuleFactory__POST_NGCC__(injector,options,moduleType){ngDevMode&&assertNgModuleType(moduleType);return Promise.resolve(new NgModuleFactory$1(moduleType));}var ALLOW_MULTIPLE_PLATFORMS=new InjectionToken('AllowMultipleToken');/**
 * A token for third-party components that can register themselves with NgProbe.
 *
 * @experimental
 */var NgProbeToken=/** @class */function(){function NgProbeToken(name,token){this.name=name;this.token=token;}return NgProbeToken;}();/**
 * Creates a platform.
 * Platforms have to be eagerly created via this function.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function createPlatform(injector){if(_platform&&!_platform.destroyed&&!_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){throw new Error('There can be only one platform. Destroy the previous one to create a new one.');}_platform=injector.get(PlatformRef);var inits=injector.get(PLATFORM_INITIALIZER,null);if(inits)inits.forEach(function(init){return init();});return _platform;}/**
 * Creates a factory for a platform
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function createPlatformFactory(parentPlatformFactory,name,providers){if(providers===void 0){providers=[];}var desc="Platform: "+name;var marker=new InjectionToken(desc);return function(extraProviders){if(extraProviders===void 0){extraProviders=[];}var platform=getPlatform();if(!platform||platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){if(parentPlatformFactory){parentPlatformFactory(providers.concat(extraProviders).concat({provide:marker,useValue:true}));}else{var injectedProviders=providers.concat(extraProviders).concat({provide:marker,useValue:true});createPlatform(Injector.create({providers:injectedProviders,name:desc}));}}return assertPlatform(marker);};}/**
 * Checks that there currently is a platform which contains the given token as a provider.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function assertPlatform(requiredToken){var platform=getPlatform();if(!platform){throw new Error('No platform exists!');}if(!platform.injector.get(requiredToken,null)){throw new Error('A platform with a different configuration has been created. Please destroy it first.');}return platform;}/**
 * Destroy the existing platform.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function destroyPlatform(){if(_platform&&!_platform.destroyed){_platform.destroy();}}/**
 * Returns the current platform.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function getPlatform(){return _platform&&!_platform.destroyed?_platform:null;}/**
 * The Angular platform is the entry point for Angular on a web page. Each page
 * has exactly one platform, and services (such as reflection) which are common
 * to every Angular application running on the page are bound in its scope.
 *
 * A page's platform is initialized implicitly when a platform is created via a platform factory
 * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.
 */var PlatformRef=/** @class */function(){/** @internal */function PlatformRef(_injector){this._injector=_injector;this._modules=[];this._destroyListeners=[];this._destroyed=false;}/**
     * Creates an instance of an `@NgModule` for the given platform
     * for offline compilation.
     *
     * @usageNotes
     * ### Simple Example
     *
     * ```typescript
     * my_module.ts:
     *
     * @NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * main.ts:
     * import {MyModuleNgFactory} from './my_module.ngfactory';
     * import {platformBrowser} from '@angular/platform-browser';
     *
     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
     * ```
     *
     * @experimental APIs related to application bootstrap are currently under review.
     */PlatformRef.prototype.bootstrapModuleFactory=function(moduleFactory,options){var _this=this;// Note: We need to create the NgZone _before_ we instantiate the module,
// as instantiating the module creates some providers eagerly.
// So we create a mini parent injector that just contains the new NgZone and
// pass that as parent to the NgModuleFactory.
var ngZoneOption=options?options.ngZone:undefined;var ngZone=getNgZone(ngZoneOption);var providers=[{provide:NgZone,useValue:ngZone}];// Attention: Don't use ApplicationRef.run here,
// as we want to be sure that all possible constructor calls are inside `ngZone.run`!
return ngZone.run(function(){var ngZoneInjector=Injector.create({providers:providers,parent:_this.injector,name:moduleFactory.moduleType.name});var moduleRef=moduleFactory.create(ngZoneInjector);var exceptionHandler=moduleRef.injector.get(ErrorHandler,null);if(!exceptionHandler){throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');}moduleRef.onDestroy(function(){return remove(_this._modules,moduleRef);});ngZone.runOutsideAngular(function(){return ngZone.onError.subscribe({next:function next(error){exceptionHandler.handleError(error);}});});return _callAndReportToErrorHandler(exceptionHandler,ngZone,function(){var initStatus=moduleRef.injector.get(ApplicationInitStatus);initStatus.runInitializers();return initStatus.donePromise.then(function(){_this._moduleDoBootstrap(moduleRef);return moduleRef;});});});};/**
     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.
     *
     * @usageNotes
     * ### Simple Example
     *
     * ```typescript
     * @NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * let moduleRef = platformBrowser().bootstrapModule(MyModule);
     * ```
     *
     */PlatformRef.prototype.bootstrapModule=function(moduleType,compilerOptions){var _this=this;if(compilerOptions===void 0){compilerOptions=[];}var options=optionsReducer({},compilerOptions);return compileNgModuleFactory(this.injector,options,moduleType).then(function(moduleFactory){return _this.bootstrapModuleFactory(moduleFactory,options);});};PlatformRef.prototype._moduleDoBootstrap=function(moduleRef){var appRef=moduleRef.injector.get(ApplicationRef);if(moduleRef._bootstrapComponents.length>0){moduleRef._bootstrapComponents.forEach(function(f){return appRef.bootstrap(f);});}else if(moduleRef.instance.ngDoBootstrap){moduleRef.instance.ngDoBootstrap(appRef);}else{throw new Error("The module "+stringify(moduleRef.instance.constructor)+" was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. "+"Please define one of these.");}this._modules.push(moduleRef);};/**
     * Register a listener to be called when the platform is disposed.
     */PlatformRef.prototype.onDestroy=function(callback){this._destroyListeners.push(callback);};Object.defineProperty(PlatformRef.prototype,"injector",{/**
         * Retrieve the platform {@link Injector}, which is the parent injector for
         * every Angular application on the page and provides singleton providers.
         */get:function get(){return this._injector;},enumerable:true,configurable:true});/**
     * Destroy the Angular platform and all Angular applications on the page.
     */PlatformRef.prototype.destroy=function(){if(this._destroyed){throw new Error('The platform has already been destroyed!');}this._modules.slice().forEach(function(module){return module.destroy();});this._destroyListeners.forEach(function(listener){return listener();});this._destroyed=true;};Object.defineProperty(PlatformRef.prototype,"destroyed",{get:function get(){return this._destroyed;},enumerable:true,configurable:true});PlatformRef=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes",[Injector])],PlatformRef);return PlatformRef;}();function getNgZone(ngZoneOption){var ngZone;if(ngZoneOption==='noop'){ngZone=new NoopNgZone();}else{ngZone=(ngZoneOption==='zone.js'?undefined:ngZoneOption)||new NgZone({enableLongStackTrace:isDevMode()});}return ngZone;}function _callAndReportToErrorHandler(errorHandler,ngZone,callback){try{var result=callback();if(isPromise(result)){return result.catch(function(e){ngZone.runOutsideAngular(function(){return errorHandler.handleError(e);});// rethrow as the exception handler might not do it
throw e;});}return result;}catch(e){ngZone.runOutsideAngular(function(){return errorHandler.handleError(e);});// rethrow as the exception handler might not do it
throw e;}}function optionsReducer(dst,objs){if(Array.isArray(objs)){dst=objs.reduce(optionsReducer,dst);}else{dst=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},dst,objs);}return dst;}/**
 * A reference to an Angular application running on a page.
 */var ApplicationRef=/** @class */function(){/** @internal */function ApplicationRef(_zone,_console,_injector,_exceptionHandler,_componentFactoryResolver,_initStatus){var _this=this;this._zone=_zone;this._console=_console;this._injector=_injector;this._exceptionHandler=_exceptionHandler;this._componentFactoryResolver=_componentFactoryResolver;this._initStatus=_initStatus;this._bootstrapListeners=[];this._views=[];this._runningTick=false;this._enforceNoNewChanges=false;this._stable=true;/**
         * Get a list of component types registered to this application.
         * This list is populated even before the component is created.
         */this.componentTypes=[];/**
         * Get a list of components registered to this application.
         */this.components=[];this._enforceNoNewChanges=isDevMode();this._zone.onMicrotaskEmpty.subscribe({next:function next(){_this._zone.run(function(){_this.tick();});}});var isCurrentlyStable=new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function(observer){_this._stable=_this._zone.isStable&&!_this._zone.hasPendingMacrotasks&&!_this._zone.hasPendingMicrotasks;_this._zone.runOutsideAngular(function(){observer.next(_this._stable);observer.complete();});});var isStable=new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function(observer){// Create the subscription to onStable outside the Angular Zone so that
// the callback is run outside the Angular Zone.
var stableSub;_this._zone.runOutsideAngular(function(){stableSub=_this._zone.onStable.subscribe(function(){NgZone.assertNotInAngularZone();// Check whether there are no pending macro/micro tasks in the next tick
// to allow for NgZone to update the state.
scheduleMicroTask(function(){if(!_this._stable&&!_this._zone.hasPendingMacrotasks&&!_this._zone.hasPendingMicrotasks){_this._stable=true;observer.next(true);}});});});var unstableSub=_this._zone.onUnstable.subscribe(function(){NgZone.assertInAngularZone();if(_this._stable){_this._stable=false;_this._zone.runOutsideAngular(function(){observer.next(false);});}});return function(){stableSub.unsubscribe();unstableSub.unsubscribe();};});this.isStable=Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(isCurrentlyStable,isStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["share"])()));}ApplicationRef_1=ApplicationRef;/**
     * Bootstrap a new component at the root level of the application.
     *
     * @usageNotes
     * ### Bootstrap process
     *
     * When bootstrapping a new root component into an application, Angular mounts the
     * specified application component onto DOM elements identified by the componentType's
     * selector and kicks off automatic change detection to finish initializing the component.
     *
     * Optionally, a component can be mounted onto a DOM element that does not match the
     * componentType's selector.
     *
     * ### Example
     * {@example core/ts/platform/platform.ts region='longform'}
     */ApplicationRef.prototype.bootstrap=function(componentOrFactory,rootSelectorOrNode){var _this=this;if(!this._initStatus.done){throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');}var componentFactory;if(componentOrFactory instanceof ComponentFactory){componentFactory=componentOrFactory;}else{componentFactory=this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);}this.componentTypes.push(componentFactory.componentType);// Create a factory associated with the current module if it's not bound to some other
var ngModule=componentFactory instanceof ComponentFactoryBoundToModule?null:this._injector.get(NgModuleRef);var selectorOrNode=rootSelectorOrNode||componentFactory.selector;var compRef=componentFactory.create(Injector.NULL,[],selectorOrNode,ngModule);compRef.onDestroy(function(){_this._unloadComponent(compRef);});var testability=compRef.injector.get(Testability,null);if(testability){compRef.injector.get(TestabilityRegistry).registerApplication(compRef.location.nativeElement,testability);}this._loadComponent(compRef);if(isDevMode()){this._console.log("Angular is running in the development mode. Call enableProdMode() to enable the production mode.");}return compRef;};/**
     * Invoke this method to explicitly process change detection and its side-effects.
     *
     * In development mode, `tick()` also performs a second change detection cycle to ensure that no
     * further changes are detected. If additional changes are picked up during this second cycle,
     * bindings in the app have side-effects that cannot be resolved in a single change detection
     * pass.
     * In this case, Angular throws an error, since an Angular application can only have one change
     * detection pass during which all change detection must complete.
     */ApplicationRef.prototype.tick=function(){var _this=this;if(this._runningTick){throw new Error('ApplicationRef.tick is called recursively');}var scope=ApplicationRef_1._tickScope();try{this._runningTick=true;this._views.forEach(function(view){return view.detectChanges();});if(this._enforceNoNewChanges){this._views.forEach(function(view){return view.checkNoChanges();});}}catch(e){// Attention: Don't rethrow as it could cancel subscriptions to Observables!
this._zone.runOutsideAngular(function(){return _this._exceptionHandler.handleError(e);});}finally{this._runningTick=false;wtfLeave(scope);}};/**
     * Attaches a view so that it will be dirty checked.
     * The view will be automatically detached when it is destroyed.
     * This will throw if the view is already attached to a ViewContainer.
     */ApplicationRef.prototype.attachView=function(viewRef){var view=viewRef;this._views.push(view);view.attachToAppRef(this);};/**
     * Detaches a view from dirty checking again.
     */ApplicationRef.prototype.detachView=function(viewRef){var view=viewRef;remove(this._views,view);view.detachFromAppRef();};ApplicationRef.prototype._loadComponent=function(componentRef){this.attachView(componentRef.hostView);this.tick();this.components.push(componentRef);// Get the listeners lazily to prevent DI cycles.
var listeners=this._injector.get(APP_BOOTSTRAP_LISTENER,[]).concat(this._bootstrapListeners);listeners.forEach(function(listener){return listener(componentRef);});};ApplicationRef.prototype._unloadComponent=function(componentRef){this.detachView(componentRef.hostView);remove(this.components,componentRef);};/** @internal */ApplicationRef.prototype.ngOnDestroy=function(){// TODO(alxhub): Dispose of the NgZone.
this._views.slice().forEach(function(view){return view.destroy();});};Object.defineProperty(ApplicationRef.prototype,"viewCount",{/**
         * Returns the number of attached views.
         */get:function get(){return this._views.length;},enumerable:true,configurable:true});var ApplicationRef_1;/** @internal */ApplicationRef._tickScope=wtfCreateScope('ApplicationRef#tick()');ApplicationRef=ApplicationRef_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes",[NgZone,Console,Injector,ErrorHandler,ComponentFactoryResolver,ApplicationInitStatus])],ApplicationRef);return ApplicationRef;}();function remove(list,el){var index=list.indexOf(el);if(index>-1){list.splice(index,1);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Used to load ng module factories.
 *
 */var NgModuleFactoryLoader=/** @class */function(){function NgModuleFactoryLoader(){}return NgModuleFactoryLoader;}();var moduleFactories=new Map();/**
 * Registers a loaded module. Should only be called from generated NgModuleFactory code.
 * @experimental
 */function registerModuleFactory(id,factory){var existing=moduleFactories.get(id);if(existing){throw new Error("Duplicate module registered for "+id+" - "+existing.moduleType.name+" vs "+factory.moduleType.name);}moduleFactories.set(id,factory);}/**
 * Returns the NgModuleFactory with the given id, if it exists and has been loaded.
 * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module
 * cannot be found.
 * @experimental
 */function getModuleFactory(id){var factory=moduleFactories.get(id);if(!factory)throw new Error("No module with ID "+id+" loaded");return factory;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An unmodifiable list of items that Angular keeps up to date when the state
 * of the application changes.
 *
 * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}
 * provide.
 *
 * Implements an iterable interface, therefore it can be used in both ES6
 * javascript `for (var i of items)` loops as well as in Angular templates with
 * `*ngFor="let i of myList"`.
 *
 * Changes can be observed by subscribing to the changes `Observable`.
 *
 * NOTE: In the future this class will implement an `Observable` interface.
 *
 * @usageNotes
 * ### Example
 * ```typescript
 * @Component({...})
 * class Container {
 *   @ViewChildren(Item) items:QueryList<Item>;
 * }
 * ```
 */var QueryList$1=/** @class */function(){function QueryList(){this.dirty=true;this._results=[];this.changes=new EventEmitter();this.length=0;}/**
     * See
     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
     */QueryList.prototype.map=function(fn){return this._results.map(fn);};/**
     * See
     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
     */QueryList.prototype.filter=function(fn){return this._results.filter(fn);};/**
     * See
     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
     */QueryList.prototype.find=function(fn){return this._results.find(fn);};/**
     * See
     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
     */QueryList.prototype.reduce=function(fn,init){return this._results.reduce(fn,init);};/**
     * See
     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
     */QueryList.prototype.forEach=function(fn){this._results.forEach(fn);};/**
     * See
     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
     */QueryList.prototype.some=function(fn){return this._results.some(fn);};QueryList.prototype.toArray=function(){return this._results.slice();};QueryList.prototype[getSymbolIterator()]=function(){return this._results[getSymbolIterator()]();};QueryList.prototype.toString=function(){return this._results.toString();};QueryList.prototype.reset=function(res){this._results=flatten$2(res);this.dirty=false;this.length=this._results.length;this.last=this._results[this.length-1];this.first=this._results[0];};QueryList.prototype.notifyOnChanges=function(){this.changes.emit(this);};/** internal */QueryList.prototype.setDirty=function(){this.dirty=true;};/** internal */QueryList.prototype.destroy=function(){this.changes.complete();this.changes.unsubscribe();};return QueryList;}();function flatten$2(list){return list.reduce(function(flat,item){var flatItem=Array.isArray(item)?flatten$2(item):item;return flat.concat(flatItem);},[]);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _SEPARATOR='#';var FACTORY_CLASS_SUFFIX='NgFactory';/**
 * Configuration for SystemJsNgModuleLoader.
 * token.
 *
 * @experimental
 */var SystemJsNgModuleLoaderConfig=/** @class */function(){function SystemJsNgModuleLoaderConfig(){}return SystemJsNgModuleLoaderConfig;}();var DEFAULT_CONFIG={factoryPathPrefix:'',factoryPathSuffix:'.ngfactory'};/**
 * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory
 * @experimental
 */var SystemJsNgModuleLoader=/** @class */function(){function SystemJsNgModuleLoader(_compiler,config){this._compiler=_compiler;this._config=config||DEFAULT_CONFIG;}SystemJsNgModuleLoader.prototype.load=function(path){var offlineMode=this._compiler instanceof Compiler;return offlineMode?this.loadFactory(path):this.loadAndCompile(path);};SystemJsNgModuleLoader.prototype.loadAndCompile=function(path){var _this=this;var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(path.split(_SEPARATOR),2),module=_a[0],exportName=_a[1];if(exportName===undefined){exportName='default';}return __webpack_require__(464)(module).then(function(module){return module[exportName];}).then(function(type){return checkNotEmpty(type,module,exportName);}).then(function(type){return _this._compiler.compileModuleAsync(type);});};SystemJsNgModuleLoader.prototype.loadFactory=function(path){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(path.split(_SEPARATOR),2),module=_a[0],exportName=_a[1];var factoryClassSuffix=FACTORY_CLASS_SUFFIX;if(exportName===undefined){exportName='default';factoryClassSuffix='';}return __webpack_require__(464)(this._config.factoryPathPrefix+module+this._config.factoryPathSuffix).then(function(module){return module[exportName+factoryClassSuffix];}).then(function(factory){return checkNotEmpty(factory,module,exportName);});};SystemJsNgModuleLoader=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Injectable(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1,Optional()),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes",[Compiler,SystemJsNgModuleLoaderConfig])],SystemJsNgModuleLoader);return SystemJsNgModuleLoader;}();function checkNotEmpty(value,modulePath,exportName){if(!value){throw new Error("Cannot find '"+exportName+"' in '"+modulePath+"'");}return value;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents a container where one or more views can be attached to a component.
 *
 * Can contain *host views* (created by instantiating a
 * component with the `createComponent()` method), and *embedded views*
 * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).
 *
 * A view container instance can contain other view containers,
 * creating a [view hierarchy](guide/glossary#view-tree).
 *
 * @see `ComponentRef`
 * @see `EmbeddedViewRef`
 *
 */var ViewContainerRef=/** @class */function(){function ViewContainerRef(){}/** @internal */ViewContainerRef.__NG_ELEMENT_ID__=function(){return R3_VIEW_CONTAINER_REF_FACTORY$1(ViewContainerRef,ElementRef);};return ViewContainerRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Base class for Angular Views, provides change detection functionality.
 * A change-detection tree collects all views that are to be checked for changes.
 * Use the methods to add and remove views from the tree, initiate change-detection,
 * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.
 *
 * @usageNotes
 *
 * The following examples demonstrate how to modify default change-detection behavior
 * to perform explicit detection when needed.
 *
 * ### Use `markForCheck()` with `CheckOnce` strategy
 *
 * The following example sets the `OnPush` change-detection strategy for a component
 * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check
 * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).
 *
 * <code-example path="core/ts/change_detect/change-detection.ts"
 * region="mark-for-check"></code-example>
 *
 * ### Detach change detector to limit how often check occurs
 *
 * The following example defines a component with a large list of read-only data
 * that is expected to change constantly, many times per second.
 * To improve performance, we want to check and update the list
 * less often than the changes actually occur. To do that, we detach
 * the component's change detector and perform an explicit local check every five seconds.
 *
 * <code-example path="core/ts/change_detect/change-detection.ts" region="detach"></code-example>
 *
 *
 * ### Reattaching a detached component
 *
 * The following example creates a component displaying live data.
 * The component detaches its change detector from the main change detector tree
 * when the `live` property is set to false, and reattaches it when the property
 * becomes true.
 *
 * <code-example path="core/ts/change_detect/change-detection.ts" region="reattach"></code-example>
 *
 */var ChangeDetectorRef=/** @class */function(){function ChangeDetectorRef(){}/** @internal */ChangeDetectorRef.__NG_ELEMENT_ID__=function(){return R3_CHANGE_DETECTOR_REF_FACTORY$1();};return ChangeDetectorRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents an Angular [view](guide/glossary#view),
 * specifically the [host view](guide/glossary#view-tree) that is defined by a component.
 * Also serves as the base class
 * that adds destroy methods for [embedded views](guide/glossary#view-tree).
 *
 * @see `EmbeddedViewRef`
 */var ViewRef$1=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ViewRef,_super);function ViewRef(){return _super!==null&&_super.apply(this,arguments)||this;}return ViewRef;}(ChangeDetectorRef);/**
 * Represents an Angular [view](guide/glossary#view) in a view container.
 * An [embedded view](guide/glossary#view-tree) can be referenced from a component
 * other than the hosting component whose template defines it, or it can be defined
 * independently by a `TemplateRef`.
 *
 * Properties of elements in a view can change, but the structure (number and order) of elements in
 * a view cannot. Change the structure of elements by inserting, moving, or
 * removing nested views in a view container.
 *
 * @see `ViewContainerRef`
 *
 * @usageNotes
 *
 * The following template breaks down into two separate `TemplateRef` instances,
 * an outer one and an inner one.
 *
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <li *ngFor="let  item of items">{{item}}</li>
 * </ul>
 * ```
 *
 * This is the outer `TemplateRef`:
 *
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <ng-template ngFor let-item [ngForOf]="items"></ng-template>
 * </ul>
 * ```
 *
 * This is the inner `TemplateRef`:
 *
 * ```
 *   <li>{{item}}</li>
 * ```
 *
 * The outer and inner `TemplateRef` instances are assembled into views as follows:
 *
 * ```
 * <!-- ViewRef: outer-0 -->
 * Count: 2
 * <ul>
 *   <ng-template view-container-ref></ng-template>
 *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->
 *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->
 * </ul>
 * <!-- /ViewRef: outer-0 -->
 * ```
 * @experimental
 */var EmbeddedViewRef=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(EmbeddedViewRef,_super);function EmbeddedViewRef(){return _super!==null&&_super.apply(this,arguments)||this;}return EmbeddedViewRef;}(ViewRef$1);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EventListener=/** @class */function(){function EventListener(name,callback){this.name=name;this.callback=callback;}return EventListener;}();/**
 * @experimental All debugging apis are currently experimental.
 */var DebugNode=/** @class */function(){function DebugNode(nativeNode,parent,_debugContext){this.nativeNode=nativeNode;this._debugContext=_debugContext;this.listeners=[];this.parent=null;if(parent&&parent instanceof DebugElement){parent.addChild(this);}}Object.defineProperty(DebugNode.prototype,"injector",{get:function get(){return this._debugContext.injector;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"componentInstance",{get:function get(){return this._debugContext.component;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"context",{get:function get(){return this._debugContext.context;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"references",{get:function get(){return this._debugContext.references;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"providerTokens",{get:function get(){return this._debugContext.providerTokens;},enumerable:true,configurable:true});return DebugNode;}();/**
 * @experimental All debugging apis are currently experimental.
 */var DebugElement=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DebugElement,_super);function DebugElement(nativeNode,parent,_debugContext){var _this=_super.call(this,nativeNode,parent,_debugContext)||this;_this.properties={};_this.attributes={};_this.classes={};_this.styles={};_this.childNodes=[];_this.nativeElement=nativeNode;return _this;}DebugElement.prototype.addChild=function(child){if(child){this.childNodes.push(child);child.parent=this;}};DebugElement.prototype.removeChild=function(child){var childIndex=this.childNodes.indexOf(child);if(childIndex!==-1){child.parent=null;this.childNodes.splice(childIndex,1);}};DebugElement.prototype.insertChildrenAfter=function(child,newChildren){var _this=this;var _a;var siblingIndex=this.childNodes.indexOf(child);if(siblingIndex!==-1){(_a=this.childNodes).splice.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([siblingIndex+1,0],newChildren));newChildren.forEach(function(c){if(c.parent){c.parent.removeChild(c);}c.parent=_this;});}};DebugElement.prototype.insertBefore=function(refChild,newChild){var refIndex=this.childNodes.indexOf(refChild);if(refIndex===-1){this.addChild(newChild);}else{if(newChild.parent){newChild.parent.removeChild(newChild);}newChild.parent=this;this.childNodes.splice(refIndex,0,newChild);}};DebugElement.prototype.query=function(predicate){var results=this.queryAll(predicate);return results[0]||null;};DebugElement.prototype.queryAll=function(predicate){var matches=[];_queryElementChildren(this,predicate,matches);return matches;};DebugElement.prototype.queryAllNodes=function(predicate){var matches=[];_queryNodeChildren(this,predicate,matches);return matches;};Object.defineProperty(DebugElement.prototype,"children",{get:function get(){return this.childNodes.filter(function(node){return node instanceof DebugElement;});},enumerable:true,configurable:true});DebugElement.prototype.triggerEventHandler=function(eventName,eventObj){this.listeners.forEach(function(listener){if(listener.name==eventName){listener.callback(eventObj);}});};return DebugElement;}(DebugNode);/**
 * @experimental
 */function asNativeElements(debugEls){return debugEls.map(function(el){return el.nativeElement;});}function _queryElementChildren(element,predicate,matches){element.childNodes.forEach(function(node){if(node instanceof DebugElement){if(predicate(node)){matches.push(node);}_queryElementChildren(node,predicate,matches);}});}function _queryNodeChildren(parentNode,predicate,matches){if(parentNode instanceof DebugElement){parentNode.childNodes.forEach(function(node){if(predicate(node)){matches.push(node);}if(node instanceof DebugElement){_queryNodeChildren(node,predicate,matches);}});}}// Need to keep the nodes in a global Map so that multiple angular apps are supported.
var _nativeNodeToDebugNode=new Map();/**
 * @experimental
 */function getDebugNode(nativeNode){return _nativeNodeToDebugNode.get(nativeNode)||null;}function indexDebugNode(node){_nativeNodeToDebugNode.set(node.nativeNode,node);}function removeDebugNodeFromIndex(node){_nativeNodeToDebugNode.delete(node.nativeNode);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var DefaultIterableDifferFactory=/** @class */function(){function DefaultIterableDifferFactory(){}DefaultIterableDifferFactory.prototype.supports=function(obj){return isListLikeIterable(obj);};DefaultIterableDifferFactory.prototype.create=function(trackByFn){return new DefaultIterableDiffer(trackByFn);};return DefaultIterableDifferFactory;}();var trackByIdentity=function trackByIdentity(index,item){return item;};/**
 * @deprecated v4.0.0 - Should not be part of public API.
 */var DefaultIterableDiffer=/** @class */function(){function DefaultIterableDiffer(trackByFn){this.length=0;// Keeps track of the used records at any point in time (during & across `_check()` calls)
this._linkedRecords=null;// Keeps track of the removed records at any point in time during `_check()` calls.
this._unlinkedRecords=null;this._previousItHead=null;this._itHead=null;this._itTail=null;this._additionsHead=null;this._additionsTail=null;this._movesHead=null;this._movesTail=null;this._removalsHead=null;this._removalsTail=null;// Keeps track of records where custom track by is the same, but item identity has changed
this._identityChangesHead=null;this._identityChangesTail=null;this._trackByFn=trackByFn||trackByIdentity;}DefaultIterableDiffer.prototype.forEachItem=function(fn){var record;for(record=this._itHead;record!==null;record=record._next){fn(record);}};DefaultIterableDiffer.prototype.forEachOperation=function(fn){var nextIt=this._itHead;var nextRemove=this._removalsHead;var addRemoveOffset=0;var moveOffsets=null;while(nextIt||nextRemove){// Figure out which is the next record to process
// Order: remove, add, move
var record=!nextRemove||nextIt&&nextIt.currentIndex<getPreviousIndex(nextRemove,addRemoveOffset,moveOffsets)?nextIt:nextRemove;var adjPreviousIndex=getPreviousIndex(record,addRemoveOffset,moveOffsets);var currentIndex=record.currentIndex;// consume the item, and adjust the addRemoveOffset and update moveDistance if necessary
if(record===nextRemove){addRemoveOffset--;nextRemove=nextRemove._nextRemoved;}else{nextIt=nextIt._next;if(record.previousIndex==null){addRemoveOffset++;}else{// INVARIANT:  currentIndex < previousIndex
if(!moveOffsets)moveOffsets=[];var localMovePreviousIndex=adjPreviousIndex-addRemoveOffset;var localCurrentIndex=currentIndex-addRemoveOffset;if(localMovePreviousIndex!=localCurrentIndex){for(var i=0;i<localMovePreviousIndex;i++){var offset=i<moveOffsets.length?moveOffsets[i]:moveOffsets[i]=0;var index=offset+i;if(localCurrentIndex<=index&&index<localMovePreviousIndex){moveOffsets[i]=offset+1;}}var previousIndex=record.previousIndex;moveOffsets[previousIndex]=localCurrentIndex-localMovePreviousIndex;}}}if(adjPreviousIndex!==currentIndex){fn(record,adjPreviousIndex,currentIndex);}}};DefaultIterableDiffer.prototype.forEachPreviousItem=function(fn){var record;for(record=this._previousItHead;record!==null;record=record._nextPrevious){fn(record);}};DefaultIterableDiffer.prototype.forEachAddedItem=function(fn){var record;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}};DefaultIterableDiffer.prototype.forEachMovedItem=function(fn){var record;for(record=this._movesHead;record!==null;record=record._nextMoved){fn(record);}};DefaultIterableDiffer.prototype.forEachRemovedItem=function(fn){var record;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}};DefaultIterableDiffer.prototype.forEachIdentityChange=function(fn){var record;for(record=this._identityChangesHead;record!==null;record=record._nextIdentityChange){fn(record);}};DefaultIterableDiffer.prototype.diff=function(collection){if(collection==null)collection=[];if(!isListLikeIterable(collection)){throw new Error("Error trying to diff '"+stringify(collection)+"'. Only arrays and iterables are allowed");}if(this.check(collection)){return this;}else{return null;}};DefaultIterableDiffer.prototype.onDestroy=function(){};DefaultIterableDiffer.prototype.check=function(collection){var _this=this;this._reset();var record=this._itHead;var mayBeDirty=false;var index;var item;var itemTrackBy;if(Array.isArray(collection)){this.length=collection.length;for(var index_1=0;index_1<this.length;index_1++){item=collection[index_1];itemTrackBy=this._trackByFn(index_1,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=this._mismatch(record,item,itemTrackBy,index_1);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=this._verifyReinsertion(record,item,itemTrackBy,index_1);}if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);}record=record._next;}}else{index=0;iterateListLike(collection,function(item){itemTrackBy=_this._trackByFn(index,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=_this._mismatch(record,item,itemTrackBy,index);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=_this._verifyReinsertion(record,item,itemTrackBy,index);}if(!looseIdentical(record.item,item))_this._addIdentityChange(record,item);}record=record._next;index++;});this.length=index;}this._truncate(record);this.collection=collection;return this.isDirty;};Object.defineProperty(DefaultIterableDiffer.prototype,"isDirty",{/* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity
         * changes.
         */get:function get(){return this._additionsHead!==null||this._movesHead!==null||this._removalsHead!==null||this._identityChangesHead!==null;},enumerable:true,configurable:true});/**
     * Reset the state of the change objects to show no changes. This means set previousKey to
     * currentKey, and clear all of the queues (additions, moves, removals).
     * Set the previousIndexes of moved and added items to their currentIndexes
     * Reset the list of additions, moves and removals
     *
     * @internal
     */DefaultIterableDiffer.prototype._reset=function(){if(this.isDirty){var record=void 0;var nextRecord=void 0;for(record=this._previousItHead=this._itHead;record!==null;record=record._next){record._nextPrevious=record._next;}for(record=this._additionsHead;record!==null;record=record._nextAdded){record.previousIndex=record.currentIndex;}this._additionsHead=this._additionsTail=null;for(record=this._movesHead;record!==null;record=nextRecord){record.previousIndex=record.currentIndex;nextRecord=record._nextMoved;}this._movesHead=this._movesTail=null;this._removalsHead=this._removalsTail=null;this._identityChangesHead=this._identityChangesTail=null;// TODO(vicb): when assert gets supported
// assert(!this.isDirty);
}};/**
     * This is the core function which handles differences between collections.
     *
     * - `record` is the record which we saw at this position last time. If null then it is a new
     *   item.
     * - `item` is the current item in the collection
     * - `index` is the position of the item in the collection
     *
     * @internal
     */DefaultIterableDiffer.prototype._mismatch=function(record,item,itemTrackBy,index){// The previous record after which we will append the current one.
var previousRecord;if(record===null){previousRecord=this._itTail;}else{previousRecord=record._prev;// Remove the record from the collection since we know it does not match the item.
this._remove(record);}// Attempt to see if we have seen the item before.
record=this._linkedRecords===null?null:this._linkedRecords.get(itemTrackBy,index);if(record!==null){// We have seen this before, we need to move it forward in the collection.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._moveAfter(record,previousRecord,index);}else{// Never seen it, check evicted list.
record=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy,null);if(record!==null){// It is an item which we have evicted earlier: reinsert it back into the list.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._reinsertAfter(record,previousRecord,index);}else{// It is a new item: add it.
record=this._addAfter(new IterableChangeRecord_(item,itemTrackBy),previousRecord,index);}}return record;};/**
     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
     *
     * Use case: `[a, a]` => `[b, a, a]`
     *
     * If we did not have this check then the insertion of `b` would:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) leave `a` at index `1` as is. <-- this is wrong!
     *   3) reinsert `a` at index 2. <-- this is wrong!
     *
     * The correct behavior is:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) reinsert `a` at index 1.
     *   3) move `a` at from `1` to `2`.
     *
     *
     * Double check that we have not evicted a duplicate item. We need to check if the item type may
     * have already been removed:
     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
     * at the end.
     *
     * @internal
     */DefaultIterableDiffer.prototype._verifyReinsertion=function(record,item,itemTrackBy,index){var reinsertRecord=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy,null);if(reinsertRecord!==null){record=this._reinsertAfter(reinsertRecord,record._prev,index);}else if(record.currentIndex!=index){record.currentIndex=index;this._addToMoves(record,index);}return record;};/**
     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection
     *
     * - `record` The first excess {@link IterableChangeRecord_}.
     *
     * @internal
     */DefaultIterableDiffer.prototype._truncate=function(record){// Anything after that needs to be removed;
while(record!==null){var nextRecord=record._next;this._addToRemovals(this._unlink(record));record=nextRecord;}if(this._unlinkedRecords!==null){this._unlinkedRecords.clear();}if(this._additionsTail!==null){this._additionsTail._nextAdded=null;}if(this._movesTail!==null){this._movesTail._nextMoved=null;}if(this._itTail!==null){this._itTail._next=null;}if(this._removalsTail!==null){this._removalsTail._nextRemoved=null;}if(this._identityChangesTail!==null){this._identityChangesTail._nextIdentityChange=null;}};/** @internal */DefaultIterableDiffer.prototype._reinsertAfter=function(record,prevRecord,index){if(this._unlinkedRecords!==null){this._unlinkedRecords.remove(record);}var prev=record._prevRemoved;var next=record._nextRemoved;if(prev===null){this._removalsHead=next;}else{prev._nextRemoved=next;}if(next===null){this._removalsTail=prev;}else{next._prevRemoved=prev;}this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;};/** @internal */DefaultIterableDiffer.prototype._moveAfter=function(record,prevRecord,index){this._unlink(record);this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;};/** @internal */DefaultIterableDiffer.prototype._addAfter=function(record,prevRecord,index){this._insertAfter(record,prevRecord,index);if(this._additionsTail===null){// TODO(vicb):
// assert(this._additionsHead === null);
this._additionsTail=this._additionsHead=record;}else{// TODO(vicb):
// assert(_additionsTail._nextAdded === null);
// assert(record._nextAdded === null);
this._additionsTail=this._additionsTail._nextAdded=record;}return record;};/** @internal */DefaultIterableDiffer.prototype._insertAfter=function(record,prevRecord,index){// TODO(vicb):
// assert(record != prevRecord);
// assert(record._next === null);
// assert(record._prev === null);
var next=prevRecord===null?this._itHead:prevRecord._next;// TODO(vicb):
// assert(next != record);
// assert(prevRecord != record);
record._next=next;record._prev=prevRecord;if(next===null){this._itTail=record;}else{next._prev=record;}if(prevRecord===null){this._itHead=record;}else{prevRecord._next=record;}if(this._linkedRecords===null){this._linkedRecords=new _DuplicateMap();}this._linkedRecords.put(record);record.currentIndex=index;return record;};/** @internal */DefaultIterableDiffer.prototype._remove=function(record){return this._addToRemovals(this._unlink(record));};/** @internal */DefaultIterableDiffer.prototype._unlink=function(record){if(this._linkedRecords!==null){this._linkedRecords.remove(record);}var prev=record._prev;var next=record._next;// TODO(vicb):
// assert((record._prev = null) === null);
// assert((record._next = null) === null);
if(prev===null){this._itHead=next;}else{prev._next=next;}if(next===null){this._itTail=prev;}else{next._prev=prev;}return record;};/** @internal */DefaultIterableDiffer.prototype._addToMoves=function(record,toIndex){// TODO(vicb):
// assert(record._nextMoved === null);
if(record.previousIndex===toIndex){return record;}if(this._movesTail===null){// TODO(vicb):
// assert(_movesHead === null);
this._movesTail=this._movesHead=record;}else{// TODO(vicb):
// assert(_movesTail._nextMoved === null);
this._movesTail=this._movesTail._nextMoved=record;}return record;};DefaultIterableDiffer.prototype._addToRemovals=function(record){if(this._unlinkedRecords===null){this._unlinkedRecords=new _DuplicateMap();}this._unlinkedRecords.put(record);record.currentIndex=null;record._nextRemoved=null;if(this._removalsTail===null){// TODO(vicb):
// assert(_removalsHead === null);
this._removalsTail=this._removalsHead=record;record._prevRemoved=null;}else{// TODO(vicb):
// assert(_removalsTail._nextRemoved === null);
// assert(record._nextRemoved === null);
record._prevRemoved=this._removalsTail;this._removalsTail=this._removalsTail._nextRemoved=record;}return record;};/** @internal */DefaultIterableDiffer.prototype._addIdentityChange=function(record,item){record.item=item;if(this._identityChangesTail===null){this._identityChangesTail=this._identityChangesHead=record;}else{this._identityChangesTail=this._identityChangesTail._nextIdentityChange=record;}return record;};return DefaultIterableDiffer;}();var IterableChangeRecord_=/** @class */function(){function IterableChangeRecord_(item,trackById){this.item=item;this.trackById=trackById;this.currentIndex=null;this.previousIndex=null;/** @internal */this._nextPrevious=null;/** @internal */this._prev=null;/** @internal */this._next=null;/** @internal */this._prevDup=null;/** @internal */this._nextDup=null;/** @internal */this._prevRemoved=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextAdded=null;/** @internal */this._nextMoved=null;/** @internal */this._nextIdentityChange=null;}return IterableChangeRecord_;}();// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item
var _DuplicateItemRecordList=/** @class */function(){function _DuplicateItemRecordList(){/** @internal */this._head=null;/** @internal */this._tail=null;}/**
     * Append the record to the list of duplicates.
     *
     * Note: by design all records in the list of duplicates hold the same value in record.item.
     */_DuplicateItemRecordList.prototype.add=function(record){if(this._head===null){this._head=this._tail=record;record._nextDup=null;record._prevDup=null;}else{// TODO(vicb):
// assert(record.item ==  _head.item ||
//       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);
this._tail._nextDup=record;record._prevDup=this._tail;record._nextDup=null;this._tail=record;}};// Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and
// IterableChangeRecord_.currentIndex >= atOrAfterIndex
_DuplicateItemRecordList.prototype.get=function(trackById,atOrAfterIndex){var record;for(record=this._head;record!==null;record=record._nextDup){if((atOrAfterIndex===null||atOrAfterIndex<=record.currentIndex)&&looseIdentical(record.trackById,trackById)){return record;}}return null;};/**
     * Remove one {@link IterableChangeRecord_} from the list of duplicates.
     *
     * Returns whether the list of duplicates is empty.
     */_DuplicateItemRecordList.prototype.remove=function(record){// TODO(vicb):
// assert(() {
//  // verify that the record being removed is in the list.
//  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {
//    if (identical(cursor, record)) return true;
//  }
//  return false;
//});
var prev=record._prevDup;var next=record._nextDup;if(prev===null){this._head=next;}else{prev._nextDup=next;}if(next===null){this._tail=prev;}else{next._prevDup=prev;}return this._head===null;};return _DuplicateItemRecordList;}();var _DuplicateMap=/** @class */function(){function _DuplicateMap(){this.map=new Map();}_DuplicateMap.prototype.put=function(record){var key=record.trackById;var duplicates=this.map.get(key);if(!duplicates){duplicates=new _DuplicateItemRecordList();this.map.set(key,duplicates);}duplicates.add(record);};/**
     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.
     *
     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
     * have any more `a`s needs to return the second `a`.
     */_DuplicateMap.prototype.get=function(trackById,atOrAfterIndex){var key=trackById;var recordList=this.map.get(key);return recordList?recordList.get(trackById,atOrAfterIndex):null;};/**
     * Removes a {@link IterableChangeRecord_} from the list of duplicates.
     *
     * The list of duplicates also is removed from the map if it gets empty.
     */_DuplicateMap.prototype.remove=function(record){var key=record.trackById;var recordList=this.map.get(key);// Remove the list of duplicates when it gets empty
if(recordList.remove(record)){this.map.delete(key);}return record;};Object.defineProperty(_DuplicateMap.prototype,"isEmpty",{get:function get(){return this.map.size===0;},enumerable:true,configurable:true});_DuplicateMap.prototype.clear=function(){this.map.clear();};return _DuplicateMap;}();function getPreviousIndex(item,addRemoveOffset,moveOffsets){var previousIndex=item.previousIndex;if(previousIndex===null)return previousIndex;var moveOffset=0;if(moveOffsets&&previousIndex<moveOffsets.length){moveOffset=moveOffsets[previousIndex];}return previousIndex+addRemoveOffset+moveOffset;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var DefaultKeyValueDifferFactory=/** @class */function(){function DefaultKeyValueDifferFactory(){}DefaultKeyValueDifferFactory.prototype.supports=function(obj){return obj instanceof Map||isJsObject(obj);};DefaultKeyValueDifferFactory.prototype.create=function(){return new DefaultKeyValueDiffer();};return DefaultKeyValueDifferFactory;}();var DefaultKeyValueDiffer=/** @class */function(){function DefaultKeyValueDiffer(){this._records=new Map();this._mapHead=null;// _appendAfter is used in the check loop
this._appendAfter=null;this._previousMapHead=null;this._changesHead=null;this._changesTail=null;this._additionsHead=null;this._additionsTail=null;this._removalsHead=null;this._removalsTail=null;}Object.defineProperty(DefaultKeyValueDiffer.prototype,"isDirty",{get:function get(){return this._additionsHead!==null||this._changesHead!==null||this._removalsHead!==null;},enumerable:true,configurable:true});DefaultKeyValueDiffer.prototype.forEachItem=function(fn){var record;for(record=this._mapHead;record!==null;record=record._next){fn(record);}};DefaultKeyValueDiffer.prototype.forEachPreviousItem=function(fn){var record;for(record=this._previousMapHead;record!==null;record=record._nextPrevious){fn(record);}};DefaultKeyValueDiffer.prototype.forEachChangedItem=function(fn){var record;for(record=this._changesHead;record!==null;record=record._nextChanged){fn(record);}};DefaultKeyValueDiffer.prototype.forEachAddedItem=function(fn){var record;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}};DefaultKeyValueDiffer.prototype.forEachRemovedItem=function(fn){var record;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}};DefaultKeyValueDiffer.prototype.diff=function(map){if(!map){map=new Map();}else if(!(map instanceof Map||isJsObject(map))){throw new Error("Error trying to diff '"+stringify(map)+"'. Only maps and objects are allowed");}return this.check(map)?this:null;};DefaultKeyValueDiffer.prototype.onDestroy=function(){};/**
     * Check the current state of the map vs the previous.
     * The algorithm is optimised for when the keys do no change.
     */DefaultKeyValueDiffer.prototype.check=function(map){var _this=this;this._reset();var insertBefore=this._mapHead;this._appendAfter=null;this._forEach(map,function(value,key){if(insertBefore&&insertBefore.key===key){_this._maybeAddToChanges(insertBefore,value);_this._appendAfter=insertBefore;insertBefore=insertBefore._next;}else{var record=_this._getOrCreateRecordForKey(key,value);insertBefore=_this._insertBeforeOrAppend(insertBefore,record);}});// Items remaining at the end of the list have been deleted
if(insertBefore){if(insertBefore._prev){insertBefore._prev._next=null;}this._removalsHead=insertBefore;for(var record=insertBefore;record!==null;record=record._nextRemoved){if(record===this._mapHead){this._mapHead=null;}this._records.delete(record.key);record._nextRemoved=record._next;record.previousValue=record.currentValue;record.currentValue=null;record._prev=null;record._next=null;}}// Make sure tails have no next records from previous runs
if(this._changesTail)this._changesTail._nextChanged=null;if(this._additionsTail)this._additionsTail._nextAdded=null;return this.isDirty;};/**
     * Inserts a record before `before` or append at the end of the list when `before` is null.
     *
     * Notes:
     * - This method appends at `this._appendAfter`,
     * - This method updates `this._appendAfter`,
     * - The return value is the new value for the insertion pointer.
     */DefaultKeyValueDiffer.prototype._insertBeforeOrAppend=function(before,record){if(before){var prev=before._prev;record._next=before;record._prev=prev;before._prev=record;if(prev){prev._next=record;}if(before===this._mapHead){this._mapHead=record;}this._appendAfter=before;return before;}if(this._appendAfter){this._appendAfter._next=record;record._prev=this._appendAfter;}else{this._mapHead=record;}this._appendAfter=record;return null;};DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey=function(key,value){if(this._records.has(key)){var record_1=this._records.get(key);this._maybeAddToChanges(record_1,value);var prev=record_1._prev;var next=record_1._next;if(prev){prev._next=next;}if(next){next._prev=prev;}record_1._next=null;record_1._prev=null;return record_1;}var record=new KeyValueChangeRecord_(key);this._records.set(key,record);record.currentValue=value;this._addToAdditions(record);return record;};/** @internal */DefaultKeyValueDiffer.prototype._reset=function(){if(this.isDirty){var record=void 0;// let `_previousMapHead` contain the state of the map before the changes
this._previousMapHead=this._mapHead;for(record=this._previousMapHead;record!==null;record=record._next){record._nextPrevious=record._next;}// Update `record.previousValue` with the value of the item before the changes
// We need to update all changed items (that's those which have been added and changed)
for(record=this._changesHead;record!==null;record=record._nextChanged){record.previousValue=record.currentValue;}for(record=this._additionsHead;record!=null;record=record._nextAdded){record.previousValue=record.currentValue;}this._changesHead=this._changesTail=null;this._additionsHead=this._additionsTail=null;this._removalsHead=null;}};// Add the record or a given key to the list of changes only when the value has actually changed
DefaultKeyValueDiffer.prototype._maybeAddToChanges=function(record,newValue){if(!looseIdentical(newValue,record.currentValue)){record.previousValue=record.currentValue;record.currentValue=newValue;this._addToChanges(record);}};DefaultKeyValueDiffer.prototype._addToAdditions=function(record){if(this._additionsHead===null){this._additionsHead=this._additionsTail=record;}else{this._additionsTail._nextAdded=record;this._additionsTail=record;}};DefaultKeyValueDiffer.prototype._addToChanges=function(record){if(this._changesHead===null){this._changesHead=this._changesTail=record;}else{this._changesTail._nextChanged=record;this._changesTail=record;}};/** @internal */DefaultKeyValueDiffer.prototype._forEach=function(obj,fn){if(obj instanceof Map){obj.forEach(fn);}else{Object.keys(obj).forEach(function(k){return fn(obj[k],k);});}};return DefaultKeyValueDiffer;}();var KeyValueChangeRecord_=/** @class */function(){function KeyValueChangeRecord_(key){this.key=key;this.previousValue=null;this.currentValue=null;/** @internal */this._nextPrevious=null;/** @internal */this._next=null;/** @internal */this._prev=null;/** @internal */this._nextAdded=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextChanged=null;}return KeyValueChangeRecord_;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.
 *
 */var IterableDiffers=/** @class */function(){function IterableDiffers(factories){this.factories=factories;}IterableDiffers.create=function(factories,parent){if(parent!=null){var copied=parent.factories.slice();factories=factories.concat(copied);}return new IterableDiffers(factories);};/**
     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the
     * inherited {@link IterableDiffers} instance with the provided factories and return a new
     * {@link IterableDiffers} instance.
     *
     * @usageNotes
     * ### Example
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {@link IterableDiffer} available.
     *
     * ```
     * @Component({
     *   viewProviders: [
     *     IterableDiffers.extend([new ImmutableListDiffer()])
     *   ]
     * })
     * ```
     */IterableDiffers.extend=function(factories){return{provide:IterableDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling IterableDiffers.extend inside of dependencies passed
// to
// bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend IterableDiffers without a parent injector');}return IterableDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[IterableDiffers,new SkipSelf(),new Optional()]]};};IterableDiffers.prototype.find=function(iterable){var factory=this.factories.find(function(f){return f.supports(iterable);});if(factory!=null){return factory;}else{throw new Error("Cannot find a differ supporting object '"+iterable+"' of type '"+getTypeNameForDebugging(iterable)+"'");}};IterableDiffers.ngInjectableDef=defineInjectable({providedIn:'root',factory:function factory(){return new IterableDiffers([new DefaultIterableDifferFactory()]);}});return IterableDiffers;}();function getTypeNameForDebugging(type){return type['name']||_typeof(type);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.
 *
 */var KeyValueDiffers=/** @class */function(){function KeyValueDiffers(factories){this.factories=factories;}KeyValueDiffers.create=function(factories,parent){if(parent){var copied=parent.factories.slice();factories=factories.concat(copied);}return new KeyValueDiffers(factories);};/**
     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the
     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new
     * {@link KeyValueDiffers} instance.
     *
     * @usageNotes
     * ### Example
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {@link KeyValueDiffer} available.
     *
     * ```
     * @Component({
     *   viewProviders: [
     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
     *   ]
     * })
     * ```
     */KeyValueDiffers.extend=function(factories){return{provide:KeyValueDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed
// to bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend KeyValueDiffers without a parent injector');}return KeyValueDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[KeyValueDiffers,new SkipSelf(),new Optional()]]};};KeyValueDiffers.prototype.find=function(kv){var factory=this.factories.find(function(f){return f.supports(kv);});if(factory){return factory;}throw new Error("Cannot find a differ supporting object '"+kv+"'");};return KeyValueDiffers;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Structural diffing for `Object`s and `Map`s.
 */var keyValDiff=[new DefaultKeyValueDifferFactory()];/**
 * Structural diffing for `Iterable` types such as `Array`s.
 */var iterableDiff=[new DefaultIterableDifferFactory()];var defaultIterableDiffers=new IterableDiffers(iterableDiff);var defaultKeyValueDiffers=new KeyValueDiffers(keyValDiff);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _CORE_PLATFORM_PROVIDERS=[// Set a default platform name for platforms that don't set it explicitly.
{provide:PLATFORM_ID,useValue:'unknown'},{provide:PlatformRef,deps:[Injector]},{provide:TestabilityRegistry,deps:[]},{provide:Console,deps:[]}];/**
 * This platform has to be included in any other platform
 *
 * @experimental
 */var platformCore=createPlatformFactory(null,'core',_CORE_PLATFORM_PROVIDERS);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Provide this token to set the locale of your application.
 * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,
 * DecimalPipe and PercentPipe) and by ICU expressions.
 *
 * See the [i18n guide](guide/i18n#setting-up-locale) for more information.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * import { LOCALE_ID } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */var LOCALE_ID=new InjectionToken('LocaleId');/**
 * Use this token at bootstrap to provide the content of your translation file (`xtb`,
 * `xlf` or `xlf2`) when you want to translate your application in another language.
 *
 * See the [i18n guide](guide/i18n#merge) for more information.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * import { TRANSLATIONS } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * // content of your translation file
 * const translations = '....';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: TRANSLATIONS, useValue: translations }]
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */var TRANSLATIONS=new InjectionToken('Translations');/**
 * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,
 * `xlf` or `xlf2`.
 *
 * See the [i18n guide](guide/i18n#merge) for more information.
 *
 * @usageNotes
 * ### Example
 *
 * ```typescript
 * import { TRANSLATIONS_FORMAT } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */var TRANSLATIONS_FORMAT=new InjectionToken('TranslationsFormat');/**
 * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy
 * that the compiler should use in case of missing translations:
 * - Error: throw if you have missing translations.
 * - Warning (default): show a warning in the console and/or shell.
 * - Ignore: do nothing.
 *
 * See the [i18n guide](guide/i18n#missing-translation) for more information.
 *
 * @usageNotes
 * ### Example
 * ```typescript
 * import { MissingTranslationStrategy } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   missingTranslation: MissingTranslationStrategy.Error
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */var MissingTranslationStrategy;(function(MissingTranslationStrategy){MissingTranslationStrategy[MissingTranslationStrategy["Error"]=0]="Error";MissingTranslationStrategy[MissingTranslationStrategy["Warning"]=1]="Warning";MissingTranslationStrategy[MissingTranslationStrategy["Ignore"]=2]="Ignore";})(MissingTranslationStrategy||(MissingTranslationStrategy={}));/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function _iterableDiffersFactory(){return defaultIterableDiffers;}function _keyValueDiffersFactory(){return defaultKeyValueDiffers;}function _localeFactory(locale){return locale||'en-US';}/**
 * A built-in [dependency injection token](guide/glossary#di-token)
 * that is used to configure the root injector for bootstrapping.
 */var APPLICATION_MODULE_PROVIDERS=[{provide:ApplicationRef,useClass:ApplicationRef,deps:[NgZone,Console,Injector,ErrorHandler,ComponentFactoryResolver,ApplicationInitStatus]},{provide:ApplicationInitStatus,useClass:ApplicationInitStatus,deps:[[new Optional(),APP_INITIALIZER]]},{provide:Compiler,useClass:Compiler,deps:[]},APP_ID_RANDOM_PROVIDER,{provide:IterableDiffers,useFactory:_iterableDiffersFactory,deps:[]},{provide:KeyValueDiffers,useFactory:_keyValueDiffersFactory,deps:[]},{provide:LOCALE_ID,useFactory:_localeFactory,deps:[[new Inject(LOCALE_ID),new Optional(),new SkipSelf()]]}];/**
 * Configures the root injector for an app with
 * providers of `@angular/core` dependencies that `ApplicationRef` needs
 * to bootstrap components.
 *
 * Re-exported by `BrowserModule`, which is included automatically in the root
 * `AppModule` when you create a new app with the CLI `new` command.
 *
 * @experimental
 */var ApplicationModule=/** @class */function(){// Inject ApplicationRef to make it eager...
function ApplicationModule(appRef){}ApplicationModule=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([NgModule({providers:APPLICATION_MODULE_PROVIDERS}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes",[ApplicationRef])],ApplicationModule);return ApplicationModule;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Called before each cycle of a view's check to detect whether this is in the
// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit
// lifecycle methods. Returns true if this check cycle should call lifecycle
// methods.
function shiftInitState(view,priorInitState,newInitState){// Only update the InitState if we are currently in the prior state.
// For example, only move into CallingInit if we are in BeforeInit. Only
// move into CallingContentInit if we are in CallingInit. Normally this will
// always be true because of how checkCycle is called in checkAndUpdateView.
// However, if checkAndUpdateView is called recursively or if an exception is
// thrown while checkAndUpdateView is running, checkAndUpdateView starts over
// from the beginning. This ensures the state is monotonically increasing,
// terminating in the AfterInit state, which ensures the Init methods are called
// at least once and only once.
var state=view.state;var initState=state&1792/* InitState_Mask */;if(initState===priorInitState){view.state=state&~1792/* InitState_Mask */|newInitState;view.initIndex=-1;return true;}return initState===newInitState;}// Returns true if the lifecycle init method should be called for the node with
// the given init index.
function shouldCallLifecycleInitHook(view,initState,index){if((view.state&1792/* InitState_Mask */)===initState&&view.initIndex<=index){view.initIndex=index+1;return true;}return false;}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asTextData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asElementData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asProviderData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asPureExpressionData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asQueryList(view,index){return view.nodes[index];}var DebugContext=/** @class */function(){function DebugContext(){}return DebugContext;}();/**
 * This object is used to prevent cycles in the source files and to have a place where
 * debug mode can hook it. It is lazily filled when `isDevMode` is known.
 */var Services={setCurrentNode:undefined,createRootView:undefined,createEmbeddedView:undefined,createComponentView:undefined,createNgModuleRef:undefined,overrideProvider:undefined,overrideComponentView:undefined,clearOverrides:undefined,checkAndUpdateView:undefined,checkNoChangesView:undefined,destroyView:undefined,resolveDep:undefined,createDebugContext:undefined,handleEvent:undefined,updateDirectives:undefined,updateRenderer:undefined,dirtyParentQueries:undefined};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function expressionChangedAfterItHasBeenCheckedError(context,oldValue,currValue,isFirstCheck){var msg="ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '"+oldValue+"'. Current value: '"+currValue+"'.";if(isFirstCheck){msg+=" It seems like the view has been created after its parent and its children have been dirty checked."+" Has it been created in a change detection hook ?";}return viewDebugError(msg,context);}function viewWrappedDebugError(err,context){if(!(err instanceof Error)){// errors that are not Error instances don't have a stack,
// so it is ok to wrap them into a new Error object...
err=new Error(err.toString());}_addDebugContext(err,context);return err;}function viewDebugError(msg,context){var err=new Error(msg);_addDebugContext(err,context);return err;}function _addDebugContext(err,context){err[ERROR_DEBUG_CONTEXT]=context;err[ERROR_LOGGER]=context.logError.bind(context);}function isViewDebugError(err){return!!getDebugContext(err);}function viewDestroyedError(action){return new Error("ViewDestroyedError: Attempt to use a destroyed view: "+action);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NOOP=function NOOP(){};var _tokenKeyCache=new Map();function tokenKey(token){var key=_tokenKeyCache.get(token);if(!key){key=stringify(token)+'_'+_tokenKeyCache.size;_tokenKeyCache.set(token,key);}return key;}function unwrapValue(view,nodeIdx,bindingIdx,value){if(WrappedValue.isWrapped(value)){value=WrappedValue.unwrap(value);var globalBindingIdx=view.def.nodes[nodeIdx].bindingIndex+bindingIdx;var oldValue=WrappedValue.unwrap(view.oldValues[globalBindingIdx]);view.oldValues[globalBindingIdx]=new WrappedValue(oldValue);}return value;}var UNDEFINED_RENDERER_TYPE_ID='$$undefined';var EMPTY_RENDERER_TYPE_ID='$$empty';// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createRendererType2(values){return{id:UNDEFINED_RENDERER_TYPE_ID,styles:values.styles,encapsulation:values.encapsulation,data:values.data};}var _renderCompCount$1=0;function resolveRendererType2(type){if(type&&type.id===UNDEFINED_RENDERER_TYPE_ID){// first time we see this RendererType2. Initialize it...
var isFilled=type.encapsulation!=null&&type.encapsulation!==ViewEncapsulation.None||type.styles.length||Object.keys(type.data).length;if(isFilled){type.id="c"+_renderCompCount$1++;}else{type.id=EMPTY_RENDERER_TYPE_ID;}}if(type&&type.id===EMPTY_RENDERER_TYPE_ID){type=null;}return type||null;}function checkBinding(view,def,bindingIdx,value){var oldValues=view.oldValues;if(view.state&2/* FirstCheck */||!looseIdentical(oldValues[def.bindingIndex+bindingIdx],value)){return true;}return false;}function checkAndUpdateBinding(view,def,bindingIdx,value){if(checkBinding(view,def,bindingIdx,value)){view.oldValues[def.bindingIndex+bindingIdx]=value;return true;}return false;}function checkBindingNoChanges(view,def,bindingIdx,value){var oldValue=view.oldValues[def.bindingIndex+bindingIdx];if(view.state&1/* BeforeFirstCheck */||!devModeEqual(oldValue,value)){var bindingName=def.bindings[bindingIdx].name;throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view,def.nodeIndex),bindingName+": "+oldValue,bindingName+": "+value,(view.state&1/* BeforeFirstCheck */)!==0);}}function markParentViewsForCheck(view){var currView=view;while(currView){if(currView.def.flags&2/* OnPush */){currView.state|=8/* ChecksEnabled */;}currView=currView.viewContainerParent||currView.parent;}}function markParentViewsForCheckProjectedViews(view,endView){var currView=view;while(currView&&currView!==endView){currView.state|=64/* CheckProjectedViews */;currView=currView.viewContainerParent||currView.parent;}}function dispatchEvent(view,nodeIndex,eventName,event){try{var nodeDef=view.def.nodes[nodeIndex];var startView=nodeDef.flags&33554432/* ComponentView */?asElementData(view,nodeIndex).componentView:view;markParentViewsForCheck(startView);return Services.handleEvent(view,nodeIndex,eventName,event);}catch(e){// Attention: Don't rethrow, as it would cancel Observable subscriptions!
view.root.errorHandler.handleError(e);}}function declaredViewContainer(view){if(view.parent){var parentView=view.parent;return asElementData(parentView,view.parentNodeDef.nodeIndex);}return null;}/**
 * for component views, this is the host element.
 * for embedded views, this is the index of the parent node
 * that contains the view container.
 */function viewParentEl(view){var parentView=view.parent;if(parentView){return view.parentNodeDef.parent;}else{return null;}}function renderNode(view,def){switch(def.flags&201347067/* Types */){case 1/* TypeElement */:return asElementData(view,def.nodeIndex).renderElement;case 2/* TypeText */:return asTextData(view,def.nodeIndex).renderText;}}function elementEventFullName(target,name){return target?target+":"+name:name;}function isComponentView(view){return!!view.parent&&!!(view.parentNodeDef.flags&32768/* Component */);}function isEmbeddedView(view){return!!view.parent&&!(view.parentNodeDef.flags&32768/* Component */);}function filterQueryId(queryId){return 1<<queryId%32;}function splitMatchedQueriesDsl(matchedQueriesDsl){var matchedQueries={};var matchedQueryIds=0;var references={};if(matchedQueriesDsl){matchedQueriesDsl.forEach(function(_a){var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a,2),queryId=_b[0],valueType=_b[1];if(typeof queryId==='number'){matchedQueries[queryId]=valueType;matchedQueryIds|=filterQueryId(queryId);}else{references[queryId]=valueType;}});}return{matchedQueries:matchedQueries,references:references,matchedQueryIds:matchedQueryIds};}function splitDepsDsl(deps,sourceName){return deps.map(function(value){var _a;var token;var flags;if(Array.isArray(value)){_a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(value,2),flags=_a[0],token=_a[1];}else{flags=0/* None */;token=value;}if(token&&(typeof token==='function'||_typeof(token)==='object')&&sourceName){Object.defineProperty(token,SOURCE,{value:sourceName,configurable:true});}return{flags:flags,token:token,tokenKey:tokenKey(token)};});}function getParentRenderElement(view,renderHost,def){var renderParent=def.renderParent;if(renderParent){if((renderParent.flags&1/* TypeElement */)===0||(renderParent.flags&33554432/* ComponentView */)===0||renderParent.element.componentRendererType&&renderParent.element.componentRendererType.encapsulation===ViewEncapsulation.Native){// only children of non components, or children of components with native encapsulation should
// be attached.
return asElementData(view,def.renderParent.nodeIndex).renderElement;}}else{return renderHost;}}var DEFINITION_CACHE=new WeakMap();function resolveDefinition(factory){var value=DEFINITION_CACHE.get(factory);if(!value){value=factory(function(){return NOOP;});value.factory=factory;DEFINITION_CACHE.set(factory,value);}return value;}function rootRenderNodes(view){var renderNodes=[];visitRootRenderNodes(view,0/* Collect */,undefined,undefined,renderNodes);return renderNodes;}function visitRootRenderNodes(view,action,parentNode,nextSibling,target){// We need to re-compute the parent node in case the nodes have been moved around manually
if(action===3/* RemoveChild */){parentNode=view.renderer.parentNode(renderNode(view,view.def.lastRenderRootNode));}visitSiblingRenderNodes(view,action,0,view.def.nodes.length-1,parentNode,nextSibling,target);}function visitSiblingRenderNodes(view,action,startIndex,endIndex,parentNode,nextSibling,target){for(var i=startIndex;i<=endIndex;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&(1/* TypeElement */|2/* TypeText */|8/* TypeNgContent */)){visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}}function visitProjectedRenderNodes(view,ngContentIndex,action,parentNode,nextSibling,target){var compView=view;while(compView&&!isComponentView(compView)){compView=compView.parent;}var hostView=compView.parent;var hostElDef=viewParentEl(compView);var startIndex=hostElDef.nodeIndex+1;var endIndex=hostElDef.nodeIndex+hostElDef.childCount;for(var i=startIndex;i<=endIndex;i++){var nodeDef=hostView.def.nodes[i];if(nodeDef.ngContentIndex===ngContentIndex){visitRenderNode(hostView,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}if(!hostView.parent){// a root view
var projectedNodes=view.root.projectableNodes[ngContentIndex];if(projectedNodes){for(var i=0;i<projectedNodes.length;i++){execRenderNodeAction(view,projectedNodes[i],action,parentNode,nextSibling,target);}}}}function visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target){if(nodeDef.flags&8/* TypeNgContent */){visitProjectedRenderNodes(view,nodeDef.ngContent.index,action,parentNode,nextSibling,target);}else{var rn=renderNode(view,nodeDef);if(action===3/* RemoveChild */&&nodeDef.flags&33554432/* ComponentView */&&nodeDef.bindingFlags&48/* CatSyntheticProperty */){// Note: we might need to do both actions.
if(nodeDef.bindingFlags&16/* SyntheticProperty */){execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);}if(nodeDef.bindingFlags&32/* SyntheticHostProperty */){var compView=asElementData(view,nodeDef.nodeIndex).componentView;execRenderNodeAction(compView,rn,action,parentNode,nextSibling,target);}}else{execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);}if(nodeDef.flags&16777216/* EmbeddedViews */){var embeddedViews=asElementData(view,nodeDef.nodeIndex).viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){visitRootRenderNodes(embeddedViews[k],action,parentNode,nextSibling,target);}}if(nodeDef.flags&1/* TypeElement */&&!nodeDef.element.name){visitSiblingRenderNodes(view,action,nodeDef.nodeIndex+1,nodeDef.nodeIndex+nodeDef.childCount,parentNode,nextSibling,target);}}}function execRenderNodeAction(view,renderNode,action,parentNode,nextSibling,target){var renderer=view.renderer;switch(action){case 1/* AppendChild */:renderer.appendChild(parentNode,renderNode);break;case 2/* InsertBefore */:renderer.insertBefore(parentNode,renderNode,nextSibling);break;case 3/* RemoveChild */:renderer.removeChild(parentNode,renderNode);break;case 0/* Collect */:target.push(renderNode);break;}}var NS_PREFIX_RE=/^:([^:]+):(.+)$/;function splitNamespace(name){if(name[0]===':'){var match=name.match(NS_PREFIX_RE);return[match[1],match[2]];}return['',name];}function calcBindingFlags(bindings){var flags=0;for(var i=0;i<bindings.length;i++){flags|=bindings[i].flags;}return flags;}function interpolate(valueCount,constAndInterp){var result='';for(var i=0;i<valueCount*2;i=i+2){result=result+constAndInterp[i]+_toStringWithNull(constAndInterp[i+1]);}return result+constAndInterp[valueCount*2];}function inlineInterpolate(valueCount,c0,a1,c1,a2,c2,a3,c3,a4,c4,a5,c5,a6,c6,a7,c7,a8,c8,a9,c9){switch(valueCount){case 1:return c0+_toStringWithNull(a1)+c1;case 2:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2;case 3:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3;case 4:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4;case 5:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5;case 6:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6;case 7:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7;case 8:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8;case 9:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8+_toStringWithNull(a9)+c9;default:throw new Error("Does not support more than 9 expressions");}}function _toStringWithNull(v){return v!=null?v.toString():'';}var EMPTY_ARRAY$4=[];var EMPTY_MAP={};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function anchorDef(flags,matchedQueriesDsl,ngContentIndex,childCount,handleEvent,templateFactory){flags|=1/* TypeElement */;var _a=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_a.matchedQueries,references=_a.references,matchedQueryIds=_a.matchedQueryIds;var template=templateFactory?resolveDefinition(templateFactory):null;return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
flags:flags,checkIndex:-1,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:[],bindingFlags:0,outputs:[],element:{ns:null,name:null,attrs:null,template:template,componentProvider:null,componentView:null,componentRendererType:null,publicProviders:null,allProviders:null,handleEvent:handleEvent||NOOP},provider:null,text:null,query:null,ngContent:null};}function elementDef(checkIndex,flags,matchedQueriesDsl,ngContentIndex,childCount,namespaceAndName,fixedAttrs,bindings,outputs,handleEvent,componentView,componentRendererType){if(fixedAttrs===void 0){fixedAttrs=[];}var _a;if(!handleEvent){handleEvent=NOOP;}var _b=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_b.matchedQueries,references=_b.references,matchedQueryIds=_b.matchedQueryIds;var ns=null;var name=null;if(namespaceAndName){_a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(splitNamespace(namespaceAndName),2),ns=_a[0],name=_a[1];}bindings=bindings||[];var bindingDefs=new Array(bindings.length);for(var i=0;i<bindings.length;i++){var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(bindings[i],3),bindingFlags=_c[0],namespaceAndName_1=_c[1],suffixOrSecurityContext=_c[2];var _d=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(splitNamespace(namespaceAndName_1),2),ns_1=_d[0],name_1=_d[1];var securityContext=undefined;var suffix=undefined;switch(bindingFlags&15/* Types */){case 4/* TypeElementStyle */:suffix=suffixOrSecurityContext;break;case 1/* TypeElementAttribute */:case 8/* TypeProperty */:securityContext=suffixOrSecurityContext;break;}bindingDefs[i]={flags:bindingFlags,ns:ns_1,name:name_1,nonMinifiedName:name_1,securityContext:securityContext,suffix:suffix};}outputs=outputs||[];var outputDefs=new Array(outputs.length);for(var i=0;i<outputs.length;i++){var _e=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(outputs[i],2),target=_e[0],eventName=_e[1];outputDefs[i]={type:0/* ElementOutput */,target:target,eventName:eventName,propName:null};}fixedAttrs=fixedAttrs||[];var attrs=fixedAttrs.map(function(_a){var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a,2),namespaceAndName=_b[0],value=_b[1];var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(splitNamespace(namespaceAndName),2),ns=_c[0],name=_c[1];return[ns,name,value];});componentRendererType=resolveRendererType2(componentRendererType);if(componentView){flags|=33554432/* ComponentView */;}flags|=1/* TypeElement */;return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:bindingDefs,bindingFlags:calcBindingFlags(bindingDefs),outputs:outputDefs,element:{ns:ns,name:name,attrs:attrs,template:null,// will bet set by the view definition
componentProvider:null,componentView:componentView||null,componentRendererType:componentRendererType,publicProviders:null,allProviders:null,handleEvent:handleEvent||NOOP},provider:null,text:null,query:null,ngContent:null};}function createElement(view,renderHost,def){var elDef=def.element;var rootSelectorOrNode=view.root.selectorOrNode;var renderer=view.renderer;var el;if(view.parent||!rootSelectorOrNode){if(elDef.name){el=renderer.createElement(elDef.name,elDef.ns);}else{el=renderer.createComment('');}var parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,el);}}else{// when using native Shadow DOM, do not clear the root element contents to allow slot projection
var preserveContent=!!elDef.componentRendererType&&elDef.componentRendererType.encapsulation===ViewEncapsulation.ShadowDom;el=renderer.selectRootElement(rootSelectorOrNode,preserveContent);}if(elDef.attrs){for(var i=0;i<elDef.attrs.length;i++){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(elDef.attrs[i],3),ns=_a[0],name_2=_a[1],value=_a[2];renderer.setAttribute(el,name_2,value,ns);}}return el;}function listenToElementOutputs(view,compView,def,el){for(var i=0;i<def.outputs.length;i++){var output=def.outputs[i];var handleEventClosure=renderEventHandlerClosure(view,def.nodeIndex,elementEventFullName(output.target,output.eventName));var listenTarget=output.target;var listenerView=view;if(output.target==='component'){listenTarget=null;listenerView=compView;}var disposable=listenerView.renderer.listen(listenTarget||el,output.eventName,handleEventClosure);view.disposables[def.outputIndex+i]=disposable;}}function renderEventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}function checkAndUpdateElementInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindLen=def.bindings.length;var changed=false;if(bindLen>0&&checkAndUpdateElementValue(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateElementValue(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateElementValue(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateElementValue(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateElementValue(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateElementValue(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateElementValue(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateElementValue(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateElementValue(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateElementValue(view,def,9,v9))changed=true;return changed;}function checkAndUpdateElementDynamic(view,def,values){var changed=false;for(var i=0;i<values.length;i++){if(checkAndUpdateElementValue(view,def,i,values[i]))changed=true;}return changed;}function checkAndUpdateElementValue(view,def,bindingIdx,value){if(!checkAndUpdateBinding(view,def,bindingIdx,value)){return false;}var binding=def.bindings[bindingIdx];var elData=asElementData(view,def.nodeIndex);var renderNode$$1=elData.renderElement;var name=binding.name;switch(binding.flags&15/* Types */){case 1/* TypeElementAttribute */:setElementAttribute(view,binding,renderNode$$1,binding.ns,name,value);break;case 2/* TypeElementClass */:setElementClass(view,renderNode$$1,name,value);break;case 4/* TypeElementStyle */:setElementStyle(view,binding,renderNode$$1,name,value);break;case 8/* TypeProperty */:var bindView=def.flags&33554432/* ComponentView */&&binding.flags&32/* SyntheticHostProperty */?elData.componentView:view;setElementProperty(bindView,binding,renderNode$$1,name,value);break;}return true;}function setElementAttribute(view,binding,renderNode$$1,ns,name,value){var securityContext=binding.securityContext;var renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;renderValue=renderValue!=null?renderValue.toString():null;var renderer=view.renderer;if(value!=null){renderer.setAttribute(renderNode$$1,name,renderValue,ns);}else{renderer.removeAttribute(renderNode$$1,name,ns);}}function setElementClass(view,renderNode$$1,name,value){var renderer=view.renderer;if(value){renderer.addClass(renderNode$$1,name);}else{renderer.removeClass(renderNode$$1,name);}}function setElementStyle(view,binding,renderNode$$1,name,value){var renderValue=view.root.sanitizer.sanitize(SecurityContext.STYLE,value);if(renderValue!=null){renderValue=renderValue.toString();var unit=binding.suffix;if(unit!=null){renderValue=renderValue+unit;}}else{renderValue=null;}var renderer=view.renderer;if(renderValue!=null){renderer.setStyle(renderNode$$1,name,renderValue);}else{renderer.removeStyle(renderNode$$1,name);}}function setElementProperty(view,binding,renderNode$$1,name,value){var securityContext=binding.securityContext;var renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;view.renderer.setProperty(renderNode$$1,name,renderValue);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var UNDEFINED_VALUE=new Object();var InjectorRefTokenKey=tokenKey(Injector);var INJECTORRefTokenKey=tokenKey(INJECTOR);var NgModuleRefTokenKey=tokenKey(NgModuleRef);function moduleProvideDef(flags,token,value,deps){// Need to resolve forwardRefs as e.g. for `useValue` we
// lowered the expression and then stopped evaluating it,
// i.e. also didn't unwrap it.
value=resolveForwardRef(value);var depDefs=splitDepsDsl(deps,stringify(token));return{// will bet set by the module definition
index:-1,deps:depDefs,flags:flags,token:token,value:value};}function moduleDef(providers){var providersByKey={};var modules=[];var isRoot=false;for(var i=0;i<providers.length;i++){var provider=providers[i];if(provider.token===APP_ROOT&&provider.value===true){isRoot=true;}if(provider.flags&1073741824/* TypeNgModule */){modules.push(provider.token);}provider.index=i;providersByKey[tokenKey(provider.token)]=provider;}return{// Will be filled later...
factory:null,providersByKey:providersByKey,providers:providers,modules:modules,isRoot:isRoot};}function initNgModule(data){var def=data._def;var providers=data._providers=new Array(def.providers.length);for(var i=0;i<def.providers.length;i++){var provDef=def.providers[i];if(!(provDef.flags&4096/* LazyProvider */)){// Make sure the provider has not been already initialized outside this loop.
if(providers[i]===undefined){providers[i]=_createProviderInstance(data,provDef);}}}}function resolveNgModuleDep(data,depDef,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}var former=setCurrentInjector(data);try{if(depDef.flags&8/* Value */){return depDef.token;}if(depDef.flags&2/* Optional */){notFoundValue=null;}if(depDef.flags&1/* SkipSelf */){return data._parent.get(depDef.token,notFoundValue);}var tokenKey_1=depDef.tokenKey;switch(tokenKey_1){case InjectorRefTokenKey:case INJECTORRefTokenKey:case NgModuleRefTokenKey:return data;}var providerDef=data._def.providersByKey[tokenKey_1];var injectableDef=void 0;if(providerDef){var providerInstance=data._providers[providerDef.index];if(providerInstance===undefined){providerInstance=data._providers[providerDef.index]=_createProviderInstance(data,providerDef);}return providerInstance===UNDEFINED_VALUE?undefined:providerInstance;}else if((injectableDef=getInjectableDef(depDef.token))&&targetsModule(data,injectableDef)){var index=data._providers.length;data._def.providersByKey[depDef.tokenKey]={flags:1024/* TypeFactoryProvider */|4096/* LazyProvider */,value:injectableDef.factory,deps:[],index:index,token:depDef.token};data._providers[index]=UNDEFINED_VALUE;return data._providers[index]=_createProviderInstance(data,data._def.providersByKey[depDef.tokenKey]);}else if(depDef.flags&4/* Self */){return notFoundValue;}return data._parent.get(depDef.token,notFoundValue);}finally{setCurrentInjector(former);}}function moduleTransitivelyPresent(ngModule,scope){return ngModule._def.modules.indexOf(scope)>-1;}function targetsModule(ngModule,def){return def.providedIn!=null&&(moduleTransitivelyPresent(ngModule,def.providedIn)||def.providedIn==='root'&&ngModule._def.isRoot);}function _createProviderInstance(ngModule,providerDef){var injectable;switch(providerDef.flags&201347067/* Types */){case 512/* TypeClassProvider */:injectable=_createClass(ngModule,providerDef.value,providerDef.deps);break;case 1024/* TypeFactoryProvider */:injectable=_callFactory(ngModule,providerDef.value,providerDef.deps);break;case 2048/* TypeUseExistingProvider */:injectable=resolveNgModuleDep(ngModule,providerDef.deps[0]);break;case 256/* TypeValueProvider */:injectable=providerDef.value;break;}// The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be
// avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be
// checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already
// set (ngOnDestroy was detected statically).
if(injectable!==UNDEFINED_VALUE&&injectable!=null&&_typeof(injectable)==='object'&&!(providerDef.flags&131072/* OnDestroy */)&&typeof injectable.ngOnDestroy==='function'){providerDef.flags|=131072/* OnDestroy */;}return injectable===undefined?UNDEFINED_VALUE:injectable;}function _createClass(ngModule,ctor,deps){var len=deps.length;switch(len){case 0:return new ctor();case 1:return new ctor(resolveNgModuleDep(ngModule,deps[0]));case 2:return new ctor(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]));case 3:return new ctor(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]),resolveNgModuleDep(ngModule,deps[2]));default:var depValues=new Array(len);for(var i=0;i<len;i++){depValues[i]=resolveNgModuleDep(ngModule,deps[i]);}return new(ctor.bind.apply(ctor,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],depValues)))();}}function _callFactory(ngModule,factory,deps){var len=deps.length;switch(len){case 0:return factory();case 1:return factory(resolveNgModuleDep(ngModule,deps[0]));case 2:return factory(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]));case 3:return factory(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]),resolveNgModuleDep(ngModule,deps[2]));default:var depValues=Array(len);for(var i=0;i<len;i++){depValues[i]=resolveNgModuleDep(ngModule,deps[i]);}return factory.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(depValues));}}function callNgModuleLifecycle(ngModule,lifecycles){var def=ngModule._def;var destroyed=new Set();for(var i=0;i<def.providers.length;i++){var provDef=def.providers[i];if(provDef.flags&131072/* OnDestroy */){var instance=ngModule._providers[i];if(instance&&instance!==UNDEFINED_VALUE){var onDestroy=instance.ngOnDestroy;if(typeof onDestroy==='function'&&!destroyed.has(instance)){onDestroy.apply(instance);destroyed.add(instance);}}}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function attachEmbeddedView(parentView,elementData,viewIndex,view){var embeddedViews=elementData.viewContainer._embeddedViews;if(viewIndex===null||viewIndex===undefined){viewIndex=embeddedViews.length;}view.viewContainerParent=parentView;addToArray(embeddedViews,viewIndex,view);attachProjectedView(elementData,view);Services.dirtyParentQueries(view);var prevView=viewIndex>0?embeddedViews[viewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);}function attachProjectedView(vcElementData,view){var dvcElementData=declaredViewContainer(view);if(!dvcElementData||dvcElementData===vcElementData||view.state&16/* IsProjectedView */){return;}// Note: For performance reasons, we
// - add a view to template._projectedViews only 1x throughout its lifetime,
//   and remove it not until the view is destroyed.
//   (hard, as when a parent view is attached/detached we would need to attach/detach all
//    nested projected views as well, even across component boundaries).
// - don't track the insertion order of views in the projected views array
//   (hard, as when the views of the same template are inserted different view containers)
view.state|=16/* IsProjectedView */;var projectedViews=dvcElementData.template._projectedViews;if(!projectedViews){projectedViews=dvcElementData.template._projectedViews=[];}projectedViews.push(view);// Note: we are changing the NodeDef here as we cannot calculate
// the fact whether a template is used for projection during compilation.
markNodeAsProjectedTemplate(view.parent.def,view.parentNodeDef);}function markNodeAsProjectedTemplate(viewDef,nodeDef){if(nodeDef.flags&4/* ProjectedTemplate */){return;}viewDef.nodeFlags|=4/* ProjectedTemplate */;nodeDef.flags|=4/* ProjectedTemplate */;var parentNodeDef=nodeDef.parent;while(parentNodeDef){parentNodeDef.childFlags|=4/* ProjectedTemplate */;parentNodeDef=parentNodeDef.parent;}}function detachEmbeddedView(elementData,viewIndex){var embeddedViews=elementData.viewContainer._embeddedViews;if(viewIndex==null||viewIndex>=embeddedViews.length){viewIndex=embeddedViews.length-1;}if(viewIndex<0){return null;}var view=embeddedViews[viewIndex];view.viewContainerParent=null;removeFromArray(embeddedViews,viewIndex);// See attachProjectedView for why we don't update projectedViews here.
Services.dirtyParentQueries(view);renderDetachView(view);return view;}function detachProjectedView(view){if(!(view.state&16/* IsProjectedView */)){return;}var dvcElementData=declaredViewContainer(view);if(dvcElementData){var projectedViews=dvcElementData.template._projectedViews;if(projectedViews){removeFromArray(projectedViews,projectedViews.indexOf(view));Services.dirtyParentQueries(view);}}}function moveEmbeddedView(elementData,oldViewIndex,newViewIndex){var embeddedViews=elementData.viewContainer._embeddedViews;var view=embeddedViews[oldViewIndex];removeFromArray(embeddedViews,oldViewIndex);if(newViewIndex==null){newViewIndex=embeddedViews.length;}addToArray(embeddedViews,newViewIndex,view);// Note: Don't need to change projectedViews as the order in there
// as always invalid...
Services.dirtyParentQueries(view);renderDetachView(view);var prevView=newViewIndex>0?embeddedViews[newViewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);return view;}function renderAttachEmbeddedView(elementData,prevView,view){var prevRenderNode=prevView?renderNode(prevView,prevView.def.lastRenderRootNode):elementData.renderElement;var parentNode=view.renderer.parentNode(prevRenderNode);var nextSibling=view.renderer.nextSibling(prevRenderNode);// Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!
// However, browsers automatically do `appendChild` when there is no `nextSibling`.
visitRootRenderNodes(view,2/* InsertBefore */,parentNode,nextSibling,undefined);}function renderDetachView(view){visitRootRenderNodes(view,3/* RemoveChild */,null,null,undefined);}function addToArray(arr,index,value){// perf: array.push is faster than array.splice!
if(index>=arr.length){arr.push(value);}else{arr.splice(index,0,value);}}function removeFromArray(arr,index){// perf: array.pop is faster than array.splice!
if(index>=arr.length-1){arr.pop();}else{arr.splice(index,1);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EMPTY_CONTEXT=new Object();// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createComponentFactory(selector,componentType,viewDefFactory,inputs,outputs,ngContentSelectors){return new ComponentFactory_(selector,componentType,viewDefFactory,inputs,outputs,ngContentSelectors);}function getComponentViewDefinitionFactory(componentFactory){return componentFactory.viewDefFactory;}var ComponentFactory_=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ComponentFactory_,_super);function ComponentFactory_(selector,componentType,viewDefFactory,_inputs,_outputs,ngContentSelectors){var _this=// Attention: this ctor is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
_super.call(this)||this;_this.selector=selector;_this.componentType=componentType;_this._inputs=_inputs;_this._outputs=_outputs;_this.ngContentSelectors=ngContentSelectors;_this.viewDefFactory=viewDefFactory;return _this;}Object.defineProperty(ComponentFactory_.prototype,"inputs",{get:function get(){var inputsArr=[];var inputs=this._inputs;for(var propName in inputs){var templateName=inputs[propName];inputsArr.push({propName:propName,templateName:templateName});}return inputsArr;},enumerable:true,configurable:true});Object.defineProperty(ComponentFactory_.prototype,"outputs",{get:function get(){var outputsArr=[];for(var propName in this._outputs){var templateName=this._outputs[propName];outputsArr.push({propName:propName,templateName:templateName});}return outputsArr;},enumerable:true,configurable:true});/**
     * Creates a new component.
     */ComponentFactory_.prototype.create=function(injector,projectableNodes,rootSelectorOrNode,ngModule){if(!ngModule){throw new Error('ngModule should be provided');}var viewDef=resolveDefinition(this.viewDefFactory);var componentNodeIndex=viewDef.nodes[0].element.componentProvider.nodeIndex;var view=Services.createRootView(injector,projectableNodes||[],rootSelectorOrNode,viewDef,ngModule,EMPTY_CONTEXT);var component=asProviderData(view,componentNodeIndex).instance;if(rootSelectorOrNode){view.renderer.setAttribute(asElementData(view,0).renderElement,'ng-version',VERSION.full);}return new ComponentRef_(view,new ViewRef_(view),component);};return ComponentFactory_;}(ComponentFactory);var ComponentRef_=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ComponentRef_,_super);function ComponentRef_(_view,_viewRef,_component){var _this=_super.call(this)||this;_this._view=_view;_this._viewRef=_viewRef;_this._component=_component;_this._elDef=_this._view.def.nodes[0];_this.hostView=_viewRef;_this.changeDetectorRef=_viewRef;_this.instance=_component;return _this;}Object.defineProperty(ComponentRef_.prototype,"location",{get:function get(){return new ElementRef(asElementData(this._view,this._elDef.nodeIndex).renderElement);},enumerable:true,configurable:true});Object.defineProperty(ComponentRef_.prototype,"injector",{get:function get(){return new Injector_(this._view,this._elDef);},enumerable:true,configurable:true});Object.defineProperty(ComponentRef_.prototype,"componentType",{get:function get(){return this._component.constructor;},enumerable:true,configurable:true});ComponentRef_.prototype.destroy=function(){this._viewRef.destroy();};ComponentRef_.prototype.onDestroy=function(callback){this._viewRef.onDestroy(callback);};return ComponentRef_;}(ComponentRef);function createViewContainerData(view,elDef,elData){return new ViewContainerRef_(view,elDef,elData);}var ViewContainerRef_=/** @class */function(){function ViewContainerRef_(_view,_elDef,_data){this._view=_view;this._elDef=_elDef;this._data=_data;/**
         * @internal
         */this._embeddedViews=[];}Object.defineProperty(ViewContainerRef_.prototype,"element",{get:function get(){return new ElementRef(this._data.renderElement);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"injector",{get:function get(){return new Injector_(this._view,this._elDef);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"parentInjector",{/** @deprecated No replacement */get:function get(){var view=this._view;var elDef=this._elDef.parent;while(!elDef&&view){elDef=viewParentEl(view);view=view.parent;}return view?new Injector_(view,elDef):new Injector_(this._view,null);},enumerable:true,configurable:true});ViewContainerRef_.prototype.clear=function(){var len=this._embeddedViews.length;for(var i=len-1;i>=0;i--){var view=detachEmbeddedView(this._data,i);Services.destroyView(view);}};ViewContainerRef_.prototype.get=function(index){var view=this._embeddedViews[index];if(view){var ref=new ViewRef_(view);ref.attachToViewContainerRef(this);return ref;}return null;};Object.defineProperty(ViewContainerRef_.prototype,"length",{get:function get(){return this._embeddedViews.length;},enumerable:true,configurable:true});ViewContainerRef_.prototype.createEmbeddedView=function(templateRef,context,index){var viewRef=templateRef.createEmbeddedView(context||{});this.insert(viewRef,index);return viewRef;};ViewContainerRef_.prototype.createComponent=function(componentFactory,index,injector,projectableNodes,ngModuleRef){var contextInjector=injector||this.parentInjector;if(!ngModuleRef&&!(componentFactory instanceof ComponentFactoryBoundToModule)){ngModuleRef=contextInjector.get(NgModuleRef);}var componentRef=componentFactory.create(contextInjector,projectableNodes,undefined,ngModuleRef);this.insert(componentRef.hostView,index);return componentRef;};ViewContainerRef_.prototype.insert=function(viewRef,index){if(viewRef.destroyed){throw new Error('Cannot insert a destroyed View in a ViewContainer!');}var viewRef_=viewRef;var viewData=viewRef_._view;attachEmbeddedView(this._view,this._data,index,viewData);viewRef_.attachToViewContainerRef(this);return viewRef;};ViewContainerRef_.prototype.move=function(viewRef,currentIndex){if(viewRef.destroyed){throw new Error('Cannot move a destroyed View in a ViewContainer!');}var previousIndex=this._embeddedViews.indexOf(viewRef._view);moveEmbeddedView(this._data,previousIndex,currentIndex);return viewRef;};ViewContainerRef_.prototype.indexOf=function(viewRef){return this._embeddedViews.indexOf(viewRef._view);};ViewContainerRef_.prototype.remove=function(index){var viewData=detachEmbeddedView(this._data,index);if(viewData){Services.destroyView(viewData);}};ViewContainerRef_.prototype.detach=function(index){var view=detachEmbeddedView(this._data,index);return view?new ViewRef_(view):null;};return ViewContainerRef_;}();function createChangeDetectorRef(view){return new ViewRef_(view);}var ViewRef_=/** @class */function(){function ViewRef_(_view){this._view=_view;this._viewContainerRef=null;this._appRef=null;}Object.defineProperty(ViewRef_.prototype,"rootNodes",{get:function get(){return rootRenderNodes(this._view);},enumerable:true,configurable:true});Object.defineProperty(ViewRef_.prototype,"context",{get:function get(){return this._view.context;},enumerable:true,configurable:true});Object.defineProperty(ViewRef_.prototype,"destroyed",{get:function get(){return(this._view.state&128/* Destroyed */)!==0;},enumerable:true,configurable:true});ViewRef_.prototype.markForCheck=function(){markParentViewsForCheck(this._view);};ViewRef_.prototype.detach=function(){this._view.state&=~4/* Attached */;};ViewRef_.prototype.detectChanges=function(){var fs=this._view.root.rendererFactory;if(fs.begin){fs.begin();}try{Services.checkAndUpdateView(this._view);}finally{if(fs.end){fs.end();}}};ViewRef_.prototype.checkNoChanges=function(){Services.checkNoChangesView(this._view);};ViewRef_.prototype.reattach=function(){this._view.state|=4/* Attached */;};ViewRef_.prototype.onDestroy=function(callback){if(!this._view.disposables){this._view.disposables=[];}this._view.disposables.push(callback);};ViewRef_.prototype.destroy=function(){if(this._appRef){this._appRef.detachView(this);}else if(this._viewContainerRef){this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));}Services.destroyView(this._view);};ViewRef_.prototype.detachFromAppRef=function(){this._appRef=null;renderDetachView(this._view);Services.dirtyParentQueries(this._view);};ViewRef_.prototype.attachToAppRef=function(appRef){if(this._viewContainerRef){throw new Error('This view is already attached to a ViewContainer!');}this._appRef=appRef;};ViewRef_.prototype.attachToViewContainerRef=function(vcRef){if(this._appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._viewContainerRef=vcRef;};return ViewRef_;}();function createTemplateData(view,def){return new TemplateRef_(view,def);}var TemplateRef_=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TemplateRef_,_super);function TemplateRef_(_parentView,_def){var _this=_super.call(this)||this;_this._parentView=_parentView;_this._def=_def;return _this;}TemplateRef_.prototype.createEmbeddedView=function(context){return new ViewRef_(Services.createEmbeddedView(this._parentView,this._def,this._def.element.template,context));};Object.defineProperty(TemplateRef_.prototype,"elementRef",{get:function get(){return new ElementRef(asElementData(this._parentView,this._def.nodeIndex).renderElement);},enumerable:true,configurable:true});return TemplateRef_;}(TemplateRef);function createInjector$1(view,elDef){return new Injector_(view,elDef);}var Injector_=/** @class */function(){function Injector_(view,elDef){this.view=view;this.elDef=elDef;}Injector_.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}var allowPrivateServices=this.elDef?(this.elDef.flags&33554432/* ComponentView */)!==0:false;return Services.resolveDep(this.view,this.elDef,allowPrivateServices,{flags:0/* None */,token:token,tokenKey:tokenKey(token)},notFoundValue);};return Injector_;}();function nodeValue(view,index){var def=view.def.nodes[index];if(def.flags&1/* TypeElement */){var elData=asElementData(view,def.nodeIndex);return def.element.template?elData.template:elData.renderElement;}else if(def.flags&2/* TypeText */){return asTextData(view,def.nodeIndex).renderText;}else if(def.flags&(20224/* CatProvider */|16/* TypePipe */)){return asProviderData(view,def.nodeIndex).instance;}throw new Error("Illegal state: read nodeValue for node index "+index);}function createRendererV1(view){return new RendererAdapter(view.renderer);}var RendererAdapter=/** @class */function(){function RendererAdapter(delegate){this.delegate=delegate;}RendererAdapter.prototype.selectRootElement=function(selectorOrNode){return this.delegate.selectRootElement(selectorOrNode);};RendererAdapter.prototype.createElement=function(parent,namespaceAndName){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(splitNamespace(namespaceAndName),2),ns=_a[0],name=_a[1];var el=this.delegate.createElement(name,ns);if(parent){this.delegate.appendChild(parent,el);}return el;};RendererAdapter.prototype.createViewRoot=function(hostElement){return hostElement;};RendererAdapter.prototype.createTemplateAnchor=function(parentElement){var comment=this.delegate.createComment('');if(parentElement){this.delegate.appendChild(parentElement,comment);}return comment;};RendererAdapter.prototype.createText=function(parentElement,value){var node=this.delegate.createText(value);if(parentElement){this.delegate.appendChild(parentElement,node);}return node;};RendererAdapter.prototype.projectNodes=function(parentElement,nodes){for(var i=0;i<nodes.length;i++){this.delegate.appendChild(parentElement,nodes[i]);}};RendererAdapter.prototype.attachViewAfter=function(node,viewRootNodes){var parentElement=this.delegate.parentNode(node);var nextSibling=this.delegate.nextSibling(node);for(var i=0;i<viewRootNodes.length;i++){this.delegate.insertBefore(parentElement,viewRootNodes[i],nextSibling);}};RendererAdapter.prototype.detachView=function(viewRootNodes){for(var i=0;i<viewRootNodes.length;i++){var node=viewRootNodes[i];var parentElement=this.delegate.parentNode(node);this.delegate.removeChild(parentElement,node);}};RendererAdapter.prototype.destroyView=function(hostElement,viewAllNodes){for(var i=0;i<viewAllNodes.length;i++){this.delegate.destroyNode(viewAllNodes[i]);}};RendererAdapter.prototype.listen=function(renderElement,name,callback){return this.delegate.listen(renderElement,name,callback);};RendererAdapter.prototype.listenGlobal=function(target,name,callback){return this.delegate.listen(target,name,callback);};RendererAdapter.prototype.setElementProperty=function(renderElement,propertyName,propertyValue){this.delegate.setProperty(renderElement,propertyName,propertyValue);};RendererAdapter.prototype.setElementAttribute=function(renderElement,namespaceAndName,attributeValue){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(splitNamespace(namespaceAndName),2),ns=_a[0],name=_a[1];if(attributeValue!=null){this.delegate.setAttribute(renderElement,name,attributeValue,ns);}else{this.delegate.removeAttribute(renderElement,name,ns);}};RendererAdapter.prototype.setBindingDebugInfo=function(renderElement,propertyName,propertyValue){};RendererAdapter.prototype.setElementClass=function(renderElement,className,isAdd){if(isAdd){this.delegate.addClass(renderElement,className);}else{this.delegate.removeClass(renderElement,className);}};RendererAdapter.prototype.setElementStyle=function(renderElement,styleName,styleValue){if(styleValue!=null){this.delegate.setStyle(renderElement,styleName,styleValue);}else{this.delegate.removeStyle(renderElement,styleName);}};RendererAdapter.prototype.invokeElementMethod=function(renderElement,methodName,args){renderElement[methodName].apply(renderElement,args);};RendererAdapter.prototype.setText=function(renderNode$$1,text){this.delegate.setValue(renderNode$$1,text);};RendererAdapter.prototype.animate=function(){throw new Error('Renderer.animate is no longer supported!');};return RendererAdapter;}();function createNgModuleRef(moduleType,parent,bootstrapComponents,def){return new NgModuleRef_(moduleType,parent,bootstrapComponents,def);}var NgModuleRef_=/** @class */function(){function NgModuleRef_(_moduleType,_parent,_bootstrapComponents,_def){this._moduleType=_moduleType;this._parent=_parent;this._bootstrapComponents=_bootstrapComponents;this._def=_def;this._destroyListeners=[];this._destroyed=false;this.injector=this;initNgModule(this);}NgModuleRef_.prototype.get=function(token,notFoundValue,injectFlags){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}if(injectFlags===void 0){injectFlags=0/* Default */;}var flags=0/* None */;if(injectFlags&4/* SkipSelf */){flags|=1/* SkipSelf */;}else if(injectFlags&2/* Self */){flags|=4/* Self */;}return resolveNgModuleDep(this,{token:token,tokenKey:tokenKey(token),flags:flags},notFoundValue);};Object.defineProperty(NgModuleRef_.prototype,"instance",{get:function get(){return this.get(this._moduleType);},enumerable:true,configurable:true});Object.defineProperty(NgModuleRef_.prototype,"componentFactoryResolver",{get:function get(){return this.get(ComponentFactoryResolver);},enumerable:true,configurable:true});NgModuleRef_.prototype.destroy=function(){if(this._destroyed){throw new Error("The ng module "+stringify(this.instance.constructor)+" has already been destroyed.");}this._destroyed=true;callNgModuleLifecycle(this,131072/* OnDestroy */);this._destroyListeners.forEach(function(listener){return listener();});};NgModuleRef_.prototype.onDestroy=function(callback){this._destroyListeners.push(callback);};return NgModuleRef_;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var RendererV1TokenKey=tokenKey(Renderer);var Renderer2TokenKey=tokenKey(Renderer2);var ElementRefTokenKey=tokenKey(ElementRef);var ViewContainerRefTokenKey=tokenKey(ViewContainerRef);var TemplateRefTokenKey=tokenKey(TemplateRef);var ChangeDetectorRefTokenKey=tokenKey(ChangeDetectorRef);var InjectorRefTokenKey$1=tokenKey(Injector);var INJECTORRefTokenKey$1=tokenKey(INJECTOR);function directiveDef(checkIndex,flags,matchedQueries,childCount,ctor,deps,props,outputs){var bindings=[];if(props){for(var prop in props){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(props[prop],2),bindingIndex=_a[0],nonMinifiedName=_a[1];bindings[bindingIndex]={flags:8/* TypeProperty */,name:prop,nonMinifiedName:nonMinifiedName,ns:null,securityContext:null,suffix:null};}}var outputDefs=[];if(outputs){for(var propName in outputs){outputDefs.push({type:1/* DirectiveOutput */,propName:propName,target:null,eventName:outputs[propName]});}}flags|=16384/* TypeDirective */;return _def(checkIndex,flags,matchedQueries,childCount,ctor,ctor,deps,bindings,outputDefs);}function pipeDef(flags,ctor,deps){flags|=16/* TypePipe */;return _def(-1,flags,null,0,ctor,ctor,deps);}function providerDef(flags,matchedQueries,token,value,deps){return _def(-1,flags,matchedQueries,0,token,value,deps);}function _def(checkIndex,flags,matchedQueriesDsl,childCount,token,value,deps,bindings,outputs){var _a=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_a.matchedQueries,references=_a.references,matchedQueryIds=_a.matchedQueryIds;if(!outputs){outputs=[];}if(!bindings){bindings=[];}// Need to resolve forwardRefs as e.g. for `useValue` we
// lowered the expression and then stopped evaluating it,
// i.e. also didn't unwrap it.
value=resolveForwardRef(value);var depDefs=splitDepsDsl(deps,stringify(token));return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:-1,childCount:childCount,bindings:bindings,bindingFlags:calcBindingFlags(bindings),outputs:outputs,element:null,provider:{token:token,value:value,deps:depDefs},text:null,query:null,ngContent:null};}function createProviderInstance(view,def){return _createProviderInstance$1(view,def);}function createPipeInstance(view,def){// deps are looked up from component.
var compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}// pipes can see the private services of the component
var allowPrivateServices=true;// pipes are always eager and classes!
return createClass(compView.parent,viewParentEl(compView),allowPrivateServices,def.provider.value,def.provider.deps);}function createDirectiveInstance(view,def){// components can see other private services, other directives can't.
var allowPrivateServices=(def.flags&32768/* Component */)>0;// directives are always eager and classes!
var instance=createClass(view,def.parent,allowPrivateServices,def.provider.value,def.provider.deps);if(def.outputs.length){for(var i=0;i<def.outputs.length;i++){var output=def.outputs[i];var outputObservable=instance[output.propName];if(isObservable(outputObservable)){var subscription=outputObservable.subscribe(eventHandlerClosure(view,def.parent.nodeIndex,output.eventName));view.disposables[def.outputIndex+i]=subscription.unsubscribe.bind(subscription);}else{throw new Error("@Output "+output.propName+" not initialized in '"+instance.constructor.name+"'.");}}}return instance;}function eventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}function checkAndUpdateDirectiveInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var providerData=asProviderData(view,def.nodeIndex);var directive=providerData.instance;var changed=false;var changes=undefined;var bindLen=def.bindings.length;if(bindLen>0&&checkBinding(view,def,0,v0)){changed=true;changes=updateProp(view,providerData,def,0,v0,changes);}if(bindLen>1&&checkBinding(view,def,1,v1)){changed=true;changes=updateProp(view,providerData,def,1,v1,changes);}if(bindLen>2&&checkBinding(view,def,2,v2)){changed=true;changes=updateProp(view,providerData,def,2,v2,changes);}if(bindLen>3&&checkBinding(view,def,3,v3)){changed=true;changes=updateProp(view,providerData,def,3,v3,changes);}if(bindLen>4&&checkBinding(view,def,4,v4)){changed=true;changes=updateProp(view,providerData,def,4,v4,changes);}if(bindLen>5&&checkBinding(view,def,5,v5)){changed=true;changes=updateProp(view,providerData,def,5,v5,changes);}if(bindLen>6&&checkBinding(view,def,6,v6)){changed=true;changes=updateProp(view,providerData,def,6,v6,changes);}if(bindLen>7&&checkBinding(view,def,7,v7)){changed=true;changes=updateProp(view,providerData,def,7,v7,changes);}if(bindLen>8&&checkBinding(view,def,8,v8)){changed=true;changes=updateProp(view,providerData,def,8,v8,changes);}if(bindLen>9&&checkBinding(view,def,9,v9)){changed=true;changes=updateProp(view,providerData,def,9,v9,changes);}if(changes){directive.ngOnChanges(changes);}if(def.flags&65536/* OnInit */&&shouldCallLifecycleInitHook(view,256/* InitState_CallingOnInit */,def.nodeIndex)){directive.ngOnInit();}if(def.flags&262144/* DoCheck */){directive.ngDoCheck();}return changed;}function checkAndUpdateDirectiveDynamic(view,def,values){var providerData=asProviderData(view,def.nodeIndex);var directive=providerData.instance;var changed=false;var changes=undefined;for(var i=0;i<values.length;i++){if(checkBinding(view,def,i,values[i])){changed=true;changes=updateProp(view,providerData,def,i,values[i],changes);}}if(changes){directive.ngOnChanges(changes);}if(def.flags&65536/* OnInit */&&shouldCallLifecycleInitHook(view,256/* InitState_CallingOnInit */,def.nodeIndex)){directive.ngOnInit();}if(def.flags&262144/* DoCheck */){directive.ngDoCheck();}return changed;}function _createProviderInstance$1(view,def){// private services can see other private services
var allowPrivateServices=(def.flags&8192/* PrivateProvider */)>0;var providerDef=def.provider;switch(def.flags&201347067/* Types */){case 512/* TypeClassProvider */:return createClass(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);case 1024/* TypeFactoryProvider */:return callFactory(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);case 2048/* TypeUseExistingProvider */:return resolveDep(view,def.parent,allowPrivateServices,providerDef.deps[0]);case 256/* TypeValueProvider */:return providerDef.value;}}function createClass(view,elDef,allowPrivateServices,ctor,deps){var len=deps.length;switch(len){case 0:return new ctor();case 1:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]));case 2:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));case 3:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));default:var depValues=new Array(len);for(var i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}return new(ctor.bind.apply(ctor,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],depValues)))();}}function callFactory(view,elDef,allowPrivateServices,factory,deps){var len=deps.length;switch(len){case 0:return factory();case 1:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]));case 2:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));case 3:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));default:var depValues=Array(len);for(var i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}return factory.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(depValues));}}// This default value is when checking the hierarchy for a token.
//
// It means both:
// - the token is not provided by the current injector,
// - only the element injectors should be checked (ie do not check module injectors
//
//          mod1
//         /
//       el1   mod2
//         \  /
//         el2
//
// When requesting el2.injector.get(token), we should check in the following order and return the
// first found value:
// - el2.injector.get(token, default)
// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module
// - mod2.injector.get(token, default)
var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR={};function resolveDep(view,elDef,allowPrivateServices,depDef,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}if(depDef.flags&8/* Value */){return depDef.token;}var startView=view;if(depDef.flags&2/* Optional */){notFoundValue=null;}var tokenKey$$1=depDef.tokenKey;if(tokenKey$$1===ChangeDetectorRefTokenKey){// directives on the same element as a component should be able to control the change detector
// of that component as well.
allowPrivateServices=!!(elDef&&elDef.element.componentView);}if(elDef&&depDef.flags&1/* SkipSelf */){allowPrivateServices=false;elDef=elDef.parent;}var searchView=view;while(searchView){if(elDef){switch(tokenKey$$1){case RendererV1TokenKey:{var compView=findCompView(searchView,elDef,allowPrivateServices);return createRendererV1(compView);}case Renderer2TokenKey:{var compView=findCompView(searchView,elDef,allowPrivateServices);return compView.renderer;}case ElementRefTokenKey:return new ElementRef(asElementData(searchView,elDef.nodeIndex).renderElement);case ViewContainerRefTokenKey:return asElementData(searchView,elDef.nodeIndex).viewContainer;case TemplateRefTokenKey:{if(elDef.element.template){return asElementData(searchView,elDef.nodeIndex).template;}break;}case ChangeDetectorRefTokenKey:{var cdView=findCompView(searchView,elDef,allowPrivateServices);return createChangeDetectorRef(cdView);}case InjectorRefTokenKey$1:case INJECTORRefTokenKey$1:return createInjector$1(searchView,elDef);default:var providerDef_1=(allowPrivateServices?elDef.element.allProviders:elDef.element.publicProviders)[tokenKey$$1];if(providerDef_1){var providerData=asProviderData(searchView,providerDef_1.nodeIndex);if(!providerData){providerData={instance:_createProviderInstance$1(searchView,providerDef_1)};searchView.nodes[providerDef_1.nodeIndex]=providerData;}return providerData.instance;}}}allowPrivateServices=isComponentView(searchView);elDef=viewParentEl(searchView);searchView=searchView.parent;if(depDef.flags&4/* Self */){searchView=null;}}var value=startView.root.injector.get(depDef.token,NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);if(value!==NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR||notFoundValue===NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR){// Return the value from the root element injector when
// - it provides it
//   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
// - the module injector should not be checked
//   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
return value;}return startView.root.ngModule.injector.get(depDef.token,notFoundValue);}function findCompView(view,elDef,allowPrivateServices){var compView;if(allowPrivateServices){compView=asElementData(view,elDef.nodeIndex).componentView;}else{compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}}return compView;}function updateProp(view,providerData,def,bindingIdx,value,changes){if(def.flags&32768/* Component */){var compView=asElementData(view,def.parent.nodeIndex).componentView;if(compView.def.flags&2/* OnPush */){compView.state|=8/* ChecksEnabled */;}}var binding=def.bindings[bindingIdx];var propName=binding.name;// Note: This is still safe with Closure Compiler as
// the user passed in the property name as an object has to `providerDef`,
// so Closure Compiler will have renamed the property correctly already.
providerData.instance[propName]=value;if(def.flags&524288/* OnChanges */){changes=changes||{};var oldValue=WrappedValue.unwrap(view.oldValues[def.bindingIndex+bindingIdx]);var binding_1=def.bindings[bindingIdx];changes[binding_1.nonMinifiedName]=new SimpleChange(oldValue,value,(view.state&2/* FirstCheck */)!==0);}view.oldValues[def.bindingIndex+bindingIdx]=value;return changes;}// This function calls the ngAfterContentCheck, ngAfterContentInit,
// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node
// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are
// called during a pre-order traversal of the view tree (that is calling the
// parent hooks before the child hooks) these events are sent in using a
// post-order traversal of the tree (children before parents). This changes the
// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the
// expected nodeIndex which a ngOnInit should be called. When sending
// ngAfterContentInit and ngAfterViewInit it is the expected count of
// ngAfterContentInit or ngAfterViewInit methods that have been called. This
// ensure that despite being called recursively or after picking up after an
// exception, the ngAfterContentInit or ngAfterViewInit will be called on the
// correct nodes. Consider for example, the following (where E is an element
// and D is a directive)
//  Tree:       pre-order index  post-order index
//    E1        0                6
//      E2      1                1
//       D3     2                0
//      E4      3                5
//       E5     4                4
//        E6    5                2
//        E7    6                3
// As can be seen, the post-order index has an unclear relationship to the
// pre-order index (postOrderIndex === preOrderIndex - parentCount +
// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit
// are stable (will be the same for the same view regardless of exceptions or
// recursion) we just need to count them which will roughly correspond to the
// post-order index (it skips elements and directives that do not have
// lifecycle hooks).
//
// For example, if an exception is raised in the E6.onAfterViewInit() the
// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to
// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will
// not have their ngAfterViewInit() called but, starting with E7, the rest of
// the view will begin getting ngAfterViewInit() called until a check and
// pass is complete.
//
// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()
// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected
// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.
// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.
// When the recursion returns the initIndex will be 7 so E1 is skipped as it
// has already been called in the recursively called checkAnUpdateView().
function callLifecycleHooksChildrenFirst(view,lifecycles){if(!(view.def.nodeFlags&lifecycles)){return;}var nodes=view.def.nodes;var initIndex=0;for(var i=0;i<nodes.length;i++){var nodeDef=nodes[i];var parent_1=nodeDef.parent;if(!parent_1&&nodeDef.flags&lifecycles){// matching root node (e.g. a pipe)
callProviderLifecycles(view,i,nodeDef.flags&lifecycles,initIndex++);}if((nodeDef.childFlags&lifecycles)===0){// no child matches one of the lifecycles
i+=nodeDef.childCount;}while(parent_1&&parent_1.flags&1/* TypeElement */&&i===parent_1.nodeIndex+parent_1.childCount){// last child of an element
if(parent_1.directChildFlags&lifecycles){initIndex=callElementProvidersLifecycles(view,parent_1,lifecycles,initIndex);}parent_1=parent_1.parent;}}}function callElementProvidersLifecycles(view,elDef,lifecycles,initIndex){for(var i=elDef.nodeIndex+1;i<=elDef.nodeIndex+elDef.childCount;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&lifecycles){callProviderLifecycles(view,i,nodeDef.flags&lifecycles,initIndex++);}// only visit direct children
i+=nodeDef.childCount;}return initIndex;}function callProviderLifecycles(view,index,lifecycles,initIndex){var providerData=asProviderData(view,index);if(!providerData){return;}var provider=providerData.instance;if(!provider){return;}Services.setCurrentNode(view,index);if(lifecycles&1048576/* AfterContentInit */&&shouldCallLifecycleInitHook(view,512/* InitState_CallingAfterContentInit */,initIndex)){provider.ngAfterContentInit();}if(lifecycles&2097152/* AfterContentChecked */){provider.ngAfterContentChecked();}if(lifecycles&4194304/* AfterViewInit */&&shouldCallLifecycleInitHook(view,768/* InitState_CallingAfterViewInit */,initIndex)){provider.ngAfterViewInit();}if(lifecycles&8388608/* AfterViewChecked */){provider.ngAfterViewChecked();}if(lifecycles&131072/* OnDestroy */){provider.ngOnDestroy();}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function queryDef(flags,id,bindings){var bindingDefs=[];for(var propName in bindings){var bindingType=bindings[propName];bindingDefs.push({propName:propName,bindingType:bindingType});}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
// TODO(vicb): check
checkIndex:-1,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,ngContentIndex:-1,matchedQueries:{},matchedQueryIds:0,references:{},childCount:0,bindings:[],bindingFlags:0,outputs:[],element:null,provider:null,text:null,query:{id:id,filterId:filterQueryId(id),bindings:bindingDefs},ngContent:null};}function createQuery$1(){return new QueryList$1();}function dirtyParentQueries(view){var queryIds=view.def.nodeMatchedQueries;while(view.parent&&isEmbeddedView(view)){var tplDef=view.parentNodeDef;view=view.parent;// content queries
var end=tplDef.nodeIndex+tplDef.childCount;for(var i=0;i<=end;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&67108864/* TypeContentQuery */&&nodeDef.flags&536870912/* DynamicQuery */&&(nodeDef.query.filterId&queryIds)===nodeDef.query.filterId){asQueryList(view,i).setDirty();}if(nodeDef.flags&1/* TypeElement */&&i+nodeDef.childCount<tplDef.nodeIndex||!(nodeDef.childFlags&67108864/* TypeContentQuery */)||!(nodeDef.childFlags&536870912/* DynamicQuery */)){// skip elements that don't contain the template element or no query.
i+=nodeDef.childCount;}}}// view queries
if(view.def.nodeFlags&134217728/* TypeViewQuery */){for(var i=0;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&134217728/* TypeViewQuery */&&nodeDef.flags&536870912/* DynamicQuery */){asQueryList(view,i).setDirty();}// only visit the root nodes
i+=nodeDef.childCount;}}}function checkAndUpdateQuery(view,nodeDef){var queryList=asQueryList(view,nodeDef.nodeIndex);if(!queryList.dirty){return;}var directiveInstance;var newValues=undefined;if(nodeDef.flags&67108864/* TypeContentQuery */){var elementDef=nodeDef.parent.parent;newValues=calcQueryValues(view,elementDef.nodeIndex,elementDef.nodeIndex+elementDef.childCount,nodeDef.query,[]);directiveInstance=asProviderData(view,nodeDef.parent.nodeIndex).instance;}else if(nodeDef.flags&134217728/* TypeViewQuery */){newValues=calcQueryValues(view,0,view.def.nodes.length-1,nodeDef.query,[]);directiveInstance=view.component;}queryList.reset(newValues);var bindings=nodeDef.query.bindings;var notify=false;for(var i=0;i<bindings.length;i++){var binding=bindings[i];var boundValue=void 0;switch(binding.bindingType){case 0/* First */:boundValue=queryList.first;break;case 1/* All */:boundValue=queryList;notify=true;break;}directiveInstance[binding.propName]=boundValue;}if(notify){queryList.notifyOnChanges();}}function calcQueryValues(view,startIndex,endIndex,queryDef,values){for(var i=startIndex;i<=endIndex;i++){var nodeDef=view.def.nodes[i];var valueType=nodeDef.matchedQueries[queryDef.id];if(valueType!=null){values.push(getQueryValue(view,nodeDef,valueType));}if(nodeDef.flags&1/* TypeElement */&&nodeDef.element.template&&(nodeDef.element.template.nodeMatchedQueries&queryDef.filterId)===queryDef.filterId){var elementData=asElementData(view,i);// check embedded views that were attached at the place of their template,
// but process child nodes first if some match the query (see issue #16568)
if((nodeDef.childMatchedQueries&queryDef.filterId)===queryDef.filterId){calcQueryValues(view,i+1,i+nodeDef.childCount,queryDef,values);i+=nodeDef.childCount;}if(nodeDef.flags&16777216/* EmbeddedViews */){var embeddedViews=elementData.viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){var embeddedView=embeddedViews[k];var dvc=declaredViewContainer(embeddedView);if(dvc&&dvc===elementData){calcQueryValues(embeddedView,0,embeddedView.def.nodes.length-1,queryDef,values);}}}var projectedViews=elementData.template._projectedViews;if(projectedViews){for(var k=0;k<projectedViews.length;k++){var projectedView=projectedViews[k];calcQueryValues(projectedView,0,projectedView.def.nodes.length-1,queryDef,values);}}}if((nodeDef.childMatchedQueries&queryDef.filterId)!==queryDef.filterId){// if no child matches the query, skip the children.
i+=nodeDef.childCount;}}return values;}function getQueryValue(view,nodeDef,queryValueType){if(queryValueType!=null){// a match
switch(queryValueType){case 1/* RenderElement */:return asElementData(view,nodeDef.nodeIndex).renderElement;case 0/* ElementRef */:return new ElementRef(asElementData(view,nodeDef.nodeIndex).renderElement);case 2/* TemplateRef */:return asElementData(view,nodeDef.nodeIndex).template;case 3/* ViewContainerRef */:return asElementData(view,nodeDef.nodeIndex).viewContainer;case 4/* Provider */:return asProviderData(view,nodeDef.nodeIndex).instance;}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function ngContentDef(ngContentIndex,index){return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:-1,flags:8/* TypeNgContent */,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:[],bindingFlags:0,outputs:[],element:null,provider:null,text:null,query:null,ngContent:{index:index}};}function appendNgContent(view,renderHost,def){var parentEl=getParentRenderElement(view,renderHost,def);if(!parentEl){// Nothing to do if there is no parent element.
return;}var ngContentIndex=def.ngContent.index;visitProjectedRenderNodes(view,ngContentIndex,1/* AppendChild */,parentEl,null,undefined);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function purePipeDef(checkIndex,argCount){// argCount + 1 to include the pipe as first arg
return _pureExpressionDef(128/* TypePurePipe */,checkIndex,new Array(argCount+1));}function pureArrayDef(checkIndex,argCount){return _pureExpressionDef(32/* TypePureArray */,checkIndex,new Array(argCount));}function pureObjectDef(checkIndex,propToIndex){var keys=Object.keys(propToIndex);var nbKeys=keys.length;var propertyNames=new Array(nbKeys);for(var i=0;i<nbKeys;i++){var key=keys[i];var index=propToIndex[key];propertyNames[index]=key;}return _pureExpressionDef(64/* TypePureObject */,checkIndex,propertyNames);}function _pureExpressionDef(flags,checkIndex,propertyNames){var bindings=new Array(propertyNames.length);for(var i=0;i<propertyNames.length;i++){var prop=propertyNames[i];bindings[i]={flags:8/* TypeProperty */,name:prop,ns:null,nonMinifiedName:prop,securityContext:null,suffix:null};}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:-1,childCount:0,bindings:bindings,bindingFlags:calcBindingFlags(bindings),outputs:[],element:null,provider:null,text:null,query:null,ngContent:null};}function createPureExpression(view,def){return{value:undefined};}function checkAndUpdatePureExpressionInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindings=def.bindings;var changed=false;var bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var data=asPureExpressionData(view,def.nodeIndex);var value=void 0;switch(def.flags&201347067/* Types */){case 32/* TypePureArray */:value=new Array(bindings.length);if(bindLen>0)value[0]=v0;if(bindLen>1)value[1]=v1;if(bindLen>2)value[2]=v2;if(bindLen>3)value[3]=v3;if(bindLen>4)value[4]=v4;if(bindLen>5)value[5]=v5;if(bindLen>6)value[6]=v6;if(bindLen>7)value[7]=v7;if(bindLen>8)value[8]=v8;if(bindLen>9)value[9]=v9;break;case 64/* TypePureObject */:value={};if(bindLen>0)value[bindings[0].name]=v0;if(bindLen>1)value[bindings[1].name]=v1;if(bindLen>2)value[bindings[2].name]=v2;if(bindLen>3)value[bindings[3].name]=v3;if(bindLen>4)value[bindings[4].name]=v4;if(bindLen>5)value[bindings[5].name]=v5;if(bindLen>6)value[bindings[6].name]=v6;if(bindLen>7)value[bindings[7].name]=v7;if(bindLen>8)value[bindings[8].name]=v8;if(bindLen>9)value[bindings[9].name]=v9;break;case 128/* TypePurePipe */:var pipe=v0;switch(bindLen){case 1:value=pipe.transform(v0);break;case 2:value=pipe.transform(v1);break;case 3:value=pipe.transform(v1,v2);break;case 4:value=pipe.transform(v1,v2,v3);break;case 5:value=pipe.transform(v1,v2,v3,v4);break;case 6:value=pipe.transform(v1,v2,v3,v4,v5);break;case 7:value=pipe.transform(v1,v2,v3,v4,v5,v6);break;case 8:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7);break;case 9:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8);break;case 10:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8,v9);break;}break;}data.value=value;}return changed;}function checkAndUpdatePureExpressionDynamic(view,def,values){var bindings=def.bindings;var changed=false;for(var i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var data=asPureExpressionData(view,def.nodeIndex);var value=void 0;switch(def.flags&201347067/* Types */){case 32/* TypePureArray */:value=values;break;case 64/* TypePureObject */:value={};for(var i=0;i<values.length;i++){value[bindings[i].name]=values[i];}break;case 128/* TypePurePipe */:var pipe=values[0];var params=values.slice(1);value=pipe.transform.apply(pipe,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(params));break;}data.value=value;}return changed;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function textDef(checkIndex,ngContentIndex,staticText){var bindings=new Array(staticText.length-1);for(var i=1;i<staticText.length;i++){bindings[i-1]={flags:8/* TypeProperty */,name:null,ns:null,nonMinifiedName:null,securityContext:null,suffix:staticText[i]};}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:2/* TypeText */,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:bindings,bindingFlags:8/* TypeProperty */,outputs:[],element:null,provider:null,text:{prefix:staticText[0]},query:null,ngContent:null};}function createText(view,renderHost,def){var renderNode$$1;var renderer=view.renderer;renderNode$$1=renderer.createText(def.text.prefix);var parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,renderNode$$1);}return{renderText:renderNode$$1};}function checkAndUpdateTextInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var changed=false;var bindings=def.bindings;var bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var value=def.text.prefix;if(bindLen>0)value+=_addInterpolationPart(v0,bindings[0]);if(bindLen>1)value+=_addInterpolationPart(v1,bindings[1]);if(bindLen>2)value+=_addInterpolationPart(v2,bindings[2]);if(bindLen>3)value+=_addInterpolationPart(v3,bindings[3]);if(bindLen>4)value+=_addInterpolationPart(v4,bindings[4]);if(bindLen>5)value+=_addInterpolationPart(v5,bindings[5]);if(bindLen>6)value+=_addInterpolationPart(v6,bindings[6]);if(bindLen>7)value+=_addInterpolationPart(v7,bindings[7]);if(bindLen>8)value+=_addInterpolationPart(v8,bindings[8]);if(bindLen>9)value+=_addInterpolationPart(v9,bindings[9]);var renderNode$$1=asTextData(view,def.nodeIndex).renderText;view.renderer.setValue(renderNode$$1,value);}return changed;}function checkAndUpdateTextDynamic(view,def,values){var bindings=def.bindings;var changed=false;for(var i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var value='';for(var i=0;i<values.length;i++){value=value+_addInterpolationPart(values[i],bindings[i]);}value=def.text.prefix+value;var renderNode$$1=asTextData(view,def.nodeIndex).renderText;view.renderer.setValue(renderNode$$1,value);}return changed;}function _addInterpolationPart(value,binding){var valueStr=value!=null?value.toString():'';return valueStr+binding.suffix;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function viewDef(flags,nodes,updateDirectives,updateRenderer){// clone nodes and set auto calculated values
var viewBindingCount=0;var viewDisposableCount=0;var viewNodeFlags=0;var viewRootNodeFlags=0;var viewMatchedQueries=0;var currentParent=null;var currentRenderParent=null;var currentElementHasPublicProviders=false;var currentElementHasPrivateProviders=false;var lastRenderRootNode=null;for(var i=0;i<nodes.length;i++){var node=nodes[i];node.nodeIndex=i;node.parent=currentParent;node.bindingIndex=viewBindingCount;node.outputIndex=viewDisposableCount;node.renderParent=currentRenderParent;viewNodeFlags|=node.flags;viewMatchedQueries|=node.matchedQueryIds;if(node.element){var elDef=node.element;elDef.publicProviders=currentParent?currentParent.element.publicProviders:Object.create(null);elDef.allProviders=elDef.publicProviders;// Note: We assume that all providers of an element are before any child element!
currentElementHasPublicProviders=false;currentElementHasPrivateProviders=false;if(node.element.template){viewMatchedQueries|=node.element.template.nodeMatchedQueries;}}validateNode(currentParent,node,nodes.length);viewBindingCount+=node.bindings.length;viewDisposableCount+=node.outputs.length;if(!currentRenderParent&&node.flags&3/* CatRenderNode */){lastRenderRootNode=node;}if(node.flags&20224/* CatProvider */){if(!currentElementHasPublicProviders){currentElementHasPublicProviders=true;// Use prototypical inheritance to not get O(n^2) complexity...
currentParent.element.publicProviders=Object.create(currentParent.element.publicProviders);currentParent.element.allProviders=currentParent.element.publicProviders;}var isPrivateService=(node.flags&8192/* PrivateProvider */)!==0;var isComponent=(node.flags&32768/* Component */)!==0;if(!isPrivateService||isComponent){currentParent.element.publicProviders[tokenKey(node.provider.token)]=node;}else{if(!currentElementHasPrivateProviders){currentElementHasPrivateProviders=true;// Use prototypical inheritance to not get O(n^2) complexity...
currentParent.element.allProviders=Object.create(currentParent.element.publicProviders);}currentParent.element.allProviders[tokenKey(node.provider.token)]=node;}if(isComponent){currentParent.element.componentProvider=node;}}if(currentParent){currentParent.childFlags|=node.flags;currentParent.directChildFlags|=node.flags;currentParent.childMatchedQueries|=node.matchedQueryIds;if(node.element&&node.element.template){currentParent.childMatchedQueries|=node.element.template.nodeMatchedQueries;}}else{viewRootNodeFlags|=node.flags;}if(node.childCount>0){currentParent=node;if(!isNgContainer(node)){currentRenderParent=node;}}else{// When the current node has no children, check if it is the last children of its parent.
// When it is, propagate the flags up.
// The loop is required because an element could be the last transitive children of several
// elements. We loop to either the root or the highest opened element (= with remaining
// children)
while(currentParent&&i===currentParent.nodeIndex+currentParent.childCount){var newParent=currentParent.parent;if(newParent){newParent.childFlags|=currentParent.childFlags;newParent.childMatchedQueries|=currentParent.childMatchedQueries;}currentParent=newParent;// We also need to update the render parent & account for ng-container
if(currentParent&&isNgContainer(currentParent)){currentRenderParent=currentParent.renderParent;}else{currentRenderParent=currentParent;}}}}var handleEvent=function handleEvent(view,nodeIndex,eventName,event){return nodes[nodeIndex].element.handleEvent(view,eventName,event);};return{// Will be filled later...
factory:null,nodeFlags:viewNodeFlags,rootNodeFlags:viewRootNodeFlags,nodeMatchedQueries:viewMatchedQueries,flags:flags,nodes:nodes,updateDirectives:updateDirectives||NOOP,updateRenderer:updateRenderer||NOOP,handleEvent:handleEvent,bindingCount:viewBindingCount,outputCount:viewDisposableCount,lastRenderRootNode:lastRenderRootNode};}function isNgContainer(node){return(node.flags&1/* TypeElement */)!==0&&node.element.name===null;}function validateNode(parent,node,nodeCount){var template=node.element&&node.element.template;if(template){if(!template.lastRenderRootNode){throw new Error("Illegal State: Embedded templates without nodes are not allowed!");}if(template.lastRenderRootNode&&template.lastRenderRootNode.flags&16777216/* EmbeddedViews */){throw new Error("Illegal State: Last root node of a template can't have embedded views, at index "+node.nodeIndex+"!");}}if(node.flags&20224/* CatProvider */){var parentFlags=parent?parent.flags:0;if((parentFlags&1/* TypeElement */)===0){throw new Error("Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index "+node.nodeIndex+"!");}}if(node.query){if(node.flags&67108864/* TypeContentQuery */&&(!parent||(parent.flags&16384/* TypeDirective */)===0)){throw new Error("Illegal State: Content Query nodes need to be children of directives, at index "+node.nodeIndex+"!");}if(node.flags&134217728/* TypeViewQuery */&&parent){throw new Error("Illegal State: View Query nodes have to be top level nodes, at index "+node.nodeIndex+"!");}}if(node.childCount){var parentEnd=parent?parent.nodeIndex+parent.childCount:nodeCount-1;if(node.nodeIndex<=parentEnd&&node.nodeIndex+node.childCount>parentEnd){throw new Error("Illegal State: childCount of node leads outside of parent, at index "+node.nodeIndex+"!");}}}function createEmbeddedView(parent,anchorDef$$1,viewDef,context){// embedded views are seen as siblings to the anchor, so we need
// to get the parent of the anchor and use it as parentIndex.
var view=createView(parent.root,parent.renderer,parent,anchorDef$$1,viewDef);initView(view,parent.component,context);createViewNodes(view);return view;}function createRootView(root,def,context){var view=createView(root,root.renderer,null,null,def);initView(view,context,context);createViewNodes(view);return view;}function createComponentView(parentView,nodeDef,viewDef,hostElement){var rendererType=nodeDef.element.componentRendererType;var compRenderer;if(!rendererType){compRenderer=parentView.root.renderer;}else{compRenderer=parentView.root.rendererFactory.createRenderer(hostElement,rendererType);}return createView(parentView.root,compRenderer,parentView,nodeDef.element.componentProvider,viewDef);}function createView(root,renderer,parent,parentNodeDef,def){var nodes=new Array(def.nodes.length);var disposables=def.outputCount?new Array(def.outputCount):null;var view={def:def,parent:parent,viewContainerParent:null,parentNodeDef:parentNodeDef,context:null,component:null,nodes:nodes,state:13/* CatInit */,root:root,renderer:renderer,oldValues:new Array(def.bindingCount),disposables:disposables,initIndex:-1};return view;}function initView(view,component,context){view.component=component;view.context=context;}function createViewNodes(view){var renderHost;if(isComponentView(view)){var hostDef=view.parentNodeDef;renderHost=asElementData(view.parent,hostDef.parent.nodeIndex).renderElement;}var def=view.def;var nodes=view.nodes;for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];Services.setCurrentNode(view,i);var nodeData=void 0;switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:var el=createElement(view,renderHost,nodeDef);var componentView=undefined;if(nodeDef.flags&33554432/* ComponentView */){var compViewDef=resolveDefinition(nodeDef.element.componentView);componentView=Services.createComponentView(view,nodeDef,compViewDef,el);}listenToElementOutputs(view,componentView,nodeDef,el);nodeData={renderElement:el,componentView:componentView,viewContainer:null,template:nodeDef.element.template?createTemplateData(view,nodeDef):undefined};if(nodeDef.flags&16777216/* EmbeddedViews */){nodeData.viewContainer=createViewContainerData(view,nodeDef,nodeData);}break;case 2/* TypeText */:nodeData=createText(view,renderHost,nodeDef);break;case 512/* TypeClassProvider */:case 1024/* TypeFactoryProvider */:case 2048/* TypeUseExistingProvider */:case 256/* TypeValueProvider */:{nodeData=nodes[i];if(!nodeData&&!(nodeDef.flags&4096/* LazyProvider */)){var instance=createProviderInstance(view,nodeDef);nodeData={instance:instance};}break;}case 16/* TypePipe */:{var instance=createPipeInstance(view,nodeDef);nodeData={instance:instance};break;}case 16384/* TypeDirective */:{nodeData=nodes[i];if(!nodeData){var instance=createDirectiveInstance(view,nodeDef);nodeData={instance:instance};}if(nodeDef.flags&32768/* Component */){var compView=asElementData(view,nodeDef.parent.nodeIndex).componentView;initView(compView,nodeData.instance,nodeData.instance);}break;}case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:nodeData=createPureExpression(view,nodeDef);break;case 67108864/* TypeContentQuery */:case 134217728/* TypeViewQuery */:nodeData=createQuery$1();break;case 8/* TypeNgContent */:appendNgContent(view,renderHost,nodeDef);// no runtime data needed for NgContent...
nodeData=undefined;break;}nodes[i]=nodeData;}// Create the ViewData.nodes of component views after we created everything else,
// so that e.g. ng-content works
execComponentViewsAction(view,ViewAction.CreateViewNodes);// fill static content and view queries
execQueriesAction(view,67108864/* TypeContentQuery */|134217728/* TypeViewQuery */,268435456/* StaticQuery */,0/* CheckAndUpdate */);}function checkNoChangesView(view){markProjectedViewsForCheck(view);Services.updateDirectives(view,1/* CheckNoChanges */);execEmbeddedViewsAction(view,ViewAction.CheckNoChanges);Services.updateRenderer(view,1/* CheckNoChanges */);execComponentViewsAction(view,ViewAction.CheckNoChanges);// Note: We don't check queries for changes as we didn't do this in v2.x.
// TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.
view.state&=~(64/* CheckProjectedViews */|32/* CheckProjectedView */);}function checkAndUpdateView(view){if(view.state&1/* BeforeFirstCheck */){view.state&=~1/* BeforeFirstCheck */;view.state|=2/* FirstCheck */;}else{view.state&=~2/* FirstCheck */;}shiftInitState(view,0/* InitState_BeforeInit */,256/* InitState_CallingOnInit */);markProjectedViewsForCheck(view);Services.updateDirectives(view,0/* CheckAndUpdate */);execEmbeddedViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,67108864/* TypeContentQuery */,536870912/* DynamicQuery */,0/* CheckAndUpdate */);var callInit=shiftInitState(view,256/* InitState_CallingOnInit */,512/* InitState_CallingAfterContentInit */);callLifecycleHooksChildrenFirst(view,2097152/* AfterContentChecked */|(callInit?1048576/* AfterContentInit */:0));Services.updateRenderer(view,0/* CheckAndUpdate */);execComponentViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,134217728/* TypeViewQuery */,536870912/* DynamicQuery */,0/* CheckAndUpdate */);callInit=shiftInitState(view,512/* InitState_CallingAfterContentInit */,768/* InitState_CallingAfterViewInit */);callLifecycleHooksChildrenFirst(view,8388608/* AfterViewChecked */|(callInit?4194304/* AfterViewInit */:0));if(view.def.flags&2/* OnPush */){view.state&=~8/* ChecksEnabled */;}view.state&=~(64/* CheckProjectedViews */|32/* CheckProjectedView */);shiftInitState(view,768/* InitState_CallingAfterViewInit */,1024/* InitState_AfterInit */);}function checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===0/* Inline */){return checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{return checkAndUpdateNodeDynamic(view,nodeDef,v0);}}function markProjectedViewsForCheck(view){var def=view.def;if(!(def.nodeFlags&4/* ProjectedTemplate */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&4/* ProjectedTemplate */){var projectedViews=asElementData(view,i).template._projectedViews;if(projectedViews){for(var i_1=0;i_1<projectedViews.length;i_1++){var projectedView=projectedViews[i_1];projectedView.state|=32/* CheckProjectedView */;markParentViewsForCheckProjectedViews(projectedView,view);}}}else if((nodeDef.childFlags&4/* ProjectedTemplate */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:return checkAndUpdateElementInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 2/* TypeText */:return checkAndUpdateTextInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 16384/* TypeDirective */:return checkAndUpdateDirectiveInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:return checkAndUpdatePureExpressionInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);default:throw'unreachable';}}function checkAndUpdateNodeDynamic(view,nodeDef,values){switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:return checkAndUpdateElementDynamic(view,nodeDef,values);case 2/* TypeText */:return checkAndUpdateTextDynamic(view,nodeDef,values);case 16384/* TypeDirective */:return checkAndUpdateDirectiveDynamic(view,nodeDef,values);case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:return checkAndUpdatePureExpressionDynamic(view,nodeDef,values);default:throw'unreachable';}}function checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===0/* Inline */){checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{checkNoChangesNodeDynamic(view,nodeDef,v0);}// Returning false is ok here as we would have thrown in case of a change.
return false;}function checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindLen=nodeDef.bindings.length;if(bindLen>0)checkBindingNoChanges(view,nodeDef,0,v0);if(bindLen>1)checkBindingNoChanges(view,nodeDef,1,v1);if(bindLen>2)checkBindingNoChanges(view,nodeDef,2,v2);if(bindLen>3)checkBindingNoChanges(view,nodeDef,3,v3);if(bindLen>4)checkBindingNoChanges(view,nodeDef,4,v4);if(bindLen>5)checkBindingNoChanges(view,nodeDef,5,v5);if(bindLen>6)checkBindingNoChanges(view,nodeDef,6,v6);if(bindLen>7)checkBindingNoChanges(view,nodeDef,7,v7);if(bindLen>8)checkBindingNoChanges(view,nodeDef,8,v8);if(bindLen>9)checkBindingNoChanges(view,nodeDef,9,v9);}function checkNoChangesNodeDynamic(view,nodeDef,values){for(var i=0;i<values.length;i++){checkBindingNoChanges(view,nodeDef,i,values[i]);}}/**
 * Workaround https://github.com/angular/tsickle/issues/497
 * @suppress {misplacedTypeAnnotation}
 */function checkNoChangesQuery(view,nodeDef){var queryList=asQueryList(view,nodeDef.nodeIndex);if(queryList.dirty){throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view,nodeDef.nodeIndex),"Query "+nodeDef.query.id+" not dirty","Query "+nodeDef.query.id+" dirty",(view.state&1/* BeforeFirstCheck */)!==0);}}function destroyView(view){if(view.state&128/* Destroyed */){return;}execEmbeddedViewsAction(view,ViewAction.Destroy);execComponentViewsAction(view,ViewAction.Destroy);callLifecycleHooksChildrenFirst(view,131072/* OnDestroy */);if(view.disposables){for(var i=0;i<view.disposables.length;i++){view.disposables[i]();}}detachProjectedView(view);if(view.renderer.destroyNode){destroyViewNodes(view);}if(isComponentView(view)){view.renderer.destroy();}view.state|=128/* Destroyed */;}function destroyViewNodes(view){var len=view.def.nodes.length;for(var i=0;i<len;i++){var def=view.def.nodes[i];if(def.flags&1/* TypeElement */){view.renderer.destroyNode(asElementData(view,i).renderElement);}else if(def.flags&2/* TypeText */){view.renderer.destroyNode(asTextData(view,i).renderText);}else if(def.flags&67108864/* TypeContentQuery */||def.flags&134217728/* TypeViewQuery */){asQueryList(view,i).destroy();}}}var ViewAction;(function(ViewAction){ViewAction[ViewAction["CreateViewNodes"]=0]="CreateViewNodes";ViewAction[ViewAction["CheckNoChanges"]=1]="CheckNoChanges";ViewAction[ViewAction["CheckNoChangesProjectedViews"]=2]="CheckNoChangesProjectedViews";ViewAction[ViewAction["CheckAndUpdate"]=3]="CheckAndUpdate";ViewAction[ViewAction["CheckAndUpdateProjectedViews"]=4]="CheckAndUpdateProjectedViews";ViewAction[ViewAction["Destroy"]=5]="Destroy";})(ViewAction||(ViewAction={}));function execComponentViewsAction(view,action){var def=view.def;if(!(def.nodeFlags&33554432/* ComponentView */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&33554432/* ComponentView */){// a leaf
callViewAction(asElementData(view,i).componentView,action);}else if((nodeDef.childFlags&33554432/* ComponentView */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function execEmbeddedViewsAction(view,action){var def=view.def;if(!(def.nodeFlags&16777216/* EmbeddedViews */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&16777216/* EmbeddedViews */){// a leaf
var embeddedViews=asElementData(view,i).viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){callViewAction(embeddedViews[k],action);}}else if((nodeDef.childFlags&16777216/* EmbeddedViews */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function callViewAction(view,action){var viewState=view.state;switch(action){case ViewAction.CheckNoChanges:if((viewState&128/* Destroyed */)===0){if((viewState&12/* CatDetectChanges */)===12/* CatDetectChanges */){checkNoChangesView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,ViewAction.CheckNoChangesProjectedViews);}}break;case ViewAction.CheckNoChangesProjectedViews:if((viewState&128/* Destroyed */)===0){if(viewState&32/* CheckProjectedView */){checkNoChangesView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,action);}}break;case ViewAction.CheckAndUpdate:if((viewState&128/* Destroyed */)===0){if((viewState&12/* CatDetectChanges */)===12/* CatDetectChanges */){checkAndUpdateView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,ViewAction.CheckAndUpdateProjectedViews);}}break;case ViewAction.CheckAndUpdateProjectedViews:if((viewState&128/* Destroyed */)===0){if(viewState&32/* CheckProjectedView */){checkAndUpdateView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,action);}}break;case ViewAction.Destroy:// Note: destroyView recurses over all views,
// so we don't need to special case projected views here.
destroyView(view);break;case ViewAction.CreateViewNodes:createViewNodes(view);break;}}function execProjectedViewsAction(view,action){execEmbeddedViewsAction(view,action);execComponentViewsAction(view,action);}function execQueriesAction(view,queryFlags,staticDynamicQueryFlag,checkType){if(!(view.def.nodeFlags&queryFlags)||!(view.def.nodeFlags&staticDynamicQueryFlag)){return;}var nodeCount=view.def.nodes.length;for(var i=0;i<nodeCount;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&queryFlags&&nodeDef.flags&staticDynamicQueryFlag){Services.setCurrentNode(view,nodeDef.nodeIndex);switch(checkType){case 0/* CheckAndUpdate */:checkAndUpdateQuery(view,nodeDef);break;case 1/* CheckNoChanges */:checkNoChangesQuery(view,nodeDef);break;}}if(!(nodeDef.childFlags&queryFlags)||!(nodeDef.childFlags&staticDynamicQueryFlag)){// no child has a matching query
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var initialized=false;function initServicesIfNeeded(){if(initialized){return;}initialized=true;var services=isDevMode()?createDebugServices():createProdServices();Services.setCurrentNode=services.setCurrentNode;Services.createRootView=services.createRootView;Services.createEmbeddedView=services.createEmbeddedView;Services.createComponentView=services.createComponentView;Services.createNgModuleRef=services.createNgModuleRef;Services.overrideProvider=services.overrideProvider;Services.overrideComponentView=services.overrideComponentView;Services.clearOverrides=services.clearOverrides;Services.checkAndUpdateView=services.checkAndUpdateView;Services.checkNoChangesView=services.checkNoChangesView;Services.destroyView=services.destroyView;Services.resolveDep=resolveDep;Services.createDebugContext=services.createDebugContext;Services.handleEvent=services.handleEvent;Services.updateDirectives=services.updateDirectives;Services.updateRenderer=services.updateRenderer;Services.dirtyParentQueries=dirtyParentQueries;}function createProdServices(){return{setCurrentNode:function setCurrentNode(){},createRootView:createProdRootView,createEmbeddedView:createEmbeddedView,createComponentView:createComponentView,createNgModuleRef:createNgModuleRef,overrideProvider:NOOP,overrideComponentView:NOOP,clearOverrides:NOOP,checkAndUpdateView:checkAndUpdateView,checkNoChangesView:checkNoChangesView,destroyView:destroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:function handleEvent(view,nodeIndex,eventName,event){return view.def.handleEvent(view,nodeIndex,eventName,event);},updateDirectives:function updateDirectives(view,checkType){return view.def.updateDirectives(checkType===0/* CheckAndUpdate */?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);},updateRenderer:function updateRenderer(view,checkType){return view.def.updateRenderer(checkType===0/* CheckAndUpdate */?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);}};}function createDebugServices(){return{setCurrentNode:debugSetCurrentNode,createRootView:debugCreateRootView,createEmbeddedView:debugCreateEmbeddedView,createComponentView:debugCreateComponentView,createNgModuleRef:debugCreateNgModuleRef,overrideProvider:debugOverrideProvider,overrideComponentView:debugOverrideComponentView,clearOverrides:debugClearOverrides,checkAndUpdateView:debugCheckAndUpdateView,checkNoChangesView:debugCheckNoChangesView,destroyView:debugDestroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:debugHandleEvent,updateDirectives:debugUpdateDirectives,updateRenderer:debugUpdateRenderer};}function createProdRootView(elInjector,projectableNodes,rootSelectorOrNode,def,ngModule,context){var rendererFactory=ngModule.injector.get(RendererFactory2);return createRootView(createRootData(elInjector,ngModule,rendererFactory,projectableNodes,rootSelectorOrNode),def,context);}function debugCreateRootView(elInjector,projectableNodes,rootSelectorOrNode,def,ngModule,context){var rendererFactory=ngModule.injector.get(RendererFactory2);var root=createRootData(elInjector,ngModule,new DebugRendererFactory2(rendererFactory),projectableNodes,rootSelectorOrNode);var defWithOverride=applyProviderOverridesToView(def);return callWithDebugContext(DebugAction.create,createRootView,null,[root,defWithOverride,context]);}function createRootData(elInjector,ngModule,rendererFactory,projectableNodes,rootSelectorOrNode){var sanitizer=ngModule.injector.get(Sanitizer);var errorHandler=ngModule.injector.get(ErrorHandler);var renderer=rendererFactory.createRenderer(null,null);return{ngModule:ngModule,injector:elInjector,projectableNodes:projectableNodes,selectorOrNode:rootSelectorOrNode,sanitizer:sanitizer,rendererFactory:rendererFactory,renderer:renderer,errorHandler:errorHandler};}function debugCreateEmbeddedView(parentView,anchorDef,viewDef$$1,context){var defWithOverride=applyProviderOverridesToView(viewDef$$1);return callWithDebugContext(DebugAction.create,createEmbeddedView,null,[parentView,anchorDef,defWithOverride,context]);}function debugCreateComponentView(parentView,nodeDef,viewDef$$1,hostElement){var overrideComponentView=viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);if(overrideComponentView){viewDef$$1=overrideComponentView;}else{viewDef$$1=applyProviderOverridesToView(viewDef$$1);}return callWithDebugContext(DebugAction.create,createComponentView,null,[parentView,nodeDef,viewDef$$1,hostElement]);}function debugCreateNgModuleRef(moduleType,parentInjector,bootstrapComponents,def){var defWithOverride=applyProviderOverridesToNgModule(def);return createNgModuleRef(moduleType,parentInjector,bootstrapComponents,defWithOverride);}var providerOverrides=new Map();var providerOverridesWithScope=new Map();var viewDefOverrides=new Map();function debugOverrideProvider(override){providerOverrides.set(override.token,override);var injectableDef;if(typeof override.token==='function'&&(injectableDef=getInjectableDef(override.token))&&typeof injectableDef.providedIn==='function'){providerOverridesWithScope.set(override.token,override);}}function debugOverrideComponentView(comp,compFactory){var hostViewDef=resolveDefinition(getComponentViewDefinitionFactory(compFactory));var compViewDef=resolveDefinition(hostViewDef.nodes[0].element.componentView);viewDefOverrides.set(comp,compViewDef);}function debugClearOverrides(){providerOverrides.clear();providerOverridesWithScope.clear();viewDefOverrides.clear();}// Notes about the algorithm:
// 1) Locate the providers of an element and check if one of them was overwritten
// 2) Change the providers of that element
//
// We only create new datastructures if we need to, to keep perf impact
// reasonable.
function applyProviderOverridesToView(def){if(providerOverrides.size===0){return def;}var elementIndicesWithOverwrittenProviders=findElementIndicesWithOverwrittenProviders(def);if(elementIndicesWithOverwrittenProviders.length===0){return def;}// clone the whole view definition,
// as it maintains references between the nodes that are hard to update.
def=def.factory(function(){return NOOP;});for(var i=0;i<elementIndicesWithOverwrittenProviders.length;i++){applyProviderOverridesToElement(def,elementIndicesWithOverwrittenProviders[i]);}return def;function findElementIndicesWithOverwrittenProviders(def){var elIndicesWithOverwrittenProviders=[];var lastElementDef=null;for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&1/* TypeElement */){lastElementDef=nodeDef;}if(lastElementDef&&nodeDef.flags&3840/* CatProviderNoDirective */&&providerOverrides.has(nodeDef.provider.token)){elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);lastElementDef=null;}}return elIndicesWithOverwrittenProviders;}function applyProviderOverridesToElement(viewDef$$1,elIndex){for(var i=elIndex+1;i<viewDef$$1.nodes.length;i++){var nodeDef=viewDef$$1.nodes[i];if(nodeDef.flags&1/* TypeElement */){// stop at the next element
return;}if(nodeDef.flags&3840/* CatProviderNoDirective */){var provider=nodeDef.provider;var override=providerOverrides.get(provider.token);if(override){nodeDef.flags=nodeDef.flags&~3840/* CatProviderNoDirective */|override.flags;provider.deps=splitDepsDsl(override.deps);provider.value=override.value;}}}}}// Notes about the algorithm:
// We only create new datastructures if we need to, to keep perf impact
// reasonable.
function applyProviderOverridesToNgModule(def){var _a=calcHasOverrides(def),hasOverrides=_a.hasOverrides,hasDeprecatedOverrides=_a.hasDeprecatedOverrides;if(!hasOverrides){return def;}// clone the whole view definition,
// as it maintains references between the nodes that are hard to update.
def=def.factory(function(){return NOOP;});applyProviderOverrides(def);return def;function calcHasOverrides(def){var hasOverrides=false;var hasDeprecatedOverrides=false;if(providerOverrides.size===0){return{hasOverrides:hasOverrides,hasDeprecatedOverrides:hasDeprecatedOverrides};}def.providers.forEach(function(node){var override=providerOverrides.get(node.token);if(node.flags&3840/* CatProviderNoDirective */&&override){hasOverrides=true;hasDeprecatedOverrides=hasDeprecatedOverrides||override.deprecatedBehavior;}});def.modules.forEach(function(module){providerOverridesWithScope.forEach(function(override,token){if(getInjectableDef(token).providedIn===module){hasOverrides=true;hasDeprecatedOverrides=hasDeprecatedOverrides||override.deprecatedBehavior;}});});return{hasOverrides:hasOverrides,hasDeprecatedOverrides:hasDeprecatedOverrides};}function applyProviderOverrides(def){for(var i=0;i<def.providers.length;i++){var provider=def.providers[i];if(hasDeprecatedOverrides){// We had a bug where me made
// all providers lazy. Keep this logic behind a flag
// for migrating existing users.
provider.flags|=4096/* LazyProvider */;}var override=providerOverrides.get(provider.token);if(override){provider.flags=provider.flags&~3840/* CatProviderNoDirective */|override.flags;provider.deps=splitDepsDsl(override.deps);provider.value=override.value;}}if(providerOverridesWithScope.size>0){var moduleSet_1=new Set(def.modules);providerOverridesWithScope.forEach(function(override,token){if(moduleSet_1.has(getInjectableDef(token).providedIn)){var provider={token:token,flags:override.flags|(hasDeprecatedOverrides?4096/* LazyProvider */:0/* None */),deps:splitDepsDsl(override.deps),value:override.value,index:def.providers.length};def.providers.push(provider);def.providersByKey[tokenKey(token)]=provider;}});}}}function prodCheckAndUpdateNode(view,checkIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var nodeDef=view.def.nodes[checkIndex];checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,checkIndex).value:undefined;}function prodCheckNoChangesNode(view,checkIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var nodeDef=view.def.nodes[checkIndex];checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,checkIndex).value:undefined;}function debugCheckAndUpdateView(view){return callWithDebugContext(DebugAction.detectChanges,checkAndUpdateView,null,[view]);}function debugCheckNoChangesView(view){return callWithDebugContext(DebugAction.checkNoChanges,checkNoChangesView,null,[view]);}function debugDestroyView(view){return callWithDebugContext(DebugAction.destroy,destroyView,null,[view]);}var DebugAction;(function(DebugAction){DebugAction[DebugAction["create"]=0]="create";DebugAction[DebugAction["detectChanges"]=1]="detectChanges";DebugAction[DebugAction["checkNoChanges"]=2]="checkNoChanges";DebugAction[DebugAction["destroy"]=3]="destroy";DebugAction[DebugAction["handleEvent"]=4]="handleEvent";})(DebugAction||(DebugAction={}));var _currentAction;var _currentView;var _currentNodeIndex;function debugSetCurrentNode(view,nodeIndex){_currentView=view;_currentNodeIndex=nodeIndex;}function debugHandleEvent(view,nodeIndex,eventName,event){debugSetCurrentNode(view,nodeIndex);return callWithDebugContext(DebugAction.handleEvent,view.def.handleEvent,null,[view,nodeIndex,eventName,event]);}function debugUpdateDirectives(view,checkType){if(view.state&128/* Destroyed */){throw viewDestroyedError(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextDirectiveWithBinding(view,0));return view.def.updateDirectives(debugCheckDirectivesFn,view);function debugCheckDirectivesFn(view,nodeIndex,argStyle){var values=[];for(var _i=3;_i<arguments.length;_i++){values[_i-3]=arguments[_i];}var nodeDef=view.def.nodes[nodeIndex];if(checkType===0/* CheckAndUpdate */){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.flags&16384/* TypeDirective */){debugSetCurrentNode(view,nextDirectiveWithBinding(view,nodeIndex));}return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,nodeDef.nodeIndex).value:undefined;}}function debugUpdateRenderer(view,checkType){if(view.state&128/* Destroyed */){throw viewDestroyedError(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextRenderNodeWithBinding(view,0));return view.def.updateRenderer(debugCheckRenderNodeFn,view);function debugCheckRenderNodeFn(view,nodeIndex,argStyle){var values=[];for(var _i=3;_i<arguments.length;_i++){values[_i-3]=arguments[_i];}var nodeDef=view.def.nodes[nodeIndex];if(checkType===0/* CheckAndUpdate */){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.flags&3/* CatRenderNode */){debugSetCurrentNode(view,nextRenderNodeWithBinding(view,nodeIndex));}return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,nodeDef.nodeIndex).value:undefined;}}function debugCheckAndUpdateNode(view,nodeDef,argStyle,givenValues){var changed=checkAndUpdateNode.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([view,nodeDef,argStyle],givenValues));if(changed){var values=argStyle===1/* Dynamic */?givenValues[0]:givenValues;if(nodeDef.flags&16384/* TypeDirective */){var bindingValues={};for(var i=0;i<nodeDef.bindings.length;i++){var binding=nodeDef.bindings[i];var value=values[i];if(binding.flags&8/* TypeProperty */){bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)]=normalizeDebugBindingValue(value);}}var elDef=nodeDef.parent;var el=asElementData(view,elDef.nodeIndex).renderElement;if(!elDef.element.name){// a comment.
view.renderer.setValue(el,"bindings="+JSON.stringify(bindingValues,null,2));}else{// a regular element.
for(var attr in bindingValues){var value=bindingValues[attr];if(value!=null){view.renderer.setAttribute(el,attr,value);}else{view.renderer.removeAttribute(el,attr);}}}}}}function debugCheckNoChangesNode(view,nodeDef,argStyle,values){checkNoChangesNode.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([view,nodeDef,argStyle],values));}function normalizeDebugBindingName(name){// Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
name=camelCaseToDashCase(name.replace(/[$@]/g,'_'));return"ng-reflect-"+name;}var CAMEL_CASE_REGEXP=/([A-Z])/g;function camelCaseToDashCase(input){return input.replace(CAMEL_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return'-'+m[1].toLowerCase();});}function normalizeDebugBindingValue(value){try{// Limit the size of the value as otherwise the DOM just gets polluted.
return value!=null?value.toString().slice(0,30):value;}catch(e){return'[ERROR] Exception while trying to serialize the value';}}function nextDirectiveWithBinding(view,nodeIndex){for(var i=nodeIndex;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&16384/* TypeDirective */&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return null;}function nextRenderNodeWithBinding(view,nodeIndex){for(var i=nodeIndex;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&3/* CatRenderNode */&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return null;}var DebugContext_=/** @class */function(){function DebugContext_(view,nodeIndex){this.view=view;this.nodeIndex=nodeIndex;if(nodeIndex==null){this.nodeIndex=nodeIndex=0;}this.nodeDef=view.def.nodes[nodeIndex];var elDef=this.nodeDef;var elView=view;while(elDef&&(elDef.flags&1/* TypeElement */)===0){elDef=elDef.parent;}if(!elDef){while(!elDef&&elView){elDef=viewParentEl(elView);elView=elView.parent;}}this.elDef=elDef;this.elView=elView;}Object.defineProperty(DebugContext_.prototype,"elOrCompView",{get:function get(){// Has to be done lazily as we use the DebugContext also during creation of elements...
return asElementData(this.elView,this.elDef.nodeIndex).componentView||this.view;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"injector",{get:function get(){return createInjector$1(this.elView,this.elDef);},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"component",{get:function get(){return this.elOrCompView.component;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"context",{get:function get(){return this.elOrCompView.context;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"providerTokens",{get:function get(){var tokens=[];if(this.elDef){for(var i=this.elDef.nodeIndex+1;i<=this.elDef.nodeIndex+this.elDef.childCount;i++){var childDef=this.elView.def.nodes[i];if(childDef.flags&20224/* CatProvider */){tokens.push(childDef.provider.token);}i+=childDef.childCount;}}return tokens;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"references",{get:function get(){var references={};if(this.elDef){collectReferences(this.elView,this.elDef,references);for(var i=this.elDef.nodeIndex+1;i<=this.elDef.nodeIndex+this.elDef.childCount;i++){var childDef=this.elView.def.nodes[i];if(childDef.flags&20224/* CatProvider */){collectReferences(this.elView,childDef,references);}i+=childDef.childCount;}}return references;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"componentRenderElement",{get:function get(){var elData=findHostElement(this.elOrCompView);return elData?elData.renderElement:undefined;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"renderNode",{get:function get(){return this.nodeDef.flags&2/* TypeText */?renderNode(this.view,this.nodeDef):renderNode(this.elView,this.elDef);},enumerable:true,configurable:true});DebugContext_.prototype.logError=function(console){var values=[];for(var _i=1;_i<arguments.length;_i++){values[_i-1]=arguments[_i];}var logViewDef;var logNodeIndex;if(this.nodeDef.flags&2/* TypeText */){logViewDef=this.view.def;logNodeIndex=this.nodeDef.nodeIndex;}else{logViewDef=this.elView.def;logNodeIndex=this.elDef.nodeIndex;}// Note: we only generate a log function for text and element nodes
// to make the generated code as small as possible.
var renderNodeIndex=getRenderNodeIndex(logViewDef,logNodeIndex);var currRenderNodeIndex=-1;var nodeLogger=function nodeLogger(){var _a;currRenderNodeIndex++;if(currRenderNodeIndex===renderNodeIndex){return(_a=console.error).bind.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([console],values));}else{return NOOP;}};logViewDef.factory(nodeLogger);if(currRenderNodeIndex<renderNodeIndex){console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');console.error.apply(console,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(values));}};return DebugContext_;}();function getRenderNodeIndex(viewDef$$1,nodeIndex){var renderNodeIndex=-1;for(var i=0;i<=nodeIndex;i++){var nodeDef=viewDef$$1.nodes[i];if(nodeDef.flags&3/* CatRenderNode */){renderNodeIndex++;}}return renderNodeIndex;}function findHostElement(view){while(view&&!isComponentView(view)){view=view.parent;}if(view.parent){return asElementData(view.parent,viewParentEl(view).nodeIndex);}return null;}function collectReferences(view,nodeDef,references){for(var refName in nodeDef.references){references[refName]=getQueryValue(view,nodeDef,nodeDef.references[refName]);}}function callWithDebugContext(action,fn,self,args){var oldAction=_currentAction;var oldView=_currentView;var oldNodeIndex=_currentNodeIndex;try{_currentAction=action;var result=fn.apply(self,args);_currentView=oldView;_currentNodeIndex=oldNodeIndex;_currentAction=oldAction;return result;}catch(e){if(isViewDebugError(e)||!_currentView){throw e;}throw viewWrappedDebugError(e,getCurrentDebugContext());}}function getCurrentDebugContext(){return _currentView?new DebugContext_(_currentView,_currentNodeIndex):null;}var DebugRendererFactory2=/** @class */function(){function DebugRendererFactory2(delegate){this.delegate=delegate;}DebugRendererFactory2.prototype.createRenderer=function(element,renderData){return new DebugRenderer2(this.delegate.createRenderer(element,renderData));};DebugRendererFactory2.prototype.begin=function(){if(this.delegate.begin){this.delegate.begin();}};DebugRendererFactory2.prototype.end=function(){if(this.delegate.end){this.delegate.end();}};DebugRendererFactory2.prototype.whenRenderingDone=function(){if(this.delegate.whenRenderingDone){return this.delegate.whenRenderingDone();}return Promise.resolve(null);};return DebugRendererFactory2;}();var DebugRenderer2=/** @class */function(){function DebugRenderer2(delegate){this.delegate=delegate;/**
         * Factory function used to create a `DebugContext` when a node is created.
         *
         * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.
         *
         * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine
         * or a Render context.
         */this.debugContextFactory=getCurrentDebugContext;this.data=this.delegate.data;}DebugRenderer2.prototype.createDebugContext=function(nativeElement){return this.debugContextFactory(nativeElement);};DebugRenderer2.prototype.destroyNode=function(node){removeDebugNodeFromIndex(getDebugNode(node));if(this.delegate.destroyNode){this.delegate.destroyNode(node);}};DebugRenderer2.prototype.destroy=function(){this.delegate.destroy();};DebugRenderer2.prototype.createElement=function(name,namespace){var el=this.delegate.createElement(name,namespace);var debugCtx=this.createDebugContext(el);if(debugCtx){var debugEl=new DebugElement(el,null,debugCtx);debugEl.name=name;indexDebugNode(debugEl);}return el;};DebugRenderer2.prototype.createComment=function(value){var comment=this.delegate.createComment(value);var debugCtx=this.createDebugContext(comment);if(debugCtx){indexDebugNode(new DebugNode(comment,null,debugCtx));}return comment;};DebugRenderer2.prototype.createText=function(value){var text=this.delegate.createText(value);var debugCtx=this.createDebugContext(text);if(debugCtx){indexDebugNode(new DebugNode(text,null,debugCtx));}return text;};DebugRenderer2.prototype.appendChild=function(parent,newChild){var debugEl=getDebugNode(parent);var debugChildEl=getDebugNode(newChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.addChild(debugChildEl);}this.delegate.appendChild(parent,newChild);};DebugRenderer2.prototype.insertBefore=function(parent,newChild,refChild){var debugEl=getDebugNode(parent);var debugChildEl=getDebugNode(newChild);var debugRefEl=getDebugNode(refChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.insertBefore(debugRefEl,debugChildEl);}this.delegate.insertBefore(parent,newChild,refChild);};DebugRenderer2.prototype.removeChild=function(parent,oldChild){var debugEl=getDebugNode(parent);var debugChildEl=getDebugNode(oldChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.removeChild(debugChildEl);}this.delegate.removeChild(parent,oldChild);};DebugRenderer2.prototype.selectRootElement=function(selectorOrNode,preserveContent){var el=this.delegate.selectRootElement(selectorOrNode,preserveContent);var debugCtx=getCurrentDebugContext()||(ivyEnabled$1?this.createDebugContext(el):null);if(debugCtx){indexDebugNode(new DebugElement(el,null,debugCtx));}return el;};DebugRenderer2.prototype.setAttribute=function(el,name,value,namespace){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=value;}this.delegate.setAttribute(el,name,value,namespace);};DebugRenderer2.prototype.removeAttribute=function(el,name,namespace){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=null;}this.delegate.removeAttribute(el,name,namespace);};DebugRenderer2.prototype.addClass=function(el,name){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=true;}this.delegate.addClass(el,name);};DebugRenderer2.prototype.removeClass=function(el,name){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=false;}this.delegate.removeClass(el,name);};DebugRenderer2.prototype.setStyle=function(el,style,value,flags){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=value;}this.delegate.setStyle(el,style,value,flags);};DebugRenderer2.prototype.removeStyle=function(el,style,flags){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=null;}this.delegate.removeStyle(el,style,flags);};DebugRenderer2.prototype.setProperty=function(el,name,value){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.properties[name]=value;}this.delegate.setProperty(el,name,value);};DebugRenderer2.prototype.listen=function(target,eventName,callback){if(typeof target!=='string'){var debugEl=getDebugNode(target);if(debugEl){debugEl.listeners.push(new EventListener(eventName,callback));}}return this.delegate.listen(target,eventName,callback);};DebugRenderer2.prototype.parentNode=function(node){return this.delegate.parentNode(node);};DebugRenderer2.prototype.nextSibling=function(node){return this.delegate.nextSibling(node);};DebugRenderer2.prototype.setValue=function(node,value){return this.delegate.setValue(node,value);};return DebugRenderer2;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function overrideProvider(override){initServicesIfNeeded();return Services.overrideProvider(override);}function overrideComponentView(comp,componentFactory){initServicesIfNeeded();return Services.overrideComponentView(comp,componentFactory);}function clearOverrides(){initServicesIfNeeded();return Services.clearOverrides();}// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createNgModuleFactory(ngModuleType,bootstrapComponents,defFactory){return new NgModuleFactory_(ngModuleType,bootstrapComponents,defFactory);}function cloneNgModuleDefinition(def){var providers=Array.from(def.providers);var modules=Array.from(def.modules);var providersByKey={};for(var key in def.providersByKey){providersByKey[key]=def.providersByKey[key];}return{factory:def.factory,isRoot:def.isRoot,providers:providers,modules:modules,providersByKey:providersByKey};}var NgModuleFactory_=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgModuleFactory_,_super);function NgModuleFactory_(moduleType,_bootstrapComponents,_ngModuleDefFactory){var _this=// Attention: this ctor is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
_super.call(this)||this;_this.moduleType=moduleType;_this._bootstrapComponents=_bootstrapComponents;_this._ngModuleDefFactory=_ngModuleDefFactory;return _this;}NgModuleFactory_.prototype.create=function(parentInjector){initServicesIfNeeded();// Clone the NgModuleDefinition so that any tree shakeable provider definition
// added to this instance of the NgModuleRef doesn't affect the cached copy.
// See https://github.com/angular/angular/issues/25018.
var def=cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));return Services.createNgModuleRef(this.moduleType,parentInjector||Injector.NULL,this._bootstrapComponents,def);};return NgModuleFactory_;}(NgModuleFactory);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Returns the host component instance associated with the target.
 *
 * This will only return a component instance of the DOM node
 * contains an instance of a component on it.
 */function getHostComponent(target){var context=loadContext(target);var tNode=context.lViewData[TVIEW].data[context.nodeIndex];if(tNode.flags&4096/* isComponent */){var componentView=getComponentViewByIndex(context.nodeIndex,context.lViewData);return componentView[CONTEXT];}return null;}/**
 * Returns the injector instance that is associated with
 * the element, component or directive.
 */function getInjector(target){var context=loadContext(target);var tNode=context.lViewData[TVIEW].data[context.nodeIndex];return new NodeInjector(tNode,context.lViewData);}/**
 * Returns LContext associated with a target passed as an argument.
 * Throws if a given target doesn't have associated LContext.
 */function loadContext(target){var context=getContext(target);if(!context){throw new Error(ngDevMode?'Unable to find the given context data for the given target':'Invalid ng target');}return context;}/**
 *  Retrieve map of local references (local reference name => element or directive instance).
 */function getLocalRefs(target){var context=loadContext(target);if(context.localRefs===undefined){context.localRefs=discoverLocalRefs(context.lViewData,context.nodeIndex);}return context.localRefs||{};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.
 *
 * The created DebugRenderer know how to create a Debug Context specific to IVY.
 */var Render3DebugRendererFactory2=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Render3DebugRendererFactory2,_super);function Render3DebugRendererFactory2(){return _super!==null&&_super.apply(this,arguments)||this;}Render3DebugRendererFactory2.prototype.createRenderer=function(element,renderData){var renderer=_super.prototype.createRenderer.call(this,element,renderData);renderer.debugContextFactory=function(nativeElement){return new Render3DebugContext(nativeElement);};return renderer;};return Render3DebugRendererFactory2;}(DebugRendererFactory2);/**
 * Stores context information about view nodes.
 *
 * Used in tests to retrieve information those nodes.
 */var Render3DebugContext=/** @class */function(){function Render3DebugContext(_nativeNode){this._nativeNode=_nativeNode;}Object.defineProperty(Render3DebugContext.prototype,"nodeIndex",{get:function get(){return loadContext(this._nativeNode).nodeIndex;},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"view",{get:function get(){return loadContext(this._nativeNode).lViewData;},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"injector",{get:function get(){return getInjector(this._nativeNode);},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"component",{get:function get(){return getHostComponent(this._nativeNode);},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"providerTokens",{get:function get(){var lDebugCtx=loadContext(this._nativeNode);var lViewData=lDebugCtx.lViewData;var tNode=lViewData[TVIEW].data[lDebugCtx.nodeIndex];var directivesCount=tNode.flags&4095/* DirectiveCountMask */;if(directivesCount>0){var directiveIdxStart=tNode.flags>>15/* DirectiveStartingIndexShift */;var directiveIdxEnd=directiveIdxStart+directivesCount;var viewDirectiveDefs=this.view[TVIEW].data;var directiveDefs=viewDirectiveDefs.slice(directiveIdxStart,directiveIdxEnd);return directiveDefs.map(function(directiveDef){return directiveDef.type;});}return[];},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"references",{get:function get(){return getLocalRefs(this._nativeNode);},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"context",{// TODO(pk): check previous implementation and re-implement
get:function get(){throw new Error('Not implemented in ivy');},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"componentRenderElement",{// TODO(pk): check previous implementation and re-implement
get:function get(){throw new Error('Not implemented in ivy');},enumerable:true,configurable:true});Object.defineProperty(Render3DebugContext.prototype,"renderNode",{// TODO(pk): check previous implementation and re-implement
get:function get(){throw new Error('Not implemented in ivy');},enumerable:true,configurable:true});// TODO(pk): check previous implementation and re-implement
Render3DebugContext.prototype.logError=function(console){var values=[];for(var _i=1;_i<arguments.length;_i++){values[_i-1]=arguments[_i];}console.error.apply(console,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(values));};return Render3DebugContext;}();var CorePlayerHandler=/** @class */function(){function CorePlayerHandler(){this._players=[];}CorePlayerHandler.prototype.flushPlayers=function(){for(var i=0;i<this._players.length;i++){var player=this._players[i];if(!player.parent){player.play();}}this._players.length=0;};CorePlayerHandler.prototype.queuePlayer=function(player){this._players.push(player);};return CorePlayerHandler;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function addPlayer(ref,player){var elementContext=getContext(ref);var animationContext=getOrCreatePlayerContext(elementContext.native,elementContext);animationContext.push(player);player.addEventListener(200/* Destroyed */,function(){var index=animationContext.indexOf(player);if(index>=0){animationContext.splice(index,1);}player.destroy();});var rootContext=getRootContext(elementContext.lViewData);var playerHandler=rootContext.playerHandler||(rootContext.playerHandler=new CorePlayerHandler());playerHandler.queuePlayer(player,ref);var nothingScheduled=rootContext.flags===0/* Empty */;// change detection may or may not happen therefore
// the core code needs to be kicked off to flush the animations
rootContext.flags|=2/* FlushPlayers */;if(nothingScheduled){scheduleTick(rootContext);}}function getPlayers(ref){return getOrCreatePlayerContext(ref);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // clang-format on
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // This file only reexports content of the `src` folder. Keep it that way.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Generated bundle index. Do not edit.
 */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(259)))

/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return _internal_Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]; });

/* harmony import */ var _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(285);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__["ConnectableObservable"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(290);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__["GroupedObservable"]; });

/* harmony import */ var _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(282);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__["observable"]; });

/* harmony import */ var _internal_Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(286);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return _internal_Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]; });

/* harmony import */ var _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(291);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]; });

/* harmony import */ var _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(292);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__["ReplaySubject"]; });

/* harmony import */ var _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(309);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__["AsyncSubject"]; });

/* harmony import */ var _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(310);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__["asap"]; });

/* harmony import */ var _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(314);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__["async"]; });

/* harmony import */ var _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(293);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__["queue"]; });

/* harmony import */ var _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(315);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__["animationFrame"]; });

/* harmony import */ var _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(318);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualTimeScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualAction"]; });

/* harmony import */ var _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(299);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__["Scheduler"]; });

/* harmony import */ var _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(275);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__["Subscription"]; });

/* harmony import */ var _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(270);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__["Subscriber"]; });

/* harmony import */ var _internal_Notification__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(301);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__["Notification"]; });

/* harmony import */ var _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(283);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__["pipe"]; });

/* harmony import */ var _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(284);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__["noop"]; });

/* harmony import */ var _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(319);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__["identity"]; });

/* harmony import */ var _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(320);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_20__["ArgumentOutOfRangeError"]; });

/* harmony import */ var _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(321);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_21__["EmptyError"]; });

/* harmony import */ var _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(287);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_22__["ObjectUnsubscribedError"]; });

/* harmony import */ var _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(280);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_23__["UnsubscriptionError"]; });

/* harmony import */ var _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(322);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_24__["TimeoutError"]; });

/* harmony import */ var _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(323);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_25__["bindCallback"]; });

/* harmony import */ var _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(325);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_26__["bindNodeCallback"]; });

/* harmony import */ var _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(326);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_27__["combineLatest"]; });

/* harmony import */ var _internal_observable_concat__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(337);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_observable_concat__WEBPACK_IMPORTED_MODULE_28__["concat"]; });

/* harmony import */ var _internal_observable_defer__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(347);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return _internal_observable_defer__WEBPACK_IMPORTED_MODULE_29__["defer"]; });

/* harmony import */ var _internal_observable_empty__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(302);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_30__["empty"]; });

/* harmony import */ var _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(348);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_31__["forkJoin"]; });

/* harmony import */ var _internal_observable_from__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(338);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "from", function() { return _internal_observable_from__WEBPACK_IMPORTED_MODULE_32__["from"]; });

/* harmony import */ var _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(349);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_33__["fromEvent"]; });

/* harmony import */ var _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(350);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_34__["fromEventPattern"]; });

/* harmony import */ var _internal_observable_generate__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(351);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return _internal_observable_generate__WEBPACK_IMPORTED_MODULE_35__["generate"]; });

/* harmony import */ var _internal_observable_iif__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(352);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return _internal_observable_iif__WEBPACK_IMPORTED_MODULE_36__["iif"]; });

/* harmony import */ var _internal_observable_interval__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(353);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return _internal_observable_interval__WEBPACK_IMPORTED_MODULE_37__["interval"]; });

/* harmony import */ var _internal_observable_merge__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(355);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_observable_merge__WEBPACK_IMPORTED_MODULE_38__["merge"]; });

/* harmony import */ var _internal_observable_never__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(356);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "never", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_39__["never"]; });

/* harmony import */ var _internal_observable_of__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(303);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "of", function() { return _internal_observable_of__WEBPACK_IMPORTED_MODULE_40__["of"]; });

/* harmony import */ var _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(357);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_41__["onErrorResumeNext"]; });

/* harmony import */ var _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(358);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_42__["pairs"]; });

/* harmony import */ var _internal_observable_race__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(359);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_observable_race__WEBPACK_IMPORTED_MODULE_43__["race"]; });

/* harmony import */ var _internal_observable_range__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(360);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _internal_observable_range__WEBPACK_IMPORTED_MODULE_44__["range"]; });

/* harmony import */ var _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(308);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_45__["throwError"]; });

/* harmony import */ var _internal_observable_timer__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(361);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return _internal_observable_timer__WEBPACK_IMPORTED_MODULE_46__["timer"]; });

/* harmony import */ var _internal_observable_using__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(362);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "using", function() { return _internal_observable_using__WEBPACK_IMPORTED_MODULE_47__["using"]; });

/* harmony import */ var _internal_observable_zip__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(363);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_observable_zip__WEBPACK_IMPORTED_MODULE_48__["zip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_30__["EMPTY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_39__["NEVER"]; });

/* harmony import */ var _internal_config__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(273);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _internal_config__WEBPACK_IMPORTED_MODULE_49__["config"]; });

/* Observable */

/** PURE_IMPORTS_START  PURE_IMPORTS_END */




/* Subjects */





/* Schedulers */







/* Subscription */



/* Notification */


/* Utils */




/* Error types */






/* Static observable creation exports */

























/* Constants */



/* Config */



/***/ }),
/* 268 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return Observable; });
/* harmony import */ var _util_toSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(269);
/* harmony import */ var _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(282);
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(283);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(273);
/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */




/**
 * A representation of any set of values over any amount of time. This is the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */

var Observable =
/*@__PURE__*/
function () {
  /**
   * @constructor
   * @param {Function} subscribe the function that is called when the Observable is
   * initially subscribed to. This function is given a Subscriber, to which new values
   * can be `next`ed, or an `error` method can be called to raise an error, or
   * `complete` can be called to notify of a successful completion.
   */
  function Observable(subscribe) {
    /** Internal implementation detail, do not use directly. */
    this._isScalar = false;

    if (subscribe) {
      this._subscribe = subscribe;
    }
  }
  /**
   * Creates a new Observable, with this Observable as the source, and the passed
   * operator defined as the new observable's operator.
   * @method lift
   * @param {Operator} operator the operator defining the operation to take on the observable
   * @return {Observable} a new observable with the Operator applied
   */


  Observable.prototype.lift = function (operator) {
    var observable = new Observable();
    observable.source = this;
    observable.operator = operator;
    return observable;
  };
  /**
   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.
   *
   * <span class="informal">Use it when you have all these Observables, but still nothing is happening.</span>
   *
   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It
   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is
   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling
   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often
   * thought.
   *
   * Apart from starting the execution of an Observable, this method allows you to listen for values
   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two
   * following ways.
   *
   * The first way is creating an object that implements {@link Observer} interface. It should have methods
   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create
   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do
   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also
   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't
   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will
   * be left uncaught.
   *
   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.
   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent
   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,
   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,
   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes
   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.
   *
   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.
   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean
   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback
   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.
   *
   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.
   * It is an Observable itself that decides when these functions will be called. For example {@link of}
   * by default emits all its values synchronously. Always check documentation for how given Observable
   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.
   *
   * @example <caption>Subscribe with an Observer</caption>
   * const sumObserver = {
   *   sum: 0,
   *   next(value) {
   *     console.log('Adding: ' + value);
   *     this.sum = this.sum + value;
   *   },
   *   error() { // We actually could just remove this method,
   *   },        // since we do not really care about errors right now.
   *   complete() {
   *     console.log('Sum equals: ' + this.sum);
   *   }
   * };
   *
   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.
   * .subscribe(sumObserver);
   *
   * // Logs:
   * // "Adding: 1"
   * // "Adding: 2"
   * // "Adding: 3"
   * // "Sum equals: 6"
   *
   *
   * @example <caption>Subscribe with functions</caption>
   * let sum = 0;
   *
   * Rx.Observable.of(1, 2, 3)
   * .subscribe(
   *   function(value) {
   *     console.log('Adding: ' + value);
   *     sum = sum + value;
   *   },
   *   undefined,
   *   function() {
   *     console.log('Sum equals: ' + sum);
   *   }
   * );
   *
   * // Logs:
   * // "Adding: 1"
   * // "Adding: 2"
   * // "Adding: 3"
   * // "Sum equals: 6"
   *
   *
   * @example <caption>Cancel a subscription</caption>
   * const subscription = Rx.Observable.interval(1000).subscribe(
   *   num => console.log(num),
   *   undefined,
   *   () => console.log('completed!') // Will not be called, even
   * );                                // when cancelling subscription
   *
   *
   * setTimeout(() => {
   *   subscription.unsubscribe();
   *   console.log('unsubscribed!');
   * }, 2500);
   *
   * // Logs:
   * // 0 after 1s
   * // 1 after 2s
   * // "unsubscribed!" after 2.5s
   *
   *
   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,
   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed
   *  Observable.
   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,
   *  the error will be thrown as unhandled.
   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.
   * @return {ISubscription} a subscription reference to the registered handlers
   * @method subscribe
   */


  Observable.prototype.subscribe = function (observerOrNext, error, complete) {
    var operator = this.operator;
    var sink = Object(_util_toSubscriber__WEBPACK_IMPORTED_MODULE_0__["toSubscriber"])(observerOrNext, error, complete);

    if (operator) {
      operator.call(sink, this.source);
    } else {
      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));
    }

    if (_config__WEBPACK_IMPORTED_MODULE_3__["config"].useDeprecatedSynchronousErrorHandling) {
      if (sink.syncErrorThrowable) {
        sink.syncErrorThrowable = false;

        if (sink.syncErrorThrown) {
          throw sink.syncErrorValue;
        }
      }
    }

    return sink;
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  Observable.prototype._trySubscribe = function (sink) {
    try {
      return this._subscribe(sink);
    } catch (err) {
      if (_config__WEBPACK_IMPORTED_MODULE_3__["config"].useDeprecatedSynchronousErrorHandling) {
        sink.syncErrorThrown = true;
        sink.syncErrorValue = err;
      }

      sink.error(err);
    }
  };
  /**
   * @method forEach
   * @param {Function} next a handler for each value emitted by the observable
   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise
   * @return {Promise} a promise that either resolves on observable completion or
   *  rejects with the handled error
   */


  Observable.prototype.forEach = function (next, promiseCtor) {
    var _this = this;

    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function (resolve, reject) {
      // Must be declared in a separate statement to avoid a RefernceError when
      // accessing subscription below in the closure due to Temporal Dead Zone.
      var subscription;
      subscription = _this.subscribe(function (value) {
        try {
          next(value);
        } catch (err) {
          reject(err);

          if (subscription) {
            subscription.unsubscribe();
          }
        }
      }, reject, resolve);
    });
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  Observable.prototype._subscribe = function (subscriber) {
    var source = this.source;
    return source && source.subscribe(subscriber);
  };
  /**
   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
   * @method Symbol.observable
   * @return {Observable} this instance of the observable
   */


  Observable.prototype[_internal_symbol_observable__WEBPACK_IMPORTED_MODULE_1__["observable"]] = function () {
    return this;
  };
  /* tslint:enable:max-line-length */

  /**
   * Used to stitch together functional operators into a chain.
   * @method pipe
   * @return {Observable} the Observable result of all of the operators having
   * been called in the order they were passed in.
   *
   * @example
   *
   * import { map, filter, scan } from 'rxjs/operators';
   *
   * Rx.Observable.interval(1000)
   *   .pipe(
   *     filter(x => x % 2 === 0),
   *     map(x => x + x),
   *     scan((acc, x) => acc + x)
   *   )
   *   .subscribe(x => console.log(x))
   */


  Observable.prototype.pipe = function () {
    var operations = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      operations[_i] = arguments[_i];
    }

    if (operations.length === 0) {
      return this;
    }

    return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_2__["pipeFromArray"])(operations)(this);
  };
  /* tslint:enable:max-line-length */


  Observable.prototype.toPromise = function (promiseCtor) {
    var _this = this;

    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function (resolve, reject) {
      var value;

      _this.subscribe(function (x) {
        return value = x;
      }, function (err) {
        return reject(err);
      }, function () {
        return resolve(value);
      });
    });
  }; // HACK: Since TypeScript inherits static properties too, we have to
  // fight against TypeScript here so Subject can have a different static create signature

  /**
   * Creates a new cold Observable by calling the Observable constructor
   * @static true
   * @owner Observable
   * @method create
   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
   * @return {Observable} a new cold observable
   * @nocollapse
   */


  Observable.create = function (subscribe) {
    return new Observable(subscribe);
  };

  return Observable;
}();


/**
 * Decides between a passed promise constructor from consuming code,
 * A default configured promise constructor, and the native promise
 * constructor and returns it. If nothing can be found, it will throw
 * an error.
 * @param promiseCtor The optional promise constructor to passed by consuming code
 */

function getPromiseCtor(promiseCtor) {
  if (!promiseCtor) {
    promiseCtor = _config__WEBPACK_IMPORTED_MODULE_3__["config"].Promise || Promise;
  }

  if (!promiseCtor) {
    throw new Error('no Promise impl found');
  }

  return promiseCtor;
}

/***/ }),
/* 269 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSubscriber", function() { return toSubscriber; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(270);
/* harmony import */ var _symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(281);
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(272);
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
  if (nextOrObserver) {
    if (nextOrObserver instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
      return nextOrObserver;
    }

    if (nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]) {
      return nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]();
    }
  }

  if (!nextOrObserver && !error && !complete) {
    return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](_Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]);
  }

  return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](nextOrObserver, error, complete);
}

/***/ }),
/* 270 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return Subscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(271);
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(272);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(275);
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(281);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(273);
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(274);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */

var Subscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subscriber, _super);
  /**
   * @param {Observer|function(value: T): void} [destinationOrNext] A partially
   * defined Observer or a `next` callback function.
   * @param {function(e: ?any): void} [error] The `error` callback of an
   * Observer.
   * @param {function(): void} [complete] The `complete` callback of an
   * Observer.
   */


  function Subscriber(destinationOrNext, error, complete) {
    var _this = _super.call(this) || this;
    /** @internal */


    _this.syncErrorValue = null;
    /** @internal */

    _this.syncErrorThrown = false;
    /** @internal */

    _this.syncErrorThrowable = false;
    _this.isStopped = false;

    switch (arguments.length) {
      case 0:
        _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
        break;

      case 1:
        if (!destinationOrNext) {
          _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
          break;
        }

        if (_typeof(destinationOrNext) === 'object') {
          // HACK(benlesh): For situations where Node has multiple copies of rxjs in
          // node_modules, we cannot rely on `instanceof` checks
          if (isTrustedSubscriber(destinationOrNext)) {
            var trustedSubscriber = destinationOrNext[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__["rxSubscriber"]]();
            _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;
            _this.destination = trustedSubscriber;
            trustedSubscriber.add(_this);
          } else {
            _this.syncErrorThrowable = true;
            _this.destination = new SafeSubscriber(_this, destinationOrNext);
          }

          break;
        }

      default:
        _this.syncErrorThrowable = true;
        _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
        break;
    }

    return _this;
  }

  Subscriber.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__["rxSubscriber"]] = function () {
    return this;
  };
  /**
   * A static factory for a Subscriber, given a (potentially partial) definition
   * of an Observer.
   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
   * @param {function(e: ?any): void} [error] The `error` callback of an
   * Observer.
   * @param {function(): void} [complete] The `complete` callback of an
   * Observer.
   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
   * Observer represented by the given arguments.
   * @nocollapse
   */


  Subscriber.create = function (next, error, complete) {
    var subscriber = new Subscriber(next, error, complete);
    subscriber.syncErrorThrowable = false;
    return subscriber;
  };
  /**
   * The {@link Observer} callback to receive notifications of type `next` from
   * the Observable, with a value. The Observable may call this method 0 or more
   * times.
   * @param {T} [value] The `next` value.
   * @return {void}
   */


  Subscriber.prototype.next = function (value) {
    if (!this.isStopped) {
      this._next(value);
    }
  };
  /**
   * The {@link Observer} callback to receive notifications of type `error` from
   * the Observable, with an attached {@link Error}. Notifies the Observer that
   * the Observable has experienced an error condition.
   * @param {any} [err] The `error` exception.
   * @return {void}
   */


  Subscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      this.isStopped = true;

      this._error(err);
    }
  };
  /**
   * The {@link Observer} callback to receive a valueless notification of type
   * `complete` from the Observable. Notifies the Observer that the Observable
   * has finished sending push-based notifications.
   * @return {void}
   */


  Subscriber.prototype.complete = function () {
    if (!this.isStopped) {
      this.isStopped = true;

      this._complete();
    }
  };

  Subscriber.prototype.unsubscribe = function () {
    if (this.closed) {
      return;
    }

    this.isStopped = true;

    _super.prototype.unsubscribe.call(this);
  };

  Subscriber.prototype._next = function (value) {
    this.destination.next(value);
  };

  Subscriber.prototype._error = function (err) {
    this.destination.error(err);
    this.unsubscribe();
  };

  Subscriber.prototype._complete = function () {
    this.destination.complete();
    this.unsubscribe();
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  Subscriber.prototype._unsubscribeAndRecycle = function () {
    var _a = this,
        _parent = _a._parent,
        _parents = _a._parents;

    this._parent = null;
    this._parents = null;
    this.unsubscribe();
    this.closed = false;
    this.isStopped = false;
    this._parent = _parent;
    this._parents = _parents;
    return this;
  };

  return Subscriber;
}(_Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"]);


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var SafeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SafeSubscriber, _super);

  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
    var _this = _super.call(this) || this;

    _this._parentSubscriber = _parentSubscriber;
    var next;
    var context = _this;

    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(observerOrNext)) {
      next = observerOrNext;
    } else if (observerOrNext) {
      next = observerOrNext.next;
      error = observerOrNext.error;
      complete = observerOrNext.complete;

      if (observerOrNext !== _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]) {
        context = Object.create(observerOrNext);

        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(context.unsubscribe)) {
          _this.add(context.unsubscribe.bind(context));
        }

        context.unsubscribe = _this.unsubscribe.bind(_this);
      }
    }

    _this._context = context;
    _this._next = next;
    _this._error = error;
    _this._complete = complete;
    return _this;
  }

  SafeSubscriber.prototype.next = function (value) {
    if (!this.isStopped && this._next) {
      var _parentSubscriber = this._parentSubscriber;

      if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
        this.__tryOrUnsub(this._next, value);
      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
        this.unsubscribe();
      }
    }
  };

  SafeSubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var _parentSubscriber = this._parentSubscriber;
      var useDeprecatedSynchronousErrorHandling = _config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling;

      if (this._error) {
        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(this._error, err);

          this.unsubscribe();
        } else {
          this.__tryOrSetError(_parentSubscriber, this._error, err);

          this.unsubscribe();
        }
      } else if (!_parentSubscriber.syncErrorThrowable) {
        this.unsubscribe();

        if (useDeprecatedSynchronousErrorHandling) {
          throw err;
        }

        Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
      } else {
        if (useDeprecatedSynchronousErrorHandling) {
          _parentSubscriber.syncErrorValue = err;
          _parentSubscriber.syncErrorThrown = true;
        } else {
          Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
        }

        this.unsubscribe();
      }
    }
  };

  SafeSubscriber.prototype.complete = function () {
    var _this = this;

    if (!this.isStopped) {
      var _parentSubscriber = this._parentSubscriber;

      if (this._complete) {
        var wrappedComplete = function wrappedComplete() {
          return _this._complete.call(_this._context);
        };

        if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(wrappedComplete);

          this.unsubscribe();
        } else {
          this.__tryOrSetError(_parentSubscriber, wrappedComplete);

          this.unsubscribe();
        }
      } else {
        this.unsubscribe();
      }
    }
  };

  SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
    try {
      fn.call(this._context, value);
    } catch (err) {
      this.unsubscribe();

      if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
        throw err;
      } else {
        Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
      }
    }
  };

  SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
    if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
      throw new Error('bad call');
    }

    try {
      fn.call(this._context, value);
    } catch (err) {
      if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
        parent.syncErrorValue = err;
        parent.syncErrorThrown = true;
        return true;
      } else {
        Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
        return true;
      }
    }

    return false;
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  SafeSubscriber.prototype._unsubscribe = function () {
    var _parentSubscriber = this._parentSubscriber;
    this._context = null;
    this._parentSubscriber = null;

    _parentSubscriber.unsubscribe();
  };

  return SafeSubscriber;
}(Subscriber);

function isTrustedSubscriber(obj) {
  return obj instanceof Subscriber || 'syncErrorThrowable' in obj && obj[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__["rxSubscriber"]];
}

/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
  return typeof x === 'function';
}

/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(273);
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(274);
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var empty = {
  closed: true,
  next: function next(value) {},
  error: function error(err) {
    if (_config__WEBPACK_IMPORTED_MODULE_0__["config"].useDeprecatedSynchronousErrorHandling) {
      throw err;
    } else {
      Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__["hostReportError"])(err);
    }
  },
  complete: function complete() {}
};

/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return config; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
/**
 * The global configuration object for RxJS, used to configure things
 * like what Promise contructor should used to create Promises
 */

var config = {
  /**
   * The promise constructor used by default for methods such as
   * {@link toPromise} and {@link forEach}
   */
  Promise: undefined,

  /**
   * If true, turns on synchronous error rethrowing, which is a deprecated behavior
   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe
   * call in a try/catch block. It also enables producer interference, a nasty bug
   * where a multicast can be broken for all observers by a downstream consumer with
   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME
   * FOR MIGRATION REASONS.
   */
  set useDeprecatedSynchronousErrorHandling(value) {
    if (value) {
      var error =
      /*@__PURE__*/
      new Error();
      /*@__PURE__*/

      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {
      /*@__PURE__*/
      console.log('RxJS: Back to a better error behavior. Thank you. <3');
    }

    _enable_super_gross_mode_that_will_cause_bad_things = value;
  },

  get useDeprecatedSynchronousErrorHandling() {
    return _enable_super_gross_mode_that_will_cause_bad_things;
  }

};

/***/ }),
/* 274 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hostReportError", function() { return hostReportError; });
/**
 * Throws an error on another job so that it's picked up by the runtime's
 * uncaught error handling mechanism.
 * @param err the error to throw
 */

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
  setTimeout(function () {
    throw err;
  });
}

/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return Subscription; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(276);
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(277);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(271);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(279);
/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(280);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */






/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */

var Subscription =
/*@__PURE__*/
function () {
  /**
   * @param {function(): void} [unsubscribe] A function describing how to
   * perform the disposal of resources when the `unsubscribe` method is called.
   */
  function Subscription(unsubscribe) {
    /**
     * A flag to indicate whether this Subscription has already been unsubscribed.
     * @type {boolean}
     */
    this.closed = false;
    /** @internal */

    this._parent = null;
    /** @internal */

    this._parents = null;
    /** @internal */

    this._subscriptions = null;

    if (unsubscribe) {
      this._unsubscribe = unsubscribe;
    }
  }
  /**
   * Disposes the resources held by the subscription. May, for instance, cancel
   * an ongoing Observable execution or cancel any other type of work that
   * started when the Subscription was created.
   * @return {void}
   */


  Subscription.prototype.unsubscribe = function () {
    var hasErrors = false;
    var errors;

    if (this.closed) {
      return;
    }

    var _a = this,
        _parent = _a._parent,
        _parents = _a._parents,
        _unsubscribe = _a._unsubscribe,
        _subscriptions = _a._subscriptions;

    this.closed = true;
    this._parent = null;
    this._parents = null; // null out _subscriptions first so any child subscriptions that attempt
    // to remove themselves from this subscription will noop

    this._subscriptions = null;
    var index = -1;
    var len = _parents ? _parents.length : 0; // if this._parent is null, then so is this._parents, and we
    // don't have to remove ourselves from any parent subscriptions.

    while (_parent) {
      _parent.remove(this); // if this._parents is null or index >= len,
      // then _parent is set to null, and the loop exits


      _parent = ++index < len && _parents[index] || null;
    }

    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(_unsubscribe)) {
      var trial = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_3__["tryCatch"])(_unsubscribe).call(this);

      if (trial === _util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"]) {
        hasErrors = true;
        errors = errors || (_util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"].e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"] ? flattenUnsubscriptionErrors(_util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"].e.errors) : [_util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"].e]);
      }
    }

    if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(_subscriptions)) {
      index = -1;
      len = _subscriptions.length;

      while (++index < len) {
        var sub = _subscriptions[index];

        if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_1__["isObject"])(sub)) {
          var trial = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_3__["tryCatch"])(sub.unsubscribe).call(sub);

          if (trial === _util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"]) {
            hasErrors = true;
            errors = errors || [];
            var err = _util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"].e;

            if (err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"]) {
              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));
            } else {
              errors.push(err);
            }
          }
        }
      }
    }

    if (hasErrors) {
      throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"](errors);
    }
  };
  /**
   * Adds a tear down to be called during the unsubscribe() of this
   * Subscription.
   *
   * If the tear down being added is a subscription that is already
   * unsubscribed, is the same reference `add` is being called on, or is
   * `Subscription.EMPTY`, it will not be added.
   *
   * If this subscription is already in an `closed` state, the passed
   * tear down logic will be executed immediately.
   *
   * @param {TeardownLogic} teardown The additional logic to execute on
   * teardown.
   * @return {Subscription} Returns the Subscription used or created to be
   * added to the inner subscriptions list. This Subscription can be used with
   * `remove()` to remove the passed teardown logic from the inner subscriptions
   * list.
   */


  Subscription.prototype.add = function (teardown) {
    if (!teardown || teardown === Subscription.EMPTY) {
      return Subscription.EMPTY;
    }

    if (teardown === this) {
      return this;
    }

    var subscription = teardown;

    switch (_typeof(teardown)) {
      case 'function':
        subscription = new Subscription(teardown);

      case 'object':
        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {
          return subscription;
        } else if (this.closed) {
          subscription.unsubscribe();
          return subscription;
        } else if (typeof subscription._addParent !== 'function'
        /* quack quack */
        ) {
            var tmp = subscription;
            subscription = new Subscription();
            subscription._subscriptions = [tmp];
          }

        break;

      default:
        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
    }

    var subscriptions = this._subscriptions || (this._subscriptions = []);
    subscriptions.push(subscription);

    subscription._addParent(this);

    return subscription;
  };
  /**
   * Removes a Subscription from the internal list of subscriptions that will
   * unsubscribe during the unsubscribe process of this Subscription.
   * @param {Subscription} subscription The subscription to remove.
   * @return {void}
   */


  Subscription.prototype.remove = function (subscription) {
    var subscriptions = this._subscriptions;

    if (subscriptions) {
      var subscriptionIndex = subscriptions.indexOf(subscription);

      if (subscriptionIndex !== -1) {
        subscriptions.splice(subscriptionIndex, 1);
      }
    }
  };
  /** @internal */


  Subscription.prototype._addParent = function (parent) {
    var _a = this,
        _parent = _a._parent,
        _parents = _a._parents;

    if (!_parent || _parent === parent) {
      // If we don't have a parent, or the new parent is the same as the
      // current parent, then set this._parent to the new parent.
      this._parent = parent;
    } else if (!_parents) {
      // If there's already one parent, but not multiple, allocate an Array to
      // store the rest of the parent Subscriptions.
      this._parents = [parent];
    } else if (_parents.indexOf(parent) === -1) {
      // Only add the new parent to the _parents list if it's not already there.
      _parents.push(parent);
    }
  };
  /** @nocollapse */


  Subscription.EMPTY = function (empty) {
    empty.closed = true;
    return empty;
  }(new Subscription());

  return Subscription;
}();



function flattenUnsubscriptionErrors(errors) {
  return errors.reduce(function (errs, err) {
    return errs.concat(err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_5__["UnsubscriptionError"] ? err.errors : err);
  }, []);
}

/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = Array.isArray || function (x) {
  return x && typeof x.length === 'number';
};

/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
  return x != null && _typeof(x) === 'object';
}

/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tryCatch", function() { return tryCatch; });
/* harmony import */ var _errorObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(279);
/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */

var tryCatchTarget;

function tryCatcher() {
  try {
    return tryCatchTarget.apply(this, arguments);
  } catch (e) {
    _errorObject__WEBPACK_IMPORTED_MODULE_0__["errorObject"].e = e;
    return _errorObject__WEBPACK_IMPORTED_MODULE_0__["errorObject"];
  }
}

function tryCatch(fn) {
  tryCatchTarget = fn;
  return tryCatcher;
}

/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorObject", function() { return errorObject; });
// typeof any so that it we don't have to cast when comparing a result to the error object

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var errorObject = {
  e: {}
};

/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return UnsubscriptionError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */

/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */

var UnsubscriptionError =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](UnsubscriptionError, _super);

  function UnsubscriptionError(errors) {
    var _this = _super.call(this, errors ? errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) {
      return i + 1 + ") " + err.toString();
    }).join('\n  ') : '') || this;

    _this.errors = errors;
    _this.name = 'UnsubscriptionError';
    Object.setPrototypeOf(_this, UnsubscriptionError.prototype);
    return _this;
  }

  return UnsubscriptionError;
}(Error);



/***/ }),
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rxSubscriber", function() { return rxSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$rxSubscriber", function() { return $$rxSubscriber; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = typeof Symbol === 'function' && typeof Symbol.for === 'function' ?
/*@__PURE__*/
Symbol.for('rxSubscriber') : '@@rxSubscriber';
/**
 * @deprecated use rxSubscriber instead
 */

var $$rxSubscriber = rxSubscriber;

/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return observable; });
/** Symbol.observable or a string "@@observable". Used for interop */

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';

/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipeFromArray", function() { return pipeFromArray; });
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(284);
/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

function pipe() {
  var fns = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    fns[_i] = arguments[_i];
  }

  return pipeFromArray(fns);
}
/* @internal */

function pipeFromArray(fns) {
  if (!fns) {
    return _noop__WEBPACK_IMPORTED_MODULE_0__["noop"];
  }

  if (fns.length === 1) {
    return fns[0];
  }

  return function piped(input) {
    return fns.reduce(function (prev, fn) {
      return fn(prev);
    }, input);
  };
}

/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
/* tslint:disable:no-empty */

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() {}

/***/ }),
/* 285 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return ConnectableObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectableObservableDescriptor", function() { return connectableObservableDescriptor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(268);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(270);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(275);
/* harmony import */ var _operators_refCount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(289);
/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */






/**
 * @class ConnectableObservable<T>
 */

var ConnectableObservable =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableObservable, _super);

  function ConnectableObservable(source, subjectFactory) {
    var _this = _super.call(this) || this;

    _this.source = source;
    _this.subjectFactory = subjectFactory;
    _this._refCount = 0;
    /** @internal */

    _this._isComplete = false;
    return _this;
  }
  /** @deprecated This is an internal implementation detail, do not use. */


  ConnectableObservable.prototype._subscribe = function (subscriber) {
    return this.getSubject().subscribe(subscriber);
  };

  ConnectableObservable.prototype.getSubject = function () {
    var subject = this._subject;

    if (!subject || subject.isStopped) {
      this._subject = this.subjectFactory();
    }

    return this._subject;
  };

  ConnectableObservable.prototype.connect = function () {
    var connection = this._connection;

    if (!connection) {
      this._isComplete = false;
      connection = this._connection = new _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"]();
      connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this)));

      if (connection.closed) {
        this._connection = null;
        connection = _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"].EMPTY;
      } else {
        this._connection = connection;
      }
    }

    return connection;
  };

  ConnectableObservable.prototype.refCount = function () {
    return Object(_operators_refCount__WEBPACK_IMPORTED_MODULE_5__["refCount"])()(this);
  };

  return ConnectableObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]);


var connectableProto = ConnectableObservable.prototype;
var connectableObservableDescriptor = {
  operator: {
    value: null
  },
  _refCount: {
    value: 0,
    writable: true
  },
  _subject: {
    value: null,
    writable: true
  },
  _connection: {
    value: null,
    writable: true
  },
  _subscribe: {
    value: connectableProto._subscribe
  },
  _isComplete: {
    value: connectableProto._isComplete,
    writable: true
  },
  getSubject: {
    value: connectableProto.getSubject
  },
  connect: {
    value: connectableProto.connect
  },
  refCount: {
    value: connectableProto.refCount
  }
};

var ConnectableSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableSubscriber, _super);

  function ConnectableSubscriber(destination, connectable) {
    var _this = _super.call(this, destination) || this;

    _this.connectable = connectable;
    return _this;
  }

  ConnectableSubscriber.prototype._error = function (err) {
    this._unsubscribe();

    _super.prototype._error.call(this, err);
  };

  ConnectableSubscriber.prototype._complete = function () {
    this.connectable._isComplete = true;

    this._unsubscribe();

    _super.prototype._complete.call(this);
  };

  ConnectableSubscriber.prototype._unsubscribe = function () {
    var connectable = this.connectable;

    if (connectable) {
      this.connectable = null;
      var connection = connectable._connection;
      connectable._refCount = 0;
      connectable._subject = null;
      connectable._connection = null;

      if (connection) {
        connection.unsubscribe();
      }
    }
  };

  return ConnectableSubscriber;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["SubjectSubscriber"]);

var RefCountOperator =
/*@__PURE__*/
function () {
  function RefCountOperator(connectable) {
    this.connectable = connectable;
  }

  RefCountOperator.prototype.call = function (subscriber, source) {
    var connectable = this.connectable;
    connectable._refCount++;
    var refCounter = new RefCountSubscriber(subscriber, connectable);
    var subscription = source.subscribe(refCounter);

    if (!refCounter.closed) {
      refCounter.connection = connectable.connect();
    }

    return subscription;
  };

  return RefCountOperator;
}();

var RefCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);

  function RefCountSubscriber(destination, connectable) {
    var _this = _super.call(this, destination) || this;

    _this.connectable = connectable;
    return _this;
  }

  RefCountSubscriber.prototype._unsubscribe = function () {
    var connectable = this.connectable;

    if (!connectable) {
      this.connection = null;
      return;
    }

    this.connectable = null;
    var refCount = connectable._refCount;

    if (refCount <= 0) {
      this.connection = null;
      return;
    }

    connectable._refCount = refCount - 1;

    if (refCount > 1) {
      this.connection = null;
      return;
    } ///
    // Compare the local RefCountSubscriber's connection Subscription to the
    // connection Subscription on the shared ConnectableObservable. In cases
    // where the ConnectableObservable source synchronously emits values, and
    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
    // execution continues to here before the RefCountOperator has a chance to
    // supply the RefCountSubscriber with the shared connection Subscription.
    // For example:
    // ```
    // Observable.range(0, 10)
    //   .publish()
    //   .refCount()
    //   .take(5)
    //   .subscribe();
    // ```
    // In order to account for this case, RefCountSubscriber should only dispose
    // the ConnectableObservable's shared connection Subscription if the
    // connection Subscription exists, *and* either:
    //   a. RefCountSubscriber doesn't have a reference to the shared connection
    //      Subscription yet, or,
    //   b. RefCountSubscriber's connection Subscription reference is identical
    //      to the shared connection Subscription
    ///


    var connection = this.connection;
    var sharedConnection = connectable._connection;
    this.connection = null;

    if (sharedConnection && (!connection || sharedConnection === connection)) {
      sharedConnection.unsubscribe();
    }
  };

  return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]);

/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscriber", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return Subject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnonymousSubject", function() { return AnonymousSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(268);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(270);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(275);
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(287);
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(288);
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(281);
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







/**
 * @class SubjectSubscriber<T>
 */

var SubjectSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscriber, _super);

  function SubjectSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    return _this;
  }

  return SubjectSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]);


/**
 * @class Subject<T>
 */

var Subject =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subject, _super);

  function Subject() {
    var _this = _super.call(this) || this;

    _this.observers = [];
    _this.closed = false;
    _this.isStopped = false;
    _this.hasError = false;
    _this.thrownError = null;
    return _this;
  }

  Subject.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__["rxSubscriber"]] = function () {
    return new SubjectSubscriber(this);
  };

  Subject.prototype.lift = function (operator) {
    var subject = new AnonymousSubject(this, this);
    subject.operator = operator;
    return subject;
  };

  Subject.prototype.next = function (value) {
    if (this.closed) {
      throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
    }

    if (!this.isStopped) {
      var observers = this.observers;
      var len = observers.length;
      var copy = observers.slice();

      for (var i = 0; i < len; i++) {
        copy[i].next(value);
      }
    }
  };

  Subject.prototype.error = function (err) {
    if (this.closed) {
      throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
    }

    this.hasError = true;
    this.thrownError = err;
    this.isStopped = true;
    var observers = this.observers;
    var len = observers.length;
    var copy = observers.slice();

    for (var i = 0; i < len; i++) {
      copy[i].error(err);
    }

    this.observers.length = 0;
  };

  Subject.prototype.complete = function () {
    if (this.closed) {
      throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
    }

    this.isStopped = true;
    var observers = this.observers;
    var len = observers.length;
    var copy = observers.slice();

    for (var i = 0; i < len; i++) {
      copy[i].complete();
    }

    this.observers.length = 0;
  };

  Subject.prototype.unsubscribe = function () {
    this.isStopped = true;
    this.closed = true;
    this.observers = null;
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  Subject.prototype._trySubscribe = function (subscriber) {
    if (this.closed) {
      throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
    } else {
      return _super.prototype._trySubscribe.call(this, subscriber);
    }
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  Subject.prototype._subscribe = function (subscriber) {
    if (this.closed) {
      throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
    } else if (this.hasError) {
      subscriber.error(this.thrownError);
      return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
    } else if (this.isStopped) {
      subscriber.complete();
      return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
    } else {
      this.observers.push(subscriber);
      return new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__["SubjectSubscription"](this, subscriber);
    }
  };

  Subject.prototype.asObservable = function () {
    var observable = new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]();
    observable.source = this;
    return observable;
  };
  /**@nocollapse */


  Subject.create = function (destination, source) {
    return new AnonymousSubject(destination, source);
  };

  return Subject;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]);


/**
 * @class AnonymousSubject<T>
 */

var AnonymousSubject =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnonymousSubject, _super);

  function AnonymousSubject(destination, source) {
    var _this = _super.call(this) || this;

    _this.destination = destination;
    _this.source = source;
    return _this;
  }

  AnonymousSubject.prototype.next = function (value) {
    var destination = this.destination;

    if (destination && destination.next) {
      destination.next(value);
    }
  };

  AnonymousSubject.prototype.error = function (err) {
    var destination = this.destination;

    if (destination && destination.error) {
      this.destination.error(err);
    }
  };

  AnonymousSubject.prototype.complete = function () {
    var destination = this.destination;

    if (destination && destination.complete) {
      this.destination.complete();
    }
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  AnonymousSubject.prototype._subscribe = function (subscriber) {
    var source = this.source;

    if (source) {
      return this.source.subscribe(subscriber);
    } else {
      return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
    }
  };

  return AnonymousSubject;
}(Subject);



/***/ }),
/* 287 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return ObjectUnsubscribedError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */

/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */

var ObjectUnsubscribedError =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ObjectUnsubscribedError, _super);

  function ObjectUnsubscribedError() {
    var _this = _super.call(this, 'object unsubscribed') || this;

    _this.name = 'ObjectUnsubscribedError';
    Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);
    return _this;
  }

  return ObjectUnsubscribedError;
}(Error);



/***/ }),
/* 288 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscription", function() { return SubjectSubscription; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var SubjectSubscription =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscription, _super);

  function SubjectSubscription(subject, subscriber) {
    var _this = _super.call(this) || this;

    _this.subject = subject;
    _this.subscriber = subscriber;
    _this.closed = false;
    return _this;
  }

  SubjectSubscription.prototype.unsubscribe = function () {
    if (this.closed) {
      return;
    }

    this.closed = true;
    var subject = this.subject;
    var observers = subject.observers;
    this.subject = null;

    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
      return;
    }

    var subscriberIndex = observers.indexOf(this.subscriber);

    if (subscriberIndex !== -1) {
      observers.splice(subscriberIndex, 1);
    }
  };

  return SubjectSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]);



/***/ }),
/* 289 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return refCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function refCount() {
  return function refCountOperatorFunction(source) {
    return source.lift(new RefCountOperator(source));
  };
}

var RefCountOperator =
/*@__PURE__*/
function () {
  function RefCountOperator(connectable) {
    this.connectable = connectable;
  }

  RefCountOperator.prototype.call = function (subscriber, source) {
    var connectable = this.connectable;
    connectable._refCount++;
    var refCounter = new RefCountSubscriber(subscriber, connectable);
    var subscription = source.subscribe(refCounter);

    if (!refCounter.closed) {
      refCounter.connection = connectable.connect();
    }

    return subscription;
  };

  return RefCountOperator;
}();

var RefCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);

  function RefCountSubscriber(destination, connectable) {
    var _this = _super.call(this, destination) || this;

    _this.connectable = connectable;
    return _this;
  }

  RefCountSubscriber.prototype._unsubscribe = function () {
    var connectable = this.connectable;

    if (!connectable) {
      this.connection = null;
      return;
    }

    this.connectable = null;
    var refCount = connectable._refCount;

    if (refCount <= 0) {
      this.connection = null;
      return;
    }

    connectable._refCount = refCount - 1;

    if (refCount > 1) {
      this.connection = null;
      return;
    } ///
    // Compare the local RefCountSubscriber's connection Subscription to the
    // connection Subscription on the shared ConnectableObservable. In cases
    // where the ConnectableObservable source synchronously emits values, and
    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
    // execution continues to here before the RefCountOperator has a chance to
    // supply the RefCountSubscriber with the shared connection Subscription.
    // For example:
    // ```
    // Observable.range(0, 10)
    //   .publish()
    //   .refCount()
    //   .take(5)
    //   .subscribe();
    // ```
    // In order to account for this case, RefCountSubscriber should only dispose
    // the ConnectableObservable's shared connection Subscription if the
    // connection Subscription exists, *and* either:
    //   a. RefCountSubscriber doesn't have a reference to the shared connection
    //      Subscription yet, or,
    //   b. RefCountSubscriber's connection Subscription reference is identical
    //      to the shared connection Subscription
    ///


    var connection = this.connection;
    var sharedConnection = connectable._connection;
    this.connection = null;

    if (sharedConnection && (!connection || sharedConnection === connection)) {
      sharedConnection.unsubscribe();
    }
  };

  return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 290 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return GroupedObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(275);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(268);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(286);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @example <caption>Group objects by id and return as array</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs3'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *     )
 *     .groupBy(p => p.id)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // [ { id: 1, name: 'aze1' },
 * //   { id: 1, name: 'erg1' },
 * //   { id: 1, name: 'df1' } ]
 * //
 * // [ { id: 2, name: 'sf2' },
 * //   { id: 2, name: 'dg2' },
 * //   { id: 2, name: 'sfqfb2' },
 * //   { id: 2, name: 'qsgqsfg2' } ]
 * //
 * // [ { id: 3, name: 'qfs3' } ]
 *
 * @example <caption>Pivot data on the id field</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs1'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *                   )
 *     .groupBy(p => p.id, p => p.name)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], ["" + group$.key]))
 *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }
 * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }
 * // { id: 3, values: [ 'qfs1' ] }
 *
 * @param {function(value: T): K} keySelector A function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] A function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * A function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} An Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */

function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
  return function (source) {
    return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
  };
}

var GroupByOperator =
/*@__PURE__*/
function () {
  function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
    this.keySelector = keySelector;
    this.elementSelector = elementSelector;
    this.durationSelector = durationSelector;
    this.subjectSelector = subjectSelector;
  }

  GroupByOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
  };

  return GroupByOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var GroupBySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupBySubscriber, _super);

  function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.elementSelector = elementSelector;
    _this.durationSelector = durationSelector;
    _this.subjectSelector = subjectSelector;
    _this.groups = null;
    _this.attemptedToUnsubscribe = false;
    _this.count = 0;
    return _this;
  }

  GroupBySubscriber.prototype._next = function (value) {
    var key;

    try {
      key = this.keySelector(value);
    } catch (err) {
      this.error(err);
      return;
    }

    this._group(value, key);
  };

  GroupBySubscriber.prototype._group = function (value, key) {
    var groups = this.groups;

    if (!groups) {
      groups = this.groups = new Map();
    }

    var group = groups.get(key);
    var element;

    if (this.elementSelector) {
      try {
        element = this.elementSelector(value);
      } catch (err) {
        this.error(err);
      }
    } else {
      element = value;
    }

    if (!group) {
      group = this.subjectSelector ? this.subjectSelector() : new _Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
      groups.set(key, group);
      var groupedObservable = new GroupedObservable(key, group, this);
      this.destination.next(groupedObservable);

      if (this.durationSelector) {
        var duration = void 0;

        try {
          duration = this.durationSelector(new GroupedObservable(key, group));
        } catch (err) {
          this.error(err);
          return;
        }

        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
      }
    }

    if (!group.closed) {
      group.next(element);
    }
  };

  GroupBySubscriber.prototype._error = function (err) {
    var groups = this.groups;

    if (groups) {
      groups.forEach(function (group, key) {
        group.error(err);
      });
      groups.clear();
    }

    this.destination.error(err);
  };

  GroupBySubscriber.prototype._complete = function () {
    var groups = this.groups;

    if (groups) {
      groups.forEach(function (group, key) {
        group.complete();
      });
      groups.clear();
    }

    this.destination.complete();
  };

  GroupBySubscriber.prototype.removeGroup = function (key) {
    this.groups.delete(key);
  };

  GroupBySubscriber.prototype.unsubscribe = function () {
    if (!this.closed) {
      this.attemptedToUnsubscribe = true;

      if (this.count === 0) {
        _super.prototype.unsubscribe.call(this);
      }
    }
  };

  return GroupBySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var GroupDurationSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupDurationSubscriber, _super);

  function GroupDurationSubscriber(key, group, parent) {
    var _this = _super.call(this, group) || this;

    _this.key = key;
    _this.group = group;
    _this.parent = parent;
    return _this;
  }

  GroupDurationSubscriber.prototype._next = function (value) {
    this.complete();
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  GroupDurationSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        parent = _a.parent,
        key = _a.key;

    this.key = this.parent = null;

    if (parent) {
      parent.removeGroup(key);
    }
  };

  return GroupDurationSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);
/**
 * An Observable representing values belonging to the same group represented by
 * a common key. The values emitted by a GroupedObservable come from the source
 * Observable. The common key is available as the field `key` on a
 * GroupedObservable instance.
 *
 * @class GroupedObservable<K, T>
 */


var GroupedObservable =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupedObservable, _super);
  /** @deprecated Do not construct this type. Internal use only */


  function GroupedObservable(key, groupSubject, refCountSubscription) {
    var _this = _super.call(this) || this;

    _this.key = key;
    _this.groupSubject = groupSubject;
    _this.refCountSubscription = refCountSubscription;
    return _this;
  }
  /** @deprecated This is an internal implementation detail, do not use. */


  GroupedObservable.prototype._subscribe = function (subscriber) {
    var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();

    var _a = this,
        refCountSubscription = _a.refCountSubscription,
        groupSubject = _a.groupSubject;

    if (refCountSubscription && !refCountSubscription.closed) {
      subscription.add(new InnerRefCountSubscription(refCountSubscription));
    }

    subscription.add(groupSubject.subscribe(subscriber));
    return subscription;
  };

  return GroupedObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"]);


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var InnerRefCountSubscription =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerRefCountSubscription, _super);

  function InnerRefCountSubscription(parent) {
    var _this = _super.call(this) || this;

    _this.parent = parent;
    parent.count++;
    return _this;
  }

  InnerRefCountSubscription.prototype.unsubscribe = function () {
    var parent = this.parent;

    if (!parent.closed && !this.closed) {
      _super.prototype.unsubscribe.call(this);

      parent.count -= 1;

      if (parent.count === 0 && parent.attemptedToUnsubscribe) {
        parent.unsubscribe();
      }
    }
  };

  return InnerRefCountSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]);

/***/ }),
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return BehaviorSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(287);
/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */



/**
 * @class BehaviorSubject<T>
 */

var BehaviorSubject =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BehaviorSubject, _super);

  function BehaviorSubject(_value) {
    var _this = _super.call(this) || this;

    _this._value = _value;
    return _this;
  }

  Object.defineProperty(BehaviorSubject.prototype, "value", {
    get: function get() {
      return this.getValue();
    },
    enumerable: true,
    configurable: true
  });
  /** @deprecated This is an internal implementation detail, do not use. */

  BehaviorSubject.prototype._subscribe = function (subscriber) {
    var subscription = _super.prototype._subscribe.call(this, subscriber);

    if (subscription && !subscription.closed) {
      subscriber.next(this._value);
    }

    return subscription;
  };

  BehaviorSubject.prototype.getValue = function () {
    if (this.hasError) {
      throw this.thrownError;
    } else if (this.closed) {
      throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__["ObjectUnsubscribedError"]();
    } else {
      return this._value;
    }
  };

  BehaviorSubject.prototype.next = function (value) {
    _super.prototype.next.call(this, this._value = value);
  };

  return BehaviorSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]);



/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return ReplaySubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(293);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(275);
/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(300);
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(287);
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(288);
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */







/**
 * @class ReplaySubject<T>
 */

var ReplaySubject =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ReplaySubject, _super);

  function ReplaySubject(bufferSize, windowTime, scheduler) {
    if (bufferSize === void 0) {
      bufferSize = Number.POSITIVE_INFINITY;
    }

    if (windowTime === void 0) {
      windowTime = Number.POSITIVE_INFINITY;
    }

    var _this = _super.call(this) || this;

    _this.scheduler = scheduler;
    _this._events = [];
    _this._infiniteTimeWindow = false;
    _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
    _this._windowTime = windowTime < 1 ? 1 : windowTime;

    if (windowTime === Number.POSITIVE_INFINITY) {
      _this._infiniteTimeWindow = true;
      _this.next = _this.nextInfiniteTimeWindow;
    } else {
      _this.next = _this.nextTimeWindow;
    }

    return _this;
  }

  ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
    var _events = this._events;

    _events.push(value); // Since this method is invoked in every next() call than the buffer
    // can overgrow the max size only by one item


    if (_events.length > this._bufferSize) {
      _events.shift();
    }

    _super.prototype.next.call(this, value);
  };

  ReplaySubject.prototype.nextTimeWindow = function (value) {
    this._events.push(new ReplayEvent(this._getNow(), value));

    this._trimBufferThenGetEvents();

    _super.prototype.next.call(this, value);
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  ReplaySubject.prototype._subscribe = function (subscriber) {
    // When `_infiniteTimeWindow === true` then the buffer is already trimmed
    var _infiniteTimeWindow = this._infiniteTimeWindow;

    var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();

    var scheduler = this.scheduler;
    var len = _events.length;
    var subscription;

    if (this.closed) {
      throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__["ObjectUnsubscribedError"]();
    } else if (this.isStopped || this.hasError) {
      subscription = _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
    } else {
      this.observers.push(subscriber);
      subscription = new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__["SubjectSubscription"](this, subscriber);
    }

    if (scheduler) {
      subscriber.add(subscriber = new _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__["ObserveOnSubscriber"](subscriber, scheduler));
    }

    if (_infiniteTimeWindow) {
      for (var i = 0; i < len && !subscriber.closed; i++) {
        subscriber.next(_events[i]);
      }
    } else {
      for (var i = 0; i < len && !subscriber.closed; i++) {
        subscriber.next(_events[i].value);
      }
    }

    if (this.hasError) {
      subscriber.error(this.thrownError);
    } else if (this.isStopped) {
      subscriber.complete();
    }

    return subscription;
  };

  ReplaySubject.prototype._getNow = function () {
    return (this.scheduler || _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__["queue"]).now();
  };

  ReplaySubject.prototype._trimBufferThenGetEvents = function () {
    var now = this._getNow();

    var _bufferSize = this._bufferSize;
    var _windowTime = this._windowTime;
    var _events = this._events;
    var eventsCount = _events.length;
    var spliceCount = 0; // Trim events that fall out of the time window.
    // Start at the front of the list. Break early once
    // we encounter an event that falls within the window.

    while (spliceCount < eventsCount) {
      if (now - _events[spliceCount].time < _windowTime) {
        break;
      }

      spliceCount++;
    }

    if (eventsCount > _bufferSize) {
      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
    }

    if (spliceCount > 0) {
      _events.splice(0, spliceCount);
    }

    return _events;
  };

  return ReplaySubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]);



var ReplayEvent =
/*@__PURE__*/
function () {
  function ReplayEvent(time, value) {
    this.time = time;
    this.value = value;
  }

  return ReplayEvent;
}();

/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return queue; });
/* harmony import */ var _QueueAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(294);
/* harmony import */ var _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(297);
/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */


/**
 *
 * Queue Scheduler
 *
 * <span class="informal">Put every next task on a queue, instead of executing it immediately</span>
 *
 * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.
 *
 * When used without delay, it schedules given task synchronously - executes it right when
 * it is scheduled. However when called recursively, that is when inside the scheduled task,
 * another task is scheduled with queue scheduler, instead of executing immediately as well,
 * that task will be put on a queue and wait for current one to finish.
 *
 * This means that when you execute task with `queue` scheduler, you are sure it will end
 * before any other task scheduled with that scheduler will start.
 *
 * @examples <caption>Schedule recursively first, then do something</caption>
 *
 * Rx.Scheduler.queue.schedule(() => {
 *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue
 *
 *   console.log('first');
 * });
 *
 * // Logs:
 * // "first"
 * // "second"
 *
 *
 * @example <caption>Reschedule itself recursively</caption>
 *
 * Rx.Scheduler.queue.schedule(function(state) {
 *   if (state !== 0) {
 *     console.log('before', state);
 *     this.schedule(state - 1); // `this` references currently executing Action,
 *                               // which we reschedule with new state
 *     console.log('after', state);
 *   }
 * }, 0, 3);
 *
 * // In scheduler that runs recursively, you would expect:
 * // "before", 3
 * // "before", 2
 * // "before", 1
 * // "after", 1
 * // "after", 2
 * // "after", 3
 *
 * // But with queue it logs:
 * // "before", 3
 * // "after", 3
 * // "before", 2
 * // "after", 2
 * // "before", 1
 * // "after", 1
 *
 *
 * @static true
 * @name queue
 * @owner Scheduler
 */

var queue =
/*@__PURE__*/
new _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__["QueueScheduler"](_QueueAction__WEBPACK_IMPORTED_MODULE_0__["QueueAction"]);

/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueAction", function() { return QueueAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(295);
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var QueueAction =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueAction, _super);

  function QueueAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  QueueAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay > 0) {
      return _super.prototype.schedule.call(this, state, delay);
    }

    this.delay = delay;
    this.state = state;
    this.scheduler.flush(this);
    return this;
  };

  QueueAction.prototype.execute = function (state, delay) {
    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);
  };

  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    } // If delay exists and is greater than 0, or if the delay is null (the
    // action wasn't rescheduled) but was originally scheduled as an async
    // action, then recycle as an async action.


    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    } // Otherwise flush the scheduler starting with this action.


    return scheduler.flush(this);
  };

  return QueueAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]);



/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncAction", function() { return AsyncAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(296);
/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var AsyncAction =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncAction, _super);

  function AsyncAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    _this.pending = false;
    return _this;
  }

  AsyncAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (this.closed) {
      return this;
    } // Always replace the current state with the new state.


    this.state = state;
    var id = this.id;
    var scheduler = this.scheduler; //
    // Important implementation note:
    //
    // Actions only execute once by default, unless rescheduled from within the
    // scheduled callback. This allows us to implement single and repeat
    // actions via the same code path, without adding API surface area, as well
    // as mimic traditional recursion but across asynchronous boundaries.
    //
    // However, JS runtimes and timers distinguish between intervals achieved by
    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of
    // serial `setTimeout` calls can be individually delayed, which delays
    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to
    // guarantee the interval callback will be invoked more precisely to the
    // interval period, regardless of load.
    //
    // Therefore, we use `setInterval` to schedule single and repeat actions.
    // If the action reschedules itself with the same delay, the interval is not
    // canceled. If the action doesn't reschedule, or reschedules with a
    // different delay, the interval will be canceled after scheduled callback
    // execution.
    //

    if (id != null) {
      this.id = this.recycleAsyncId(scheduler, id, delay);
    } // Set the pending flag indicating that this action has been scheduled, or
    // has recursively rescheduled itself.


    this.pending = true;
    this.delay = delay; // If this action has already an async Id, don't request a new one.

    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
    return this;
  };

  AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return setInterval(scheduler.flush.bind(scheduler, this), delay);
  };

  AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    } // If this action is rescheduled with the same delay time, don't clear the interval id.


    if (delay !== null && this.delay === delay && this.pending === false) {
      return id;
    } // Otherwise, if the action's delay time is different from the current delay,
    // or the action has been rescheduled before it's executed, clear the interval id


    return clearInterval(id) && undefined || undefined;
  };
  /**
   * Immediately executes this action and the `work` it contains.
   * @return {any}
   */


  AsyncAction.prototype.execute = function (state, delay) {
    if (this.closed) {
      return new Error('executing a cancelled action');
    }

    this.pending = false;

    var error = this._execute(state, delay);

    if (error) {
      return error;
    } else if (this.pending === false && this.id != null) {
      // Dequeue if the action didn't reschedule itself. Don't call
      // unsubscribe(), because the action could reschedule later.
      // For example:
      // ```
      // scheduler.schedule(function doWork(counter) {
      //   /* ... I'm a busy worker bee ... */
      //   var originalAction = this;
      //   /* wait 100ms before rescheduling the action */
      //   setTimeout(function () {
      //     originalAction.schedule(counter + 1);
      //   }, 100);
      // }, 1000);
      // ```
      this.id = this.recycleAsyncId(this.scheduler, this.id, null);
    }
  };

  AsyncAction.prototype._execute = function (state, delay) {
    var errored = false;
    var errorValue = undefined;

    try {
      this.work(state);
    } catch (e) {
      errored = true;
      errorValue = !!e && e || new Error(e);
    }

    if (errored) {
      this.unsubscribe();
      return errorValue;
    }
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  AsyncAction.prototype._unsubscribe = function () {
    var id = this.id;
    var scheduler = this.scheduler;
    var actions = scheduler.actions;
    var index = actions.indexOf(this);
    this.work = null;
    this.state = null;
    this.pending = false;
    this.scheduler = null;

    if (index !== -1) {
      actions.splice(index, 1);
    }

    if (id != null) {
      this.id = this.recycleAsyncId(scheduler, id, null);
    }

    this.delay = null;
  };

  return AsyncAction;
}(_Action__WEBPACK_IMPORTED_MODULE_1__["Action"]);



/***/ }),
/* 296 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return Action; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


/**
 * A unit of work to be executed in a {@link Scheduler}. An action is typically
 * created from within a Scheduler and an RxJS user does not need to concern
 * themselves about creating and manipulating an Action.
 *
 * ```ts
 * class Action<T> extends Subscription {
 *   new (scheduler: Scheduler, work: (state?: T) => void);
 *   schedule(state?: T, delay: number = 0): Subscription;
 * }
 * ```
 *
 * @class Action<T>
 */

var Action =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Action, _super);

  function Action(scheduler, work) {
    return _super.call(this) || this;
  }
  /**
   * Schedules this action on its parent Scheduler for execution. May be passed
   * some context object, `state`. May happen at some point in the future,
   * according to the `delay` parameter, if specified.
   * @param {T} [state] Some contextual data that the `work` function uses when
   * called by the Scheduler.
   * @param {number} [delay] Time to wait before executing the work, where the
   * time unit is implicit and defined by the Scheduler.
   * @return {void}
   */


  Action.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return this;
  };

  return Action;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]);



/***/ }),
/* 297 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueScheduler", function() { return QueueScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(298);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */



var QueueScheduler =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueScheduler, _super);

  function QueueScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return QueueScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]);



/***/ }),
/* 298 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncScheduler", function() { return AsyncScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(299);
/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */



var AsyncScheduler =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncScheduler, _super);

  function AsyncScheduler(SchedulerAction, now) {
    if (now === void 0) {
      now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"].now;
    }

    var _this = _super.call(this, SchedulerAction, function () {
      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
        return AsyncScheduler.delegate.now();
      } else {
        return now();
      }
    }) || this;

    _this.actions = [];
    /**
     * A flag to indicate whether the Scheduler is currently executing a batch of
     * queued actions.
     * @type {boolean}
     */

    _this.active = false;
    /**
     * An internal ID used to track the latest asynchronous task such as those
     * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and
     * others.
     * @type {any}
     */

    _this.scheduled = undefined;
    return _this;
  }

  AsyncScheduler.prototype.schedule = function (work, delay, state) {
    if (delay === void 0) {
      delay = 0;
    }

    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
      return AsyncScheduler.delegate.schedule(work, delay, state);
    } else {
      return _super.prototype.schedule.call(this, work, delay, state);
    }
  };

  AsyncScheduler.prototype.flush = function (action) {
    var actions = this.actions;

    if (this.active) {
      actions.push(action);
      return;
    }

    var error;
    this.active = true;

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (action = actions.shift()); // exhaust the scheduler queue


    this.active = false;

    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AsyncScheduler;
}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"]);



/***/ }),
/* 299 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return Scheduler; });
/**
 * An execution context and a data structure to order tasks and schedule their
 * execution. Provides a notion of (potentially virtual) time, through the
 * `now()` getter method.
 *
 * Each unit of work in a Scheduler is called an {@link Action}.
 *
 * ```ts
 * class Scheduler {
 *   now(): number;
 *   schedule(work, delay?, state?): Subscription;
 * }
 * ```
 *
 * @class Scheduler
 * @deprecated Scheduler is an internal implementation detail of RxJS, and
 * should not be used directly. Rather, create your own class and implement
 * {@link SchedulerLike}
 */
var Scheduler =
/*@__PURE__*/
function () {
  function Scheduler(SchedulerAction, now) {
    if (now === void 0) {
      now = Scheduler.now;
    }

    this.SchedulerAction = SchedulerAction;
    this.now = now;
  }
  /**
   * Schedules a function, `work`, for execution. May happen at some point in
   * the future, according to the `delay` parameter, if specified. May be passed
   * some context object, `state`, which will be passed to the `work` function.
   *
   * The given arguments will be processed an stored as an Action object in a
   * queue of actions.
   *
   * @param {function(state: ?T): ?Subscription} work A function representing a
   * task, or some unit of work to be executed by the Scheduler.
   * @param {number} [delay] Time to wait before executing the work, where the
   * time unit is implicit and defined by the Scheduler itself.
   * @param {T} [state] Some contextual data that the `work` function uses when
   * called by the Scheduler.
   * @return {Subscription} A subscription in order to be able to unsubscribe
   * the scheduled work.
   */


  Scheduler.prototype.schedule = function (work, delay, state) {
    if (delay === void 0) {
      delay = 0;
    }

    return new this.SchedulerAction(this, work).schedule(state, delay);
  };
  /** @nocollapse */


  Scheduler.now = Date.now ? Date.now : function () {
    return +new Date();
  };
  return Scheduler;
}();



/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return observeOn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnOperator", function() { return ObserveOnOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnSubscriber", function() { return ObserveOnSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnMessage", function() { return ObserveOnMessage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(301);
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



/**
 *
 * Re-emits all notifications from source Observable with specified scheduler.
 *
 * <span class="informal">Ensure a specific scheduler is used, from outside of an Observable.</span>
 *
 * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule
 * notifications emitted by the source Observable. It might be useful, if you do not have control over
 * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.
 *
 * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,
 * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal
 * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits
 * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.
 * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split
 * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source
 * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a
 * little bit more, to ensure that they are emitted at expected moments.
 *
 * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications
 * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`
 * will delay all notifications - including error notifications - while `delay` will pass through error
 * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator
 * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used
 * for notification emissions in general.
 *
 * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>
 * const intervals = Rx.Observable.interval(10); // Intervals are scheduled
 *                                               // with async scheduler by default...
 *
 * intervals
 * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame
 * .subscribe(val => {                           // scheduler to ensure smooth animation.
 *   someDiv.style.height = val + 'px';
 * });
 *
 * @see {@link delay}
 *
 * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.
 * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.
 * @return {Observable<T>} Observable that emits the same notifications as the source Observable,
 * but with provided scheduler.
 *
 * @method observeOn
 * @owner Observable
 */

function observeOn(scheduler, delay) {
  if (delay === void 0) {
    delay = 0;
  }

  return function observeOnOperatorFunction(source) {
    return source.lift(new ObserveOnOperator(scheduler, delay));
  };
}

var ObserveOnOperator =
/*@__PURE__*/
function () {
  function ObserveOnOperator(scheduler, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    this.scheduler = scheduler;
    this.delay = delay;
  }

  ObserveOnOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
  };

  return ObserveOnOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var ObserveOnSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ObserveOnSubscriber, _super);

  function ObserveOnSubscriber(destination, scheduler, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    var _this = _super.call(this, destination) || this;

    _this.scheduler = scheduler;
    _this.delay = delay;
    return _this;
  }
  /** @nocollapse */


  ObserveOnSubscriber.dispatch = function (arg) {
    var notification = arg.notification,
        destination = arg.destination;
    notification.observe(destination);
    this.unsubscribe();
  };

  ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
    this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
  };

  ObserveOnSubscriber.prototype._next = function (value) {
    this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createNext(value));
  };

  ObserveOnSubscriber.prototype._error = function (err) {
    this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createError(err));
  };

  ObserveOnSubscriber.prototype._complete = function () {
    this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createComplete());
  };

  return ObserveOnSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);



var ObserveOnMessage =
/*@__PURE__*/
function () {
  function ObserveOnMessage(notification, destination) {
    this.notification = notification;
    this.destination = destination;
  }

  return ObserveOnMessage;
}();



/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return Notification; });
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(302);
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(303);
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(308);
/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */



/**
 * Represents a push-based event or value that an {@link Observable} can emit.
 * This class is particularly useful for operators that manage notifications,
 * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and
 * others. Besides wrapping the actual delivered value, it also annotates it
 * with metadata of, for instance, what type of push message it is (`next`,
 * `error`, or `complete`).
 *
 * @see {@link materialize}
 * @see {@link dematerialize}
 * @see {@link observeOn}
 *
 * @class Notification<T>
 */

var Notification =
/*@__PURE__*/
function () {
  function Notification(kind, value, error) {
    this.kind = kind;
    this.value = value;
    this.error = error;
    this.hasValue = kind === 'N';
  }
  /**
   * Delivers to the given `observer` the value wrapped by this Notification.
   * @param {Observer} observer
   * @return
   */


  Notification.prototype.observe = function (observer) {
    switch (this.kind) {
      case 'N':
        return observer.next && observer.next(this.value);

      case 'E':
        return observer.error && observer.error(this.error);

      case 'C':
        return observer.complete && observer.complete();
    }
  };
  /**
   * Given some {@link Observer} callbacks, deliver the value represented by the
   * current Notification to the correctly corresponding callback.
   * @param {function(value: T): void} next An Observer `next` callback.
   * @param {function(err: any): void} [error] An Observer `error` callback.
   * @param {function(): void} [complete] An Observer `complete` callback.
   * @return {any}
   */


  Notification.prototype.do = function (next, error, complete) {
    var kind = this.kind;

    switch (kind) {
      case 'N':
        return next && next(this.value);

      case 'E':
        return error && error(this.error);

      case 'C':
        return complete && complete();
    }
  };
  /**
   * Takes an Observer or its individual callback functions, and calls `observe`
   * or `do` methods accordingly.
   * @param {Observer|function(value: T): void} nextOrObserver An Observer or
   * the `next` callback.
   * @param {function(err: any): void} [error] An Observer `error` callback.
   * @param {function(): void} [complete] An Observer `complete` callback.
   * @return {any}
   */


  Notification.prototype.accept = function (nextOrObserver, error, complete) {
    if (nextOrObserver && typeof nextOrObserver.next === 'function') {
      return this.observe(nextOrObserver);
    } else {
      return this.do(nextOrObserver, error, complete);
    }
  };
  /**
   * Returns a simple Observable that just delivers the notification represented
   * by this Notification instance.
   * @return {any}
   */


  Notification.prototype.toObservable = function () {
    var kind = this.kind;

    switch (kind) {
      case 'N':
        return Object(_observable_of__WEBPACK_IMPORTED_MODULE_1__["of"])(this.value);

      case 'E':
        return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_2__["throwError"])(this.error);

      case 'C':
        return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_0__["empty"])();
    }

    throw new Error('unexpected notification kind value');
  };
  /**
   * A shortcut to create a Notification instance of the type `next` from a
   * given value.
   * @param {T} value The `next` value.
   * @return {Notification<T>} The "next" Notification representing the
   * argument.
   * @nocollapse
   */


  Notification.createNext = function (value) {
    if (typeof value !== 'undefined') {
      return new Notification('N', value);
    }

    return Notification.undefinedValueNotification;
  };
  /**
   * A shortcut to create a Notification instance of the type `error` from a
   * given error.
   * @param {any} [err] The `error` error.
   * @return {Notification<T>} The "error" Notification representing the
   * argument.
   * @nocollapse
   */


  Notification.createError = function (err) {
    return new Notification('E', undefined, err);
  };
  /**
   * A shortcut to create a Notification instance of the type `complete`.
   * @return {Notification<any>} The valueless "complete" Notification.
   * @nocollapse
   */


  Notification.createComplete = function () {
    return Notification.completeNotification;
  };

  Notification.completeNotification = new Notification('C');
  Notification.undefinedValueNotification = new Notification('N', undefined);
  return Notification;
}();



/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return EMPTY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "emptyScheduled", function() { return emptyScheduled; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

/**
 * The same Observable instance returned by any call to {@link empty} without a
 * {@link Scheduler}. It is preferrable to use this over `empty()`.
 */

var EMPTY =
/*@__PURE__*/
new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
  return subscriber.complete();
});
/**
 * Creates an Observable that emits no items to the Observer and immediately
 * emits a complete notification.
 *
 * <span class="informal">Just emits 'complete', and nothing else.
 * </span>
 *
 * <img src="./img/empty.png" width="100%">
 *
 * This static operator is useful for creating a simple Observable that only
 * emits the complete notification. It can be used for composing with other
 * Observables, such as in a {@link mergeMap}.
 *
 * @example <caption>Emit the number 7, then complete.</caption>
 * var result = Rx.Observable.empty().startWith(7);
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>
 * var interval = Rx.Observable.interval(1000);
 * var result = interval.mergeMap(x =>
 *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following to the console:
 * // x is equal to the count on the interval eg(0,1,2,3,...)
 * // x will occur every 1000ms
 * // if x % 2 is equal to 1 print abc
 * // if x % 2 is not equal to 1 nothing will be output
 *
 * @see {@link create}
 * @see {@link never}
 * @see {@link of}
 * @see {@link throw}
 *
 * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
 * the emission of the complete notification.
 * @return {Observable} An "empty" Observable: emits only the complete
 * notification.
 * @static true
 * @name empty
 * @owner Observable
 * @deprecated Deprecated in favor of using EMPTY constant.
 */

function empty(scheduler) {
  return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    return scheduler.schedule(function () {
      return subscriber.complete();
    });
  });
}

/***/ }),
/* 303 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "of", function() { return of; });
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(305);
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(302);
/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(307);
/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */




function of() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var scheduler = args[args.length - 1];

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__["isScheduler"])(scheduler)) {
    args.pop();
  } else {
    scheduler = undefined;
  }

  switch (args.length) {
    case 0:
      return Object(_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])(scheduler);

    case 1:
      return scheduler ? Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(args, scheduler) : Object(_scalar__WEBPACK_IMPORTED_MODULE_3__["scalar"])(args[0]);

    default:
      return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(args, scheduler);
  }
}

/***/ }),
/* 304 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScheduler", function() { return isScheduler; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
  return value && typeof value.schedule === 'function';
}

/***/ }),
/* 305 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromArray", function() { return fromArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/* harmony import */ var _util_subscribeToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(306);
/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */



function fromArray(input, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_2__["subscribeToArray"])(input));
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
      var i = 0;
      sub.add(scheduler.schedule(function () {
        if (i === input.length) {
          subscriber.complete();
          return;
        }

        subscriber.next(input[i++]);

        if (!subscriber.closed) {
          sub.add(this.schedule());
        }
      }));
      return sub;
    });
  }
}

/***/ }),
/* 306 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToArray", function() { return subscribeToArray; });
/**
 * Subscribes to an ArrayLike with a subscriber
 * @param array The array or array-like to subscribe to
 */

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function subscribeToArray(array) {
  return function (subscriber) {
    for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
      subscriber.next(array[i]);
    }

    if (!subscriber.closed) {
      subscriber.complete();
    }
  };
};

/***/ }),
/* 307 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scalar", function() { return scalar; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function scalar(value) {
  var result = new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    subscriber.next(value);
    subscriber.complete();
  });
  result._isScalar = true;
  result.value = value;
  return result;
}

/***/ }),
/* 308 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return throwError; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

/**
 * Creates an Observable that emits no items to the Observer and immediately
 * emits an error notification.
 *
 * <span class="informal">Just emits 'error', and nothing else.
 * </span>
 *
 * <img src="./img/throw.png" width="100%">
 *
 * This static operator is useful for creating a simple Observable that only
 * emits the error notification. It can be used for composing with other
 * Observables, such as in a {@link mergeMap}.
 *
 * @example <caption>Emit the number 7, then emit an error.</caption>
 * import { throwError, concat, of } from 'rxjs/create';
 *
 * const result = concat(of(7), throwError(new Error('oops!')));
 * result.subscribe(x => console.log(x), e => console.error(e));
 *
 * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>
 * import { throwError, interval, of } from 'rxjs/create';
 * import { mergeMap } from 'rxjs/operators';
 *
 * interval(1000).pipe(
 *   mergeMap(x => x === 13 ?
 *     throwError('Thirteens are bad') :
 *     of('a', 'b', 'c')
 *   )
 * ).subscribe(x => console.log(x), e => console.error(e));
 *
 * @see {@link create}
 * @see {@link empty}
 * @see {@link never}
 * @see {@link of}
 *
 * @param {any} error The particular Error to pass to the error notification.
 * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
 * the emission of the error notification.
 * @return {Observable} An error Observable: emits only the error notification
 * using the given error argument.
 * @static true
 * @name throw
 * @owner Observable
 */

function throwError(error, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      return subscriber.error(error);
    });
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      return scheduler.schedule(dispatch, 0, {
        error: error,
        subscriber: subscriber
      });
    });
  }
}

function dispatch(_a) {
  var error = _a.error,
      subscriber = _a.subscriber;
  subscriber.error(error);
}

/***/ }),
/* 309 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return AsyncSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(275);
/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */



/**
 * @class AsyncSubject<T>
 */

var AsyncSubject =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncSubject, _super);

  function AsyncSubject() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.value = null;
    _this.hasNext = false;
    _this.hasCompleted = false;
    return _this;
  }
  /** @deprecated This is an internal implementation detail, do not use. */


  AsyncSubject.prototype._subscribe = function (subscriber) {
    if (this.hasError) {
      subscriber.error(this.thrownError);
      return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
    } else if (this.hasCompleted && this.hasNext) {
      subscriber.next(this.value);
      subscriber.complete();
      return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
    }

    return _super.prototype._subscribe.call(this, subscriber);
  };

  AsyncSubject.prototype.next = function (value) {
    if (!this.hasCompleted) {
      this.value = value;
      this.hasNext = true;
    }
  };

  AsyncSubject.prototype.error = function (error) {
    if (!this.hasCompleted) {
      _super.prototype.error.call(this, error);
    }
  };

  AsyncSubject.prototype.complete = function () {
    this.hasCompleted = true;

    if (this.hasNext) {
      _super.prototype.next.call(this, this.value);
    }

    _super.prototype.complete.call(this);
  };

  return AsyncSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]);



/***/ }),
/* 310 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return asap; });
/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(311);
/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(313);
/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */


/**
 *
 * Asap Scheduler
 *
 * <span class="informal">Perform task as fast as it can be performed asynchronously</span>
 *
 * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task
 * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing
 * code to end and then it will try to execute given task as fast as possible.
 *
 * `asap` scheduler will do its best to minimize time between end of currently executing code
 * and start of scheduled task. This makes it best candidate for performing so called "deferring".
 * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves
 * some (although minimal) unwanted delay.
 *
 * Note that using `asap` scheduler does not necessarily mean that your task will be first to process
 * after currently executing code. In particular, if some task was also scheduled with `asap` before,
 * that task will execute first. That being said, if you need to schedule task asynchronously, but
 * as soon as possible, `asap` scheduler is your best bet.
 *
 * @example <caption>Compare async and asap scheduler</caption>
 *
 * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...
 * Rx.Scheduler.asap.schedule(() => console.log('asap'));
 *
 * // Logs:
 * // "asap"
 * // "async"
 * // ... but 'asap' goes first!
 *
 * @static true
 * @name asap
 * @owner Scheduler
 */

var asap =
/*@__PURE__*/
new _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__["AsapScheduler"](_AsapAction__WEBPACK_IMPORTED_MODULE_0__["AsapAction"]);

/***/ }),
/* 311 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapAction", function() { return AsapAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(312);
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(295);
/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */



/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var AsapAction =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapAction, _super);

  function AsapAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    } // If delay is greater than 0, request as an async action.


    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    } // Push the action to the end of the scheduler queue.


    scheduler.actions.push(this); // If a microtask has already been scheduled, don't schedule another
    // one. If a microtask hasn't been scheduled yet, schedule one now. Return
    // the current scheduled microtask id.

    return scheduler.scheduled || (scheduler.scheduled = _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].setImmediate(scheduler.flush.bind(scheduler, null)));
  };

  AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    } // If delay exists and is greater than 0, or if the delay is null (the
    // action wasn't rescheduled) but was originally scheduled as an async
    // action, then recycle as an async action.


    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
    } // If the scheduler queue is empty, cancel the requested microtask and
    // set the scheduled flag to undefined so the next AsapAction will schedule
    // its own.


    if (scheduler.actions.length === 0) {
      _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].clearImmediate(id);
      scheduler.scheduled = undefined;
    } // Return undefined so the action knows to request a new async id if it's rescheduled.


    return undefined;
  };

  return AsapAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_2__["AsyncAction"]);



/***/ }),
/* 312 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Immediate", function() { return Immediate; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 0;
var tasksByHandle = {};

function runIfPresent(handle) {
  var cb = tasksByHandle[handle];

  if (cb) {
    cb();
  }
}

var Immediate = {
  setImmediate: function setImmediate(cb) {
    var handle = nextHandle++;
    tasksByHandle[handle] = cb;
    Promise.resolve().then(function () {
      return runIfPresent(handle);
    });
    return handle;
  },
  clearImmediate: function clearImmediate(handle) {
    delete tasksByHandle[handle];
  }
};

/***/ }),
/* 313 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapScheduler", function() { return AsapScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(298);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */



var AsapScheduler =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapScheduler, _super);

  function AsapScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AsapScheduler.prototype.flush = function (action) {
    this.active = true;
    this.scheduled = undefined;
    var actions = this.actions;
    var error;
    var index = -1;
    var count = actions.length;
    action = action || actions.shift();

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (++index < count && (action = actions.shift()));

    this.active = false;

    if (error) {
      while (++index < count && (action = actions.shift())) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AsapScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]);



/***/ }),
/* 314 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "async", function() { return async; });
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(295);
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(298);
/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */


/**
 *
 * Async Scheduler
 *
 * <span class="informal">Schedule task as if you used setTimeout(task, duration)</span>
 *
 * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript
 * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating
 * in intervals.
 *
 * If you just want to "defer" task, that is to perform it right after currently
 * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),
 * better choice will be the {@link asap} scheduler.
 *
 * @example <caption>Use async scheduler to delay task</caption>
 * const task = () => console.log('it works!');
 *
 * Rx.Scheduler.async.schedule(task, 2000);
 *
 * // After 2 seconds logs:
 * // "it works!"
 *
 *
 * @example <caption>Use async scheduler to repeat task in intervals</caption>
 * function task(state) {
 *   console.log(state);
 *   this.schedule(state + 1, 1000); // `this` references currently executing Action,
 *                                   // which we reschedule with new state and delay
 * }
 *
 * Rx.Scheduler.async.schedule(task, 3000, 0);
 *
 * // Logs:
 * // 0 after 3s
 * // 1 after 4s
 * // 2 after 5s
 * // 3 after 6s
 *
 * @static true
 * @name async
 * @owner Scheduler
 */

var async =
/*@__PURE__*/
new _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"](_AsyncAction__WEBPACK_IMPORTED_MODULE_0__["AsyncAction"]);

/***/ }),
/* 315 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return animationFrame; });
/* harmony import */ var _AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(316);
/* harmony import */ var _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(317);
/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */


/**
 *
 * Animation Frame Scheduler
 *
 * <span class="informal">Perform task when `window.requestAnimationFrame` would fire</span>
 *
 * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler
 * behaviour.
 *
 * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.
 * It makes sure scheduled task will happen just before next browser content repaint,
 * thus performing animations as efficiently as possible.
 *
 * @example <caption>Schedule div height animation</caption>
 * const div = document.querySelector('.some-div');
 *
 * Rx.Scheduler.animationFrame.schedule(function(height) {
 *   div.style.height = height + "px";
 *
 *   this.schedule(height + 1);  // `this` references currently executing Action,
 *                               // which we reschedule with new state
 * }, 0, 0);
 *
 * // You will see .some-div element growing in height
 *
 *
 * @static true
 * @name animationFrame
 * @owner Scheduler
 */

var animationFrame =
/*@__PURE__*/
new _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__["AnimationFrameScheduler"](_AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__["AnimationFrameAction"]);

/***/ }),
/* 316 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameAction", function() { return AnimationFrameAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(295);
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var AnimationFrameAction =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnimationFrameAction, _super);

  function AnimationFrameAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    } // If delay is greater than 0, request as an async action.


    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    } // Push the action to the end of the scheduler queue.


    scheduler.actions.push(this); // If an animation frame has already been requested, don't request another
    // one. If an animation frame hasn't been requested yet, request one. Return
    // the current animation frame request id.

    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () {
      return scheduler.flush(null);
    }));
  };

  AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    } // If delay exists and is greater than 0, or if the delay is null (the
    // action wasn't rescheduled) but was originally scheduled as an async
    // action, then recycle as an async action.


    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
    } // If the scheduler queue is empty, cancel the requested animation frame and
    // set the scheduled flag to undefined so the next AnimationFrameAction will
    // request its own.


    if (scheduler.actions.length === 0) {
      cancelAnimationFrame(id);
      scheduler.scheduled = undefined;
    } // Return undefined so the action knows to request a new async id if it's rescheduled.


    return undefined;
  };

  return AnimationFrameAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]);



/***/ }),
/* 317 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameScheduler", function() { return AnimationFrameScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(298);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */



var AnimationFrameScheduler =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnimationFrameScheduler, _super);

  function AnimationFrameScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AnimationFrameScheduler.prototype.flush = function (action) {
    this.active = true;
    this.scheduled = undefined;
    var actions = this.actions;
    var error;
    var index = -1;
    var count = actions.length;
    action = action || actions.shift();

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (++index < count && (action = actions.shift()));

    this.active = false;

    if (error) {
      while (++index < count && (action = actions.shift())) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AnimationFrameScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]);



/***/ }),
/* 318 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return VirtualTimeScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return VirtualAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(295);
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(298);
/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */




var VirtualTimeScheduler =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](VirtualTimeScheduler, _super);

  function VirtualTimeScheduler(SchedulerAction, maxFrames) {
    if (SchedulerAction === void 0) {
      SchedulerAction = VirtualAction;
    }

    if (maxFrames === void 0) {
      maxFrames = Number.POSITIVE_INFINITY;
    }

    var _this = _super.call(this, SchedulerAction, function () {
      return _this.frame;
    }) || this;

    _this.maxFrames = maxFrames;
    _this.frame = 0;
    _this.index = -1;
    return _this;
  }
  /**
   * Prompt the Scheduler to execute all of its queued actions, therefore
   * clearing its queue.
   * @return {void}
   */


  VirtualTimeScheduler.prototype.flush = function () {
    var _a = this,
        actions = _a.actions,
        maxFrames = _a.maxFrames;

    var error, action;

    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    }

    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  VirtualTimeScheduler.frameTimeFactor = 10;
  return VirtualTimeScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__["AsyncScheduler"]);


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var VirtualAction =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](VirtualAction, _super);

  function VirtualAction(scheduler, work, index) {
    if (index === void 0) {
      index = scheduler.index += 1;
    }

    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    _this.index = index;
    _this.active = true;
    _this.index = scheduler.index = index;
    return _this;
  }

  VirtualAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (!this.id) {
      return _super.prototype.schedule.call(this, state, delay);
    }

    this.active = false; // If an action is rescheduled, we save allocations by mutating its state,
    // pushing it to the end of the scheduler queue, and recycling the action.
    // But since the VirtualTimeScheduler is used for testing, VirtualActions
    // must be immutable so they can be inspected later.

    var action = new VirtualAction(this.scheduler, this.work);
    this.add(action);
    return action.schedule(state, delay);
  };

  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    this.delay = scheduler.frame + delay;
    var actions = scheduler.actions;
    actions.push(this);
    actions.sort(VirtualAction.sortActions);
    return true;
  };

  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return undefined;
  };

  VirtualAction.prototype._execute = function (state, delay) {
    if (this.active === true) {
      return _super.prototype._execute.call(this, state, delay);
    }
  };

  VirtualAction.sortActions = function (a, b) {
    if (a.delay === b.delay) {
      if (a.index === b.index) {
        return 0;
      } else if (a.index > b.index) {
        return 1;
      } else {
        return -1;
      }
    } else if (a.delay > b.delay) {
      return 1;
    } else {
      return -1;
    }
  };

  return VirtualAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]);



/***/ }),
/* 319 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
  return x;
}

/***/ }),
/* 320 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return ArgumentOutOfRangeError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */

/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */

var ArgumentOutOfRangeError =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ArgumentOutOfRangeError, _super);

  function ArgumentOutOfRangeError() {
    var _this = _super.call(this, 'argument out of range') || this;

    _this.name = 'ArgumentOutOfRangeError';
    Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);
    return _this;
  }

  return ArgumentOutOfRangeError;
}(Error);



/***/ }),
/* 321 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return EmptyError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */

/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */

var EmptyError =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](EmptyError, _super);

  function EmptyError() {
    var _this = _super.call(this, 'no elements in sequence') || this;

    _this.name = 'EmptyError';
    Object.setPrototypeOf(_this, EmptyError.prototype);
    return _this;
  }

  return EmptyError;
}(Error);



/***/ }),
/* 322 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return TimeoutError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */

/**
 * An error thrown when duetime elapses.
 *
 * @see {@link timeout}
 *
 * @class TimeoutError
 */

var TimeoutError =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TimeoutError, _super);

  function TimeoutError() {
    var _this = _super.call(this, 'Timeout has occurred') || this;

    Object.setPrototypeOf(_this, TimeoutError.prototype);
    return _this;
  }

  return TimeoutError;
}(Error);



/***/ }),
/* 323 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return bindCallback; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(309);
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(324);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(276);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(304);
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isArray,_util_isScheduler PURE_IMPORTS_END */




 // tslint:enable:max-line-length

/**
 * Converts a callback API to a function that returns an Observable.
 *
 * <span class="informal">Give it a function `f` of type `f(x, callback)` and
 * it will return a function `g` that when called as `g(x)` will output an
 * Observable.</span>
 *
 * `bindCallback` is not an operator because its input and output are not
 * Observables. The input is a function `func` with some parameters, the
 * last parameter must be a callback function that `func` calls when it is
 * done.
 *
 * The output of `bindCallback` is a function that takes the same parameters
 * as `func`, except the last one (the callback). When the output function
 * is called with arguments it will return an Observable. If function `func`
 * calls its callback with one argument the Observable will emit that value.
 * If on the other hand the callback is called with multiple values the resulting
 * Observable will emit an array with said values as arguments.
 *
 * It is very important to remember that input function `func` is not called
 * when the output function is, but rather when the Observable returned by the output
 * function is subscribed. This means if `func` makes an AJAX request, that request
 * will be made every time someone subscribes to the resulting Observable, but not before.
 *
 * The last optional parameter - {@link Scheduler} - can be used to control when the call
 * to `func` happens after someone subscribes to Observable, as well as when results
 * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`
 * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,
 * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler
 * and call `subscribe` on the output Observable all function calls that are currently executing
 * will end before `func` is invoked.
 *
 * By default results passed to the callback are emitted immediately after `func` invokes the callback.
 * In particular, if the callback is called synchronously the subscription of the resulting Observable
 * will call the `next` function synchronously as well.  If you want to defer that call,
 * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can
 * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.
 *
 * Note that the Observable created by the output function will always emit a single value
 * and then complete immediately. If `func` calls the callback multiple times, values from subsequent
 * calls will not appear in the stream. If you need to listen for multiple calls,
 *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.
 *
 * If `func` depends on some context (`this` property) and is not already bound the context of `func`
 * will be the context that the output function has at call time. In particular, if `func`
 * is called as a method of some objec and if `func` is not already bound, in order to preserve the context
 * it is recommended that the context of the output function is set to that object as well.
 *
 * If the input function calls its callback in the "node style" (i.e. first argument to callback is
 * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}
 * provides convenient error handling and probably is a better choice.
 * `bindCallback` will treat such functions the same as any other and error parameters
 * (whether passed or not) will always be interpreted as regular callback argument.
 *
 *
 * @example <caption>Convert jQuery's getJSON to an Observable API</caption>
 * // Suppose we have jQuery.getJSON('/my/url', callback)
 * var getJSONAsObservable = bindCallback(jQuery.getJSON);
 * var result = getJSONAsObservable('/my/url');
 * result.subscribe(x => console.log(x), e => console.error(e));
 *
 *
 * @example <caption>Receive an array of arguments passed to a callback</caption>
 * someFunction((a, b, c) => {
 *   console.log(a); // 5
 *   console.log(b); // 'some string'
 *   console.log(c); // {someProperty: 'someValue'}
 * });
 *
 * const boundSomeFunction = bindCallback(someFunction);
 * boundSomeFunction().subscribe(values => {
 *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]
 * });
 *
 *
 * @example <caption>Compare behaviour with and without async Scheduler</caption>
 * function iCallMyCallbackSynchronously(cb) {
 *   cb();
 * }
 *
 * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);
 * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);
 *
 * boundSyncFn().subscribe(() => console.log('I was sync!'));
 * boundAsyncFn().subscribe(() => console.log('I was async!'));
 * console.log('This happened...');
 *
 * // Logs:
 * // I was sync!
 * // This happened...
 * // I was async!
 *
 *
 * @example <caption>Use bindCallback on an object method</caption>
 * const boundMethod = bindCallback(someObject.methodWithCallback);
 * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject
 * .subscribe(subscriber);
 *
 *
 * @see {@link bindNodeCallback}
 * @see {@link from}
 * @see {@link fromPromise}
 *
 * @param {function} func A function with a callback as the last parameter.
 * @param {Scheduler} [scheduler] The scheduler on which to schedule the
 * callbacks.
 * @return {function(...params: *): Observable} A function which returns the
 * Observable that delivers the same values the callback would deliver.
 * @name bindCallback
 */

function bindCallback(callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_4__["isScheduler"])(resultSelector)) {
      scheduler = resultSelector;
    } else {
      // DEPRECATED PATH
      return function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) {
          return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_3__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
        }));
      };
    }
  }

  return function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var context = this;
    var subject;
    var params = {
      context: context,
      subject: subject,
      callbackFunc: callbackFunc,
      scheduler: scheduler
    };
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      if (!scheduler) {
        if (!subject) {
          subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();

          var handler = function handler() {
            var innerArgs = [];

            for (var _i = 0; _i < arguments.length; _i++) {
              innerArgs[_i] = arguments[_i];
            }

            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };

          try {
            callbackFunc.apply(context, args.concat([handler]));
          } catch (err) {
            subject.error(err);
          }
        }

        return subject.subscribe(subscriber);
      } else {
        var state = {
          args: args,
          subscriber: subscriber,
          params: params
        };
        return scheduler.schedule(dispatch, 0, state);
      }
    });
  };
}

function dispatch(state) {
  var _this = this;

  var self = this;
  var args = state.args,
      subscriber = state.subscriber,
      params = state.params;
  var callbackFunc = params.callbackFunc,
      context = params.context,
      scheduler = params.scheduler;
  var subject = params.subject;

  if (!subject) {
    subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();

    var handler = function handler() {
      var innerArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        innerArgs[_i] = arguments[_i];
      }

      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;

      _this.add(scheduler.schedule(dispatchNext, 0, {
        value: value,
        subject: subject
      }));
    };

    try {
      callbackFunc.apply(context, args.concat([handler]));
    } catch (err) {
      subject.error(err);
    }
  }

  this.add(subject.subscribe(subscriber));
}

function dispatchNext(state) {
  var value = state.value,
      subject = state.subject;
  subject.next(value);
  subject.complete();
}

function dispatchError(state) {
  var err = state.err,
      subject = state.subject;
  subject.error(err);
}

/***/ }),
/* 324 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapOperator", function() { return MapOperator; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */

function map(project, thisArg) {
  return function mapOperation(source) {
    if (typeof project !== 'function') {
      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
    }

    return source.lift(new MapOperator(project, thisArg));
  };
}

var MapOperator =
/*@__PURE__*/
function () {
  function MapOperator(project, thisArg) {
    this.project = project;
    this.thisArg = thisArg;
  }

  MapOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
  };

  return MapOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var MapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSubscriber, _super);

  function MapSubscriber(destination, project, thisArg) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.count = 0;
    _this.thisArg = thisArg || _this;
    return _this;
  } // NOTE: This looks unoptimized, but it's actually purposefully NOT
  // using try/catch optimizations.


  MapSubscriber.prototype._next = function (value) {
    var result;

    try {
      result = this.project.call(this.thisArg, value, this.count++);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return MapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 325 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return bindNodeCallback; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(309);
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(324);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(304);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(276);
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isScheduler,_util_isArray PURE_IMPORTS_END */





/**
 * Converts a Node.js-style callback API to a function that returns an
 * Observable.
 *
 * <span class="informal">It's just like {@link bindCallback}, but the
 * callback is expected to be of type `callback(error, result)`.</span>
 *
 * `bindNodeCallback` is not an operator because its input and output are not
 * Observables. The input is a function `func` with some parameters, but the
 * last parameter must be a callback function that `func` calls when it is
 * done. The callback function is expected to follow Node.js conventions,
 * where the first argument to the callback is an error object, signaling
 * whether call was successful. If that object is passed to callback, it means
 * something went wrong.
 *
 * The output of `bindNodeCallback` is a function that takes the same
 * parameters as `func`, except the last one (the callback). When the output
 * function is called with arguments, it will return an Observable.
 * If `func` calls its callback with error parameter present, Observable will
 * error with that value as well. If error parameter is not passed, Observable will emit
 * second parameter. If there are more parameters (third and so on),
 * Observable will emit an array with all arguments, except first error argument.
 *
 * Note that `func` will not be called at the same time output function is,
 * but rather whenever resulting Observable is subscribed. By default call to
 * `func` will happen synchronously after subscription, but that can be changed
 * with proper {@link Scheduler} provided as optional third parameter. Scheduler
 * can also control when values from callback will be emitted by Observable.
 * To find out more, check out documentation for {@link bindCallback}, where
 * Scheduler works exactly the same.
 *
 * As in {@link bindCallback}, context (`this` property) of input function will be set to context
 * of returned function, when it is called.
 *
 * After Observable emits value, it will complete immediately. This means
 * even if `func` calls callback again, values from second and consecutive
 * calls will never appear on the stream. If you need to handle functions
 * that call callbacks multiple times, check out {@link fromEvent} or
 * {@link fromEventPattern} instead.
 *
 * Note that `bindNodeCallback` can be used in non-Node.js environments as well.
 * "Node.js-style" callbacks are just a convention, so if you write for
 * browsers or any other environment and API you use implements that callback style,
 * `bindNodeCallback` can be safely used on that API functions as well.
 *
 * Remember that Error object passed to callback does not have to be an instance
 * of JavaScript built-in `Error` object. In fact, it does not even have to an object.
 * Error parameter of callback function is interpreted as "present", when value
 * of that parameter is truthy. It could be, for example, non-zero number, non-empty
 * string or boolean `true`. In all of these cases resulting Observable would error
 * with that value. This means usually regular style callbacks will fail very often when
 * `bindNodeCallback` is used. If your Observable errors much more often then you
 * would expect, check if callback really is called in Node.js-style and, if not,
 * switch to {@link bindCallback} instead.
 *
 * Note that even if error parameter is technically present in callback, but its value
 * is falsy, it still won't appear in array emitted by Observable.
 *
 *
 * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>
 * import * as fs from 'fs';
 * var readFileAsObservable = bindNodeCallback(fs.readFile);
 * var result = readFileAsObservable('./roadNames.txt', 'utf8');
 * result.subscribe(x => console.log(x), e => console.error(e));
 *
 *
 * @example <caption>Use on function calling callback with multiple arguments</caption>
 * someFunction((err, a, b) => {
 *   console.log(err); // null
 *   console.log(a); // 5
 *   console.log(b); // "some string"
 * });
 * var boundSomeFunction = bindNodeCallback(someFunction);
 * boundSomeFunction()
 * .subscribe(value => {
 *   console.log(value); // [5, "some string"]
 * });
 *
 * @example <caption>Use on function calling callback in regular style</caption>
 * someFunction(a => {
 *   console.log(a); // 5
 * });
 * var boundSomeFunction = bindNodeCallback(someFunction);
 * boundSomeFunction()
 * .subscribe(
 *   value => {}             // never gets called
 *   err => console.log(err) // 5
 * );
 *
 *
 * @see {@link bindCallback}
 * @see {@link from}
 * @see {@link fromPromise}
 *
 * @param {function} func Function with a Node.js-style callback as the last parameter.
 * @param {Scheduler} [scheduler] The scheduler on which to schedule the
 * callbacks.
 * @return {function(...params: *): Observable} A function which returns the
 * Observable that delivers the same values the Node.js callback would
 * deliver.
 * @name bindNodeCallback
 */

function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(resultSelector)) {
      scheduler = resultSelector;
    } else {
      // DEPRECATED PATH
      return function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) {
          return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_4__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
        }));
      };
    }
  }

  return function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var params = {
      subject: undefined,
      args: args,
      callbackFunc: callbackFunc,
      scheduler: scheduler,
      context: this
    };
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var context = params.context;
      var subject = params.subject;

      if (!scheduler) {
        if (!subject) {
          subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();

          var handler = function handler() {
            var innerArgs = [];

            for (var _i = 0; _i < arguments.length; _i++) {
              innerArgs[_i] = arguments[_i];
            }

            var err = innerArgs.shift();

            if (err) {
              subject.error(err);
              return;
            }

            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };

          try {
            callbackFunc.apply(context, args.concat([handler]));
          } catch (err) {
            subject.error(err);
          }
        }

        return subject.subscribe(subscriber);
      } else {
        return scheduler.schedule(dispatch, 0, {
          params: params,
          subscriber: subscriber,
          context: context
        });
      }
    });
  };
}

function dispatch(state) {
  var _this = this;

  var params = state.params,
      subscriber = state.subscriber,
      context = state.context;
  var callbackFunc = params.callbackFunc,
      args = params.args,
      scheduler = params.scheduler;
  var subject = params.subject;

  if (!subject) {
    subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();

    var handler = function handler() {
      var innerArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        innerArgs[_i] = arguments[_i];
      }

      var err = innerArgs.shift();

      if (err) {
        _this.add(scheduler.schedule(dispatchError, 0, {
          err: err,
          subject: subject
        }));
      } else {
        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;

        _this.add(scheduler.schedule(dispatchNext, 0, {
          value: value,
          subject: subject
        }));
      }
    };

    try {
      callbackFunc.apply(context, args.concat([handler]));
    } catch (err) {
      this.add(scheduler.schedule(dispatchError, 0, {
        err: err,
        subject: subject
      }));
    }
  }

  this.add(subject.subscribe(subscriber));
}

function dispatchNext(arg) {
  var value = arg.value,
      subject = arg.subject;
  subject.next(value);
  subject.complete();
}

function dispatchError(arg) {
  var err = arg.err,
      subject = arg.subject;
  subject.error(err);
}

/***/ }),
/* 326 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestOperator", function() { return CombineLatestOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestSubscriber", function() { return CombineLatestSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(304);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(276);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(305);
/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */






var NONE = {};
/* tslint:enable:max-line-length */

/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from all the Observables passed as
 * arguments. This is done by subscribing to each Observable in order and,
 * whenever any Observable emits, collecting an array of the most recent
 * values from each Observable. So if you pass `n` Observables to operator,
 * returned Observable will always emit an array of `n` values, in order
 * corresponding to order of passed Observables (value from the first Observable
 * on the first place and so on).
 *
 * Static version of `combineLatest` accepts either an array of Observables
 * or each Observable can be put directly as an argument. Note that array of
 * Observables is good choice, if you don't know beforehand how many Observables
 * you will combine. Passing empty array will result in Observable that
 * completes immediately.
 *
 * To ensure output array has always the same length, `combineLatest` will
 * actually wait for all input Observables to emit at least once,
 * before it starts emitting results. This means if some Observable emits
 * values before other Observables started emitting, all that values but last
 * will be lost. On the other hand, is some Observable does not emit value but
 * completes, resulting Observable will complete at the same moment without
 * emitting anything, since it will be now impossible to include value from
 * completed Observable in resulting array. Also, if some input Observable does
 * not emit any value and never completes, `combineLatest` will also never emit
 * and never complete, since, again, it will wait for all streams to emit some
 * value.
 *
 * If at least one Observable was passed to `combineLatest` and all passed Observables
 * emitted something, resulting Observable will complete when all combined
 * streams complete. So even if some Observable completes, result of
 * `combineLatest` will still emit values when other Observables do. In case
 * of completed Observable, its value from now on will always be the last
 * emitted value. On the other hand, if any Observable errors, `combineLatest`
 * will error immediately as well, and all other Observables will be unsubscribed.
 *
 * `combineLatest` accepts as optional parameter `project` function, which takes
 * as arguments all values that would normally be emitted by resulting Observable.
 * `project` can return any kind of value, which will be then emitted by Observable
 * instead of default array. Note that `project` does not take as argument that array
 * of values, but values themselves. That means default `project` can be imagined
 * as function that takes all its arguments and puts them into an array.
 *
 *
 * @example <caption>Combine two timer Observables</caption>
 * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now
 * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now
 * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);
 * combinedTimers.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0] after 0.5s
 * // [1, 0] after 1s
 * // [1, 1] after 1.5s
 * // [2, 1] after 2s
 *
 *
 * @example <caption>Combine an array of Observables</caption>
 * const observables = [1, 5, 10].map(
 *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds
 * );
 * const combined = Rx.Observable.combineLatest(observables);
 * combined.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0, 0] immediately
 * // [1, 0, 0] after 1s
 * // [1, 5, 0] after 5s
 * // [1, 5, 10] after 10s
 *
 *
 * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} observable1 An input Observable to combine with other Observables.
 * @param {ObservableInput} observable2 An input Observable to combine with other Observables.
 * More than one input Observables may be given as arguments
 * or an array of Observables may be given as the first argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each input Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 */

function combineLatest() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var resultSelector = null;
  var scheduler = null;

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(observables[observables.length - 1])) {
    scheduler = observables.pop();
  }

  if (typeof observables[observables.length - 1] === 'function') {
    resultSelector = observables.pop();
  } // if the first and only other argument besides the resultSelector is an array
  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`


  if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(observables[0])) {
    observables = observables[0];
  }

  return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__["fromArray"])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}

var CombineLatestOperator =
/*@__PURE__*/
function () {
  function CombineLatestOperator(resultSelector) {
    this.resultSelector = resultSelector;
  }

  CombineLatestOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
  };

  return CombineLatestOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var CombineLatestSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CombineLatestSubscriber, _super);

  function CombineLatestSubscriber(destination, resultSelector) {
    var _this = _super.call(this, destination) || this;

    _this.resultSelector = resultSelector;
    _this.active = 0;
    _this.values = [];
    _this.observables = [];
    return _this;
  }

  CombineLatestSubscriber.prototype._next = function (observable) {
    this.values.push(NONE);
    this.observables.push(observable);
  };

  CombineLatestSubscriber.prototype._complete = function () {
    var observables = this.observables;
    var len = observables.length;

    if (len === 0) {
      this.destination.complete();
    } else {
      this.active = len;
      this.toRespond = len;

      for (var i = 0; i < len; i++) {
        var observable = observables[i];
        this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, observable, i));
      }
    }
  };

  CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
    if ((this.active -= 1) === 0) {
      this.destination.complete();
    }
  };

  CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var values = this.values;
    var oldVal = values[outerIndex];
    var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;
    values[outerIndex] = innerValue;

    if (toRespond === 0) {
      if (this.resultSelector) {
        this._tryResultSelector(values);
      } else {
        this.destination.next(values.slice());
      }
    }
  };

  CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
    var result;

    try {
      result = this.resultSelector.apply(this, values);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return CombineLatestSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);



/***/ }),
/* 327 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OuterSubscriber", function() { return OuterSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var OuterSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OuterSubscriber, _super);

  function OuterSubscriber() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  OuterSubscriber.prototype.notifyError = function (error, innerSub) {
    this.destination.error(error);
  };

  OuterSubscriber.prototype.notifyComplete = function (innerSub) {
    this.destination.complete();
  };

  return OuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);



/***/ }),
/* 328 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToResult", function() { return subscribeToResult; });
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(329);
/* harmony import */ var _subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);
/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */


function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
  var destination = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__["InnerSubscriber"](outerSubscriber, outerValue, outerIndex);
  return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(result)(destination);
}

/***/ }),
/* 329 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InnerSubscriber", function() { return InnerSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var InnerSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerSubscriber, _super);

  function InnerSubscriber(parent, outerValue, outerIndex) {
    var _this = _super.call(this) || this;

    _this.parent = parent;
    _this.outerValue = outerValue;
    _this.outerIndex = outerIndex;
    _this.index = 0;
    return _this;
  }

  InnerSubscriber.prototype._next = function (value) {
    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
  };

  InnerSubscriber.prototype._error = function (error) {
    this.parent.notifyError(error, this);
    this.unsubscribe();
  };

  InnerSubscriber.prototype._complete = function () {
    this.parent.notifyComplete(this);
    this.unsubscribe();
  };

  return InnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);



/***/ }),
/* 330 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeTo", function() { return subscribeTo; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _subscribeToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(306);
/* harmony import */ var _subscribeToPromise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(331);
/* harmony import */ var _subscribeToIterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(332);
/* harmony import */ var _subscribeToObservable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(334);
/* harmony import */ var _isArrayLike__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(335);
/* harmony import */ var _isPromise__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(336);
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(277);
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(333);
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(282);
/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */










var subscribeTo = function subscribeTo(result) {
  if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
    return function (subscriber) {
      if (result._isScalar) {
        subscriber.next(result.value);
        subscriber.complete();
        return undefined;
      } else {
        return result.subscribe(subscriber);
      }
    };
  } else if (Object(_isArrayLike__WEBPACK_IMPORTED_MODULE_5__["isArrayLike"])(result)) {
    return Object(_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__["subscribeToArray"])(result);
  } else if (Object(_isPromise__WEBPACK_IMPORTED_MODULE_6__["isPromise"])(result)) {
    return Object(_subscribeToPromise__WEBPACK_IMPORTED_MODULE_2__["subscribeToPromise"])(result);
  } else if (result && typeof result[_symbol_iterator__WEBPACK_IMPORTED_MODULE_8__["iterator"]] === 'function') {
    return Object(_subscribeToIterable__WEBPACK_IMPORTED_MODULE_3__["subscribeToIterable"])(result);
  } else if (result && typeof result[_symbol_observable__WEBPACK_IMPORTED_MODULE_9__["observable"]] === 'function') {
    return Object(_subscribeToObservable__WEBPACK_IMPORTED_MODULE_4__["subscribeToObservable"])(result);
  } else {
    var value = Object(_isObject__WEBPACK_IMPORTED_MODULE_7__["isObject"])(result) ? 'an invalid object' : "'" + result + "'";
    var msg = "You provided " + value + " where a stream was expected." + ' You can provide an Observable, Promise, Array, or Iterable.';
    throw new TypeError(msg);
  }
};

/***/ }),
/* 331 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToPromise", function() { return subscribeToPromise; });
/* harmony import */ var _hostReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(274);
/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */

var subscribeToPromise = function subscribeToPromise(promise) {
  return function (subscriber) {
    promise.then(function (value) {
      if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
      }
    }, function (err) {
      return subscriber.error(err);
    }).then(null, _hostReportError__WEBPACK_IMPORTED_MODULE_0__["hostReportError"]);
    return subscriber;
  };
};

/***/ }),
/* 332 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToIterable", function() { return subscribeToIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(333);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

var subscribeToIterable = function subscribeToIterable(iterable) {
  return function (subscriber) {
    var iterator = iterable[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]]();

    do {
      var item = iterator.next();

      if (item.done) {
        subscriber.complete();
        break;
      }

      subscriber.next(item.value);

      if (subscriber.closed) {
        break;
      }
    } while (true); // Finalize the iterator if it happens to be a Generator


    if (typeof iterator.return === 'function') {
      subscriber.add(function () {
        if (iterator.return) {
          iterator.return();
        }
      });
    }

    return subscriber;
  };
};

/***/ }),
/* 333 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSymbolIterator", function() { return getSymbolIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iterator", function() { return iterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$iterator", function() { return $$iterator; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
  if (typeof Symbol !== 'function' || !Symbol.iterator) {
    return '@@iterator';
  }

  return Symbol.iterator;
}
var iterator =
/*@__PURE__*/
getSymbolIterator();
/**
 * @deprecated use {@link iterator} instead
 */

var $$iterator = iterator;

/***/ }),
/* 334 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToObservable", function() { return subscribeToObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(282);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

/**
 * Subscribes to an object that implements Symbol.observable with the given
 * Subscriber.
 * @param obj An object that implements Symbol.observable
 */

var subscribeToObservable = function subscribeToObservable(obj) {
  return function (subscriber) {
    var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]]();

    if (typeof obs.subscribe !== 'function') {
      // Should be caught by observable subscribe function error handling.
      throw new TypeError('Provided object does not correctly implement Symbol.observable');
    } else {
      return obs.subscribe(subscriber);
    }
  };
};

/***/ }),
/* 335 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return isArrayLike; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = function isArrayLike(x) {
  return x && typeof x.length === 'number' && typeof x !== 'function';
};

/***/ }),
/* 336 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return isPromise; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
  return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}

/***/ }),
/* 337 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);
/* harmony import */ var _of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(303);
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(338);
/* harmony import */ var _operators_concatAll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(344);
/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * Creates an output Observable which sequentially emits all values from given
 * Observable and then moves on to the next.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * `concat` joins multiple Observables together, by subscribing to them one at a time and
 * merging their results into the output Observable. You can pass either an array of
 * Observables, or put them directly as arguments. Passing an empty array will result
 * in Observable that completes immediately.
 *
 * `concat` will subscribe to first input Observable and emit all its values, without
 * changing or affecting them in any way. When that Observable completes, it will
 * subscribe to then next Observable passed and, again, emit its values. This will be
 * repeated, until the operator runs out of Observables. When last input Observable completes,
 * `concat` will complete as well. At any given moment only one Observable passed to operator
 * emits values. If you would like to emit values from passed Observables concurrently, check out
 * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,
 * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.
 *
 * Note that if some input Observable never completes, `concat` will also never complete
 * and Observables following the one that did not complete will never be subscribed. On the other
 * hand, if some Observable simply completes immediately after it is subscribed, it will be
 * invisible for `concat`, which will just move on to the next Observable.
 *
 * If any Observable in chain errors, instead of passing control to the next Observable,
 * `concat` will error immediately as well. Observables that would be subscribed after
 * the one that emitted error, never will.
 *
 * If you pass to `concat` the same Observable many times, its stream of values
 * will be "replayed" on every subscription, which means you can repeat given Observable
 * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,
 * you can always use {@link repeat}.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 *
 * @example <caption>Concatenate an array of 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 *
 * @example <caption>Concatenate the same Observable to repeat it</caption>
 * const timer = Rx.Observable.interval(1000).take(2);
 *
 * Rx.Observable.concat(timer, timer) // concating the same Observable!
 * .subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('...and it is done!')
 * );
 *
 * // Logs:
 * // 0 after 1s
 * // 1 after 2s
 * // 0 after 3s
 * // 1 after 4s
 * // "...and it is done!" also after 4s
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} input1 An input Observable to concatenate with others.
 * @param {ObservableInput} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */

function concat() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  if (observables.length === 1 || observables.length === 2 && Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__["isScheduler"])(observables[1])) {
    return Object(_from__WEBPACK_IMPORTED_MODULE_2__["from"])(observables[0]);
  }

  return Object(_operators_concatAll__WEBPACK_IMPORTED_MODULE_3__["concatAll"])()(_of__WEBPACK_IMPORTED_MODULE_1__["of"].apply(void 0, observables));
}

/***/ }),
/* 338 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "from", function() { return from; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(336);
/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(335);
/* harmony import */ var _util_isObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(339);
/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(340);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(305);
/* harmony import */ var _fromPromise__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(341);
/* harmony import */ var _fromIterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(342);
/* harmony import */ var _fromObservable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(343);
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(330);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */










function from(input, scheduler) {
  if (!scheduler) {
    if (input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
      return input;
    }

    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_9__["subscribeTo"])(input));
  }

  if (input != null) {
    if (Object(_util_isObservable__WEBPACK_IMPORTED_MODULE_3__["isObservable"])(input)) {
      return Object(_fromObservable__WEBPACK_IMPORTED_MODULE_8__["fromObservable"])(input, scheduler);
    } else if (Object(_util_isPromise__WEBPACK_IMPORTED_MODULE_1__["isPromise"])(input)) {
      return Object(_fromPromise__WEBPACK_IMPORTED_MODULE_6__["fromPromise"])(input, scheduler);
    } else if (Object(_util_isArrayLike__WEBPACK_IMPORTED_MODULE_2__["isArrayLike"])(input)) {
      return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__["fromArray"])(input, scheduler);
    } else if (Object(_util_isIterable__WEBPACK_IMPORTED_MODULE_4__["isIterable"])(input) || typeof input === 'string') {
      return Object(_fromIterable__WEBPACK_IMPORTED_MODULE_7__["fromIterable"])(input, scheduler);
    }
  }

  throw new TypeError((input !== null && _typeof(input) || input) + ' is not observable');
}

/***/ }),
/* 339 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return isObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(282);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

/** Identifies an input as being Observable (but not necessary an Rx Observable) */

function isObservable(input) {
  return input && typeof input[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]] === 'function';
}

/***/ }),
/* 340 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIterable", function() { return isIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(333);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

/** Identifies an input as being an Iterable */

function isIterable(input) {
  return input && typeof input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]] === 'function';
}

/***/ }),
/* 341 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromPromise", function() { return fromPromise; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/* harmony import */ var _util_subscribeToPromise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(331);
/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */



function fromPromise(input, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToPromise__WEBPACK_IMPORTED_MODULE_2__["subscribeToPromise"])(input));
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
      sub.add(scheduler.schedule(function () {
        return input.then(function (value) {
          sub.add(scheduler.schedule(function () {
            subscriber.next(value);
            sub.add(scheduler.schedule(function () {
              return subscriber.complete();
            }));
          }));
        }, function (err) {
          sub.add(scheduler.schedule(function () {
            return subscriber.error(err);
          }));
        });
      }));
      return sub;
    });
  }
}

/***/ }),
/* 342 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromIterable", function() { return fromIterable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(333);
/* harmony import */ var _util_subscribeToIterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(332);
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */




function fromIterable(input, scheduler) {
  if (!input) {
    throw new Error('Iterable cannot be null');
  }

  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToIterable__WEBPACK_IMPORTED_MODULE_3__["subscribeToIterable"])(input));
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
      var iterator;
      sub.add(function () {
        // Finalize generators
        if (iterator && typeof iterator.return === 'function') {
          iterator.return();
        }
      });
      sub.add(scheduler.schedule(function () {
        iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__["iterator"]]();
        sub.add(scheduler.schedule(function () {
          if (subscriber.closed) {
            return;
          }

          var value;
          var done;

          try {
            var result = iterator.next();
            value = result.value;
            done = result.done;
          } catch (err) {
            subscriber.error(err);
            return;
          }

          if (done) {
            subscriber.complete();
          } else {
            subscriber.next(value);
            this.schedule();
          }
        }));
      }));
      return sub;
    });
  }
}

/***/ }),
/* 343 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromObservable", function() { return fromObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(282);
/* harmony import */ var _util_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(334);
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */




function fromObservable(input, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__["subscribeToObservable"])(input));
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
      sub.add(scheduler.schedule(function () {
        var observable = input[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]]();
        sub.add(observable.subscribe({
          next: function next(value) {
            sub.add(scheduler.schedule(function () {
              return subscriber.next(value);
            }));
          },
          error: function error(err) {
            sub.add(scheduler.schedule(function () {
              return subscriber.error(err);
            }));
          },
          complete: function complete() {
            sub.add(scheduler.schedule(function () {
              return subscriber.complete();
            }));
          }
        }));
      }));
      return sub;
    });
  }
}

/***/ }),
/* 344 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return concatAll; });
/* harmony import */ var _mergeAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(345);
/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */

/**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */

function concatAll() {
  return Object(_mergeAll__WEBPACK_IMPORTED_MODULE_0__["mergeAll"])(1);
}

/***/ }),
/* 345 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return mergeAll; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(346);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(319);
/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */


/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */

function mergeAll(concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"], concurrent);
}

/***/ }),
/* 346 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return mergeMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapOperator", function() { return MergeMapOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapSubscriber", function() { return MergeMapSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(328);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(327);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(324);
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(338);
/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_map,_observable_from PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */

function mergeMap(project, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  if (typeof resultSelector === 'function') {
    // DEPRECATED PATH
    return function (source) {
      return source.pipe(mergeMap(function (a, i) {
        return Object(_observable_from__WEBPACK_IMPORTED_MODULE_4__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }, concurrent));
    };
  } else if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return function (source) {
    return source.lift(new MergeMapOperator(project, concurrent));
  };
}

var MergeMapOperator =
/*@__PURE__*/
function () {
  function MergeMapOperator(project, concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }

    this.project = project;
    this.concurrent = concurrent;
  }

  MergeMapOperator.prototype.call = function (observer, source) {
    return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
  };

  return MergeMapOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var MergeMapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MergeMapSubscriber, _super);

  function MergeMapSubscriber(destination, project, concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }

    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.concurrent = concurrent;
    _this.hasCompleted = false;
    _this.buffer = [];
    _this.active = 0;
    _this.index = 0;
    return _this;
  }

  MergeMapSubscriber.prototype._next = function (value) {
    if (this.active < this.concurrent) {
      this._tryNext(value);
    } else {
      this.buffer.push(value);
    }
  };

  MergeMapSubscriber.prototype._tryNext = function (value) {
    var result;
    var index = this.index++;

    try {
      result = this.project(value, index);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.active++;

    this._innerSub(result, value, index);
  };

  MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
    this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__["subscribeToResult"])(this, ish, value, index));
  };

  MergeMapSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (this.active === 0 && this.buffer.length === 0) {
      this.destination.complete();
    }
  };

  MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
    var buffer = this.buffer;
    this.remove(innerSub);
    this.active--;

    if (buffer.length > 0) {
      this._next(buffer.shift());
    } else if (this.active === 0 && this.hasCompleted) {
      this.destination.complete();
    }
  };

  return MergeMapSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]);



/***/ }),
/* 347 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return defer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(338);
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(302);
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */

 // lol


/**
 * Creates an Observable that, on subscribe, calls an Observable factory to
 * make an Observable for each new Observer.
 *
 * <span class="informal">Creates the Observable lazily, that is, only when it
 * is subscribed.
 * </span>
 *
 * <img src="./img/defer.png" width="100%">
 *
 * `defer` allows you to create the Observable only when the Observer
 * subscribes, and create a fresh Observable for each Observer. It waits until
 * an Observer subscribes to it, and then it generates an Observable,
 * typically with an Observable factory function. It does this afresh for each
 * subscriber, so although each subscriber may think it is subscribing to the
 * same Observable, in fact each subscriber gets its own individual
 * Observable.
 *
 * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>
 * var clicksOrInterval = Rx.Observable.defer(function () {
 *   if (Math.random() > 0.5) {
 *     return Rx.Observable.fromEvent(document, 'click');
 *   } else {
 *     return Rx.Observable.interval(1000);
 *   }
 * });
 * clicksOrInterval.subscribe(x => console.log(x));
 *
 * // Results in the following behavior:
 * // If the result of Math.random() is greater than 0.5 it will listen
 * // for clicks anywhere on the "document"; when document is clicked it
 * // will log a MouseEvent object to the console. If the result is less
 * // than 0.5 it will emit ascending numbers, one every second(1000ms).
 *
 * @see {@link create}
 *
 * @param {function(): SubscribableOrPromise} observableFactory The Observable
 * factory function to invoke for each Observer that subscribes to the output
 * Observable. May also return a Promise, which will be converted on the fly
 * to an Observable.
 * @return {Observable} An Observable whose Observers' subscriptions trigger
 * an invocation of the given Observable factory function.
 * @static true
 * @name defer
 * @owner Observable
 */

function defer(observableFactory) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var input;

    try {
      input = observableFactory();
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var source = input ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(input) : Object(_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
    return source.subscribe(subscriber);
  });
}

/***/ }),
/* 348 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return forkJoin; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(268);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(276);
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(302);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(327);
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(324);
/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */







/* tslint:enable:max-line-length */

/**
 * Joins last values emitted by passed Observables.
 *
 * <span class="informal">Wait for Observables to complete and then combine last values they emitted.</span>
 *
 * <img src="./img/forkJoin.png" width="100%">
 *
 * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array
 * or directly as arguments. If no input Observables are provided, resulting stream will complete
 * immediately.
 *
 * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last
 * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting
 * array will have `n` values, where first value is the last thing emitted by the first Observable,
 * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will
 * not emit more than once and it will complete after that. If you need to emit combined values not only
 * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}
 * or {@link zip} instead.
 *
 * In order for resulting array to have the same length as the number of input Observables, whenever any of
 * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well
 * and it will not emit anything either, even if it already has some last values from other Observables.
 * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,
 * unless at any point some other Observable completes without emitting value, which brings us back to
 * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments
 * have to emit something at least once and complete.
 *
 * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables
 * will be immediately unsubscribed.
 *
 * Optionally `forkJoin` accepts project function, that will be called with values which normally
 * would land in emitted array. Whatever is returned by project function, will appear in output
 * Observable instead. This means that default project can be thought of as a function that takes
 * all its arguments and puts them into an array. Note that project function will be called only
 * when output Observable is supposed to emit a result.
 *
 * @example <caption>Use forkJoin with operator emitting immediately</caption>
 * import { forkJoin, of } from 'rxjs';
 *
 * const observable = forkJoin(
 *   of(1, 2, 3, 4),
 *   of(5, 6, 7, 8)
 * );
 * observable.subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('This is how it ends!')
 * );
 *
 * // Logs:
 * // [4, 8]
 * // "This is how it ends!"
 *
 *
 * @example <caption>Use forkJoin with operator emitting after some time</caption>
 * import { forkJoin, interval } from 'rxjs';
 * import { take } from 'rxjs/operators';
 *
 * const observable = forkJoin(
 *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete
 *   interval(500).pipe(take(4)) // emit 0, 1, 2, 3 every half a second and complete
 * );
 * observable.subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('This is how it ends!')
 * );
 *
 * // Logs:
 * // [2, 3] after 3 seconds
 * // "This is how it ends!" immediately after
 *
 *
 * @example <caption>Use forkJoin with project function</caption>
 * import { jorkJoin, interval } from 'rxjs';
 * import { take } from 'rxjs/operators';
 *
 * const observable = forkJoin(
 *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete
 *   interval(500).pipe(take(4)), // emit 0, 1, 2, 3 every half a second and complete
 *   (n, m) => n + m
 * );
 * observable.subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('This is how it ends!')
 * );
 *
 * // Logs:
 * // 5 after 3 seconds
 * // "This is how it ends!" immediately after
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 *
 * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments
 * passed directly to the operator.
 * @param {function} [project] Function that takes values emitted by input Observables and returns value
 * that will appear in resulting Observable instead of default array.
 * @return {Observable} Observable emitting either an array of last values emitted by passed Observables
 * or value from project function.
 */

function forkJoin() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  var resultSelector;

  if (typeof sources[sources.length - 1] === 'function') {
    // DEPRECATED PATH
    resultSelector = sources.pop();
  } // if the first and only other argument is an array
  // assume it's been called with `forkJoin([obs1, obs2, obs3])`


  if (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(sources[0])) {
    sources = sources[0];
  }

  if (sources.length === 0) {
    return _empty__WEBPACK_IMPORTED_MODULE_3__["EMPTY"];
  }

  if (resultSelector) {
    // DEPRECATED PATH
    return forkJoin(sources).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_6__["map"])(function (args) {
      return resultSelector.apply(void 0, args);
    }));
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (subscriber) {
    return new ForkJoinSubscriber(subscriber, sources);
  });
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var ForkJoinSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ForkJoinSubscriber, _super);

  function ForkJoinSubscriber(destination, sources) {
    var _this = _super.call(this, destination) || this;

    _this.sources = sources;
    _this.completed = 0;
    _this.haveValues = 0;
    var len = sources.length;
    _this.values = new Array(len);

    for (var i = 0; i < len; i++) {
      var source = sources[i];
      var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(_this, source, null, i);

      if (innerSubscription) {
        _this.add(innerSubscription);
      }
    }

    return _this;
  }

  ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values[outerIndex] = innerValue;

    if (!innerSub._hasValue) {
      innerSub._hasValue = true;
      this.haveValues++;
    }
  };

  ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {
    var _a = this,
        destination = _a.destination,
        haveValues = _a.haveValues,
        values = _a.values;

    var len = values.length;

    if (!innerSub._hasValue) {
      destination.complete();
      return;
    }

    this.completed++;

    if (this.completed !== len) {
      return;
    }

    if (haveValues === len) {
      destination.next(values);
    }

    destination.complete();
  };

  return ForkJoinSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_5__["OuterSubscriber"]);

/***/ }),
/* 349 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return fromEvent; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(276);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(271);
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(324);
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




var toString = Object.prototype.toString;
/* tslint:enable:max-line-length */

/**
 * Creates an Observable that emits events of a specific type coming from the
 * given event target.
 *
 * <span class="informal">Creates an Observable from DOM events, or Node.js
 * EventEmitter events or others.</span>
 *
 * <img src="./img/fromEvent.png" width="100%">
 *
 * `fromEvent` accepts as a first argument event target, which is an object with methods
 * for registering event handler functions. As a second argument it takes string that indicates
 * type of event we want to listen for. `fromEvent` supports selected types of event targets,
 * which are described in detail below. If your event target does not match any of the ones listed,
 * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.
 * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event
 * handler functions have different names, but they all accept a string describing event type
 * and function itself, which will be called whenever said event happens.
 *
 * Every time resulting Observable is subscribed, event handler function will be registered
 * to event target on given event type. When that event fires, value
 * passed as a first argument to registered function will be emitted by output Observable.
 * When Observable is unsubscribed, function will be unregistered from event target.
 *
 * Note that if event target calls registered function with more than one argument, second
 * and following arguments will not appear in resulting stream. In order to get access to them,
 * you can pass to `fromEvent` optional project function, which will be called with all arguments
 * passed to event handler. Output Observable will then emit value returned by project function,
 * instead of the usual value.
 *
 * Remember that event targets listed below are checked via duck typing. It means that
 * no matter what kind of object you have and no matter what environment you work in,
 * you can safely use `fromEvent` on that object if it exposes described methods (provided
 * of course they behave as was described above). So for example if Node.js library exposes
 * event target which has the same method names as DOM EventTarget, `fromEvent` is still
 * a good choice.
 *
 * If the API you use is more callback then event handler oriented (subscribed
 * callback function fires only once and thus there is no need to manually
 * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}
 * instead.
 *
 * `fromEvent` supports following types of event targets:
 *
 * **DOM EventTarget**
 *
 * This is an object with `addEventListener` and `removeEventListener` methods.
 *
 * In the browser, `addEventListener` accepts - apart from event type string and event
 * handler function arguments - optional third parameter, which is either an object or boolean,
 * both used for additional configuration how and when passed function will be called. When
 * `fromEvent` is used with event target of that type, you can provide this values
 * as third parameter as well.
 *
 * **Node.js EventEmitter**
 *
 * An object with `addListener` and `removeListener` methods.
 *
 * **JQuery-style event target**
 *
 * An object with `on` and `off` methods
 *
 * **DOM NodeList**
 *
 * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.
 *
 * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes
 * it contains and install event handler function in every of them. When returned Observable
 * is unsubscribed, function will be removed from all Nodes.
 *
 * **DOM HtmlCollection**
 *
 * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is
 * installed and removed in each of elements.
 *
 *
 * @example <caption>Emits clicks happening on the DOM document</caption>
 * var clicks = fromEvent(document, 'click');
 * clicks.subscribe(x => console.log(x));
 *
 * // Results in:
 * // MouseEvent object logged to console every time a click
 * // occurs on the document.
 *
 *
 * @example <caption>Use addEventListener with capture option</caption>
 * var clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter
 *                                                                          // which will be passed to addEventListener
 * var clicksInDiv = fromEvent(someDivInDocument, 'click');
 *
 * clicksInDocument.subscribe(() => console.log('document'));
 * clicksInDiv.subscribe(() => console.log('div'));
 *
 * // By default events bubble UP in DOM tree, so normally
 * // when we would click on div in document
 * // "div" would be logged first and then "document".
 * // Since we specified optional `capture` option, document
 * // will catch event when it goes DOWN DOM tree, so console
 * // will log "document" and then "div".
 *
 * @see {@link bindCallback}
 * @see {@link bindNodeCallback}
 * @see {@link fromEventPattern}
 *
 * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js
 * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.
 * @param {string} eventName The event name of interest, being emitted by the
 * `target`.
 * @param {EventListenerOptions} [options] Options to pass through to addEventListener
 * @return {Observable<T>}
 * @name fromEvent
 */

function fromEvent(target, eventName, options, resultSelector) {
  if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(options)) {
    // DEPRECATED PATH
    resultSelector = options;
    options = undefined;
  }

  if (resultSelector) {
    // DEPRECATED PATH
    return fromEvent(target, eventName, options).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) {
      return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
    }));
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    function handler(e) {
      if (arguments.length > 1) {
        subscriber.next(Array.prototype.slice.call(arguments));
      } else {
        subscriber.next(e);
      }
    }

    setupSubscription(target, eventName, handler, subscriber, options);
  });
}

function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
  var unsubscribe;

  if (isEventTarget(sourceObj)) {
    var source_1 = sourceObj;
    sourceObj.addEventListener(eventName, handler, options);

    unsubscribe = function unsubscribe() {
      return source_1.removeEventListener(eventName, handler, options);
    };
  } else if (isJQueryStyleEventEmitter(sourceObj)) {
    var source_2 = sourceObj;
    sourceObj.on(eventName, handler);

    unsubscribe = function unsubscribe() {
      return source_2.off(eventName, handler);
    };
  } else if (isNodeStyleEventEmitter(sourceObj)) {
    var source_3 = sourceObj;
    sourceObj.addListener(eventName, handler);

    unsubscribe = function unsubscribe() {
      return source_3.removeListener(eventName, handler);
    };
  } else if (sourceObj && sourceObj.length) {
    for (var i = 0, len = sourceObj.length; i < len; i++) {
      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
    }
  } else {
    throw new TypeError('Invalid event target');
  }

  subscriber.add(unsubscribe);
}

function isNodeStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}

function isJQueryStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}

function isEventTarget(sourceObj) {
  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}

/***/ }),
/* 350 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return fromEventPattern; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(276);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(271);
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(324);
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * Creates an Observable from an API based on addHandler/removeHandler
 * functions.
 *
 * <span class="informal">Converts any addHandler/removeHandler API to an
 * Observable.</span>
 *
 * <img src="./img/fromEventPattern.png" width="100%">
 *
 * Creates an Observable by using the `addHandler` and `removeHandler`
 * functions to add and remove the handlers. The `addHandler` is
 * called when the output Observable is subscribed, and `removeHandler` is
 * called when the Subscription is unsubscribed.
 *
 * @example <caption>Emits clicks happening on the DOM document</caption>
 * function addClickHandler(handler) {
 *   document.addEventListener('click', handler);
 * }
 *
 * function removeClickHandler(handler) {
 *   document.removeEventListener('click', handler);
 * }
 *
 * var clicks = fromEventPattern(
 *   addClickHandler,
 *   removeClickHandler
 * );
 * clicks.subscribe(x => console.log(x));
 *
 * @see {@link from}
 * @see {@link fromEvent}
 *
 * @param {function(handler: Function): any} addHandler A function that takes
 * a `handler` function as argument and attaches it somehow to the actual
 * source of events.
 * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that
 * takes a `handler` function as argument and removes it in case it was
 * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,
 * removeHandler function will forward it.
 * @return {Observable<T>}
 * @name fromEventPattern
 */

function fromEventPattern(addHandler, removeHandler, resultSelector) {
  if (resultSelector) {
    // DEPRECATED PATH
    return fromEventPattern(addHandler, removeHandler).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) {
      return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
    }));
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var handler = function handler() {
      var e = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        e[_i] = arguments[_i];
      }

      return subscriber.next(e.length === 1 ? e[0] : e);
    };

    var retValue;

    try {
      retValue = addHandler(handler);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    if (!Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(removeHandler)) {
      return undefined;
    }

    return function () {
      return removeHandler(handler, retValue);
    };
  });
}

/***/ }),
/* 351 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return generate; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(319);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(304);
/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */



function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
  var resultSelector;
  var initialState;

  if (arguments.length == 1) {
    var options = initialStateOrOptions;
    initialState = options.initialState;
    condition = options.condition;
    iterate = options.iterate;
    resultSelector = options.resultSelector || _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
    scheduler = options.scheduler;
  } else if (resultSelectorOrObservable === undefined || Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_2__["isScheduler"])(resultSelectorOrObservable)) {
    initialState = initialStateOrOptions;
    resultSelector = _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
    scheduler = resultSelectorOrObservable;
  } else {
    initialState = initialStateOrOptions;
    resultSelector = resultSelectorOrObservable;
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var state = initialState;

    if (scheduler) {
      return scheduler.schedule(dispatch, 0, {
        subscriber: subscriber,
        iterate: iterate,
        condition: condition,
        resultSelector: resultSelector,
        state: state
      });
    }

    do {
      if (condition) {
        var conditionResult = void 0;

        try {
          conditionResult = condition(state);
        } catch (err) {
          subscriber.error(err);
          return undefined;
        }

        if (!conditionResult) {
          subscriber.complete();
          break;
        }
      }

      var value = void 0;

      try {
        value = resultSelector(state);
      } catch (err) {
        subscriber.error(err);
        return undefined;
      }

      subscriber.next(value);

      if (subscriber.closed) {
        break;
      }

      try {
        state = iterate(state);
      } catch (err) {
        subscriber.error(err);
        return undefined;
      }
    } while (true);

    return undefined;
  });
}

function dispatch(state) {
  var subscriber = state.subscriber,
      condition = state.condition;

  if (subscriber.closed) {
    return undefined;
  }

  if (state.needIterate) {
    try {
      state.state = state.iterate(state.state);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }
  } else {
    state.needIterate = true;
  }

  if (condition) {
    var conditionResult = void 0;

    try {
      conditionResult = condition(state.state);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    if (!conditionResult) {
      subscriber.complete();
      return undefined;
    }

    if (subscriber.closed) {
      return undefined;
    }
  }

  var value;

  try {
    value = state.resultSelector(state.state);
  } catch (err) {
    subscriber.error(err);
    return undefined;
  }

  if (subscriber.closed) {
    return undefined;
  }

  subscriber.next(value);

  if (subscriber.closed) {
    return undefined;
  }

  return this.schedule(state);
}

/***/ }),
/* 352 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return iif; });
/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(347);
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(302);
/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */


/**
 * Decides at subscription time which Observable will actually be subscribed.
 *
 * <span class="informal">`If` statement for Observables.</span>
 *
 * `if` accepts a condition function and two Observables. When
 * an Observable returned by the operator is subscribed, condition function will be called.
 * Based on what boolean it returns at that moment, consumer will subscribe either to
 * the first Observable (if condition was true) or to the second (if condition was false). Condition
 * function may also not return anything - in that case condition will be evaluated as false and
 * second Observable will be subscribed.
 *
 * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that
 * was left undefined, resulting stream will simply complete immediately. That allows you to, rather
 * then controlling which Observable will be subscribed, decide at runtime if consumer should have access
 * to given Observable or not.
 *
 * If you have more complex logic that requires decision between more than two Observables, {@link defer}
 * will probably be a better choice. Actually `if` can be easily implemented with {@link defer}
 * and exists only for convenience and readability reasons.
 *
 *
 * @example <caption>Change at runtime which Observable will be subscribed</caption>
 * let subscribeToFirst;
 * const firstOrSecond = Rx.Observable.if(
 *   () => subscribeToFirst,
 *   Rx.Observable.of('first'),
 *   Rx.Observable.of('second')
 * );
 *
 * subscribeToFirst = true;
 * firstOrSecond.subscribe(value => console.log(value));
 *
 * // Logs:
 * // "first"
 *
 * subscribeToFirst = false;
 * firstOrSecond.subscribe(value => console.log(value));
 *
 * // Logs:
 * // "second"
 *
 *
 * @example <caption>Control an access to an Observable</caption>
 * let accessGranted;
 * const observableIfYouHaveAccess = Rx.Observable.if(
 *   () => accessGranted,
 *   Rx.Observable.of('It seems you have an access...') // Note that only one Observable is passed to the operator.
 * );
 *
 * accessGranted = true;
 * observableIfYouHaveAccess.subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('The end')
 * );
 *
 * // Logs:
 * // "It seems you have an access..."
 * // "The end"
 *
 * accessGranted = false;
 * observableIfYouHaveAccess.subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('The end')
 * );
 *
 * // Logs:
 * // "The end"
 *
 * @see {@link defer}
 *
 * @param {function(): boolean} condition Condition which Observable should be chosen.
 * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.
 * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.
 * @return {Observable} Either first or second Observable, depending on condition.
 * @static true
 * @name iif
 * @owner Observable
 */

function iif(condition, trueResult, falseResult) {
  if (trueResult === void 0) {
    trueResult = _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
  }

  if (falseResult === void 0) {
    falseResult = _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
  }

  return Object(_defer__WEBPACK_IMPORTED_MODULE_0__["defer"])(function () {
    return condition() ? trueResult : falseResult;
  });
}

/***/ }),
/* 353 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return interval; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(354);
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */



/**
 * Creates an Observable that emits sequential numbers every specified
 * interval of time, on a specified IScheduler.
 *
 * <span class="informal">Emits incremental numbers periodically in time.
 * </span>
 *
 * <img src="./img/interval.png" width="100%">
 *
 * `interval` returns an Observable that emits an infinite sequence of
 * ascending integers, with a constant interval of time of your choosing
 * between those emissions. The first emission is not sent immediately, but
 * only after the first period has passed. By default, this operator uses the
 * `async` IScheduler to provide a notion of time, but you may pass any
 * IScheduler to it.
 *
 * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>
 * var numbers = Rx.Observable.interval(1000);
 * numbers.subscribe(x => console.log(x));
 *
 * @see {@link timer}
 * @see {@link delay}
 *
 * @param {number} [period=0] The interval size in milliseconds (by default)
 * or the time unit determined by the scheduler's clock.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
 * the emission of values, and providing a notion of "time".
 * @return {Observable} An Observable that emits a sequential number each time
 * interval.
 * @static true
 * @name interval
 * @owner Observable
 */

function interval(period, scheduler) {
  if (period === void 0) {
    period = 0;
  }

  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  }

  if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(period) || period < 0) {
    period = 0;
  }

  if (!scheduler || typeof scheduler.schedule !== 'function') {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    subscriber.add(scheduler.schedule(dispatch, period, {
      subscriber: subscriber,
      counter: 0,
      period: period
    }));
    return subscriber;
  });
}

function dispatch(state) {
  var subscriber = state.subscriber,
      counter = state.counter,
      period = state.period;
  subscriber.next(counter);
  this.schedule({
    subscriber: subscriber,
    counter: counter + 1,
    period: period
  }, period);
}

/***/ }),
/* 354 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(276);
/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */

function isNumeric(val) {
  // parseFloat NaNs numeric-cast false positives (null|true|false|"")
  // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
  // subtraction forces infinities to NaN
  // adding 1 corrects loss of precision from parseFloat (#15100)
  return !Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(val) && val - parseFloat(val) + 1 >= 0;
}

/***/ }),
/* 355 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(304);
/* harmony import */ var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(345);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(305);
/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (as arguments), and simply
 * forwards (without doing any transformation) all the values from all the input
 * Observables to the output Observable. The output Observable only completes
 * once all input Observables have completed. Any error delivered by an input
 * Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = Rx.Observable.merge(clicks, timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // timer will emit ascending values, one every second(1000ms) to console
 * // clicks logs MouseEvents to console everytime the "document" is clicked
 * // Since the two streams are merged you see these happening
 * // as they occur.
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - First timer1 and timer2 will run concurrently
 * // - timer1 will emit a value every 1000ms for 10 iterations
 * // - timer2 will emit a value every 2000ms for 6 iterations
 * // - after timer1 hits it's max iteration, timer2 will
 * //   continue, and timer3 will start to run concurrently with timer2
 * // - when timer2 hits it's max iteration it terminates, and
 * //   timer3 will continue to emit a value every 500ms until it is complete
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {...ObservableInput} observables Input Observables to merge together.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @static true
 * @name merge
 * @owner Observable
 */

function merge() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var concurrent = Number.POSITIVE_INFINITY;
  var scheduler = null;
  var last = observables[observables.length - 1];

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(last)) {
    scheduler = observables.pop();

    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
      concurrent = observables.pop();
    }
  } else if (typeof last === 'number') {
    concurrent = observables.pop();
  }

  if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
    return observables[0];
  }

  return Object(_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__["mergeAll"])(concurrent)(Object(_fromArray__WEBPACK_IMPORTED_MODULE_3__["fromArray"])(observables, scheduler));
}

/***/ }),
/* 356 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return NEVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "never", function() { return never; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(284);
/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */


/**
 * An Observable that emits no items to the Observer and never completes.
 *
 * <img src="./img/never.png" width="100%">
 *
 * A simple Observable that emits neither values nor errors nor the completion
 * notification. It can be used for testing purposes or for composing with other
 * Observables. Please note that by never emitting a complete notification, this
 * Observable keeps the subscription from being disposed automatically.
 * Subscriptions need to be manually disposed.
 *
 * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>
 * function info() {
 *   console.log('Will not be called');
 * }
 * var result = NEVER.startWith(7);
 * result.subscribe(x => console.log(x), info, info);
 *
 * @see {@link create}
 * @see {@link EMPTY}
 * @see {@link of}
 * @see {@link throwError}
 */

var NEVER =
/*@__PURE__*/
new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](_util_noop__WEBPACK_IMPORTED_MODULE_1__["noop"]);
/**
 * @deprecated Deprecated in favor of using NEVER constant.
 */

function never() {
  return NEVER;
}

/***/ }),
/* 357 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(338);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(276);
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(302);
/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one
 * that was passed.
 *
 * <span class="informal">Execute series of Observables no matter what, even if it means swallowing errors.</span>
 *
 * <img src="./img/onErrorResumeNext.png" width="100%">
 *
 * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.
 * If the source it's subscribed to emits an error or completes, it will move to the next source
 * without error.
 *
 * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.
 *
 * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its
 * sources emits an error.
 *
 * Note that there is no way to handle any errors thrown by sources via the resuult of
 * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can
 * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.
 *
 * @example <caption>Subscribe to the next Observable after map fails</caption>
 * import { onErrorResumeNext, of } from 'rxjs/create';
 * import { map } from 'rxjs/operators';
 *
 * onErrorResumeNext(
 *  of(1, 2, 3, 0).pipe(
 *    map(x => {
 *      if (x === 0) throw Error();
 *      return 10 / x;
 *    })
 *  ),
 *  of(1, 2, 3),
 * )
 * .subscribe(
 *   val => console.log(val),
 *   err => console.log(err),          // Will never be called.
 *   () => console.log('done')
 * );
 *
 * // Logs:
 * // 10
 * // 5
 * // 3.3333333333333335
 * // 1
 * // 2
 * // 3
 * // "done"
 *
 * @see {@link concat}
 * @see {@link catch}
 *
 * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.
 * @return {Observable} An Observable that concatenates all sources, one after the other,
 * ignoring all errors, such that any error causes it to move on to the next source.
 */

function onErrorResumeNext() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  if (sources.length === 0) {
    return _empty__WEBPACK_IMPORTED_MODULE_3__["EMPTY"];
  }

  var first = sources[0],
      remainder = sources.slice(1);

  if (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(first)) {
    return onErrorResumeNext.apply(void 0, first);
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var subNext = function subNext() {
      return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber));
    };

    return Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(first).subscribe({
      next: function next(value) {
        subscriber.next(value);
      },
      error: subNext,
      complete: subNext
    });
  });
}

/***/ }),
/* 358 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


/**
 * Convert an object into an observable sequence of [key, value] pairs
 * using an optional IScheduler to enumerate the object.
 *
 * @example <caption>Converts a javascript object to an Observable</caption>
 * var obj = {
 *   foo: 42,
 *   bar: 56,
 *   baz: 78
 * };
 *
 * var source = Rx.Observable.pairs(obj);
 *
 * var subscription = source.subscribe(
 *   function (x) {
 *     console.log('Next: %s', x);
 *   },
 *   function (err) {
 *     console.log('Error: %s', err);
 *   },
 *   function () {
 *     console.log('Completed');
 *   });
 *
 * @param {Object} obj The object to inspect and turn into an
 * Observable sequence.
 * @param {Scheduler} [scheduler] An optional IScheduler to run the
 * enumeration of the input sequence on.
 * @returns {(Observable<[string, T]>)} An observable sequence of
 * [key, value] pairs from the object.
 */

function pairs(obj, scheduler) {
  if (!scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var keys = Object.keys(obj);

      for (var i = 0; i < keys.length && !subscriber.closed; i++) {
        var key = keys[i];

        if (obj.hasOwnProperty(key)) {
          subscriber.next([key, obj[key]]);
        }
      }

      subscriber.complete();
    });
  } else {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
      var keys = Object.keys(obj);
      var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
      subscription.add(scheduler.schedule(dispatch, 0, {
        keys: keys,
        index: 0,
        subscriber: subscriber,
        subscription: subscription,
        obj: obj
      }));
      return subscription;
    });
  }
}
/** @internal */

function dispatch(state) {
  var keys = state.keys,
      index = state.index,
      subscriber = state.subscriber,
      subscription = state.subscription,
      obj = state.obj;

  if (!subscriber.closed) {
    if (index < keys.length) {
      var key = keys[index];
      subscriber.next([key, obj[key]]);
      subscription.add(this.schedule({
        keys: keys,
        index: index + 1,
        subscriber: subscriber,
        subscription: subscription,
        obj: obj
      }));
    } else {
      subscriber.complete();
    }
  }
}

/***/ }),
/* 359 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceOperator", function() { return RaceOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceSubscriber", function() { return RaceSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(276);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(305);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function race() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  } // if the only argument is an array, it was most likely called with
  // `race([obs1, obs2, ...])`


  if (observables.length === 1) {
    if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(observables[0])) {
      observables = observables[0];
    } else {
      return observables[0];
    }
  }

  return Object(_fromArray__WEBPACK_IMPORTED_MODULE_2__["fromArray"])(observables, undefined).lift(new RaceOperator());
}

var RaceOperator =
/*@__PURE__*/
function () {
  function RaceOperator() {}

  RaceOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RaceSubscriber(subscriber));
  };

  return RaceOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var RaceSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RaceSubscriber, _super);

  function RaceSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.hasFirst = false;
    _this.observables = [];
    _this.subscriptions = [];
    return _this;
  }

  RaceSubscriber.prototype._next = function (observable) {
    this.observables.push(observable);
  };

  RaceSubscriber.prototype._complete = function () {
    var observables = this.observables;
    var len = observables.length;

    if (len === 0) {
      this.destination.complete();
    } else {
      for (var i = 0; i < len && !this.hasFirst; i++) {
        var observable = observables[i];
        var subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, observable, i);

        if (this.subscriptions) {
          this.subscriptions.push(subscription);
        }

        this.add(subscription);
      }

      this.observables = null;
    }
  };

  RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    if (!this.hasFirst) {
      this.hasFirst = true;

      for (var i = 0; i < this.subscriptions.length; i++) {
        if (i !== outerIndex) {
          var subscription = this.subscriptions[i];
          subscription.unsubscribe();
          this.remove(subscription);
        }
      }

      this.subscriptions = null;
    }

    this.destination.next(innerValue);
  };

  return RaceSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);



/***/ }),
/* 360 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

/**
 * Creates an Observable that emits a sequence of numbers within a specified
 * range.
 *
 * <span class="informal">Emits a sequence of numbers in a range.</span>
 *
 * <img src="./img/range.png" width="100%">
 *
 * `range` operator emits a range of sequential integers, in order, where you
 * select the `start` of the range and its `length`. By default, uses no
 * IScheduler and just delivers the notifications synchronously, but may use
 * an optional IScheduler to regulate those deliveries.
 *
 * @example <caption>Emits the numbers 1 to 10</caption>
 * var numbers = Rx.Observable.range(1, 10);
 * numbers.subscribe(x => console.log(x));
 *
 * @see {@link timer}
 * @see {@link interval}
 *
 * @param {number} [start=0] The value of the first integer in the sequence.
 * @param {number} [count=0] The number of sequential integers to generate.
 * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
 * the emissions of the notifications.
 * @return {Observable} An Observable of numbers that emits a finite range of
 * sequential integers.
 * @static true
 * @name range
 * @owner Observable
 */

function range(start, count, scheduler) {
  if (start === void 0) {
    start = 0;
  }

  if (count === void 0) {
    count = 0;
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var index = 0;

    if (scheduler) {
      return scheduler.schedule(dispatch, 0, {
        index: index,
        count: count,
        start: start,
        subscriber: subscriber
      });
    } else {
      do {
        if (index++ >= count) {
          subscriber.complete();
          break;
        }

        subscriber.next(start++);

        if (subscriber.closed) {
          break;
        }
      } while (true);
    }

    return undefined;
  });
}
/** @internal */

function dispatch(state) {
  var start = state.start,
      index = state.index,
      count = state.count,
      subscriber = state.subscriber;

  if (index >= count) {
    subscriber.complete();
    return;
  }

  subscriber.next(start);

  if (subscriber.closed) {
    return;
  }

  state.index = index + 1;
  state.start = start + 1;
  this.schedule(state);
}

/***/ }),
/* 361 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(354);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(304);
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */




/**
 * Creates an Observable that starts emitting after an `initialDelay` and
 * emits ever increasing numbers after each `period` of time thereafter.
 *
 * <span class="informal">Its like {@link interval}, but you can specify when
 * should the emissions start.</span>
 *
 * <img src="./img/timer.png" width="100%">
 *
 * `timer` returns an Observable that emits an infinite sequence of ascending
 * integers, with a constant interval of time, `period` of your choosing
 * between those emissions. The first emission happens after the specified
 * `initialDelay`. The initial delay may be a {@link Date}. By default, this
 * operator uses the `async` IScheduler to provide a notion of time, but you
 * may pass any IScheduler to it. If `period` is not specified, the output
 * Observable emits only one value, `0`. Otherwise, it emits an infinite
 * sequence.
 *
 * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>
 * var numbers = Rx.Observable.timer(3000, 1000);
 * numbers.subscribe(x => console.log(x));
 *
 * @example <caption>Emits one number after five seconds</caption>
 * var numbers = Rx.Observable.timer(5000);
 * numbers.subscribe(x => console.log(x));
 *
 * @see {@link interval}
 * @see {@link delay}
 *
 * @param {number|Date} [dueTime] The initial delay time to wait before
 * emitting the first value of `0`.
 * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the
 * subsequent numbers.
 * @param {SchedulerLike} [scheduler=async] The IScheduler to use for scheduling
 * the emission of values, and providing a notion of "time".
 * @return {Observable} An Observable that emits a `0` after the
 * `initialDelay` and ever increasing numbers after each `period` of time
 * thereafter.
 * @static true
 * @name timer
 * @owner Observable
 */

function timer(dueTime, periodOrScheduler, scheduler) {
  if (dueTime === void 0) {
    dueTime = 0;
  }

  var period = -1;

  if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(periodOrScheduler)) {
    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
  } else if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(periodOrScheduler)) {
    scheduler = periodOrScheduler;
  }

  if (!Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(scheduler)) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  }

  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var due = Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(dueTime) ? dueTime : +dueTime - scheduler.now();
    return scheduler.schedule(dispatch, due, {
      index: 0,
      period: period,
      subscriber: subscriber
    });
  });
}

function dispatch(state) {
  var index = state.index,
      period = state.period,
      subscriber = state.subscriber;
  subscriber.next(index);

  if (subscriber.closed) {
    return;
  } else if (period === -1) {
    return subscriber.complete();
  }

  state.index = index + 1;
  this.schedule(state, period);
}

/***/ }),
/* 362 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "using", function() { return using; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(338);
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(302);
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */

 // from from from! LAWL


/**
 * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.
 *
 * <span class="informal">Use it when you catch yourself cleaning up after an Observable.</span>
 *
 * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.
 * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with
 * that object and should return an Observable. That Observable can use resource object during its execution.
 * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor
 * resource object will be shared in any way between subscriptions.
 *
 * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed
 * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output
 * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,
 * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which
 * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone
 * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make
 * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.
 *
 * @see {@link defer}
 *
 * @param {function(): ISubscription} resourceFactory A function which creates any resource object
 * that implements `unsubscribe` method.
 * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which
 * creates an Observable, that can use injected resource object.
 * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but
 * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.
 */

function using(resourceFactory, observableFactory) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
    var resource;

    try {
      resource = resourceFactory();
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var result;

    try {
      result = observableFactory(resource);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var source = result ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(result) : _empty__WEBPACK_IMPORTED_MODULE_2__["EMPTY"];
    var subscription = source.subscribe(subscriber);
    return function () {
      subscription.unsubscribe();

      if (resource) {
        resource.unsubscribe();
      }
    };
  });
}

/***/ }),
/* 363 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipOperator", function() { return ZipOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipSubscriber", function() { return ZipSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(305);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(276);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(270);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(328);
/* harmony import */ var _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(333);
/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */







/* tslint:enable:max-line-length */

/**
 * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each
 * of its input Observables.
 *
 * If the latest parameter is a function, this function is used to compute the created value from the input values.
 * Otherwise, an array of the input values is returned.
 *
 * @example <caption>Combine age and name from different sources</caption>
 *
 * let age$ = Observable.of<number>(27, 25, 29);
 * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');
 * let isDev$ = Observable.of<boolean>(true, true, false);
 *
 * Observable
 *     .zip(age$,
 *          name$,
 *          isDev$,
 *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))
 *     .subscribe(x => console.log(x));
 *
 * // outputs
 * // { age: 27, name: 'Foo', isDev: true }
 * // { age: 25, name: 'Bar', isDev: true }
 * // { age: 29, name: 'Beer', isDev: false }
 *
 * @param observables
 * @return {Observable<R>}
 * @static true
 * @name zip
 * @owner Observable
 */

function zip() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var resultSelector = observables[observables.length - 1];

  if (typeof resultSelector === 'function') {
    observables.pop();
  }

  return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(observables, undefined).lift(new ZipOperator(resultSelector));
}

var ZipOperator =
/*@__PURE__*/
function () {
  function ZipOperator(resultSelector) {
    this.resultSelector = resultSelector;
  }

  ZipOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
  };

  return ZipOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var ZipSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipSubscriber, _super);

  function ZipSubscriber(destination, resultSelector, values) {
    if (values === void 0) {
      values = Object.create(null);
    }

    var _this = _super.call(this, destination) || this;

    _this.iterators = [];
    _this.active = 0;
    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : null;
    _this.values = values;
    return _this;
  }

  ZipSubscriber.prototype._next = function (value) {
    var iterators = this.iterators;

    if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
      iterators.push(new StaticArrayIterator(value));
    } else if (typeof value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]] === 'function') {
      iterators.push(new StaticIterator(value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]]()));
    } else {
      iterators.push(new ZipBufferIterator(this.destination, this, value));
    }
  };

  ZipSubscriber.prototype._complete = function () {
    var iterators = this.iterators;
    var len = iterators.length;

    if (len === 0) {
      this.destination.complete();
      return;
    }

    this.active = len;

    for (var i = 0; i < len; i++) {
      var iterator = iterators[i];

      if (iterator.stillUnsubscribed) {
        this.add(iterator.subscribe(iterator, i));
      } else {
        this.active--; // not an observable
      }
    }
  };

  ZipSubscriber.prototype.notifyInactive = function () {
    this.active--;

    if (this.active === 0) {
      this.destination.complete();
    }
  };

  ZipSubscriber.prototype.checkIterators = function () {
    var iterators = this.iterators;
    var len = iterators.length;
    var destination = this.destination; // abort if not all of them have values

    for (var i = 0; i < len; i++) {
      var iterator = iterators[i];

      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
        return;
      }
    }

    var shouldComplete = false;
    var args = [];

    for (var i = 0; i < len; i++) {
      var iterator = iterators[i];
      var result = iterator.next(); // check to see if it's completed now that you've gotten
      // the next value.

      if (iterator.hasCompleted()) {
        shouldComplete = true;
      }

      if (result.done) {
        destination.complete();
        return;
      }

      args.push(result.value);
    }

    if (this.resultSelector) {
      this._tryresultSelector(args);
    } else {
      destination.next(args);
    }

    if (shouldComplete) {
      destination.complete();
    }
  };

  ZipSubscriber.prototype._tryresultSelector = function (args) {
    var result;

    try {
      result = this.resultSelector.apply(this, args);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return ZipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]);



var StaticIterator =
/*@__PURE__*/
function () {
  function StaticIterator(iterator) {
    this.iterator = iterator;
    this.nextResult = iterator.next();
  }

  StaticIterator.prototype.hasValue = function () {
    return true;
  };

  StaticIterator.prototype.next = function () {
    var result = this.nextResult;
    this.nextResult = this.iterator.next();
    return result;
  };

  StaticIterator.prototype.hasCompleted = function () {
    var nextResult = this.nextResult;
    return nextResult && nextResult.done;
  };

  return StaticIterator;
}();

var StaticArrayIterator =
/*@__PURE__*/
function () {
  function StaticArrayIterator(array) {
    this.array = array;
    this.index = 0;
    this.length = 0;
    this.length = array.length;
  }

  StaticArrayIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]] = function () {
    return this;
  };

  StaticArrayIterator.prototype.next = function (value) {
    var i = this.index++;
    var array = this.array;
    return i < this.length ? {
      value: array[i],
      done: false
    } : {
      value: null,
      done: true
    };
  };

  StaticArrayIterator.prototype.hasValue = function () {
    return this.array.length > this.index;
  };

  StaticArrayIterator.prototype.hasCompleted = function () {
    return this.array.length === this.index;
  };

  return StaticArrayIterator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var ZipBufferIterator =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipBufferIterator, _super);

  function ZipBufferIterator(destination, parent, observable) {
    var _this = _super.call(this, destination) || this;

    _this.parent = parent;
    _this.observable = observable;
    _this.stillUnsubscribed = true;
    _this.buffer = [];
    _this.isComplete = false;
    return _this;
  }

  ZipBufferIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]] = function () {
    return this;
  }; // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next
  //    this is legit because `next()` will never be called by a subscription in this case.


  ZipBufferIterator.prototype.next = function () {
    var buffer = this.buffer;

    if (buffer.length === 0 && this.isComplete) {
      return {
        value: null,
        done: true
      };
    } else {
      return {
        value: buffer.shift(),
        done: false
      };
    }
  };

  ZipBufferIterator.prototype.hasValue = function () {
    return this.buffer.length > 0;
  };

  ZipBufferIterator.prototype.hasCompleted = function () {
    return this.buffer.length === 0 && this.isComplete;
  };

  ZipBufferIterator.prototype.notifyComplete = function () {
    if (this.buffer.length > 0) {
      this.isComplete = true;
      this.parent.notifyInactive();
    } else {
      this.destination.complete();
    }
  };

  ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.buffer.push(innerValue);
    this.parent.checkIterators();
  };

  ZipBufferIterator.prototype.subscribe = function (value, index) {
    return Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__["subscribeToResult"])(this, this.observable, this, index);
  };

  return ZipBufferIterator;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__["OuterSubscriber"]);

/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "core", function() { return core; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompilerConfig", function() { return CompilerConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "preserveWhitespacesDefault", function() { return preserveWhitespacesDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLoweredSymbol", function() { return isLoweredSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLoweredSymbol", function() { return createLoweredSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Identifiers", function() { return Identifiers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JitCompiler", function() { return JitCompiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstantPool", function() { return ConstantPool; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectiveResolver", function() { return DirectiveResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PipeResolver", function() { return PipeResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleResolver", function() { return NgModuleResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_INTERPOLATION_CONFIG", function() { return DEFAULT_INTERPOLATION_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InterpolationConfig", function() { return InterpolationConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModuleCompiler", function() { return NgModuleCompiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayType", function() { return ArrayType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssertNotNull", function() { return AssertNotNull; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinaryOperator", function() { return BinaryOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinaryOperatorExpr", function() { return BinaryOperatorExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BuiltinMethod", function() { return BuiltinMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BuiltinType", function() { return BuiltinType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BuiltinTypeName", function() { return BuiltinTypeName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BuiltinVar", function() { return BuiltinVar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CastExpr", function() { return CastExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassField", function() { return ClassField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassMethod", function() { return ClassMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassStmt", function() { return ClassStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommaExpr", function() { return CommaExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentStmt", function() { return CommentStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConditionalExpr", function() { return ConditionalExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeclareFunctionStmt", function() { return DeclareFunctionStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeclareVarStmt", function() { return DeclareVarStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Expression", function() { return Expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpressionStatement", function() { return ExpressionStatement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpressionType", function() { return ExpressionType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalExpr", function() { return ExternalExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalReference", function() { return ExternalReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunctionExpr", function() { return FunctionExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IfStmt", function() { return IfStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstantiateExpr", function() { return InstantiateExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvokeFunctionExpr", function() { return InvokeFunctionExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvokeMethodExpr", function() { return InvokeMethodExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JSDocCommentStmt", function() { return JSDocCommentStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiteralArrayExpr", function() { return LiteralArrayExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiteralExpr", function() { return LiteralExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiteralMapExpr", function() { return LiteralMapExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapType", function() { return MapType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotExpr", function() { return NotExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadKeyExpr", function() { return ReadKeyExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadPropExpr", function() { return ReadPropExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadVarExpr", function() { return ReadVarExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReturnStatement", function() { return ReturnStatement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThrowStmt", function() { return ThrowStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TryCatchStmt", function() { return TryCatchStmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WrappedNodeExpr", function() { return WrappedNodeExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WriteKeyExpr", function() { return WriteKeyExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WritePropExpr", function() { return WritePropExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WriteVarExpr", function() { return WriteVarExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StmtModifier", function() { return StmtModifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Statement", function() { return Statement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeofExpr", function() { return TypeofExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "collectExternalReferences", function() { return collectExternalReferences; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmitterVisitorContext", function() { return EmitterVisitorContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewCompiler", function() { return ViewCompiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getParseErrors", function() { return getParseErrors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSyntaxError", function() { return isSyntaxError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "syntaxError", function() { return syntaxError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Version", function() { return Version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstBoundAttribute", function() { return BoundAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstBoundEvent", function() { return BoundEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstBoundText", function() { return BoundText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstContent", function() { return Content; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstElement", function() { return Element$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstReference", function() { return Reference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstTemplate", function() { return Template; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstText", function() { return Text$3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstTextAttribute", function() { return TextAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TmplAstVariable", function() { return Variable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "jitExpression", function() { return jitExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R3ResolvedDependencyType", function() { return R3ResolvedDependencyType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileInjector", function() { return compileInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileNgModule", function() { return compileNgModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compilePipeFromMetadata", function() { return compilePipeFromMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeBindingParser", function() { return makeBindingParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseTemplate", function() { return parseTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileBaseDefFromMetadata", function() { return compileBaseDefFromMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileComponentFromMetadata", function() { return compileComponentFromMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileDirectiveFromMetadata", function() { return compileDirectiveFromMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseHostBindings", function() { return parseHostBindings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextAst", function() { return TextAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundTextAst", function() { return BoundTextAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttrAst", function() { return AttrAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundElementPropertyAst", function() { return BoundElementPropertyAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundEventAst", function() { return BoundEventAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReferenceAst", function() { return ReferenceAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VariableAst", function() { return VariableAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementAst", function() { return ElementAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmbeddedTemplateAst", function() { return EmbeddedTemplateAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundDirectivePropertyAst", function() { return BoundDirectivePropertyAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectiveAst", function() { return DirectiveAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProviderAst", function() { return ProviderAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProviderAstType", function() { return ProviderAstType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgContentAst", function() { return NgContentAst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NullTemplateVisitor", function() { return NullTemplateVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecursiveTemplateAstVisitor", function() { return RecursiveTemplateAstVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateVisitAll", function() { return templateVisitAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sanitizeIdentifier", function() { return sanitizeIdentifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identifierName", function() { return identifierName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identifierModuleUrl", function() { return identifierModuleUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewClassName", function() { return viewClassName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rendererTypeName", function() { return rendererTypeName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hostViewClassName", function() { return hostViewClassName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "componentFactoryName", function() { return componentFactoryName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileSummaryKind", function() { return CompileSummaryKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenName", function() { return tokenName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenReference", function() { return tokenReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileStylesheetMetadata", function() { return CompileStylesheetMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileTemplateMetadata", function() { return CompileTemplateMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileDirectiveMetadata", function() { return CompileDirectiveMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompilePipeMetadata", function() { return CompilePipeMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileShallowModuleMetadata", function() { return CompileShallowModuleMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileNgModuleMetadata", function() { return CompileNgModuleMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransitiveCompileNgModuleMetadata", function() { return TransitiveCompileNgModuleMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProviderMeta", function() { return ProviderMeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateSourceUrl", function() { return templateSourceUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sharedStylesheetJitUrl", function() { return sharedStylesheetJitUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ngModuleJitUrl", function() { return ngModuleJitUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateJitUrl", function() { return templateJitUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAotUrlResolver", function() { return createAotUrlResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAotCompiler", function() { return createAotCompiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AotCompiler", function() { return AotCompiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "analyzeNgModules", function() { return analyzeNgModules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "analyzeAndValidateNgModules", function() { return analyzeAndValidateNgModules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "analyzeFile", function() { return analyzeFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "analyzeFileForInjectables", function() { return analyzeFileForInjectables; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAnalyzedFiles", function() { return mergeAnalyzedFiles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneratedFile", function() { return GeneratedFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toTypeScript", function() { return toTypeScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formattedError", function() { return formattedError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFormattedError", function() { return isFormattedError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaticReflector", function() { return StaticReflector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaticSymbol", function() { return StaticSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaticSymbolCache", function() { return StaticSymbolCache; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolvedStaticSymbol", function() { return ResolvedStaticSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaticSymbolResolver", function() { return StaticSymbolResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unescapeIdentifier", function() { return unescapeIdentifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unwrapResolvedMetadata", function() { return unwrapResolvedMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AotSummaryResolver", function() { return AotSummaryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AstPath", function() { return AstPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SummaryResolver", function() { return SummaryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JitSummaryResolver", function() { return JitSummaryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileReflector", function() { return CompileReflector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUrlResolverWithoutPackagePrefix", function() { return createUrlResolverWithoutPackagePrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOfflineCompileUrlResolver", function() { return createOfflineCompileUrlResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlResolver", function() { return UrlResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUrlScheme", function() { return getUrlScheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResourceLoader", function() { return ResourceLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementSchemaRegistry", function() { return ElementSchemaRegistry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Extractor", function() { return Extractor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I18NHtmlParser", function() { return I18NHtmlParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageBundle", function() { return MessageBundle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Serializer", function() { return Serializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Xliff", function() { return Xliff; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Xliff2", function() { return Xliff2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Xmb", function() { return Xmb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Xtb", function() { return Xtb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectiveNormalizer", function() { return DirectiveNormalizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParserError", function() { return ParserError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseSpan", function() { return ParseSpan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AST", function() { return AST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Quote", function() { return Quote; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyExpr", function() { return EmptyExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImplicitReceiver", function() { return ImplicitReceiver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chain", function() { return Chain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Conditional", function() { return Conditional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyRead", function() { return PropertyRead; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyWrite", function() { return PropertyWrite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafePropertyRead", function() { return SafePropertyRead; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyedRead", function() { return KeyedRead; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyedWrite", function() { return KeyedWrite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BindingPipe", function() { return BindingPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiteralPrimitive", function() { return LiteralPrimitive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiteralArray", function() { return LiteralArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiteralMap", function() { return LiteralMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Interpolation", function() { return Interpolation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Binary", function() { return Binary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrefixNot", function() { return PrefixNot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NonNullAssert", function() { return NonNullAssert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MethodCall", function() { return MethodCall; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafeMethodCall", function() { return SafeMethodCall; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunctionCall", function() { return FunctionCall; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ASTWithSource", function() { return ASTWithSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateBinding", function() { return TemplateBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NullAstVisitor", function() { return NullAstVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecursiveAstVisitor", function() { return RecursiveAstVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AstTransformer", function() { return AstTransformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AstMemoryEfficientTransformer", function() { return AstMemoryEfficientTransformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visitAstChildren", function() { return visitAstChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParsedProperty", function() { return ParsedProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParsedPropertyType", function() { return ParsedPropertyType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParsedEvent", function() { return ParsedEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParsedVariable", function() { return ParsedVariable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundElementProperty", function() { return BoundElementProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenType", function() { return TokenType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Lexer", function() { return Lexer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Token", function() { return Token; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EOF", function() { return EOF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIdentifier", function() { return isIdentifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isQuote", function() { return isQuote; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SplitInterpolation", function() { return SplitInterpolation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateBindingParseResult", function() { return TemplateBindingParseResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Parser", function() { return Parser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ParseAST", function() { return _ParseAST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ERROR_COMPONENT_TYPE", function() { return ERROR_COMPONENT_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompileMetadataResolver", function() { return CompileMetadataResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Text", function() { return Text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Expansion", function() { return Expansion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpansionCase", function() { return ExpansionCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Attribute", function() { return Attribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Element", function() { return Element; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Comment", function() { return Comment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visitAll", function() { return visitAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecursiveVisitor", function() { return RecursiveVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findNode", function() { return findNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlParser", function() { return HtmlParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseTreeResult", function() { return ParseTreeResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeError", function() { return TreeError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlTagDefinition", function() { return HtmlTagDefinition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHtmlTagDefinition", function() { return getHtmlTagDefinition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TagContentType", function() { return TagContentType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitNsName", function() { return splitNsName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNgContainer", function() { return isNgContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNgContent", function() { return isNgContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNgTemplate", function() { return isNgTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNsPrefix", function() { return getNsPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeNsAndName", function() { return mergeNsAndName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NAMED_ENTITIES", function() { return NAMED_ENTITIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NGSP_UNICODE", function() { return NGSP_UNICODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debugOutputAstAsTypeScript", function() { return debugOutputAstAsTypeScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeScriptEmitter", function() { return TypeScriptEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseLocation", function() { return ParseLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseSourceFile", function() { return ParseSourceFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseSourceSpan", function() { return ParseSourceSpan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseErrorLevel", function() { return ParseErrorLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseError", function() { return ParseError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeSourceSpan", function() { return typeSourceSpan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomElementSchemaRegistry", function() { return DomElementSchemaRegistry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CssSelector", function() { return CssSelector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectorMatcher", function() { return SelectorMatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectorListContext", function() { return SelectorListContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectorContext", function() { return SelectorContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HOST_ATTR", function() { return HOST_ATTR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTENT_ATTR", function() { return CONTENT_ATTR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StylesCompileDependency", function() { return StylesCompileDependency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompiledStylesheet", function() { return CompiledStylesheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleCompiler", function() { return StyleCompiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateParseError", function() { return TemplateParseError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateParseResult", function() { return TemplateParseResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateParser", function() { return TemplateParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitClasses", function() { return splitClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElementCssSelector", function() { return createElementCssSelector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeSummaryDuplicates", function() { return removeSummaryDuplicates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileInjectable", function() { return compileInjectable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R3TargetBinder", function() { return R3TargetBinder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R3BoundTarget", function() { return R3BoundTarget; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/**
 * @license Angular v7.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TagContentType;(function(TagContentType){TagContentType[TagContentType["RAW_TEXT"]=0]="RAW_TEXT";TagContentType[TagContentType["ESCAPABLE_RAW_TEXT"]=1]="ESCAPABLE_RAW_TEXT";TagContentType[TagContentType["PARSABLE_DATA"]=2]="PARSABLE_DATA";})(TagContentType||(TagContentType={}));function splitNsName(elementName){if(elementName[0]!=':'){return[null,elementName];}var colonIndex=elementName.indexOf(':',1);if(colonIndex==-1){throw new Error("Unsupported format \""+elementName+"\" expecting \":namespace:name\"");}return[elementName.slice(1,colonIndex),elementName.slice(colonIndex+1)];}// `<ng-container>` tags work the same regardless the namespace
function isNgContainer(tagName){return splitNsName(tagName)[1]==='ng-container';}// `<ng-content>` tags work the same regardless the namespace
function isNgContent(tagName){return splitNsName(tagName)[1]==='ng-content';}// `<ng-template>` tags work the same regardless the namespace
function isNgTemplate(tagName){return splitNsName(tagName)[1]==='ng-template';}function getNsPrefix(fullName){return fullName===null?null:splitNsName(fullName)[0];}function mergeNsAndName(prefix,localName){return prefix?":"+prefix+":"+localName:localName;}// see http://www.w3.org/TR/html51/syntax.html#named-character-references
// see https://html.spec.whatwg.org/multipage/entities.json
// This list is not exhaustive to keep the compiler footprint low.
// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not
// exist.
var NAMED_ENTITIES={'Aacute':"\xC1",'aacute':"\xE1",'Acirc':"\xC2",'acirc':"\xE2",'acute':"\xB4",'AElig':"\xC6",'aelig':"\xE6",'Agrave':"\xC0",'agrave':"\xE0",'alefsym':"\u2135",'Alpha':"\u0391",'alpha':"\u03B1",'amp':'&','and':"\u2227",'ang':"\u2220",'apos':"'",'Aring':"\xC5",'aring':"\xE5",'asymp':"\u2248",'Atilde':"\xC3",'atilde':"\xE3",'Auml':"\xC4",'auml':"\xE4",'bdquo':"\u201E",'Beta':"\u0392",'beta':"\u03B2",'brvbar':"\xA6",'bull':"\u2022",'cap':"\u2229",'Ccedil':"\xC7",'ccedil':"\xE7",'cedil':"\xB8",'cent':"\xA2",'Chi':"\u03A7",'chi':"\u03C7",'circ':"\u02C6",'clubs':"\u2663",'cong':"\u2245",'copy':"\xA9",'crarr':"\u21B5",'cup':"\u222A",'curren':"\xA4",'dagger':"\u2020",'Dagger':"\u2021",'darr':"\u2193",'dArr':"\u21D3",'deg':"\xB0",'Delta':"\u0394",'delta':"\u03B4",'diams':"\u2666",'divide':"\xF7",'Eacute':"\xC9",'eacute':"\xE9",'Ecirc':"\xCA",'ecirc':"\xEA",'Egrave':"\xC8",'egrave':"\xE8",'empty':"\u2205",'emsp':"\u2003",'ensp':"\u2002",'Epsilon':"\u0395",'epsilon':"\u03B5",'equiv':"\u2261",'Eta':"\u0397",'eta':"\u03B7",'ETH':"\xD0",'eth':"\xF0",'Euml':"\xCB",'euml':"\xEB",'euro':"\u20AC",'exist':"\u2203",'fnof':"\u0192",'forall':"\u2200",'frac12':"\xBD",'frac14':"\xBC",'frac34':"\xBE",'frasl':"\u2044",'Gamma':"\u0393",'gamma':"\u03B3",'ge':"\u2265",'gt':'>','harr':"\u2194",'hArr':"\u21D4",'hearts':"\u2665",'hellip':"\u2026",'Iacute':"\xCD",'iacute':"\xED",'Icirc':"\xCE",'icirc':"\xEE",'iexcl':"\xA1",'Igrave':"\xCC",'igrave':"\xEC",'image':"\u2111",'infin':"\u221E",'int':"\u222B",'Iota':"\u0399",'iota':"\u03B9",'iquest':"\xBF",'isin':"\u2208",'Iuml':"\xCF",'iuml':"\xEF",'Kappa':"\u039A",'kappa':"\u03BA",'Lambda':"\u039B",'lambda':"\u03BB",'lang':"\u27E8",'laquo':"\xAB",'larr':"\u2190",'lArr':"\u21D0",'lceil':"\u2308",'ldquo':"\u201C",'le':"\u2264",'lfloor':"\u230A",'lowast':"\u2217",'loz':"\u25CA",'lrm':"\u200E",'lsaquo':"\u2039",'lsquo':"\u2018",'lt':'<','macr':"\xAF",'mdash':"\u2014",'micro':"\xB5",'middot':"\xB7",'minus':"\u2212",'Mu':"\u039C",'mu':"\u03BC",'nabla':"\u2207",'nbsp':"\xA0",'ndash':"\u2013",'ne':"\u2260",'ni':"\u220B",'not':"\xAC",'notin':"\u2209",'nsub':"\u2284",'Ntilde':"\xD1",'ntilde':"\xF1",'Nu':"\u039D",'nu':"\u03BD",'Oacute':"\xD3",'oacute':"\xF3",'Ocirc':"\xD4",'ocirc':"\xF4",'OElig':"\u0152",'oelig':"\u0153",'Ograve':"\xD2",'ograve':"\xF2",'oline':"\u203E",'Omega':"\u03A9",'omega':"\u03C9",'Omicron':"\u039F",'omicron':"\u03BF",'oplus':"\u2295",'or':"\u2228",'ordf':"\xAA",'ordm':"\xBA",'Oslash':"\xD8",'oslash':"\xF8",'Otilde':"\xD5",'otilde':"\xF5",'otimes':"\u2297",'Ouml':"\xD6",'ouml':"\xF6",'para':"\xB6",'permil':"\u2030",'perp':"\u22A5",'Phi':"\u03A6",'phi':"\u03C6",'Pi':"\u03A0",'pi':"\u03C0",'piv':"\u03D6",'plusmn':"\xB1",'pound':"\xA3",'prime':"\u2032",'Prime':"\u2033",'prod':"\u220F",'prop':"\u221D",'Psi':"\u03A8",'psi':"\u03C8",'quot':"\"",'radic':"\u221A",'rang':"\u27E9",'raquo':"\xBB",'rarr':"\u2192",'rArr':"\u21D2",'rceil':"\u2309",'rdquo':"\u201D",'real':"\u211C",'reg':"\xAE",'rfloor':"\u230B",'Rho':"\u03A1",'rho':"\u03C1",'rlm':"\u200F",'rsaquo':"\u203A",'rsquo':"\u2019",'sbquo':"\u201A",'Scaron':"\u0160",'scaron':"\u0161",'sdot':"\u22C5",'sect':"\xA7",'shy':"\xAD",'Sigma':"\u03A3",'sigma':"\u03C3",'sigmaf':"\u03C2",'sim':"\u223C",'spades':"\u2660",'sub':"\u2282",'sube':"\u2286",'sum':"\u2211",'sup':"\u2283",'sup1':"\xB9",'sup2':"\xB2",'sup3':"\xB3",'supe':"\u2287",'szlig':"\xDF",'Tau':"\u03A4",'tau':"\u03C4",'there4':"\u2234",'Theta':"\u0398",'theta':"\u03B8",'thetasym':"\u03D1",'thinsp':"\u2009",'THORN':"\xDE",'thorn':"\xFE",'tilde':"\u02DC",'times':"\xD7",'trade':"\u2122",'Uacute':"\xDA",'uacute':"\xFA",'uarr':"\u2191",'uArr':"\u21D1",'Ucirc':"\xDB",'ucirc':"\xFB",'Ugrave':"\xD9",'ugrave':"\xF9",'uml':"\xA8",'upsih':"\u03D2",'Upsilon':"\u03A5",'upsilon':"\u03C5",'Uuml':"\xDC",'uuml':"\xFC",'weierp':"\u2118",'Xi':"\u039E",'xi':"\u03BE",'Yacute':"\xDD",'yacute':"\xFD",'yen':"\xA5",'yuml':"\xFF",'Yuml':"\u0178",'Zeta':"\u0396",'zeta':"\u03B6",'zwj':"\u200D",'zwnj':"\u200C"};// The &ngsp; pseudo-entity is denoting a space. see:
// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart
var NGSP_UNICODE="\uE500";NAMED_ENTITIES['ngsp']=NGSP_UNICODE;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var HtmlTagDefinition=/** @class */function(){function HtmlTagDefinition(_a){var _b=_a===void 0?{}:_a,closedByChildren=_b.closedByChildren,requiredParents=_b.requiredParents,implicitNamespacePrefix=_b.implicitNamespacePrefix,_c=_b.contentType,contentType=_c===void 0?TagContentType.PARSABLE_DATA:_c,_d=_b.closedByParent,closedByParent=_d===void 0?false:_d,_e=_b.isVoid,isVoid=_e===void 0?false:_e,_f=_b.ignoreFirstLf,ignoreFirstLf=_f===void 0?false:_f;var _this=this;this.closedByChildren={};this.closedByParent=false;this.canSelfClose=false;if(closedByChildren&&closedByChildren.length>0){closedByChildren.forEach(function(tagName){return _this.closedByChildren[tagName]=true;});}this.isVoid=isVoid;this.closedByParent=closedByParent||isVoid;if(requiredParents&&requiredParents.length>0){this.requiredParents={};// The first parent is the list is automatically when none of the listed parents are present
this.parentToAdd=requiredParents[0];requiredParents.forEach(function(tagName){return _this.requiredParents[tagName]=true;});}this.implicitNamespacePrefix=implicitNamespacePrefix||null;this.contentType=contentType;this.ignoreFirstLf=ignoreFirstLf;}HtmlTagDefinition.prototype.requireExtraParent=function(currentParent){if(!this.requiredParents){return false;}if(!currentParent){return true;}var lcParent=currentParent.toLowerCase();var isParentTemplate=lcParent==='template'||currentParent==='ng-template';return!isParentTemplate&&this.requiredParents[lcParent]!=true;};HtmlTagDefinition.prototype.isClosedByChild=function(name){return this.isVoid||name.toLowerCase()in this.closedByChildren;};return HtmlTagDefinition;}();var _DEFAULT_TAG_DEFINITION;// see http://www.w3.org/TR/html51/syntax.html#optional-tags
// This implementation does not fully conform to the HTML5 spec.
var TAG_DEFINITIONS;function getHtmlTagDefinition(tagName){if(!TAG_DEFINITIONS){_DEFAULT_TAG_DEFINITION=new HtmlTagDefinition();TAG_DEFINITIONS={'base':new HtmlTagDefinition({isVoid:true}),'meta':new HtmlTagDefinition({isVoid:true}),'area':new HtmlTagDefinition({isVoid:true}),'embed':new HtmlTagDefinition({isVoid:true}),'link':new HtmlTagDefinition({isVoid:true}),'img':new HtmlTagDefinition({isVoid:true}),'input':new HtmlTagDefinition({isVoid:true}),'param':new HtmlTagDefinition({isVoid:true}),'hr':new HtmlTagDefinition({isVoid:true}),'br':new HtmlTagDefinition({isVoid:true}),'source':new HtmlTagDefinition({isVoid:true}),'track':new HtmlTagDefinition({isVoid:true}),'wbr':new HtmlTagDefinition({isVoid:true}),'p':new HtmlTagDefinition({closedByChildren:['address','article','aside','blockquote','div','dl','fieldset','footer','form','h1','h2','h3','h4','h5','h6','header','hgroup','hr','main','nav','ol','p','pre','section','table','ul'],closedByParent:true}),'thead':new HtmlTagDefinition({closedByChildren:['tbody','tfoot']}),'tbody':new HtmlTagDefinition({closedByChildren:['tbody','tfoot'],closedByParent:true}),'tfoot':new HtmlTagDefinition({closedByChildren:['tbody'],closedByParent:true}),'tr':new HtmlTagDefinition({closedByChildren:['tr'],requiredParents:['tbody','tfoot','thead'],closedByParent:true}),'td':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'th':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'col':new HtmlTagDefinition({requiredParents:['colgroup'],isVoid:true}),'svg':new HtmlTagDefinition({implicitNamespacePrefix:'svg'}),'math':new HtmlTagDefinition({implicitNamespacePrefix:'math'}),'li':new HtmlTagDefinition({closedByChildren:['li'],closedByParent:true}),'dt':new HtmlTagDefinition({closedByChildren:['dt','dd']}),'dd':new HtmlTagDefinition({closedByChildren:['dt','dd'],closedByParent:true}),'rb':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rt':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rtc':new HtmlTagDefinition({closedByChildren:['rb','rtc','rp'],closedByParent:true}),'rp':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'optgroup':new HtmlTagDefinition({closedByChildren:['optgroup'],closedByParent:true}),'option':new HtmlTagDefinition({closedByChildren:['option','optgroup'],closedByParent:true}),'pre':new HtmlTagDefinition({ignoreFirstLf:true}),'listing':new HtmlTagDefinition({ignoreFirstLf:true}),'style':new HtmlTagDefinition({contentType:TagContentType.RAW_TEXT}),'script':new HtmlTagDefinition({contentType:TagContentType.RAW_TEXT}),'title':new HtmlTagDefinition({contentType:TagContentType.ESCAPABLE_RAW_TEXT}),'textarea':new HtmlTagDefinition({contentType:TagContentType.ESCAPABLE_RAW_TEXT,ignoreFirstLf:true})};}return TAG_DEFINITIONS[tagName.toLowerCase()]||_DEFAULT_TAG_DEFINITION;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _SELECTOR_REGEXP=new RegExp('(\\:not\\()|'+//":not("
'([-\\w]+)|'+// "tag"
'(?:\\.([-\\w]+))|'+// ".class"
// "-" should appear first in the regexp below as FF31 parses "[.-\w]" as a range
'(?:\\[([-.\\w*]+)(?:=([\"\']?)([^\\]\"\']*)\\5)?\\])|'+// "[name]", "[name=value]",
// "[name="value"]",
// "[name='value']"
'(\\))|'+// ")"
'(\\s*,\\s*)',// ","
'g');/**
 * A css selector contains an element name,
 * css classes and attribute/value pairs with the purpose
 * of selecting subsets out of them.
 */var CssSelector=/** @class */function(){function CssSelector(){this.element=null;this.classNames=[];/**
         * The selectors are encoded in pairs where:
         * - even locations are attribute names
         * - odd locations are attribute values.
         *
         * Example:
         * Selector: `[key1=value1][key2]` would parse to:
         * ```
         * ['key1', 'value1', 'key2', '']
         * ```
         */this.attrs=[];this.notSelectors=[];}CssSelector.parse=function(selector){var results=[];var _addResult=function _addResult(res,cssSel){if(cssSel.notSelectors.length>0&&!cssSel.element&&cssSel.classNames.length==0&&cssSel.attrs.length==0){cssSel.element='*';}res.push(cssSel);};var cssSelector=new CssSelector();var match;var current=cssSelector;var inNot=false;_SELECTOR_REGEXP.lastIndex=0;while(match=_SELECTOR_REGEXP.exec(selector)){if(match[1]){if(inNot){throw new Error('Nesting :not is not allowed in a selector');}inNot=true;current=new CssSelector();cssSelector.notSelectors.push(current);}if(match[2]){current.setElement(match[2]);}if(match[3]){current.addClassName(match[3]);}if(match[4]){current.addAttribute(match[4],match[6]);}if(match[7]){inNot=false;current=cssSelector;}if(match[8]){if(inNot){throw new Error('Multiple selectors in :not are not supported');}_addResult(results,cssSelector);cssSelector=current=new CssSelector();}}_addResult(results,cssSelector);return results;};CssSelector.prototype.isElementSelector=function(){return this.hasElementSelector()&&this.classNames.length==0&&this.attrs.length==0&&this.notSelectors.length===0;};CssSelector.prototype.hasElementSelector=function(){return!!this.element;};CssSelector.prototype.setElement=function(element){if(element===void 0){element=null;}this.element=element;};/** Gets a template string for an element that matches the selector. */CssSelector.prototype.getMatchingElementTemplate=function(){var tagName=this.element||'div';var classAttr=this.classNames.length>0?" class=\""+this.classNames.join(' ')+"\"":'';var attrs='';for(var i=0;i<this.attrs.length;i+=2){var attrName=this.attrs[i];var attrValue=this.attrs[i+1]!==''?"=\""+this.attrs[i+1]+"\"":'';attrs+=" "+attrName+attrValue;}return getHtmlTagDefinition(tagName).isVoid?"<"+tagName+classAttr+attrs+"/>":"<"+tagName+classAttr+attrs+"></"+tagName+">";};CssSelector.prototype.getAttrs=function(){var result=[];if(this.classNames.length>0){result.push('class',this.classNames.join(' '));}return result.concat(this.attrs);};CssSelector.prototype.addAttribute=function(name,value){if(value===void 0){value='';}this.attrs.push(name,value&&value.toLowerCase()||'');};CssSelector.prototype.addClassName=function(name){this.classNames.push(name.toLowerCase());};CssSelector.prototype.toString=function(){var res=this.element||'';if(this.classNames){this.classNames.forEach(function(klass){return res+="."+klass;});}if(this.attrs){for(var i=0;i<this.attrs.length;i+=2){var name_1=this.attrs[i];var value=this.attrs[i+1];res+="["+name_1+(value?'='+value:'')+"]";}}this.notSelectors.forEach(function(notSelector){return res+=":not("+notSelector+")";});return res;};return CssSelector;}();/**
 * Reads a list of CssSelectors and allows to calculate which ones
 * are contained in a given CssSelector.
 */var SelectorMatcher=/** @class */function(){function SelectorMatcher(){this._elementMap=new Map();this._elementPartialMap=new Map();this._classMap=new Map();this._classPartialMap=new Map();this._attrValueMap=new Map();this._attrValuePartialMap=new Map();this._listContexts=[];}SelectorMatcher.createNotMatcher=function(notSelectors){var notMatcher=new SelectorMatcher();notMatcher.addSelectables(notSelectors,null);return notMatcher;};SelectorMatcher.prototype.addSelectables=function(cssSelectors,callbackCtxt){var listContext=null;if(cssSelectors.length>1){listContext=new SelectorListContext(cssSelectors);this._listContexts.push(listContext);}for(var i=0;i<cssSelectors.length;i++){this._addSelectable(cssSelectors[i],callbackCtxt,listContext);}};/**
     * Add an object that can be found later on by calling `match`.
     * @param cssSelector A css selector
     * @param callbackCtxt An opaque object that will be given to the callback of the `match` function
     */SelectorMatcher.prototype._addSelectable=function(cssSelector,callbackCtxt,listContext){var matcher=this;var element=cssSelector.element;var classNames=cssSelector.classNames;var attrs=cssSelector.attrs;var selectable=new SelectorContext(cssSelector,callbackCtxt,listContext);if(element){var isTerminal=attrs.length===0&&classNames.length===0;if(isTerminal){this._addTerminal(matcher._elementMap,element,selectable);}else{matcher=this._addPartial(matcher._elementPartialMap,element);}}if(classNames){for(var i=0;i<classNames.length;i++){var isTerminal=attrs.length===0&&i===classNames.length-1;var className=classNames[i];if(isTerminal){this._addTerminal(matcher._classMap,className,selectable);}else{matcher=this._addPartial(matcher._classPartialMap,className);}}}if(attrs){for(var i=0;i<attrs.length;i+=2){var isTerminal=i===attrs.length-2;var name_2=attrs[i];var value=attrs[i+1];if(isTerminal){var terminalMap=matcher._attrValueMap;var terminalValuesMap=terminalMap.get(name_2);if(!terminalValuesMap){terminalValuesMap=new Map();terminalMap.set(name_2,terminalValuesMap);}this._addTerminal(terminalValuesMap,value,selectable);}else{var partialMap=matcher._attrValuePartialMap;var partialValuesMap=partialMap.get(name_2);if(!partialValuesMap){partialValuesMap=new Map();partialMap.set(name_2,partialValuesMap);}matcher=this._addPartial(partialValuesMap,value);}}}};SelectorMatcher.prototype._addTerminal=function(map,name,selectable){var terminalList=map.get(name);if(!terminalList){terminalList=[];map.set(name,terminalList);}terminalList.push(selectable);};SelectorMatcher.prototype._addPartial=function(map,name){var matcher=map.get(name);if(!matcher){matcher=new SelectorMatcher();map.set(name,matcher);}return matcher;};/**
     * Find the objects that have been added via `addSelectable`
     * whose css selector is contained in the given css selector.
     * @param cssSelector A css selector
     * @param matchedCallback This callback will be called with the object handed into `addSelectable`
     * @return boolean true if a match was found
    */SelectorMatcher.prototype.match=function(cssSelector,matchedCallback){var result=false;var element=cssSelector.element;var classNames=cssSelector.classNames;var attrs=cssSelector.attrs;for(var i=0;i<this._listContexts.length;i++){this._listContexts[i].alreadyMatched=false;}result=this._matchTerminal(this._elementMap,element,cssSelector,matchedCallback)||result;result=this._matchPartial(this._elementPartialMap,element,cssSelector,matchedCallback)||result;if(classNames){for(var i=0;i<classNames.length;i++){var className=classNames[i];result=this._matchTerminal(this._classMap,className,cssSelector,matchedCallback)||result;result=this._matchPartial(this._classPartialMap,className,cssSelector,matchedCallback)||result;}}if(attrs){for(var i=0;i<attrs.length;i+=2){var name_3=attrs[i];var value=attrs[i+1];var terminalValuesMap=this._attrValueMap.get(name_3);if(value){result=this._matchTerminal(terminalValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchTerminal(terminalValuesMap,value,cssSelector,matchedCallback)||result;var partialValuesMap=this._attrValuePartialMap.get(name_3);if(value){result=this._matchPartial(partialValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchPartial(partialValuesMap,value,cssSelector,matchedCallback)||result;}}return result;};/** @internal */SelectorMatcher.prototype._matchTerminal=function(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var selectables=map.get(name)||[];var starSelectables=map.get('*');if(starSelectables){selectables=selectables.concat(starSelectables);}if(selectables.length===0){return false;}var selectable;var result=false;for(var i=0;i<selectables.length;i++){selectable=selectables[i];result=selectable.finalize(cssSelector,matchedCallback)||result;}return result;};/** @internal */SelectorMatcher.prototype._matchPartial=function(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var nestedSelector=map.get(name);if(!nestedSelector){return false;}// TODO(perf): get rid of recursion and measure again
// TODO(perf): don't pass the whole selector into the recursion,
// but only the not processed parts
return nestedSelector.match(cssSelector,matchedCallback);};return SelectorMatcher;}();var SelectorListContext=/** @class */function(){function SelectorListContext(selectors){this.selectors=selectors;this.alreadyMatched=false;}return SelectorListContext;}();// Store context to pass back selector and context when a selector is matched
var SelectorContext=/** @class */function(){function SelectorContext(selector,cbContext,listContext){this.selector=selector;this.cbContext=cbContext;this.listContext=listContext;this.notSelectors=selector.notSelectors;}SelectorContext.prototype.finalize=function(cssSelector,callback){var result=true;if(this.notSelectors.length>0&&(!this.listContext||!this.listContext.alreadyMatched)){var notMatcher=SelectorMatcher.createNotMatcher(this.notSelectors);result=!notMatcher.match(cssSelector,null);}if(result&&callback&&(!this.listContext||!this.listContext.alreadyMatched)){if(this.listContext){this.listContext.alreadyMatched=true;}callback(this.selector,this.cbContext);}return result;};return SelectorContext;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var createInject=makeMetadataFactory('Inject',function(token){return{token:token};});var createInjectionToken=makeMetadataFactory('InjectionToken',function(desc){return{_desc:desc,ngInjectableDef:undefined};});var createAttribute=makeMetadataFactory('Attribute',function(attributeName){return{attributeName:attributeName};});var createContentChildren=makeMetadataFactory('ContentChildren',function(selector,data){if(data===void 0){data={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:false,isViewQuery:false,descendants:false},data);});var createContentChild=makeMetadataFactory('ContentChild',function(selector,data){if(data===void 0){data={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:true,isViewQuery:false,descendants:true},data);});var createViewChildren=makeMetadataFactory('ViewChildren',function(selector,data){if(data===void 0){data={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:false,isViewQuery:true,descendants:true},data);});var createViewChild=makeMetadataFactory('ViewChild',function(selector,data){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({selector:selector,first:true,isViewQuery:true,descendants:true},data);});var createDirective=makeMetadataFactory('Directive',function(dir){if(dir===void 0){dir={};}return dir;});var ViewEncapsulation;(function(ViewEncapsulation){ViewEncapsulation[ViewEncapsulation["Emulated"]=0]="Emulated";ViewEncapsulation[ViewEncapsulation["Native"]=1]="Native";ViewEncapsulation[ViewEncapsulation["None"]=2]="None";ViewEncapsulation[ViewEncapsulation["ShadowDom"]=3]="ShadowDom";})(ViewEncapsulation||(ViewEncapsulation={}));var ChangeDetectionStrategy;(function(ChangeDetectionStrategy){ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"]=0]="OnPush";ChangeDetectionStrategy[ChangeDetectionStrategy["Default"]=1]="Default";})(ChangeDetectionStrategy||(ChangeDetectionStrategy={}));var createComponent=makeMetadataFactory('Component',function(c){if(c===void 0){c={};}return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({changeDetection:ChangeDetectionStrategy.Default},c);});var createPipe=makeMetadataFactory('Pipe',function(p){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({pure:true},p);});var createInput=makeMetadataFactory('Input',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});var createOutput=makeMetadataFactory('Output',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});var createHostBinding=makeMetadataFactory('HostBinding',function(hostPropertyName){return{hostPropertyName:hostPropertyName};});var createHostListener=makeMetadataFactory('HostListener',function(eventName,args){return{eventName:eventName,args:args};});var createNgModule=makeMetadataFactory('NgModule',function(ngModule){return ngModule;});var createInjectable=makeMetadataFactory('Injectable',function(injectable){if(injectable===void 0){injectable={};}return injectable;});var CUSTOM_ELEMENTS_SCHEMA={name:'custom-elements'};var NO_ERRORS_SCHEMA={name:'no-errors-schema'};var createOptional=makeMetadataFactory('Optional');var createSelf=makeMetadataFactory('Self');var createSkipSelf=makeMetadataFactory('SkipSelf');var createHost=makeMetadataFactory('Host');var Type=Function;var SecurityContext;(function(SecurityContext){SecurityContext[SecurityContext["NONE"]=0]="NONE";SecurityContext[SecurityContext["HTML"]=1]="HTML";SecurityContext[SecurityContext["STYLE"]=2]="STYLE";SecurityContext[SecurityContext["SCRIPT"]=3]="SCRIPT";SecurityContext[SecurityContext["URL"]=4]="URL";SecurityContext[SecurityContext["RESOURCE_URL"]=5]="RESOURCE_URL";})(SecurityContext||(SecurityContext={}));var MissingTranslationStrategy;(function(MissingTranslationStrategy){MissingTranslationStrategy[MissingTranslationStrategy["Error"]=0]="Error";MissingTranslationStrategy[MissingTranslationStrategy["Warning"]=1]="Warning";MissingTranslationStrategy[MissingTranslationStrategy["Ignore"]=2]="Ignore";})(MissingTranslationStrategy||(MissingTranslationStrategy={}));function makeMetadataFactory(name,props){var factory=function factory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var values=props?props.apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args)):{};return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ngMetadataName:name},values);};factory.isTypeOf=function(obj){return obj&&obj.ngMetadataName===name;};factory.ngMetadataName=name;return factory;}function parserSelectorToSimpleSelector(selector){var classes=selector.classNames&&selector.classNames.length?Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([8/* CLASS */],selector.classNames):[];var elementName=selector.element&&selector.element!=='*'?selector.element:'';return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([elementName],selector.attrs,classes);}function parserSelectorToNegativeSelector(selector){var classes=selector.classNames&&selector.classNames.length?Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([8/* CLASS */],selector.classNames):[];if(selector.element){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([1/* NOT */|4/* ELEMENT */,selector.element],selector.attrs,classes);}else if(selector.attrs.length){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([1/* NOT */|2/* ATTRIBUTE */],selector.attrs,classes);}else{return selector.classNames&&selector.classNames.length?Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([1/* NOT */|8/* CLASS */],selector.classNames):[];}}function parserSelectorToR3Selector(selector){var positive=parserSelectorToSimpleSelector(selector);var negative=selector.notSelectors&&selector.notSelectors.length?selector.notSelectors.map(function(notSelector){return parserSelectorToNegativeSelector(notSelector);}):[];return positive.concat.apply(positive,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(negative));}function parseSelectorToR3Selector(selector){var selectors=CssSelector.parse(selector);return selectors.map(parserSelectorToR3Selector);}var core=/*#__PURE__*/Object.freeze({createInject:createInject,createInjectionToken:createInjectionToken,createAttribute:createAttribute,createContentChildren:createContentChildren,createContentChild:createContentChild,createViewChildren:createViewChildren,createViewChild:createViewChild,createDirective:createDirective,get ViewEncapsulation(){return ViewEncapsulation;},get ChangeDetectionStrategy(){return ChangeDetectionStrategy;},createComponent:createComponent,createPipe:createPipe,createInput:createInput,createOutput:createOutput,createHostBinding:createHostBinding,createHostListener:createHostListener,createNgModule:createNgModule,createInjectable:createInjectable,CUSTOM_ELEMENTS_SCHEMA:CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA:NO_ERRORS_SCHEMA,createOptional:createOptional,createSelf:createSelf,createSkipSelf:createSkipSelf,createHost:createHost,Type:Type,get SecurityContext(){return SecurityContext;},get MissingTranslationStrategy(){return MissingTranslationStrategy;},parseSelectorToR3Selector:parseSelectorToR3Selector});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var DASH_CASE_REGEXP=/-+([a-z0-9])/g;function dashCaseToCamelCase(input){return input.replace(DASH_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return m[1].toUpperCase();});}function splitAtColon(input,defaultValues){return _splitAt(input,':',defaultValues);}function splitAtPeriod(input,defaultValues){return _splitAt(input,'.',defaultValues);}function _splitAt(input,character,defaultValues){var characterIndex=input.indexOf(character);if(characterIndex==-1)return defaultValues;return[input.slice(0,characterIndex).trim(),input.slice(characterIndex+1).trim()];}function visitValue(value,visitor,context){if(Array.isArray(value)){return visitor.visitArray(value,context);}if(isStrictStringMap(value)){return visitor.visitStringMap(value,context);}if(value==null||typeof value=='string'||typeof value=='number'||typeof value=='boolean'){return visitor.visitPrimitive(value,context);}return visitor.visitOther(value,context);}function isDefined(val){return val!==null&&val!==undefined;}function noUndefined(val){return val===undefined?null:val;}var ValueTransformer=/** @class */function(){function ValueTransformer(){}ValueTransformer.prototype.visitArray=function(arr,context){var _this=this;return arr.map(function(value){return visitValue(value,_this,context);});};ValueTransformer.prototype.visitStringMap=function(map,context){var _this=this;var result={};Object.keys(map).forEach(function(key){result[key]=visitValue(map[key],_this,context);});return result;};ValueTransformer.prototype.visitPrimitive=function(value,context){return value;};ValueTransformer.prototype.visitOther=function(value,context){return value;};return ValueTransformer;}();var SyncAsync={assertSync:function assertSync(value){if(isPromise(value)){throw new Error("Illegal state: value cannot be a promise");}return value;},then:function then(value,cb){return isPromise(value)?value.then(cb):cb(value);},all:function all(syncAsyncValues){return syncAsyncValues.some(isPromise)?Promise.all(syncAsyncValues):syncAsyncValues;}};function error(msg){throw new Error("Internal Error: "+msg);}function syntaxError(msg,parseErrors){var error=Error(msg);error[ERROR_SYNTAX_ERROR]=true;if(parseErrors)error[ERROR_PARSE_ERRORS]=parseErrors;return error;}var ERROR_SYNTAX_ERROR='ngSyntaxError';var ERROR_PARSE_ERRORS='ngParseErrors';function isSyntaxError(error){return error[ERROR_SYNTAX_ERROR];}function getParseErrors(error){return error[ERROR_PARSE_ERRORS]||[];}// Escape characters that have a special meaning in Regular Expressions
function escapeRegExp(s){return s.replace(/([.*+?^=!:${}()|[\]\/\\])/g,'\\$1');}var STRING_MAP_PROTO=Object.getPrototypeOf({});function isStrictStringMap(obj){return _typeof(obj)==='object'&&obj!==null&&Object.getPrototypeOf(obj)===STRING_MAP_PROTO;}function utf8Encode(str){var encoded='';for(var index=0;index<str.length;index++){var codePoint=str.charCodeAt(index);// decode surrogate
// see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
if(codePoint>=0xd800&&codePoint<=0xdbff&&str.length>index+1){var low=str.charCodeAt(index+1);if(low>=0xdc00&&low<=0xdfff){index++;codePoint=(codePoint-0xd800<<10)+low-0xdc00+0x10000;}}if(codePoint<=0x7f){encoded+=String.fromCharCode(codePoint);}else if(codePoint<=0x7ff){encoded+=String.fromCharCode(codePoint>>6&0x1F|0xc0,codePoint&0x3f|0x80);}else if(codePoint<=0xffff){encoded+=String.fromCharCode(codePoint>>12|0xe0,codePoint>>6&0x3f|0x80,codePoint&0x3f|0x80);}else if(codePoint<=0x1fffff){encoded+=String.fromCharCode(codePoint>>18&0x07|0xf0,codePoint>>12&0x3f|0x80,codePoint>>6&0x3f|0x80,codePoint&0x3f|0x80);}}return encoded;}function stringify(token){if(typeof token==='string'){return token;}if(token instanceof Array){return'['+token.map(stringify).join(', ')+']';}if(token==null){return''+token;}if(token.overriddenName){return""+token.overriddenName;}if(token.name){return""+token.name;}// WARNING: do not try to `JSON.stringify(token)` here
// see https://github.com/angular/angular/issues/23440
var res=token.toString();if(res==null){return''+res;}var newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * Lazily retrieves the reference value from a forwardRef.
 */function resolveForwardRef(type){if(typeof type==='function'&&type.hasOwnProperty('__forward_ref__')){return type();}else{return type;}}/**
 * Determine if the argument is shaped like a Promise
 */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}var Version=/** @class */function(){function Version(full){this.full=full;var splits=full.split('.');this.major=splits[0];this.minor=splits[1];this.patch=splits.slice(2).join('.');}return Version;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var VERSION=new Version('7.0.0');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _a;/**
 * A segment of text within the template.
 */var TextAst=/** @class */function(){function TextAst(value,ngContentIndex,sourceSpan){this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}TextAst.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return TextAst;}();/**
 * A bound expression within the text of a template.
 */var BoundTextAst=/** @class */function(){function BoundTextAst(value,ngContentIndex,sourceSpan){this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}BoundTextAst.prototype.visit=function(visitor,context){return visitor.visitBoundText(this,context);};return BoundTextAst;}();/**
 * A plain attribute on an element.
 */var AttrAst=/** @class */function(){function AttrAst(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}AttrAst.prototype.visit=function(visitor,context){return visitor.visitAttr(this,context);};return AttrAst;}();var BoundPropertyMapping=(_a={},_a[4/* Animation */]=4/* Animation */,_a[1/* Attribute */]=1/* Attribute */,_a[2/* Class */]=2/* Class */,_a[0/* Property */]=0/* Property */,_a[3/* Style */]=3/* Style */,_a);/**
 * A binding for an element property (e.g. `[property]="expression"`) or an animation trigger (e.g.
 * `[@trigger]="stateExp"`)
 */var BoundElementPropertyAst=/** @class */function(){function BoundElementPropertyAst(name,type,securityContext,value,unit,sourceSpan){this.name=name;this.type=type;this.securityContext=securityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;this.isAnimation=this.type===4/* Animation */;}BoundElementPropertyAst.fromBoundProperty=function(prop){var type=BoundPropertyMapping[prop.type];return new BoundElementPropertyAst(prop.name,type,prop.securityContext,prop.value,prop.unit,prop.sourceSpan);};BoundElementPropertyAst.prototype.visit=function(visitor,context){return visitor.visitElementProperty(this,context);};return BoundElementPropertyAst;}();/**
 * A binding for an element event (e.g. `(event)="handler()"`) or an animation trigger event (e.g.
 * `(@trigger.phase)="callback($event)"`).
 */var BoundEventAst=/** @class */function(){function BoundEventAst(name,target,phase,handler,sourceSpan){this.name=name;this.target=target;this.phase=phase;this.handler=handler;this.sourceSpan=sourceSpan;this.fullName=BoundEventAst.calcFullName(this.name,this.target,this.phase);this.isAnimation=!!this.phase;}BoundEventAst.calcFullName=function(name,target,phase){if(target){return target+":"+name;}if(phase){return"@"+name+"."+phase;}return name;};BoundEventAst.fromParsedEvent=function(event){var target=event.type===0/* Regular */?event.targetOrPhase:null;var phase=event.type===1/* Animation */?event.targetOrPhase:null;return new BoundEventAst(event.name,target,phase,event.handler,event.sourceSpan);};BoundEventAst.prototype.visit=function(visitor,context){return visitor.visitEvent(this,context);};return BoundEventAst;}();/**
 * A reference declaration on an element (e.g. `let someName="expression"`).
 */var ReferenceAst=/** @class */function(){function ReferenceAst(name,value,originalValue,sourceSpan){this.name=name;this.value=value;this.originalValue=originalValue;this.sourceSpan=sourceSpan;}ReferenceAst.prototype.visit=function(visitor,context){return visitor.visitReference(this,context);};return ReferenceAst;}();/**
 * A variable declaration on a <ng-template> (e.g. `var-someName="someLocalName"`).
 */var VariableAst=/** @class */function(){function VariableAst(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}VariableAst.fromParsedVariable=function(v){return new VariableAst(v.name,v.value,v.sourceSpan);};VariableAst.prototype.visit=function(visitor,context){return visitor.visitVariable(this,context);};return VariableAst;}();/**
 * An element declaration in a template.
 */var ElementAst=/** @class */function(){function ElementAst(name,attrs,inputs,outputs,references,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan,endSourceSpan){this.name=name;this.attrs=attrs;this.inputs=inputs;this.outputs=outputs;this.references=references;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;this.endSourceSpan=endSourceSpan;}ElementAst.prototype.visit=function(visitor,context){return visitor.visitElement(this,context);};return ElementAst;}();/**
 * A `<ng-template>` element included in an Angular template.
 */var EmbeddedTemplateAst=/** @class */function(){function EmbeddedTemplateAst(attrs,outputs,references,variables,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan){this.attrs=attrs;this.outputs=outputs;this.references=references;this.variables=variables;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}EmbeddedTemplateAst.prototype.visit=function(visitor,context){return visitor.visitEmbeddedTemplate(this,context);};return EmbeddedTemplateAst;}();/**
 * A directive property with a bound value (e.g. `*ngIf="condition").
 */var BoundDirectivePropertyAst=/** @class */function(){function BoundDirectivePropertyAst(directiveName,templateName,value,sourceSpan){this.directiveName=directiveName;this.templateName=templateName;this.value=value;this.sourceSpan=sourceSpan;}BoundDirectivePropertyAst.prototype.visit=function(visitor,context){return visitor.visitDirectiveProperty(this,context);};return BoundDirectivePropertyAst;}();/**
 * A directive declared on an element.
 */var DirectiveAst=/** @class */function(){function DirectiveAst(directive,inputs,hostProperties,hostEvents,contentQueryStartId,sourceSpan){this.directive=directive;this.inputs=inputs;this.hostProperties=hostProperties;this.hostEvents=hostEvents;this.contentQueryStartId=contentQueryStartId;this.sourceSpan=sourceSpan;}DirectiveAst.prototype.visit=function(visitor,context){return visitor.visitDirective(this,context);};return DirectiveAst;}();/**
 * A provider declared on an element
 */var ProviderAst=/** @class */function(){function ProviderAst(token,multiProvider,eager,providers,providerType,lifecycleHooks,sourceSpan,isModule){this.token=token;this.multiProvider=multiProvider;this.eager=eager;this.providers=providers;this.providerType=providerType;this.lifecycleHooks=lifecycleHooks;this.sourceSpan=sourceSpan;this.isModule=isModule;}ProviderAst.prototype.visit=function(visitor,context){// No visit method in the visitor for now...
return null;};return ProviderAst;}();var ProviderAstType;(function(ProviderAstType){ProviderAstType[ProviderAstType["PublicService"]=0]="PublicService";ProviderAstType[ProviderAstType["PrivateService"]=1]="PrivateService";ProviderAstType[ProviderAstType["Component"]=2]="Component";ProviderAstType[ProviderAstType["Directive"]=3]="Directive";ProviderAstType[ProviderAstType["Builtin"]=4]="Builtin";})(ProviderAstType||(ProviderAstType={}));/**
 * Position where content is to be projected (instance of `<ng-content>` in a template).
 */var NgContentAst=/** @class */function(){function NgContentAst(index,ngContentIndex,sourceSpan){this.index=index;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}NgContentAst.prototype.visit=function(visitor,context){return visitor.visitNgContent(this,context);};return NgContentAst;}();/**
 * A visitor that accepts each node but doesn't do anything. It is intended to be used
 * as the base class for a visitor that is only interested in a subset of the node types.
 */var NullTemplateVisitor=/** @class */function(){function NullTemplateVisitor(){}NullTemplateVisitor.prototype.visitNgContent=function(ast,context){};NullTemplateVisitor.prototype.visitEmbeddedTemplate=function(ast,context){};NullTemplateVisitor.prototype.visitElement=function(ast,context){};NullTemplateVisitor.prototype.visitReference=function(ast,context){};NullTemplateVisitor.prototype.visitVariable=function(ast,context){};NullTemplateVisitor.prototype.visitEvent=function(ast,context){};NullTemplateVisitor.prototype.visitElementProperty=function(ast,context){};NullTemplateVisitor.prototype.visitAttr=function(ast,context){};NullTemplateVisitor.prototype.visitBoundText=function(ast,context){};NullTemplateVisitor.prototype.visitText=function(ast,context){};NullTemplateVisitor.prototype.visitDirective=function(ast,context){};NullTemplateVisitor.prototype.visitDirectiveProperty=function(ast,context){};return NullTemplateVisitor;}();/**
 * Base class that can be used to build a visitor that visits each node
 * in an template ast recursively.
 */var RecursiveTemplateAstVisitor=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RecursiveTemplateAstVisitor,_super);function RecursiveTemplateAstVisitor(){return _super.call(this)||this;}// Nodes with children
RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.references);visit(ast.variables);visit(ast.directives);visit(ast.providers);visit(ast.children);});};RecursiveTemplateAstVisitor.prototype.visitElement=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.inputs);visit(ast.outputs);visit(ast.references);visit(ast.directives);visit(ast.providers);visit(ast.children);});};RecursiveTemplateAstVisitor.prototype.visitDirective=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.inputs);visit(ast.hostProperties);visit(ast.hostEvents);});};RecursiveTemplateAstVisitor.prototype.visitChildren=function(context,cb){var results=[];var t=this;function visit(children){if(children&&children.length)results.push(templateVisitAll(t,children,context));}cb(visit);return[].concat.apply([],results);};return RecursiveTemplateAstVisitor;}(NullTemplateVisitor);/**
 * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.
 */function templateVisitAll(visitor,asts,context){if(context===void 0){context=null;}var result=[];var visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};asts.forEach(function(ast){var astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CompilerConfig=/** @class */function(){function CompilerConfig(_a){var _b=_a===void 0?{}:_a,_c=_b.defaultEncapsulation,defaultEncapsulation=_c===void 0?ViewEncapsulation.Emulated:_c,_d=_b.useJit,useJit=_d===void 0?true:_d,_e=_b.jitDevMode,jitDevMode=_e===void 0?false:_e,_f=_b.missingTranslation,missingTranslation=_f===void 0?null:_f,preserveWhitespaces=_b.preserveWhitespaces,strictInjectionParameters=_b.strictInjectionParameters;this.defaultEncapsulation=defaultEncapsulation;this.useJit=!!useJit;this.jitDevMode=!!jitDevMode;this.missingTranslation=missingTranslation;this.preserveWhitespaces=preserveWhitespacesDefault(noUndefined(preserveWhitespaces));this.strictInjectionParameters=strictInjectionParameters===true;}return CompilerConfig;}();function preserveWhitespacesDefault(preserveWhitespacesOption,defaultSetting){if(defaultSetting===void 0){defaultSetting=false;}return preserveWhitespacesOption===null?defaultSetting:preserveWhitespacesOption;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A token representing the a reference to a static type.
 *
 * This token is unique for a filePath and name and can be used as a hash table key.
 */var StaticSymbol=/** @class */function(){function StaticSymbol(filePath,name,members){this.filePath=filePath;this.name=name;this.members=members;}StaticSymbol.prototype.assertNoMembers=function(){if(this.members.length){throw new Error("Illegal state: symbol without members expected, but got "+JSON.stringify(this)+".");}};return StaticSymbol;}();/**
 * A cache of static symbol used by the StaticReflector to return the same symbol for the
 * same symbol values.
 */var StaticSymbolCache=/** @class */function(){function StaticSymbolCache(){this.cache=new Map();}StaticSymbolCache.prototype.get=function(declarationFile,name,members){members=members||[];var memberSuffix=members.length?"."+members.join('.'):'';var key="\""+declarationFile+"\"."+name+memberSuffix;var result=this.cache.get(key);if(!result){result=new StaticSymbol(declarationFile,name,members);this.cache.set(key,result);}return result;};return StaticSymbolCache;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // group 0: "[prop] or (event) or @trigger"
// group 1: "prop" from "[prop]"
// group 2: "event" from "(event)"
// group 3: "@trigger" from "@trigger"
var HOST_REG_EXP=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function sanitizeIdentifier(name){return name.replace(/\W/g,'_');}var _anonymousTypeIndex=0;function identifierName(compileIdentifier){if(!compileIdentifier||!compileIdentifier.reference){return null;}var ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.name;}if(ref['__anonymousType']){return ref['__anonymousType'];}var identifier=stringify(ref);if(identifier.indexOf('(')>=0){// case: anonymous functions!
identifier="anonymous_"+_anonymousTypeIndex++;ref['__anonymousType']=identifier;}else{identifier=sanitizeIdentifier(identifier);}return identifier;}function identifierModuleUrl(compileIdentifier){var ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.filePath;}// Runtime type
return"./"+stringify(ref);}function viewClassName(compType,embeddedTemplateIndex){return"View_"+identifierName({reference:compType})+"_"+embeddedTemplateIndex;}function rendererTypeName(compType){return"RenderType_"+identifierName({reference:compType});}function hostViewClassName(compType){return"HostView_"+identifierName({reference:compType});}function componentFactoryName(compType){return identifierName({reference:compType})+"NgFactory";}var CompileSummaryKind;(function(CompileSummaryKind){CompileSummaryKind[CompileSummaryKind["Pipe"]=0]="Pipe";CompileSummaryKind[CompileSummaryKind["Directive"]=1]="Directive";CompileSummaryKind[CompileSummaryKind["NgModule"]=2]="NgModule";CompileSummaryKind[CompileSummaryKind["Injectable"]=3]="Injectable";})(CompileSummaryKind||(CompileSummaryKind={}));function tokenName(token){return token.value!=null?sanitizeIdentifier(token.value):identifierName(token.identifier);}function tokenReference(token){if(token.identifier!=null){return token.identifier.reference;}else{return token.value;}}/**
 * Metadata about a stylesheet
 */var CompileStylesheetMetadata=/** @class */function(){function CompileStylesheetMetadata(_a){var _b=_a===void 0?{}:_a,moduleUrl=_b.moduleUrl,styles=_b.styles,styleUrls=_b.styleUrls;this.moduleUrl=moduleUrl||null;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);}return CompileStylesheetMetadata;}();/**
 * Metadata regarding compilation of a template.
 */var CompileTemplateMetadata=/** @class */function(){function CompileTemplateMetadata(_a){var encapsulation=_a.encapsulation,template=_a.template,templateUrl=_a.templateUrl,htmlAst=_a.htmlAst,styles=_a.styles,styleUrls=_a.styleUrls,externalStylesheets=_a.externalStylesheets,animations=_a.animations,ngContentSelectors=_a.ngContentSelectors,interpolation=_a.interpolation,isInline=_a.isInline,preserveWhitespaces=_a.preserveWhitespaces;this.encapsulation=encapsulation;this.template=template;this.templateUrl=templateUrl;this.htmlAst=htmlAst;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);this.externalStylesheets=_normalizeArray(externalStylesheets);this.animations=animations?flatten(animations):[];this.ngContentSelectors=ngContentSelectors||[];if(interpolation&&interpolation.length!=2){throw new Error("'interpolation' should have a start and an end symbol.");}this.interpolation=interpolation;this.isInline=isInline;this.preserveWhitespaces=preserveWhitespaces;}CompileTemplateMetadata.prototype.toSummary=function(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations};};return CompileTemplateMetadata;}();/**
 * Metadata regarding compilation of a directive.
 */var CompileDirectiveMetadata=/** @class */function(){function CompileDirectiveMetadata(_a){var isHost=_a.isHost,type=_a.type,isComponent=_a.isComponent,selector=_a.selector,exportAs=_a.exportAs,changeDetection=_a.changeDetection,inputs=_a.inputs,outputs=_a.outputs,hostListeners=_a.hostListeners,hostProperties=_a.hostProperties,hostAttributes=_a.hostAttributes,providers=_a.providers,viewProviders=_a.viewProviders,queries=_a.queries,guards=_a.guards,viewQueries=_a.viewQueries,entryComponents=_a.entryComponents,template=_a.template,componentViewType=_a.componentViewType,rendererType=_a.rendererType,componentFactory=_a.componentFactory;this.isHost=!!isHost;this.type=type;this.isComponent=isComponent;this.selector=selector;this.exportAs=exportAs;this.changeDetection=changeDetection;this.inputs=inputs;this.outputs=outputs;this.hostListeners=hostListeners;this.hostProperties=hostProperties;this.hostAttributes=hostAttributes;this.providers=_normalizeArray(providers);this.viewProviders=_normalizeArray(viewProviders);this.queries=_normalizeArray(queries);this.guards=guards;this.viewQueries=_normalizeArray(viewQueries);this.entryComponents=_normalizeArray(entryComponents);this.template=template;this.componentViewType=componentViewType;this.rendererType=rendererType;this.componentFactory=componentFactory;}CompileDirectiveMetadata.create=function(_a){var isHost=_a.isHost,type=_a.type,isComponent=_a.isComponent,selector=_a.selector,exportAs=_a.exportAs,changeDetection=_a.changeDetection,inputs=_a.inputs,outputs=_a.outputs,host=_a.host,providers=_a.providers,viewProviders=_a.viewProviders,queries=_a.queries,guards=_a.guards,viewQueries=_a.viewQueries,entryComponents=_a.entryComponents,template=_a.template,componentViewType=_a.componentViewType,rendererType=_a.rendererType,componentFactory=_a.componentFactory;var hostListeners={};var hostProperties={};var hostAttributes={};if(host!=null){Object.keys(host).forEach(function(key){var value=host[key];var matches=key.match(HOST_REG_EXP);if(matches===null){hostAttributes[key]=value;}else if(matches[1]!=null){hostProperties[matches[1]]=value;}else if(matches[2]!=null){hostListeners[matches[2]]=value;}});}var inputsMap={};if(inputs!=null){inputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);inputsMap[parts[0]]=parts[1];});}var outputsMap={};if(outputs!=null){outputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);outputsMap[parts[0]]=parts[1];});}return new CompileDirectiveMetadata({isHost:isHost,type:type,isComponent:!!isComponent,selector:selector,exportAs:exportAs,changeDetection:changeDetection,inputs:inputsMap,outputs:outputsMap,hostListeners:hostListeners,hostProperties:hostProperties,hostAttributes:hostAttributes,providers:providers,viewProviders:viewProviders,queries:queries,guards:guards,viewQueries:viewQueries,entryComponents:entryComponents,template:template,componentViewType:componentViewType,rendererType:rendererType,componentFactory:componentFactory});};CompileDirectiveMetadata.prototype.toSummary=function(){return{summaryKind:CompileSummaryKind.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory};};return CompileDirectiveMetadata;}();var CompilePipeMetadata=/** @class */function(){function CompilePipeMetadata(_a){var type=_a.type,name=_a.name,pure=_a.pure;this.type=type;this.name=name;this.pure=!!pure;}CompilePipeMetadata.prototype.toSummary=function(){return{summaryKind:CompileSummaryKind.Pipe,type:this.type,name:this.name,pure:this.pure};};return CompilePipeMetadata;}();var CompileShallowModuleMetadata=/** @class */function(){function CompileShallowModuleMetadata(){}return CompileShallowModuleMetadata;}();/**
 * Metadata regarding compilation of a module.
 */var CompileNgModuleMetadata=/** @class */function(){function CompileNgModuleMetadata(_a){var type=_a.type,providers=_a.providers,declaredDirectives=_a.declaredDirectives,exportedDirectives=_a.exportedDirectives,declaredPipes=_a.declaredPipes,exportedPipes=_a.exportedPipes,entryComponents=_a.entryComponents,bootstrapComponents=_a.bootstrapComponents,importedModules=_a.importedModules,exportedModules=_a.exportedModules,schemas=_a.schemas,transitiveModule=_a.transitiveModule,id=_a.id;this.type=type||null;this.declaredDirectives=_normalizeArray(declaredDirectives);this.exportedDirectives=_normalizeArray(exportedDirectives);this.declaredPipes=_normalizeArray(declaredPipes);this.exportedPipes=_normalizeArray(exportedPipes);this.providers=_normalizeArray(providers);this.entryComponents=_normalizeArray(entryComponents);this.bootstrapComponents=_normalizeArray(bootstrapComponents);this.importedModules=_normalizeArray(importedModules);this.exportedModules=_normalizeArray(exportedModules);this.schemas=_normalizeArray(schemas);this.id=id||null;this.transitiveModule=transitiveModule||null;}CompileNgModuleMetadata.prototype.toSummary=function(){var module=this.transitiveModule;return{summaryKind:CompileSummaryKind.NgModule,type:this.type,entryComponents:module.entryComponents,providers:module.providers,modules:module.modules,exportedDirectives:module.exportedDirectives,exportedPipes:module.exportedPipes};};return CompileNgModuleMetadata;}();var TransitiveCompileNgModuleMetadata=/** @class */function(){function TransitiveCompileNgModuleMetadata(){this.directivesSet=new Set();this.directives=[];this.exportedDirectivesSet=new Set();this.exportedDirectives=[];this.pipesSet=new Set();this.pipes=[];this.exportedPipesSet=new Set();this.exportedPipes=[];this.modulesSet=new Set();this.modules=[];this.entryComponentsSet=new Set();this.entryComponents=[];this.providers=[];}TransitiveCompileNgModuleMetadata.prototype.addProvider=function(provider,module){this.providers.push({provider:provider,module:module});};TransitiveCompileNgModuleMetadata.prototype.addDirective=function(id){if(!this.directivesSet.has(id.reference)){this.directivesSet.add(id.reference);this.directives.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addExportedDirective=function(id){if(!this.exportedDirectivesSet.has(id.reference)){this.exportedDirectivesSet.add(id.reference);this.exportedDirectives.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addPipe=function(id){if(!this.pipesSet.has(id.reference)){this.pipesSet.add(id.reference);this.pipes.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addExportedPipe=function(id){if(!this.exportedPipesSet.has(id.reference)){this.exportedPipesSet.add(id.reference);this.exportedPipes.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addModule=function(id){if(!this.modulesSet.has(id.reference)){this.modulesSet.add(id.reference);this.modules.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addEntryComponent=function(ec){if(!this.entryComponentsSet.has(ec.componentType)){this.entryComponentsSet.add(ec.componentType);this.entryComponents.push(ec);}};return TransitiveCompileNgModuleMetadata;}();function _normalizeArray(obj){return obj||[];}var ProviderMeta=/** @class */function(){function ProviderMeta(token,_a){var useClass=_a.useClass,useValue=_a.useValue,useExisting=_a.useExisting,useFactory=_a.useFactory,deps=_a.deps,multi=_a.multi;this.token=token;this.useClass=useClass||null;this.useValue=useValue;this.useExisting=useExisting;this.useFactory=useFactory||null;this.dependencies=deps||null;this.multi=!!multi;}return ProviderMeta;}();function flatten(list){return list.reduce(function(flat,item){var flatItem=Array.isArray(item)?flatten(item):item;return flat.concat(flatItem);},[]);}function jitSourceUrl(url){// Note: We need 3 "/" so that ng shows up as a separate domain
// in the chrome dev tools.
return url.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,'ng:///');}function templateSourceUrl(ngModuleType,compMeta,templateMeta){var url;if(templateMeta.isInline){if(compMeta.type.reference instanceof StaticSymbol){// Note: a .ts file might contain multiple components with inline templates,
// so we need to give them unique urls, as these will be used for sourcemaps.
url=compMeta.type.reference.filePath+"."+compMeta.type.reference.name+".html";}else{url=identifierName(ngModuleType)+"/"+identifierName(compMeta.type)+".html";}}else{url=templateMeta.templateUrl;}return compMeta.type.reference instanceof StaticSymbol?url:jitSourceUrl(url);}function sharedStylesheetJitUrl(meta,id){var pathParts=meta.moduleUrl.split(/\/\\/g);var baseName=pathParts[pathParts.length-1];return jitSourceUrl("css/"+id+baseName+".ngstyle.js");}function ngModuleJitUrl(moduleMeta){return jitSourceUrl(identifierName(moduleMeta.type)+"/module.ngfactory.js");}function templateJitUrl(ngModuleType,compMeta){return jitSourceUrl(identifierName(ngModuleType)+"/"+identifierName(compMeta.type)+".ngfactory.js");}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A path is an ordered set of elements. Typically a path is to  a
 * particular offset in a source file. The head of the list is the top
 * most node. The tail is the node that contains the offset directly.
 *
 * For example, the expression `a + b + c` might have an ast that looks
 * like:
 *     +
 *    / \
 *   a   +
 *      / \
 *     b   c
 *
 * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,
 * 'c' at 9-10]` and the path the node at offset 1 would be
 * `['+' at 1-10, 'a' at 1-2]`.
 */var AstPath=/** @class */function(){function AstPath(path,position){if(position===void 0){position=-1;}this.path=path;this.position=position;}Object.defineProperty(AstPath.prototype,"empty",{get:function get(){return!this.path||!this.path.length;},enumerable:true,configurable:true});Object.defineProperty(AstPath.prototype,"head",{get:function get(){return this.path[0];},enumerable:true,configurable:true});Object.defineProperty(AstPath.prototype,"tail",{get:function get(){return this.path[this.path.length-1];},enumerable:true,configurable:true});AstPath.prototype.parentOf=function(node){return node&&this.path[this.path.indexOf(node)-1];};AstPath.prototype.childOf=function(node){return this.path[this.path.indexOf(node)+1];};AstPath.prototype.first=function(ctor){for(var i=this.path.length-1;i>=0;i--){var item=this.path[i];if(item instanceof ctor)return item;}};AstPath.prototype.push=function(node){this.path.push(node);};AstPath.prototype.pop=function(){return this.path.pop();};return AstPath;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Text=/** @class */function(){function Text(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Text.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return Text;}();var Expansion=/** @class */function(){function Expansion(switchValue,type,cases,sourceSpan,switchValueSourceSpan){this.switchValue=switchValue;this.type=type;this.cases=cases;this.sourceSpan=sourceSpan;this.switchValueSourceSpan=switchValueSourceSpan;}Expansion.prototype.visit=function(visitor,context){return visitor.visitExpansion(this,context);};return Expansion;}();var ExpansionCase=/** @class */function(){function ExpansionCase(value,expression,sourceSpan,valueSourceSpan,expSourceSpan){this.value=value;this.expression=expression;this.sourceSpan=sourceSpan;this.valueSourceSpan=valueSourceSpan;this.expSourceSpan=expSourceSpan;}ExpansionCase.prototype.visit=function(visitor,context){return visitor.visitExpansionCase(this,context);};return ExpansionCase;}();var Attribute=/** @class */function(){function Attribute(name,value,sourceSpan,valueSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}Attribute.prototype.visit=function(visitor,context){return visitor.visitAttribute(this,context);};return Attribute;}();var Element=/** @class */function(){function Element(name,attrs,children,sourceSpan,startSourceSpan,endSourceSpan){if(startSourceSpan===void 0){startSourceSpan=null;}if(endSourceSpan===void 0){endSourceSpan=null;}this.name=name;this.attrs=attrs;this.children=children;this.sourceSpan=sourceSpan;this.startSourceSpan=startSourceSpan;this.endSourceSpan=endSourceSpan;}Element.prototype.visit=function(visitor,context){return visitor.visitElement(this,context);};return Element;}();var Comment=/** @class */function(){function Comment(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Comment.prototype.visit=function(visitor,context){return visitor.visitComment(this,context);};return Comment;}();function visitAll(visitor,nodes,context){if(context===void 0){context=null;}var result=[];var visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};nodes.forEach(function(ast){var astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}var RecursiveVisitor=/** @class */function(){function RecursiveVisitor(){}RecursiveVisitor.prototype.visitElement=function(ast,context){this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.children);});};RecursiveVisitor.prototype.visitAttribute=function(ast,context){};RecursiveVisitor.prototype.visitText=function(ast,context){};RecursiveVisitor.prototype.visitComment=function(ast,context){};RecursiveVisitor.prototype.visitExpansion=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.cases);});};RecursiveVisitor.prototype.visitExpansionCase=function(ast,context){};RecursiveVisitor.prototype.visitChildren=function(context,cb){var results=[];var t=this;function visit(children){if(children)results.push(visitAll(t,children,context));}cb(visit);return[].concat.apply([],results);};return RecursiveVisitor;}();function spanOf(ast){var start=ast.sourceSpan.start.offset;var end=ast.sourceSpan.end.offset;if(ast instanceof Element){if(ast.endSourceSpan){end=ast.endSourceSpan.end.offset;}else if(ast.children&&ast.children.length){end=spanOf(ast.children[ast.children.length-1]).end;}}return{start:start,end:end};}function findNode(nodes,position){var path=[];var visitor=new(/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(class_1,_super);function class_1(){return _super!==null&&_super.apply(this,arguments)||this;}class_1.prototype.visit=function(ast,context){var span=spanOf(ast);if(span.start<=position&&position<span.end){path.push(ast);}else{// Returning a value here will result in the children being skipped.
return true;}};return class_1;}(RecursiveVisitor))();visitAll(visitor,nodes);return new AstPath(path,position);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function assertArrayOfStrings(identifier,value){if(value==null){return;}if(!Array.isArray(value)){throw new Error("Expected '"+identifier+"' to be an array of strings.");}for(var i=0;i<value.length;i+=1){if(typeof value[i]!=='string'){throw new Error("Expected '"+identifier+"' to be an array of strings.");}}}var INTERPOLATION_BLACKLIST_REGEXPS=[/^\s*$/,/[<>]/,/^[{}]$/,/&(#|[a-z])/i,/^\/\//];function assertInterpolationSymbols(identifier,value){if(value!=null&&!(Array.isArray(value)&&value.length==2)){throw new Error("Expected '"+identifier+"' to be an array, [start, end].");}else if(value!=null){var start_1=value[0];var end_1=value[1];// black list checking
INTERPOLATION_BLACKLIST_REGEXPS.forEach(function(regexp){if(regexp.test(start_1)||regexp.test(end_1)){throw new Error("['"+start_1+"', '"+end_1+"'] contains unusable interpolation symbol.");}});}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var InterpolationConfig=/** @class */function(){function InterpolationConfig(start,end){this.start=start;this.end=end;}InterpolationConfig.fromArray=function(markers){if(!markers){return DEFAULT_INTERPOLATION_CONFIG;}assertInterpolationSymbols('interpolation',markers);return new InterpolationConfig(markers[0],markers[1]);};return InterpolationConfig;}();var DEFAULT_INTERPOLATION_CONFIG=new InterpolationConfig('{{','}}');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var StyleWithImports=/** @class */function(){function StyleWithImports(style,styleUrls){this.style=style;this.styleUrls=styleUrls;}return StyleWithImports;}();function isStyleUrlResolvable(url){if(url==null||url.length===0||url[0]=='/')return false;var schemeMatch=url.match(URL_WITH_SCHEMA_REGEXP);return schemeMatch===null||schemeMatch[1]=='package'||schemeMatch[1]=='asset';}/**
 * Rewrites stylesheets by resolving and removing the @import urls that
 * are either relative or don't have a `package:` scheme
 */function extractStyleUrls(resolver,baseUrl,cssText){var foundUrls=[];var modifiedCssText=cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP,'').replace(CSS_IMPORT_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var url=m[1]||m[2];if(!isStyleUrlResolvable(url)){// Do not attempt to resolve non-package absolute URLs with URI
// scheme
return m[0];}foundUrls.push(resolver.resolve(baseUrl,url));return'';});return new StyleWithImports(modifiedCssText,foundUrls);}var CSS_IMPORT_REGEXP=/@import\s+(?:url\()?\s*(?:(?:['"]([^'"]*))|([^;\)\s]*))[^;]*;?/g;var CSS_STRIPPABLE_COMMENT_REGEXP=/\/\*(?!#\s*(?:sourceURL|sourceMappingURL)=)[\s\S]+?\*\//g;var URL_WITH_SCHEMA_REGEXP=/^([^:/?#]+):/;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NG_CONTENT_SELECT_ATTR='select';var LINK_ELEMENT='link';var LINK_STYLE_REL_ATTR='rel';var LINK_STYLE_HREF_ATTR='href';var LINK_STYLE_REL_VALUE='stylesheet';var STYLE_ELEMENT='style';var SCRIPT_ELEMENT='script';var NG_NON_BINDABLE_ATTR='ngNonBindable';var NG_PROJECT_AS='ngProjectAs';function preparseElement(ast){var selectAttr=null;var hrefAttr=null;var relAttr=null;var nonBindable=false;var projectAs='';ast.attrs.forEach(function(attr){var lcAttrName=attr.name.toLowerCase();if(lcAttrName==NG_CONTENT_SELECT_ATTR){selectAttr=attr.value;}else if(lcAttrName==LINK_STYLE_HREF_ATTR){hrefAttr=attr.value;}else if(lcAttrName==LINK_STYLE_REL_ATTR){relAttr=attr.value;}else if(attr.name==NG_NON_BINDABLE_ATTR){nonBindable=true;}else if(attr.name==NG_PROJECT_AS){if(attr.value.length>0){projectAs=attr.value;}}});selectAttr=normalizeNgContentSelect(selectAttr);var nodeName=ast.name.toLowerCase();var type=PreparsedElementType.OTHER;if(isNgContent(nodeName)){type=PreparsedElementType.NG_CONTENT;}else if(nodeName==STYLE_ELEMENT){type=PreparsedElementType.STYLE;}else if(nodeName==SCRIPT_ELEMENT){type=PreparsedElementType.SCRIPT;}else if(nodeName==LINK_ELEMENT&&relAttr==LINK_STYLE_REL_VALUE){type=PreparsedElementType.STYLESHEET;}return new PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs);}var PreparsedElementType;(function(PreparsedElementType){PreparsedElementType[PreparsedElementType["NG_CONTENT"]=0]="NG_CONTENT";PreparsedElementType[PreparsedElementType["STYLE"]=1]="STYLE";PreparsedElementType[PreparsedElementType["STYLESHEET"]=2]="STYLESHEET";PreparsedElementType[PreparsedElementType["SCRIPT"]=3]="SCRIPT";PreparsedElementType[PreparsedElementType["OTHER"]=4]="OTHER";})(PreparsedElementType||(PreparsedElementType={}));var PreparsedElement=/** @class */function(){function PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs){this.type=type;this.selectAttr=selectAttr;this.hrefAttr=hrefAttr;this.nonBindable=nonBindable;this.projectAs=projectAs;}return PreparsedElement;}();function normalizeNgContentSelect(selectAttr){if(selectAttr===null||selectAttr.length===0){return'*';}return selectAttr;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var DirectiveNormalizer=/** @class */function(){function DirectiveNormalizer(_resourceLoader,_urlResolver,_htmlParser,_config){this._resourceLoader=_resourceLoader;this._urlResolver=_urlResolver;this._htmlParser=_htmlParser;this._config=_config;this._resourceLoaderCache=new Map();}DirectiveNormalizer.prototype.clearCache=function(){this._resourceLoaderCache.clear();};DirectiveNormalizer.prototype.clearCacheFor=function(normalizedDirective){var _this=this;if(!normalizedDirective.isComponent){return;}var template=normalizedDirective.template;this._resourceLoaderCache.delete(template.templateUrl);template.externalStylesheets.forEach(function(stylesheet){_this._resourceLoaderCache.delete(stylesheet.moduleUrl);});};DirectiveNormalizer.prototype._fetch=function(url){var result=this._resourceLoaderCache.get(url);if(!result){result=this._resourceLoader.get(url);this._resourceLoaderCache.set(url,result);}return result;};DirectiveNormalizer.prototype.normalizeTemplate=function(prenormData){var _this=this;if(isDefined(prenormData.template)){if(isDefined(prenormData.templateUrl)){throw syntaxError("'"+stringify(prenormData.componentType)+"' component cannot define both template and templateUrl");}if(typeof prenormData.template!=='string'){throw syntaxError("The template specified for component "+stringify(prenormData.componentType)+" is not a string");}}else if(isDefined(prenormData.templateUrl)){if(typeof prenormData.templateUrl!=='string'){throw syntaxError("The templateUrl specified for component "+stringify(prenormData.componentType)+" is not a string");}}else{throw syntaxError("No template specified for component "+stringify(prenormData.componentType));}if(isDefined(prenormData.preserveWhitespaces)&&typeof prenormData.preserveWhitespaces!=='boolean'){throw syntaxError("The preserveWhitespaces option for component "+stringify(prenormData.componentType)+" must be a boolean");}return SyncAsync.then(this._preParseTemplate(prenormData),function(preparsedTemplate){return _this._normalizeTemplateMetadata(prenormData,preparsedTemplate);});};DirectiveNormalizer.prototype._preParseTemplate=function(prenomData){var _this=this;var template;var templateUrl;if(prenomData.template!=null){template=prenomData.template;templateUrl=prenomData.moduleUrl;}else{templateUrl=this._urlResolver.resolve(prenomData.moduleUrl,prenomData.templateUrl);template=this._fetch(templateUrl);}return SyncAsync.then(template,function(template){return _this._preparseLoadedTemplate(prenomData,template,templateUrl);});};DirectiveNormalizer.prototype._preparseLoadedTemplate=function(prenormData,template,templateAbsUrl){var isInline=!!prenormData.template;var interpolationConfig=InterpolationConfig.fromArray(prenormData.interpolation);var rootNodesAndErrors=this._htmlParser.parse(template,templateSourceUrl({reference:prenormData.ngModuleType},{type:{reference:prenormData.componentType}},{isInline:isInline,templateUrl:templateAbsUrl}),true,interpolationConfig);if(rootNodesAndErrors.errors.length>0){var errorString=rootNodesAndErrors.errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString);}var templateMetadataStyles=this._normalizeStylesheet(new CompileStylesheetMetadata({styles:prenormData.styles,moduleUrl:prenormData.moduleUrl}));var visitor=new TemplatePreparseVisitor();visitAll(visitor,rootNodesAndErrors.rootNodes);var templateStyles=this._normalizeStylesheet(new CompileStylesheetMetadata({styles:visitor.styles,styleUrls:visitor.styleUrls,moduleUrl:templateAbsUrl}));var styles=templateMetadataStyles.styles.concat(templateStyles.styles);var inlineStyleUrls=templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);var styleUrls=this._normalizeStylesheet(new CompileStylesheetMetadata({styleUrls:prenormData.styleUrls,moduleUrl:prenormData.moduleUrl})).styleUrls;return{template:template,templateUrl:templateAbsUrl,isInline:isInline,htmlAst:rootNodesAndErrors,styles:styles,inlineStyleUrls:inlineStyleUrls,styleUrls:styleUrls,ngContentSelectors:visitor.ngContentSelectors};};DirectiveNormalizer.prototype._normalizeTemplateMetadata=function(prenormData,preparsedTemplate){var _this=this;return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)),function(externalStylesheets){return _this._normalizeLoadedTemplateMetadata(prenormData,preparsedTemplate,externalStylesheets);});};DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata=function(prenormData,preparsedTemplate,stylesheets){// Algorithm:
// - produce exactly 1 entry per original styleUrl in
// CompileTemplateMetadata.externalStylesheets with all styles inlined
// - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.
// Reason: be able to determine how many stylesheets there are even without loading
// the template nor the stylesheets, so we can create a stub for TypeScript always synchronously
// (as resource loading may be async)
var _this=this;var styles=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(preparsedTemplate.styles);this._inlineStyles(preparsedTemplate.inlineStyleUrls,stylesheets,styles);var styleUrls=preparsedTemplate.styleUrls;var externalStylesheets=styleUrls.map(function(styleUrl){var stylesheet=stylesheets.get(styleUrl);var styles=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(stylesheet.styles);_this._inlineStyles(stylesheet.styleUrls,stylesheets,styles);return new CompileStylesheetMetadata({moduleUrl:styleUrl,styles:styles});});var encapsulation=prenormData.encapsulation;if(encapsulation==null){encapsulation=this._config.defaultEncapsulation;}if(encapsulation===ViewEncapsulation.Emulated&&styles.length===0&&styleUrls.length===0){encapsulation=ViewEncapsulation.None;}return new CompileTemplateMetadata({encapsulation:encapsulation,template:preparsedTemplate.template,templateUrl:preparsedTemplate.templateUrl,htmlAst:preparsedTemplate.htmlAst,styles:styles,styleUrls:styleUrls,ngContentSelectors:preparsedTemplate.ngContentSelectors,animations:prenormData.animations,interpolation:prenormData.interpolation,isInline:preparsedTemplate.isInline,externalStylesheets:externalStylesheets,preserveWhitespaces:preserveWhitespacesDefault(prenormData.preserveWhitespaces,this._config.preserveWhitespaces)});};DirectiveNormalizer.prototype._inlineStyles=function(styleUrls,stylesheets,targetStyles){var _this=this;styleUrls.forEach(function(styleUrl){var stylesheet=stylesheets.get(styleUrl);stylesheet.styles.forEach(function(style){return targetStyles.push(style);});_this._inlineStyles(stylesheet.styleUrls,stylesheets,targetStyles);});};DirectiveNormalizer.prototype._loadMissingExternalStylesheets=function(styleUrls,loadedStylesheets){var _this=this;if(loadedStylesheets===void 0){loadedStylesheets=new Map();}return SyncAsync.then(SyncAsync.all(styleUrls.filter(function(styleUrl){return!loadedStylesheets.has(styleUrl);}).map(function(styleUrl){return SyncAsync.then(_this._fetch(styleUrl),function(loadedStyle){var stylesheet=_this._normalizeStylesheet(new CompileStylesheetMetadata({styles:[loadedStyle],moduleUrl:styleUrl}));loadedStylesheets.set(styleUrl,stylesheet);return _this._loadMissingExternalStylesheets(stylesheet.styleUrls,loadedStylesheets);});})),function(_){return loadedStylesheets;});};DirectiveNormalizer.prototype._normalizeStylesheet=function(stylesheet){var _this=this;var moduleUrl=stylesheet.moduleUrl;var allStyleUrls=stylesheet.styleUrls.filter(isStyleUrlResolvable).map(function(url){return _this._urlResolver.resolve(moduleUrl,url);});var allStyles=stylesheet.styles.map(function(style){var styleWithImports=extractStyleUrls(_this._urlResolver,moduleUrl,style);allStyleUrls.push.apply(allStyleUrls,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(styleWithImports.styleUrls));return styleWithImports.style;});return new CompileStylesheetMetadata({styles:allStyles,styleUrls:allStyleUrls,moduleUrl:moduleUrl});};return DirectiveNormalizer;}();var TemplatePreparseVisitor=/** @class */function(){function TemplatePreparseVisitor(){this.ngContentSelectors=[];this.styles=[];this.styleUrls=[];this.ngNonBindableStackCount=0;}TemplatePreparseVisitor.prototype.visitElement=function(ast,context){var preparsedElement=preparseElement(ast);switch(preparsedElement.type){case PreparsedElementType.NG_CONTENT:if(this.ngNonBindableStackCount===0){this.ngContentSelectors.push(preparsedElement.selectAttr);}break;case PreparsedElementType.STYLE:var textContent_1='';ast.children.forEach(function(child){if(child instanceof Text){textContent_1+=child.value;}});this.styles.push(textContent_1);break;case PreparsedElementType.STYLESHEET:this.styleUrls.push(preparsedElement.hrefAttr);break;default:break;}if(preparsedElement.nonBindable){this.ngNonBindableStackCount++;}visitAll(this,ast.children);if(preparsedElement.nonBindable){this.ngNonBindableStackCount--;}return null;};TemplatePreparseVisitor.prototype.visitExpansion=function(ast,context){visitAll(this,ast.cases);};TemplatePreparseVisitor.prototype.visitExpansionCase=function(ast,context){visitAll(this,ast.expression);};TemplatePreparseVisitor.prototype.visitComment=function(ast,context){return null;};TemplatePreparseVisitor.prototype.visitAttribute=function(ast,context){return null;};TemplatePreparseVisitor.prototype.visitText=function(ast,context){return null;};return TemplatePreparseVisitor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var QUERY_METADATA_IDENTIFIERS=[createViewChild,createViewChildren,createContentChild,createContentChildren];/*
 * Resolve a `Type` for {@link Directive}.
 *
 * This interface can be overridden by the application developer to create custom behavior.
 *
 * See {@link Compiler}
 */var DirectiveResolver=/** @class */function(){function DirectiveResolver(_reflector){this._reflector=_reflector;}DirectiveResolver.prototype.isDirective=function(type){var typeMetadata=this._reflector.annotations(resolveForwardRef(type));return typeMetadata&&typeMetadata.some(isDirectiveMetadata);};DirectiveResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var typeMetadata=this._reflector.annotations(resolveForwardRef(type));if(typeMetadata){var metadata=findLast(typeMetadata,isDirectiveMetadata);if(metadata){var propertyMetadata=this._reflector.propMetadata(type);var guards=this._reflector.guards(type);return this._mergeWithPropertyMetadata(metadata,propertyMetadata,guards,type);}}if(throwIfNotFound){throw new Error("No Directive annotation found on "+stringify(type));}return null;};DirectiveResolver.prototype._mergeWithPropertyMetadata=function(dm,propertyMetadata,guards,directiveType){var inputs=[];var outputs=[];var host={};var queries={};Object.keys(propertyMetadata).forEach(function(propName){var input=findLast(propertyMetadata[propName],function(a){return createInput.isTypeOf(a);});if(input){if(input.bindingPropertyName){inputs.push(propName+": "+input.bindingPropertyName);}else{inputs.push(propName);}}var output=findLast(propertyMetadata[propName],function(a){return createOutput.isTypeOf(a);});if(output){if(output.bindingPropertyName){outputs.push(propName+": "+output.bindingPropertyName);}else{outputs.push(propName);}}var hostBindings=propertyMetadata[propName].filter(function(a){return createHostBinding.isTypeOf(a);});hostBindings.forEach(function(hostBinding){if(hostBinding.hostPropertyName){var startWith=hostBinding.hostPropertyName[0];if(startWith==='('){throw new Error("@HostBinding can not bind to events. Use @HostListener instead.");}else if(startWith==='['){throw new Error("@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.");}host["["+hostBinding.hostPropertyName+"]"]=propName;}else{host["["+propName+"]"]=propName;}});var hostListeners=propertyMetadata[propName].filter(function(a){return createHostListener.isTypeOf(a);});hostListeners.forEach(function(hostListener){var args=hostListener.args||[];host["("+hostListener.eventName+")"]=propName+"("+args.join(',')+")";});var query=findLast(propertyMetadata[propName],function(a){return QUERY_METADATA_IDENTIFIERS.some(function(i){return i.isTypeOf(a);});});if(query){queries[propName]=query;}});return this._merge(dm,inputs,outputs,host,queries,guards,directiveType);};DirectiveResolver.prototype._extractPublicName=function(def){return splitAtColon(def,[null,def])[1].trim();};DirectiveResolver.prototype._dedupeBindings=function(bindings){var names=new Set();var publicNames=new Set();var reversedResult=[];// go last to first to allow later entries to overwrite previous entries
for(var i=bindings.length-1;i>=0;i--){var binding=bindings[i];var name_1=this._extractPublicName(binding);publicNames.add(name_1);if(!names.has(name_1)){names.add(name_1);reversedResult.push(binding);}}return reversedResult.reverse();};DirectiveResolver.prototype._merge=function(directive,inputs,outputs,host,queries,guards,directiveType){var mergedInputs=this._dedupeBindings(directive.inputs?directive.inputs.concat(inputs):inputs);var mergedOutputs=this._dedupeBindings(directive.outputs?directive.outputs.concat(outputs):outputs);var mergedHost=directive.host?Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},directive.host,host):host;var mergedQueries=directive.queries?Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},directive.queries,queries):queries;if(createComponent.isTypeOf(directive)){var comp=directive;return createComponent({selector:comp.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:comp.exportAs,moduleId:comp.moduleId,queries:mergedQueries,changeDetection:comp.changeDetection,providers:comp.providers,viewProviders:comp.viewProviders,entryComponents:comp.entryComponents,template:comp.template,templateUrl:comp.templateUrl,styles:comp.styles,styleUrls:comp.styleUrls,encapsulation:comp.encapsulation,animations:comp.animations,interpolation:comp.interpolation,preserveWhitespaces:directive.preserveWhitespaces});}else{return createDirective({selector:directive.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:directive.exportAs,queries:mergedQueries,providers:directive.providers,guards:guards});}};return DirectiveResolver;}();function isDirectiveMetadata(type){return createDirective.isTypeOf(type)||createComponent.isTypeOf(type);}function findLast(arr,condition){for(var i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var $EOF=0;var $TAB=9;var $LF=10;var $VTAB=11;var $FF=12;var $CR=13;var $SPACE=32;var $BANG=33;var $DQ=34;var $HASH=35;var $$=36;var $PERCENT=37;var $AMPERSAND=38;var $SQ=39;var $LPAREN=40;var $RPAREN=41;var $STAR=42;var $PLUS=43;var $COMMA=44;var $MINUS=45;var $PERIOD=46;var $SLASH=47;var $COLON=58;var $SEMICOLON=59;var $LT=60;var $EQ=61;var $GT=62;var $QUESTION=63;var $0=48;var $9=57;var $A=65;var $E=69;var $F=70;var $X=88;var $Z=90;var $LBRACKET=91;var $BACKSLASH=92;var $RBRACKET=93;var $CARET=94;var $_=95;var $a=97;var $e=101;var $f=102;var $n=110;var $r=114;var $t=116;var $u=117;var $v=118;var $x=120;var $z=122;var $LBRACE=123;var $BAR=124;var $RBRACE=125;var $NBSP=160;var $BT=96;function isWhitespace(code){return code>=$TAB&&code<=$SPACE||code==$NBSP;}function isDigit(code){return $0<=code&&code<=$9;}function isAsciiLetter(code){return code>=$a&&code<=$z||code>=$A&&code<=$Z;}function isAsciiHexDigit(code){return code>=$a&&code<=$f||code>=$A&&code<=$F||isDigit(code);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TokenType;(function(TokenType){TokenType[TokenType["Character"]=0]="Character";TokenType[TokenType["Identifier"]=1]="Identifier";TokenType[TokenType["Keyword"]=2]="Keyword";TokenType[TokenType["String"]=3]="String";TokenType[TokenType["Operator"]=4]="Operator";TokenType[TokenType["Number"]=5]="Number";TokenType[TokenType["Error"]=6]="Error";})(TokenType||(TokenType={}));var KEYWORDS=['var','let','as','null','undefined','true','false','if','else','this'];var Lexer=/** @class */function(){function Lexer(){}Lexer.prototype.tokenize=function(text){var scanner=new _Scanner(text);var tokens=[];var token=scanner.scanToken();while(token!=null){tokens.push(token);token=scanner.scanToken();}return tokens;};return Lexer;}();var Token=/** @class */function(){function Token(index,type,numValue,strValue){this.index=index;this.type=type;this.numValue=numValue;this.strValue=strValue;}Token.prototype.isCharacter=function(code){return this.type==TokenType.Character&&this.numValue==code;};Token.prototype.isNumber=function(){return this.type==TokenType.Number;};Token.prototype.isString=function(){return this.type==TokenType.String;};Token.prototype.isOperator=function(operater){return this.type==TokenType.Operator&&this.strValue==operater;};Token.prototype.isIdentifier=function(){return this.type==TokenType.Identifier;};Token.prototype.isKeyword=function(){return this.type==TokenType.Keyword;};Token.prototype.isKeywordLet=function(){return this.type==TokenType.Keyword&&this.strValue=='let';};Token.prototype.isKeywordAs=function(){return this.type==TokenType.Keyword&&this.strValue=='as';};Token.prototype.isKeywordNull=function(){return this.type==TokenType.Keyword&&this.strValue=='null';};Token.prototype.isKeywordUndefined=function(){return this.type==TokenType.Keyword&&this.strValue=='undefined';};Token.prototype.isKeywordTrue=function(){return this.type==TokenType.Keyword&&this.strValue=='true';};Token.prototype.isKeywordFalse=function(){return this.type==TokenType.Keyword&&this.strValue=='false';};Token.prototype.isKeywordThis=function(){return this.type==TokenType.Keyword&&this.strValue=='this';};Token.prototype.isError=function(){return this.type==TokenType.Error;};Token.prototype.toNumber=function(){return this.type==TokenType.Number?this.numValue:-1;};Token.prototype.toString=function(){switch(this.type){case TokenType.Character:case TokenType.Identifier:case TokenType.Keyword:case TokenType.Operator:case TokenType.String:case TokenType.Error:return this.strValue;case TokenType.Number:return this.numValue.toString();default:return null;}};return Token;}();function newCharacterToken(index,code){return new Token(index,TokenType.Character,code,String.fromCharCode(code));}function newIdentifierToken(index,text){return new Token(index,TokenType.Identifier,0,text);}function newKeywordToken(index,text){return new Token(index,TokenType.Keyword,0,text);}function newOperatorToken(index,text){return new Token(index,TokenType.Operator,0,text);}function newStringToken(index,text){return new Token(index,TokenType.String,0,text);}function newNumberToken(index,n){return new Token(index,TokenType.Number,n,'');}function newErrorToken(index,message){return new Token(index,TokenType.Error,0,message);}var EOF=new Token(-1,TokenType.Character,0,'');var _Scanner=/** @class */function(){function _Scanner(input){this.input=input;this.peek=0;this.index=-1;this.length=input.length;this.advance();}_Scanner.prototype.advance=function(){this.peek=++this.index>=this.length?$EOF:this.input.charCodeAt(this.index);};_Scanner.prototype.scanToken=function(){var input=this.input,length=this.length;var peek=this.peek,index=this.index;// Skip whitespace.
while(peek<=$SPACE){if(++index>=length){peek=$EOF;break;}else{peek=input.charCodeAt(index);}}this.peek=peek;this.index=index;if(index>=length){return null;}// Handle identifiers and numbers.
if(isIdentifierStart(peek))return this.scanIdentifier();if(isDigit(peek))return this.scanNumber(index);var start=index;switch(peek){case $PERIOD:this.advance();return isDigit(this.peek)?this.scanNumber(start):newCharacterToken(start,$PERIOD);case $LPAREN:case $RPAREN:case $LBRACE:case $RBRACE:case $LBRACKET:case $RBRACKET:case $COMMA:case $COLON:case $SEMICOLON:return this.scanCharacter(start,peek);case $SQ:case $DQ:return this.scanString();case $HASH:case $PLUS:case $MINUS:case $STAR:case $SLASH:case $PERCENT:case $CARET:return this.scanOperator(start,String.fromCharCode(peek));case $QUESTION:return this.scanComplexOperator(start,'?',$PERIOD,'.');case $LT:case $GT:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=');case $BANG:case $EQ:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=',$EQ,'=');case $AMPERSAND:return this.scanComplexOperator(start,'&',$AMPERSAND,'&');case $BAR:return this.scanComplexOperator(start,'|',$BAR,'|');case $NBSP:while(isWhitespace(this.peek)){this.advance();}return this.scanToken();}this.advance();return this.error("Unexpected character ["+String.fromCharCode(peek)+"]",0);};_Scanner.prototype.scanCharacter=function(start,code){this.advance();return newCharacterToken(start,code);};_Scanner.prototype.scanOperator=function(start,str){this.advance();return newOperatorToken(start,str);};/**
     * Tokenize a 2/3 char long operator
     *
     * @param start start index in the expression
     * @param one first symbol (always part of the operator)
     * @param twoCode code point for the second symbol
     * @param two second symbol (part of the operator when the second code point matches)
     * @param threeCode code point for the third symbol
     * @param three third symbol (part of the operator when provided and matches source expression)
     */_Scanner.prototype.scanComplexOperator=function(start,one,twoCode,two,threeCode,three){this.advance();var str=one;if(this.peek==twoCode){this.advance();str+=two;}if(threeCode!=null&&this.peek==threeCode){this.advance();str+=three;}return newOperatorToken(start,str);};_Scanner.prototype.scanIdentifier=function(){var start=this.index;this.advance();while(isIdentifierPart(this.peek)){this.advance();}var str=this.input.substring(start,this.index);return KEYWORDS.indexOf(str)>-1?newKeywordToken(start,str):newIdentifierToken(start,str);};_Scanner.prototype.scanNumber=function(start){var simple=this.index===start;this.advance();// Skip initial digit.
while(true){if(isDigit(this.peek));else if(this.peek==$PERIOD){simple=false;}else if(isExponentStart(this.peek)){this.advance();if(isExponentSign(this.peek))this.advance();if(!isDigit(this.peek))return this.error('Invalid exponent',-1);simple=false;}else{break;}this.advance();}var str=this.input.substring(start,this.index);var value=simple?parseIntAutoRadix(str):parseFloat(str);return newNumberToken(start,value);};_Scanner.prototype.scanString=function(){var start=this.index;var quote=this.peek;this.advance();// Skip initial quote.
var buffer='';var marker=this.index;var input=this.input;while(this.peek!=quote){if(this.peek==$BACKSLASH){buffer+=input.substring(marker,this.index);this.advance();var unescapedCode=void 0;// Workaround for TS2.1-introduced type strictness
this.peek=this.peek;if(this.peek==$u){// 4 character hex code for unicode character.
var hex=input.substring(this.index+1,this.index+5);if(/^[0-9a-f]+$/i.test(hex)){unescapedCode=parseInt(hex,16);}else{return this.error("Invalid unicode escape [\\u"+hex+"]",0);}for(var i=0;i<5;i++){this.advance();}}else{unescapedCode=unescape(this.peek);this.advance();}buffer+=String.fromCharCode(unescapedCode);marker=this.index;}else if(this.peek==$EOF){return this.error('Unterminated quote',0);}else{this.advance();}}var last=input.substring(marker,this.index);this.advance();// Skip terminating quote.
return newStringToken(start,buffer+last);};_Scanner.prototype.error=function(message,offset){var position=this.index+offset;return newErrorToken(position,"Lexer Error: "+message+" at column "+position+" in expression ["+this.input+"]");};return _Scanner;}();function isIdentifierStart(code){return $a<=code&&code<=$z||$A<=code&&code<=$Z||code==$_||code==$$;}function isIdentifier(input){if(input.length==0)return false;var scanner=new _Scanner(input);if(!isIdentifierStart(scanner.peek))return false;scanner.advance();while(scanner.peek!==$EOF){if(!isIdentifierPart(scanner.peek))return false;scanner.advance();}return true;}function isIdentifierPart(code){return isAsciiLetter(code)||isDigit(code)||code==$_||code==$$;}function isExponentStart(code){return code==$e||code==$E;}function isExponentSign(code){return code==$MINUS||code==$PLUS;}function isQuote(code){return code===$SQ||code===$DQ||code===$BT;}function unescape(code){switch(code){case $n:return $LF;case $f:return $FF;case $r:return $CR;case $t:return $TAB;case $v:return $VTAB;default:return code;}}function parseIntAutoRadix(text){var result=parseInt(text);if(isNaN(result)){throw new Error('Invalid integer literal when parsing '+text);}return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ParserError=/** @class */function(){function ParserError(message,input,errLocation,ctxLocation){this.input=input;this.errLocation=errLocation;this.ctxLocation=ctxLocation;this.message="Parser Error: "+message+" "+errLocation+" ["+input+"] in "+ctxLocation;}return ParserError;}();var ParseSpan=/** @class */function(){function ParseSpan(start,end){this.start=start;this.end=end;}return ParseSpan;}();var AST=/** @class */function(){function AST(span){this.span=span;}AST.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return null;};AST.prototype.toString=function(){return'AST';};return AST;}();/**
 * Represents a quoted expression of the form:
 *
 * quote = prefix `:` uninterpretedExpression
 * prefix = identifier
 * uninterpretedExpression = arbitrary string
 *
 * A quoted expression is meant to be pre-processed by an AST transformer that
 * converts it into another AST that no longer contains quoted expressions.
 * It is meant to allow third-party developers to extend Angular template
 * expression language. The `uninterpretedExpression` part of the quote is
 * therefore not interpreted by the Angular's own expression parser.
 */var Quote=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Quote,_super);function Quote(span,prefix,uninterpretedExpression,location){var _this=_super.call(this,span)||this;_this.prefix=prefix;_this.uninterpretedExpression=uninterpretedExpression;_this.location=location;return _this;}Quote.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitQuote(this,context);};Quote.prototype.toString=function(){return'Quote';};return Quote;}(AST);var EmptyExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(EmptyExpr,_super);function EmptyExpr(){return _super!==null&&_super.apply(this,arguments)||this;}EmptyExpr.prototype.visit=function(visitor,context){if(context===void 0){context=null;}// do nothing
};return EmptyExpr;}(AST);var ImplicitReceiver=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ImplicitReceiver,_super);function ImplicitReceiver(){return _super!==null&&_super.apply(this,arguments)||this;}ImplicitReceiver.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitImplicitReceiver(this,context);};return ImplicitReceiver;}(AST);/**
 * Multiple expressions separated by a semicolon.
 */var Chain=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Chain,_super);function Chain(span,expressions){var _this=_super.call(this,span)||this;_this.expressions=expressions;return _this;}Chain.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitChain(this,context);};return Chain;}(AST);var Conditional=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Conditional,_super);function Conditional(span,condition,trueExp,falseExp){var _this=_super.call(this,span)||this;_this.condition=condition;_this.trueExp=trueExp;_this.falseExp=falseExp;return _this;}Conditional.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitConditional(this,context);};return Conditional;}(AST);var PropertyRead=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PropertyRead,_super);function PropertyRead(span,receiver,name){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;return _this;}PropertyRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPropertyRead(this,context);};return PropertyRead;}(AST);var PropertyWrite=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PropertyWrite,_super);function PropertyWrite(span,receiver,name,value){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;_this.value=value;return _this;}PropertyWrite.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPropertyWrite(this,context);};return PropertyWrite;}(AST);var SafePropertyRead=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SafePropertyRead,_super);function SafePropertyRead(span,receiver,name){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;return _this;}SafePropertyRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitSafePropertyRead(this,context);};return SafePropertyRead;}(AST);var KeyedRead=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(KeyedRead,_super);function KeyedRead(span,obj,key){var _this=_super.call(this,span)||this;_this.obj=obj;_this.key=key;return _this;}KeyedRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitKeyedRead(this,context);};return KeyedRead;}(AST);var KeyedWrite=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(KeyedWrite,_super);function KeyedWrite(span,obj,key,value){var _this=_super.call(this,span)||this;_this.obj=obj;_this.key=key;_this.value=value;return _this;}KeyedWrite.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitKeyedWrite(this,context);};return KeyedWrite;}(AST);var BindingPipe=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(BindingPipe,_super);function BindingPipe(span,exp,name,args){var _this=_super.call(this,span)||this;_this.exp=exp;_this.name=name;_this.args=args;return _this;}BindingPipe.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPipe(this,context);};return BindingPipe;}(AST);var LiteralPrimitive=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LiteralPrimitive,_super);function LiteralPrimitive(span,value){var _this=_super.call(this,span)||this;_this.value=value;return _this;}LiteralPrimitive.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralPrimitive(this,context);};return LiteralPrimitive;}(AST);var LiteralArray=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LiteralArray,_super);function LiteralArray(span,expressions){var _this=_super.call(this,span)||this;_this.expressions=expressions;return _this;}LiteralArray.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralArray(this,context);};return LiteralArray;}(AST);var LiteralMap=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LiteralMap,_super);function LiteralMap(span,keys,values){var _this=_super.call(this,span)||this;_this.keys=keys;_this.values=values;return _this;}LiteralMap.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralMap(this,context);};return LiteralMap;}(AST);var Interpolation=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Interpolation,_super);function Interpolation(span,strings,expressions){var _this=_super.call(this,span)||this;_this.strings=strings;_this.expressions=expressions;return _this;}Interpolation.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitInterpolation(this,context);};return Interpolation;}(AST);var Binary=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Binary,_super);function Binary(span,operation,left,right){var _this=_super.call(this,span)||this;_this.operation=operation;_this.left=left;_this.right=right;return _this;}Binary.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitBinary(this,context);};return Binary;}(AST);var PrefixNot=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PrefixNot,_super);function PrefixNot(span,expression){var _this=_super.call(this,span)||this;_this.expression=expression;return _this;}PrefixNot.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPrefixNot(this,context);};return PrefixNot;}(AST);var NonNullAssert=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NonNullAssert,_super);function NonNullAssert(span,expression){var _this=_super.call(this,span)||this;_this.expression=expression;return _this;}NonNullAssert.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitNonNullAssert(this,context);};return NonNullAssert;}(AST);var MethodCall=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MethodCall,_super);function MethodCall(span,receiver,name,args){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;_this.args=args;return _this;}MethodCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitMethodCall(this,context);};return MethodCall;}(AST);var SafeMethodCall=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SafeMethodCall,_super);function SafeMethodCall(span,receiver,name,args){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;_this.args=args;return _this;}SafeMethodCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitSafeMethodCall(this,context);};return SafeMethodCall;}(AST);var FunctionCall=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FunctionCall,_super);function FunctionCall(span,target,args){var _this=_super.call(this,span)||this;_this.target=target;_this.args=args;return _this;}FunctionCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitFunctionCall(this,context);};return FunctionCall;}(AST);var ASTWithSource=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ASTWithSource,_super);function ASTWithSource(ast,source,location,errors){var _this=_super.call(this,new ParseSpan(0,source==null?0:source.length))||this;_this.ast=ast;_this.source=source;_this.location=location;_this.errors=errors;return _this;}ASTWithSource.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return this.ast.visit(visitor,context);};ASTWithSource.prototype.toString=function(){return this.source+" in "+this.location;};return ASTWithSource;}(AST);var TemplateBinding=/** @class */function(){function TemplateBinding(span,key,keyIsVar,name,expression){this.span=span;this.key=key;this.keyIsVar=keyIsVar;this.name=name;this.expression=expression;}return TemplateBinding;}();var NullAstVisitor=/** @class */function(){function NullAstVisitor(){}NullAstVisitor.prototype.visitBinary=function(ast,context){};NullAstVisitor.prototype.visitChain=function(ast,context){};NullAstVisitor.prototype.visitConditional=function(ast,context){};NullAstVisitor.prototype.visitFunctionCall=function(ast,context){};NullAstVisitor.prototype.visitImplicitReceiver=function(ast,context){};NullAstVisitor.prototype.visitInterpolation=function(ast,context){};NullAstVisitor.prototype.visitKeyedRead=function(ast,context){};NullAstVisitor.prototype.visitKeyedWrite=function(ast,context){};NullAstVisitor.prototype.visitLiteralArray=function(ast,context){};NullAstVisitor.prototype.visitLiteralMap=function(ast,context){};NullAstVisitor.prototype.visitLiteralPrimitive=function(ast,context){};NullAstVisitor.prototype.visitMethodCall=function(ast,context){};NullAstVisitor.prototype.visitPipe=function(ast,context){};NullAstVisitor.prototype.visitPrefixNot=function(ast,context){};NullAstVisitor.prototype.visitNonNullAssert=function(ast,context){};NullAstVisitor.prototype.visitPropertyRead=function(ast,context){};NullAstVisitor.prototype.visitPropertyWrite=function(ast,context){};NullAstVisitor.prototype.visitQuote=function(ast,context){};NullAstVisitor.prototype.visitSafeMethodCall=function(ast,context){};NullAstVisitor.prototype.visitSafePropertyRead=function(ast,context){};return NullAstVisitor;}();var RecursiveAstVisitor=/** @class */function(){function RecursiveAstVisitor(){}RecursiveAstVisitor.prototype.visitBinary=function(ast,context){ast.left.visit(this);ast.right.visit(this);return null;};RecursiveAstVisitor.prototype.visitChain=function(ast,context){return this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitConditional=function(ast,context){ast.condition.visit(this);ast.trueExp.visit(this);ast.falseExp.visit(this);return null;};RecursiveAstVisitor.prototype.visitPipe=function(ast,context){ast.exp.visit(this);this.visitAll(ast.args,context);return null;};RecursiveAstVisitor.prototype.visitFunctionCall=function(ast,context){ast.target.visit(this);this.visitAll(ast.args,context);return null;};RecursiveAstVisitor.prototype.visitImplicitReceiver=function(ast,context){return null;};RecursiveAstVisitor.prototype.visitInterpolation=function(ast,context){return this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitKeyedRead=function(ast,context){ast.obj.visit(this);ast.key.visit(this);return null;};RecursiveAstVisitor.prototype.visitKeyedWrite=function(ast,context){ast.obj.visit(this);ast.key.visit(this);ast.value.visit(this);return null;};RecursiveAstVisitor.prototype.visitLiteralArray=function(ast,context){return this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitLiteralMap=function(ast,context){return this.visitAll(ast.values,context);};RecursiveAstVisitor.prototype.visitLiteralPrimitive=function(ast,context){return null;};RecursiveAstVisitor.prototype.visitMethodCall=function(ast,context){ast.receiver.visit(this);return this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitPrefixNot=function(ast,context){ast.expression.visit(this);return null;};RecursiveAstVisitor.prototype.visitNonNullAssert=function(ast,context){ast.expression.visit(this);return null;};RecursiveAstVisitor.prototype.visitPropertyRead=function(ast,context){ast.receiver.visit(this);return null;};RecursiveAstVisitor.prototype.visitPropertyWrite=function(ast,context){ast.receiver.visit(this);ast.value.visit(this);return null;};RecursiveAstVisitor.prototype.visitSafePropertyRead=function(ast,context){ast.receiver.visit(this);return null;};RecursiveAstVisitor.prototype.visitSafeMethodCall=function(ast,context){ast.receiver.visit(this);return this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitAll=function(asts,context){var _this=this;asts.forEach(function(ast){return ast.visit(_this,context);});return null;};RecursiveAstVisitor.prototype.visitQuote=function(ast,context){return null;};return RecursiveAstVisitor;}();var AstTransformer=/** @class */function(){function AstTransformer(){}AstTransformer.prototype.visitImplicitReceiver=function(ast,context){return ast;};AstTransformer.prototype.visitInterpolation=function(ast,context){return new Interpolation(ast.span,ast.strings,this.visitAll(ast.expressions));};AstTransformer.prototype.visitLiteralPrimitive=function(ast,context){return new LiteralPrimitive(ast.span,ast.value);};AstTransformer.prototype.visitPropertyRead=function(ast,context){return new PropertyRead(ast.span,ast.receiver.visit(this),ast.name);};AstTransformer.prototype.visitPropertyWrite=function(ast,context){return new PropertyWrite(ast.span,ast.receiver.visit(this),ast.name,ast.value.visit(this));};AstTransformer.prototype.visitSafePropertyRead=function(ast,context){return new SafePropertyRead(ast.span,ast.receiver.visit(this),ast.name);};AstTransformer.prototype.visitMethodCall=function(ast,context){return new MethodCall(ast.span,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitSafeMethodCall=function(ast,context){return new SafeMethodCall(ast.span,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitFunctionCall=function(ast,context){return new FunctionCall(ast.span,ast.target.visit(this),this.visitAll(ast.args));};AstTransformer.prototype.visitLiteralArray=function(ast,context){return new LiteralArray(ast.span,this.visitAll(ast.expressions));};AstTransformer.prototype.visitLiteralMap=function(ast,context){return new LiteralMap(ast.span,ast.keys,this.visitAll(ast.values));};AstTransformer.prototype.visitBinary=function(ast,context){return new Binary(ast.span,ast.operation,ast.left.visit(this),ast.right.visit(this));};AstTransformer.prototype.visitPrefixNot=function(ast,context){return new PrefixNot(ast.span,ast.expression.visit(this));};AstTransformer.prototype.visitNonNullAssert=function(ast,context){return new NonNullAssert(ast.span,ast.expression.visit(this));};AstTransformer.prototype.visitConditional=function(ast,context){return new Conditional(ast.span,ast.condition.visit(this),ast.trueExp.visit(this),ast.falseExp.visit(this));};AstTransformer.prototype.visitPipe=function(ast,context){return new BindingPipe(ast.span,ast.exp.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitKeyedRead=function(ast,context){return new KeyedRead(ast.span,ast.obj.visit(this),ast.key.visit(this));};AstTransformer.prototype.visitKeyedWrite=function(ast,context){return new KeyedWrite(ast.span,ast.obj.visit(this),ast.key.visit(this),ast.value.visit(this));};AstTransformer.prototype.visitAll=function(asts){var res=new Array(asts.length);for(var i=0;i<asts.length;++i){res[i]=asts[i].visit(this);}return res;};AstTransformer.prototype.visitChain=function(ast,context){return new Chain(ast.span,this.visitAll(ast.expressions));};AstTransformer.prototype.visitQuote=function(ast,context){return new Quote(ast.span,ast.prefix,ast.uninterpretedExpression,ast.location);};return AstTransformer;}();// A transformer that only creates new nodes if the transformer makes a change or
// a change is made a child node.
var AstMemoryEfficientTransformer=/** @class */function(){function AstMemoryEfficientTransformer(){}AstMemoryEfficientTransformer.prototype.visitImplicitReceiver=function(ast,context){return ast;};AstMemoryEfficientTransformer.prototype.visitInterpolation=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions)return new Interpolation(ast.span,ast.strings,expressions);return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive=function(ast,context){return ast;};AstMemoryEfficientTransformer.prototype.visitPropertyRead=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new PropertyRead(ast.span,receiver,ast.name);}return ast;};AstMemoryEfficientTransformer.prototype.visitPropertyWrite=function(ast,context){var receiver=ast.receiver.visit(this);var value=ast.value.visit(this);if(receiver!==ast.receiver||value!==ast.value){return new PropertyWrite(ast.span,receiver,ast.name,value);}return ast;};AstMemoryEfficientTransformer.prototype.visitSafePropertyRead=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new SafePropertyRead(ast.span,receiver,ast.name);}return ast;};AstMemoryEfficientTransformer.prototype.visitMethodCall=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new MethodCall(ast.span,receiver,ast.name,this.visitAll(ast.args));}return ast;};AstMemoryEfficientTransformer.prototype.visitSafeMethodCall=function(ast,context){var receiver=ast.receiver.visit(this);var args=this.visitAll(ast.args);if(receiver!==ast.receiver||args!==ast.args){return new SafeMethodCall(ast.span,receiver,ast.name,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitFunctionCall=function(ast,context){var target=ast.target&&ast.target.visit(this);var args=this.visitAll(ast.args);if(target!==ast.target||args!==ast.args){return new FunctionCall(ast.span,target,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralArray=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions){return new LiteralArray(ast.span,expressions);}return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralMap=function(ast,context){var values=this.visitAll(ast.values);if(values!==ast.values){return new LiteralMap(ast.span,ast.keys,values);}return ast;};AstMemoryEfficientTransformer.prototype.visitBinary=function(ast,context){var left=ast.left.visit(this);var right=ast.right.visit(this);if(left!==ast.left||right!==ast.right){return new Binary(ast.span,ast.operation,left,right);}return ast;};AstMemoryEfficientTransformer.prototype.visitPrefixNot=function(ast,context){var expression=ast.expression.visit(this);if(expression!==ast.expression){return new PrefixNot(ast.span,expression);}return ast;};AstMemoryEfficientTransformer.prototype.visitNonNullAssert=function(ast,context){var expression=ast.expression.visit(this);if(expression!==ast.expression){return new NonNullAssert(ast.span,expression);}return ast;};AstMemoryEfficientTransformer.prototype.visitConditional=function(ast,context){var condition=ast.condition.visit(this);var trueExp=ast.trueExp.visit(this);var falseExp=ast.falseExp.visit(this);if(condition!==ast.condition||trueExp!==ast.trueExp||falseExp!==falseExp){return new Conditional(ast.span,condition,trueExp,falseExp);}return ast;};AstMemoryEfficientTransformer.prototype.visitPipe=function(ast,context){var exp=ast.exp.visit(this);var args=this.visitAll(ast.args);if(exp!==ast.exp||args!==ast.args){return new BindingPipe(ast.span,exp,ast.name,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitKeyedRead=function(ast,context){var obj=ast.obj.visit(this);var key=ast.key.visit(this);if(obj!==ast.obj||key!==ast.key){return new KeyedRead(ast.span,obj,key);}return ast;};AstMemoryEfficientTransformer.prototype.visitKeyedWrite=function(ast,context){var obj=ast.obj.visit(this);var key=ast.key.visit(this);var value=ast.value.visit(this);if(obj!==ast.obj||key!==ast.key||value!==ast.value){return new KeyedWrite(ast.span,obj,key,value);}return ast;};AstMemoryEfficientTransformer.prototype.visitAll=function(asts){var res=new Array(asts.length);var modified=false;for(var i=0;i<asts.length;++i){var original=asts[i];var value=original.visit(this);res[i]=value;modified=modified||value!==original;}return modified?res:asts;};AstMemoryEfficientTransformer.prototype.visitChain=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions){return new Chain(ast.span,expressions);}return ast;};AstMemoryEfficientTransformer.prototype.visitQuote=function(ast,context){return ast;};return AstMemoryEfficientTransformer;}();function visitAstChildren(ast,visitor,context){function visit(ast){visitor.visit&&visitor.visit(ast,context)||ast.visit(visitor,context);}function visitAll(asts){asts.forEach(visit);}ast.visit({visitBinary:function visitBinary(ast){visit(ast.left);visit(ast.right);},visitChain:function visitChain(ast){visitAll(ast.expressions);},visitConditional:function visitConditional(ast){visit(ast.condition);visit(ast.trueExp);visit(ast.falseExp);},visitFunctionCall:function visitFunctionCall(ast){if(ast.target){visit(ast.target);}visitAll(ast.args);},visitImplicitReceiver:function visitImplicitReceiver(ast){},visitInterpolation:function visitInterpolation(ast){visitAll(ast.expressions);},visitKeyedRead:function visitKeyedRead(ast){visit(ast.obj);visit(ast.key);},visitKeyedWrite:function visitKeyedWrite(ast){visit(ast.obj);visit(ast.key);visit(ast.obj);},visitLiteralArray:function visitLiteralArray(ast){visitAll(ast.expressions);},visitLiteralMap:function visitLiteralMap(ast){},visitLiteralPrimitive:function visitLiteralPrimitive(ast){},visitMethodCall:function visitMethodCall(ast){visit(ast.receiver);visitAll(ast.args);},visitPipe:function visitPipe(ast){visit(ast.exp);visitAll(ast.args);},visitPrefixNot:function visitPrefixNot(ast){visit(ast.expression);},visitNonNullAssert:function visitNonNullAssert(ast){visit(ast.expression);},visitPropertyRead:function visitPropertyRead(ast){visit(ast.receiver);},visitPropertyWrite:function visitPropertyWrite(ast){visit(ast.receiver);visit(ast.value);},visitQuote:function visitQuote(ast){},visitSafeMethodCall:function visitSafeMethodCall(ast){visit(ast.receiver);visitAll(ast.args);},visitSafePropertyRead:function visitSafePropertyRead(ast){visit(ast.receiver);}});}// Bindings
var ParsedProperty=/** @class */function(){function ParsedProperty(name,expression,type,sourceSpan){this.name=name;this.expression=expression;this.type=type;this.sourceSpan=sourceSpan;this.isLiteral=this.type===ParsedPropertyType.LITERAL_ATTR;this.isAnimation=this.type===ParsedPropertyType.ANIMATION;}return ParsedProperty;}();var ParsedPropertyType;(function(ParsedPropertyType){ParsedPropertyType[ParsedPropertyType["DEFAULT"]=0]="DEFAULT";ParsedPropertyType[ParsedPropertyType["LITERAL_ATTR"]=1]="LITERAL_ATTR";ParsedPropertyType[ParsedPropertyType["ANIMATION"]=2]="ANIMATION";})(ParsedPropertyType||(ParsedPropertyType={}));var ParsedEvent=/** @class */function(){// Regular events have a target
// Animation events have a phase
function ParsedEvent(name,targetOrPhase,type,handler,sourceSpan){this.name=name;this.targetOrPhase=targetOrPhase;this.type=type;this.handler=handler;this.sourceSpan=sourceSpan;}return ParsedEvent;}();var ParsedVariable=/** @class */function(){function ParsedVariable(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}return ParsedVariable;}();var BoundElementProperty=/** @class */function(){function BoundElementProperty(name,type,securityContext,value,unit,sourceSpan){this.name=name;this.type=type;this.securityContext=securityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;}return BoundElementProperty;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var SplitInterpolation=/** @class */function(){function SplitInterpolation(strings,expressions,offsets){this.strings=strings;this.expressions=expressions;this.offsets=offsets;}return SplitInterpolation;}();var TemplateBindingParseResult=/** @class */function(){function TemplateBindingParseResult(templateBindings,warnings,errors){this.templateBindings=templateBindings;this.warnings=warnings;this.errors=errors;}return TemplateBindingParseResult;}();function _createInterpolateRegExp(config){var pattern=escapeRegExp(config.start)+'([\\s\\S]*?)'+escapeRegExp(config.end);return new RegExp(pattern,'g');}var Parser=/** @class */function(){function Parser(_lexer){this._lexer=_lexer;this.errors=[];}Parser.prototype.parseAction=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}this._checkNoInterpolation(input,location,interpolationConfig);var sourceToLex=this._stripComments(input);var tokens=this._lexer.tokenize(this._stripComments(input));var ast=new _ParseAST(input,location,tokens,sourceToLex.length,true,this.errors,input.length-sourceToLex.length).parseChain();return new ASTWithSource(ast,input,location,this.errors);};Parser.prototype.parseBinding=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var ast=this._parseBindingAst(input,location,interpolationConfig);return new ASTWithSource(ast,input,location,this.errors);};Parser.prototype.parseSimpleBinding=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var ast=this._parseBindingAst(input,location,interpolationConfig);var errors=SimpleExpressionChecker.check(ast);if(errors.length>0){this._reportError("Host binding expression cannot contain "+errors.join(' '),input,location);}return new ASTWithSource(ast,input,location,this.errors);};Parser.prototype._reportError=function(message,input,errLocation,ctxLocation){this.errors.push(new ParserError(message,input,errLocation,ctxLocation));};Parser.prototype._parseBindingAst=function(input,location,interpolationConfig){// Quotes expressions use 3rd-party expression language. We don't want to use
// our lexer or parser for that, so we check for that ahead of time.
var quote=this._parseQuote(input,location);if(quote!=null){return quote;}this._checkNoInterpolation(input,location,interpolationConfig);var sourceToLex=this._stripComments(input);var tokens=this._lexer.tokenize(sourceToLex);return new _ParseAST(input,location,tokens,sourceToLex.length,false,this.errors,input.length-sourceToLex.length).parseChain();};Parser.prototype._parseQuote=function(input,location){if(input==null)return null;var prefixSeparatorIndex=input.indexOf(':');if(prefixSeparatorIndex==-1)return null;var prefix=input.substring(0,prefixSeparatorIndex).trim();if(!isIdentifier(prefix))return null;var uninterpretedExpression=input.substring(prefixSeparatorIndex+1);return new Quote(new ParseSpan(0,input.length),prefix,uninterpretedExpression,location);};Parser.prototype.parseTemplateBindings=function(tplKey,tplValue,location){var tokens=this._lexer.tokenize(tplValue);return new _ParseAST(tplValue,location,tokens,tplValue.length,false,this.errors,0).parseTemplateBindings(tplKey);};Parser.prototype.parseInterpolation=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var split=this.splitInterpolation(input,location,interpolationConfig);if(split==null)return null;var expressions=[];for(var i=0;i<split.expressions.length;++i){var expressionText=split.expressions[i];var sourceToLex=this._stripComments(expressionText);var tokens=this._lexer.tokenize(sourceToLex);var ast=new _ParseAST(input,location,tokens,sourceToLex.length,false,this.errors,split.offsets[i]+(expressionText.length-sourceToLex.length)).parseChain();expressions.push(ast);}return new ASTWithSource(new Interpolation(new ParseSpan(0,input==null?0:input.length),split.strings,expressions),input,location,this.errors);};Parser.prototype.splitInterpolation=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var regexp=_createInterpolateRegExp(interpolationConfig);var parts=input.split(regexp);if(parts.length<=1){return null;}var strings=[];var expressions=[];var offsets=[];var offset=0;for(var i=0;i<parts.length;i++){var part=parts[i];if(i%2===0){// fixed string
strings.push(part);offset+=part.length;}else if(part.trim().length>0){offset+=interpolationConfig.start.length;expressions.push(part);offsets.push(offset);offset+=part.length+interpolationConfig.end.length;}else{this._reportError('Blank expressions are not allowed in interpolated strings',input,"at column "+this._findInterpolationErrorColumn(parts,i,interpolationConfig)+" in",location);expressions.push('$implict');offsets.push(offset);}}return new SplitInterpolation(strings,expressions,offsets);};Parser.prototype.wrapLiteralPrimitive=function(input,location){return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0,input==null?0:input.length),input),input,location,this.errors);};Parser.prototype._stripComments=function(input){var i=this._commentStart(input);return i!=null?input.substring(0,i).trim():input;};Parser.prototype._commentStart=function(input){var outerQuote=null;for(var i=0;i<input.length-1;i++){var char=input.charCodeAt(i);var nextChar=input.charCodeAt(i+1);if(char===$SLASH&&nextChar==$SLASH&&outerQuote==null)return i;if(outerQuote===char){outerQuote=null;}else if(outerQuote==null&&isQuote(char)){outerQuote=char;}}return null;};Parser.prototype._checkNoInterpolation=function(input,location,interpolationConfig){var regexp=_createInterpolateRegExp(interpolationConfig);var parts=input.split(regexp);if(parts.length>1){this._reportError("Got interpolation ("+interpolationConfig.start+interpolationConfig.end+") where expression was expected",input,"at column "+this._findInterpolationErrorColumn(parts,1,interpolationConfig)+" in",location);}};Parser.prototype._findInterpolationErrorColumn=function(parts,partInErrIdx,interpolationConfig){var errLocation='';for(var j=0;j<partInErrIdx;j++){errLocation+=j%2===0?parts[j]:""+interpolationConfig.start+parts[j]+interpolationConfig.end;}return errLocation.length;};return Parser;}();var _ParseAST=/** @class */function(){function _ParseAST(input,location,tokens,inputLength,parseAction,errors,offset){this.input=input;this.location=location;this.tokens=tokens;this.inputLength=inputLength;this.parseAction=parseAction;this.errors=errors;this.offset=offset;this.rparensExpected=0;this.rbracketsExpected=0;this.rbracesExpected=0;this.index=0;}_ParseAST.prototype.peek=function(offset){var i=this.index+offset;return i<this.tokens.length?this.tokens[i]:EOF;};Object.defineProperty(_ParseAST.prototype,"next",{get:function get(){return this.peek(0);},enumerable:true,configurable:true});Object.defineProperty(_ParseAST.prototype,"inputIndex",{get:function get(){return this.index<this.tokens.length?this.next.index+this.offset:this.inputLength+this.offset;},enumerable:true,configurable:true});_ParseAST.prototype.span=function(start){return new ParseSpan(start,this.inputIndex);};_ParseAST.prototype.advance=function(){this.index++;};_ParseAST.prototype.optionalCharacter=function(code){if(this.next.isCharacter(code)){this.advance();return true;}else{return false;}};_ParseAST.prototype.peekKeywordLet=function(){return this.next.isKeywordLet();};_ParseAST.prototype.peekKeywordAs=function(){return this.next.isKeywordAs();};_ParseAST.prototype.expectCharacter=function(code){if(this.optionalCharacter(code))return;this.error("Missing expected "+String.fromCharCode(code));};_ParseAST.prototype.optionalOperator=function(op){if(this.next.isOperator(op)){this.advance();return true;}else{return false;}};_ParseAST.prototype.expectOperator=function(operator){if(this.optionalOperator(operator))return;this.error("Missing expected operator "+operator);};_ParseAST.prototype.expectIdentifierOrKeyword=function(){var n=this.next;if(!n.isIdentifier()&&!n.isKeyword()){this.error("Unexpected token "+n+", expected identifier or keyword");return'';}this.advance();return n.toString();};_ParseAST.prototype.expectIdentifierOrKeywordOrString=function(){var n=this.next;if(!n.isIdentifier()&&!n.isKeyword()&&!n.isString()){this.error("Unexpected token "+n+", expected identifier, keyword, or string");return'';}this.advance();return n.toString();};_ParseAST.prototype.parseChain=function(){var exprs=[];var start=this.inputIndex;while(this.index<this.tokens.length){var expr=this.parsePipe();exprs.push(expr);if(this.optionalCharacter($SEMICOLON)){if(!this.parseAction){this.error('Binding expression cannot contain chained expression');}while(this.optionalCharacter($SEMICOLON)){}// read all semicolons
}else if(this.index<this.tokens.length){this.error("Unexpected token '"+this.next+"'");}}if(exprs.length==0)return new EmptyExpr(this.span(start));if(exprs.length==1)return exprs[0];return new Chain(this.span(start),exprs);};_ParseAST.prototype.parsePipe=function(){var result=this.parseExpression();if(this.optionalOperator('|')){if(this.parseAction){this.error('Cannot have a pipe in an action expression');}do{var name_1=this.expectIdentifierOrKeyword();var args=[];while(this.optionalCharacter($COLON)){args.push(this.parseExpression());}result=new BindingPipe(this.span(result.span.start),result,name_1,args);}while(this.optionalOperator('|'));}return result;};_ParseAST.prototype.parseExpression=function(){return this.parseConditional();};_ParseAST.prototype.parseConditional=function(){var start=this.inputIndex;var result=this.parseLogicalOr();if(this.optionalOperator('?')){var yes=this.parsePipe();var no=void 0;if(!this.optionalCharacter($COLON)){var end=this.inputIndex;var expression=this.input.substring(start,end);this.error("Conditional expression "+expression+" requires all 3 expressions");no=new EmptyExpr(this.span(start));}else{no=this.parsePipe();}return new Conditional(this.span(start),result,yes,no);}else{return result;}};_ParseAST.prototype.parseLogicalOr=function(){// '||'
var result=this.parseLogicalAnd();while(this.optionalOperator('||')){var right=this.parseLogicalAnd();result=new Binary(this.span(result.span.start),'||',result,right);}return result;};_ParseAST.prototype.parseLogicalAnd=function(){// '&&'
var result=this.parseEquality();while(this.optionalOperator('&&')){var right=this.parseEquality();result=new Binary(this.span(result.span.start),'&&',result,right);}return result;};_ParseAST.prototype.parseEquality=function(){// '==','!=','===','!=='
var result=this.parseRelational();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'==':case'===':case'!=':case'!==':this.advance();var right=this.parseRelational();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseRelational=function(){// '<', '>', '<=', '>='
var result=this.parseAdditive();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'<':case'>':case'<=':case'>=':this.advance();var right=this.parseAdditive();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseAdditive=function(){// '+', '-'
var result=this.parseMultiplicative();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'+':case'-':this.advance();var right=this.parseMultiplicative();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseMultiplicative=function(){// '*', '%', '/'
var result=this.parsePrefix();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'*':case'%':case'/':this.advance();var right=this.parsePrefix();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parsePrefix=function(){if(this.next.type==TokenType.Operator){var start=this.inputIndex;var operator=this.next.strValue;var result=void 0;switch(operator){case'+':this.advance();result=this.parsePrefix();return new Binary(this.span(start),'-',result,new LiteralPrimitive(new ParseSpan(start,start),0));case'-':this.advance();result=this.parsePrefix();return new Binary(this.span(start),operator,new LiteralPrimitive(new ParseSpan(start,start),0),result);case'!':this.advance();result=this.parsePrefix();return new PrefixNot(this.span(start),result);}}return this.parseCallChain();};_ParseAST.prototype.parseCallChain=function(){var result=this.parsePrimary();while(true){if(this.optionalCharacter($PERIOD)){result=this.parseAccessMemberOrMethodCall(result,false);}else if(this.optionalOperator('?.')){result=this.parseAccessMemberOrMethodCall(result,true);}else if(this.optionalCharacter($LBRACKET)){this.rbracketsExpected++;var key=this.parsePipe();this.rbracketsExpected--;this.expectCharacter($RBRACKET);if(this.optionalOperator('=')){var value=this.parseConditional();result=new KeyedWrite(this.span(result.span.start),result,key,value);}else{result=new KeyedRead(this.span(result.span.start),result,key);}}else if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var args=this.parseCallArguments();this.rparensExpected--;this.expectCharacter($RPAREN);result=new FunctionCall(this.span(result.span.start),result,args);}else if(this.optionalOperator('!')){result=new NonNullAssert(this.span(result.span.start),result);}else{return result;}}};_ParseAST.prototype.parsePrimary=function(){var start=this.inputIndex;if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var result=this.parsePipe();this.rparensExpected--;this.expectCharacter($RPAREN);return result;}else if(this.next.isKeywordNull()){this.advance();return new LiteralPrimitive(this.span(start),null);}else if(this.next.isKeywordUndefined()){this.advance();return new LiteralPrimitive(this.span(start),void 0);}else if(this.next.isKeywordTrue()){this.advance();return new LiteralPrimitive(this.span(start),true);}else if(this.next.isKeywordFalse()){this.advance();return new LiteralPrimitive(this.span(start),false);}else if(this.next.isKeywordThis()){this.advance();return new ImplicitReceiver(this.span(start));}else if(this.optionalCharacter($LBRACKET)){this.rbracketsExpected++;var elements=this.parseExpressionList($RBRACKET);this.rbracketsExpected--;this.expectCharacter($RBRACKET);return new LiteralArray(this.span(start),elements);}else if(this.next.isCharacter($LBRACE)){return this.parseLiteralMap();}else if(this.next.isIdentifier()){return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)),false);}else if(this.next.isNumber()){var value=this.next.toNumber();this.advance();return new LiteralPrimitive(this.span(start),value);}else if(this.next.isString()){var literalValue=this.next.toString();this.advance();return new LiteralPrimitive(this.span(start),literalValue);}else if(this.index>=this.tokens.length){this.error("Unexpected end of expression: "+this.input);return new EmptyExpr(this.span(start));}else{this.error("Unexpected token "+this.next);return new EmptyExpr(this.span(start));}};_ParseAST.prototype.parseExpressionList=function(terminator){var result=[];if(!this.next.isCharacter(terminator)){do{result.push(this.parsePipe());}while(this.optionalCharacter($COMMA));}return result;};_ParseAST.prototype.parseLiteralMap=function(){var keys=[];var values=[];var start=this.inputIndex;this.expectCharacter($LBRACE);if(!this.optionalCharacter($RBRACE)){this.rbracesExpected++;do{var quoted=this.next.isString();var key=this.expectIdentifierOrKeywordOrString();keys.push({key:key,quoted:quoted});this.expectCharacter($COLON);values.push(this.parsePipe());}while(this.optionalCharacter($COMMA));this.rbracesExpected--;this.expectCharacter($RBRACE);}return new LiteralMap(this.span(start),keys,values);};_ParseAST.prototype.parseAccessMemberOrMethodCall=function(receiver,isSafe){if(isSafe===void 0){isSafe=false;}var start=receiver.span.start;var id=this.expectIdentifierOrKeyword();if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var args=this.parseCallArguments();this.expectCharacter($RPAREN);this.rparensExpected--;var span=this.span(start);return isSafe?new SafeMethodCall(span,receiver,id,args):new MethodCall(span,receiver,id,args);}else{if(isSafe){if(this.optionalOperator('=')){this.error('The \'?.\' operator cannot be used in the assignment');return new EmptyExpr(this.span(start));}else{return new SafePropertyRead(this.span(start),receiver,id);}}else{if(this.optionalOperator('=')){if(!this.parseAction){this.error('Bindings cannot contain assignments');return new EmptyExpr(this.span(start));}var value=this.parseConditional();return new PropertyWrite(this.span(start),receiver,id,value);}else{return new PropertyRead(this.span(start),receiver,id);}}}};_ParseAST.prototype.parseCallArguments=function(){if(this.next.isCharacter($RPAREN))return[];var positionals=[];do{positionals.push(this.parsePipe());}while(this.optionalCharacter($COMMA));return positionals;};/**
     * An identifier, a keyword, a string with an optional `-` in between.
     */_ParseAST.prototype.expectTemplateBindingKey=function(){var result='';var operatorFound=false;do{result+=this.expectIdentifierOrKeywordOrString();operatorFound=this.optionalOperator('-');if(operatorFound){result+='-';}}while(operatorFound);return result.toString();};// Parses the AST for `<some-tag *tplKey=AST>`
_ParseAST.prototype.parseTemplateBindings=function(tplKey){var firstBinding=true;var bindings=[];var warnings=[];do{var start=this.inputIndex;var rawKey=void 0;var key=void 0;var isVar=false;if(firstBinding){rawKey=key=tplKey;firstBinding=false;}else{isVar=this.peekKeywordLet();if(isVar)this.advance();rawKey=this.expectTemplateBindingKey();key=isVar?rawKey:tplKey+rawKey[0].toUpperCase()+rawKey.substring(1);this.optionalCharacter($COLON);}var name_2=null;var expression=null;if(isVar){if(this.optionalOperator('=')){name_2=this.expectTemplateBindingKey();}else{name_2='\$implicit';}}else if(this.peekKeywordAs()){this.advance();// consume `as`
name_2=rawKey;key=this.expectTemplateBindingKey();// read local var name
isVar=true;}else if(this.next!==EOF&&!this.peekKeywordLet()){var start_1=this.inputIndex;var ast=this.parsePipe();var source=this.input.substring(start_1-this.offset,this.inputIndex-this.offset);expression=new ASTWithSource(ast,source,this.location,this.errors);}bindings.push(new TemplateBinding(this.span(start),key,isVar,name_2,expression));if(this.peekKeywordAs()&&!isVar){var letStart=this.inputIndex;this.advance();// consume `as`
var letName=this.expectTemplateBindingKey();// read local var name
bindings.push(new TemplateBinding(this.span(letStart),letName,true,key,null));}if(!this.optionalCharacter($SEMICOLON)){this.optionalCharacter($COMMA);}}while(this.index<this.tokens.length);return new TemplateBindingParseResult(bindings,warnings,this.errors);};_ParseAST.prototype.error=function(message,index){if(index===void 0){index=null;}this.errors.push(new ParserError(message,this.input,this.locationText(index),this.location));this.skip();};_ParseAST.prototype.locationText=function(index){if(index===void 0){index=null;}if(index==null)index=this.index;return index<this.tokens.length?"at column "+(this.tokens[index].index+1)+" in":"at the end of the expression";};// Error recovery should skip tokens until it encounters a recovery point. skip() treats
// the end of input and a ';' as unconditionally a recovery point. It also treats ')',
// '}' and ']' as conditional recovery points if one of calling productions is expecting
// one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing
// more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because
// of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols
// must be conditional as they must be skipped if none of the calling productions are not
// expecting the closing token else we will never make progress in the case of an
// extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because
// parseChain() is always the root production and it expects a ';'.
// If a production expects one of these token it increments the corresponding nesting count,
// and then decrements it just prior to checking if the token is in the input.
_ParseAST.prototype.skip=function(){var n=this.next;while(this.index<this.tokens.length&&!n.isCharacter($SEMICOLON)&&(this.rparensExpected<=0||!n.isCharacter($RPAREN))&&(this.rbracesExpected<=0||!n.isCharacter($RBRACE))&&(this.rbracketsExpected<=0||!n.isCharacter($RBRACKET))){if(this.next.isError()){this.errors.push(new ParserError(this.next.toString(),this.input,this.locationText(),this.location));}this.advance();n=this.next;}};return _ParseAST;}();var SimpleExpressionChecker=/** @class */function(){function SimpleExpressionChecker(){this.errors=[];}SimpleExpressionChecker.check=function(ast){var s=new SimpleExpressionChecker();ast.visit(s);return s.errors;};SimpleExpressionChecker.prototype.visitImplicitReceiver=function(ast,context){};SimpleExpressionChecker.prototype.visitInterpolation=function(ast,context){};SimpleExpressionChecker.prototype.visitLiteralPrimitive=function(ast,context){};SimpleExpressionChecker.prototype.visitPropertyRead=function(ast,context){};SimpleExpressionChecker.prototype.visitPropertyWrite=function(ast,context){};SimpleExpressionChecker.prototype.visitSafePropertyRead=function(ast,context){};SimpleExpressionChecker.prototype.visitMethodCall=function(ast,context){};SimpleExpressionChecker.prototype.visitSafeMethodCall=function(ast,context){};SimpleExpressionChecker.prototype.visitFunctionCall=function(ast,context){};SimpleExpressionChecker.prototype.visitLiteralArray=function(ast,context){this.visitAll(ast.expressions);};SimpleExpressionChecker.prototype.visitLiteralMap=function(ast,context){this.visitAll(ast.values);};SimpleExpressionChecker.prototype.visitBinary=function(ast,context){};SimpleExpressionChecker.prototype.visitPrefixNot=function(ast,context){};SimpleExpressionChecker.prototype.visitNonNullAssert=function(ast,context){};SimpleExpressionChecker.prototype.visitConditional=function(ast,context){};SimpleExpressionChecker.prototype.visitPipe=function(ast,context){this.errors.push('pipes');};SimpleExpressionChecker.prototype.visitKeyedRead=function(ast,context){};SimpleExpressionChecker.prototype.visitKeyedWrite=function(ast,context){};SimpleExpressionChecker.prototype.visitAll=function(asts){var _this=this;return asts.map(function(node){return node.visit(_this);});};SimpleExpressionChecker.prototype.visitChain=function(ast,context){};SimpleExpressionChecker.prototype.visitQuote=function(ast,context){};return SimpleExpressionChecker;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ParseLocation=/** @class */function(){function ParseLocation(file,offset,line,col){this.file=file;this.offset=offset;this.line=line;this.col=col;}ParseLocation.prototype.toString=function(){return this.offset!=null?this.file.url+"@"+this.line+":"+this.col:this.file.url;};ParseLocation.prototype.moveBy=function(delta){var source=this.file.content;var len=source.length;var offset=this.offset;var line=this.line;var col=this.col;while(offset>0&&delta<0){offset--;delta++;var ch=source.charCodeAt(offset);if(ch==$LF){line--;var priorLine=source.substr(0,offset-1).lastIndexOf(String.fromCharCode($LF));col=priorLine>0?offset-priorLine:offset;}else{col--;}}while(offset<len&&delta>0){var ch=source.charCodeAt(offset);offset++;delta--;if(ch==$LF){line++;col=0;}else{col++;}}return new ParseLocation(this.file,offset,line,col);};// Return the source around the location
// Up to `maxChars` or `maxLines` on each side of the location
ParseLocation.prototype.getContext=function(maxChars,maxLines){var content=this.file.content;var startOffset=this.offset;if(startOffset!=null){if(startOffset>content.length-1){startOffset=content.length-1;}var endOffset=startOffset;var ctxChars=0;var ctxLines=0;while(ctxChars<maxChars&&startOffset>0){startOffset--;ctxChars++;if(content[startOffset]=='\n'){if(++ctxLines==maxLines){break;}}}ctxChars=0;ctxLines=0;while(ctxChars<maxChars&&endOffset<content.length-1){endOffset++;ctxChars++;if(content[endOffset]=='\n'){if(++ctxLines==maxLines){break;}}}return{before:content.substring(startOffset,this.offset),after:content.substring(this.offset,endOffset+1)};}return null;};return ParseLocation;}();var ParseSourceFile=/** @class */function(){function ParseSourceFile(content,url){this.content=content;this.url=url;}return ParseSourceFile;}();var ParseSourceSpan=/** @class */function(){function ParseSourceSpan(start,end,details){if(details===void 0){details=null;}this.start=start;this.end=end;this.details=details;}ParseSourceSpan.prototype.toString=function(){return this.start.file.content.substring(this.start.offset,this.end.offset);};return ParseSourceSpan;}();var ParseErrorLevel;(function(ParseErrorLevel){ParseErrorLevel[ParseErrorLevel["WARNING"]=0]="WARNING";ParseErrorLevel[ParseErrorLevel["ERROR"]=1]="ERROR";})(ParseErrorLevel||(ParseErrorLevel={}));var ParseError=/** @class */function(){function ParseError(span,msg,level){if(level===void 0){level=ParseErrorLevel.ERROR;}this.span=span;this.msg=msg;this.level=level;}ParseError.prototype.contextualMessage=function(){var ctx=this.span.start.getContext(100,3);return ctx?this.msg+" (\""+ctx.before+"["+ParseErrorLevel[this.level]+" ->]"+ctx.after+"\")":this.msg;};ParseError.prototype.toString=function(){var details=this.span.details?", "+this.span.details:'';return this.contextualMessage()+": "+this.span.start+details;};return ParseError;}();function typeSourceSpan(kind,type){var moduleUrl=identifierModuleUrl(type);var sourceFileName=moduleUrl!=null?"in "+kind+" "+identifierName(type)+" in "+moduleUrl:"in "+kind+" "+identifierName(type);var sourceFile=new ParseSourceFile('',sourceFileName);return new ParseSourceSpan(new ParseLocation(sourceFile,-1,-1,-1),new ParseLocation(sourceFile,-1,-1,-1));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TokenType$1;(function(TokenType){TokenType[TokenType["TAG_OPEN_START"]=0]="TAG_OPEN_START";TokenType[TokenType["TAG_OPEN_END"]=1]="TAG_OPEN_END";TokenType[TokenType["TAG_OPEN_END_VOID"]=2]="TAG_OPEN_END_VOID";TokenType[TokenType["TAG_CLOSE"]=3]="TAG_CLOSE";TokenType[TokenType["TEXT"]=4]="TEXT";TokenType[TokenType["ESCAPABLE_RAW_TEXT"]=5]="ESCAPABLE_RAW_TEXT";TokenType[TokenType["RAW_TEXT"]=6]="RAW_TEXT";TokenType[TokenType["COMMENT_START"]=7]="COMMENT_START";TokenType[TokenType["COMMENT_END"]=8]="COMMENT_END";TokenType[TokenType["CDATA_START"]=9]="CDATA_START";TokenType[TokenType["CDATA_END"]=10]="CDATA_END";TokenType[TokenType["ATTR_NAME"]=11]="ATTR_NAME";TokenType[TokenType["ATTR_VALUE"]=12]="ATTR_VALUE";TokenType[TokenType["DOC_TYPE"]=13]="DOC_TYPE";TokenType[TokenType["EXPANSION_FORM_START"]=14]="EXPANSION_FORM_START";TokenType[TokenType["EXPANSION_CASE_VALUE"]=15]="EXPANSION_CASE_VALUE";TokenType[TokenType["EXPANSION_CASE_EXP_START"]=16]="EXPANSION_CASE_EXP_START";TokenType[TokenType["EXPANSION_CASE_EXP_END"]=17]="EXPANSION_CASE_EXP_END";TokenType[TokenType["EXPANSION_FORM_END"]=18]="EXPANSION_FORM_END";TokenType[TokenType["EOF"]=19]="EOF";})(TokenType$1||(TokenType$1={}));var Token$1=/** @class */function(){function Token(type,parts,sourceSpan){this.type=type;this.parts=parts;this.sourceSpan=sourceSpan;}return Token;}();var TokenError=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TokenError,_super);function TokenError(errorMsg,tokenType,span){var _this=_super.call(this,span,errorMsg)||this;_this.tokenType=tokenType;return _this;}return TokenError;}(ParseError);var TokenizeResult=/** @class */function(){function TokenizeResult(tokens,errors){this.tokens=tokens;this.errors=errors;}return TokenizeResult;}();function tokenize(source,url,getTagDefinition,tokenizeExpansionForms,interpolationConfig){if(tokenizeExpansionForms===void 0){tokenizeExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}return new _Tokenizer(new ParseSourceFile(source,url),getTagDefinition,tokenizeExpansionForms,interpolationConfig).tokenize();}var _CR_OR_CRLF_REGEXP=/\r\n?/g;function _unexpectedCharacterErrorMsg(charCode){var char=charCode===$EOF?'EOF':String.fromCharCode(charCode);return"Unexpected character \""+char+"\"";}function _unknownEntityErrorMsg(entitySrc){return"Unknown entity \""+entitySrc+"\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax";}var _ControlFlowError=/** @class */function(){function _ControlFlowError(error){this.error=error;}return _ControlFlowError;}();// See http://www.w3.org/TR/html51/syntax.html#writing
var _Tokenizer=/** @class */function(){/**
     * @param _file The html source
     * @param _getTagDefinition
     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)
     * @param _interpolationConfig
     */function _Tokenizer(_file,_getTagDefinition,_tokenizeIcu,_interpolationConfig){if(_interpolationConfig===void 0){_interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}this._file=_file;this._getTagDefinition=_getTagDefinition;this._tokenizeIcu=_tokenizeIcu;this._interpolationConfig=_interpolationConfig;// Note: this is always lowercase!
this._peek=-1;this._nextPeek=-1;this._index=-1;this._line=0;this._column=-1;this._expansionCaseStack=[];this._inInterpolation=false;this.tokens=[];this.errors=[];this._input=_file.content;this._length=_file.content.length;this._advance();}_Tokenizer.prototype._processCarriageReturns=function(content){// http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream
// In order to keep the original position in the source, we can not
// pre-process it.
// Instead CRs are processed right before instantiating the tokens.
return content.replace(_CR_OR_CRLF_REGEXP,'\n');};_Tokenizer.prototype.tokenize=function(){while(this._peek!==$EOF){var start=this._getLocation();try{if(this._attemptCharCode($LT)){if(this._attemptCharCode($BANG)){if(this._attemptCharCode($LBRACKET)){this._consumeCdata(start);}else if(this._attemptCharCode($MINUS)){this._consumeComment(start);}else{this._consumeDocType(start);}}else if(this._attemptCharCode($SLASH)){this._consumeTagClose(start);}else{this._consumeTagOpen(start);}}else if(!(this._tokenizeIcu&&this._tokenizeExpansionForm())){this._consumeText();}}catch(e){if(e instanceof _ControlFlowError){this.errors.push(e.error);}else{throw e;}}}this._beginToken(TokenType$1.EOF);this._endToken([]);return new TokenizeResult(mergeTextTokens(this.tokens),this.errors);};/**
     * @returns whether an ICU token has been created
     * @internal
     */_Tokenizer.prototype._tokenizeExpansionForm=function(){if(isExpansionFormStart(this._input,this._index,this._interpolationConfig)){this._consumeExpansionFormStart();return true;}if(isExpansionCaseStart(this._peek)&&this._isInExpansionForm()){this._consumeExpansionCaseStart();return true;}if(this._peek===$RBRACE){if(this._isInExpansionCase()){this._consumeExpansionCaseEnd();return true;}if(this._isInExpansionForm()){this._consumeExpansionFormEnd();return true;}}return false;};_Tokenizer.prototype._getLocation=function(){return new ParseLocation(this._file,this._index,this._line,this._column);};_Tokenizer.prototype._getSpan=function(start,end){if(start===void 0){start=this._getLocation();}if(end===void 0){end=this._getLocation();}return new ParseSourceSpan(start,end);};_Tokenizer.prototype._beginToken=function(type,start){if(start===void 0){start=this._getLocation();}this._currentTokenStart=start;this._currentTokenType=type;};_Tokenizer.prototype._endToken=function(parts,end){if(end===void 0){end=this._getLocation();}var token=new Token$1(this._currentTokenType,parts,new ParseSourceSpan(this._currentTokenStart,end));this.tokens.push(token);this._currentTokenStart=null;this._currentTokenType=null;return token;};_Tokenizer.prototype._createError=function(msg,span){if(this._isInExpansionForm()){msg+=" (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)";}var error=new TokenError(msg,this._currentTokenType,span);this._currentTokenStart=null;this._currentTokenType=null;return new _ControlFlowError(error);};_Tokenizer.prototype._advance=function(){if(this._index>=this._length){throw this._createError(_unexpectedCharacterErrorMsg($EOF),this._getSpan());}if(this._peek===$LF){this._line++;this._column=0;}else if(this._peek!==$LF&&this._peek!==$CR){this._column++;}this._index++;this._peek=this._index>=this._length?$EOF:this._input.charCodeAt(this._index);this._nextPeek=this._index+1>=this._length?$EOF:this._input.charCodeAt(this._index+1);};_Tokenizer.prototype._attemptCharCode=function(charCode){if(this._peek===charCode){this._advance();return true;}return false;};_Tokenizer.prototype._attemptCharCodeCaseInsensitive=function(charCode){if(compareCharCodeCaseInsensitive(this._peek,charCode)){this._advance();return true;}return false;};_Tokenizer.prototype._requireCharCode=function(charCode){var location=this._getLocation();if(!this._attemptCharCode(charCode)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(location,location));}};_Tokenizer.prototype._attemptStr=function(chars){var len=chars.length;if(this._index+len>this._length){return false;}var initialPosition=this._savePosition();for(var i=0;i<len;i++){if(!this._attemptCharCode(chars.charCodeAt(i))){// If attempting to parse the string fails, we want to reset the parser
// to where it was before the attempt
this._restorePosition(initialPosition);return false;}}return true;};_Tokenizer.prototype._attemptStrCaseInsensitive=function(chars){for(var i=0;i<chars.length;i++){if(!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))){return false;}}return true;};_Tokenizer.prototype._requireStr=function(chars){var location=this._getLocation();if(!this._attemptStr(chars)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(location));}};_Tokenizer.prototype._attemptCharCodeUntilFn=function(predicate){while(!predicate(this._peek)){this._advance();}};_Tokenizer.prototype._requireCharCodeUntilFn=function(predicate,len){var start=this._getLocation();this._attemptCharCodeUntilFn(predicate);if(this._index-start.offset<len){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(start,start));}};_Tokenizer.prototype._attemptUntilChar=function(char){while(this._peek!==char){this._advance();}};_Tokenizer.prototype._readChar=function(decodeEntities){if(decodeEntities&&this._peek===$AMPERSAND){return this._decodeEntity();}else{var index=this._index;this._advance();return this._input[index];}};_Tokenizer.prototype._decodeEntity=function(){var start=this._getLocation();this._advance();if(this._attemptCharCode($HASH)){var isHex=this._attemptCharCode($x)||this._attemptCharCode($X);var numberStart=this._getLocation().offset;this._attemptCharCodeUntilFn(isDigitEntityEnd);if(this._peek!=$SEMICOLON){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan());}this._advance();var strNum=this._input.substring(numberStart,this._index-1);try{var charCode=parseInt(strNum,isHex?16:10);return String.fromCharCode(charCode);}catch(e){var entity=this._input.substring(start.offset+1,this._index-1);throw this._createError(_unknownEntityErrorMsg(entity),this._getSpan(start));}}else{var startPosition=this._savePosition();this._attemptCharCodeUntilFn(isNamedEntityEnd);if(this._peek!=$SEMICOLON){this._restorePosition(startPosition);return'&';}this._advance();var name_1=this._input.substring(start.offset+1,this._index-1);var char=NAMED_ENTITIES[name_1];if(!char){throw this._createError(_unknownEntityErrorMsg(name_1),this._getSpan(start));}return char;}};_Tokenizer.prototype._consumeRawText=function(decodeEntities,firstCharOfEnd,attemptEndRest){var tagCloseStart;var textStart=this._getLocation();this._beginToken(decodeEntities?TokenType$1.ESCAPABLE_RAW_TEXT:TokenType$1.RAW_TEXT,textStart);var parts=[];while(true){tagCloseStart=this._getLocation();if(this._attemptCharCode(firstCharOfEnd)&&attemptEndRest()){break;}if(this._index>tagCloseStart.offset){// add the characters consumed by the previous if statement to the output
parts.push(this._input.substring(tagCloseStart.offset,this._index));}while(this._peek!==firstCharOfEnd){parts.push(this._readChar(decodeEntities));}}return this._endToken([this._processCarriageReturns(parts.join(''))],tagCloseStart);};_Tokenizer.prototype._consumeComment=function(start){var _this=this;this._beginToken(TokenType$1.COMMENT_START,start);this._requireCharCode($MINUS);this._endToken([]);var textToken=this._consumeRawText(false,$MINUS,function(){return _this._attemptStr('->');});this._beginToken(TokenType$1.COMMENT_END,textToken.sourceSpan.end);this._endToken([]);};_Tokenizer.prototype._consumeCdata=function(start){var _this=this;this._beginToken(TokenType$1.CDATA_START,start);this._requireStr('CDATA[');this._endToken([]);var textToken=this._consumeRawText(false,$RBRACKET,function(){return _this._attemptStr(']>');});this._beginToken(TokenType$1.CDATA_END,textToken.sourceSpan.end);this._endToken([]);};_Tokenizer.prototype._consumeDocType=function(start){this._beginToken(TokenType$1.DOC_TYPE,start);this._attemptUntilChar($GT);this._advance();this._endToken([this._input.substring(start.offset+2,this._index-1)]);};_Tokenizer.prototype._consumePrefixAndName=function(){var nameOrPrefixStart=this._index;var prefix=null;while(this._peek!==$COLON&&!isPrefixEnd(this._peek)){this._advance();}var nameStart;if(this._peek===$COLON){this._advance();prefix=this._input.substring(nameOrPrefixStart,this._index-1);nameStart=this._index;}else{nameStart=nameOrPrefixStart;}this._requireCharCodeUntilFn(isNameEnd,this._index===nameStart?1:0);var name=this._input.substring(nameStart,this._index);return[prefix,name];};_Tokenizer.prototype._consumeTagOpen=function(start){var savedPos=this._savePosition();var tagName;var lowercaseTagName;try{if(!isAsciiLetter(this._peek)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan());}var nameStart=this._index;this._consumeTagOpenStart(start);tagName=this._input.substring(nameStart,this._index);lowercaseTagName=tagName.toLowerCase();this._attemptCharCodeUntilFn(isNotWhitespace);while(this._peek!==$SLASH&&this._peek!==$GT){this._consumeAttributeName();this._attemptCharCodeUntilFn(isNotWhitespace);if(this._attemptCharCode($EQ)){this._attemptCharCodeUntilFn(isNotWhitespace);this._consumeAttributeValue();}this._attemptCharCodeUntilFn(isNotWhitespace);}this._consumeTagOpenEnd();}catch(e){if(e instanceof _ControlFlowError){// When the start tag is invalid, assume we want a "<"
this._restorePosition(savedPos);// Back to back text tokens are merged at the end
this._beginToken(TokenType$1.TEXT,start);this._endToken(['<']);return;}throw e;}var contentTokenType=this._getTagDefinition(tagName).contentType;if(contentTokenType===TagContentType.RAW_TEXT){this._consumeRawTextWithTagClose(lowercaseTagName,false);}else if(contentTokenType===TagContentType.ESCAPABLE_RAW_TEXT){this._consumeRawTextWithTagClose(lowercaseTagName,true);}};_Tokenizer.prototype._consumeRawTextWithTagClose=function(lowercaseTagName,decodeEntities){var _this=this;var textToken=this._consumeRawText(decodeEntities,$LT,function(){if(!_this._attemptCharCode($SLASH))return false;_this._attemptCharCodeUntilFn(isNotWhitespace);if(!_this._attemptStrCaseInsensitive(lowercaseTagName))return false;_this._attemptCharCodeUntilFn(isNotWhitespace);return _this._attemptCharCode($GT);});this._beginToken(TokenType$1.TAG_CLOSE,textToken.sourceSpan.end);this._endToken([null,lowercaseTagName]);};_Tokenizer.prototype._consumeTagOpenStart=function(start){this._beginToken(TokenType$1.TAG_OPEN_START,start);var parts=this._consumePrefixAndName();this._endToken(parts);};_Tokenizer.prototype._consumeAttributeName=function(){this._beginToken(TokenType$1.ATTR_NAME);var prefixAndName=this._consumePrefixAndName();this._endToken(prefixAndName);};_Tokenizer.prototype._consumeAttributeValue=function(){this._beginToken(TokenType$1.ATTR_VALUE);var value;if(this._peek===$SQ||this._peek===$DQ){var quoteChar=this._peek;this._advance();var parts=[];while(this._peek!==quoteChar){parts.push(this._readChar(true));}value=parts.join('');this._advance();}else{var valueStart=this._index;this._requireCharCodeUntilFn(isNameEnd,1);value=this._input.substring(valueStart,this._index);}this._endToken([this._processCarriageReturns(value)]);};_Tokenizer.prototype._consumeTagOpenEnd=function(){var tokenType=this._attemptCharCode($SLASH)?TokenType$1.TAG_OPEN_END_VOID:TokenType$1.TAG_OPEN_END;this._beginToken(tokenType);this._requireCharCode($GT);this._endToken([]);};_Tokenizer.prototype._consumeTagClose=function(start){this._beginToken(TokenType$1.TAG_CLOSE,start);this._attemptCharCodeUntilFn(isNotWhitespace);var prefixAndName=this._consumePrefixAndName();this._attemptCharCodeUntilFn(isNotWhitespace);this._requireCharCode($GT);this._endToken(prefixAndName);};_Tokenizer.prototype._consumeExpansionFormStart=function(){this._beginToken(TokenType$1.EXPANSION_FORM_START,this._getLocation());this._requireCharCode($LBRACE);this._endToken([]);this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);this._beginToken(TokenType$1.RAW_TEXT,this._getLocation());var condition=this._readUntil($COMMA);this._endToken([condition],this._getLocation());this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType$1.RAW_TEXT,this._getLocation());var type=this._readUntil($COMMA);this._endToken([type],this._getLocation());this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);};_Tokenizer.prototype._consumeExpansionCaseStart=function(){this._beginToken(TokenType$1.EXPANSION_CASE_VALUE,this._getLocation());var value=this._readUntil($LBRACE).trim();this._endToken([value],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START,this._getLocation());this._requireCharCode($LBRACE);this._endToken([],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);};_Tokenizer.prototype._consumeExpansionCaseEnd=function(){this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END,this._getLocation());this._requireCharCode($RBRACE);this._endToken([],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.pop();};_Tokenizer.prototype._consumeExpansionFormEnd=function(){this._beginToken(TokenType$1.EXPANSION_FORM_END,this._getLocation());this._requireCharCode($RBRACE);this._endToken([]);this._expansionCaseStack.pop();};_Tokenizer.prototype._consumeText=function(){var start=this._getLocation();this._beginToken(TokenType$1.TEXT,start);var parts=[];do{if(this._interpolationConfig&&this._attemptStr(this._interpolationConfig.start)){parts.push(this._interpolationConfig.start);this._inInterpolation=true;}else if(this._interpolationConfig&&this._inInterpolation&&this._attemptStr(this._interpolationConfig.end)){parts.push(this._interpolationConfig.end);this._inInterpolation=false;}else{parts.push(this._readChar(true));}}while(!this._isTextEnd());this._endToken([this._processCarriageReturns(parts.join(''))]);};_Tokenizer.prototype._isTextEnd=function(){if(this._peek===$LT||this._peek===$EOF){return true;}if(this._tokenizeIcu&&!this._inInterpolation){if(isExpansionFormStart(this._input,this._index,this._interpolationConfig)){// start of an expansion form
return true;}if(this._peek===$RBRACE&&this._isInExpansionCase()){// end of and expansion case
return true;}}return false;};_Tokenizer.prototype._savePosition=function(){return[this._peek,this._index,this._column,this._line,this.tokens.length];};_Tokenizer.prototype._readUntil=function(char){var start=this._index;this._attemptUntilChar(char);return this._input.substring(start,this._index);};_Tokenizer.prototype._restorePosition=function(position){this._peek=position[0];this._index=position[1];this._column=position[2];this._line=position[3];var nbTokens=position[4];if(nbTokens<this.tokens.length){// remove any extra tokens
this.tokens=this.tokens.slice(0,nbTokens);}};_Tokenizer.prototype._isInExpansionCase=function(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType$1.EXPANSION_CASE_EXP_START;};_Tokenizer.prototype._isInExpansionForm=function(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType$1.EXPANSION_FORM_START;};return _Tokenizer;}();function isNotWhitespace(code){return!isWhitespace(code)||code===$EOF;}function isNameEnd(code){return isWhitespace(code)||code===$GT||code===$SLASH||code===$SQ||code===$DQ||code===$EQ;}function isPrefixEnd(code){return(code<$a||$z<code)&&(code<$A||$Z<code)&&(code<$0||code>$9);}function isDigitEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiHexDigit(code);}function isNamedEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiLetter(code);}function isExpansionFormStart(input,offset,interpolationConfig){var isInterpolationStart=interpolationConfig?input.indexOf(interpolationConfig.start,offset)==offset:false;return input.charCodeAt(offset)==$LBRACE&&!isInterpolationStart;}function isExpansionCaseStart(peek){return peek===$EQ||isAsciiLetter(peek)||isDigit(peek);}function compareCharCodeCaseInsensitive(code1,code2){return toUpperCaseCharCode(code1)==toUpperCaseCharCode(code2);}function toUpperCaseCharCode(code){return code>=$a&&code<=$z?code-$a+$A:code;}function mergeTextTokens(srcTokens){var dstTokens=[];var lastDstToken=undefined;for(var i=0;i<srcTokens.length;i++){var token=srcTokens[i];if(lastDstToken&&lastDstToken.type==TokenType$1.TEXT&&token.type==TokenType$1.TEXT){lastDstToken.parts[0]+=token.parts[0];lastDstToken.sourceSpan.end=token.sourceSpan.end;}else{lastDstToken=token;dstTokens.push(lastDstToken);}}return dstTokens;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TreeError=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TreeError,_super);function TreeError(elementName,span,msg){var _this=_super.call(this,span,msg)||this;_this.elementName=elementName;return _this;}TreeError.create=function(elementName,span,msg){return new TreeError(elementName,span,msg);};return TreeError;}(ParseError);var ParseTreeResult=/** @class */function(){function ParseTreeResult(rootNodes,errors){this.rootNodes=rootNodes;this.errors=errors;}return ParseTreeResult;}();var Parser$1=/** @class */function(){function Parser(getTagDefinition){this.getTagDefinition=getTagDefinition;}Parser.prototype.parse=function(source,url,parseExpansionForms,interpolationConfig){if(parseExpansionForms===void 0){parseExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var tokensAndErrors=tokenize(source,url,this.getTagDefinition,parseExpansionForms,interpolationConfig);var treeAndErrors=new _TreeBuilder(tokensAndErrors.tokens,this.getTagDefinition).build();return new ParseTreeResult(treeAndErrors.rootNodes,tokensAndErrors.errors.concat(treeAndErrors.errors));};return Parser;}();var _TreeBuilder=/** @class */function(){function _TreeBuilder(tokens,getTagDefinition){this.tokens=tokens;this.getTagDefinition=getTagDefinition;this._index=-1;this._rootNodes=[];this._errors=[];this._elementStack=[];this._advance();}_TreeBuilder.prototype.build=function(){while(this._peek.type!==TokenType$1.EOF){if(this._peek.type===TokenType$1.TAG_OPEN_START){this._consumeStartTag(this._advance());}else if(this._peek.type===TokenType$1.TAG_CLOSE){this._consumeEndTag(this._advance());}else if(this._peek.type===TokenType$1.CDATA_START){this._closeVoidElement();this._consumeCdata(this._advance());}else if(this._peek.type===TokenType$1.COMMENT_START){this._closeVoidElement();this._consumeComment(this._advance());}else if(this._peek.type===TokenType$1.TEXT||this._peek.type===TokenType$1.RAW_TEXT||this._peek.type===TokenType$1.ESCAPABLE_RAW_TEXT){this._closeVoidElement();this._consumeText(this._advance());}else if(this._peek.type===TokenType$1.EXPANSION_FORM_START){this._consumeExpansion(this._advance());}else{// Skip all other tokens...
this._advance();}}return new ParseTreeResult(this._rootNodes,this._errors);};_TreeBuilder.prototype._advance=function(){var prev=this._peek;if(this._index<this.tokens.length-1){// Note: there is always an EOF token at the end
this._index++;}this._peek=this.tokens[this._index];return prev;};_TreeBuilder.prototype._advanceIf=function(type){if(this._peek.type===type){return this._advance();}return null;};_TreeBuilder.prototype._consumeCdata=function(startToken){this._consumeText(this._advance());this._advanceIf(TokenType$1.CDATA_END);};_TreeBuilder.prototype._consumeComment=function(token){var text=this._advanceIf(TokenType$1.RAW_TEXT);this._advanceIf(TokenType$1.COMMENT_END);var value=text!=null?text.parts[0].trim():null;this._addToParent(new Comment(value,token.sourceSpan));};_TreeBuilder.prototype._consumeExpansion=function(token){var switchValue=this._advance();var type=this._advance();var cases=[];// read =
while(this._peek.type===TokenType$1.EXPANSION_CASE_VALUE){var expCase=this._parseExpansionCase();if(!expCase)return;// error
cases.push(expCase);}// read the final }
if(this._peek.type!==TokenType$1.EXPANSION_FORM_END){this._errors.push(TreeError.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '}'."));return;}var sourceSpan=new ParseSourceSpan(token.sourceSpan.start,this._peek.sourceSpan.end);this._addToParent(new Expansion(switchValue.parts[0],type.parts[0],cases,sourceSpan,switchValue.sourceSpan));this._advance();};_TreeBuilder.prototype._parseExpansionCase=function(){var value=this._advance();// read {
if(this._peek.type!==TokenType$1.EXPANSION_CASE_EXP_START){this._errors.push(TreeError.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '{'."));return null;}// read until }
var start=this._advance();var exp=this._collectExpansionExpTokens(start);if(!exp)return null;var end=this._advance();exp.push(new Token$1(TokenType$1.EOF,[],end.sourceSpan));// parse everything in between { and }
var parsedExp=new _TreeBuilder(exp,this.getTagDefinition).build();if(parsedExp.errors.length>0){this._errors=this._errors.concat(parsedExp.errors);return null;}var sourceSpan=new ParseSourceSpan(value.sourceSpan.start,end.sourceSpan.end);var expSourceSpan=new ParseSourceSpan(start.sourceSpan.start,end.sourceSpan.end);return new ExpansionCase(value.parts[0],parsedExp.rootNodes,sourceSpan,value.sourceSpan,expSourceSpan);};_TreeBuilder.prototype._collectExpansionExpTokens=function(start){var exp=[];var expansionFormStack=[TokenType$1.EXPANSION_CASE_EXP_START];while(true){if(this._peek.type===TokenType$1.EXPANSION_FORM_START||this._peek.type===TokenType$1.EXPANSION_CASE_EXP_START){expansionFormStack.push(this._peek.type);}if(this._peek.type===TokenType$1.EXPANSION_CASE_EXP_END){if(lastOnStack(expansionFormStack,TokenType$1.EXPANSION_CASE_EXP_START)){expansionFormStack.pop();if(expansionFormStack.length==0)return exp;}else{this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}}if(this._peek.type===TokenType$1.EXPANSION_FORM_END){if(lastOnStack(expansionFormStack,TokenType$1.EXPANSION_FORM_START)){expansionFormStack.pop();}else{this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}}if(this._peek.type===TokenType$1.EOF){this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}exp.push(this._advance());}};_TreeBuilder.prototype._consumeText=function(token){var text=token.parts[0];if(text.length>0&&text[0]=='\n'){var parent_1=this._getParentElement();if(parent_1!=null&&parent_1.children.length==0&&this.getTagDefinition(parent_1.name).ignoreFirstLf){text=text.substring(1);}}if(text.length>0){this._addToParent(new Text(text,token.sourceSpan));}};_TreeBuilder.prototype._closeVoidElement=function(){var el=this._getParentElement();if(el&&this.getTagDefinition(el.name).isVoid){this._elementStack.pop();}};_TreeBuilder.prototype._consumeStartTag=function(startTagToken){var prefix=startTagToken.parts[0];var name=startTagToken.parts[1];var attrs=[];while(this._peek.type===TokenType$1.ATTR_NAME){attrs.push(this._consumeAttr(this._advance()));}var fullName=this._getElementFullName(prefix,name,this._getParentElement());var selfClosing=false;// Note: There could have been a tokenizer error
// so that we don't get a token for the end tag...
if(this._peek.type===TokenType$1.TAG_OPEN_END_VOID){this._advance();selfClosing=true;var tagDef=this.getTagDefinition(fullName);if(!(tagDef.canSelfClose||getNsPrefix(fullName)!==null||tagDef.isVoid)){this._errors.push(TreeError.create(fullName,startTagToken.sourceSpan,"Only void and foreign elements can be self closed \""+startTagToken.parts[1]+"\""));}}else if(this._peek.type===TokenType$1.TAG_OPEN_END){this._advance();selfClosing=false;}var end=this._peek.sourceSpan.start;var span=new ParseSourceSpan(startTagToken.sourceSpan.start,end);var el=new Element(fullName,attrs,[],span,span,undefined);this._pushElement(el);if(selfClosing){this._popElement(fullName);el.endSourceSpan=span;}};_TreeBuilder.prototype._pushElement=function(el){var parentEl=this._getParentElement();if(parentEl&&this.getTagDefinition(parentEl.name).isClosedByChild(el.name)){this._elementStack.pop();}var tagDef=this.getTagDefinition(el.name);var _a=this._getParentElementSkippingContainers(),parent=_a.parent,container=_a.container;if(parent&&tagDef.requireExtraParent(parent.name)){var newParent=new Element(tagDef.parentToAdd,[],[],el.sourceSpan,el.startSourceSpan,el.endSourceSpan);this._insertBeforeContainer(parent,container,newParent);}this._addToParent(el);this._elementStack.push(el);};_TreeBuilder.prototype._consumeEndTag=function(endTagToken){var fullName=this._getElementFullName(endTagToken.parts[0],endTagToken.parts[1],this._getParentElement());if(this._getParentElement()){this._getParentElement().endSourceSpan=endTagToken.sourceSpan;}if(this.getTagDefinition(fullName).isVoid){this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,"Void elements do not have end tags \""+endTagToken.parts[1]+"\""));}else if(!this._popElement(fullName)){var errMsg="Unexpected closing tag \""+fullName+"\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags";this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,errMsg));}};_TreeBuilder.prototype._popElement=function(fullName){for(var stackIndex=this._elementStack.length-1;stackIndex>=0;stackIndex--){var el=this._elementStack[stackIndex];if(el.name==fullName){this._elementStack.splice(stackIndex,this._elementStack.length-stackIndex);return true;}if(!this.getTagDefinition(el.name).closedByParent){return false;}}return false;};_TreeBuilder.prototype._consumeAttr=function(attrName){var fullName=mergeNsAndName(attrName.parts[0],attrName.parts[1]);var end=attrName.sourceSpan.end;var value='';var valueSpan=undefined;if(this._peek.type===TokenType$1.ATTR_VALUE){var valueToken=this._advance();value=valueToken.parts[0];end=valueToken.sourceSpan.end;valueSpan=valueToken.sourceSpan;}return new Attribute(fullName,value,new ParseSourceSpan(attrName.sourceSpan.start,end),valueSpan);};_TreeBuilder.prototype._getParentElement=function(){return this._elementStack.length>0?this._elementStack[this._elementStack.length-1]:null;};/**
     * Returns the parent in the DOM and the container.
     *
     * `<ng-container>` elements are skipped as they are not rendered as DOM element.
     */_TreeBuilder.prototype._getParentElementSkippingContainers=function(){var container=null;for(var i=this._elementStack.length-1;i>=0;i--){if(!isNgContainer(this._elementStack[i].name)){return{parent:this._elementStack[i],container:container};}container=this._elementStack[i];}return{parent:null,container:container};};_TreeBuilder.prototype._addToParent=function(node){var parent=this._getParentElement();if(parent!=null){parent.children.push(node);}else{this._rootNodes.push(node);}};/**
     * Insert a node between the parent and the container.
     * When no container is given, the node is appended as a child of the parent.
     * Also updates the element stack accordingly.
     *
     * @internal
     */_TreeBuilder.prototype._insertBeforeContainer=function(parent,container,node){if(!container){this._addToParent(node);this._elementStack.push(node);}else{if(parent){// replace the container with the new node in the children
var index=parent.children.indexOf(container);parent.children[index]=node;}else{this._rootNodes.push(node);}node.children.push(container);this._elementStack.splice(this._elementStack.indexOf(container),0,node);}};_TreeBuilder.prototype._getElementFullName=function(prefix,localName,parentElement){if(prefix==null){prefix=this.getTagDefinition(localName).implicitNamespacePrefix;if(prefix==null&&parentElement!=null){prefix=getNsPrefix(parentElement.name);}}return mergeNsAndName(prefix,localName);};return _TreeBuilder;}();function lastOnStack(stack,element){return stack.length>0&&stack[stack.length-1]===element;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function digest(message){return message.id||sha1(serializeNodes(message.nodes).join('')+("["+message.meaning+"]"));}function decimalDigest(message){if(message.id){return message.id;}var visitor=new _SerializerIgnoreIcuExpVisitor();var parts=message.nodes.map(function(a){return a.visit(visitor,null);});return computeMsgId(parts.join(''),message.meaning);}/**
 * Serialize the i18n ast to something xml-like in order to generate an UID.
 *
 * The visitor is also used in the i18n parser tests
 *
 * @internal
 */var _SerializerVisitor=/** @class */function(){function _SerializerVisitor(){}_SerializerVisitor.prototype.visitText=function(text,context){return text.value;};_SerializerVisitor.prototype.visitContainer=function(container,context){var _this=this;return"["+container.children.map(function(child){return child.visit(_this);}).join(', ')+"]";};_SerializerVisitor.prototype.visitIcu=function(icu,context){var _this=this;var strCases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});return"{"+icu.expression+", "+icu.type+", "+strCases.join(', ')+"}";};_SerializerVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;return ph.isVoid?"<ph tag name=\""+ph.startName+"\"/>":"<ph tag name=\""+ph.startName+"\">"+ph.children.map(function(child){return child.visit(_this);}).join(', ')+"</ph name=\""+ph.closeName+"\">";};_SerializerVisitor.prototype.visitPlaceholder=function(ph,context){return ph.value?"<ph name=\""+ph.name+"\">"+ph.value+"</ph>":"<ph name=\""+ph.name+"\"/>";};_SerializerVisitor.prototype.visitIcuPlaceholder=function(ph,context){return"<ph icu name=\""+ph.name+"\">"+ph.value.visit(this)+"</ph>";};return _SerializerVisitor;}();var serializerVisitor=new _SerializerVisitor();function serializeNodes(nodes){return nodes.map(function(a){return a.visit(serializerVisitor,null);});}/**
 * Serialize the i18n ast to something xml-like in order to generate an UID.
 *
 * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.
 *
 * @internal
 */var _SerializerIgnoreIcuExpVisitor=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(_SerializerIgnoreIcuExpVisitor,_super);function _SerializerIgnoreIcuExpVisitor(){return _super!==null&&_super.apply(this,arguments)||this;}_SerializerIgnoreIcuExpVisitor.prototype.visitIcu=function(icu,context){var _this=this;var strCases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});// Do not take the expression into account
return"{"+icu.type+", "+strCases.join(', ')+"}";};return _SerializerIgnoreIcuExpVisitor;}(_SerializerVisitor);/**
 * Compute the SHA1 of the given string
 *
 * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
 *
 * WARNING: this function has not been designed not tested with security in mind.
 *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.
 */function sha1(str){var _a,_b;var utf8=utf8Encode(str);var words32=stringToWords32(utf8,Endian.Big);var len=utf8.length*8;var w=new Array(80);var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0],5),a=_c[0],b=_c[1],c=_c[2],d=_c[3],e=_c[4];words32[len>>5]|=0x80<<24-len%32;words32[(len+64>>9<<4)+15]=len;for(var i=0;i<words32.length;i+=16){var _d=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([a,b,c,d,e],5),h0=_d[0],h1=_d[1],h2=_d[2],h3=_d[3],h4=_d[4];for(var j=0;j<80;j++){if(j<16){w[j]=words32[i+j];}else{w[j]=rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16],1);}var _e=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(fk(j,b,c,d),2),f=_e[0],k=_e[1];var temp=[rol32(a,5),f,e,k,w[j]].reduce(add32);_a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([d,c,rol32(b,30),a,temp],5),e=_a[0],d=_a[1],c=_a[2],b=_a[3],a=_a[4];}_b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([add32(a,h0),add32(b,h1),add32(c,h2),add32(d,h3),add32(e,h4)],5),a=_b[0],b=_b[1],c=_b[2],d=_b[3],e=_b[4];}return byteStringToHexString(words32ToByteString([a,b,c,d,e]));}function fk(index,b,c,d){if(index<20){return[b&c|~b&d,0x5a827999];}if(index<40){return[b^c^d,0x6ed9eba1];}if(index<60){return[b&c|b&d|c&d,0x8f1bbcdc];}return[b^c^d,0xca62c1d6];}/**
 * Compute the fingerprint of the given string
 *
 * The output is 64 bit number encoded as a decimal string
 *
 * based on:
 * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
 */function fingerprint(str){var utf8=utf8Encode(str);var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([hash32(utf8,0),hash32(utf8,102072)],2),hi=_a[0],lo=_a[1];if(hi==0&&(lo==0||lo==1)){hi=hi^0x130f9bef;lo=lo^-0x6b5f56d8;}return[hi,lo];}function computeMsgId(msg,meaning){var _a;var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(fingerprint(msg),2),hi=_b[0],lo=_b[1];if(meaning){var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(fingerprint(meaning),2),him=_c[0],lom=_c[1];_a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(add64(rol64([hi,lo],1),[him,lom]),2),hi=_a[0],lo=_a[1];}return byteStringToDecString(words32ToByteString([hi&0x7fffffff,lo]));}function hash32(str,c){var _a;var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([0x9e3779b9,0x9e3779b9],2),a=_b[0],b=_b[1];var i;var len=str.length;for(i=0;i+12<=len;i+=12){a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));c=add32(c,wordAt(str,i+8,Endian.Little));_a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(mix([a,b,c]),3),a=_a[0],b=_a[1],c=_a[2];}a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));// the first byte of c is reserved for the length
c=add32(c,len);c=add32(c,wordAt(str,i+8,Endian.Little)<<8);return mix([a,b,c])[2];}// clang-format off
function mix(_a){var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a,3),a=_b[0],b=_b[1],c=_b[2];a=sub32(a,b);a=sub32(a,c);a^=c>>>13;b=sub32(b,c);b=sub32(b,a);b^=a<<8;c=sub32(c,a);c=sub32(c,b);c^=b>>>13;a=sub32(a,b);a=sub32(a,c);a^=c>>>12;b=sub32(b,c);b=sub32(b,a);b^=a<<16;c=sub32(c,a);c=sub32(c,b);c^=b>>>5;a=sub32(a,b);a=sub32(a,c);a^=c>>>3;b=sub32(b,c);b=sub32(b,a);b^=a<<10;c=sub32(c,a);c=sub32(c,b);c^=b>>>15;return[a,b,c];}// clang-format on
// Utils
var Endian;(function(Endian){Endian[Endian["Little"]=0]="Little";Endian[Endian["Big"]=1]="Big";})(Endian||(Endian={}));function add32(a,b){return add32to64(a,b)[1];}function add32to64(a,b){var low=(a&0xffff)+(b&0xffff);var high=(a>>>16)+(b>>>16)+(low>>>16);return[high>>>16,high<<16|low&0xffff];}function add64(_a,_b){var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a,2),ah=_c[0],al=_c[1];var _d=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_b,2),bh=_d[0],bl=_d[1];var _e=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(add32to64(al,bl),2),carry=_e[0],l=_e[1];var h=add32(add32(ah,bh),carry);return[h,l];}function sub32(a,b){var low=(a&0xffff)-(b&0xffff);var high=(a>>16)-(b>>16)+(low>>16);return high<<16|low&0xffff;}// Rotate a 32b number left `count` position
function rol32(a,count){return a<<count|a>>>32-count;}// Rotate a 64b number left `count` position
function rol64(_a,count){var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a,2),hi=_b[0],lo=_b[1];var h=hi<<count|lo>>>32-count;var l=lo<<count|hi>>>32-count;return[h,l];}function stringToWords32(str,endian){var words32=Array(str.length+3>>>2);for(var i=0;i<words32.length;i++){words32[i]=wordAt(str,i*4,endian);}return words32;}function byteAt(str,index){return index>=str.length?0:str.charCodeAt(index)&0xff;}function wordAt(str,index,endian){var word=0;if(endian===Endian.Big){for(var i=0;i<4;i++){word+=byteAt(str,index+i)<<24-8*i;}}else{for(var i=0;i<4;i++){word+=byteAt(str,index+i)<<8*i;}}return word;}function words32ToByteString(words32){return words32.reduce(function(str,word){return str+word32ToByteString(word);},'');}function word32ToByteString(word){var str='';for(var i=0;i<4;i++){str+=String.fromCharCode(word>>>8*(3-i)&0xff);}return str;}function byteStringToHexString(str){var hex='';for(var i=0;i<str.length;i++){var b=byteAt(str,i);hex+=(b>>>4).toString(16)+(b&0x0f).toString(16);}return hex.toLowerCase();}// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)
function byteStringToDecString(str){var decimal='';var toThePower='1';for(var i=str.length-1;i>=0;i--){decimal=addBigInt(decimal,numberTimesBigInt(byteAt(str,i),toThePower));toThePower=numberTimesBigInt(256,toThePower);}return decimal.split('').reverse().join('');}// x and y decimal, lowest significant digit first
function addBigInt(x,y){var sum='';var len=Math.max(x.length,y.length);for(var i=0,carry=0;i<len||carry;i++){var tmpSum=carry+ +(x[i]||0)+ +(y[i]||0);if(tmpSum>=10){carry=1;sum+=tmpSum-10;}else{carry=0;sum+=tmpSum;}}return sum;}function numberTimesBigInt(num,b){var product='';var bToThePower=b;for(;num!==0;num=num>>>1){if(num&1)product=addBigInt(product,bToThePower);bToThePower=addBigInt(bToThePower,bToThePower);}return product;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Message=/** @class */function(){/**
     * @param nodes message AST
     * @param placeholders maps placeholder names to static content
     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)
     * @param meaning
     * @param description
     * @param id
     */function Message(nodes,placeholders,placeholderToMessage,meaning,description,id){this.nodes=nodes;this.placeholders=placeholders;this.placeholderToMessage=placeholderToMessage;this.meaning=meaning;this.description=description;this.id=id;if(nodes.length){this.sources=[{filePath:nodes[0].sourceSpan.start.file.url,startLine:nodes[0].sourceSpan.start.line+1,startCol:nodes[0].sourceSpan.start.col+1,endLine:nodes[nodes.length-1].sourceSpan.end.line+1,endCol:nodes[0].sourceSpan.start.col+1}];}else{this.sources=[];}}return Message;}();var Text$1=/** @class */function(){function Text(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Text.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return Text;}();// TODO(vicb): do we really need this node (vs an array) ?
var Container=/** @class */function(){function Container(children,sourceSpan){this.children=children;this.sourceSpan=sourceSpan;}Container.prototype.visit=function(visitor,context){return visitor.visitContainer(this,context);};return Container;}();var Icu=/** @class */function(){function Icu(expression,type,cases,sourceSpan){this.expression=expression;this.type=type;this.cases=cases;this.sourceSpan=sourceSpan;}Icu.prototype.visit=function(visitor,context){return visitor.visitIcu(this,context);};return Icu;}();var TagPlaceholder=/** @class */function(){function TagPlaceholder(tag,attrs,startName,closeName,children,isVoid,sourceSpan){this.tag=tag;this.attrs=attrs;this.startName=startName;this.closeName=closeName;this.children=children;this.isVoid=isVoid;this.sourceSpan=sourceSpan;}TagPlaceholder.prototype.visit=function(visitor,context){return visitor.visitTagPlaceholder(this,context);};return TagPlaceholder;}();var Placeholder=/** @class */function(){function Placeholder(value,name,sourceSpan){this.value=value;this.name=name;this.sourceSpan=sourceSpan;}Placeholder.prototype.visit=function(visitor,context){return visitor.visitPlaceholder(this,context);};return Placeholder;}();var IcuPlaceholder=/** @class */function(){function IcuPlaceholder(value,name,sourceSpan){this.value=value;this.name=name;this.sourceSpan=sourceSpan;}IcuPlaceholder.prototype.visit=function(visitor,context){return visitor.visitIcuPlaceholder(this,context);};return IcuPlaceholder;}();// Clone the AST
var CloneVisitor=/** @class */function(){function CloneVisitor(){}CloneVisitor.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};CloneVisitor.prototype.visitContainer=function(container,context){var _this=this;var children=container.children.map(function(n){return n.visit(_this,context);});return new Container(children,container.sourceSpan);};CloneVisitor.prototype.visitIcu=function(icu,context){var _this=this;var cases={};Object.keys(icu.cases).forEach(function(key){return cases[key]=icu.cases[key].visit(_this,context);});var msg=new Icu(icu.expression,icu.type,cases,icu.sourceSpan);msg.expressionPlaceholder=icu.expressionPlaceholder;return msg;};CloneVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var children=ph.children.map(function(n){return n.visit(_this,context);});return new TagPlaceholder(ph.tag,ph.attrs,ph.startName,ph.closeName,children,ph.isVoid,ph.sourceSpan);};CloneVisitor.prototype.visitPlaceholder=function(ph,context){return new Placeholder(ph.value,ph.name,ph.sourceSpan);};CloneVisitor.prototype.visitIcuPlaceholder=function(ph,context){return new IcuPlaceholder(ph.value,ph.name,ph.sourceSpan);};return CloneVisitor;}();// Visit all the nodes recursively
var RecurseVisitor=/** @class */function(){function RecurseVisitor(){}RecurseVisitor.prototype.visitText=function(text,context){};RecurseVisitor.prototype.visitContainer=function(container,context){var _this=this;container.children.forEach(function(child){return child.visit(_this);});};RecurseVisitor.prototype.visitIcu=function(icu,context){var _this=this;Object.keys(icu.cases).forEach(function(k){icu.cases[k].visit(_this);});};RecurseVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;ph.children.forEach(function(child){return child.visit(_this);});};RecurseVisitor.prototype.visitPlaceholder=function(ph,context){};RecurseVisitor.prototype.visitIcuPlaceholder=function(ph,context){};return RecurseVisitor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TAG_TO_PLACEHOLDER_NAMES={'A':'LINK','B':'BOLD_TEXT','BR':'LINE_BREAK','EM':'EMPHASISED_TEXT','H1':'HEADING_LEVEL1','H2':'HEADING_LEVEL2','H3':'HEADING_LEVEL3','H4':'HEADING_LEVEL4','H5':'HEADING_LEVEL5','H6':'HEADING_LEVEL6','HR':'HORIZONTAL_RULE','I':'ITALIC_TEXT','LI':'LIST_ITEM','LINK':'MEDIA_LINK','OL':'ORDERED_LIST','P':'PARAGRAPH','Q':'QUOTATION','S':'STRIKETHROUGH_TEXT','SMALL':'SMALL_TEXT','SUB':'SUBSTRIPT','SUP':'SUPERSCRIPT','TBODY':'TABLE_BODY','TD':'TABLE_CELL','TFOOT':'TABLE_FOOTER','TH':'TABLE_HEADER_CELL','THEAD':'TABLE_HEADER','TR':'TABLE_ROW','TT':'MONOSPACED_TEXT','U':'UNDERLINED_TEXT','UL':'UNORDERED_LIST'};/**
 * Creates unique names for placeholder with different content.
 *
 * Returns the same placeholder name when the content is identical.
 */var PlaceholderRegistry=/** @class */function(){function PlaceholderRegistry(){// Count the occurrence of the base name top generate a unique name
this._placeHolderNameCounts={};// Maps signature to placeholder names
this._signatureToName={};}PlaceholderRegistry.prototype.getStartTagPlaceholderName=function(tag,attrs,isVoid){var signature=this._hashTag(tag,attrs,isVoid);if(this._signatureToName[signature]){return this._signatureToName[signature];}var upperTag=tag.toUpperCase();var baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||"TAG_"+upperTag;var name=this._generateUniqueName(isVoid?baseName:"START_"+baseName);this._signatureToName[signature]=name;return name;};PlaceholderRegistry.prototype.getCloseTagPlaceholderName=function(tag){var signature=this._hashClosingTag(tag);if(this._signatureToName[signature]){return this._signatureToName[signature];}var upperTag=tag.toUpperCase();var baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||"TAG_"+upperTag;var name=this._generateUniqueName("CLOSE_"+baseName);this._signatureToName[signature]=name;return name;};PlaceholderRegistry.prototype.getPlaceholderName=function(name,content){var upperName=name.toUpperCase();var signature="PH: "+upperName+"="+content;if(this._signatureToName[signature]){return this._signatureToName[signature];}var uniqueName=this._generateUniqueName(upperName);this._signatureToName[signature]=uniqueName;return uniqueName;};PlaceholderRegistry.prototype.getUniquePlaceholder=function(name){return this._generateUniqueName(name.toUpperCase());};// Generate a hash for a tag - does not take attribute order into account
PlaceholderRegistry.prototype._hashTag=function(tag,attrs,isVoid){var start="<"+tag;var strAttrs=Object.keys(attrs).sort().map(function(name){return" "+name+"="+attrs[name];}).join('');var end=isVoid?'/>':"></"+tag+">";return start+strAttrs+end;};PlaceholderRegistry.prototype._hashClosingTag=function(tag){return this._hashTag("/"+tag,{},false);};PlaceholderRegistry.prototype._generateUniqueName=function(base){var seen=this._placeHolderNameCounts.hasOwnProperty(base);if(!seen){this._placeHolderNameCounts[base]=1;return base;}var id=this._placeHolderNameCounts[base];this._placeHolderNameCounts[base]=id+1;return base+"_"+id;};return PlaceholderRegistry;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _expParser=new Parser(new Lexer());/**
 * Returns a function converting html nodes to an i18n Message given an interpolationConfig
 */function createI18nMessageFactory(interpolationConfig){var visitor=new _I18nVisitor(_expParser,interpolationConfig);return function(nodes,meaning,description,id){return visitor.toI18nMessage(nodes,meaning,description,id);};}var _I18nVisitor=/** @class */function(){function _I18nVisitor(_expressionParser,_interpolationConfig){this._expressionParser=_expressionParser;this._interpolationConfig=_interpolationConfig;}_I18nVisitor.prototype.toI18nMessage=function(nodes,meaning,description,id){this._isIcu=nodes.length==1&&nodes[0]instanceof Expansion;this._icuDepth=0;this._placeholderRegistry=new PlaceholderRegistry();this._placeholderToContent={};this._placeholderToMessage={};var i18nodes=visitAll(this,nodes,{});return new Message(i18nodes,this._placeholderToContent,this._placeholderToMessage,meaning,description,id);};_I18nVisitor.prototype.visitElement=function(el,context){var children=visitAll(this,el.children);var attrs={};el.attrs.forEach(function(attr){// Do not visit the attributes, translatable ones are top-level ASTs
attrs[attr.name]=attr.value;});var isVoid=getHtmlTagDefinition(el.name).isVoid;var startPhName=this._placeholderRegistry.getStartTagPlaceholderName(el.name,attrs,isVoid);this._placeholderToContent[startPhName]=el.sourceSpan.toString();var closePhName='';if(!isVoid){closePhName=this._placeholderRegistry.getCloseTagPlaceholderName(el.name);this._placeholderToContent[closePhName]="</"+el.name+">";}return new TagPlaceholder(el.name,attrs,startPhName,closePhName,children,isVoid,el.sourceSpan);};_I18nVisitor.prototype.visitAttribute=function(attribute,context){return this._visitTextWithInterpolation(attribute.value,attribute.sourceSpan);};_I18nVisitor.prototype.visitText=function(text,context){return this._visitTextWithInterpolation(text.value,text.sourceSpan);};_I18nVisitor.prototype.visitComment=function(comment,context){return null;};_I18nVisitor.prototype.visitExpansion=function(icu,context){var _this=this;this._icuDepth++;var i18nIcuCases={};var i18nIcu=new Icu(icu.switchValue,icu.type,i18nIcuCases,icu.sourceSpan);icu.cases.forEach(function(caze){i18nIcuCases[caze.value]=new Container(caze.expression.map(function(node){return node.visit(_this,{});}),caze.expSourceSpan);});this._icuDepth--;if(this._isIcu||this._icuDepth>0){// Returns an ICU node when:
// - the message (vs a part of the message) is an ICU message, or
// - the ICU message is nested.
var expPh=this._placeholderRegistry.getUniquePlaceholder("VAR_"+icu.type);i18nIcu.expressionPlaceholder=expPh;this._placeholderToContent[expPh]=icu.switchValue;return i18nIcu;}// Else returns a placeholder
// ICU placeholders should not be replaced with their original content but with the their
// translations. We need to create a new visitor (they are not re-entrant) to compute the
// message id.
// TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg
var phName=this._placeholderRegistry.getPlaceholderName('ICU',icu.sourceSpan.toString());var visitor=new _I18nVisitor(this._expressionParser,this._interpolationConfig);this._placeholderToMessage[phName]=visitor.toI18nMessage([icu],'','','');return new IcuPlaceholder(i18nIcu,phName,icu.sourceSpan);};_I18nVisitor.prototype.visitExpansionCase=function(icuCase,context){throw new Error('Unreachable code');};_I18nVisitor.prototype._visitTextWithInterpolation=function(text,sourceSpan){var splitInterpolation=this._expressionParser.splitInterpolation(text,sourceSpan.start.toString(),this._interpolationConfig);if(!splitInterpolation){// No expression, return a single text
return new Text$1(text,sourceSpan);}// Return a group of text + expressions
var nodes=[];var container=new Container(nodes,sourceSpan);var _a=this._interpolationConfig,sDelimiter=_a.start,eDelimiter=_a.end;for(var i=0;i<splitInterpolation.strings.length-1;i++){var expression=splitInterpolation.expressions[i];var baseName=_extractPlaceholderName(expression)||'INTERPOLATION';var phName=this._placeholderRegistry.getPlaceholderName(baseName,expression);if(splitInterpolation.strings[i].length){// No need to add empty strings
nodes.push(new Text$1(splitInterpolation.strings[i],sourceSpan));}nodes.push(new Placeholder(expression,phName,sourceSpan));this._placeholderToContent[phName]=sDelimiter+expression+eDelimiter;}// The last index contains no expression
var lastStringIdx=splitInterpolation.strings.length-1;if(splitInterpolation.strings[lastStringIdx].length){nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx],sourceSpan));}return container;};return _I18nVisitor;}();var _CUSTOM_PH_EXP=/\/\/[\s\S]*i18n[\s\S]*\([\s\S]*ph[\s\S]*=[\s\S]*("|')([\s\S]*?)\1[\s\S]*\)/g;function _extractPlaceholderName(input){return input.split(_CUSTOM_PH_EXP)[2];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An i18n error.
 */var I18nError=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(I18nError,_super);function I18nError(span,msg){return _super.call(this,span,msg)||this;}return I18nError;}(ParseError);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _I18N_ATTR='i18n';var _I18N_ATTR_PREFIX='i18n-';var _I18N_COMMENT_PREFIX_REGEXP=/^i18n:?/;var MEANING_SEPARATOR='|';var ID_SEPARATOR='@@';var i18nCommentsWarned=false;/**
 * Extract translatable messages from an html AST
 */function extractMessages(nodes,interpolationConfig,implicitTags,implicitAttrs){var visitor=new _Visitor(implicitTags,implicitAttrs);return visitor.extract(nodes,interpolationConfig);}function mergeTranslations(nodes,translations,interpolationConfig,implicitTags,implicitAttrs){var visitor=new _Visitor(implicitTags,implicitAttrs);return visitor.merge(nodes,translations,interpolationConfig);}var ExtractionResult=/** @class */function(){function ExtractionResult(messages,errors){this.messages=messages;this.errors=errors;}return ExtractionResult;}();var _VisitorMode;(function(_VisitorMode){_VisitorMode[_VisitorMode["Extract"]=0]="Extract";_VisitorMode[_VisitorMode["Merge"]=1]="Merge";})(_VisitorMode||(_VisitorMode={}));/**
 * This Visitor is used:
 * 1. to extract all the translatable strings from an html AST (see `extract()`),
 * 2. to replace the translatable strings with the actual translations (see `merge()`)
 *
 * @internal
 */var _Visitor=/** @class */function(){function _Visitor(_implicitTags,_implicitAttrs){this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;}/**
     * Extracts the messages from the tree
     */_Visitor.prototype.extract=function(nodes,interpolationConfig){var _this=this;this._init(_VisitorMode.Extract,interpolationConfig);nodes.forEach(function(node){return node.visit(_this,null);});if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ExtractionResult(this._messages,this._errors);};/**
     * Returns a tree where all translatable nodes are translated
     */_Visitor.prototype.merge=function(nodes,translations,interpolationConfig){this._init(_VisitorMode.Merge,interpolationConfig);this._translations=translations;// Construct a single fake root element
var wrapper=new Element('wrapper',[],nodes,undefined,undefined,undefined);var translatedNode=wrapper.visit(this,null);if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ParseTreeResult(translatedNode.children,this._errors);};_Visitor.prototype.visitExpansionCase=function(icuCase,context){// Parse cases for translatable html attributes
var expression=visitAll(this,icuCase.expression,context);if(this._mode===_VisitorMode.Merge){return new ExpansionCase(icuCase.value,expression,icuCase.sourceSpan,icuCase.valueSourceSpan,icuCase.expSourceSpan);}};_Visitor.prototype.visitExpansion=function(icu,context){this._mayBeAddBlockChildren(icu);var wasInIcu=this._inIcu;if(!this._inIcu){// nested ICU messages should not be extracted but top-level translated as a whole
if(this._isInTranslatableSection){this._addMessage([icu]);}this._inIcu=true;}var cases=visitAll(this,icu.cases,context);if(this._mode===_VisitorMode.Merge){icu=new Expansion(icu.switchValue,icu.type,cases,icu.sourceSpan,icu.switchValueSourceSpan);}this._inIcu=wasInIcu;return icu;};_Visitor.prototype.visitComment=function(comment,context){var isOpening=_isOpeningComment(comment);if(isOpening&&this._isInTranslatableSection){this._reportError(comment,'Could not start a block inside a translatable section');return;}var isClosing=_isClosingComment(comment);if(isClosing&&!this._inI18nBlock){this._reportError(comment,'Trying to close an unopened block');return;}if(!this._inI18nNode&&!this._inIcu){if(!this._inI18nBlock){if(isOpening){// deprecated from v5 you should use <ng-container i18n> instead of i18n comments
if(!i18nCommentsWarned&&console&&console.warn){i18nCommentsWarned=true;var details=comment.sourceSpan.details?", "+comment.sourceSpan.details:'';// TODO(ocombe): use a log service once there is a public one available
console.warn("I18n comments are deprecated, use an <ng-container> element instead ("+comment.sourceSpan.start+details+")");}this._inI18nBlock=true;this._blockStartDepth=this._depth;this._blockChildren=[];this._blockMeaningAndDesc=comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP,'').trim();this._openTranslatableSection(comment);}}else{if(isClosing){if(this._depth==this._blockStartDepth){this._closeTranslatableSection(comment,this._blockChildren);this._inI18nBlock=false;var message=this._addMessage(this._blockChildren,this._blockMeaningAndDesc);// merge attributes in sections
var nodes=this._translateMessage(comment,message);return visitAll(this,nodes);}else{this._reportError(comment,'I18N blocks should not cross element boundaries');return;}}}}};_Visitor.prototype.visitText=function(text,context){if(this._isInTranslatableSection){this._mayBeAddBlockChildren(text);}return text;};_Visitor.prototype.visitElement=function(el,context){var _this=this;this._mayBeAddBlockChildren(el);this._depth++;var wasInI18nNode=this._inI18nNode;var wasInImplicitNode=this._inImplicitNode;var childNodes=[];var translatedChildNodes=undefined;// Extract:
// - top level nodes with the (implicit) "i18n" attribute if not already in a section
// - ICU messages
var i18nAttr=_getI18nAttr(el);var i18nMeta=i18nAttr?i18nAttr.value:'';var isImplicit=this._implicitTags.some(function(tag){return el.name===tag;})&&!this._inIcu&&!this._isInTranslatableSection;var isTopLevelImplicit=!wasInImplicitNode&&isImplicit;this._inImplicitNode=wasInImplicitNode||isImplicit;if(!this._isInTranslatableSection&&!this._inIcu){if(i18nAttr||isTopLevelImplicit){this._inI18nNode=true;var message=this._addMessage(el.children,i18nMeta);translatedChildNodes=this._translateMessage(el,message);}if(this._mode==_VisitorMode.Extract){var isTranslatable=i18nAttr||isTopLevelImplicit;if(isTranslatable)this._openTranslatableSection(el);visitAll(this,el.children);if(isTranslatable)this._closeTranslatableSection(el,el.children);}}else{if(i18nAttr||isTopLevelImplicit){this._reportError(el,'Could not mark an element as translatable inside a translatable section');}if(this._mode==_VisitorMode.Extract){// Descend into child nodes for extraction
visitAll(this,el.children);}}if(this._mode===_VisitorMode.Merge){var visitNodes=translatedChildNodes||el.children;visitNodes.forEach(function(child){var visited=child.visit(_this,context);if(visited&&!_this._isInTranslatableSection){// Do not add the children from translatable sections (= i18n blocks here)
// They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)
childNodes=childNodes.concat(visited);}});}this._visitAttributesOf(el);this._depth--;this._inI18nNode=wasInI18nNode;this._inImplicitNode=wasInImplicitNode;if(this._mode===_VisitorMode.Merge){var translatedAttrs=this._translateAttributes(el);return new Element(el.name,translatedAttrs,childNodes,el.sourceSpan,el.startSourceSpan,el.endSourceSpan);}return null;};_Visitor.prototype.visitAttribute=function(attribute,context){throw new Error('unreachable code');};_Visitor.prototype._init=function(mode,interpolationConfig){this._mode=mode;this._inI18nBlock=false;this._inI18nNode=false;this._depth=0;this._inIcu=false;this._msgCountAtSectionStart=undefined;this._errors=[];this._messages=[];this._inImplicitNode=false;this._createI18nMessage=createI18nMessageFactory(interpolationConfig);};// looks for translatable attributes
_Visitor.prototype._visitAttributesOf=function(el){var _this=this;var explicitAttrNameToValue={};var implicitAttrNames=this._implicitAttrs[el.name]||[];el.attrs.filter(function(attr){return attr.name.startsWith(_I18N_ATTR_PREFIX);}).forEach(function(attr){return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)]=attr.value;});el.attrs.forEach(function(attr){if(attr.name in explicitAttrNameToValue){_this._addMessage([attr],explicitAttrNameToValue[attr.name]);}else if(implicitAttrNames.some(function(name){return attr.name===name;})){_this._addMessage([attr]);}});};// add a translatable message
_Visitor.prototype._addMessage=function(ast,msgMeta){if(ast.length==0||ast.length==1&&ast[0]instanceof Attribute&&!ast[0].value){// Do not create empty messages
return null;}var _a=_parseMessageMeta(msgMeta),meaning=_a.meaning,description=_a.description,id=_a.id;var message=this._createI18nMessage(ast,meaning,description,id);this._messages.push(message);return message;};// Translates the given message given the `TranslationBundle`
// This is used for translating elements / blocks - see `_translateAttributes` for attributes
// no-op when called in extraction mode (returns [])
_Visitor.prototype._translateMessage=function(el,message){if(message&&this._mode===_VisitorMode.Merge){var nodes=this._translations.get(message);if(nodes){return nodes;}this._reportError(el,"Translation unavailable for message id=\""+this._translations.digest(message)+"\"");}return[];};// translate the attributes of an element and remove i18n specific attributes
_Visitor.prototype._translateAttributes=function(el){var _this=this;var attributes=el.attrs;var i18nParsedMessageMeta={};attributes.forEach(function(attr){if(attr.name.startsWith(_I18N_ATTR_PREFIX)){i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)]=_parseMessageMeta(attr.value);}});var translatedAttributes=[];attributes.forEach(function(attr){if(attr.name===_I18N_ATTR||attr.name.startsWith(_I18N_ATTR_PREFIX)){// strip i18n specific attributes
return;}if(attr.value&&attr.value!=''&&i18nParsedMessageMeta.hasOwnProperty(attr.name)){var _a=i18nParsedMessageMeta[attr.name],meaning=_a.meaning,description=_a.description,id=_a.id;var message=_this._createI18nMessage([attr],meaning,description,id);var nodes=_this._translations.get(message);if(nodes){if(nodes.length==0){translatedAttributes.push(new Attribute(attr.name,'',attr.sourceSpan));}else if(nodes[0]instanceof Text){var value=nodes[0].value;translatedAttributes.push(new Attribute(attr.name,value,attr.sourceSpan));}else{_this._reportError(el,"Unexpected translation for attribute \""+attr.name+"\" (id=\""+(id||_this._translations.digest(message))+"\")");}}else{_this._reportError(el,"Translation unavailable for attribute \""+attr.name+"\" (id=\""+(id||_this._translations.digest(message))+"\")");}}else{translatedAttributes.push(attr);}});return translatedAttributes;};/**
     * Add the node as a child of the block when:
     * - we are in a block,
     * - we are not inside a ICU message (those are handled separately),
     * - the node is a "direct child" of the block
     */_Visitor.prototype._mayBeAddBlockChildren=function(node){if(this._inI18nBlock&&!this._inIcu&&this._depth==this._blockStartDepth){this._blockChildren.push(node);}};/**
     * Marks the start of a section, see `_closeTranslatableSection`
     */_Visitor.prototype._openTranslatableSection=function(node){if(this._isInTranslatableSection){this._reportError(node,'Unexpected section start');}else{this._msgCountAtSectionStart=this._messages.length;}};Object.defineProperty(_Visitor.prototype,"_isInTranslatableSection",{/**
         * A translatable section could be:
         * - the content of translatable element,
         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments
         */get:function get(){return this._msgCountAtSectionStart!==void 0;},enumerable:true,configurable:true});/**
     * Terminates a section.
     *
     * If a section has only one significant children (comments not significant) then we should not
     * keep the message from this children:
     *
     * `<p i18n="meaning|description">{ICU message}</p>` would produce two messages:
     * - one for the <p> content with meaning and description,
     * - another one for the ICU message.
     *
     * In this case the last message is discarded as it contains less information (the AST is
     * otherwise identical).
     *
     * Note that we should still keep messages extracted from attributes inside the section (ie in the
     * ICU message here)
     */_Visitor.prototype._closeTranslatableSection=function(node,directChildren){if(!this._isInTranslatableSection){this._reportError(node,'Unexpected section end');return;}var startIndex=this._msgCountAtSectionStart;var significantChildren=directChildren.reduce(function(count,node){return count+(node instanceof Comment?0:1);},0);if(significantChildren==1){for(var i=this._messages.length-1;i>=startIndex;i--){var ast=this._messages[i].nodes;if(!(ast.length==1&&ast[0]instanceof Text$1)){this._messages.splice(i,1);break;}}}this._msgCountAtSectionStart=undefined;};_Visitor.prototype._reportError=function(node,msg){this._errors.push(new I18nError(node.sourceSpan,msg));};return _Visitor;}();function _isOpeningComment(n){return!!(n instanceof Comment&&n.value&&n.value.startsWith('i18n'));}function _isClosingComment(n){return!!(n instanceof Comment&&n.value&&n.value==='/i18n');}function _getI18nAttr(p){return p.attrs.find(function(attr){return attr.name===_I18N_ATTR;})||null;}function _parseMessageMeta(i18n){if(!i18n)return{meaning:'',description:'',id:''};var idIndex=i18n.indexOf(ID_SEPARATOR);var descIndex=i18n.indexOf(MEANING_SEPARATOR);var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(idIndex>-1?[i18n.slice(0,idIndex),i18n.slice(idIndex+2)]:[i18n,''],2),meaningAndDesc=_a[0],id=_a[1];var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(descIndex>-1?[meaningAndDesc.slice(0,descIndex),meaningAndDesc.slice(descIndex+1)]:['',meaningAndDesc],2),meaning=_b[0],description=_b[1];return{meaning:meaning,description:description,id:id};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var XmlTagDefinition=/** @class */function(){function XmlTagDefinition(){this.closedByParent=false;this.contentType=TagContentType.PARSABLE_DATA;this.isVoid=false;this.ignoreFirstLf=false;this.canSelfClose=true;}XmlTagDefinition.prototype.requireExtraParent=function(currentParent){return false;};XmlTagDefinition.prototype.isClosedByChild=function(name){return false;};return XmlTagDefinition;}();var _TAG_DEFINITION=new XmlTagDefinition();function getXmlTagDefinition(tagName){return _TAG_DEFINITION;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var XmlParser=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XmlParser,_super);function XmlParser(){return _super.call(this,getXmlTagDefinition)||this;}XmlParser.prototype.parse=function(source,url,parseExpansionForms){if(parseExpansionForms===void 0){parseExpansionForms=false;}return _super.prototype.parse.call(this,source,url,parseExpansionForms);};return XmlParser;}(Parser$1);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Serializer=/** @class */function(){function Serializer(){}// Creates a name mapper, see `PlaceholderMapper`
// Returning `null` means that no name mapping is used.
Serializer.prototype.createNameMapper=function(message){return null;};return Serializer;}();/**
 * A simple mapper that take a function to transform an internal name to a public name
 */var SimplePlaceholderMapper=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SimplePlaceholderMapper,_super);// create a mapping from the message
function SimplePlaceholderMapper(message,mapName){var _this=_super.call(this)||this;_this.mapName=mapName;_this.internalToPublic={};_this.publicToNextId={};_this.publicToInternal={};message.nodes.forEach(function(node){return node.visit(_this);});return _this;}SimplePlaceholderMapper.prototype.toPublicName=function(internalName){return this.internalToPublic.hasOwnProperty(internalName)?this.internalToPublic[internalName]:null;};SimplePlaceholderMapper.prototype.toInternalName=function(publicName){return this.publicToInternal.hasOwnProperty(publicName)?this.publicToInternal[publicName]:null;};SimplePlaceholderMapper.prototype.visitText=function(text,context){return null;};SimplePlaceholderMapper.prototype.visitTagPlaceholder=function(ph,context){this.visitPlaceholderName(ph.startName);_super.prototype.visitTagPlaceholder.call(this,ph,context);this.visitPlaceholderName(ph.closeName);};SimplePlaceholderMapper.prototype.visitPlaceholder=function(ph,context){this.visitPlaceholderName(ph.name);};SimplePlaceholderMapper.prototype.visitIcuPlaceholder=function(ph,context){this.visitPlaceholderName(ph.name);};// XMB placeholders could only contains A-Z, 0-9 and _
SimplePlaceholderMapper.prototype.visitPlaceholderName=function(internalName){if(!internalName||this.internalToPublic.hasOwnProperty(internalName)){return;}var publicName=this.mapName(internalName);if(this.publicToInternal.hasOwnProperty(publicName)){// Create a new XMB when it has already been used
var nextId=this.publicToNextId[publicName];this.publicToNextId[publicName]=nextId+1;publicName=publicName+"_"+nextId;}else{this.publicToNextId[publicName]=1;}this.internalToPublic[internalName]=publicName;this.publicToInternal[publicName]=internalName;};return SimplePlaceholderMapper;}(RecurseVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _Visitor$1=/** @class */function(){function _Visitor(){}_Visitor.prototype.visitTag=function(tag){var _this=this;var strAttrs=this._serializeAttributes(tag.attrs);if(tag.children.length==0){return"<"+tag.name+strAttrs+"/>";}var strChildren=tag.children.map(function(node){return node.visit(_this);});return"<"+tag.name+strAttrs+">"+strChildren.join('')+"</"+tag.name+">";};_Visitor.prototype.visitText=function(text){return text.value;};_Visitor.prototype.visitDeclaration=function(decl){return"<?xml"+this._serializeAttributes(decl.attrs)+" ?>";};_Visitor.prototype._serializeAttributes=function(attrs){var strAttrs=Object.keys(attrs).map(function(name){return name+"=\""+attrs[name]+"\"";}).join(' ');return strAttrs.length>0?' '+strAttrs:'';};_Visitor.prototype.visitDoctype=function(doctype){return"<!DOCTYPE "+doctype.rootTag+" [\n"+doctype.dtd+"\n]>";};return _Visitor;}();var _visitor=new _Visitor$1();function serialize(nodes){return nodes.map(function(node){return node.visit(_visitor);}).join('');}var Declaration=/** @class */function(){function Declaration(unescapedAttrs){var _this=this;this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this.attrs[k]=escapeXml(unescapedAttrs[k]);});}Declaration.prototype.visit=function(visitor){return visitor.visitDeclaration(this);};return Declaration;}();var Doctype=/** @class */function(){function Doctype(rootTag,dtd){this.rootTag=rootTag;this.dtd=dtd;}Doctype.prototype.visit=function(visitor){return visitor.visitDoctype(this);};return Doctype;}();var Tag=/** @class */function(){function Tag(name,unescapedAttrs,children){if(unescapedAttrs===void 0){unescapedAttrs={};}if(children===void 0){children=[];}var _this=this;this.name=name;this.children=children;this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this.attrs[k]=escapeXml(unescapedAttrs[k]);});}Tag.prototype.visit=function(visitor){return visitor.visitTag(this);};return Tag;}();var Text$2=/** @class */function(){function Text(unescapedValue){this.value=escapeXml(unescapedValue);}Text.prototype.visit=function(visitor){return visitor.visitText(this);};return Text;}();var CR=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CR,_super);function CR(ws){if(ws===void 0){ws=0;}return _super.call(this,"\n"+new Array(ws+1).join(' '))||this;}return CR;}(Text$2);var _ESCAPED_CHARS=[[/&/g,'&amp;'],[/"/g,'&quot;'],[/'/g,'&apos;'],[/</g,'&lt;'],[/>/g,'&gt;']];// Escape `_ESCAPED_CHARS` characters in the given text with encoded entities
function escapeXml(text){return _ESCAPED_CHARS.reduce(function(text,entry){return text.replace(entry[0],entry[1]);},text);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _VERSION='1.2';var _XMLNS='urn:oasis:names:tc:xliff:document:1.2';// TODO(vicb): make this a param (s/_/-/)
var _DEFAULT_SOURCE_LANG='en';var _PLACEHOLDER_TAG='x';var _MARKER_TAG='mrk';var _FILE_TAG='file';var _SOURCE_TAG='source';var _SEGMENT_SOURCE_TAG='seg-source';var _TARGET_TAG='target';var _UNIT_TAG='trans-unit';var _CONTEXT_GROUP_TAG='context-group';var _CONTEXT_TAG='context';// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html
// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html
var Xliff=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Xliff,_super);function Xliff(){return _super!==null&&_super.apply(this,arguments)||this;}Xliff.prototype.write=function(messages,locale){var visitor=new _WriteVisitor();var transUnits=[];messages.forEach(function(message){var _a;var contextTags=[];message.sources.forEach(function(source){var contextGroupTag=new Tag(_CONTEXT_GROUP_TAG,{purpose:'location'});contextGroupTag.children.push(new CR(10),new Tag(_CONTEXT_TAG,{'context-type':'sourcefile'},[new Text$2(source.filePath)]),new CR(10),new Tag(_CONTEXT_TAG,{'context-type':'linenumber'},[new Text$2(""+source.startLine)]),new CR(8));contextTags.push(new CR(8),contextGroupTag);});var transUnit=new Tag(_UNIT_TAG,{id:message.id,datatype:'html'});(_a=transUnit.children).push.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([new CR(8),new Tag(_SOURCE_TAG,{},visitor.serialize(message.nodes))],contextTags));if(message.description){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'description'},[new Text$2(message.description)]));}if(message.meaning){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'meaning'},[new Text$2(message.meaning)]));}transUnit.children.push(new CR(6));transUnits.push(new CR(6),transUnit);});var body=new Tag('body',{},Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(transUnits,[new CR(4)]));var file=new Tag('file',{'source-language':locale||_DEFAULT_SOURCE_LANG,datatype:'plaintext',original:'ng2.template'},[new CR(4),body,new CR(2)]);var xliff=new Tag('xliff',{version:_VERSION,xmlns:_XMLNS},[new CR(2),file,new CR()]);return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),xliff,new CR()]);};Xliff.prototype.load=function(content,url){// xliff to xml nodes
var xliffParser=new XliffParser();var _a=xliffParser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n();Object.keys(msgIdToHtml).forEach(function(msgId){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,e=_a.errors;errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(e));i18nNodesByMsgId[msgId]=i18nNodes;});if(errors.length){throw new Error("xliff parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xliff.prototype.digest=function(message){return digest(message);};return Xliff;}(Serializer);var _WriteVisitor=/** @class */function(){function _WriteVisitor(){}_WriteVisitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_WriteVisitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(node.visit(_this)));});return nodes;};_WriteVisitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_WriteVisitor.prototype.visitTagPlaceholder=function(ph,context){var ctype=getCtypeForTag(ph.tag);if(ph.isVoid){// void tags have no children nor closing tags
return[new Tag(_PLACEHOLDER_TAG,{id:ph.startName,ctype:ctype,'equiv-text':"<"+ph.tag+"/>"})];}var startTagPh=new Tag(_PLACEHOLDER_TAG,{id:ph.startName,ctype:ctype,'equiv-text':"<"+ph.tag+">"});var closeTagPh=new Tag(_PLACEHOLDER_TAG,{id:ph.closeName,ctype:ctype,'equiv-text':"</"+ph.tag+">"});return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([startTagPh],this.serialize(ph.children),[closeTagPh]);};_WriteVisitor.prototype.visitPlaceholder=function(ph,context){return[new Tag(_PLACEHOLDER_TAG,{id:ph.name,'equiv-text':"{{"+ph.value+"}}"})];};_WriteVisitor.prototype.visitIcuPlaceholder=function(ph,context){var equivText="{"+ph.value.expression+", "+ph.value.type+", "+Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ')+"}";return[new Tag(_PLACEHOLDER_TAG,{id:ph.name,'equiv-text':equivText})];};_WriteVisitor.prototype.serialize=function(nodes){var _this=this;return[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(nodes.map(function(node){return node.visit(_this);})));};return _WriteVisitor;}();// TODO(vicb): add error management (structure)
// Extract messages as xml nodes from the xliff file
var XliffParser=/** @class */function(){function XliffParser(){this._locale=null;}XliffParser.prototype.parse=function(xliff,url){this._unitMlString=null;this._msgIdToHtml={};var xml=new XmlParser().parse(xliff,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes,null);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};XliffParser.prototype.visitElement=function(element,context){switch(element.name){case _UNIT_TAG:this._unitMlString=null;var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_UNIT_TAG+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{visitAll(this,element.children,null);if(typeof this._unitMlString==='string'){this._msgIdToHtml[id]=this._unitMlString;}else{this._addError(element,"Message "+id+" misses a translation");}}}break;// ignore those tags
case _SOURCE_TAG:case _SEGMENT_SOURCE_TAG:break;case _TARGET_TAG:var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._unitMlString=innerText;break;case _FILE_TAG:var localeAttr=element.attrs.find(function(attr){return attr.name==='target-language';});if(localeAttr){this._locale=localeAttr.value;}visitAll(this,element.children,null);break;default:// TODO(vicb): assert file structure, xliff version
// For now only recurse on unhandled nodes
visitAll(this,element.children,null);}};XliffParser.prototype.visitAttribute=function(attribute,context){};XliffParser.prototype.visitText=function(text,context){};XliffParser.prototype.visitComment=function(comment,context){};XliffParser.prototype.visitExpansion=function(expansion,context){};XliffParser.prototype.visitExpansionCase=function(expansionCase,context){};XliffParser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XliffParser;}();// Convert ml nodes (xliff syntax) to i18n nodes
var XmlToI18n=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,true);this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(visitAll(this,xmlIcu.rootNodes)));return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitElement=function(el,context){if(el.name===_PLACEHOLDER_TAG){var nameAttr=el.attrs.find(function(attr){return attr.name==='id';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,"<"+_PLACEHOLDER_TAG+"> misses the \"id\" attribute");return null;}if(el.name===_MARKER_TAG){return[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(visitAll(this,el.children)));}this._addError(el,"Unexpected tag");return null;};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:visitAll(this,icuCase.expression)};};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();function getCtypeForTag(tag){switch(tag.toLowerCase()){case'br':return'lb';case'img':return'image';default:return"x-"+tag;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _VERSION$1='2.0';var _XMLNS$1='urn:oasis:names:tc:xliff:document:2.0';// TODO(vicb): make this a param (s/_/-/)
var _DEFAULT_SOURCE_LANG$1='en';var _PLACEHOLDER_TAG$1='ph';var _PLACEHOLDER_SPANNING_TAG='pc';var _MARKER_TAG$1='mrk';var _XLIFF_TAG='xliff';var _SOURCE_TAG$1='source';var _TARGET_TAG$1='target';var _UNIT_TAG$1='unit';// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html
var Xliff2=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Xliff2,_super);function Xliff2(){return _super!==null&&_super.apply(this,arguments)||this;}Xliff2.prototype.write=function(messages,locale){var visitor=new _WriteVisitor$1();var units=[];messages.forEach(function(message){var unit=new Tag(_UNIT_TAG$1,{id:message.id});var notes=new Tag('notes');if(message.description||message.meaning){if(message.description){notes.children.push(new CR(8),new Tag('note',{category:'description'},[new Text$2(message.description)]));}if(message.meaning){notes.children.push(new CR(8),new Tag('note',{category:'meaning'},[new Text$2(message.meaning)]));}}message.sources.forEach(function(source){notes.children.push(new CR(8),new Tag('note',{category:'location'},[new Text$2(source.filePath+":"+source.startLine+(source.endLine!==source.startLine?','+source.endLine:''))]));});notes.children.push(new CR(6));unit.children.push(new CR(6),notes);var segment=new Tag('segment');segment.children.push(new CR(8),new Tag(_SOURCE_TAG$1,{},visitor.serialize(message.nodes)),new CR(6));unit.children.push(new CR(6),segment,new CR(4));units.push(new CR(4),unit);});var file=new Tag('file',{'original':'ng.template',id:'ngi18n'},Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(units,[new CR(2)]));var xliff=new Tag(_XLIFF_TAG,{version:_VERSION$1,xmlns:_XMLNS$1,srcLang:locale||_DEFAULT_SOURCE_LANG$1},[new CR(2),file,new CR()]);return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),xliff,new CR()]);};Xliff2.prototype.load=function(content,url){// xliff to xml nodes
var xliff2Parser=new Xliff2Parser();var _a=xliff2Parser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n$1();Object.keys(msgIdToHtml).forEach(function(msgId){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,e=_a.errors;errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(e));i18nNodesByMsgId[msgId]=i18nNodes;});if(errors.length){throw new Error("xliff2 parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xliff2.prototype.digest=function(message){return decimalDigest(message);};return Xliff2;}(Serializer);var _WriteVisitor$1=/** @class */function(){function _WriteVisitor(){}_WriteVisitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_WriteVisitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(node.visit(_this)));});return nodes;};_WriteVisitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_WriteVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var type=getTypeForTag(ph.tag);if(ph.isVoid){var tagPh=new Tag(_PLACEHOLDER_TAG$1,{id:(this._nextPlaceholderId++).toString(),equiv:ph.startName,type:type,disp:"<"+ph.tag+"/>"});return[tagPh];}var tagPc=new Tag(_PLACEHOLDER_SPANNING_TAG,{id:(this._nextPlaceholderId++).toString(),equivStart:ph.startName,equivEnd:ph.closeName,type:type,dispStart:"<"+ph.tag+">",dispEnd:"</"+ph.tag+">"});var nodes=[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(ph.children.map(function(node){return node.visit(_this);})));if(nodes.length){nodes.forEach(function(node){return tagPc.children.push(node);});}else{tagPc.children.push(new Text$2(''));}return[tagPc];};_WriteVisitor.prototype.visitPlaceholder=function(ph,context){var idStr=(this._nextPlaceholderId++).toString();return[new Tag(_PLACEHOLDER_TAG$1,{id:idStr,equiv:ph.name,disp:"{{"+ph.value+"}}"})];};_WriteVisitor.prototype.visitIcuPlaceholder=function(ph,context){var cases=Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ');var idStr=(this._nextPlaceholderId++).toString();return[new Tag(_PLACEHOLDER_TAG$1,{id:idStr,equiv:ph.name,disp:"{"+ph.value.expression+", "+ph.value.type+", "+cases+"}"})];};_WriteVisitor.prototype.serialize=function(nodes){var _this=this;this._nextPlaceholderId=0;return[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(nodes.map(function(node){return node.visit(_this);})));};return _WriteVisitor;}();// Extract messages as xml nodes from the xliff file
var Xliff2Parser=/** @class */function(){function Xliff2Parser(){this._locale=null;}Xliff2Parser.prototype.parse=function(xliff,url){this._unitMlString=null;this._msgIdToHtml={};var xml=new XmlParser().parse(xliff,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes,null);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};Xliff2Parser.prototype.visitElement=function(element,context){switch(element.name){case _UNIT_TAG$1:this._unitMlString=null;var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_UNIT_TAG$1+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{visitAll(this,element.children,null);if(typeof this._unitMlString==='string'){this._msgIdToHtml[id]=this._unitMlString;}else{this._addError(element,"Message "+id+" misses a translation");}}}break;case _SOURCE_TAG$1:// ignore source message
break;case _TARGET_TAG$1:var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._unitMlString=innerText;break;case _XLIFF_TAG:var localeAttr=element.attrs.find(function(attr){return attr.name==='trgLang';});if(localeAttr){this._locale=localeAttr.value;}var versionAttr=element.attrs.find(function(attr){return attr.name==='version';});if(versionAttr){var version=versionAttr.value;if(version!=='2.0'){this._addError(element,"The XLIFF file version "+version+" is not compatible with XLIFF 2.0 serializer");}else{visitAll(this,element.children,null);}}break;default:visitAll(this,element.children,null);}};Xliff2Parser.prototype.visitAttribute=function(attribute,context){};Xliff2Parser.prototype.visitText=function(text,context){};Xliff2Parser.prototype.visitComment=function(comment,context){};Xliff2Parser.prototype.visitExpansion=function(expansion,context){};Xliff2Parser.prototype.visitExpansionCase=function(expansionCase,context){};Xliff2Parser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return Xliff2Parser;}();// Convert ml nodes (xliff syntax) to i18n nodes
var XmlToI18n$1=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,true);this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(visitAll(this,xmlIcu.rootNodes)));return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitElement=function(el,context){var _this=this;switch(el.name){case _PLACEHOLDER_TAG$1:var nameAttr=el.attrs.find(function(attr){return attr.name==='equiv';});if(nameAttr){return[new Placeholder('',nameAttr.value,el.sourceSpan)];}this._addError(el,"<"+_PLACEHOLDER_TAG$1+"> misses the \"equiv\" attribute");break;case _PLACEHOLDER_SPANNING_TAG:var startAttr=el.attrs.find(function(attr){return attr.name==='equivStart';});var endAttr=el.attrs.find(function(attr){return attr.name==='equivEnd';});if(!startAttr){this._addError(el,"<"+_PLACEHOLDER_TAG$1+"> misses the \"equivStart\" attribute");}else if(!endAttr){this._addError(el,"<"+_PLACEHOLDER_TAG$1+"> misses the \"equivEnd\" attribute");}else{var startId=startAttr.value;var endId=endAttr.value;var nodes=[];return nodes.concat.apply(nodes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([new Placeholder('',startId,el.sourceSpan)],el.children.map(function(node){return node.visit(_this,null);}),[new Placeholder('',endId,el.sourceSpan)]));}break;case _MARKER_TAG$1:return[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(visitAll(this,el.children)));default:this._addError(el,"Unexpected tag");}return null;};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(visitAll(this,icuCase.expression)))};};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();function getTypeForTag(tag){switch(tag.toLowerCase()){case'br':case'b':case'i':case'u':return'fmt';case'img':return'image';case'a':return'link';default:return'other';}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _MESSAGES_TAG='messagebundle';var _MESSAGE_TAG='msg';var _PLACEHOLDER_TAG$2='ph';var _EXAMPLE_TAG='ex';var _SOURCE_TAG$2='source';var _DOCTYPE="<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>";var Xmb=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Xmb,_super);function Xmb(){return _super!==null&&_super.apply(this,arguments)||this;}Xmb.prototype.write=function(messages,locale){var exampleVisitor=new ExampleVisitor();var visitor=new _Visitor$2();var rootNode=new Tag(_MESSAGES_TAG);messages.forEach(function(message){var attrs={id:message.id};if(message.description){attrs['desc']=message.description;}if(message.meaning){attrs['meaning']=message.meaning;}var sourceTags=[];message.sources.forEach(function(source){sourceTags.push(new Tag(_SOURCE_TAG$2,{},[new Text$2(source.filePath+":"+source.startLine+(source.endLine!==source.startLine?','+source.endLine:''))]));});rootNode.children.push(new CR(2),new Tag(_MESSAGE_TAG,attrs,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(sourceTags,visitor.serialize(message.nodes))));});rootNode.children.push(new CR());return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),new Doctype(_MESSAGES_TAG,_DOCTYPE),new CR(),exampleVisitor.addDefaultExamples(rootNode),new CR()]);};Xmb.prototype.load=function(content,url){throw new Error('Unsupported');};Xmb.prototype.digest=function(message){return digest$1(message);};Xmb.prototype.createNameMapper=function(message){return new SimplePlaceholderMapper(message,toPublicName);};return Xmb;}(Serializer);var _Visitor$2=/** @class */function(){function _Visitor(){}_Visitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_Visitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(node.visit(_this)));});return nodes;};_Visitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_Visitor.prototype.visitTagPlaceholder=function(ph,context){var startTagAsText=new Text$2("<"+ph.tag+">");var startEx=new Tag(_EXAMPLE_TAG,{},[startTagAsText]);// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
var startTagPh=new Tag(_PLACEHOLDER_TAG$2,{name:ph.startName},[startEx,startTagAsText]);if(ph.isVoid){// void tags have no children nor closing tags
return[startTagPh];}var closeTagAsText=new Text$2("</"+ph.tag+">");var closeEx=new Tag(_EXAMPLE_TAG,{},[closeTagAsText]);// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
var closeTagPh=new Tag(_PLACEHOLDER_TAG$2,{name:ph.closeName},[closeEx,closeTagAsText]);return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([startTagPh],this.serialize(ph.children),[closeTagPh]);};_Visitor.prototype.visitPlaceholder=function(ph,context){var interpolationAsText=new Text$2("{{"+ph.value+"}}");// Example tag needs to be not-empty for TC.
var exTag=new Tag(_EXAMPLE_TAG,{},[interpolationAsText]);return[// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
new Tag(_PLACEHOLDER_TAG$2,{name:ph.name},[exTag,interpolationAsText])];};_Visitor.prototype.visitIcuPlaceholder=function(ph,context){var icuExpression=ph.value.expression;var icuType=ph.value.type;var icuCases=Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ');var icuAsText=new Text$2("{"+icuExpression+", "+icuType+", "+icuCases+"}");var exTag=new Tag(_EXAMPLE_TAG,{},[icuAsText]);return[// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
new Tag(_PLACEHOLDER_TAG$2,{name:ph.name},[exTag,icuAsText])];};_Visitor.prototype.serialize=function(nodes){var _this=this;return[].concat.apply([],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(nodes.map(function(node){return node.visit(_this);})));};return _Visitor;}();function digest$1(message){return decimalDigest(message);}// TC requires at least one non-empty example on placeholders
var ExampleVisitor=/** @class */function(){function ExampleVisitor(){}ExampleVisitor.prototype.addDefaultExamples=function(node){node.visit(this);return node;};ExampleVisitor.prototype.visitTag=function(tag){var _this=this;if(tag.name===_PLACEHOLDER_TAG$2){if(!tag.children||tag.children.length==0){var exText=new Text$2(tag.attrs['name']||'...');tag.children=[new Tag(_EXAMPLE_TAG,{},[exText])];}}else if(tag.children){tag.children.forEach(function(node){return node.visit(_this);});}};ExampleVisitor.prototype.visitText=function(text){};ExampleVisitor.prototype.visitDeclaration=function(decl){};ExampleVisitor.prototype.visitDoctype=function(doctype){};return ExampleVisitor;}();// XMB/XTB placeholders can only contain A-Z, 0-9 and _
function toPublicName(internalName){return internalName.toUpperCase().replace(/[^A-Z0-9_]/g,'_');}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _TRANSLATIONS_TAG='translationbundle';var _TRANSLATION_TAG='translation';var _PLACEHOLDER_TAG$3='ph';var Xtb=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Xtb,_super);function Xtb(){return _super!==null&&_super.apply(this,arguments)||this;}Xtb.prototype.write=function(messages,locale){throw new Error('Unsupported');};Xtb.prototype.load=function(content,url){// xtb to xml nodes
var xtbParser=new XtbParser();var _a=xtbParser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n$2();// Because we should be able to load xtb files that rely on features not supported by angular,
// we need to delay the conversion of html to i18n nodes so that non angular messages are not
// converted
Object.keys(msgIdToHtml).forEach(function(msgId){var valueFn=function valueFn(){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,errors=_a.errors;if(errors.length){throw new Error("xtb parse errors:\n"+errors.join('\n'));}return i18nNodes;};createLazyProperty(i18nNodesByMsgId,msgId,valueFn);});if(errors.length){throw new Error("xtb parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xtb.prototype.digest=function(message){return digest$1(message);};Xtb.prototype.createNameMapper=function(message){return new SimplePlaceholderMapper(message,toPublicName);};return Xtb;}(Serializer);function createLazyProperty(messages,id,valueFn){Object.defineProperty(messages,id,{configurable:true,enumerable:true,get:function get(){var value=valueFn();Object.defineProperty(messages,id,{enumerable:true,value:value});return value;},set:function set(_){throw new Error('Could not overwrite an XTB translation');}});}// Extract messages as xml nodes from the xtb file
var XtbParser=/** @class */function(){function XtbParser(){this._locale=null;}XtbParser.prototype.parse=function(xtb,url){this._bundleDepth=0;this._msgIdToHtml={};// We can not parse the ICU messages at this point as some messages might not originate
// from Angular that could not be lex'd.
var xml=new XmlParser().parse(xtb,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};XtbParser.prototype.visitElement=function(element,context){switch(element.name){case _TRANSLATIONS_TAG:this._bundleDepth++;if(this._bundleDepth>1){this._addError(element,"<"+_TRANSLATIONS_TAG+"> elements can not be nested");}var langAttr=element.attrs.find(function(attr){return attr.name==='lang';});if(langAttr){this._locale=langAttr.value;}visitAll(this,element.children,null);this._bundleDepth--;break;case _TRANSLATION_TAG:var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_TRANSLATION_TAG+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._msgIdToHtml[id]=innerText;}}break;default:this._addError(element,'Unexpected tag');}};XtbParser.prototype.visitAttribute=function(attribute,context){};XtbParser.prototype.visitText=function(text,context){};XtbParser.prototype.visitComment=function(comment,context){};XtbParser.prototype.visitExpansion=function(expansion,context){};XtbParser.prototype.visitExpansionCase=function(expansionCase,context){};XtbParser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XtbParser;}();// Convert ml nodes (xtb syntax) to i18n nodes
var XmlToI18n$2=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,true);this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:visitAll(this,xmlIcu.rootNodes);return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:visitAll(this,icuCase.expression)};};XmlToI18n.prototype.visitElement=function(el,context){if(el.name===_PLACEHOLDER_TAG$3){var nameAttr=el.attrs.find(function(attr){return attr.name==='name';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,"<"+_PLACEHOLDER_TAG$3+"> misses the \"name\" attribute");}else{this._addError(el,"Unexpected tag");}return null;};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var HtmlParser=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(HtmlParser,_super);function HtmlParser(){return _super.call(this,getHtmlTagDefinition)||this;}HtmlParser.prototype.parse=function(source,url,parseExpansionForms,interpolationConfig){if(parseExpansionForms===void 0){parseExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}return _super.prototype.parse.call(this,source,url,parseExpansionForms,interpolationConfig);};return HtmlParser;}(Parser$1);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A container for translated messages
 */var TranslationBundle=/** @class */function(){function TranslationBundle(_i18nNodesByMsgId,locale,digest,mapperFactory,missingTranslationStrategy,console){if(_i18nNodesByMsgId===void 0){_i18nNodesByMsgId={};}if(missingTranslationStrategy===void 0){missingTranslationStrategy=MissingTranslationStrategy.Warning;}this._i18nNodesByMsgId=_i18nNodesByMsgId;this.digest=digest;this.mapperFactory=mapperFactory;this._i18nToHtml=new I18nToHtmlVisitor(_i18nNodesByMsgId,locale,digest,mapperFactory,missingTranslationStrategy,console);}// Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.
TranslationBundle.load=function(content,url,serializer,missingTranslationStrategy,console){var _a=serializer.load(content,url),locale=_a.locale,i18nNodesByMsgId=_a.i18nNodesByMsgId;var digestFn=function digestFn(m){return serializer.digest(m);};var mapperFactory=function mapperFactory(m){return serializer.createNameMapper(m);};return new TranslationBundle(i18nNodesByMsgId,locale,digestFn,mapperFactory,missingTranslationStrategy,console);};// Returns the translation as HTML nodes from the given source message.
TranslationBundle.prototype.get=function(srcMsg){var html=this._i18nToHtml.convert(srcMsg);if(html.errors.length){throw new Error(html.errors.join('\n'));}return html.nodes;};TranslationBundle.prototype.has=function(srcMsg){return this.digest(srcMsg)in this._i18nNodesByMsgId;};return TranslationBundle;}();var I18nToHtmlVisitor=/** @class */function(){function I18nToHtmlVisitor(_i18nNodesByMsgId,_locale,_digest,_mapperFactory,_missingTranslationStrategy,_console){if(_i18nNodesByMsgId===void 0){_i18nNodesByMsgId={};}this._i18nNodesByMsgId=_i18nNodesByMsgId;this._locale=_locale;this._digest=_digest;this._mapperFactory=_mapperFactory;this._missingTranslationStrategy=_missingTranslationStrategy;this._console=_console;this._contextStack=[];this._errors=[];}I18nToHtmlVisitor.prototype.convert=function(srcMsg){this._contextStack.length=0;this._errors.length=0;// i18n to text
var text=this._convertToText(srcMsg);// text to html
var url=srcMsg.nodes[0].sourceSpan.start.file.url;var html=new HtmlParser().parse(text,url,true);return{nodes:html.rootNodes,errors:Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this._errors,html.errors)};};I18nToHtmlVisitor.prototype.visitText=function(text,context){// `convert()` uses an `HtmlParser` to return `html.Node`s
// we should then make sure that any special characters are escaped
return escapeXml(text.value);};I18nToHtmlVisitor.prototype.visitContainer=function(container,context){var _this=this;return container.children.map(function(n){return n.visit(_this);}).join('');};I18nToHtmlVisitor.prototype.visitIcu=function(icu,context){var _this=this;var cases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});// TODO(vicb): Once all format switch to using expression placeholders
// we should throw when the placeholder is not in the source message
var exp=this._srcMsg.placeholders.hasOwnProperty(icu.expression)?this._srcMsg.placeholders[icu.expression]:icu.expression;return"{"+exp+", "+icu.type+", "+cases.join(' ')+"}";};I18nToHtmlVisitor.prototype.visitPlaceholder=function(ph,context){var phName=this._mapper(ph.name);if(this._srcMsg.placeholders.hasOwnProperty(phName)){return this._srcMsg.placeholders[phName];}if(this._srcMsg.placeholderToMessage.hasOwnProperty(phName)){return this._convertToText(this._srcMsg.placeholderToMessage[phName]);}this._addError(ph,"Unknown placeholder \""+ph.name+"\"");return'';};// Loaded message contains only placeholders (vs tag and icu placeholders).
// However when a translation can not be found, we need to serialize the source message
// which can contain tag placeholders
I18nToHtmlVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var tag=""+ph.tag;var attrs=Object.keys(ph.attrs).map(function(name){return name+"=\""+ph.attrs[name]+"\"";}).join(' ');if(ph.isVoid){return"<"+tag+" "+attrs+"/>";}var children=ph.children.map(function(c){return c.visit(_this);}).join('');return"<"+tag+" "+attrs+">"+children+"</"+tag+">";};// Loaded message contains only placeholders (vs tag and icu placeholders).
// However when a translation can not be found, we need to serialize the source message
// which can contain tag placeholders
I18nToHtmlVisitor.prototype.visitIcuPlaceholder=function(ph,context){// An ICU placeholder references the source message to be serialized
return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);};/**
     * Convert a source message to a translated text string:
     * - text nodes are replaced with their translation,
     * - placeholders are replaced with their content,
     * - ICU nodes are converted to ICU expressions.
     */I18nToHtmlVisitor.prototype._convertToText=function(srcMsg){var _this=this;var id=this._digest(srcMsg);var mapper=this._mapperFactory?this._mapperFactory(srcMsg):null;var nodes;this._contextStack.push({msg:this._srcMsg,mapper:this._mapper});this._srcMsg=srcMsg;if(this._i18nNodesByMsgId.hasOwnProperty(id)){// When there is a translation use its nodes as the source
// And create a mapper to convert serialized placeholder names to internal names
nodes=this._i18nNodesByMsgId[id];this._mapper=function(name){return mapper?mapper.toInternalName(name):name;};}else{// When no translation has been found
// - report an error / a warning / nothing,
// - use the nodes from the original message
// - placeholders are already internal and need no mapper
if(this._missingTranslationStrategy===MissingTranslationStrategy.Error){var ctx=this._locale?" for locale \""+this._locale+"\"":'';this._addError(srcMsg.nodes[0],"Missing translation for message \""+id+"\""+ctx);}else if(this._console&&this._missingTranslationStrategy===MissingTranslationStrategy.Warning){var ctx=this._locale?" for locale \""+this._locale+"\"":'';this._console.warn("Missing translation for message \""+id+"\""+ctx);}nodes=srcMsg.nodes;this._mapper=function(name){return name;};}var text=nodes.map(function(node){return node.visit(_this);}).join('');var context=this._contextStack.pop();this._srcMsg=context.msg;this._mapper=context.mapper;return text;};I18nToHtmlVisitor.prototype._addError=function(el,msg){this._errors.push(new I18nError(el.sourceSpan,msg));};return I18nToHtmlVisitor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var I18NHtmlParser=/** @class */function(){function I18NHtmlParser(_htmlParser,translations,translationsFormat,missingTranslation,console){if(missingTranslation===void 0){missingTranslation=MissingTranslationStrategy.Warning;}this._htmlParser=_htmlParser;if(translations){var serializer=createSerializer(translationsFormat);this._translationBundle=TranslationBundle.load(translations,'i18n',serializer,missingTranslation,console);}else{this._translationBundle=new TranslationBundle({},null,digest,undefined,missingTranslation,console);}}I18NHtmlParser.prototype.parse=function(source,url,parseExpansionForms,interpolationConfig){if(parseExpansionForms===void 0){parseExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var parseResult=this._htmlParser.parse(source,url,parseExpansionForms,interpolationConfig);if(parseResult.errors.length){return new ParseTreeResult(parseResult.rootNodes,parseResult.errors);}return mergeTranslations(parseResult.rootNodes,this._translationBundle,interpolationConfig,[],{});};return I18NHtmlParser;}();function createSerializer(format){format=(format||'xlf').toLowerCase();switch(format){case'xmb':return new Xmb();case'xtb':return new Xtb();case'xliff2':case'xlf2':return new Xliff2();case'xliff':case'xlf':default:return new Xliff();}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CORE='@angular/core';var Identifiers=/** @class */function(){function Identifiers(){}Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS={name:'ANALYZE_FOR_ENTRY_COMPONENTS',moduleName:CORE};Identifiers.ElementRef={name:'ElementRef',moduleName:CORE};Identifiers.NgModuleRef={name:'NgModuleRef',moduleName:CORE};Identifiers.ViewContainerRef={name:'ViewContainerRef',moduleName:CORE};Identifiers.ChangeDetectorRef={name:'ChangeDetectorRef',moduleName:CORE};Identifiers.QueryList={name:'QueryList',moduleName:CORE};Identifiers.TemplateRef={name:'TemplateRef',moduleName:CORE};Identifiers.Renderer2={name:'Renderer2',moduleName:CORE};Identifiers.CodegenComponentFactoryResolver={name:'ɵCodegenComponentFactoryResolver',moduleName:CORE};Identifiers.ComponentFactoryResolver={name:'ComponentFactoryResolver',moduleName:CORE};Identifiers.ComponentFactory={name:'ComponentFactory',moduleName:CORE};Identifiers.ComponentRef={name:'ComponentRef',moduleName:CORE};Identifiers.NgModuleFactory={name:'NgModuleFactory',moduleName:CORE};Identifiers.createModuleFactory={name:'ɵcmf',moduleName:CORE};Identifiers.moduleDef={name:'ɵmod',moduleName:CORE};Identifiers.moduleProviderDef={name:'ɵmpd',moduleName:CORE};Identifiers.RegisterModuleFactoryFn={name:'ɵregisterModuleFactory',moduleName:CORE};Identifiers.inject={name:'inject',moduleName:CORE};Identifiers.INJECTOR={name:'INJECTOR',moduleName:CORE};Identifiers.Injector={name:'Injector',moduleName:CORE};Identifiers.defineInjectable={name:'defineInjectable',moduleName:CORE};Identifiers.InjectableDef={name:'ɵInjectableDef',moduleName:CORE};Identifiers.ViewEncapsulation={name:'ViewEncapsulation',moduleName:CORE};Identifiers.ChangeDetectionStrategy={name:'ChangeDetectionStrategy',moduleName:CORE};Identifiers.SecurityContext={name:'SecurityContext',moduleName:CORE};Identifiers.LOCALE_ID={name:'LOCALE_ID',moduleName:CORE};Identifiers.TRANSLATIONS_FORMAT={name:'TRANSLATIONS_FORMAT',moduleName:CORE};Identifiers.inlineInterpolate={name:'ɵinlineInterpolate',moduleName:CORE};Identifiers.interpolate={name:'ɵinterpolate',moduleName:CORE};Identifiers.EMPTY_ARRAY={name:'ɵEMPTY_ARRAY',moduleName:CORE};Identifiers.EMPTY_MAP={name:'ɵEMPTY_MAP',moduleName:CORE};Identifiers.Renderer={name:'Renderer',moduleName:CORE};Identifiers.viewDef={name:'ɵvid',moduleName:CORE};Identifiers.elementDef={name:'ɵeld',moduleName:CORE};Identifiers.anchorDef={name:'ɵand',moduleName:CORE};Identifiers.textDef={name:'ɵted',moduleName:CORE};Identifiers.directiveDef={name:'ɵdid',moduleName:CORE};Identifiers.providerDef={name:'ɵprd',moduleName:CORE};Identifiers.queryDef={name:'ɵqud',moduleName:CORE};Identifiers.pureArrayDef={name:'ɵpad',moduleName:CORE};Identifiers.pureObjectDef={name:'ɵpod',moduleName:CORE};Identifiers.purePipeDef={name:'ɵppd',moduleName:CORE};Identifiers.pipeDef={name:'ɵpid',moduleName:CORE};Identifiers.nodeValue={name:'ɵnov',moduleName:CORE};Identifiers.ngContentDef={name:'ɵncd',moduleName:CORE};Identifiers.unwrapValue={name:'ɵunv',moduleName:CORE};Identifiers.createRendererType2={name:'ɵcrt',moduleName:CORE};// type only
Identifiers.RendererType2={name:'RendererType2',moduleName:CORE};// type only
Identifiers.ViewDefinition={name:'ɵViewDefinition',moduleName:CORE};Identifiers.createComponentFactory={name:'ɵccf',moduleName:CORE};return Identifiers;}();function createTokenForReference(reference){return{identifier:{reference:reference}};}function createTokenForExternalReference(reflector,reference){return createTokenForReference(reflector.resolveExternalReference(reference));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ //// Types
var TypeModifier;(function(TypeModifier){TypeModifier[TypeModifier["Const"]=0]="Const";})(TypeModifier||(TypeModifier={}));var Type$1=/** @class */function(){function Type(modifiers){if(modifiers===void 0){modifiers=null;}this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}}Type.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return Type;}();var BuiltinTypeName;(function(BuiltinTypeName){BuiltinTypeName[BuiltinTypeName["Dynamic"]=0]="Dynamic";BuiltinTypeName[BuiltinTypeName["Bool"]=1]="Bool";BuiltinTypeName[BuiltinTypeName["String"]=2]="String";BuiltinTypeName[BuiltinTypeName["Int"]=3]="Int";BuiltinTypeName[BuiltinTypeName["Number"]=4]="Number";BuiltinTypeName[BuiltinTypeName["Function"]=5]="Function";BuiltinTypeName[BuiltinTypeName["Inferred"]=6]="Inferred";BuiltinTypeName[BuiltinTypeName["None"]=7]="None";})(BuiltinTypeName||(BuiltinTypeName={}));var BuiltinType=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(BuiltinType,_super);function BuiltinType(name,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.name=name;return _this;}BuiltinType.prototype.visitType=function(visitor,context){return visitor.visitBuiltinType(this,context);};return BuiltinType;}(Type$1);var ExpressionType=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ExpressionType,_super);function ExpressionType(value,modifiers,typeParams){if(modifiers===void 0){modifiers=null;}if(typeParams===void 0){typeParams=null;}var _this=_super.call(this,modifiers)||this;_this.value=value;_this.typeParams=typeParams;return _this;}ExpressionType.prototype.visitType=function(visitor,context){return visitor.visitExpressionType(this,context);};return ExpressionType;}(Type$1);var ArrayType=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ArrayType,_super);function ArrayType(of,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.of=of;return _this;}ArrayType.prototype.visitType=function(visitor,context){return visitor.visitArrayType(this,context);};return ArrayType;}(Type$1);var MapType=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapType,_super);function MapType(valueType,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.valueType=valueType||null;return _this;}MapType.prototype.visitType=function(visitor,context){return visitor.visitMapType(this,context);};return MapType;}(Type$1);var DYNAMIC_TYPE=new BuiltinType(BuiltinTypeName.Dynamic);var INFERRED_TYPE=new BuiltinType(BuiltinTypeName.Inferred);var BOOL_TYPE=new BuiltinType(BuiltinTypeName.Bool);var INT_TYPE=new BuiltinType(BuiltinTypeName.Int);var NUMBER_TYPE=new BuiltinType(BuiltinTypeName.Number);var STRING_TYPE=new BuiltinType(BuiltinTypeName.String);var FUNCTION_TYPE=new BuiltinType(BuiltinTypeName.Function);var NONE_TYPE=new BuiltinType(BuiltinTypeName.None);///// Expressions
var BinaryOperator;(function(BinaryOperator){BinaryOperator[BinaryOperator["Equals"]=0]="Equals";BinaryOperator[BinaryOperator["NotEquals"]=1]="NotEquals";BinaryOperator[BinaryOperator["Identical"]=2]="Identical";BinaryOperator[BinaryOperator["NotIdentical"]=3]="NotIdentical";BinaryOperator[BinaryOperator["Minus"]=4]="Minus";BinaryOperator[BinaryOperator["Plus"]=5]="Plus";BinaryOperator[BinaryOperator["Divide"]=6]="Divide";BinaryOperator[BinaryOperator["Multiply"]=7]="Multiply";BinaryOperator[BinaryOperator["Modulo"]=8]="Modulo";BinaryOperator[BinaryOperator["And"]=9]="And";BinaryOperator[BinaryOperator["Or"]=10]="Or";BinaryOperator[BinaryOperator["BitwiseAnd"]=11]="BitwiseAnd";BinaryOperator[BinaryOperator["Lower"]=12]="Lower";BinaryOperator[BinaryOperator["LowerEquals"]=13]="LowerEquals";BinaryOperator[BinaryOperator["Bigger"]=14]="Bigger";BinaryOperator[BinaryOperator["BiggerEquals"]=15]="BiggerEquals";})(BinaryOperator||(BinaryOperator={}));function nullSafeIsEquivalent(base,other){if(base==null||other==null){return base==other;}return base.isEquivalent(other);}function areAllEquivalent(base,other){var len=base.length;if(len!==other.length){return false;}for(var i=0;i<len;i++){if(!base[i].isEquivalent(other[i])){return false;}}return true;}var Expression=/** @class */function(){function Expression(type,sourceSpan){this.type=type||null;this.sourceSpan=sourceSpan||null;}Expression.prototype.prop=function(name,sourceSpan){return new ReadPropExpr(this,name,null,sourceSpan);};Expression.prototype.key=function(index,type,sourceSpan){return new ReadKeyExpr(this,index,type,sourceSpan);};Expression.prototype.callMethod=function(name,params,sourceSpan){return new InvokeMethodExpr(this,name,params,null,sourceSpan);};Expression.prototype.callFn=function(params,sourceSpan){return new InvokeFunctionExpr(this,params,null,sourceSpan);};Expression.prototype.instantiate=function(params,type,sourceSpan){return new InstantiateExpr(this,params,type,sourceSpan);};Expression.prototype.conditional=function(trueCase,falseCase,sourceSpan){if(falseCase===void 0){falseCase=null;}return new ConditionalExpr(this,trueCase,falseCase,null,sourceSpan);};Expression.prototype.equals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Equals,this,rhs,null,sourceSpan);};Expression.prototype.notEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.NotEquals,this,rhs,null,sourceSpan);};Expression.prototype.identical=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Identical,this,rhs,null,sourceSpan);};Expression.prototype.notIdentical=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.NotIdentical,this,rhs,null,sourceSpan);};Expression.prototype.minus=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Minus,this,rhs,null,sourceSpan);};Expression.prototype.plus=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Plus,this,rhs,null,sourceSpan);};Expression.prototype.divide=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Divide,this,rhs,null,sourceSpan);};Expression.prototype.multiply=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Multiply,this,rhs,null,sourceSpan);};Expression.prototype.modulo=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Modulo,this,rhs,null,sourceSpan);};Expression.prototype.and=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.And,this,rhs,null,sourceSpan);};Expression.prototype.bitwiseAnd=function(rhs,sourceSpan,parens){if(parens===void 0){parens=true;}return new BinaryOperatorExpr(BinaryOperator.BitwiseAnd,this,rhs,null,sourceSpan,parens);};Expression.prototype.or=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Or,this,rhs,null,sourceSpan);};Expression.prototype.lower=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Lower,this,rhs,null,sourceSpan);};Expression.prototype.lowerEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.LowerEquals,this,rhs,null,sourceSpan);};Expression.prototype.bigger=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Bigger,this,rhs,null,sourceSpan);};Expression.prototype.biggerEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.BiggerEquals,this,rhs,null,sourceSpan);};Expression.prototype.isBlank=function(sourceSpan){// Note: We use equals by purpose here to compare to null and undefined in JS.
// We use the typed null to allow strictNullChecks to narrow types.
return this.equals(TYPED_NULL_EXPR,sourceSpan);};Expression.prototype.cast=function(type,sourceSpan){return new CastExpr(this,type,sourceSpan);};Expression.prototype.toStmt=function(){return new ExpressionStatement(this,null);};return Expression;}();var BuiltinVar;(function(BuiltinVar){BuiltinVar[BuiltinVar["This"]=0]="This";BuiltinVar[BuiltinVar["Super"]=1]="Super";BuiltinVar[BuiltinVar["CatchError"]=2]="CatchError";BuiltinVar[BuiltinVar["CatchStack"]=3]="CatchStack";})(BuiltinVar||(BuiltinVar={}));var ReadVarExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ReadVarExpr,_super);function ReadVarExpr(name,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;if(typeof name==='string'){_this.name=name;_this.builtin=null;}else{_this.name=null;_this.builtin=name;}return _this;}ReadVarExpr.prototype.isEquivalent=function(e){return e instanceof ReadVarExpr&&this.name===e.name&&this.builtin===e.builtin;};ReadVarExpr.prototype.isConstant=function(){return false;};ReadVarExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadVarExpr(this,context);};ReadVarExpr.prototype.set=function(value){if(!this.name){throw new Error("Built in variable "+this.builtin+" can not be assigned to.");}return new WriteVarExpr(this.name,value,null,this.sourceSpan);};return ReadVarExpr;}(Expression);var TypeofExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TypeofExpr,_super);function TypeofExpr(expr,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.expr=expr;return _this;}TypeofExpr.prototype.visitExpression=function(visitor,context){return visitor.visitTypeofExpr(this,context);};TypeofExpr.prototype.isEquivalent=function(e){return e instanceof TypeofExpr&&e.expr.isEquivalent(this.expr);};TypeofExpr.prototype.isConstant=function(){return this.expr.isConstant();};return TypeofExpr;}(Expression);var WrappedNodeExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(WrappedNodeExpr,_super);function WrappedNodeExpr(node,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.node=node;return _this;}WrappedNodeExpr.prototype.isEquivalent=function(e){return e instanceof WrappedNodeExpr&&this.node===e.node;};WrappedNodeExpr.prototype.isConstant=function(){return false;};WrappedNodeExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWrappedNodeExpr(this,context);};return WrappedNodeExpr;}(Expression);var WriteVarExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(WriteVarExpr,_super);function WriteVarExpr(name,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.name=name;_this.value=value;return _this;}WriteVarExpr.prototype.isEquivalent=function(e){return e instanceof WriteVarExpr&&this.name===e.name&&this.value.isEquivalent(e.value);};WriteVarExpr.prototype.isConstant=function(){return false;};WriteVarExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWriteVarExpr(this,context);};WriteVarExpr.prototype.toDeclStmt=function(type,modifiers){return new DeclareVarStmt(this.name,this.value,type,modifiers,this.sourceSpan);};WriteVarExpr.prototype.toConstDecl=function(){return this.toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]);};return WriteVarExpr;}(Expression);var WriteKeyExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(WriteKeyExpr,_super);function WriteKeyExpr(receiver,index,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.receiver=receiver;_this.index=index;_this.value=value;return _this;}WriteKeyExpr.prototype.isEquivalent=function(e){return e instanceof WriteKeyExpr&&this.receiver.isEquivalent(e.receiver)&&this.index.isEquivalent(e.index)&&this.value.isEquivalent(e.value);};WriteKeyExpr.prototype.isConstant=function(){return false;};WriteKeyExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWriteKeyExpr(this,context);};return WriteKeyExpr;}(Expression);var WritePropExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(WritePropExpr,_super);function WritePropExpr(receiver,name,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.receiver=receiver;_this.name=name;_this.value=value;return _this;}WritePropExpr.prototype.isEquivalent=function(e){return e instanceof WritePropExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name&&this.value.isEquivalent(e.value);};WritePropExpr.prototype.isConstant=function(){return false;};WritePropExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWritePropExpr(this,context);};return WritePropExpr;}(Expression);var BuiltinMethod;(function(BuiltinMethod){BuiltinMethod[BuiltinMethod["ConcatArray"]=0]="ConcatArray";BuiltinMethod[BuiltinMethod["SubscribeObservable"]=1]="SubscribeObservable";BuiltinMethod[BuiltinMethod["Bind"]=2]="Bind";})(BuiltinMethod||(BuiltinMethod={}));var InvokeMethodExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(InvokeMethodExpr,_super);function InvokeMethodExpr(receiver,method,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.args=args;if(typeof method==='string'){_this.name=method;_this.builtin=null;}else{_this.name=null;_this.builtin=method;}return _this;}InvokeMethodExpr.prototype.isEquivalent=function(e){return e instanceof InvokeMethodExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name&&this.builtin===e.builtin&&areAllEquivalent(this.args,e.args);};InvokeMethodExpr.prototype.isConstant=function(){return false;};InvokeMethodExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInvokeMethodExpr(this,context);};return InvokeMethodExpr;}(Expression);var InvokeFunctionExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(InvokeFunctionExpr,_super);function InvokeFunctionExpr(fn,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.fn=fn;_this.args=args;return _this;}InvokeFunctionExpr.prototype.isEquivalent=function(e){return e instanceof InvokeFunctionExpr&&this.fn.isEquivalent(e.fn)&&areAllEquivalent(this.args,e.args);};InvokeFunctionExpr.prototype.isConstant=function(){return false;};InvokeFunctionExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInvokeFunctionExpr(this,context);};return InvokeFunctionExpr;}(Expression);var InstantiateExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(InstantiateExpr,_super);function InstantiateExpr(classExpr,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.classExpr=classExpr;_this.args=args;return _this;}InstantiateExpr.prototype.isEquivalent=function(e){return e instanceof InstantiateExpr&&this.classExpr.isEquivalent(e.classExpr)&&areAllEquivalent(this.args,e.args);};InstantiateExpr.prototype.isConstant=function(){return false;};InstantiateExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInstantiateExpr(this,context);};return InstantiateExpr;}(Expression);var LiteralExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LiteralExpr,_super);function LiteralExpr(value,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;return _this;}LiteralExpr.prototype.isEquivalent=function(e){return e instanceof LiteralExpr&&this.value===e.value;};LiteralExpr.prototype.isConstant=function(){return true;};LiteralExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralExpr(this,context);};return LiteralExpr;}(Expression);var ExternalExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ExternalExpr,_super);function ExternalExpr(value,type,typeParams,sourceSpan){if(typeParams===void 0){typeParams=null;}var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;_this.typeParams=typeParams;return _this;}ExternalExpr.prototype.isEquivalent=function(e){return e instanceof ExternalExpr&&this.value.name===e.value.name&&this.value.moduleName===e.value.moduleName&&this.value.runtime===e.value.runtime;};ExternalExpr.prototype.isConstant=function(){return false;};ExternalExpr.prototype.visitExpression=function(visitor,context){return visitor.visitExternalExpr(this,context);};return ExternalExpr;}(Expression);var ExternalReference=/** @class */function(){function ExternalReference(moduleName,name,runtime){this.moduleName=moduleName;this.name=name;this.runtime=runtime;}return ExternalReference;}();var ConditionalExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ConditionalExpr,_super);function ConditionalExpr(condition,trueCase,falseCase,type,sourceSpan){if(falseCase===void 0){falseCase=null;}var _this=_super.call(this,type||trueCase.type,sourceSpan)||this;_this.condition=condition;_this.falseCase=falseCase;_this.trueCase=trueCase;return _this;}ConditionalExpr.prototype.isEquivalent=function(e){return e instanceof ConditionalExpr&&this.condition.isEquivalent(e.condition)&&this.trueCase.isEquivalent(e.trueCase)&&nullSafeIsEquivalent(this.falseCase,e.falseCase);};ConditionalExpr.prototype.isConstant=function(){return false;};ConditionalExpr.prototype.visitExpression=function(visitor,context){return visitor.visitConditionalExpr(this,context);};return ConditionalExpr;}(Expression);var NotExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NotExpr,_super);function NotExpr(condition,sourceSpan){var _this=_super.call(this,BOOL_TYPE,sourceSpan)||this;_this.condition=condition;return _this;}NotExpr.prototype.isEquivalent=function(e){return e instanceof NotExpr&&this.condition.isEquivalent(e.condition);};NotExpr.prototype.isConstant=function(){return false;};NotExpr.prototype.visitExpression=function(visitor,context){return visitor.visitNotExpr(this,context);};return NotExpr;}(Expression);var AssertNotNull=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AssertNotNull,_super);function AssertNotNull(condition,sourceSpan){var _this=_super.call(this,condition.type,sourceSpan)||this;_this.condition=condition;return _this;}AssertNotNull.prototype.isEquivalent=function(e){return e instanceof AssertNotNull&&this.condition.isEquivalent(e.condition);};AssertNotNull.prototype.isConstant=function(){return false;};AssertNotNull.prototype.visitExpression=function(visitor,context){return visitor.visitAssertNotNullExpr(this,context);};return AssertNotNull;}(Expression);var CastExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CastExpr,_super);function CastExpr(value,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;return _this;}CastExpr.prototype.isEquivalent=function(e){return e instanceof CastExpr&&this.value.isEquivalent(e.value);};CastExpr.prototype.isConstant=function(){return false;};CastExpr.prototype.visitExpression=function(visitor,context){return visitor.visitCastExpr(this,context);};return CastExpr;}(Expression);var FnParam=/** @class */function(){function FnParam(name,type){if(type===void 0){type=null;}this.name=name;this.type=type;}FnParam.prototype.isEquivalent=function(param){return this.name===param.name;};return FnParam;}();var FunctionExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FunctionExpr,_super);function FunctionExpr(params,statements,type,sourceSpan,name){var _this=_super.call(this,type,sourceSpan)||this;_this.params=params;_this.statements=statements;_this.name=name;return _this;}FunctionExpr.prototype.isEquivalent=function(e){return e instanceof FunctionExpr&&areAllEquivalent(this.params,e.params)&&areAllEquivalent(this.statements,e.statements);};FunctionExpr.prototype.isConstant=function(){return false;};FunctionExpr.prototype.visitExpression=function(visitor,context){return visitor.visitFunctionExpr(this,context);};FunctionExpr.prototype.toDeclStmt=function(name,modifiers){if(modifiers===void 0){modifiers=null;}return new DeclareFunctionStmt(name,this.params,this.statements,this.type,modifiers,this.sourceSpan);};return FunctionExpr;}(Expression);var BinaryOperatorExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(BinaryOperatorExpr,_super);function BinaryOperatorExpr(operator,lhs,rhs,type,sourceSpan,parens){if(parens===void 0){parens=true;}var _this=_super.call(this,type||lhs.type,sourceSpan)||this;_this.operator=operator;_this.rhs=rhs;_this.parens=parens;_this.lhs=lhs;return _this;}BinaryOperatorExpr.prototype.isEquivalent=function(e){return e instanceof BinaryOperatorExpr&&this.operator===e.operator&&this.lhs.isEquivalent(e.lhs)&&this.rhs.isEquivalent(e.rhs);};BinaryOperatorExpr.prototype.isConstant=function(){return false;};BinaryOperatorExpr.prototype.visitExpression=function(visitor,context){return visitor.visitBinaryOperatorExpr(this,context);};return BinaryOperatorExpr;}(Expression);var ReadPropExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ReadPropExpr,_super);function ReadPropExpr(receiver,name,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.name=name;return _this;}ReadPropExpr.prototype.isEquivalent=function(e){return e instanceof ReadPropExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name;};ReadPropExpr.prototype.isConstant=function(){return false;};ReadPropExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadPropExpr(this,context);};ReadPropExpr.prototype.set=function(value){return new WritePropExpr(this.receiver,this.name,value,null,this.sourceSpan);};return ReadPropExpr;}(Expression);var ReadKeyExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ReadKeyExpr,_super);function ReadKeyExpr(receiver,index,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.index=index;return _this;}ReadKeyExpr.prototype.isEquivalent=function(e){return e instanceof ReadKeyExpr&&this.receiver.isEquivalent(e.receiver)&&this.index.isEquivalent(e.index);};ReadKeyExpr.prototype.isConstant=function(){return false;};ReadKeyExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadKeyExpr(this,context);};ReadKeyExpr.prototype.set=function(value){return new WriteKeyExpr(this.receiver,this.index,value,null,this.sourceSpan);};return ReadKeyExpr;}(Expression);var LiteralArrayExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LiteralArrayExpr,_super);function LiteralArrayExpr(entries,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.entries=entries;return _this;}LiteralArrayExpr.prototype.isConstant=function(){return this.entries.every(function(e){return e.isConstant();});};LiteralArrayExpr.prototype.isEquivalent=function(e){return e instanceof LiteralArrayExpr&&areAllEquivalent(this.entries,e.entries);};LiteralArrayExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralArrayExpr(this,context);};return LiteralArrayExpr;}(Expression);var LiteralMapEntry=/** @class */function(){function LiteralMapEntry(key,value,quoted){this.key=key;this.value=value;this.quoted=quoted;}LiteralMapEntry.prototype.isEquivalent=function(e){return this.key===e.key&&this.value.isEquivalent(e.value);};return LiteralMapEntry;}();var LiteralMapExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LiteralMapExpr,_super);function LiteralMapExpr(entries,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.entries=entries;_this.valueType=null;if(type){_this.valueType=type.valueType;}return _this;}LiteralMapExpr.prototype.isEquivalent=function(e){return e instanceof LiteralMapExpr&&areAllEquivalent(this.entries,e.entries);};LiteralMapExpr.prototype.isConstant=function(){return this.entries.every(function(e){return e.value.isConstant();});};LiteralMapExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralMapExpr(this,context);};return LiteralMapExpr;}(Expression);var CommaExpr=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CommaExpr,_super);function CommaExpr(parts,sourceSpan){var _this=_super.call(this,parts[parts.length-1].type,sourceSpan)||this;_this.parts=parts;return _this;}CommaExpr.prototype.isEquivalent=function(e){return e instanceof CommaExpr&&areAllEquivalent(this.parts,e.parts);};CommaExpr.prototype.isConstant=function(){return false;};CommaExpr.prototype.visitExpression=function(visitor,context){return visitor.visitCommaExpr(this,context);};return CommaExpr;}(Expression);var THIS_EXPR=new ReadVarExpr(BuiltinVar.This,null,null);var SUPER_EXPR=new ReadVarExpr(BuiltinVar.Super,null,null);var CATCH_ERROR_VAR=new ReadVarExpr(BuiltinVar.CatchError,null,null);var CATCH_STACK_VAR=new ReadVarExpr(BuiltinVar.CatchStack,null,null);var NULL_EXPR=new LiteralExpr(null,null,null);var TYPED_NULL_EXPR=new LiteralExpr(null,INFERRED_TYPE,null);//// Statements
var StmtModifier;(function(StmtModifier){StmtModifier[StmtModifier["Final"]=0]="Final";StmtModifier[StmtModifier["Private"]=1]="Private";StmtModifier[StmtModifier["Exported"]=2]="Exported";StmtModifier[StmtModifier["Static"]=3]="Static";})(StmtModifier||(StmtModifier={}));var Statement=/** @class */function(){function Statement(modifiers,sourceSpan){this.modifiers=modifiers||[];this.sourceSpan=sourceSpan||null;}Statement.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return Statement;}();var DeclareVarStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DeclareVarStmt,_super);function DeclareVarStmt(name,value,type,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.value=value;_this.type=type||value&&value.type||null;return _this;}DeclareVarStmt.prototype.isEquivalent=function(stmt){return stmt instanceof DeclareVarStmt&&this.name===stmt.name&&(this.value?!!stmt.value&&this.value.isEquivalent(stmt.value):!stmt.value);};DeclareVarStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareVarStmt(this,context);};return DeclareVarStmt;}(Statement);var DeclareFunctionStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DeclareFunctionStmt,_super);function DeclareFunctionStmt(name,params,statements,type,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.params=params;_this.statements=statements;_this.type=type||null;return _this;}DeclareFunctionStmt.prototype.isEquivalent=function(stmt){return stmt instanceof DeclareFunctionStmt&&areAllEquivalent(this.params,stmt.params)&&areAllEquivalent(this.statements,stmt.statements);};DeclareFunctionStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareFunctionStmt(this,context);};return DeclareFunctionStmt;}(Statement);var ExpressionStatement=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ExpressionStatement,_super);function ExpressionStatement(expr,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.expr=expr;return _this;}ExpressionStatement.prototype.isEquivalent=function(stmt){return stmt instanceof ExpressionStatement&&this.expr.isEquivalent(stmt.expr);};ExpressionStatement.prototype.visitStatement=function(visitor,context){return visitor.visitExpressionStmt(this,context);};return ExpressionStatement;}(Statement);var ReturnStatement=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ReturnStatement,_super);function ReturnStatement(value,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.value=value;return _this;}ReturnStatement.prototype.isEquivalent=function(stmt){return stmt instanceof ReturnStatement&&this.value.isEquivalent(stmt.value);};ReturnStatement.prototype.visitStatement=function(visitor,context){return visitor.visitReturnStmt(this,context);};return ReturnStatement;}(Statement);var AbstractClassPart=/** @class */function(){function AbstractClassPart(type,modifiers){this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}this.type=type||null;}AbstractClassPart.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return AbstractClassPart;}();var ClassField=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ClassField,_super);function ClassField(name,type,modifiers,initializer){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.initializer=initializer;return _this;}ClassField.prototype.isEquivalent=function(f){return this.name===f.name;};return ClassField;}(AbstractClassPart);var ClassMethod=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ClassMethod,_super);function ClassMethod(name,params,body,type,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.params=params;_this.body=body;return _this;}ClassMethod.prototype.isEquivalent=function(m){return this.name===m.name&&areAllEquivalent(this.body,m.body);};return ClassMethod;}(AbstractClassPart);var ClassGetter=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ClassGetter,_super);function ClassGetter(name,body,type,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.body=body;return _this;}ClassGetter.prototype.isEquivalent=function(m){return this.name===m.name&&areAllEquivalent(this.body,m.body);};return ClassGetter;}(AbstractClassPart);var ClassStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ClassStmt,_super);function ClassStmt(name,parent,fields,getters,constructorMethod,methods,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.parent=parent;_this.fields=fields;_this.getters=getters;_this.constructorMethod=constructorMethod;_this.methods=methods;return _this;}ClassStmt.prototype.isEquivalent=function(stmt){return stmt instanceof ClassStmt&&this.name===stmt.name&&nullSafeIsEquivalent(this.parent,stmt.parent)&&areAllEquivalent(this.fields,stmt.fields)&&areAllEquivalent(this.getters,stmt.getters)&&this.constructorMethod.isEquivalent(stmt.constructorMethod)&&areAllEquivalent(this.methods,stmt.methods);};ClassStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareClassStmt(this,context);};return ClassStmt;}(Statement);var IfStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(IfStmt,_super);function IfStmt(condition,trueCase,falseCase,sourceSpan){if(falseCase===void 0){falseCase=[];}var _this=_super.call(this,null,sourceSpan)||this;_this.condition=condition;_this.trueCase=trueCase;_this.falseCase=falseCase;return _this;}IfStmt.prototype.isEquivalent=function(stmt){return stmt instanceof IfStmt&&this.condition.isEquivalent(stmt.condition)&&areAllEquivalent(this.trueCase,stmt.trueCase)&&areAllEquivalent(this.falseCase,stmt.falseCase);};IfStmt.prototype.visitStatement=function(visitor,context){return visitor.visitIfStmt(this,context);};return IfStmt;}(Statement);var CommentStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CommentStmt,_super);function CommentStmt(comment,multiline,sourceSpan){if(multiline===void 0){multiline=false;}var _this=_super.call(this,null,sourceSpan)||this;_this.comment=comment;_this.multiline=multiline;return _this;}CommentStmt.prototype.isEquivalent=function(stmt){return stmt instanceof CommentStmt;};CommentStmt.prototype.visitStatement=function(visitor,context){return visitor.visitCommentStmt(this,context);};return CommentStmt;}(Statement);var JSDocCommentStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(JSDocCommentStmt,_super);function JSDocCommentStmt(tags,sourceSpan){if(tags===void 0){tags=[];}var _this=_super.call(this,null,sourceSpan)||this;_this.tags=tags;return _this;}JSDocCommentStmt.prototype.isEquivalent=function(stmt){return stmt instanceof JSDocCommentStmt&&this.toString()===stmt.toString();};JSDocCommentStmt.prototype.visitStatement=function(visitor,context){return visitor.visitJSDocCommentStmt(this,context);};JSDocCommentStmt.prototype.toString=function(){return serializeTags(this.tags);};return JSDocCommentStmt;}(Statement);var TryCatchStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TryCatchStmt,_super);function TryCatchStmt(bodyStmts,catchStmts,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.bodyStmts=bodyStmts;_this.catchStmts=catchStmts;return _this;}TryCatchStmt.prototype.isEquivalent=function(stmt){return stmt instanceof TryCatchStmt&&areAllEquivalent(this.bodyStmts,stmt.bodyStmts)&&areAllEquivalent(this.catchStmts,stmt.catchStmts);};TryCatchStmt.prototype.visitStatement=function(visitor,context){return visitor.visitTryCatchStmt(this,context);};return TryCatchStmt;}(Statement);var ThrowStmt=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ThrowStmt,_super);function ThrowStmt(error,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.error=error;return _this;}ThrowStmt.prototype.isEquivalent=function(stmt){return stmt instanceof TryCatchStmt&&this.error.isEquivalent(stmt.error);};ThrowStmt.prototype.visitStatement=function(visitor,context){return visitor.visitThrowStmt(this,context);};return ThrowStmt;}(Statement);var AstTransformer$1=/** @class */function(){function AstTransformer(){}AstTransformer.prototype.transformExpr=function(expr,context){return expr;};AstTransformer.prototype.transformStmt=function(stmt,context){return stmt;};AstTransformer.prototype.visitReadVarExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitWrappedNodeExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitTypeofExpr=function(expr,context){return this.transformExpr(new TypeofExpr(expr.expr.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWriteVarExpr=function(expr,context){return this.transformExpr(new WriteVarExpr(expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWriteKeyExpr=function(expr,context){return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this,context),expr.index.visitExpression(this,context),expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWritePropExpr=function(expr,context){return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this,context),expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitInvokeMethodExpr=function(ast,context){var method=ast.builtin||ast.name;return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this,context),method,this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitInvokeFunctionExpr=function(ast,context){return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitInstantiateExpr=function(ast,context){return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitExternalExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitConditionalExpr=function(ast,context){return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this,context),ast.trueCase.visitExpression(this,context),ast.falseCase.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitNotExpr=function(ast,context){return this.transformExpr(new NotExpr(ast.condition.visitExpression(this,context),ast.sourceSpan),context);};AstTransformer.prototype.visitAssertNotNullExpr=function(ast,context){return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this,context),ast.sourceSpan),context);};AstTransformer.prototype.visitCastExpr=function(ast,context){return this.transformExpr(new CastExpr(ast.value.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitFunctionExpr=function(ast,context){return this.transformExpr(new FunctionExpr(ast.params,this.visitAllStatements(ast.statements,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitBinaryOperatorExpr=function(ast,context){return this.transformExpr(new BinaryOperatorExpr(ast.operator,ast.lhs.visitExpression(this,context),ast.rhs.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitReadPropExpr=function(ast,context){return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this,context),ast.name,ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitReadKeyExpr=function(ast,context){return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this,context),ast.index.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralArrayExpr=function(ast,context){return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;var entries=ast.entries.map(function(entry){return new LiteralMapEntry(entry.key,entry.value.visitExpression(_this,context),entry.quoted);});var mapType=new MapType(ast.valueType,null);return this.transformExpr(new LiteralMapExpr(entries,mapType,ast.sourceSpan),context);};AstTransformer.prototype.visitCommaExpr=function(ast,context){return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts,context),ast.sourceSpan),context);};AstTransformer.prototype.visitAllExpressions=function(exprs,context){var _this=this;return exprs.map(function(expr){return expr.visitExpression(_this,context);});};AstTransformer.prototype.visitDeclareVarStmt=function(stmt,context){var value=stmt.value&&stmt.value.visitExpression(this,context);return this.transformStmt(new DeclareVarStmt(stmt.name,value,stmt.type,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitDeclareFunctionStmt=function(stmt,context){return this.transformStmt(new DeclareFunctionStmt(stmt.name,stmt.params,this.visitAllStatements(stmt.statements,context),stmt.type,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitExpressionStmt=function(stmt,context){return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitReturnStmt=function(stmt,context){return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitDeclareClassStmt=function(stmt,context){var _this=this;var parent=stmt.parent.visitExpression(this,context);var getters=stmt.getters.map(function(getter){return new ClassGetter(getter.name,_this.visitAllStatements(getter.body,context),getter.type,getter.modifiers);});var ctorMethod=stmt.constructorMethod&&new ClassMethod(stmt.constructorMethod.name,stmt.constructorMethod.params,this.visitAllStatements(stmt.constructorMethod.body,context),stmt.constructorMethod.type,stmt.constructorMethod.modifiers);var methods=stmt.methods.map(function(method){return new ClassMethod(method.name,method.params,_this.visitAllStatements(method.body,context),method.type,method.modifiers);});return this.transformStmt(new ClassStmt(stmt.name,parent,stmt.fields,getters,ctorMethod,methods,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitIfStmt=function(stmt,context){return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this,context),this.visitAllStatements(stmt.trueCase,context),this.visitAllStatements(stmt.falseCase,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitTryCatchStmt=function(stmt,context){return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts,context),this.visitAllStatements(stmt.catchStmts,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitThrowStmt=function(stmt,context){return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitCommentStmt=function(stmt,context){return this.transformStmt(stmt,context);};AstTransformer.prototype.visitJSDocCommentStmt=function(stmt,context){return this.transformStmt(stmt,context);};AstTransformer.prototype.visitAllStatements=function(stmts,context){var _this=this;return stmts.map(function(stmt){return stmt.visitStatement(_this,context);});};return AstTransformer;}();var RecursiveAstVisitor$1=/** @class */function(){function RecursiveAstVisitor(){}RecursiveAstVisitor.prototype.visitType=function(ast,context){return ast;};RecursiveAstVisitor.prototype.visitExpression=function(ast,context){if(ast.type){ast.type.visitType(this,context);}return ast;};RecursiveAstVisitor.prototype.visitBuiltinType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitExpressionType=function(type,context){var _this=this;type.value.visitExpression(this,context);if(type.typeParams!==null){type.typeParams.forEach(function(param){return _this.visitType(param,context);});}return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitArrayType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitMapType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitWrappedNodeExpr=function(ast,context){return ast;};RecursiveAstVisitor.prototype.visitTypeofExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadVarExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWriteVarExpr=function(ast,context){ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWriteKeyExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.index.visitExpression(this,context);ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWritePropExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInvokeMethodExpr=function(ast,context){ast.receiver.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInvokeFunctionExpr=function(ast,context){ast.fn.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInstantiateExpr=function(ast,context){ast.classExpr.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitExternalExpr=function(ast,context){var _this=this;if(ast.typeParams){ast.typeParams.forEach(function(type){return type.visitType(_this,context);});}return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitConditionalExpr=function(ast,context){ast.condition.visitExpression(this,context);ast.trueCase.visitExpression(this,context);ast.falseCase.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitNotExpr=function(ast,context){ast.condition.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitAssertNotNullExpr=function(ast,context){ast.condition.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitCastExpr=function(ast,context){ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitFunctionExpr=function(ast,context){this.visitAllStatements(ast.statements,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitBinaryOperatorExpr=function(ast,context){ast.lhs.visitExpression(this,context);ast.rhs.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadPropExpr=function(ast,context){ast.receiver.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadKeyExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.index.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralArrayExpr=function(ast,context){this.visitAllExpressions(ast.entries,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;ast.entries.forEach(function(entry){return entry.value.visitExpression(_this,context);});return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitCommaExpr=function(ast,context){this.visitAllExpressions(ast.parts,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitAllExpressions=function(exprs,context){var _this=this;exprs.forEach(function(expr){return expr.visitExpression(_this,context);});};RecursiveAstVisitor.prototype.visitDeclareVarStmt=function(stmt,context){if(stmt.value){stmt.value.visitExpression(this,context);}if(stmt.type){stmt.type.visitType(this,context);}return stmt;};RecursiveAstVisitor.prototype.visitDeclareFunctionStmt=function(stmt,context){this.visitAllStatements(stmt.statements,context);if(stmt.type){stmt.type.visitType(this,context);}return stmt;};RecursiveAstVisitor.prototype.visitExpressionStmt=function(stmt,context){stmt.expr.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitReturnStmt=function(stmt,context){stmt.value.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitDeclareClassStmt=function(stmt,context){var _this=this;stmt.parent.visitExpression(this,context);stmt.getters.forEach(function(getter){return _this.visitAllStatements(getter.body,context);});if(stmt.constructorMethod){this.visitAllStatements(stmt.constructorMethod.body,context);}stmt.methods.forEach(function(method){return _this.visitAllStatements(method.body,context);});return stmt;};RecursiveAstVisitor.prototype.visitIfStmt=function(stmt,context){stmt.condition.visitExpression(this,context);this.visitAllStatements(stmt.trueCase,context);this.visitAllStatements(stmt.falseCase,context);return stmt;};RecursiveAstVisitor.prototype.visitTryCatchStmt=function(stmt,context){this.visitAllStatements(stmt.bodyStmts,context);this.visitAllStatements(stmt.catchStmts,context);return stmt;};RecursiveAstVisitor.prototype.visitThrowStmt=function(stmt,context){stmt.error.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitCommentStmt=function(stmt,context){return stmt;};RecursiveAstVisitor.prototype.visitJSDocCommentStmt=function(stmt,context){return stmt;};RecursiveAstVisitor.prototype.visitAllStatements=function(stmts,context){var _this=this;stmts.forEach(function(stmt){return stmt.visitStatement(_this,context);});};return RecursiveAstVisitor;}();function findReadVarNames(stmts){var visitor=new _ReadVarVisitor();visitor.visitAllStatements(stmts,null);return visitor.varNames;}var _ReadVarVisitor=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(_ReadVarVisitor,_super);function _ReadVarVisitor(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.varNames=new Set();return _this;}_ReadVarVisitor.prototype.visitDeclareFunctionStmt=function(stmt,context){// Don't descend into nested functions
return stmt;};_ReadVarVisitor.prototype.visitDeclareClassStmt=function(stmt,context){// Don't descend into nested classes
return stmt;};_ReadVarVisitor.prototype.visitReadVarExpr=function(ast,context){if(ast.name){this.varNames.add(ast.name);}return null;};return _ReadVarVisitor;}(RecursiveAstVisitor$1);function collectExternalReferences(stmts){var visitor=new _FindExternalReferencesVisitor();visitor.visitAllStatements(stmts,null);return visitor.externalReferences;}var _FindExternalReferencesVisitor=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(_FindExternalReferencesVisitor,_super);function _FindExternalReferencesVisitor(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.externalReferences=[];return _this;}_FindExternalReferencesVisitor.prototype.visitExternalExpr=function(e,context){this.externalReferences.push(e.value);return _super.prototype.visitExternalExpr.call(this,e,context);};return _FindExternalReferencesVisitor;}(RecursiveAstVisitor$1);function applySourceSpanToStatementIfNeeded(stmt,sourceSpan){if(!sourceSpan){return stmt;}var transformer=new _ApplySourceSpanTransformer(sourceSpan);return stmt.visitStatement(transformer,null);}function applySourceSpanToExpressionIfNeeded(expr,sourceSpan){if(!sourceSpan){return expr;}var transformer=new _ApplySourceSpanTransformer(sourceSpan);return expr.visitExpression(transformer,null);}var _ApplySourceSpanTransformer=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(_ApplySourceSpanTransformer,_super);function _ApplySourceSpanTransformer(sourceSpan){var _this=_super.call(this)||this;_this.sourceSpan=sourceSpan;return _this;}_ApplySourceSpanTransformer.prototype._clone=function(obj){var clone=Object.create(obj.constructor.prototype);for(var prop in obj){clone[prop]=obj[prop];}return clone;};_ApplySourceSpanTransformer.prototype.transformExpr=function(expr,context){if(!expr.sourceSpan){expr=this._clone(expr);expr.sourceSpan=this.sourceSpan;}return expr;};_ApplySourceSpanTransformer.prototype.transformStmt=function(stmt,context){if(!stmt.sourceSpan){stmt=this._clone(stmt);stmt.sourceSpan=this.sourceSpan;}return stmt;};return _ApplySourceSpanTransformer;}(AstTransformer$1);function variable(name,type,sourceSpan){return new ReadVarExpr(name,type,sourceSpan);}function importExpr(id,typeParams,sourceSpan){if(typeParams===void 0){typeParams=null;}return new ExternalExpr(id,null,typeParams,sourceSpan);}function importType(id,typeParams,typeModifiers){if(typeParams===void 0){typeParams=null;}if(typeModifiers===void 0){typeModifiers=null;}return id!=null?expressionType(importExpr(id,typeParams,null),typeModifiers):null;}function expressionType(expr,typeModifiers,typeParams){if(typeModifiers===void 0){typeModifiers=null;}if(typeParams===void 0){typeParams=null;}return new ExpressionType(expr,typeModifiers,typeParams);}function typeofExpr(expr){return new TypeofExpr(expr);}function literalArr(values,type,sourceSpan){return new LiteralArrayExpr(values,type,sourceSpan);}function literalMap(values,type){if(type===void 0){type=null;}return new LiteralMapExpr(values.map(function(e){return new LiteralMapEntry(e.key,e.value,e.quoted);}),type,null);}function not(expr,sourceSpan){return new NotExpr(expr,sourceSpan);}function assertNotNull(expr,sourceSpan){return new AssertNotNull(expr,sourceSpan);}function fn(params,body,type,sourceSpan,name){return new FunctionExpr(params,body,type,sourceSpan,name);}function ifStmt(condition,thenClause,elseClause){return new IfStmt(condition,thenClause,elseClause);}function literal(value,type,sourceSpan){return new LiteralExpr(value,type,sourceSpan);}function isNull(exp){return exp instanceof LiteralExpr&&exp.value===null;}/*
 * Serializes a `Tag` into a string.
 * Returns a string like " @foo {bar} baz" (note the leading whitespace before `@foo`).
 */function tagToString(tag){var out='';if(tag.tagName){out+=" @"+tag.tagName;}if(tag.text){if(tag.text.match(/\/\*|\*\//)){throw new Error('JSDoc text cannot contain "/*" and "*/"');}out+=' '+tag.text.replace(/@/g,'\\@');}return out;}function serializeTags(tags){var e_1,_a;if(tags.length===0)return'';var out='*\n';try{for(var tags_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(tags),tags_1_1=tags_1.next();!tags_1_1.done;tags_1_1=tags_1.next()){var tag=tags_1_1.value;out+=' *';// If the tagToString is multi-line, insert " * " prefixes on subsequent lines.
out+=tagToString(tag).replace(/\n/g,'\n * ');out+='\n';}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(tags_1_1&&!tags_1_1.done&&(_a=tags_1.return))_a.call(tags_1);}finally{if(e_1)throw e_1.error;}}out+=' ';return out;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var QUOTED_KEYS='$quoted$';function convertValueToOutputAst(ctx,value,type){if(type===void 0){type=null;}return visitValue(value,new _ValueOutputAstTransformer(ctx),type);}var _ValueOutputAstTransformer=/** @class */function(){function _ValueOutputAstTransformer(ctx){this.ctx=ctx;}_ValueOutputAstTransformer.prototype.visitArray=function(arr,type){var _this=this;return literalArr(arr.map(function(value){return visitValue(value,_this,null);}),type);};_ValueOutputAstTransformer.prototype.visitStringMap=function(map,type){var _this=this;var entries=[];var quotedSet=new Set(map&&map[QUOTED_KEYS]);Object.keys(map).forEach(function(key){entries.push(new LiteralMapEntry(key,visitValue(map[key],_this,null),quotedSet.has(key)));});return new LiteralMapExpr(entries,type);};_ValueOutputAstTransformer.prototype.visitPrimitive=function(value,type){return literal(value,type);};_ValueOutputAstTransformer.prototype.visitOther=function(value,type){if(value instanceof Expression){return value;}else{return this.ctx.importExpr(value);}};return _ValueOutputAstTransformer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function mapEntry(key,value){return{key:key,value:value,quoted:false};}var InjectableCompiler=/** @class */function(){function InjectableCompiler(reflector,alwaysGenerateDef){this.reflector=reflector;this.alwaysGenerateDef=alwaysGenerateDef;this.tokenInjector=reflector.resolveExternalReference(Identifiers.Injector);}InjectableCompiler.prototype.depsArray=function(deps,ctx){var _this=this;return deps.map(function(dep){var token=dep;var args=[token];var flags=0/* Default */;if(Array.isArray(dep)){for(var i=0;i<dep.length;i++){var v=dep[i];if(v){if(v.ngMetadataName==='Optional'){flags|=8/* Optional */;}else if(v.ngMetadataName==='SkipSelf'){flags|=4/* SkipSelf */;}else if(v.ngMetadataName==='Self'){flags|=2/* Self */;}else if(v.ngMetadataName==='Inject'){token=v.token;}else{token=v;}}}}var tokenExpr;if(typeof token==='string'){tokenExpr=literal(token);}else if(token===_this.tokenInjector){tokenExpr=importExpr(Identifiers.INJECTOR);}else{tokenExpr=ctx.importExpr(token);}if(flags!==0/* Default */){args=[tokenExpr,literal(flags)];}else{args=[tokenExpr];}return importExpr(Identifiers.inject).callFn(args);});};InjectableCompiler.prototype.factoryFor=function(injectable,ctx){var retValue;if(injectable.useExisting){retValue=importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);}else if(injectable.useFactory){var deps=injectable.deps||[];if(deps.length>0){retValue=ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps,ctx));}else{return ctx.importExpr(injectable.useFactory);}}else if(injectable.useValue){retValue=convertValueToOutputAst(ctx,injectable.useValue);}else{var clazz=injectable.useClass||injectable.symbol;var depArgs=this.depsArray(this.reflector.parameters(clazz),ctx);retValue=new InstantiateExpr(ctx.importExpr(clazz),depArgs);}return fn([],[new ReturnStatement(retValue)],undefined,undefined,injectable.symbol.name+'_Factory');};InjectableCompiler.prototype.injectableDef=function(injectable,ctx){var providedIn=NULL_EXPR;if(injectable.providedIn!==undefined){if(injectable.providedIn===null){providedIn=NULL_EXPR;}else if(typeof injectable.providedIn==='string'){providedIn=literal(injectable.providedIn);}else{providedIn=ctx.importExpr(injectable.providedIn);}}var def=[mapEntry('factory',this.factoryFor(injectable,ctx)),mapEntry('token',ctx.importExpr(injectable.type.reference)),mapEntry('providedIn',providedIn)];return importExpr(Identifiers.defineInjectable).callFn([literalMap(def)]);};InjectableCompiler.prototype.compile=function(injectable,ctx){if(this.alwaysGenerateDef||injectable.providedIn!==undefined){var className=identifierName(injectable.type);var clazz=new ClassStmt(className,null,[new ClassField('ngInjectableDef',INFERRED_TYPE,[StmtModifier.Static],this.injectableDef(injectable,ctx))],[],new ClassMethod(null,[],[]),[]);ctx.statements.push(clazz);}};return InjectableCompiler;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var STRIP_SRC_FILE_SUFFIXES=/(\.ts|\.d\.ts|\.js|\.jsx|\.tsx)$/;var GENERATED_FILE=/\.ngfactory\.|\.ngsummary\./;var JIT_SUMMARY_FILE=/\.ngsummary\./;var JIT_SUMMARY_NAME=/NgSummary$/;function ngfactoryFilePath(filePath,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}var urlWithSuffix=splitTypescriptSuffix(filePath,forceSourceFile);return urlWithSuffix[0]+".ngfactory"+normalizeGenFileSuffix(urlWithSuffix[1]);}function stripGeneratedFileSuffix(filePath){return filePath.replace(GENERATED_FILE,'.');}function isGeneratedFile(filePath){return GENERATED_FILE.test(filePath);}function splitTypescriptSuffix(path,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}if(path.endsWith('.d.ts')){return[path.slice(0,-5),forceSourceFile?'.ts':'.d.ts'];}var lastDot=path.lastIndexOf('.');if(lastDot!==-1){return[path.substring(0,lastDot),path.substring(lastDot)];}return[path,''];}function normalizeGenFileSuffix(srcFileSuffix){return srcFileSuffix==='.tsx'?'.ts':srcFileSuffix;}function summaryFileName(fileName){var fileNameWithoutSuffix=fileName.replace(STRIP_SRC_FILE_SUFFIXES,'');return fileNameWithoutSuffix+".ngsummary.json";}function summaryForJitFileName(fileName,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}var urlWithSuffix=splitTypescriptSuffix(stripGeneratedFileSuffix(fileName),forceSourceFile);return urlWithSuffix[0]+".ngsummary"+urlWithSuffix[1];}function stripSummaryForJitFileSuffix(filePath){return filePath.replace(JIT_SUMMARY_FILE,'.');}function summaryForJitName(symbolName){return symbolName+"NgSummary";}function stripSummaryForJitNameSuffix(symbolName){return symbolName.replace(JIT_SUMMARY_NAME,'');}var LOWERED_SYMBOL=/\u0275\d+/;function isLoweredSymbol(name){return LOWERED_SYMBOL.test(name);}function createLoweredSymbol(id){return"\u0275"+id;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var LifecycleHooks;(function(LifecycleHooks){LifecycleHooks[LifecycleHooks["OnInit"]=0]="OnInit";LifecycleHooks[LifecycleHooks["OnDestroy"]=1]="OnDestroy";LifecycleHooks[LifecycleHooks["DoCheck"]=2]="DoCheck";LifecycleHooks[LifecycleHooks["OnChanges"]=3]="OnChanges";LifecycleHooks[LifecycleHooks["AfterContentInit"]=4]="AfterContentInit";LifecycleHooks[LifecycleHooks["AfterContentChecked"]=5]="AfterContentChecked";LifecycleHooks[LifecycleHooks["AfterViewInit"]=6]="AfterViewInit";LifecycleHooks[LifecycleHooks["AfterViewChecked"]=7]="AfterViewChecked";})(LifecycleHooks||(LifecycleHooks={}));var LIFECYCLE_HOOKS_VALUES=[LifecycleHooks.OnInit,LifecycleHooks.OnDestroy,LifecycleHooks.DoCheck,LifecycleHooks.OnChanges,LifecycleHooks.AfterContentInit,LifecycleHooks.AfterContentChecked,LifecycleHooks.AfterViewInit,LifecycleHooks.AfterViewChecked];function hasLifecycleHook(reflector,hook,token){return reflector.hasLifecycleHook(token,getHookName(hook));}function getAllLifecycleHooks(reflector,token){return LIFECYCLE_HOOKS_VALUES.filter(function(hook){return hasLifecycleHook(reflector,hook,token);});}function getHookName(hook){switch(hook){case LifecycleHooks.OnInit:return'ngOnInit';case LifecycleHooks.OnDestroy:return'ngOnDestroy';case LifecycleHooks.DoCheck:return'ngDoCheck';case LifecycleHooks.OnChanges:return'ngOnChanges';case LifecycleHooks.AfterContentInit:return'ngAfterContentInit';case LifecycleHooks.AfterContentChecked:return'ngAfterContentChecked';case LifecycleHooks.AfterViewInit:return'ngAfterViewInit';case LifecycleHooks.AfterViewChecked:return'ngAfterViewChecked';default:// This default case is not needed by TypeScript compiler, as the switch is exhaustive.
// However Closure Compiler does not understand that and reports an error in typed mode.
// The `throw new Error` below works around the problem, and the unexpected: never variable
// makes sure tsc still checks this code is unreachable.
var unexpected=hook;throw new Error("unexpected "+unexpected);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ERROR_COMPONENT_TYPE='ngComponentType';// Design notes:
// - don't lazily create metadata:
//   For some metadata, we need to do async work sometimes,
//   so the user has to kick off this loading.
//   But we want to report errors even when the async work is
//   not required to check that the user would have been able
//   to wait correctly.
var CompileMetadataResolver=/** @class */function(){function CompileMetadataResolver(_config,_htmlParser,_ngModuleResolver,_directiveResolver,_pipeResolver,_summaryResolver,_schemaRegistry,_directiveNormalizer,_console,_staticSymbolCache,_reflector,_errorCollector){this._config=_config;this._htmlParser=_htmlParser;this._ngModuleResolver=_ngModuleResolver;this._directiveResolver=_directiveResolver;this._pipeResolver=_pipeResolver;this._summaryResolver=_summaryResolver;this._schemaRegistry=_schemaRegistry;this._directiveNormalizer=_directiveNormalizer;this._console=_console;this._staticSymbolCache=_staticSymbolCache;this._reflector=_reflector;this._errorCollector=_errorCollector;this._nonNormalizedDirectiveCache=new Map();this._directiveCache=new Map();this._summaryCache=new Map();this._pipeCache=new Map();this._ngModuleCache=new Map();this._ngModuleOfTypes=new Map();this._shallowModuleCache=new Map();}CompileMetadataResolver.prototype.getReflector=function(){return this._reflector;};CompileMetadataResolver.prototype.clearCacheFor=function(type){var dirMeta=this._directiveCache.get(type);this._directiveCache.delete(type);this._nonNormalizedDirectiveCache.delete(type);this._summaryCache.delete(type);this._pipeCache.delete(type);this._ngModuleOfTypes.delete(type);// Clear all of the NgModule as they contain transitive information!
this._ngModuleCache.clear();if(dirMeta){this._directiveNormalizer.clearCacheFor(dirMeta);}};CompileMetadataResolver.prototype.clearCache=function(){this._directiveCache.clear();this._nonNormalizedDirectiveCache.clear();this._summaryCache.clear();this._pipeCache.clear();this._ngModuleCache.clear();this._ngModuleOfTypes.clear();this._directiveNormalizer.clearCache();};CompileMetadataResolver.prototype._createProxyClass=function(baseType,name){var delegate=null;var proxyClass=function proxyClass(){if(!delegate){throw new Error("Illegal state: Class "+name+" for type "+stringify(baseType)+" is not compiled yet!");}return delegate.apply(this,arguments);};proxyClass.setDelegate=function(d){delegate=d;proxyClass.prototype=d.prototype;};// Make stringify work correctly
proxyClass.overriddenName=name;return proxyClass;};CompileMetadataResolver.prototype.getGeneratedClass=function(dirType,name){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),name);}else{return this._createProxyClass(dirType,name);}};CompileMetadataResolver.prototype.getComponentViewClass=function(dirType){return this.getGeneratedClass(dirType,viewClassName(dirType,0));};CompileMetadataResolver.prototype.getHostComponentViewClass=function(dirType){return this.getGeneratedClass(dirType,hostViewClassName(dirType));};CompileMetadataResolver.prototype.getHostComponentType=function(dirType){var name=identifierName({reference:dirType})+"_Host";if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(dirType.filePath,name);}return this._createProxyClass(dirType,name);};CompileMetadataResolver.prototype.getRendererType=function(dirType){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),rendererTypeName(dirType));}else{// returning an object as proxy,
// that we fill later during runtime compilation.
return{};}};CompileMetadataResolver.prototype.getComponentFactory=function(selector,dirType,inputs,outputs){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),componentFactoryName(dirType));}else{var hostView=this.getHostComponentViewClass(dirType);// Note: ngContentSelectors will be filled later once the template is
// loaded.
var createComponentFactory=this._reflector.resolveExternalReference(Identifiers.createComponentFactory);return createComponentFactory(selector,dirType,hostView,inputs,outputs,[]);}};CompileMetadataResolver.prototype.initComponentFactory=function(factory,ngContentSelectors){var _a;if(!(factory instanceof StaticSymbol)){(_a=factory.ngContentSelectors).push.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(ngContentSelectors));}};CompileMetadataResolver.prototype._loadSummary=function(type,kind){var typeSummary=this._summaryCache.get(type);if(!typeSummary){var summary=this._summaryResolver.resolveSummary(type);typeSummary=summary?summary.type:null;this._summaryCache.set(type,typeSummary||null);}return typeSummary&&typeSummary.summaryKind===kind?typeSummary:null;};CompileMetadataResolver.prototype.getHostComponentMetadata=function(compMeta,hostViewType){var hostType=this.getHostComponentType(compMeta.type.reference);if(!hostViewType){hostViewType=this.getHostComponentViewClass(hostType);}// Note: ! is ok here as this method should only be called with normalized directive
// metadata, which always fills in the selector.
var template=CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();var templateUrl='';var htmlAst=this._htmlParser.parse(template,templateUrl);return CompileDirectiveMetadata.create({isHost:true,type:{reference:hostType,diDeps:[],lifecycleHooks:[]},template:new CompileTemplateMetadata({encapsulation:ViewEncapsulation.None,template:template,templateUrl:templateUrl,htmlAst:htmlAst,styles:[],styleUrls:[],ngContentSelectors:[],animations:[],isInline:true,externalStylesheets:[],interpolation:null,preserveWhitespaces:false}),exportAs:null,changeDetection:ChangeDetectionStrategy.Default,inputs:[],outputs:[],host:{},isComponent:true,selector:'*',providers:[],viewProviders:[],queries:[],guards:{},viewQueries:[],componentViewType:hostViewType,rendererType:{id:'__Host__',encapsulation:ViewEncapsulation.None,styles:[],data:{}},entryComponents:[],componentFactory:null});};CompileMetadataResolver.prototype.loadDirectiveMetadata=function(ngModuleType,directiveType,isSync){var _this=this;if(this._directiveCache.has(directiveType)){return null;}directiveType=resolveForwardRef(directiveType);var _a=this.getNonNormalizedDirectiveMetadata(directiveType),annotation=_a.annotation,metadata=_a.metadata;var createDirectiveMetadata=function createDirectiveMetadata(templateMetadata){var normalizedDirMeta=new CompileDirectiveMetadata({isHost:false,type:metadata.type,isComponent:metadata.isComponent,selector:metadata.selector,exportAs:metadata.exportAs,changeDetection:metadata.changeDetection,inputs:metadata.inputs,outputs:metadata.outputs,hostListeners:metadata.hostListeners,hostProperties:metadata.hostProperties,hostAttributes:metadata.hostAttributes,providers:metadata.providers,viewProviders:metadata.viewProviders,queries:metadata.queries,guards:metadata.guards,viewQueries:metadata.viewQueries,entryComponents:metadata.entryComponents,componentViewType:metadata.componentViewType,rendererType:metadata.rendererType,componentFactory:metadata.componentFactory,template:templateMetadata});if(templateMetadata){_this.initComponentFactory(metadata.componentFactory,templateMetadata.ngContentSelectors);}_this._directiveCache.set(directiveType,normalizedDirMeta);_this._summaryCache.set(directiveType,normalizedDirMeta.toSummary());return null;};if(metadata.isComponent){var template=metadata.template;var templateMeta=this._directiveNormalizer.normalizeTemplate({ngModuleType:ngModuleType,componentType:directiveType,moduleUrl:this._reflector.componentModuleUrl(directiveType,annotation),encapsulation:template.encapsulation,template:template.template,templateUrl:template.templateUrl,styles:template.styles,styleUrls:template.styleUrls,animations:template.animations,interpolation:template.interpolation,preserveWhitespaces:template.preserveWhitespaces});if(isPromise(templateMeta)&&isSync){this._reportError(componentStillLoadingError(directiveType),directiveType);return null;}return SyncAsync.then(templateMeta,createDirectiveMetadata);}else{// directive
createDirectiveMetadata(null);return null;}};CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata=function(directiveType){var _this=this;directiveType=resolveForwardRef(directiveType);if(!directiveType){return null;}var cacheEntry=this._nonNormalizedDirectiveCache.get(directiveType);if(cacheEntry){return cacheEntry;}var dirMeta=this._directiveResolver.resolve(directiveType,false);if(!dirMeta){return null;}var nonNormalizedTemplateMetadata=undefined;if(createComponent.isTypeOf(dirMeta)){// component
var compMeta=dirMeta;assertArrayOfStrings('styles',compMeta.styles);assertArrayOfStrings('styleUrls',compMeta.styleUrls);assertInterpolationSymbols('interpolation',compMeta.interpolation);var animations=compMeta.animations;nonNormalizedTemplateMetadata=new CompileTemplateMetadata({encapsulation:noUndefined(compMeta.encapsulation),template:noUndefined(compMeta.template),templateUrl:noUndefined(compMeta.templateUrl),htmlAst:null,styles:compMeta.styles||[],styleUrls:compMeta.styleUrls||[],animations:animations||[],interpolation:noUndefined(compMeta.interpolation),isInline:!!compMeta.template,externalStylesheets:[],ngContentSelectors:[],preserveWhitespaces:noUndefined(dirMeta.preserveWhitespaces)});}var changeDetectionStrategy=null;var viewProviders=[];var entryComponentMetadata=[];var selector=dirMeta.selector;if(createComponent.isTypeOf(dirMeta)){// Component
var compMeta=dirMeta;changeDetectionStrategy=compMeta.changeDetection;if(compMeta.viewProviders){viewProviders=this._getProvidersMetadata(compMeta.viewProviders,entryComponentMetadata,"viewProviders for \""+stringifyType(directiveType)+"\"",[],directiveType);}if(compMeta.entryComponents){entryComponentMetadata=flattenAndDedupeArray(compMeta.entryComponents).map(function(type){return _this._getEntryComponentMetadata(type);}).concat(entryComponentMetadata);}if(!selector){selector=this._schemaRegistry.getDefaultComponentElementName();}}else{// Directive
if(!selector){this._reportError(syntaxError("Directive "+stringifyType(directiveType)+" has no selector, please add it!"),directiveType);selector='error';}}var providers=[];if(dirMeta.providers!=null){providers=this._getProvidersMetadata(dirMeta.providers,entryComponentMetadata,"providers for \""+stringifyType(directiveType)+"\"",[],directiveType);}var queries=[];var viewQueries=[];if(dirMeta.queries!=null){queries=this._getQueriesMetadata(dirMeta.queries,false,directiveType);viewQueries=this._getQueriesMetadata(dirMeta.queries,true,directiveType);}var metadata=CompileDirectiveMetadata.create({isHost:false,selector:selector,exportAs:noUndefined(dirMeta.exportAs),isComponent:!!nonNormalizedTemplateMetadata,type:this._getTypeMetadata(directiveType),template:nonNormalizedTemplateMetadata,changeDetection:changeDetectionStrategy,inputs:dirMeta.inputs||[],outputs:dirMeta.outputs||[],host:dirMeta.host||{},providers:providers||[],viewProviders:viewProviders||[],queries:queries||[],guards:dirMeta.guards||{},viewQueries:viewQueries||[],entryComponents:entryComponentMetadata,componentViewType:nonNormalizedTemplateMetadata?this.getComponentViewClass(directiveType):null,rendererType:nonNormalizedTemplateMetadata?this.getRendererType(directiveType):null,componentFactory:null});if(nonNormalizedTemplateMetadata){metadata.componentFactory=this.getComponentFactory(selector,directiveType,metadata.inputs,metadata.outputs);}cacheEntry={metadata:metadata,annotation:dirMeta};this._nonNormalizedDirectiveCache.set(directiveType,cacheEntry);return cacheEntry;};/**
     * Gets the metadata for the given directive.
     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
     */CompileMetadataResolver.prototype.getDirectiveMetadata=function(directiveType){var dirMeta=this._directiveCache.get(directiveType);if(!dirMeta){this._reportError(syntaxError("Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive "+stringifyType(directiveType)+"."),directiveType);}return dirMeta;};CompileMetadataResolver.prototype.getDirectiveSummary=function(dirType){var dirSummary=this._loadSummary(dirType,CompileSummaryKind.Directive);if(!dirSummary){this._reportError(syntaxError("Illegal state: Could not load the summary for directive "+stringifyType(dirType)+"."),dirType);}return dirSummary;};CompileMetadataResolver.prototype.isDirective=function(type){return!!this._loadSummary(type,CompileSummaryKind.Directive)||this._directiveResolver.isDirective(type);};CompileMetadataResolver.prototype.isPipe=function(type){return!!this._loadSummary(type,CompileSummaryKind.Pipe)||this._pipeResolver.isPipe(type);};CompileMetadataResolver.prototype.isNgModule=function(type){return!!this._loadSummary(type,CompileSummaryKind.NgModule)||this._ngModuleResolver.isNgModule(type);};CompileMetadataResolver.prototype.getNgModuleSummary=function(moduleType,alreadyCollecting){if(alreadyCollecting===void 0){alreadyCollecting=null;}var moduleSummary=this._loadSummary(moduleType,CompileSummaryKind.NgModule);if(!moduleSummary){var moduleMeta=this.getNgModuleMetadata(moduleType,false,alreadyCollecting);moduleSummary=moduleMeta?moduleMeta.toSummary():null;if(moduleSummary){this._summaryCache.set(moduleType,moduleSummary);}}return moduleSummary;};/**
     * Loads the declared directives and pipes of an NgModule.
     */CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata=function(moduleType,isSync,throwIfNotFound){var _this=this;if(throwIfNotFound===void 0){throwIfNotFound=true;}var ngModule=this.getNgModuleMetadata(moduleType,throwIfNotFound);var loading=[];if(ngModule){ngModule.declaredDirectives.forEach(function(id){var promise=_this.loadDirectiveMetadata(moduleType,id.reference,isSync);if(promise){loading.push(promise);}});ngModule.declaredPipes.forEach(function(id){return _this._loadPipeMetadata(id.reference);});}return Promise.all(loading);};CompileMetadataResolver.prototype.getShallowModuleMetadata=function(moduleType){var compileMeta=this._shallowModuleCache.get(moduleType);if(compileMeta){return compileMeta;}var ngModuleMeta=findLast(this._reflector.shallowAnnotations(moduleType),createNgModule.isTypeOf);compileMeta={type:this._getTypeMetadata(moduleType),rawExports:ngModuleMeta.exports,rawImports:ngModuleMeta.imports,rawProviders:ngModuleMeta.providers};this._shallowModuleCache.set(moduleType,compileMeta);return compileMeta;};CompileMetadataResolver.prototype.getNgModuleMetadata=function(moduleType,throwIfNotFound,alreadyCollecting){var _this=this;if(throwIfNotFound===void 0){throwIfNotFound=true;}if(alreadyCollecting===void 0){alreadyCollecting=null;}moduleType=resolveForwardRef(moduleType);var compileMeta=this._ngModuleCache.get(moduleType);if(compileMeta){return compileMeta;}var meta=this._ngModuleResolver.resolve(moduleType,throwIfNotFound);if(!meta){return null;}var declaredDirectives=[];var exportedNonModuleIdentifiers=[];var declaredPipes=[];var importedModules=[];var exportedModules=[];var providers=[];var entryComponents=[];var bootstrapComponents=[];var schemas=[];if(meta.imports){flattenAndDedupeArray(meta.imports).forEach(function(importedType){var importedModuleType=undefined;if(isValidType(importedType)){importedModuleType=importedType;}else if(importedType&&importedType.ngModule){var moduleWithProviders=importedType;importedModuleType=moduleWithProviders.ngModule;if(moduleWithProviders.providers){providers.push.apply(providers,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(_this._getProvidersMetadata(moduleWithProviders.providers,entryComponents,"provider for the NgModule '"+stringifyType(importedModuleType)+"'",[],importedType)));}}if(importedModuleType){if(_this._checkSelfImport(moduleType,importedModuleType))return;if(!alreadyCollecting)alreadyCollecting=new Set();if(alreadyCollecting.has(importedModuleType)){_this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType)+" '"+stringifyType(importedType)+"' is imported recursively by the module '"+stringifyType(moduleType)+"'."),moduleType);return;}alreadyCollecting.add(importedModuleType);var importedModuleSummary=_this.getNgModuleSummary(importedModuleType,alreadyCollecting);alreadyCollecting.delete(importedModuleType);if(!importedModuleSummary){_this._reportError(syntaxError("Unexpected "+_this._getTypeDescriptor(importedType)+" '"+stringifyType(importedType)+"' imported by the module '"+stringifyType(moduleType)+"'. Please add a @NgModule annotation."),moduleType);return;}importedModules.push(importedModuleSummary);}else{_this._reportError(syntaxError("Unexpected value '"+stringifyType(importedType)+"' imported by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}});}if(meta.exports){flattenAndDedupeArray(meta.exports).forEach(function(exportedType){if(!isValidType(exportedType)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(exportedType)+"' exported by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}if(!alreadyCollecting)alreadyCollecting=new Set();if(alreadyCollecting.has(exportedType)){_this._reportError(syntaxError(_this._getTypeDescriptor(exportedType)+" '"+stringify(exportedType)+"' is exported recursively by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}alreadyCollecting.add(exportedType);var exportedModuleSummary=_this.getNgModuleSummary(exportedType,alreadyCollecting);alreadyCollecting.delete(exportedType);if(exportedModuleSummary){exportedModules.push(exportedModuleSummary);}else{exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));}});}// Note: This will be modified later, so we rely on
// getting a new instance every time!
var transitiveModule=this._getTransitiveNgModuleMetadata(importedModules,exportedModules);if(meta.declarations){flattenAndDedupeArray(meta.declarations).forEach(function(declaredType){if(!isValidType(declaredType)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(declaredType)+"' declared by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}var declaredIdentifier=_this._getIdentifierMetadata(declaredType);if(_this.isDirective(declaredType)){transitiveModule.addDirective(declaredIdentifier);declaredDirectives.push(declaredIdentifier);_this._addTypeToModule(declaredType,moduleType);}else if(_this.isPipe(declaredType)){transitiveModule.addPipe(declaredIdentifier);transitiveModule.pipes.push(declaredIdentifier);declaredPipes.push(declaredIdentifier);_this._addTypeToModule(declaredType,moduleType);}else{_this._reportError(syntaxError("Unexpected "+_this._getTypeDescriptor(declaredType)+" '"+stringifyType(declaredType)+"' declared by the module '"+stringifyType(moduleType)+"'. Please add a @Pipe/@Directive/@Component annotation."),moduleType);return;}});}var exportedDirectives=[];var exportedPipes=[];exportedNonModuleIdentifiers.forEach(function(exportedId){if(transitiveModule.directivesSet.has(exportedId.reference)){exportedDirectives.push(exportedId);transitiveModule.addExportedDirective(exportedId);}else if(transitiveModule.pipesSet.has(exportedId.reference)){exportedPipes.push(exportedId);transitiveModule.addExportedPipe(exportedId);}else{_this._reportError(syntaxError("Can't export "+_this._getTypeDescriptor(exportedId.reference)+" "+stringifyType(exportedId.reference)+" from "+stringifyType(moduleType)+" as it was neither declared nor imported!"),moduleType);return;}});// The providers of the module have to go last
// so that they overwrite any other provider we already added.
if(meta.providers){providers.push.apply(providers,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this._getProvidersMetadata(meta.providers,entryComponents,"provider for the NgModule '"+stringifyType(moduleType)+"'",[],moduleType)));}if(meta.entryComponents){entryComponents.push.apply(entryComponents,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(flattenAndDedupeArray(meta.entryComponents).map(function(type){return _this._getEntryComponentMetadata(type);})));}if(meta.bootstrap){flattenAndDedupeArray(meta.bootstrap).forEach(function(type){if(!isValidType(type)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(type)+"' used in the bootstrap property of module '"+stringifyType(moduleType)+"'"),moduleType);return;}bootstrapComponents.push(_this._getIdentifierMetadata(type));});}entryComponents.push.apply(entryComponents,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(bootstrapComponents.map(function(type){return _this._getEntryComponentMetadata(type.reference);})));if(meta.schemas){schemas.push.apply(schemas,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(flattenAndDedupeArray(meta.schemas)));}compileMeta=new CompileNgModuleMetadata({type:this._getTypeMetadata(moduleType),providers:providers,entryComponents:entryComponents,bootstrapComponents:bootstrapComponents,schemas:schemas,declaredDirectives:declaredDirectives,exportedDirectives:exportedDirectives,declaredPipes:declaredPipes,exportedPipes:exportedPipes,importedModules:importedModules,exportedModules:exportedModules,transitiveModule:transitiveModule,id:meta.id||null});entryComponents.forEach(function(id){return transitiveModule.addEntryComponent(id);});providers.forEach(function(provider){return transitiveModule.addProvider(provider,compileMeta.type);});transitiveModule.addModule(compileMeta.type);this._ngModuleCache.set(moduleType,compileMeta);return compileMeta;};CompileMetadataResolver.prototype._checkSelfImport=function(moduleType,importedModuleType){if(moduleType===importedModuleType){this._reportError(syntaxError("'"+stringifyType(moduleType)+"' module can't import itself"),moduleType);return true;}return false;};CompileMetadataResolver.prototype._getTypeDescriptor=function(type){if(isValidType(type)){if(this.isDirective(type)){return'directive';}if(this.isPipe(type)){return'pipe';}if(this.isNgModule(type)){return'module';}}if(type.provide){return'provider';}return'value';};CompileMetadataResolver.prototype._addTypeToModule=function(type,moduleType){var oldModule=this._ngModuleOfTypes.get(type);if(oldModule&&oldModule!==moduleType){this._reportError(syntaxError("Type "+stringifyType(type)+" is part of the declarations of 2 modules: "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+"! "+("Please consider moving "+stringifyType(type)+" to a higher module that imports "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+". ")+("You can also create a new NgModule that exports and includes "+stringifyType(type)+" then import that NgModule in "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+".")),moduleType);return;}this._ngModuleOfTypes.set(type,moduleType);};CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata=function(importedModules,exportedModules){// collect `providers` / `entryComponents` from all imported and all exported modules
var result=new TransitiveCompileNgModuleMetadata();var modulesByToken=new Map();importedModules.concat(exportedModules).forEach(function(modSummary){modSummary.modules.forEach(function(mod){return result.addModule(mod);});modSummary.entryComponents.forEach(function(comp){return result.addEntryComponent(comp);});var addedTokens=new Set();modSummary.providers.forEach(function(entry){var tokenRef=tokenReference(entry.provider.token);var prevModules=modulesByToken.get(tokenRef);if(!prevModules){prevModules=new Set();modulesByToken.set(tokenRef,prevModules);}var moduleRef=entry.module.reference;// Note: the providers of one module may still contain multiple providers
// per token (e.g. for multi providers), and we need to preserve these.
if(addedTokens.has(tokenRef)||!prevModules.has(moduleRef)){prevModules.add(moduleRef);addedTokens.add(tokenRef);result.addProvider(entry.provider,entry.module);}});});exportedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addExportedDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addExportedPipe(id);});});importedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addPipe(id);});});return result;};CompileMetadataResolver.prototype._getIdentifierMetadata=function(type){type=resolveForwardRef(type);return{reference:type};};CompileMetadataResolver.prototype.isInjectable=function(type){var annotations=this._reflector.tryAnnotations(type);return annotations.some(function(ann){return createInjectable.isTypeOf(ann);});};CompileMetadataResolver.prototype.getInjectableSummary=function(type){return{summaryKind:CompileSummaryKind.Injectable,type:this._getTypeMetadata(type,null,false)};};CompileMetadataResolver.prototype.getInjectableMetadata=function(type,dependencies,throwOnUnknownDeps){if(dependencies===void 0){dependencies=null;}if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var typeSummary=this._loadSummary(type,CompileSummaryKind.Injectable);var typeMetadata=typeSummary?typeSummary.type:this._getTypeMetadata(type,dependencies,throwOnUnknownDeps);var annotations=this._reflector.annotations(type).filter(function(ann){return createInjectable.isTypeOf(ann);});if(annotations.length===0){return null;}var meta=annotations[annotations.length-1];return{symbol:type,type:typeMetadata,providedIn:meta.providedIn,useValue:meta.useValue,useClass:meta.useClass,useExisting:meta.useExisting,useFactory:meta.useFactory,deps:meta.deps};};CompileMetadataResolver.prototype._getTypeMetadata=function(type,dependencies,throwOnUnknownDeps){if(dependencies===void 0){dependencies=null;}if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var identifier=this._getIdentifierMetadata(type);return{reference:identifier.reference,diDeps:this._getDependenciesMetadata(identifier.reference,dependencies,throwOnUnknownDeps),lifecycleHooks:getAllLifecycleHooks(this._reflector,identifier.reference)};};CompileMetadataResolver.prototype._getFactoryMetadata=function(factory,dependencies){if(dependencies===void 0){dependencies=null;}factory=resolveForwardRef(factory);return{reference:factory,diDeps:this._getDependenciesMetadata(factory,dependencies)};};/**
     * Gets the metadata for the given pipe.
     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
     */CompileMetadataResolver.prototype.getPipeMetadata=function(pipeType){var pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){this._reportError(syntaxError("Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe "+stringifyType(pipeType)+"."),pipeType);}return pipeMeta||null;};CompileMetadataResolver.prototype.getPipeSummary=function(pipeType){var pipeSummary=this._loadSummary(pipeType,CompileSummaryKind.Pipe);if(!pipeSummary){this._reportError(syntaxError("Illegal state: Could not load the summary for pipe "+stringifyType(pipeType)+"."),pipeType);}return pipeSummary;};CompileMetadataResolver.prototype.getOrLoadPipeMetadata=function(pipeType){var pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){pipeMeta=this._loadPipeMetadata(pipeType);}return pipeMeta;};CompileMetadataResolver.prototype._loadPipeMetadata=function(pipeType){pipeType=resolveForwardRef(pipeType);var pipeAnnotation=this._pipeResolver.resolve(pipeType);var pipeMeta=new CompilePipeMetadata({type:this._getTypeMetadata(pipeType),name:pipeAnnotation.name,pure:!!pipeAnnotation.pure});this._pipeCache.set(pipeType,pipeMeta);this._summaryCache.set(pipeType,pipeMeta.toSummary());return pipeMeta;};CompileMetadataResolver.prototype._getDependenciesMetadata=function(typeOrFunc,dependencies,throwOnUnknownDeps){var _this=this;if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var hasUnknownDeps=false;var params=dependencies||this._reflector.parameters(typeOrFunc)||[];var dependenciesMetadata=params.map(function(param){var isAttribute=false;var isHost=false;var isSelf=false;var isSkipSelf=false;var isOptional=false;var token=null;if(Array.isArray(param)){param.forEach(function(paramEntry){if(createHost.isTypeOf(paramEntry)){isHost=true;}else if(createSelf.isTypeOf(paramEntry)){isSelf=true;}else if(createSkipSelf.isTypeOf(paramEntry)){isSkipSelf=true;}else if(createOptional.isTypeOf(paramEntry)){isOptional=true;}else if(createAttribute.isTypeOf(paramEntry)){isAttribute=true;token=paramEntry.attributeName;}else if(createInject.isTypeOf(paramEntry)){token=paramEntry.token;}else if(createInjectionToken.isTypeOf(paramEntry)||paramEntry instanceof StaticSymbol){token=paramEntry;}else if(isValidType(paramEntry)&&token==null){token=paramEntry;}});}else{token=param;}if(token==null){hasUnknownDeps=true;return null;}return{isAttribute:isAttribute,isHost:isHost,isSelf:isSelf,isSkipSelf:isSkipSelf,isOptional:isOptional,token:_this._getTokenMetadata(token)};});if(hasUnknownDeps){var depsTokens=dependenciesMetadata.map(function(dep){return dep?stringifyType(dep.token):'?';}).join(', ');var message="Can't resolve all parameters for "+stringifyType(typeOrFunc)+": ("+depsTokens+").";if(throwOnUnknownDeps||this._config.strictInjectionParameters){this._reportError(syntaxError(message),typeOrFunc);}else{this._console.warn("Warning: "+message+" This will become an error in Angular v6.x");}}return dependenciesMetadata;};CompileMetadataResolver.prototype._getTokenMetadata=function(token){token=resolveForwardRef(token);var compileToken;if(typeof token==='string'){compileToken={value:token};}else{compileToken={identifier:{reference:token}};}return compileToken;};CompileMetadataResolver.prototype._getProvidersMetadata=function(providers,targetEntryComponents,debugInfo,compileProviders,type){var _this=this;if(compileProviders===void 0){compileProviders=[];}providers.forEach(function(provider,providerIdx){if(Array.isArray(provider)){_this._getProvidersMetadata(provider,targetEntryComponents,debugInfo,compileProviders);}else{provider=resolveForwardRef(provider);var providerMeta=undefined;if(provider&&_typeof(provider)==='object'&&provider.hasOwnProperty('provide')){_this._validateProvider(provider);providerMeta=new ProviderMeta(provider.provide,provider);}else if(isValidType(provider)){providerMeta=new ProviderMeta(provider,{useClass:provider});}else if(provider===void 0){_this._reportError(syntaxError("Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files."));return;}else{var providersInfo=providers.reduce(function(soFar,seenProvider,seenProviderIdx){if(seenProviderIdx<providerIdx){soFar.push(""+stringifyType(seenProvider));}else if(seenProviderIdx==providerIdx){soFar.push("?"+stringifyType(seenProvider)+"?");}else if(seenProviderIdx==providerIdx+1){soFar.push('...');}return soFar;},[]).join(', ');_this._reportError(syntaxError("Invalid "+(debugInfo?debugInfo:'provider')+" - only instances of Provider and Type are allowed, got: ["+providersInfo+"]"),type);return;}if(providerMeta.token===_this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)){targetEntryComponents.push.apply(targetEntryComponents,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(_this._getEntryComponentsFromProvider(providerMeta,type)));}else{compileProviders.push(_this.getProviderMetadata(providerMeta));}}});return compileProviders;};CompileMetadataResolver.prototype._validateProvider=function(provider){if(provider.hasOwnProperty('useClass')&&provider.useClass==null){this._reportError(syntaxError("Invalid provider for "+stringifyType(provider.provide)+". useClass cannot be "+provider.useClass+".\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case."));}};CompileMetadataResolver.prototype._getEntryComponentsFromProvider=function(provider,type){var _this=this;var components=[];var collectedIdentifiers=[];if(provider.useFactory||provider.useExisting||provider.useClass){this._reportError(syntaxError("The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!"),type);return[];}if(!provider.multi){this._reportError(syntaxError("The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!"),type);return[];}extractIdentifiers(provider.useValue,collectedIdentifiers);collectedIdentifiers.forEach(function(identifier){var entry=_this._getEntryComponentMetadata(identifier.reference,false);if(entry){components.push(entry);}});return components;};CompileMetadataResolver.prototype._getEntryComponentMetadata=function(dirType,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var dirMeta=this.getNonNormalizedDirectiveMetadata(dirType);if(dirMeta&&dirMeta.metadata.isComponent){return{componentType:dirType,componentFactory:dirMeta.metadata.componentFactory};}var dirSummary=this._loadSummary(dirType,CompileSummaryKind.Directive);if(dirSummary&&dirSummary.isComponent){return{componentType:dirType,componentFactory:dirSummary.componentFactory};}if(throwIfNotFound){throw syntaxError(dirType.name+" cannot be used as an entry component.");}return null;};CompileMetadataResolver.prototype._getInjectableTypeMetadata=function(type,dependencies){if(dependencies===void 0){dependencies=null;}var typeSummary=this._loadSummary(type,CompileSummaryKind.Injectable);if(typeSummary){return typeSummary.type;}return this._getTypeMetadata(type,dependencies);};CompileMetadataResolver.prototype.getProviderMetadata=function(provider){var compileDeps=undefined;var compileTypeMetadata=null;var compileFactoryMetadata=null;var token=this._getTokenMetadata(provider.token);if(provider.useClass){compileTypeMetadata=this._getInjectableTypeMetadata(provider.useClass,provider.dependencies);compileDeps=compileTypeMetadata.diDeps;if(provider.token===provider.useClass){// use the compileTypeMetadata as it contains information about lifecycleHooks...
token={identifier:compileTypeMetadata};}}else if(provider.useFactory){compileFactoryMetadata=this._getFactoryMetadata(provider.useFactory,provider.dependencies);compileDeps=compileFactoryMetadata.diDeps;}return{token:token,useClass:compileTypeMetadata,useValue:provider.useValue,useFactory:compileFactoryMetadata,useExisting:provider.useExisting?this._getTokenMetadata(provider.useExisting):undefined,deps:compileDeps,multi:provider.multi};};CompileMetadataResolver.prototype._getQueriesMetadata=function(queries,isViewQuery,directiveType){var _this=this;var res=[];Object.keys(queries).forEach(function(propertyName){var query=queries[propertyName];if(query.isViewQuery===isViewQuery){res.push(_this._getQueryMetadata(query,propertyName,directiveType));}});return res;};CompileMetadataResolver.prototype._queryVarBindings=function(selector){return selector.split(/\s*,\s*/);};CompileMetadataResolver.prototype._getQueryMetadata=function(q,propertyName,typeOrFunc){var _this=this;var selectors;if(typeof q.selector==='string'){selectors=this._queryVarBindings(q.selector).map(function(varName){return _this._getTokenMetadata(varName);});}else{if(!q.selector){this._reportError(syntaxError("Can't construct a query for the property \""+propertyName+"\" of \""+stringifyType(typeOrFunc)+"\" since the query selector wasn't defined."),typeOrFunc);selectors=[];}else{selectors=[this._getTokenMetadata(q.selector)];}}return{selectors:selectors,first:q.first,descendants:q.descendants,propertyName:propertyName,read:q.read?this._getTokenMetadata(q.read):null};};CompileMetadataResolver.prototype._reportError=function(error$$1,type,otherType){if(this._errorCollector){this._errorCollector(error$$1,type);if(otherType){this._errorCollector(error$$1,otherType);}}else{throw error$$1;}};return CompileMetadataResolver;}();function flattenArray(tree,out){if(out===void 0){out=[];}if(tree){for(var i=0;i<tree.length;i++){var item=resolveForwardRef(tree[i]);if(Array.isArray(item)){flattenArray(item,out);}else{out.push(item);}}}return out;}function dedupeArray(array){if(array){return Array.from(new Set(array));}return[];}function flattenAndDedupeArray(tree){return dedupeArray(flattenArray(tree));}function isValidType(value){return value instanceof StaticSymbol||value instanceof Type;}function extractIdentifiers(value,targetIdentifiers){visitValue(value,new _CompileValueConverter(),targetIdentifiers);}var _CompileValueConverter=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(_CompileValueConverter,_super);function _CompileValueConverter(){return _super!==null&&_super.apply(this,arguments)||this;}_CompileValueConverter.prototype.visitOther=function(value,targetIdentifiers){targetIdentifiers.push({reference:value});};return _CompileValueConverter;}(ValueTransformer);function stringifyType(type){if(type instanceof StaticSymbol){return type.name+" in "+type.filePath;}else{return stringify(type);}}/**
 * Indicates that a component is still being loaded in a synchronous compile.
 */function componentStillLoadingError(compType){var error$$1=Error("Can't compile synchronously as "+stringify(compType)+" is still being loaded!");error$$1[ERROR_COMPONENT_TYPE]=compType;return error$$1;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ProviderError=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ProviderError,_super);function ProviderError(message,span){return _super.call(this,span,message)||this;}return ProviderError;}(ParseError);var ProviderViewContext=/** @class */function(){function ProviderViewContext(reflector,component){var _this=this;this.reflector=reflector;this.component=component;this.errors=[];this.viewQueries=_getViewQueries(component);this.viewProviders=new Map();component.viewProviders.forEach(function(provider){if(_this.viewProviders.get(tokenReference(provider.token))==null){_this.viewProviders.set(tokenReference(provider.token),true);}});}return ProviderViewContext;}();var ProviderElementContext=/** @class */function(){function ProviderElementContext(viewContext,_parent,_isViewRoot,_directiveAsts,attrs,refs,isTemplate,contentQueryStartId,_sourceSpan){var _this=this;this.viewContext=viewContext;this._parent=_parent;this._isViewRoot=_isViewRoot;this._directiveAsts=_directiveAsts;this._sourceSpan=_sourceSpan;this._transformedProviders=new Map();this._seenProviders=new Map();this._queriedTokens=new Map();this.transformedHasViewContainer=false;this._attrs={};attrs.forEach(function(attrAst){return _this._attrs[attrAst.name]=attrAst.value;});var directivesMeta=_directiveAsts.map(function(directiveAst){return directiveAst.directive;});this._allProviders=_resolveProvidersFromDirectives(directivesMeta,_sourceSpan,viewContext.errors);this._contentQueries=_getContentQueries(contentQueryStartId,directivesMeta);Array.from(this._allProviders.values()).forEach(function(provider){_this._addQueryReadsTo(provider.token,provider.token,_this._queriedTokens);});if(isTemplate){var templateRefId=createTokenForExternalReference(this.viewContext.reflector,Identifiers.TemplateRef);this._addQueryReadsTo(templateRefId,templateRefId,this._queriedTokens);}refs.forEach(function(refAst){var defaultQueryValue=refAst.value||createTokenForExternalReference(_this.viewContext.reflector,Identifiers.ElementRef);_this._addQueryReadsTo({value:refAst.name},defaultQueryValue,_this._queriedTokens);});if(this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))){this.transformedHasViewContainer=true;}// create the providers that we know are eager first
Array.from(this._allProviders.values()).forEach(function(provider){var eager=provider.eager||_this._queriedTokens.get(tokenReference(provider.token));if(eager){_this._getOrCreateLocalProvider(provider.providerType,provider.token,true);}});}ProviderElementContext.prototype.afterElement=function(){var _this=this;// collect lazy providers
Array.from(this._allProviders.values()).forEach(function(provider){_this._getOrCreateLocalProvider(provider.providerType,provider.token,false);});};Object.defineProperty(ProviderElementContext.prototype,"transformProviders",{get:function get(){// Note: Maps keep their insertion order.
var lazyProviders=[];var eagerProviders=[];this._transformedProviders.forEach(function(provider){if(provider.eager){eagerProviders.push(provider);}else{lazyProviders.push(provider);}});return lazyProviders.concat(eagerProviders);},enumerable:true,configurable:true});Object.defineProperty(ProviderElementContext.prototype,"transformedDirectiveAsts",{get:function get(){var sortedProviderTypes=this.transformProviders.map(function(provider){return provider.token.identifier;});var sortedDirectives=this._directiveAsts.slice();sortedDirectives.sort(function(dir1,dir2){return sortedProviderTypes.indexOf(dir1.directive.type)-sortedProviderTypes.indexOf(dir2.directive.type);});return sortedDirectives;},enumerable:true,configurable:true});Object.defineProperty(ProviderElementContext.prototype,"queryMatches",{get:function get(){var allMatches=[];this._queriedTokens.forEach(function(matches){allMatches.push.apply(allMatches,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(matches));});return allMatches;},enumerable:true,configurable:true});ProviderElementContext.prototype._addQueryReadsTo=function(token,defaultValue,queryReadTokens){this._getQueriesFor(token).forEach(function(query){var queryValue=query.meta.read||defaultValue;var tokenRef=tokenReference(queryValue);var queryMatches=queryReadTokens.get(tokenRef);if(!queryMatches){queryMatches=[];queryReadTokens.set(tokenRef,queryMatches);}queryMatches.push({queryId:query.queryId,value:queryValue});});};ProviderElementContext.prototype._getQueriesFor=function(token){var result=[];var currentEl=this;var distance=0;var queries;while(currentEl!==null){queries=currentEl._contentQueries.get(tokenReference(token));if(queries){result.push.apply(result,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(queries.filter(function(query){return query.meta.descendants||distance<=1;})));}if(currentEl._directiveAsts.length>0){distance++;}currentEl=currentEl._parent;}queries=this.viewContext.viewQueries.get(tokenReference(token));if(queries){result.push.apply(result,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(queries));}return result;};ProviderElementContext.prototype._getOrCreateLocalProvider=function(requestingProviderType,token,eager){var _this=this;var resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider||(requestingProviderType===ProviderAstType.Directive||requestingProviderType===ProviderAstType.PublicService)&&resolvedProvider.providerType===ProviderAstType.PrivateService||(requestingProviderType===ProviderAstType.PrivateService||requestingProviderType===ProviderAstType.PublicService)&&resolvedProvider.providerType===ProviderAstType.Builtin){return null;}var transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(this._seenProviders.get(tokenReference(token))!=null){this.viewContext.errors.push(new ProviderError("Cannot instantiate cyclic dependency! "+tokenName(token),this._sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var transformedProviders=resolvedProvider.providers.map(function(provider){var transformedUseValue=provider.useValue;var transformedUseExisting=provider.useExisting;var transformedDeps=undefined;if(provider.useExisting!=null){var existingDiDep=_this._getDependency(resolvedProvider.providerType,{token:provider.useExisting},eager);if(existingDiDep.token!=null){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(resolvedProvider.providerType,dep,eager);});}else if(provider.useClass){var deps=provider.deps||provider.useClass.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(resolvedProvider.providerType,dep,eager);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;};ProviderElementContext.prototype._getLocalDependency=function(requestingProviderType,dep,eager){if(eager===void 0){eager=false;}if(dep.isAttribute){var attrValue=this._attrs[dep.token.value];return{isValue:true,value:attrValue==null?null:attrValue};}if(dep.token!=null){// access builtints
if(requestingProviderType===ProviderAstType.Directive||requestingProviderType===ProviderAstType.Component){if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)){return dep;}if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)){this.transformedHasViewContainer=true;}}// access the injector
if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)){return dep;}// access providers
if(this._getOrCreateLocalProvider(requestingProviderType,dep.token,eager)!=null){return dep;}}return null;};ProviderElementContext.prototype._getDependency=function(requestingProviderType,dep,eager){if(eager===void 0){eager=false;}var currElement=this;var currEager=eager;var result=null;if(!dep.isSkipSelf){result=this._getLocalDependency(requestingProviderType,dep,eager);}if(dep.isSelf){if(!result&&dep.isOptional){result={isValue:true,value:null};}}else{// check parent elements
while(!result&&currElement._parent){var prevElement=currElement;currElement=currElement._parent;if(prevElement._isViewRoot){currEager=false;}result=currElement._getLocalDependency(ProviderAstType.PublicService,dep,currEager);}// check @Host restriction
if(!result){if(!dep.isHost||this.viewContext.component.isHost||this.viewContext.component.type.reference===tokenReference(dep.token)||this.viewContext.viewProviders.get(tokenReference(dep.token))!=null){result=dep;}else{result=dep.isOptional?{isValue:true,value:null}:null;}}}if(!result){this.viewContext.errors.push(new ProviderError("No provider for "+tokenName(dep.token),this._sourceSpan));}return result;};return ProviderElementContext;}();var NgModuleProviderAnalyzer=/** @class */function(){function NgModuleProviderAnalyzer(reflector,ngModule,extraProviders,sourceSpan){var _this=this;this.reflector=reflector;this._transformedProviders=new Map();this._seenProviders=new Map();this._errors=[];this._allProviders=new Map();ngModule.transitiveModule.modules.forEach(function(ngModuleType){var ngModuleProvider={token:{identifier:ngModuleType},useClass:ngModuleType};_resolveProviders([ngModuleProvider],ProviderAstType.PublicService,true,sourceSpan,_this._errors,_this._allProviders,/* isModule */true);});_resolveProviders(ngModule.transitiveModule.providers.map(function(entry){return entry.provider;}).concat(extraProviders),ProviderAstType.PublicService,false,sourceSpan,this._errors,this._allProviders,/* isModule */false);}NgModuleProviderAnalyzer.prototype.parse=function(){var _this=this;Array.from(this._allProviders.values()).forEach(function(provider){_this._getOrCreateLocalProvider(provider.token,provider.eager);});if(this._errors.length>0){var errorString=this._errors.join('\n');throw new Error("Provider parse errors:\n"+errorString);}// Note: Maps keep their insertion order.
var lazyProviders=[];var eagerProviders=[];this._transformedProviders.forEach(function(provider){if(provider.eager){eagerProviders.push(provider);}else{lazyProviders.push(provider);}});return lazyProviders.concat(eagerProviders);};NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider=function(token,eager){var _this=this;var resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider){return null;}var transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(this._seenProviders.get(tokenReference(token))!=null){this._errors.push(new ProviderError("Cannot instantiate cyclic dependency! "+tokenName(token),resolvedProvider.sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var transformedProviders=resolvedProvider.providers.map(function(provider){var transformedUseValue=provider.useValue;var transformedUseExisting=provider.useExisting;var transformedDeps=undefined;if(provider.useExisting!=null){var existingDiDep=_this._getDependency({token:provider.useExisting},eager,resolvedProvider.sourceSpan);if(existingDiDep.token!=null){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(dep,eager,resolvedProvider.sourceSpan);});}else if(provider.useClass){var deps=provider.deps||provider.useClass.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(dep,eager,resolvedProvider.sourceSpan);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;};NgModuleProviderAnalyzer.prototype._getDependency=function(dep,eager,requestorSourceSpan){if(eager===void 0){eager=false;}if(!dep.isSkipSelf&&dep.token!=null){// access the injector
if(tokenReference(dep.token)===this.reflector.resolveExternalReference(Identifiers.Injector)||tokenReference(dep.token)===this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver));else if(this._getOrCreateLocalProvider(dep.token,eager)!=null);}return dep;};return NgModuleProviderAnalyzer;}();function _transformProvider(provider,_a){var useExisting=_a.useExisting,useValue=_a.useValue,deps=_a.deps;return{token:provider.token,useClass:provider.useClass,useExisting:useExisting,useFactory:provider.useFactory,useValue:useValue,deps:deps,multi:provider.multi};}function _transformProviderAst(provider,_a){var eager=_a.eager,providers=_a.providers;return new ProviderAst(provider.token,provider.multiProvider,provider.eager||eager,providers,provider.providerType,provider.lifecycleHooks,provider.sourceSpan,provider.isModule);}function _resolveProvidersFromDirectives(directives,sourceSpan,targetErrors){var providersByToken=new Map();directives.forEach(function(directive){var dirProvider={token:{identifier:directive.type},useClass:directive.type};_resolveProviders([dirProvider],directive.isComponent?ProviderAstType.Component:ProviderAstType.Directive,true,sourceSpan,targetErrors,providersByToken,/* isModule */false);});// Note: directives need to be able to overwrite providers of a component!
var directivesWithComponentFirst=directives.filter(function(dir){return dir.isComponent;}).concat(directives.filter(function(dir){return!dir.isComponent;}));directivesWithComponentFirst.forEach(function(directive){_resolveProviders(directive.providers,ProviderAstType.PublicService,false,sourceSpan,targetErrors,providersByToken,/* isModule */false);_resolveProviders(directive.viewProviders,ProviderAstType.PrivateService,false,sourceSpan,targetErrors,providersByToken,/* isModule */false);});return providersByToken;}function _resolveProviders(providers,providerType,eager,sourceSpan,targetErrors,targetProvidersByToken,isModule){providers.forEach(function(provider){var resolvedProvider=targetProvidersByToken.get(tokenReference(provider.token));if(resolvedProvider!=null&&!!resolvedProvider.multiProvider!==!!provider.multi){targetErrors.push(new ProviderError("Mixing multi and non multi provider is not possible for token "+tokenName(resolvedProvider.token),sourceSpan));}if(!resolvedProvider){var lifecycleHooks=provider.token.identifier&&provider.token.identifier.lifecycleHooks?provider.token.identifier.lifecycleHooks:[];var isUseValue=!(provider.useClass||provider.useExisting||provider.useFactory);resolvedProvider=new ProviderAst(provider.token,!!provider.multi,eager||isUseValue,[provider],providerType,lifecycleHooks,sourceSpan,isModule);targetProvidersByToken.set(tokenReference(provider.token),resolvedProvider);}else{if(!provider.multi){resolvedProvider.providers.length=0;}resolvedProvider.providers.push(provider);}});}function _getViewQueries(component){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var viewQueryId=1;var viewQueries=new Map();if(component.viewQueries){component.viewQueries.forEach(function(query){return _addQueryToTokenMap(viewQueries,{meta:query,queryId:viewQueryId++});});}return viewQueries;}function _getContentQueries(contentQueryStartId,directives){var contentQueryId=contentQueryStartId;var contentQueries=new Map();directives.forEach(function(directive,directiveIndex){if(directive.queries){directive.queries.forEach(function(query){return _addQueryToTokenMap(contentQueries,{meta:query,queryId:contentQueryId++});});}});return contentQueries;}function _addQueryToTokenMap(map,query){query.meta.selectors.forEach(function(token){var entry=map.get(tokenReference(token));if(!entry){entry=[];map.set(tokenReference(token),entry);}entry.push(query);});}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function providerDef(ctx,providerAst){var flags=0/* None */;if(!providerAst.eager){flags|=4096/* LazyProvider */;}if(providerAst.providerType===ProviderAstType.PrivateService){flags|=8192/* PrivateProvider */;}if(providerAst.isModule){flags|=1073741824/* TypeModuleProvider */;}providerAst.lifecycleHooks.forEach(function(lifecycleHook){// for regular providers, we only support ngOnDestroy
if(lifecycleHook===LifecycleHooks.OnDestroy||providerAst.providerType===ProviderAstType.Directive||providerAst.providerType===ProviderAstType.Component){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var _a=providerAst.multiProvider?multiProviderDef(ctx,flags,providerAst.providers):singleProviderDef(ctx,flags,providerAst.providerType,providerAst.providers[0]),providerExpr=_a.providerExpr,providerFlags=_a.flags,depsExpr=_a.depsExpr;return{providerExpr:providerExpr,flags:providerFlags,depsExpr:depsExpr,tokenExpr:tokenExpr(ctx,providerAst.token)};}function multiProviderDef(ctx,flags,providers){var allDepDefs=[];var allParams=[];var exprs=providers.map(function(provider,providerIndex){var expr;if(provider.useClass){var depExprs=convertDeps(providerIndex,provider.deps||provider.useClass.diDeps);expr=ctx.importExpr(provider.useClass.reference).instantiate(depExprs);}else if(provider.useFactory){var depExprs=convertDeps(providerIndex,provider.deps||provider.useFactory.diDeps);expr=ctx.importExpr(provider.useFactory.reference).callFn(depExprs);}else if(provider.useExisting){var depExprs=convertDeps(providerIndex,[{token:provider.useExisting}]);expr=depExprs[0];}else{expr=convertValueToOutputAst(ctx,provider.useValue);}return expr;});var providerExpr=fn(allParams,[new ReturnStatement(literalArr(exprs))],INFERRED_TYPE);return{providerExpr:providerExpr,flags:flags|1024/* TypeFactoryProvider */,depsExpr:literalArr(allDepDefs)};function convertDeps(providerIndex,deps){return deps.map(function(dep,depIndex){var paramName="p"+providerIndex+"_"+depIndex;allParams.push(new FnParam(paramName,DYNAMIC_TYPE));allDepDefs.push(depDef(ctx,dep));return variable(paramName);});}}function singleProviderDef(ctx,flags,providerType,providerMeta){var providerExpr;var deps;if(providerType===ProviderAstType.Directive||providerType===ProviderAstType.Component){providerExpr=ctx.importExpr(providerMeta.useClass.reference);flags|=16384/* TypeDirective */;deps=providerMeta.deps||providerMeta.useClass.diDeps;}else{if(providerMeta.useClass){providerExpr=ctx.importExpr(providerMeta.useClass.reference);flags|=512/* TypeClassProvider */;deps=providerMeta.deps||providerMeta.useClass.diDeps;}else if(providerMeta.useFactory){providerExpr=ctx.importExpr(providerMeta.useFactory.reference);flags|=1024/* TypeFactoryProvider */;deps=providerMeta.deps||providerMeta.useFactory.diDeps;}else if(providerMeta.useExisting){providerExpr=NULL_EXPR;flags|=2048/* TypeUseExistingProvider */;deps=[{token:providerMeta.useExisting}];}else{providerExpr=convertValueToOutputAst(ctx,providerMeta.useValue);flags|=256/* TypeValueProvider */;deps=[];}}var depsExpr=literalArr(deps.map(function(dep){return depDef(ctx,dep);}));return{providerExpr:providerExpr,flags:flags,depsExpr:depsExpr};}function tokenExpr(ctx,tokenMeta){return tokenMeta.identifier?ctx.importExpr(tokenMeta.identifier.reference):literal(tokenMeta.value);}function depDef(ctx,dep){// Note: the following fields have already been normalized out by provider_analyzer:
// - isAttribute, isHost
var expr=dep.isValue?convertValueToOutputAst(ctx,dep.value):tokenExpr(ctx,dep.token);var flags=0/* None */;if(dep.isSkipSelf){flags|=1/* SkipSelf */;}if(dep.isOptional){flags|=2/* Optional */;}if(dep.isSelf){flags|=4/* Self */;}if(dep.isValue){flags|=8/* Value */;}return flags===0/* None */?expr:literalArr([literal(flags),expr]);}function lifecycleHookToNodeFlag(lifecycleHook){var nodeFlag=0/* None */;switch(lifecycleHook){case LifecycleHooks.AfterContentChecked:nodeFlag=2097152/* AfterContentChecked */;break;case LifecycleHooks.AfterContentInit:nodeFlag=1048576/* AfterContentInit */;break;case LifecycleHooks.AfterViewChecked:nodeFlag=8388608/* AfterViewChecked */;break;case LifecycleHooks.AfterViewInit:nodeFlag=4194304/* AfterViewInit */;break;case LifecycleHooks.DoCheck:nodeFlag=262144/* DoCheck */;break;case LifecycleHooks.OnChanges:nodeFlag=524288/* OnChanges */;break;case LifecycleHooks.OnDestroy:nodeFlag=131072/* OnDestroy */;break;case LifecycleHooks.OnInit:nodeFlag=65536/* OnInit */;break;}return nodeFlag;}function componentFactoryResolverProviderDef(reflector,ctx,flags,entryComponents){var entryComponentFactories=entryComponents.map(function(entryComponent){return ctx.importExpr(entryComponent.componentFactory);});var token=createTokenForExternalReference(reflector,Identifiers.ComponentFactoryResolver);var classMeta={diDeps:[{isValue:true,value:literalArr(entryComponentFactories)},{token:token,isSkipSelf:true,isOptional:true},{token:createTokenForExternalReference(reflector,Identifiers.NgModuleRef)}],lifecycleHooks:[],reference:reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)};var _a=singleProviderDef(ctx,flags,ProviderAstType.PrivateService,{token:token,multi:false,useClass:classMeta}),providerExpr=_a.providerExpr,providerFlags=_a.flags,depsExpr=_a.depsExpr;return{providerExpr:providerExpr,flags:providerFlags,depsExpr:depsExpr,tokenExpr:tokenExpr(ctx,token)};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NgModuleCompileResult=/** @class */function(){function NgModuleCompileResult(ngModuleFactoryVar){this.ngModuleFactoryVar=ngModuleFactoryVar;}return NgModuleCompileResult;}();var LOG_VAR=variable('_l');var NgModuleCompiler=/** @class */function(){function NgModuleCompiler(reflector){this.reflector=reflector;}NgModuleCompiler.prototype.compile=function(ctx,ngModuleMeta,extraProviders){var sourceSpan=typeSourceSpan('NgModule',ngModuleMeta.type);var entryComponentFactories=ngModuleMeta.transitiveModule.entryComponents;var bootstrapComponents=ngModuleMeta.bootstrapComponents;var providerParser=new NgModuleProviderAnalyzer(this.reflector,ngModuleMeta,extraProviders,sourceSpan);var providerDefs=[componentFactoryResolverProviderDef(this.reflector,ctx,0/* None */,entryComponentFactories)].concat(providerParser.parse().map(function(provider){return providerDef(ctx,provider);})).map(function(_a){var providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,flags=_a.flags,tokenExpr=_a.tokenExpr;return importExpr(Identifiers.moduleProviderDef).callFn([literal(flags),tokenExpr,providerExpr,depsExpr]);});var ngModuleDef=importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);var ngModuleDefFactory=fn([new FnParam(LOG_VAR.name)],[new ReturnStatement(ngModuleDef)],INFERRED_TYPE);var ngModuleFactoryVar=identifierName(ngModuleMeta.type)+"NgFactory";this._createNgModuleFactory(ctx,ngModuleMeta.type.reference,importExpr(Identifiers.createModuleFactory).callFn([ctx.importExpr(ngModuleMeta.type.reference),literalArr(bootstrapComponents.map(function(id){return ctx.importExpr(id.reference);})),ngModuleDefFactory]));if(ngModuleMeta.id){var id=typeof ngModuleMeta.id==='string'?literal(ngModuleMeta.id):ctx.importExpr(ngModuleMeta.id);var registerFactoryStmt=importExpr(Identifiers.RegisterModuleFactoryFn).callFn([id,variable(ngModuleFactoryVar)]).toStmt();ctx.statements.push(registerFactoryStmt);}return new NgModuleCompileResult(ngModuleFactoryVar);};NgModuleCompiler.prototype.createStub=function(ctx,ngModuleReference){this._createNgModuleFactory(ctx,ngModuleReference,NULL_EXPR);};NgModuleCompiler.prototype._createNgModuleFactory=function(ctx,reference,value){var ngModuleFactoryVar=identifierName({reference:reference})+"NgFactory";var ngModuleFactoryStmt=variable(ngModuleFactoryVar).set(value).toDeclStmt(importType(Identifiers.NgModuleFactory,[expressionType(ctx.importExpr(reference))],[TypeModifier.Const]),[StmtModifier.Final,StmtModifier.Exported]);ctx.statements.push(ngModuleFactoryStmt);};return NgModuleCompiler;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Resolves types to {@link NgModule}.
 */var NgModuleResolver=/** @class */function(){function NgModuleResolver(_reflector){this._reflector=_reflector;}NgModuleResolver.prototype.isNgModule=function(type){return this._reflector.annotations(type).some(createNgModule.isTypeOf);};NgModuleResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var ngModuleMeta=findLast(this._reflector.annotations(type),createNgModule.isTypeOf);if(ngModuleMeta){return ngModuleMeta;}else{if(throwIfNotFound){throw new Error("No NgModule metadata found for '"+stringify(type)+"'.");}return null;}};return NgModuleResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit
var VERSION$1=3;var JS_B64_PREFIX='# sourceMappingURL=data:application/json;base64,';var SourceMapGenerator=/** @class */function(){function SourceMapGenerator(file){if(file===void 0){file=null;}this.file=file;this.sourcesContent=new Map();this.lines=[];this.lastCol0=0;this.hasMappings=false;}// The content is `null` when the content is expected to be loaded using the URL
SourceMapGenerator.prototype.addSource=function(url,content){if(content===void 0){content=null;}if(!this.sourcesContent.has(url)){this.sourcesContent.set(url,content);}return this;};SourceMapGenerator.prototype.addLine=function(){this.lines.push([]);this.lastCol0=0;return this;};SourceMapGenerator.prototype.addMapping=function(col0,sourceUrl,sourceLine0,sourceCol0){if(!this.currentLine){throw new Error("A line must be added before mappings can be added");}if(sourceUrl!=null&&!this.sourcesContent.has(sourceUrl)){throw new Error("Unknown source file \""+sourceUrl+"\"");}if(col0==null){throw new Error("The column in the generated code must be provided");}if(col0<this.lastCol0){throw new Error("Mapping should be added in output order");}if(sourceUrl&&(sourceLine0==null||sourceCol0==null)){throw new Error("The source location must be provided when a source url is provided");}this.hasMappings=true;this.lastCol0=col0;this.currentLine.push({col0:col0,sourceUrl:sourceUrl,sourceLine0:sourceLine0,sourceCol0:sourceCol0});return this;};Object.defineProperty(SourceMapGenerator.prototype,"currentLine",{get:function get(){return this.lines.slice(-1)[0];},enumerable:true,configurable:true});SourceMapGenerator.prototype.toJSON=function(){var _this=this;if(!this.hasMappings){return null;}var sourcesIndex=new Map();var sources=[];var sourcesContent=[];Array.from(this.sourcesContent.keys()).forEach(function(url,i){sourcesIndex.set(url,i);sources.push(url);sourcesContent.push(_this.sourcesContent.get(url)||null);});var mappings='';var lastCol0=0;var lastSourceIndex=0;var lastSourceLine0=0;var lastSourceCol0=0;this.lines.forEach(function(segments){lastCol0=0;mappings+=segments.map(function(segment){// zero-based starting column of the line in the generated code
var segAsStr=toBase64VLQ(segment.col0-lastCol0);lastCol0=segment.col0;if(segment.sourceUrl!=null){// zero-based index into the “sources” list
segAsStr+=toBase64VLQ(sourcesIndex.get(segment.sourceUrl)-lastSourceIndex);lastSourceIndex=sourcesIndex.get(segment.sourceUrl);// the zero-based starting line in the original source
segAsStr+=toBase64VLQ(segment.sourceLine0-lastSourceLine0);lastSourceLine0=segment.sourceLine0;// the zero-based starting column in the original source
segAsStr+=toBase64VLQ(segment.sourceCol0-lastSourceCol0);lastSourceCol0=segment.sourceCol0;}return segAsStr;}).join(',');mappings+=';';});mappings=mappings.slice(0,-1);return{'file':this.file||'','version':VERSION$1,'sourceRoot':'','sources':sources,'sourcesContent':sourcesContent,'mappings':mappings};};SourceMapGenerator.prototype.toJsComment=function(){return this.hasMappings?'//'+JS_B64_PREFIX+toBase64String(JSON.stringify(this,null,0)):'';};return SourceMapGenerator;}();function toBase64String(value){var b64='';value=utf8Encode(value);for(var i=0;i<value.length;){var i1=value.charCodeAt(i++);var i2=value.charCodeAt(i++);var i3=value.charCodeAt(i++);b64+=toBase64Digit(i1>>2);b64+=toBase64Digit((i1&3)<<4|(isNaN(i2)?0:i2>>4));b64+=isNaN(i2)?'=':toBase64Digit((i2&15)<<2|i3>>6);b64+=isNaN(i2)||isNaN(i3)?'=':toBase64Digit(i3&63);}return b64;}function toBase64VLQ(value){value=value<0?(-value<<1)+1:value<<1;var out='';do{var digit=value&31;value=value>>5;if(value>0){digit=digit|32;}out+=toBase64Digit(digit);}while(value>0);return out;}var B64_DIGITS='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';function toBase64Digit(value){if(value<0||value>=64){throw new Error("Can only encode value in the range [0, 63]");}return B64_DIGITS[value];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _SINGLE_QUOTE_ESCAPE_STRING_RE=/'|\\|\n|\r|\$/g;var _LEGAL_IDENTIFIER_RE=/^[$A-Z_][0-9A-Z_$]*$/i;var _INDENT_WITH='  ';var CATCH_ERROR_VAR$1=variable('error',null,null);var CATCH_STACK_VAR$1=variable('stack',null,null);var _EmittedLine=/** @class */function(){function _EmittedLine(indent){this.indent=indent;this.partsLength=0;this.parts=[];this.srcSpans=[];}return _EmittedLine;}();var EmitterVisitorContext=/** @class */function(){function EmitterVisitorContext(_indent){this._indent=_indent;this._classes=[];this._preambleLineCount=0;this._lines=[new _EmittedLine(_indent)];}EmitterVisitorContext.createRoot=function(){return new EmitterVisitorContext(0);};Object.defineProperty(EmitterVisitorContext.prototype,"_currentLine",{get:function get(){return this._lines[this._lines.length-1];},enumerable:true,configurable:true});EmitterVisitorContext.prototype.println=function(from,lastPart){if(lastPart===void 0){lastPart='';}this.print(from||null,lastPart,true);};EmitterVisitorContext.prototype.lineIsEmpty=function(){return this._currentLine.parts.length===0;};EmitterVisitorContext.prototype.lineLength=function(){return this._currentLine.indent*_INDENT_WITH.length+this._currentLine.partsLength;};EmitterVisitorContext.prototype.print=function(from,part,newLine){if(newLine===void 0){newLine=false;}if(part.length>0){this._currentLine.parts.push(part);this._currentLine.partsLength+=part.length;this._currentLine.srcSpans.push(from&&from.sourceSpan||null);}if(newLine){this._lines.push(new _EmittedLine(this._indent));}};EmitterVisitorContext.prototype.removeEmptyLastLine=function(){if(this.lineIsEmpty()){this._lines.pop();}};EmitterVisitorContext.prototype.incIndent=function(){this._indent++;if(this.lineIsEmpty()){this._currentLine.indent=this._indent;}};EmitterVisitorContext.prototype.decIndent=function(){this._indent--;if(this.lineIsEmpty()){this._currentLine.indent=this._indent;}};EmitterVisitorContext.prototype.pushClass=function(clazz){this._classes.push(clazz);};EmitterVisitorContext.prototype.popClass=function(){return this._classes.pop();};Object.defineProperty(EmitterVisitorContext.prototype,"currentClass",{get:function get(){return this._classes.length>0?this._classes[this._classes.length-1]:null;},enumerable:true,configurable:true});EmitterVisitorContext.prototype.toSource=function(){return this.sourceLines.map(function(l){return l.parts.length>0?_createIndent(l.indent)+l.parts.join(''):'';}).join('\n');};EmitterVisitorContext.prototype.toSourceMapGenerator=function(genFilePath,startsAtLine){if(startsAtLine===void 0){startsAtLine=0;}var map=new SourceMapGenerator(genFilePath);var firstOffsetMapped=false;var mapFirstOffsetIfNeeded=function mapFirstOffsetIfNeeded(){if(!firstOffsetMapped){// Add a single space so that tools won't try to load the file from disk.
// Note: We are using virtual urls like `ng:///`, so we have to
// provide a content here.
map.addSource(genFilePath,' ').addMapping(0,genFilePath,0,0);firstOffsetMapped=true;}};for(var i=0;i<startsAtLine;i++){map.addLine();mapFirstOffsetIfNeeded();}this.sourceLines.forEach(function(line,lineIdx){map.addLine();var spans=line.srcSpans;var parts=line.parts;var col0=line.indent*_INDENT_WITH.length;var spanIdx=0;// skip leading parts without source spans
while(spanIdx<spans.length&&!spans[spanIdx]){col0+=parts[spanIdx].length;spanIdx++;}if(spanIdx<spans.length&&lineIdx===0&&col0===0){firstOffsetMapped=true;}else{mapFirstOffsetIfNeeded();}while(spanIdx<spans.length){var span=spans[spanIdx];var source=span.start.file;var sourceLine=span.start.line;var sourceCol=span.start.col;map.addSource(source.url,source.content).addMapping(col0,source.url,sourceLine,sourceCol);col0+=parts[spanIdx].length;spanIdx++;// assign parts without span or the same span to the previous segment
while(spanIdx<spans.length&&(span===spans[spanIdx]||!spans[spanIdx])){col0+=parts[spanIdx].length;spanIdx++;}}});return map;};EmitterVisitorContext.prototype.setPreambleLineCount=function(count){return this._preambleLineCount=count;};EmitterVisitorContext.prototype.spanOf=function(line,column){var emittedLine=this._lines[line-this._preambleLineCount];if(emittedLine){var columnsLeft=column-_createIndent(emittedLine.indent).length;for(var partIndex=0;partIndex<emittedLine.parts.length;partIndex++){var part=emittedLine.parts[partIndex];if(part.length>columnsLeft){return emittedLine.srcSpans[partIndex];}columnsLeft-=part.length;}}return null;};Object.defineProperty(EmitterVisitorContext.prototype,"sourceLines",{get:function get(){if(this._lines.length&&this._lines[this._lines.length-1].parts.length===0){return this._lines.slice(0,-1);}return this._lines;},enumerable:true,configurable:true});return EmitterVisitorContext;}();var AbstractEmitterVisitor=/** @class */function(){function AbstractEmitterVisitor(_escapeDollarInStrings){this._escapeDollarInStrings=_escapeDollarInStrings;}AbstractEmitterVisitor.prototype.visitExpressionStmt=function(stmt,ctx){stmt.expr.visitExpression(this,ctx);ctx.println(stmt,';');return null;};AbstractEmitterVisitor.prototype.visitReturnStmt=function(stmt,ctx){ctx.print(stmt,"return ");stmt.value.visitExpression(this,ctx);ctx.println(stmt,';');return null;};AbstractEmitterVisitor.prototype.visitIfStmt=function(stmt,ctx){ctx.print(stmt,"if (");stmt.condition.visitExpression(this,ctx);ctx.print(stmt,") {");var hasElseCase=stmt.falseCase!=null&&stmt.falseCase.length>0;if(stmt.trueCase.length<=1&&!hasElseCase){ctx.print(stmt," ");this.visitAllStatements(stmt.trueCase,ctx);ctx.removeEmptyLastLine();ctx.print(stmt," ");}else{ctx.println();ctx.incIndent();this.visitAllStatements(stmt.trueCase,ctx);ctx.decIndent();if(hasElseCase){ctx.println(stmt,"} else {");ctx.incIndent();this.visitAllStatements(stmt.falseCase,ctx);ctx.decIndent();}}ctx.println(stmt,"}");return null;};AbstractEmitterVisitor.prototype.visitThrowStmt=function(stmt,ctx){ctx.print(stmt,"throw ");stmt.error.visitExpression(this,ctx);ctx.println(stmt,";");return null;};AbstractEmitterVisitor.prototype.visitCommentStmt=function(stmt,ctx){if(stmt.multiline){ctx.println(stmt,"/* "+stmt.comment+" */");}else{stmt.comment.split('\n').forEach(function(line){ctx.println(stmt,"// "+line);});}return null;};AbstractEmitterVisitor.prototype.visitJSDocCommentStmt=function(stmt,ctx){ctx.println(stmt,"/*"+stmt.toString()+"*/");return null;};AbstractEmitterVisitor.prototype.visitWriteVarExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}ctx.print(expr,expr.name+" = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitWriteKeyExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,"[");expr.index.visitExpression(this,ctx);ctx.print(expr,"] = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitWritePropExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,"."+expr.name+" = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitInvokeMethodExpr=function(expr,ctx){expr.receiver.visitExpression(this,ctx);var name=expr.name;if(expr.builtin!=null){name=this.getBuiltinMethodName(expr.builtin);if(name==null){// some builtins just mean to skip the call.
return null;}}ctx.print(expr,"."+name+"(");this.visitAllExpressions(expr.args,ctx,",");ctx.print(expr,")");return null;};AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr=function(expr,ctx){expr.fn.visitExpression(this,ctx);ctx.print(expr,"(");this.visitAllExpressions(expr.args,ctx,',');ctx.print(expr,")");return null;};AbstractEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');};AbstractEmitterVisitor.prototype.visitTypeofExpr=function(expr,ctx){ctx.print(expr,'typeof ');expr.expr.visitExpression(this,ctx);};AbstractEmitterVisitor.prototype.visitReadVarExpr=function(ast,ctx){var varName=ast.name;if(ast.builtin!=null){switch(ast.builtin){case BuiltinVar.Super:varName='super';break;case BuiltinVar.This:varName='this';break;case BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$1.name;break;case BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$1.name;break;default:throw new Error("Unknown builtin variable "+ast.builtin);}}ctx.print(ast,varName);return null;};AbstractEmitterVisitor.prototype.visitInstantiateExpr=function(ast,ctx){ctx.print(ast,"new ");ast.classExpr.visitExpression(this,ctx);ctx.print(ast,"(");this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitLiteralExpr=function(ast,ctx){var value=ast.value;if(typeof value==='string'){ctx.print(ast,escapeIdentifier(value,this._escapeDollarInStrings));}else{ctx.print(ast,""+value);}return null;};AbstractEmitterVisitor.prototype.visitConditionalExpr=function(ast,ctx){ctx.print(ast,"(");ast.condition.visitExpression(this,ctx);ctx.print(ast,'? ');ast.trueCase.visitExpression(this,ctx);ctx.print(ast,': ');ast.falseCase.visitExpression(this,ctx);ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitNotExpr=function(ast,ctx){ctx.print(ast,'!');ast.condition.visitExpression(this,ctx);return null;};AbstractEmitterVisitor.prototype.visitAssertNotNullExpr=function(ast,ctx){ast.condition.visitExpression(this,ctx);return null;};AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr=function(ast,ctx){var opStr;switch(ast.operator){case BinaryOperator.Equals:opStr='==';break;case BinaryOperator.Identical:opStr='===';break;case BinaryOperator.NotEquals:opStr='!=';break;case BinaryOperator.NotIdentical:opStr='!==';break;case BinaryOperator.And:opStr='&&';break;case BinaryOperator.BitwiseAnd:opStr='&';break;case BinaryOperator.Or:opStr='||';break;case BinaryOperator.Plus:opStr='+';break;case BinaryOperator.Minus:opStr='-';break;case BinaryOperator.Divide:opStr='/';break;case BinaryOperator.Multiply:opStr='*';break;case BinaryOperator.Modulo:opStr='%';break;case BinaryOperator.Lower:opStr='<';break;case BinaryOperator.LowerEquals:opStr='<=';break;case BinaryOperator.Bigger:opStr='>';break;case BinaryOperator.BiggerEquals:opStr='>=';break;default:throw new Error("Unknown operator "+ast.operator);}if(ast.parens)ctx.print(ast,"(");ast.lhs.visitExpression(this,ctx);ctx.print(ast," "+opStr+" ");ast.rhs.visitExpression(this,ctx);if(ast.parens)ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitReadPropExpr=function(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,".");ctx.print(ast,ast.name);return null;};AbstractEmitterVisitor.prototype.visitReadKeyExpr=function(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,"[");ast.index.visitExpression(this,ctx);ctx.print(ast,"]");return null;};AbstractEmitterVisitor.prototype.visitLiteralArrayExpr=function(ast,ctx){ctx.print(ast,"[");this.visitAllExpressions(ast.entries,ctx,',');ctx.print(ast,"]");return null;};AbstractEmitterVisitor.prototype.visitLiteralMapExpr=function(ast,ctx){var _this=this;ctx.print(ast,"{");this.visitAllObjects(function(entry){ctx.print(ast,escapeIdentifier(entry.key,_this._escapeDollarInStrings,entry.quoted)+":");entry.value.visitExpression(_this,ctx);},ast.entries,ctx,',');ctx.print(ast,"}");return null;};AbstractEmitterVisitor.prototype.visitCommaExpr=function(ast,ctx){ctx.print(ast,'(');this.visitAllExpressions(ast.parts,ctx,',');ctx.print(ast,')');return null;};AbstractEmitterVisitor.prototype.visitAllExpressions=function(expressions,ctx,separator){var _this=this;this.visitAllObjects(function(expr){return expr.visitExpression(_this,ctx);},expressions,ctx,separator);};AbstractEmitterVisitor.prototype.visitAllObjects=function(handler,expressions,ctx,separator){var incrementedIndent=false;for(var i=0;i<expressions.length;i++){if(i>0){if(ctx.lineLength()>80){ctx.print(null,separator,true);if(!incrementedIndent){// continuation are marked with double indent.
ctx.incIndent();ctx.incIndent();incrementedIndent=true;}}else{ctx.print(null,separator,false);}}handler(expressions[i]);}if(incrementedIndent){// continuation are marked with double indent.
ctx.decIndent();ctx.decIndent();}};AbstractEmitterVisitor.prototype.visitAllStatements=function(statements,ctx){var _this=this;statements.forEach(function(stmt){return stmt.visitStatement(_this,ctx);});};return AbstractEmitterVisitor;}();function escapeIdentifier(input,escapeDollar,alwaysQuote){if(alwaysQuote===void 0){alwaysQuote=true;}if(input==null){return null;}var body=input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE,function(){var match=[];for(var _i=0;_i<arguments.length;_i++){match[_i]=arguments[_i];}if(match[0]=='$'){return escapeDollar?'\\$':'$';}else if(match[0]=='\n'){return'\\n';}else if(match[0]=='\r'){return'\\r';}else{return"\\"+match[0];}});var requiresQuotes=alwaysQuote||!_LEGAL_IDENTIFIER_RE.test(body);return requiresQuotes?"'"+body+"'":body;}function _createIndent(count){var res='';for(var i=0;i<count;i++){res+=_INDENT_WITH;}return res;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function debugOutputAstAsTypeScript(ast){var converter=new _TsEmitterVisitor();var ctx=EmitterVisitorContext.createRoot();var asts=Array.isArray(ast)?ast:[ast];asts.forEach(function(ast){if(ast instanceof Statement){ast.visitStatement(converter,ctx);}else if(ast instanceof Expression){ast.visitExpression(converter,ctx);}else if(ast instanceof Type$1){ast.visitType(converter,ctx);}else{throw new Error("Don't know how to print debug info for "+ast);}});return ctx.toSource();}var TypeScriptEmitter=/** @class */function(){function TypeScriptEmitter(){}TypeScriptEmitter.prototype.emitStatementsAndContext=function(genFilePath,stmts,preamble,emitSourceMaps,referenceFilter,importFilter){if(preamble===void 0){preamble='';}if(emitSourceMaps===void 0){emitSourceMaps=true;}var converter=new _TsEmitterVisitor(referenceFilter,importFilter);var ctx=EmitterVisitorContext.createRoot();converter.visitAllStatements(stmts,ctx);var preambleLines=preamble?preamble.split('\n'):[];converter.reexports.forEach(function(reexports,exportedModuleName){var reexportsCode=reexports.map(function(reexport){return reexport.name+" as "+reexport.as;}).join(',');preambleLines.push("export {"+reexportsCode+"} from '"+exportedModuleName+"';");});converter.importsWithPrefixes.forEach(function(prefix,importedModuleName){// Note: can't write the real word for import as it screws up system.js auto detection...
preambleLines.push("imp"+("ort * as "+prefix+" from '"+importedModuleName+"';"));});var sm=emitSourceMaps?ctx.toSourceMapGenerator(genFilePath,preambleLines.length).toJsComment():'';var lines=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(preambleLines,[ctx.toSource(),sm]);if(sm){// always add a newline at the end, as some tools have bugs without it.
lines.push('');}ctx.setPreambleLineCount(preambleLines.length);return{sourceText:lines.join('\n'),context:ctx};};TypeScriptEmitter.prototype.emitStatements=function(genFilePath,stmts,preamble){if(preamble===void 0){preamble='';}return this.emitStatementsAndContext(genFilePath,stmts,preamble).sourceText;};return TypeScriptEmitter;}();var _TsEmitterVisitor=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(_TsEmitterVisitor,_super);function _TsEmitterVisitor(referenceFilter,importFilter){var _this=_super.call(this,false)||this;_this.referenceFilter=referenceFilter;_this.importFilter=importFilter;_this.typeExpression=0;_this.importsWithPrefixes=new Map();_this.reexports=new Map();return _this;}_TsEmitterVisitor.prototype.visitType=function(t,ctx,defaultType){if(defaultType===void 0){defaultType='any';}if(t){this.typeExpression++;t.visitType(this,ctx);this.typeExpression--;}else{ctx.print(null,defaultType);}};_TsEmitterVisitor.prototype.visitLiteralExpr=function(ast,ctx){var value=ast.value;if(value==null&&ast.type!=INFERRED_TYPE){ctx.print(ast,"("+value+" as any)");return null;}return _super.prototype.visitLiteralExpr.call(this,ast,ctx);};// Temporary workaround to support strictNullCheck enabled consumers of ngc emit.
// In SNC mode, [] have the type never[], so we cast here to any[].
// TODO: narrow the cast to a more explicit type, or use a pattern that does not
// start with [].concat. see https://github.com/angular/angular/pull/11846
_TsEmitterVisitor.prototype.visitLiteralArrayExpr=function(ast,ctx){if(ast.entries.length===0){ctx.print(ast,'(');}var result=_super.prototype.visitLiteralArrayExpr.call(this,ast,ctx);if(ast.entries.length===0){ctx.print(ast,' as any[])');}return result;};_TsEmitterVisitor.prototype.visitExternalExpr=function(ast,ctx){this._visitIdentifier(ast.value,ast.typeParams,ctx);return null;};_TsEmitterVisitor.prototype.visitAssertNotNullExpr=function(ast,ctx){var result=_super.prototype.visitAssertNotNullExpr.call(this,ast,ctx);ctx.print(ast,'!');return result;};_TsEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)&&stmt.value instanceof ExternalExpr&&!stmt.type){// check for a reexport
var _a=stmt.value.value,name_1=_a.name,moduleName=_a.moduleName;if(moduleName){var reexports=this.reexports.get(moduleName);if(!reexports){reexports=[];this.reexports.set(moduleName,reexports);}reexports.push({name:name_1,as:stmt.name});return null;}}if(stmt.hasModifier(StmtModifier.Exported)){ctx.print(stmt,"export ");}if(stmt.hasModifier(StmtModifier.Final)){ctx.print(stmt,"const");}else{ctx.print(stmt,"var");}ctx.print(stmt," "+stmt.name);this._printColonType(stmt.type,ctx);if(stmt.value){ctx.print(stmt," = ");stmt.value.visitExpression(this,ctx);}ctx.println(stmt,";");return null;};_TsEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');};_TsEmitterVisitor.prototype.visitCastExpr=function(ast,ctx){ctx.print(ast,"(<");ast.type.visitType(this,ctx);ctx.print(ast,">");ast.value.visitExpression(this,ctx);ctx.print(ast,")");return null;};_TsEmitterVisitor.prototype.visitInstantiateExpr=function(ast,ctx){ctx.print(ast,"new ");this.typeExpression++;ast.classExpr.visitExpression(this,ctx);this.typeExpression--;ctx.print(ast,"(");this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,")");return null;};_TsEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){var _this=this;ctx.pushClass(stmt);if(stmt.hasModifier(StmtModifier.Exported)){ctx.print(stmt,"export ");}ctx.print(stmt,"class "+stmt.name);if(stmt.parent!=null){ctx.print(stmt," extends ");this.typeExpression++;stmt.parent.visitExpression(this,ctx);this.typeExpression--;}ctx.println(stmt," {");ctx.incIndent();stmt.fields.forEach(function(field){return _this._visitClassField(field,ctx);});if(stmt.constructorMethod!=null){this._visitClassConstructor(stmt,ctx);}stmt.getters.forEach(function(getter){return _this._visitClassGetter(getter,ctx);});stmt.methods.forEach(function(method){return _this._visitClassMethod(method,ctx);});ctx.decIndent();ctx.println(stmt,"}");ctx.popClass();return null;};_TsEmitterVisitor.prototype._visitClassField=function(field,ctx){if(field.hasModifier(StmtModifier.Private)){// comment out as a workaround for #10967
ctx.print(null,"/*private*/ ");}if(field.hasModifier(StmtModifier.Static)){ctx.print(null,'static ');}ctx.print(null,field.name);this._printColonType(field.type,ctx);if(field.initializer){ctx.print(null,' = ');field.initializer.visitExpression(this,ctx);}ctx.println(null,";");};_TsEmitterVisitor.prototype._visitClassGetter=function(getter,ctx){if(getter.hasModifier(StmtModifier.Private)){ctx.print(null,"private ");}ctx.print(null,"get "+getter.name+"()");this._printColonType(getter.type,ctx);ctx.println(null," {");ctx.incIndent();this.visitAllStatements(getter.body,ctx);ctx.decIndent();ctx.println(null,"}");};_TsEmitterVisitor.prototype._visitClassConstructor=function(stmt,ctx){ctx.print(stmt,"constructor(");this._visitParams(stmt.constructorMethod.params,ctx);ctx.println(stmt,") {");ctx.incIndent();this.visitAllStatements(stmt.constructorMethod.body,ctx);ctx.decIndent();ctx.println(stmt,"}");};_TsEmitterVisitor.prototype._visitClassMethod=function(method,ctx){if(method.hasModifier(StmtModifier.Private)){ctx.print(null,"private ");}ctx.print(null,method.name+"(");this._visitParams(method.params,ctx);ctx.print(null,")");this._printColonType(method.type,ctx,'void');ctx.println(null," {");ctx.incIndent();this.visitAllStatements(method.body,ctx);ctx.decIndent();ctx.println(null,"}");};_TsEmitterVisitor.prototype.visitFunctionExpr=function(ast,ctx){if(ast.name){ctx.print(ast,'function ');ctx.print(ast,ast.name);}ctx.print(ast,"(");this._visitParams(ast.params,ctx);ctx.print(ast,")");this._printColonType(ast.type,ctx,'void');if(!ast.name){ctx.print(ast," => ");}ctx.println(ast,'{');ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,"}");return null;};_TsEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){ctx.print(stmt,"export ");}ctx.print(stmt,"function "+stmt.name+"(");this._visitParams(stmt.params,ctx);ctx.print(stmt,")");this._printColonType(stmt.type,ctx,'void');ctx.println(stmt," {");ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};_TsEmitterVisitor.prototype.visitTryCatchStmt=function(stmt,ctx){ctx.println(stmt,"try {");ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,"} catch ("+CATCH_ERROR_VAR$1.name+") {");ctx.incIndent();var catchStmts=[CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack',null)).toDeclStmt(null,[StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};_TsEmitterVisitor.prototype.visitBuiltinType=function(type,ctx){var typeStr;switch(type.name){case BuiltinTypeName.Bool:typeStr='boolean';break;case BuiltinTypeName.Dynamic:typeStr='any';break;case BuiltinTypeName.Function:typeStr='Function';break;case BuiltinTypeName.Number:typeStr='number';break;case BuiltinTypeName.Int:typeStr='number';break;case BuiltinTypeName.String:typeStr='string';break;case BuiltinTypeName.None:typeStr='never';break;default:throw new Error("Unsupported builtin type "+type.name);}ctx.print(null,typeStr);return null;};_TsEmitterVisitor.prototype.visitExpressionType=function(ast,ctx){var _this=this;ast.value.visitExpression(this,ctx);if(ast.typeParams!==null){ctx.print(null,'<');this.visitAllObjects(function(type){return _this.visitType(type,ctx);},ast.typeParams,ctx,',');ctx.print(null,'>');}return null;};_TsEmitterVisitor.prototype.visitArrayType=function(type,ctx){this.visitType(type.of,ctx);ctx.print(null,"[]");return null;};_TsEmitterVisitor.prototype.visitMapType=function(type,ctx){ctx.print(null,"{[key: string]:");this.visitType(type.valueType,ctx);ctx.print(null,"}");return null;};_TsEmitterVisitor.prototype.getBuiltinMethodName=function(method){var name;switch(method){case BuiltinMethod.ConcatArray:name='concat';break;case BuiltinMethod.SubscribeObservable:name='subscribe';break;case BuiltinMethod.Bind:name='bind';break;default:throw new Error("Unknown builtin method: "+method);}return name;};_TsEmitterVisitor.prototype._visitParams=function(params,ctx){var _this=this;this.visitAllObjects(function(param){ctx.print(null,param.name);_this._printColonType(param.type,ctx);},params,ctx,',');};_TsEmitterVisitor.prototype._visitIdentifier=function(value,typeParams,ctx){var _this=this;var name=value.name,moduleName=value.moduleName;if(this.referenceFilter&&this.referenceFilter(value)){ctx.print(null,'(null as any)');return;}if(moduleName&&(!this.importFilter||!this.importFilter(value))){var prefix=this.importsWithPrefixes.get(moduleName);if(prefix==null){prefix="i"+this.importsWithPrefixes.size;this.importsWithPrefixes.set(moduleName,prefix);}ctx.print(null,prefix+".");}ctx.print(null,name);if(this.typeExpression>0){// If we are in a type expression that refers to a generic type then supply
// the required type parameters. If there were not enough type parameters
// supplied, supply any as the type. Outside a type expression the reference
// should not supply type parameters and be treated as a simple value reference
// to the constructor function itself.
var suppliedParameters=typeParams||[];if(suppliedParameters.length>0){ctx.print(null,"<");this.visitAllObjects(function(type){return type.visitType(_this,ctx);},typeParams,ctx,',');ctx.print(null,">");}}};_TsEmitterVisitor.prototype._printColonType=function(type,ctx,defaultType){if(type!==INFERRED_TYPE){ctx.print(null,':');this.visitType(type,ctx,defaultType);}};return _TsEmitterVisitor;}(AbstractEmitterVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Resolve a `Type` for {@link Pipe}.
 *
 * This interface can be overridden by the application developer to create custom behavior.
 *
 * See {@link Compiler}
 */var PipeResolver=/** @class */function(){function PipeResolver(_reflector){this._reflector=_reflector;}PipeResolver.prototype.isPipe=function(type){var typeMetadata=this._reflector.annotations(resolveForwardRef(type));return typeMetadata&&typeMetadata.some(createPipe.isTypeOf);};/**
     * Return {@link Pipe} for a given `Type`.
     */PipeResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var metas=this._reflector.annotations(resolveForwardRef(type));if(metas){var annotation=findLast(metas,createPipe.isTypeOf);if(annotation){return annotation;}}if(throwIfNotFound){throw new Error("No Pipe decorator found on "+stringify(type));}return null;};return PipeResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!
//                               Reach out to mprobst for details.
//
// =================================================================================================
/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */var _SECURITY_SCHEMA;function SECURITY_SCHEMA(){if(!_SECURITY_SCHEMA){_SECURITY_SCHEMA={};// Case is insignificant below, all element and attribute names are lower-cased for lookup.
registerContext(SecurityContext.HTML,['iframe|srcdoc','*|innerHTML','*|outerHTML']);registerContext(SecurityContext.STYLE,['*|style']);// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.
registerContext(SecurityContext.URL,['*|formAction','area|href','area|ping','audio|src','a|href','a|ping','blockquote|cite','body|background','del|cite','form|action','img|src','img|srcset','input|src','ins|cite','q|cite','source|src','source|srcset','track|src','video|poster','video|src']);registerContext(SecurityContext.RESOURCE_URL,['applet|code','applet|codebase','base|href','embed|src','frame|src','head|profile','html|manifest','iframe|src','link|href','media|src','object|codebase','object|data','script|src']);}return _SECURITY_SCHEMA;}function registerContext(ctx,specs){var e_1,_a;try{for(var specs_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(specs),specs_1_1=specs_1.next();!specs_1_1.done;specs_1_1=specs_1.next()){var spec=specs_1_1.value;_SECURITY_SCHEMA[spec.toLowerCase()]=ctx;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(specs_1_1&&!specs_1_1.done&&(_a=specs_1.return))_a.call(specs_1);}finally{if(e_1)throw e_1.error;}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ElementSchemaRegistry=/** @class */function(){function ElementSchemaRegistry(){}return ElementSchemaRegistry;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var BOOLEAN='boolean';var NUMBER='number';var STRING='string';var OBJECT='object';/**
 * This array represents the DOM schema. It encodes inheritance, properties, and events.
 *
 * ## Overview
 *
 * Each line represents one kind of element. The `element_inheritance` and properties are joined
 * using `element_inheritance|properties` syntax.
 *
 * ## Element Inheritance
 *
 * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.
 * Here the individual elements are separated by `,` (commas). Every element in the list
 * has identical properties.
 *
 * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is
 * specified then `""` (blank) element is assumed.
 *
 * NOTE: The blank element inherits from root `[Element]` element, the super element of all
 * elements.
 *
 * NOTE an element prefix such as `:svg:` has no special meaning to the schema.
 *
 * ## Properties
 *
 * Each element has a set of properties separated by `,` (commas). Each property can be prefixed
 * by a special character designating its type:
 *
 * - (no prefix): property is a string.
 * - `*`: property represents an event.
 * - `!`: property is a boolean.
 * - `#`: property is a number.
 * - `%`: property is an object.
 *
 * ## Query
 *
 * The class creates an internal squas representation which allows to easily answer the query of
 * if a given property exist on a given element.
 *
 * NOTE: We don't yet support querying for types or events.
 * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,
 *       see dom_element_schema_registry_spec.ts
 */ // =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!
//
// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in
// dom_security_schema.ts. Reach out to mprobst & rjamet for details.
//
// =================================================================================================
var SCHEMA=['[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot'+/* added manually to avoid breaking changes */',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored','[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate','abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate','media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',':svg:graphics^:svg:|',':svg:animation^:svg:|*begin,*end,*repeat',':svg:geometry^:svg:|',':svg:componentTransferFunction^:svg:|',':svg:gradient^:svg:|',':svg:textContent^:svg:graphics|',':svg:textPositioning^:svg:textContent|','a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username','area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username','audio^media|','br^[HTMLElement]|clear','base^[HTMLElement]|href,target','body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink','button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value','canvas^[HTMLElement]|#height,#width','content^[HTMLElement]|select','dl^[HTMLElement]|!compact','datalist^[HTMLElement]|','details^[HTMLElement]|!open','dialog^[HTMLElement]|!open,returnValue','dir^[HTMLElement]|!compact','div^[HTMLElement]|align','embed^[HTMLElement]|align,height,name,src,type,width','fieldset^[HTMLElement]|!disabled,name','font^[HTMLElement]|color,face,size','form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target','frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src','frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows','hr^[HTMLElement]|align,color,!noShade,size,width','head^[HTMLElement]|','h1,h2,h3,h4,h5,h6^[HTMLElement]|align','html^[HTMLElement]|version','iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width','img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width','input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width','li^[HTMLElement]|type,#value','label^[HTMLElement]|htmlFor','legend^[HTMLElement]|align','link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type','map^[HTMLElement]|name','marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width','menu^[HTMLElement]|!compact','meta^[HTMLElement]|content,httpEquiv,name,scheme','meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value','ins,del^[HTMLElement]|cite,dateTime','ol^[HTMLElement]|!compact,!reversed,#start,type','object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width','optgroup^[HTMLElement]|!disabled,label','option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value','output^[HTMLElement]|defaultValue,%htmlFor,name,value','p^[HTMLElement]|align','param^[HTMLElement]|name,type,value,valueType','picture^[HTMLElement]|','pre^[HTMLElement]|#width','progress^[HTMLElement]|#max,#value','q,blockquote,cite^[HTMLElement]|','script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type','select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value','shadow^[HTMLElement]|','slot^[HTMLElement]|name','source^[HTMLElement]|media,sizes,src,srcset,type','span^[HTMLElement]|','style^[HTMLElement]|!disabled,media,type','caption^[HTMLElement]|align','th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width','col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width','table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width','tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign','tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign','template^[HTMLElement]|','textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap','title^[HTMLElement]|text','track^[HTMLElement]|!default,kind,label,src,srclang','ul^[HTMLElement]|!compact,type','unknown^[HTMLElement]|','video^media|#height,poster,#width',':svg:a^:svg:graphics|',':svg:animate^:svg:animation|',':svg:animateMotion^:svg:animation|',':svg:animateTransform^:svg:animation|',':svg:circle^:svg:geometry|',':svg:clipPath^:svg:graphics|',':svg:defs^:svg:graphics|',':svg:desc^:svg:|',':svg:discard^:svg:|',':svg:ellipse^:svg:geometry|',':svg:feBlend^:svg:|',':svg:feColorMatrix^:svg:|',':svg:feComponentTransfer^:svg:|',':svg:feComposite^:svg:|',':svg:feConvolveMatrix^:svg:|',':svg:feDiffuseLighting^:svg:|',':svg:feDisplacementMap^:svg:|',':svg:feDistantLight^:svg:|',':svg:feDropShadow^:svg:|',':svg:feFlood^:svg:|',':svg:feFuncA^:svg:componentTransferFunction|',':svg:feFuncB^:svg:componentTransferFunction|',':svg:feFuncG^:svg:componentTransferFunction|',':svg:feFuncR^:svg:componentTransferFunction|',':svg:feGaussianBlur^:svg:|',':svg:feImage^:svg:|',':svg:feMerge^:svg:|',':svg:feMergeNode^:svg:|',':svg:feMorphology^:svg:|',':svg:feOffset^:svg:|',':svg:fePointLight^:svg:|',':svg:feSpecularLighting^:svg:|',':svg:feSpotLight^:svg:|',':svg:feTile^:svg:|',':svg:feTurbulence^:svg:|',':svg:filter^:svg:|',':svg:foreignObject^:svg:graphics|',':svg:g^:svg:graphics|',':svg:image^:svg:graphics|',':svg:line^:svg:geometry|',':svg:linearGradient^:svg:gradient|',':svg:mpath^:svg:|',':svg:marker^:svg:|',':svg:mask^:svg:|',':svg:metadata^:svg:|',':svg:path^:svg:geometry|',':svg:pattern^:svg:|',':svg:polygon^:svg:geometry|',':svg:polyline^:svg:geometry|',':svg:radialGradient^:svg:gradient|',':svg:rect^:svg:geometry|',':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',':svg:script^:svg:|type',':svg:set^:svg:animation|',':svg:stop^:svg:|',':svg:style^:svg:|!disabled,media,title,type',':svg:switch^:svg:graphics|',':svg:symbol^:svg:|',':svg:tspan^:svg:textPositioning|',':svg:text^:svg:textPositioning|',':svg:textPath^:svg:textContent|',':svg:title^:svg:|',':svg:use^:svg:graphics|',':svg:view^:svg:|#zoomAndPan','data^[HTMLElement]|value','keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name','menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default','summary^[HTMLElement]|','time^[HTMLElement]|dateTime',':svg:cursor^:svg:|'];var _ATTR_TO_PROP={'class':'className','for':'htmlFor','formaction':'formAction','innerHtml':'innerHTML','readonly':'readOnly','tabindex':'tabIndex'};var DomElementSchemaRegistry=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DomElementSchemaRegistry,_super);function DomElementSchemaRegistry(){var _this=_super.call(this)||this;_this._schema={};SCHEMA.forEach(function(encodedType){var type={};var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(encodedType.split('|'),2),strType=_a[0],strProperties=_a[1];var properties=strProperties.split(',');var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(strType.split('^'),2),typeNames=_b[0],superName=_b[1];typeNames.split(',').forEach(function(tag){return _this._schema[tag.toLowerCase()]=type;});var superType=superName&&_this._schema[superName.toLowerCase()];if(superType){Object.keys(superType).forEach(function(prop){type[prop]=superType[prop];});}properties.forEach(function(property){if(property.length>0){switch(property[0]){case'*':// We don't yet support events.
// If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events
// will
// almost certainly introduce bad XSS vulnerabilities.
// type[property.substring(1)] = EVENT;
break;case'!':type[property.substring(1)]=BOOLEAN;break;case'#':type[property.substring(1)]=NUMBER;break;case'%':type[property.substring(1)]=OBJECT;break;default:type[property]=STRING;}}});});return _this;}DomElementSchemaRegistry.prototype.hasProperty=function(tagName,propName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===NO_ERRORS_SCHEMA.name;})){return true;}if(tagName.indexOf('-')>-1){if(isNgContainer(tagName)||isNgContent(tagName)){return false;}if(schemaMetas.some(function(schema){return schema.name===CUSTOM_ELEMENTS_SCHEMA.name;})){// Can't tell now as we don't know which properties a custom element will get
// once it is instantiated
return true;}}var elementProperties=this._schema[tagName.toLowerCase()]||this._schema['unknown'];return!!elementProperties[propName];};DomElementSchemaRegistry.prototype.hasElement=function(tagName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===NO_ERRORS_SCHEMA.name;})){return true;}if(tagName.indexOf('-')>-1){if(isNgContainer(tagName)||isNgContent(tagName)){return true;}if(schemaMetas.some(function(schema){return schema.name===CUSTOM_ELEMENTS_SCHEMA.name;})){// Allow any custom elements
return true;}}return!!this._schema[tagName.toLowerCase()];};/**
     * securityContext returns the security context for the given property on the given DOM tag.
     *
     * Tag and property name are statically known and cannot change at runtime, i.e. it is not
     * possible to bind a value into a changing attribute or tag name.
     *
     * The filtering is white list based. All attributes in the schema above are assumed to have the
     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known
     * attack vectors are assigned their appropriate context.
     */DomElementSchemaRegistry.prototype.securityContext=function(tagName,propName,isAttribute){if(isAttribute){// NB: For security purposes, use the mapped property name, not the attribute name.
propName=this.getMappedPropName(propName);}// Make sure comparisons are case insensitive, so that case differences between attribute and
// property names do not have a security impact.
tagName=tagName.toLowerCase();propName=propName.toLowerCase();var ctx=SECURITY_SCHEMA()[tagName+'|'+propName];if(ctx){return ctx;}ctx=SECURITY_SCHEMA()['*|'+propName];return ctx?ctx:SecurityContext.NONE;};DomElementSchemaRegistry.prototype.getMappedPropName=function(propName){return _ATTR_TO_PROP[propName]||propName;};DomElementSchemaRegistry.prototype.getDefaultComponentElementName=function(){return'ng-component';};DomElementSchemaRegistry.prototype.validateProperty=function(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event property '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...")+("\nIf '"+name+"' is a directive input, make sure the directive is imported by the")+" current module.";return{error:true,msg:msg};}else{return{error:false};}};DomElementSchemaRegistry.prototype.validateAttribute=function(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event attribute '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...");return{error:true,msg:msg};}else{return{error:false};}};DomElementSchemaRegistry.prototype.allKnownElementNames=function(){return Object.keys(this._schema);};DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty=function(propName){return dashCaseToCamelCase(propName);};DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue=function(camelCaseProp,userProvidedProp,val){var unit='';var strVal=val.toString().trim();var errorMsg=null;if(_isPixelDimensionStyle(camelCaseProp)&&val!==0&&val!=='0'){if(typeof val==='number'){unit='px';}else{var valAndSuffixMatch=val.match(/^[+-]?[\d\.]+([a-z]*)$/);if(valAndSuffixMatch&&valAndSuffixMatch[1].length==0){errorMsg="Please provide a CSS unit value for "+userProvidedProp+":"+val;}}}return{error:errorMsg,value:strVal+unit};};return DomElementSchemaRegistry;}(ElementSchemaRegistry);function _isPixelDimensionStyle(prop){switch(prop){case'width':case'height':case'minWidth':case'minHeight':case'maxWidth':case'maxHeight':case'left':case'top':case'bottom':case'right':case'fontSize':case'outlineWidth':case'outlineOffset':case'paddingTop':case'paddingLeft':case'paddingBottom':case'paddingRight':case'marginTop':case'marginLeft':case'marginBottom':case'marginRight':case'borderRadius':case'borderWidth':case'borderTopWidth':case'borderLeftWidth':case'borderRightWidth':case'borderBottomWidth':case'textIndent':return true;default:return false;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This file is a port of shadowCSS from webcomponents.js to TypeScript.
 *
 * Please make sure to keep to edits in sync with the source file.
 *
 * Source:
 * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js
 *
 * The original file level comment is reproduced below
 */ /*
  This is a limited shim for ShadowDOM css styling.
  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles

  The intention here is to support only the styling features which can be
  relatively simply implemented. The goal is to allow users to avoid the
  most obvious pitfalls and do so without compromising performance significantly.
  For ShadowDOM styling that's not covered here, a set of best practices
  can be provided that should allow users to accomplish more complex styling.

  The following is a list of specific ShadowDOM styling features and a brief
  discussion of the approach used to shim.

  Shimmed features:

  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host
  element using the :host rule. To shim this feature, the :host styles are
  reformatted and prefixed with a given scope name and promoted to a
  document level stylesheet.
  For example, given a scope name of .foo, a rule like this:

    :host {
        background: red;
      }
    }

  becomes:

    .foo {
      background: red;
    }

  * encapsulation: Styles defined within ShadowDOM, apply only to
  dom inside the ShadowDOM. Polymer uses one of two techniques to implement
  this feature.

  By default, rules are prefixed with the host element tag name
  as a descendant selector. This ensures styling does not leak out of the 'top'
  of the element's ShadowDOM. For example,

  div {
      font-weight: bold;
    }

  becomes:

  x-foo div {
      font-weight: bold;
    }

  becomes:


  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then
  selectors are scoped by adding an attribute selector suffix to each
  simple selector that contains the host element tag name. Each element
  in the element's ShadowDOM template is also given the scope attribute.
  Thus, these rules match only elements that have the scope attribute.
  For example, given a scope name of x-foo, a rule like this:

    div {
      font-weight: bold;
    }

  becomes:

    div[x-foo] {
      font-weight: bold;
    }

  Note that elements that are dynamically added to a scope must have the scope
  selector added to them manually.

  * upper/lower bound encapsulation: Styles which are defined outside a
  shadowRoot should not cross the ShadowDOM boundary and should not apply
  inside a shadowRoot.

  This styling behavior is not emulated. Some possible ways to do this that
  were rejected due to complexity and/or performance concerns include: (1) reset
  every possible property for every possible selector for a given scope name;
  (2) re-implement css in javascript.

  As an alternative, users should make sure to use selectors
  specific to the scope in which they are working.

  * ::distributed: This behavior is not emulated. It's often not necessary
  to style the contents of a specific insertion point and instead, descendants
  of the host element can be styled selectively. Users can also create an
  extra node around an insertion point and style that node's contents
  via descendent selectors. For example, with a shadowRoot like this:

    <style>
      ::content(div) {
        background: red;
      }
    </style>
    <content></content>

  could become:

    <style>
      / *@polyfill .content-container div * /
      ::content(div) {
        background: red;
      }
    </style>
    <div class="content-container">
      <content></content>
    </div>

  Note the use of @polyfill in the comment above a ShadowDOM specific style
  declaration. This is a directive to the styling shim to use the selector
  in comments in lieu of the next selector when running under polyfill.
*/var ShadowCss=/** @class */function(){function ShadowCss(){this.strictStyling=true;}/*
    * Shim some cssText with the given selector. Returns cssText that can
    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).
    *
    * When strictStyling is true:
    * - selector is the attribute added to all elements inside the host,
    * - hostSelector is the attribute added to the host itself.
    */ShadowCss.prototype.shimCssText=function(cssText,selector,hostSelector){if(hostSelector===void 0){hostSelector='';}var commentsWithHash=extractCommentsWithHash(cssText);cssText=stripComments(cssText);cssText=this._insertDirectives(cssText);var scopedCssText=this._scopeCssText(cssText,selector,hostSelector);return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([scopedCssText],commentsWithHash).join('\n');};ShadowCss.prototype._insertDirectives=function(cssText){cssText=this._insertPolyfillDirectivesInCssText(cssText);return this._insertPolyfillRulesInCssText(cssText);};/*
     * Process styles to convert native ShadowDOM rules that will trip
     * up the css parser; we rely on decorating the stylesheet with inert rules.
     *
     * For example, we convert this rule:
     *
     * polyfill-next-selector { content: ':host menu-item'; }
     * ::content menu-item {
     *
     * to this:
     *
     * scopeName menu-item {
     *
    **/ShadowCss.prototype._insertPolyfillDirectivesInCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentNextSelectorRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return m[2]+'{';});};/*
     * Process styles to add rules which will only apply under the polyfill
     *
     * For example, we convert this rule:
     *
     * polyfill-rule {
     *   content: ':host menu-item';
     * ...
     * }
     *
     * to this:
     *
     * scopeName menu-item {...}
     *
    **/ShadowCss.prototype._insertPolyfillRulesInCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentRuleRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var rule=m[0].replace(m[1],'').replace(m[2],'');return m[4]+rule;});};/* Ensure styles are scoped. Pseudo-scoping takes a rule like:
     *
     *  .foo {... }
     *
     *  and converts this to
     *
     *  scopeName .foo { ... }
    */ShadowCss.prototype._scopeCssText=function(cssText,scopeSelector,hostSelector){var unscopedRules=this._extractUnscopedRulesFromCssText(cssText);// replace :host and :host-context -shadowcsshost and -shadowcsshost respectively
cssText=this._insertPolyfillHostInCssText(cssText);cssText=this._convertColonHost(cssText);cssText=this._convertColonHostContext(cssText);cssText=this._convertShadowDOMSelectors(cssText);if(scopeSelector){cssText=this._scopeSelectors(cssText,scopeSelector,hostSelector);}cssText=cssText+'\n'+unscopedRules;return cssText.trim();};/*
     * Process styles to add rules which will only apply under the polyfill
     * and do not process via CSSOM. (CSSOM is destructive to rules on rare
     * occasions, e.g. -webkit-calc on Safari.)
     * For example, we convert this rule:
     *
     * @polyfill-unscoped-rule {
     *   content: 'menu-item';
     * ... }
     *
     * to this:
     *
     * menu-item {...}
     *
    **/ShadowCss.prototype._extractUnscopedRulesFromCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
var r='';var m;_cssContentUnscopedRuleRe.lastIndex=0;while((m=_cssContentUnscopedRuleRe.exec(cssText))!==null){var rule=m[0].replace(m[2],'').replace(m[1],m[4]);r+=rule+'\n\n';}return r;};/*
     * convert a rule like :host(.foo) > .bar { }
     *
     * to
     *
     * .foo<scopeName> > .bar
    */ShadowCss.prototype._convertColonHost=function(cssText){return this._convertColonRule(cssText,_cssColonHostRe,this._colonHostPartReplacer);};/*
     * convert a rule like :host-context(.foo) > .bar { }
     *
     * to
     *
     * .foo<scopeName> > .bar, .foo scopeName > .bar { }
     *
     * and
     *
     * :host-context(.foo:host) .bar { ... }
     *
     * to
     *
     * .foo<scopeName> .bar { ... }
    */ShadowCss.prototype._convertColonHostContext=function(cssText){return this._convertColonRule(cssText,_cssColonHostContextRe,this._colonHostContextPartReplacer);};ShadowCss.prototype._convertColonRule=function(cssText,regExp,partReplacer){// m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule
return cssText.replace(regExp,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}if(m[2]){var parts=m[2].split(',');var r=[];for(var i=0;i<parts.length;i++){var p=parts[i].trim();if(!p)break;r.push(partReplacer(_polyfillHostNoCombinator,p,m[3]));}return r.join(',');}else{return _polyfillHostNoCombinator+m[3];}});};ShadowCss.prototype._colonHostContextPartReplacer=function(host,part,suffix){if(part.indexOf(_polyfillHost)>-1){return this._colonHostPartReplacer(host,part,suffix);}else{return host+part+suffix+', '+part+' '+host+suffix;}};ShadowCss.prototype._colonHostPartReplacer=function(host,part,suffix){return host+part.replace(_polyfillHost,'')+suffix;};/*
     * Convert combinators like ::shadow and pseudo-elements like ::content
     * by replacing with space.
    */ShadowCss.prototype._convertShadowDOMSelectors=function(cssText){return _shadowDOMSelectorsRe.reduce(function(result,pattern){return result.replace(pattern,' ');},cssText);};// change a selector like 'div' to 'name div'
ShadowCss.prototype._scopeSelectors=function(cssText,scopeSelector,hostSelector){var _this=this;return processRules(cssText,function(rule){var selector=rule.selector;var content=rule.content;if(rule.selector[0]!='@'){selector=_this._scopeSelector(rule.selector,scopeSelector,hostSelector,_this.strictStyling);}else if(rule.selector.startsWith('@media')||rule.selector.startsWith('@supports')||rule.selector.startsWith('@page')||rule.selector.startsWith('@document')){content=_this._scopeSelectors(rule.content,scopeSelector,hostSelector);}return new CssRule(selector,content);});};ShadowCss.prototype._scopeSelector=function(selector,scopeSelector,hostSelector,strict){var _this=this;return selector.split(',').map(function(part){return part.trim().split(_shadowDeepSelectors);}).map(function(deepParts){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(deepParts),shallowPart=_a[0],otherParts=_a.slice(1);var applyScope=function applyScope(shallowPart){if(_this._selectorNeedsScoping(shallowPart,scopeSelector)){return strict?_this._applyStrictSelectorScope(shallowPart,scopeSelector,hostSelector):_this._applySelectorScope(shallowPart,scopeSelector,hostSelector);}else{return shallowPart;}};return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([applyScope(shallowPart)],otherParts).join(' ');}).join(', ');};ShadowCss.prototype._selectorNeedsScoping=function(selector,scopeSelector){var re=this._makeScopeMatcher(scopeSelector);return!re.test(selector);};ShadowCss.prototype._makeScopeMatcher=function(scopeSelector){var lre=/\[/g;var rre=/\]/g;scopeSelector=scopeSelector.replace(lre,'\\[').replace(rre,'\\]');return new RegExp('^('+scopeSelector+')'+_selectorReSuffix,'m');};ShadowCss.prototype._applySelectorScope=function(selector,scopeSelector,hostSelector){// Difference from webcomponents.js: scopeSelector could not be an array
return this._applySimpleSelectorScope(selector,scopeSelector,hostSelector);};// scope via name and [is=name]
ShadowCss.prototype._applySimpleSelectorScope=function(selector,scopeSelector,hostSelector){// In Android browser, the lastIndex is not reset when the regex is used in String.replace()
_polyfillHostRe.lastIndex=0;if(_polyfillHostRe.test(selector)){var replaceBy_1=this.strictStyling?"["+hostSelector+"]":scopeSelector;return selector.replace(_polyfillHostNoCombinatorRe,function(hnc,selector){return selector.replace(/([^:]*)(:*)(.*)/,function(_,before,colon,after){return before+replaceBy_1+colon+after;});}).replace(_polyfillHostRe,replaceBy_1+' ');}return scopeSelector+' '+selector;};// return a selector with [name] suffix on each simple selector
// e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */
ShadowCss.prototype._applyStrictSelectorScope=function(selector,scopeSelector,hostSelector){var _this=this;var isRe=/\[is=([^\]]*)\]/g;scopeSelector=scopeSelector.replace(isRe,function(_){var parts=[];for(var _i=1;_i<arguments.length;_i++){parts[_i-1]=arguments[_i];}return parts[0];});var attrName='['+scopeSelector+']';var _scopeSelectorPart=function _scopeSelectorPart(p){var scopedP=p.trim();if(!scopedP){return'';}if(p.indexOf(_polyfillHostNoCombinator)>-1){scopedP=_this._applySimpleSelectorScope(p,scopeSelector,hostSelector);}else{// remove :host since it should be unnecessary
var t=p.replace(_polyfillHostRe,'');if(t.length>0){var matches=t.match(/([^:]*)(:*)(.*)/);if(matches){scopedP=matches[1]+attrName+matches[2]+matches[3];}}}return scopedP;};var safeContent=new SafeSelector(selector);selector=safeContent.content();var scopedSelector='';var startIndex=0;var res;var sep=/( |>|\+|~(?!=))\s*/g;// If a selector appears before :host it should not be shimmed as it
// matches on ancestor elements and not on elements in the host's shadow
// `:host-context(div)` is transformed to
// `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`
// the `div` is not part of the component in the 2nd selectors and should not be scoped.
// Historically `component-tag:host` was matching the component so we also want to preserve
// this behavior to avoid breaking legacy apps (it should not match).
// The behavior should be:
// - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)
// - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a
//   `:host-context(tag)`)
var hasHost=selector.indexOf(_polyfillHostNoCombinator)>-1;// Only scope parts after the first `-shadowcsshost-no-combinator` when it is present
var shouldScope=!hasHost;while((res=sep.exec(selector))!==null){var separator=res[1];var part_1=selector.slice(startIndex,res.index).trim();shouldScope=shouldScope||part_1.indexOf(_polyfillHostNoCombinator)>-1;var scopedPart=shouldScope?_scopeSelectorPart(part_1):part_1;scopedSelector+=scopedPart+" "+separator+" ";startIndex=sep.lastIndex;}var part=selector.substring(startIndex);shouldScope=shouldScope||part.indexOf(_polyfillHostNoCombinator)>-1;scopedSelector+=shouldScope?_scopeSelectorPart(part):part;// replace the placeholders with their original values
return safeContent.restore(scopedSelector);};ShadowCss.prototype._insertPolyfillHostInCssText=function(selector){return selector.replace(_colonHostContextRe,_polyfillHostContext).replace(_colonHostRe,_polyfillHost);};return ShadowCss;}();var SafeSelector=/** @class */function(){function SafeSelector(selector){var _this=this;this.placeholders=[];this.index=0;// Replaces attribute selectors with placeholders.
// The WS in [attr="va lue"] would otherwise be interpreted as a selector separator.
selector=selector.replace(/(\[[^\]]*\])/g,function(_,keep){var replaceBy="__ph-"+_this.index+"__";_this.placeholders.push(keep);_this.index++;return replaceBy;});// Replaces the expression in `:nth-child(2n + 1)` with a placeholder.
// WS and "+" would otherwise be interpreted as selector separators.
this._content=selector.replace(/(:nth-[-\w]+)(\([^)]+\))/g,function(_,pseudo,exp){var replaceBy="__ph-"+_this.index+"__";_this.placeholders.push(exp);_this.index++;return pseudo+replaceBy;});}SafeSelector.prototype.restore=function(content){var _this=this;return content.replace(/__ph-(\d+)__/g,function(ph,index){return _this.placeholders[+index];});};SafeSelector.prototype.content=function(){return this._content;};return SafeSelector;}();var _cssContentNextSelectorRe=/polyfill-next-selector[^}]*content:[\s]*?(['"])(.*?)\1[;\s]*}([^{]*?){/gim;var _cssContentRuleRe=/(polyfill-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var _cssContentUnscopedRuleRe=/(polyfill-unscoped-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var _polyfillHost='-shadowcsshost';// note: :host-context pre-processed to -shadowcsshostcontext.
var _polyfillHostContext='-shadowcsscontext';var _parenSuffix=')(?:\\(('+'(?:\\([^)(]*\\)|[^)(]*)+?'+')\\))?([^,{]*)';var _cssColonHostRe=new RegExp('('+_polyfillHost+_parenSuffix,'gim');var _cssColonHostContextRe=new RegExp('('+_polyfillHostContext+_parenSuffix,'gim');var _polyfillHostNoCombinator=_polyfillHost+'-no-combinator';var _polyfillHostNoCombinatorRe=/-shadowcsshost-no-combinator([^\s]*)/;var _shadowDOMSelectorsRe=[/::shadow/g,/::content/g,// Deprecated selectors
/\/shadow-deep\//g,/\/shadow\//g];// The deep combinator is deprecated in the CSS spec
// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.
// see https://github.com/angular/angular/pull/17677
var _shadowDeepSelectors=/(?:>>>)|(?:\/deep\/)|(?:::ng-deep)/g;var _selectorReSuffix='([>\\s~+\[.,{:][\\s\\S]*)?$';var _polyfillHostRe=/-shadowcsshost/gim;var _colonHostRe=/:host/gim;var _colonHostContextRe=/:host-context/gim;var _commentRe=/\/\*\s*[\s\S]*?\*\//g;function stripComments(input){return input.replace(_commentRe,'');}var _commentWithHashRe=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g;function extractCommentsWithHash(input){return input.match(_commentWithHashRe)||[];}var _ruleRe=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g;var _curlyRe=/([{}])/g;var OPEN_CURLY='{';var CLOSE_CURLY='}';var BLOCK_PLACEHOLDER='%BLOCK%';var CssRule=/** @class */function(){function CssRule(selector,content){this.selector=selector;this.content=content;}return CssRule;}();function processRules(input,ruleCallback){var inputWithEscapedBlocks=escapeBlocks(input);var nextBlockIndex=0;return inputWithEscapedBlocks.escapedString.replace(_ruleRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var selector=m[2];var content='';var suffix=m[4];var contentPrefix='';if(suffix&&suffix.startsWith('{'+BLOCK_PLACEHOLDER)){content=inputWithEscapedBlocks.blocks[nextBlockIndex++];suffix=suffix.substring(BLOCK_PLACEHOLDER.length+1);contentPrefix='{';}var rule=ruleCallback(new CssRule(selector,content));return""+m[1]+rule.selector+m[3]+contentPrefix+rule.content+suffix;});}var StringWithEscapedBlocks=/** @class */function(){function StringWithEscapedBlocks(escapedString,blocks){this.escapedString=escapedString;this.blocks=blocks;}return StringWithEscapedBlocks;}();function escapeBlocks(input){var inputParts=input.split(_curlyRe);var resultParts=[];var escapedBlocks=[];var bracketCount=0;var currentBlockParts=[];for(var partIndex=0;partIndex<inputParts.length;partIndex++){var part=inputParts[partIndex];if(part==CLOSE_CURLY){bracketCount--;}if(bracketCount>0){currentBlockParts.push(part);}else{if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);currentBlockParts=[];}resultParts.push(part);}if(part==OPEN_CURLY){bracketCount++;}}if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);}return new StringWithEscapedBlocks(resultParts.join(''),escapedBlocks);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var COMPONENT_VARIABLE='%COMP%';var HOST_ATTR="_nghost-"+COMPONENT_VARIABLE;var CONTENT_ATTR="_ngcontent-"+COMPONENT_VARIABLE;var StylesCompileDependency=/** @class */function(){function StylesCompileDependency(name,moduleUrl,setValue){this.name=name;this.moduleUrl=moduleUrl;this.setValue=setValue;}return StylesCompileDependency;}();var CompiledStylesheet=/** @class */function(){function CompiledStylesheet(outputCtx,stylesVar,dependencies,isShimmed,meta){this.outputCtx=outputCtx;this.stylesVar=stylesVar;this.dependencies=dependencies;this.isShimmed=isShimmed;this.meta=meta;}return CompiledStylesheet;}();var StyleCompiler=/** @class */function(){function StyleCompiler(_urlResolver){this._urlResolver=_urlResolver;this._shadowCss=new ShadowCss();}StyleCompiler.prototype.compileComponent=function(outputCtx,comp){var template=comp.template;return this._compileStyles(outputCtx,comp,new CompileStylesheetMetadata({styles:template.styles,styleUrls:template.styleUrls,moduleUrl:identifierModuleUrl(comp.type)}),this.needsStyleShim(comp),true);};StyleCompiler.prototype.compileStyles=function(outputCtx,comp,stylesheet,shim){if(shim===void 0){shim=this.needsStyleShim(comp);}return this._compileStyles(outputCtx,comp,stylesheet,shim,false);};StyleCompiler.prototype.needsStyleShim=function(comp){return comp.template.encapsulation===ViewEncapsulation.Emulated;};StyleCompiler.prototype._compileStyles=function(outputCtx,comp,stylesheet,shim,isComponentStylesheet){var _this=this;var styleExpressions=stylesheet.styles.map(function(plainStyle){return literal(_this._shimIfNeeded(plainStyle,shim));});var dependencies=[];stylesheet.styleUrls.forEach(function(styleUrl){var exprIndex=styleExpressions.length;// Note: This placeholder will be filled later.
styleExpressions.push(null);dependencies.push(new StylesCompileDependency(getStylesVarName(null),styleUrl,function(value){return styleExpressions[exprIndex]=outputCtx.importExpr(value);}));});// styles variable contains plain strings and arrays of other styles arrays (recursive),
// so we set its type to dynamic.
var stylesVar=getStylesVarName(isComponentStylesheet?comp:null);var stmt=variable(stylesVar).set(literalArr(styleExpressions,new ArrayType(DYNAMIC_TYPE,[TypeModifier.Const]))).toDeclStmt(null,isComponentStylesheet?[StmtModifier.Final]:[StmtModifier.Final,StmtModifier.Exported]);outputCtx.statements.push(stmt);return new CompiledStylesheet(outputCtx,stylesVar,dependencies,shim,stylesheet);};StyleCompiler.prototype._shimIfNeeded=function(style,shim){return shim?this._shadowCss.shimCssText(style,CONTENT_ATTR,HOST_ATTR):style;};return StyleCompiler;}();function getStylesVarName(component){var result="styles";if(component){result+="_"+identifierName(component.type);}return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var PRESERVE_WS_ATTR_NAME='ngPreserveWhitespaces';var SKIP_WS_TRIM_TAGS=new Set(['pre','template','textarea','script','style']);// Equivalent to \s with \u00a0 (non-breaking space) excluded.
// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp
var WS_CHARS=" \f\n\r\t\x0B\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF";var NO_WS_REGEXP=new RegExp("[^"+WS_CHARS+"]");var WS_REPLACE_REGEXP=new RegExp("["+WS_CHARS+"]{2,}",'g');function hasPreserveWhitespacesAttr(attrs){return attrs.some(function(attr){return attr.name===PRESERVE_WS_ATTR_NAME;});}/**
 * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:
 * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32
 * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character
 * and later on replaced by a space. We are re-implementing the same idea here.
 */function replaceNgsp(value){// lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE
return value.replace(new RegExp(NGSP_UNICODE,'g'),' ');}/**
 * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:
 * - consider spaces, tabs and new lines as whitespace characters;
 * - drop text nodes consisting of whitespace characters only;
 * - for all other text nodes replace consecutive whitespace characters with one space;
 * - convert &ngsp; pseudo-entity to a single space;
 *
 * Removal and trimming of whitespaces have positive performance impact (less code to generate
 * while compiling templates, faster view creation). At the same time it can be "destructive"
 * in some cases (whitespaces can influence layout). Because of the potential of breaking layout
 * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for
 * whitespace removal. The default option for whitespace removal will be revisited in Angular 6
 * and might be changed to "on" by default.
 */var WhitespaceVisitor=/** @class */function(){function WhitespaceVisitor(){}WhitespaceVisitor.prototype.visitElement=function(element,context){if(SKIP_WS_TRIM_TAGS.has(element.name)||hasPreserveWhitespacesAttr(element.attrs)){// don't descent into elements where we need to preserve whitespaces
// but still visit all attributes to eliminate one used as a market to preserve WS
return new Element(element.name,visitAll(this,element.attrs),element.children,element.sourceSpan,element.startSourceSpan,element.endSourceSpan);}return new Element(element.name,element.attrs,visitAll(this,element.children),element.sourceSpan,element.startSourceSpan,element.endSourceSpan);};WhitespaceVisitor.prototype.visitAttribute=function(attribute,context){return attribute.name!==PRESERVE_WS_ATTR_NAME?attribute:null;};WhitespaceVisitor.prototype.visitText=function(text,context){var isNotBlank=text.value.match(NO_WS_REGEXP);if(isNotBlank){return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP,' '),text.sourceSpan);}return null;};WhitespaceVisitor.prototype.visitComment=function(comment,context){return comment;};WhitespaceVisitor.prototype.visitExpansion=function(expansion,context){return expansion;};WhitespaceVisitor.prototype.visitExpansionCase=function(expansionCase,context){return expansionCase;};return WhitespaceVisitor;}();function removeWhitespaces(htmlAstWithErrors){return new ParseTreeResult(visitAll(new WhitespaceVisitor(),htmlAstWithErrors.rootNodes),htmlAstWithErrors.errors);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // http://cldr.unicode.org/index/cldr-spec/plural-rules
var PLURAL_CASES=['zero','one','two','few','many','other'];/**
 * Expands special forms into elements.
 *
 * For example,
 *
 * ```
 * { messages.length, plural,
 *   =0 {zero}
 *   =1 {one}
 *   other {more than one}
 * }
 * ```
 *
 * will be expanded into
 *
 * ```
 * <ng-container [ngPlural]="messages.length">
 *   <ng-template ngPluralCase="=0">zero</ng-template>
 *   <ng-template ngPluralCase="=1">one</ng-template>
 *   <ng-template ngPluralCase="other">more than one</ng-template>
 * </ng-container>
 * ```
 */function expandNodes(nodes){var expander=new _Expander();return new ExpansionResult(visitAll(expander,nodes),expander.isExpanded,expander.errors);}var ExpansionResult=/** @class */function(){function ExpansionResult(nodes,expanded,errors){this.nodes=nodes;this.expanded=expanded;this.errors=errors;}return ExpansionResult;}();var ExpansionError=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ExpansionError,_super);function ExpansionError(span,errorMsg){return _super.call(this,span,errorMsg)||this;}return ExpansionError;}(ParseError);/**
 * Expand expansion forms (plural, select) to directives
 *
 * @internal
 */var _Expander=/** @class */function(){function _Expander(){this.isExpanded=false;this.errors=[];}_Expander.prototype.visitElement=function(element,context){return new Element(element.name,element.attrs,visitAll(this,element.children),element.sourceSpan,element.startSourceSpan,element.endSourceSpan);};_Expander.prototype.visitAttribute=function(attribute,context){return attribute;};_Expander.prototype.visitText=function(text,context){return text;};_Expander.prototype.visitComment=function(comment,context){return comment;};_Expander.prototype.visitExpansion=function(icu,context){this.isExpanded=true;return icu.type=='plural'?_expandPluralForm(icu,this.errors):_expandDefaultForm(icu,this.errors);};_Expander.prototype.visitExpansionCase=function(icuCase,context){throw new Error('Should not be reached');};return _Expander;}();// Plural forms are expanded to `NgPlural` and `NgPluralCase`s
function _expandPluralForm(ast,errors){var children=ast.cases.map(function(c){if(PLURAL_CASES.indexOf(c.value)==-1&&!c.value.match(/^=\d+$/)){errors.push(new ExpansionError(c.valueSourceSpan,"Plural cases should be \"=<number>\" or one of "+PLURAL_CASES.join(", ")));}var expansionResult=expandNodes(c.expression);errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(expansionResult.errors));return new Element("ng-template",[new Attribute('ngPluralCase',""+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var switchAttr=new Attribute('[ngPlural]',ast.switchValue,ast.switchValueSourceSpan);return new Element('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}// ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s
function _expandDefaultForm(ast,errors){var children=ast.cases.map(function(c){var expansionResult=expandNodes(c.expression);errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(expansionResult.errors));if(c.value==='other'){// other is the default case when no values match
return new Element("ng-template",[new Attribute('ngSwitchDefault','',c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);}return new Element("ng-template",[new Attribute('ngSwitchCase',""+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var switchAttr=new Attribute('[ngSwitch]',ast.switchValue,ast.switchValueSourceSpan);return new Element('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var PROPERTY_PARTS_SEPARATOR='.';var ATTRIBUTE_PREFIX='attr';var CLASS_PREFIX='class';var STYLE_PREFIX='style';var ANIMATE_PROP_PREFIX='animate-';/**
 * Parses bindings in templates and in the directive host area.
 */var BindingParser=/** @class */function(){function BindingParser(_exprParser,_interpolationConfig,_schemaRegistry,pipes,errors){this._exprParser=_exprParser;this._interpolationConfig=_interpolationConfig;this._schemaRegistry=_schemaRegistry;this.errors=errors;this.pipesByName=null;this._usedPipes=new Map();// When the `pipes` parameter is `null`, do not check for used pipes
// This is used in IVY when we might not know the available pipes at compile time
if(pipes){var pipesByName_1=new Map();pipes.forEach(function(pipe){return pipesByName_1.set(pipe.name,pipe);});this.pipesByName=pipesByName_1;}}BindingParser.prototype.getUsedPipes=function(){return Array.from(this._usedPipes.values());};BindingParser.prototype.createBoundHostProperties=function(dirMeta,sourceSpan){var _this=this;if(dirMeta.hostProperties){var boundProps_1=[];Object.keys(dirMeta.hostProperties).forEach(function(propName){var expression=dirMeta.hostProperties[propName];if(typeof expression==='string'){_this.parsePropertyBinding(propName,expression,true,sourceSpan,[],boundProps_1);}else{_this._reportError("Value of the host property binding \""+propName+"\" needs to be a string representing an expression but got \""+expression+"\" ("+_typeof(expression)+")",sourceSpan);}});return boundProps_1;}return null;};BindingParser.prototype.createDirectiveHostPropertyAsts=function(dirMeta,elementSelector,sourceSpan){var _this=this;var boundProps=this.createBoundHostProperties(dirMeta,sourceSpan);return boundProps&&boundProps.map(function(prop){return _this.createBoundElementProperty(elementSelector,prop);});};BindingParser.prototype.createDirectiveHostEventAsts=function(dirMeta,sourceSpan){var _this=this;if(dirMeta.hostListeners){var targetEvents_1=[];Object.keys(dirMeta.hostListeners).forEach(function(propName){var expression=dirMeta.hostListeners[propName];if(typeof expression==='string'){_this.parseEvent(propName,expression,sourceSpan,[],targetEvents_1);}else{_this._reportError("Value of the host listener \""+propName+"\" needs to be a string representing an expression but got \""+expression+"\" ("+_typeof(expression)+")",sourceSpan);}});return targetEvents_1;}return null;};BindingParser.prototype.parseInterpolation=function(value,sourceSpan){var sourceInfo=sourceSpan.start.toString();try{var ast=this._exprParser.parseInterpolation(value,sourceInfo,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}};// Parse an inline template binding. ie `<tag *tplKey="<tplValue>">`
BindingParser.prototype.parseInlineTemplateBinding=function(tplKey,tplValue,sourceSpan,targetMatchableAttrs,targetProps,targetVars){var bindings=this._parseTemplateBindings(tplKey,tplValue,sourceSpan);for(var i=0;i<bindings.length;i++){var binding=bindings[i];if(binding.keyIsVar){targetVars.push(new ParsedVariable(binding.key,binding.name,sourceSpan));}else if(binding.expression){this._parsePropertyAst(binding.key,binding.expression,sourceSpan,targetMatchableAttrs,targetProps);}else{targetMatchableAttrs.push([binding.key,'']);this.parseLiteralAttr(binding.key,null,sourceSpan,targetMatchableAttrs,targetProps);}}};BindingParser.prototype._parseTemplateBindings=function(tplKey,tplValue,sourceSpan){var _this=this;var sourceInfo=sourceSpan.start.toString();try{var bindingsResult=this._exprParser.parseTemplateBindings(tplKey,tplValue,sourceInfo);this._reportExpressionParserErrors(bindingsResult.errors,sourceSpan);bindingsResult.templateBindings.forEach(function(binding){if(binding.expression){_this._checkPipes(binding.expression,sourceSpan);}});bindingsResult.warnings.forEach(function(warning){_this._reportError(warning,sourceSpan,ParseErrorLevel.WARNING);});return bindingsResult.templateBindings;}catch(e){this._reportError(""+e,sourceSpan);return[];}};BindingParser.prototype.parseLiteralAttr=function(name,value,sourceSpan,targetMatchableAttrs,targetProps){if(isAnimationLabel(name)){name=name.substring(1);if(value){this._reportError("Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid."+" Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.",sourceSpan,ParseErrorLevel.ERROR);}this._parseAnimation(name,value,sourceSpan,targetMatchableAttrs,targetProps);}else{targetProps.push(new ParsedProperty(name,this._exprParser.wrapLiteralPrimitive(value,''),ParsedPropertyType.LITERAL_ATTR,sourceSpan));}};BindingParser.prototype.parsePropertyBinding=function(name,expression,isHost,sourceSpan,targetMatchableAttrs,targetProps){var isAnimationProp=false;if(name.startsWith(ANIMATE_PROP_PREFIX)){isAnimationProp=true;name=name.substring(ANIMATE_PROP_PREFIX.length);}else if(isAnimationLabel(name)){isAnimationProp=true;name=name.substring(1);}if(isAnimationProp){this._parseAnimation(name,expression,sourceSpan,targetMatchableAttrs,targetProps);}else{this._parsePropertyAst(name,this._parseBinding(expression,isHost,sourceSpan),sourceSpan,targetMatchableAttrs,targetProps);}};BindingParser.prototype.parsePropertyInterpolation=function(name,value,sourceSpan,targetMatchableAttrs,targetProps){var expr=this.parseInterpolation(value,sourceSpan);if(expr){this._parsePropertyAst(name,expr,sourceSpan,targetMatchableAttrs,targetProps);return true;}return false;};BindingParser.prototype._parsePropertyAst=function(name,ast,sourceSpan,targetMatchableAttrs,targetProps){targetMatchableAttrs.push([name,ast.source]);targetProps.push(new ParsedProperty(name,ast,ParsedPropertyType.DEFAULT,sourceSpan));};BindingParser.prototype._parseAnimation=function(name,expression,sourceSpan,targetMatchableAttrs,targetProps){// This will occur when a @trigger is not paired with an expression.
// For animations it is valid to not have an expression since */void
// states will be applied by angular when the element is attached/detached
var ast=this._parseBinding(expression||'undefined',false,sourceSpan);targetMatchableAttrs.push([name,ast.source]);targetProps.push(new ParsedProperty(name,ast,ParsedPropertyType.ANIMATION,sourceSpan));};BindingParser.prototype._parseBinding=function(value,isHostBinding,sourceSpan){var sourceInfo=(sourceSpan&&sourceSpan.start||'(unknown)').toString();try{var ast=isHostBinding?this._exprParser.parseSimpleBinding(value,sourceInfo,this._interpolationConfig):this._exprParser.parseBinding(value,sourceInfo,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}};BindingParser.prototype.createBoundElementProperty=function(elementSelector,boundProp){if(boundProp.isAnimation){return new BoundElementProperty(boundProp.name,4/* Animation */,SecurityContext.NONE,boundProp.expression,null,boundProp.sourceSpan);}var unit=null;var bindingType=undefined;var boundPropertyName=null;var parts=boundProp.name.split(PROPERTY_PARTS_SEPARATOR);var securityContexts=undefined;// Check check for special cases (prefix style, attr, class)
if(parts.length>1){if(parts[0]==ATTRIBUTE_PREFIX){boundPropertyName=parts[1];this._validatePropertyOrAttributeName(boundPropertyName,boundProp.sourceSpan,true);securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,boundPropertyName,true);var nsSeparatorIdx=boundPropertyName.indexOf(':');if(nsSeparatorIdx>-1){var ns=boundPropertyName.substring(0,nsSeparatorIdx);var name_1=boundPropertyName.substring(nsSeparatorIdx+1);boundPropertyName=mergeNsAndName(ns,name_1);}bindingType=1/* Attribute */;}else if(parts[0]==CLASS_PREFIX){boundPropertyName=parts[1];bindingType=2/* Class */;securityContexts=[SecurityContext.NONE];}else if(parts[0]==STYLE_PREFIX){unit=parts.length>2?parts[2]:null;boundPropertyName=parts[1];bindingType=3/* Style */;securityContexts=[SecurityContext.STYLE];}}// If not a special case, use the full property name
if(boundPropertyName===null){boundPropertyName=this._schemaRegistry.getMappedPropName(boundProp.name);securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,boundPropertyName,false);bindingType=0/* Property */;this._validatePropertyOrAttributeName(boundPropertyName,boundProp.sourceSpan,false);}return new BoundElementProperty(boundPropertyName,bindingType,securityContexts[0],boundProp.expression,unit,boundProp.sourceSpan);};BindingParser.prototype.parseEvent=function(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){if(isAnimationLabel(name)){name=name.substr(1);this._parseAnimationEvent(name,expression,sourceSpan,targetEvents);}else{this._parseRegularEvent(name,expression,sourceSpan,targetMatchableAttrs,targetEvents);}};BindingParser.prototype._parseAnimationEvent=function(name,expression,sourceSpan,targetEvents){var matches=splitAtPeriod(name,[name,'']);var eventName=matches[0];var phase=matches[1].toLowerCase();if(phase){switch(phase){case'start':case'done':var ast=this._parseAction(expression,sourceSpan);targetEvents.push(new ParsedEvent(eventName,phase,1/* Animation */,ast,sourceSpan));break;default:this._reportError("The provided animation output phase value \""+phase+"\" for \"@"+eventName+"\" is not supported (use start or done)",sourceSpan);break;}}else{this._reportError("The animation trigger output event (@"+eventName+") is missing its phase value name (start or done are currently supported)",sourceSpan);}};BindingParser.prototype._parseRegularEvent=function(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){// long format: 'target: eventName'
var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(splitAtColon(name,[null,name]),2),target=_a[0],eventName=_a[1];var ast=this._parseAction(expression,sourceSpan);targetMatchableAttrs.push([name,ast.source]);targetEvents.push(new ParsedEvent(eventName,target,0/* Regular */,ast,sourceSpan));// Don't detect directives for event names for now,
// so don't add the event name to the matchableAttrs
};BindingParser.prototype._parseAction=function(value,sourceSpan){var sourceInfo=(sourceSpan&&sourceSpan.start||'(unknown').toString();try{var ast=this._exprParser.parseAction(value,sourceInfo,this._interpolationConfig);if(ast){this._reportExpressionParserErrors(ast.errors,sourceSpan);}if(!ast||ast.ast instanceof EmptyExpr){this._reportError("Empty expressions are not allowed",sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}};BindingParser.prototype._reportError=function(message,sourceSpan,level){if(level===void 0){level=ParseErrorLevel.ERROR;}this.errors.push(new ParseError(sourceSpan,message,level));};BindingParser.prototype._reportExpressionParserErrors=function(errors,sourceSpan){var e_1,_a;try{for(var errors_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(errors),errors_1_1=errors_1.next();!errors_1_1.done;errors_1_1=errors_1.next()){var error$$1=errors_1_1.value;this._reportError(error$$1.message,sourceSpan);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(errors_1_1&&!errors_1_1.done&&(_a=errors_1.return))_a.call(errors_1);}finally{if(e_1)throw e_1.error;}}};// Make sure all the used pipes are known in `this.pipesByName`
BindingParser.prototype._checkPipes=function(ast,sourceSpan){var _this=this;if(ast&&this.pipesByName){var collector=new PipeCollector();ast.visit(collector);collector.pipes.forEach(function(ast,pipeName){var pipeMeta=_this.pipesByName.get(pipeName);if(!pipeMeta){_this._reportError("The pipe '"+pipeName+"' could not be found",new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start),sourceSpan.start.moveBy(ast.span.end)));}else{_this._usedPipes.set(pipeName,pipeMeta);}});}};/**
     * @param propName the name of the property / attribute
     * @param sourceSpan
     * @param isAttr true when binding to an attribute
     */BindingParser.prototype._validatePropertyOrAttributeName=function(propName,sourceSpan,isAttr){var report=isAttr?this._schemaRegistry.validateAttribute(propName):this._schemaRegistry.validateProperty(propName);if(report.error){this._reportError(report.msg,sourceSpan,ParseErrorLevel.ERROR);}};return BindingParser;}();var PipeCollector=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PipeCollector,_super);function PipeCollector(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.pipes=new Map();return _this;}PipeCollector.prototype.visitPipe=function(ast,context){this.pipes.set(ast.name,ast);ast.exp.visit(this);this.visitAll(ast.args,context);return null;};return PipeCollector;}(RecursiveAstVisitor);function isAnimationLabel(name){return name[0]=='@';}function calcPossibleSecurityContexts(registry,selector,propName,isAttribute){var ctxs=[];CssSelector.parse(selector).forEach(function(selector){var elementNames=selector.element?[selector.element]:registry.allKnownElementNames();var notElementNames=new Set(selector.notSelectors.filter(function(selector){return selector.isElementSelector();}).map(function(selector){return selector.element;}));var possibleElementNames=elementNames.filter(function(elementName){return!notElementNames.has(elementName);});ctxs.push.apply(ctxs,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(possibleElementNames.map(function(elementName){return registry.securityContext(elementName,propName,isAttribute);})));});return ctxs.length===0?[SecurityContext.NONE]:Array.from(new Set(ctxs)).sort();}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var BIND_NAME_REGEXP=/^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;// Group 1 = "bind-"
var KW_BIND_IDX=1;// Group 2 = "let-"
var KW_LET_IDX=2;// Group 3 = "ref-/#"
var KW_REF_IDX=3;// Group 4 = "on-"
var KW_ON_IDX=4;// Group 5 = "bindon-"
var KW_BINDON_IDX=5;// Group 6 = "@"
var KW_AT_IDX=6;// Group 7 = the identifier after "bind-", "let-", "ref-/#", "on-", "bindon-" or "@"
var IDENT_KW_IDX=7;// Group 8 = identifier inside [()]
var IDENT_BANANA_BOX_IDX=8;// Group 9 = identifier inside []
var IDENT_PROPERTY_IDX=9;// Group 10 = identifier inside ()
var IDENT_EVENT_IDX=10;var TEMPLATE_ATTR_PREFIX='*';var CLASS_ATTR='class';var _TEXT_CSS_SELECTOR;function TEXT_CSS_SELECTOR(){if(!_TEXT_CSS_SELECTOR){_TEXT_CSS_SELECTOR=CssSelector.parse('*')[0];}return _TEXT_CSS_SELECTOR;}var TemplateParseError=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TemplateParseError,_super);function TemplateParseError(message,span,level){return _super.call(this,span,message,level)||this;}return TemplateParseError;}(ParseError);var TemplateParseResult=/** @class */function(){function TemplateParseResult(templateAst,usedPipes,errors){this.templateAst=templateAst;this.usedPipes=usedPipes;this.errors=errors;}return TemplateParseResult;}();var TemplateParser=/** @class */function(){function TemplateParser(_config,_reflector,_exprParser,_schemaRegistry,_htmlParser,_console,transforms){this._config=_config;this._reflector=_reflector;this._exprParser=_exprParser;this._schemaRegistry=_schemaRegistry;this._htmlParser=_htmlParser;this._console=_console;this.transforms=transforms;}Object.defineProperty(TemplateParser.prototype,"expressionParser",{get:function get(){return this._exprParser;},enumerable:true,configurable:true});TemplateParser.prototype.parse=function(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces){var result=this.tryParse(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces);var warnings=result.errors.filter(function(error$$1){return error$$1.level===ParseErrorLevel.WARNING;});var errors=result.errors.filter(function(error$$1){return error$$1.level===ParseErrorLevel.ERROR;});if(warnings.length>0){this._console.warn("Template parse warnings:\n"+warnings.join('\n'));}if(errors.length>0){var errorString=errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString,errors);}return{template:result.templateAst,pipes:result.usedPipes};};TemplateParser.prototype.tryParse=function(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces){var htmlParseResult=typeof template==='string'?this._htmlParser.parse(template,templateUrl,true,this.getInterpolationConfig(component)):template;if(!preserveWhitespaces){htmlParseResult=removeWhitespaces(htmlParseResult);}return this.tryParseHtml(this.expandHtml(htmlParseResult),component,directives,pipes,schemas);};TemplateParser.prototype.tryParseHtml=function(htmlAstWithErrors,component,directives,pipes,schemas){var result;var errors=htmlAstWithErrors.errors;var usedPipes=[];if(htmlAstWithErrors.rootNodes.length>0){var uniqDirectives=removeSummaryDuplicates(directives);var uniqPipes=removeSummaryDuplicates(pipes);var providerViewContext=new ProviderViewContext(this._reflector,component);var interpolationConfig=undefined;if(component.template&&component.template.interpolation){interpolationConfig={start:component.template.interpolation[0],end:component.template.interpolation[1]};}var bindingParser=new BindingParser(this._exprParser,interpolationConfig,this._schemaRegistry,uniqPipes,errors);var parseVisitor=new TemplateParseVisitor(this._reflector,this._config,providerViewContext,uniqDirectives,bindingParser,this._schemaRegistry,schemas,errors);result=visitAll(parseVisitor,htmlAstWithErrors.rootNodes,EMPTY_ELEMENT_CONTEXT);errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(providerViewContext.errors));usedPipes.push.apply(usedPipes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(bindingParser.getUsedPipes()));}else{result=[];}this._assertNoReferenceDuplicationOnTemplate(result,errors);if(errors.length>0){return new TemplateParseResult(result,usedPipes,errors);}if(this.transforms){this.transforms.forEach(function(transform){result=templateVisitAll(transform,result);});}return new TemplateParseResult(result,usedPipes,errors);};TemplateParser.prototype.expandHtml=function(htmlAstWithErrors,forced){if(forced===void 0){forced=false;}var errors=htmlAstWithErrors.errors;if(errors.length==0||forced){// Transform ICU messages to angular directives
var expandedHtmlAst=expandNodes(htmlAstWithErrors.rootNodes);errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(expandedHtmlAst.errors));htmlAstWithErrors=new ParseTreeResult(expandedHtmlAst.nodes,errors);}return htmlAstWithErrors;};TemplateParser.prototype.getInterpolationConfig=function(component){if(component.template){return InterpolationConfig.fromArray(component.template.interpolation);}return undefined;};/** @internal */TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate=function(result,errors){var existingReferences=[];result.filter(function(element){return!!element.references;}).forEach(function(element){return element.references.forEach(function(reference){var name=reference.name;if(existingReferences.indexOf(name)<0){existingReferences.push(name);}else{var error$$1=new TemplateParseError("Reference \"#"+name+"\" is defined several times",reference.sourceSpan,ParseErrorLevel.ERROR);errors.push(error$$1);}});});};return TemplateParser;}();var TemplateParseVisitor=/** @class */function(){function TemplateParseVisitor(reflector,config,providerViewContext,directives,_bindingParser,_schemaRegistry,_schemas,_targetErrors){var _this=this;this.reflector=reflector;this.config=config;this.providerViewContext=providerViewContext;this._bindingParser=_bindingParser;this._schemaRegistry=_schemaRegistry;this._schemas=_schemas;this._targetErrors=_targetErrors;this.selectorMatcher=new SelectorMatcher();this.directivesIndex=new Map();this.ngContentCount=0;// Note: queries start with id 1 so we can use the number in a Bloom filter!
this.contentQueryStartId=providerViewContext.component.viewQueries.length+1;directives.forEach(function(directive,index){var selector=CssSelector.parse(directive.selector);_this.selectorMatcher.addSelectables(selector,directive);_this.directivesIndex.set(directive,index);});}TemplateParseVisitor.prototype.visitExpansion=function(expansion,context){return null;};TemplateParseVisitor.prototype.visitExpansionCase=function(expansionCase,context){return null;};TemplateParseVisitor.prototype.visitText=function(text,parent){var ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR());var valueNoNgsp=replaceNgsp(text.value);var expr=this._bindingParser.parseInterpolation(valueNoNgsp,text.sourceSpan);return expr?new BoundTextAst(expr,ngContentIndex,text.sourceSpan):new TextAst(valueNoNgsp,ngContentIndex,text.sourceSpan);};TemplateParseVisitor.prototype.visitAttribute=function(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);};TemplateParseVisitor.prototype.visitComment=function(comment,context){return null;};TemplateParseVisitor.prototype.visitElement=function(element,parent){var _this=this;var queryStartIndex=this.contentQueryStartId;var elName=element.name;var preparsedElement=preparseElement(element);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE){// Skipping <script> for security reasons
// Skipping <style> as we already processed them
// in the StyleCompiler
return null;}if(preparsedElement.type===PreparsedElementType.STYLESHEET&&isStyleUrlResolvable(preparsedElement.hrefAttr)){// Skipping stylesheets with either relative urls or package scheme as we already processed
// them in the StyleCompiler
return null;}var matchableAttrs=[];var elementOrDirectiveProps=[];var elementOrDirectiveRefs=[];var elementVars=[];var events=[];var templateElementOrDirectiveProps=[];var templateMatchableAttrs=[];var templateElementVars=[];var hasInlineTemplates=false;var attrs=[];var isTemplateElement=isNgTemplate(element.name);element.attrs.forEach(function(attr){var parsedVariables=[];var hasBinding=_this._parseAttr(isTemplateElement,attr,matchableAttrs,elementOrDirectiveProps,events,elementOrDirectiveRefs,elementVars);elementVars.push.apply(elementVars,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(parsedVariables.map(function(v){return VariableAst.fromParsedVariable(v);})));var templateValue;var templateKey;var normalizedName=_this._normalizeAttributeName(attr.name);if(normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)){templateValue=attr.value;templateKey=normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);}var hasTemplateBinding=templateValue!=null;if(hasTemplateBinding){if(hasInlineTemplates){_this._reportError("Can't have multiple template bindings on one element. Use only one attribute prefixed with *",attr.sourceSpan);}hasInlineTemplates=true;var parsedVariables_1=[];_this._bindingParser.parseInlineTemplateBinding(templateKey,templateValue,attr.sourceSpan,templateMatchableAttrs,templateElementOrDirectiveProps,parsedVariables_1);templateElementVars.push.apply(templateElementVars,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(parsedVariables_1.map(function(v){return VariableAst.fromParsedVariable(v);})));}if(!hasBinding&&!hasTemplateBinding){// don't include the bindings as attributes as well in the AST
attrs.push(_this.visitAttribute(attr,null));matchableAttrs.push([attr.name,attr.value]);}});var elementCssSelector=createElementCssSelector(elName,matchableAttrs);var _a=this._parseDirectives(this.selectorMatcher,elementCssSelector),directiveMetas=_a.directives,matchElement=_a.matchElement;var references=[];var boundDirectivePropNames=new Set();var directiveAsts=this._createDirectiveAsts(isTemplateElement,element.name,directiveMetas,elementOrDirectiveProps,elementOrDirectiveRefs,element.sourceSpan,references,boundDirectivePropNames);var elementProps=this._createElementPropertyAsts(element.name,elementOrDirectiveProps,boundDirectivePropNames);var isViewRoot=parent.isTemplateElement||hasInlineTemplates;var providerContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,isViewRoot,directiveAsts,attrs,references,isTemplateElement,queryStartIndex,element.sourceSpan);var children=visitAll(preparsedElement.nonBindable?NON_BINDABLE_VISITOR:this,element.children,ElementContext.create(isTemplateElement,directiveAsts,isTemplateElement?parent.providerContext:providerContext));providerContext.afterElement();// Override the actual selector when the `ngProjectAs` attribute is provided
var projectionSelector=preparsedElement.projectAs!=''?CssSelector.parse(preparsedElement.projectAs)[0]:elementCssSelector;var ngContentIndex=parent.findNgContentIndex(projectionSelector);var parsedElement;if(preparsedElement.type===PreparsedElementType.NG_CONTENT){// `<ng-content>` element
if(element.children&&!element.children.every(_isEmptyTextNode)){this._reportError("<ng-content> element cannot have content.",element.sourceSpan);}parsedElement=new NgContentAst(this.ngContentCount++,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else if(isTemplateElement){// `<ng-template>` element
this._assertAllEventsPublishedByDirectives(directiveAsts,events);this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts,elementProps,element.sourceSpan);parsedElement=new EmbeddedTemplateAst(attrs,events,references,elementVars,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else{// element other than `<ng-content>` and `<ng-template>`
this._assertElementExists(matchElement,element);this._assertOnlyOneComponent(directiveAsts,element.sourceSpan);var ngContentIndex_1=hasInlineTemplates?null:parent.findNgContentIndex(projectionSelector);parsedElement=new ElementAst(elName,attrs,elementProps,events,references,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:ngContentIndex_1,element.sourceSpan,element.endSourceSpan||null);}if(hasInlineTemplates){// The element as a *-attribute
var templateQueryStartIndex=this.contentQueryStartId;var templateSelector=createElementCssSelector('ng-template',templateMatchableAttrs);var directives=this._parseDirectives(this.selectorMatcher,templateSelector).directives;var templateBoundDirectivePropNames=new Set();var templateDirectiveAsts=this._createDirectiveAsts(true,elName,directives,templateElementOrDirectiveProps,[],element.sourceSpan,[],templateBoundDirectivePropNames);var templateElementProps=this._createElementPropertyAsts(elName,templateElementOrDirectiveProps,templateBoundDirectivePropNames);this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts,templateElementProps,element.sourceSpan);var templateProviderContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,parent.isTemplateElement,templateDirectiveAsts,[],[],true,templateQueryStartIndex,element.sourceSpan);templateProviderContext.afterElement();parsedElement=new EmbeddedTemplateAst([],[],[],templateElementVars,templateProviderContext.transformedDirectiveAsts,templateProviderContext.transformProviders,templateProviderContext.transformedHasViewContainer,templateProviderContext.queryMatches,[parsedElement],ngContentIndex,element.sourceSpan);}return parsedElement;};TemplateParseVisitor.prototype._parseAttr=function(isTemplateElement,attr,targetMatchableAttrs,targetProps,targetEvents,targetRefs,targetVars){var name=this._normalizeAttributeName(attr.name);var value=attr.value;var srcSpan=attr.sourceSpan;var boundEvents=[];var bindParts=name.match(BIND_NAME_REGEXP);var hasBinding=false;if(bindParts!==null){hasBinding=true;if(bindParts[KW_BIND_IDX]!=null){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[KW_LET_IDX]){if(isTemplateElement){var identifier=bindParts[IDENT_KW_IDX];this._parseVariable(identifier,value,srcSpan,targetVars);}else{this._reportError("\"let-\" is only supported on ng-template elements.",srcSpan);}}else if(bindParts[KW_REF_IDX]){var identifier=bindParts[IDENT_KW_IDX];this._parseReference(identifier,value,srcSpan,targetRefs);}else if(bindParts[KW_ON_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX],value,srcSpan,targetMatchableAttrs,boundEvents);}else if(bindParts[KW_BINDON_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_KW_IDX],value,srcSpan,targetMatchableAttrs,boundEvents);}else if(bindParts[KW_AT_IDX]){this._bindingParser.parseLiteralAttr(name,value,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_BANANA_BOX_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX],value,srcSpan,targetMatchableAttrs,boundEvents);}else if(bindParts[IDENT_PROPERTY_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_EVENT_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX],value,srcSpan,targetMatchableAttrs,boundEvents);}}else{hasBinding=this._bindingParser.parsePropertyInterpolation(name,value,srcSpan,targetMatchableAttrs,targetProps);}if(!hasBinding){this._bindingParser.parseLiteralAttr(name,value,srcSpan,targetMatchableAttrs,targetProps);}targetEvents.push.apply(targetEvents,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(boundEvents.map(function(e){return BoundEventAst.fromParsedEvent(e);})));return hasBinding;};TemplateParseVisitor.prototype._normalizeAttributeName=function(attrName){return /^data-/i.test(attrName)?attrName.substring(5):attrName;};TemplateParseVisitor.prototype._parseVariable=function(identifier,value,sourceSpan,targetVars){if(identifier.indexOf('-')>-1){this._reportError("\"-\" is not allowed in variable names",sourceSpan);}targetVars.push(new VariableAst(identifier,value,sourceSpan));};TemplateParseVisitor.prototype._parseReference=function(identifier,value,sourceSpan,targetRefs){if(identifier.indexOf('-')>-1){this._reportError("\"-\" is not allowed in reference names",sourceSpan);}targetRefs.push(new ElementOrDirectiveRef(identifier,value,sourceSpan));};TemplateParseVisitor.prototype._parseAssignmentEvent=function(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){this._bindingParser.parseEvent(name+"Change",expression+"=$event",sourceSpan,targetMatchableAttrs,targetEvents);};TemplateParseVisitor.prototype._parseDirectives=function(selectorMatcher,elementCssSelector){var _this=this;// Need to sort the directives so that we get consistent results throughout,
// as selectorMatcher uses Maps inside.
// Also deduplicate directives as they might match more than one time!
var directives=new Array(this.directivesIndex.size);// Whether any directive selector matches on the element name
var matchElement=false;selectorMatcher.match(elementCssSelector,function(selector,directive){directives[_this.directivesIndex.get(directive)]=directive;matchElement=matchElement||selector.hasElementSelector();});return{directives:directives.filter(function(dir){return!!dir;}),matchElement:matchElement};};TemplateParseVisitor.prototype._createDirectiveAsts=function(isTemplateElement,elementName,directives,props,elementOrDirectiveRefs,elementSourceSpan,targetReferences,targetBoundDirectivePropNames){var _this=this;var matchedReferences=new Set();var component=null;var directiveAsts=directives.map(function(directive){var sourceSpan=new ParseSourceSpan(elementSourceSpan.start,elementSourceSpan.end,"Directive "+identifierName(directive.type));if(directive.isComponent){component=directive;}var directiveProperties=[];var boundProperties=_this._bindingParser.createDirectiveHostPropertyAsts(directive,elementName,sourceSpan);var hostProperties=boundProperties.map(function(prop){return BoundElementPropertyAst.fromBoundProperty(prop);});// Note: We need to check the host properties here as well,
// as we don't know the element name in the DirectiveWrapperCompiler yet.
hostProperties=_this._checkPropertiesInSchema(elementName,hostProperties);var parsedEvents=_this._bindingParser.createDirectiveHostEventAsts(directive,sourceSpan);_this._createDirectivePropertyAsts(directive.inputs,props,directiveProperties,targetBoundDirectivePropNames);elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length===0&&directive.isComponent||elOrDirRef.isReferenceToDirective(directive)){targetReferences.push(new ReferenceAst(elOrDirRef.name,createTokenForReference(directive.type.reference),elOrDirRef.value,elOrDirRef.sourceSpan));matchedReferences.add(elOrDirRef.name);}});var hostEvents=parsedEvents.map(function(e){return BoundEventAst.fromParsedEvent(e);});var contentQueryStartId=_this.contentQueryStartId;_this.contentQueryStartId+=directive.queries.length;return new DirectiveAst(directive,directiveProperties,hostProperties,hostEvents,contentQueryStartId,sourceSpan);});elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length>0){if(!matchedReferences.has(elOrDirRef.name)){_this._reportError("There is no directive with \"exportAs\" set to \""+elOrDirRef.value+"\"",elOrDirRef.sourceSpan);}}else if(!component){var refToken=null;if(isTemplateElement){refToken=createTokenForExternalReference(_this.reflector,Identifiers.TemplateRef);}targetReferences.push(new ReferenceAst(elOrDirRef.name,refToken,elOrDirRef.value,elOrDirRef.sourceSpan));}});return directiveAsts;};TemplateParseVisitor.prototype._createDirectivePropertyAsts=function(directiveProperties,boundProps,targetBoundDirectiveProps,targetBoundDirectivePropNames){if(directiveProperties){var boundPropsByName_1=new Map();boundProps.forEach(function(boundProp){var prevValue=boundPropsByName_1.get(boundProp.name);if(!prevValue||prevValue.isLiteral){// give [a]="b" a higher precedence than a="b" on the same element
boundPropsByName_1.set(boundProp.name,boundProp);}});Object.keys(directiveProperties).forEach(function(dirProp){var elProp=directiveProperties[dirProp];var boundProp=boundPropsByName_1.get(elProp);// Bindings are optional, so this binding only needs to be set up if an expression is given.
if(boundProp){targetBoundDirectivePropNames.add(boundProp.name);if(!isEmptyExpression(boundProp.expression)){targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp,boundProp.name,boundProp.expression,boundProp.sourceSpan));}}});}};TemplateParseVisitor.prototype._createElementPropertyAsts=function(elementName,props,boundDirectivePropNames){var _this=this;var boundElementProps=[];props.forEach(function(prop){if(!prop.isLiteral&&!boundDirectivePropNames.has(prop.name)){var boundProp=_this._bindingParser.createBoundElementProperty(elementName,prop);boundElementProps.push(BoundElementPropertyAst.fromBoundProperty(boundProp));}});return this._checkPropertiesInSchema(elementName,boundElementProps);};TemplateParseVisitor.prototype._findComponentDirectives=function(directives){return directives.filter(function(directive){return directive.directive.isComponent;});};TemplateParseVisitor.prototype._findComponentDirectiveNames=function(directives){return this._findComponentDirectives(directives).map(function(directive){return identifierName(directive.directive.type);});};TemplateParseVisitor.prototype._assertOnlyOneComponent=function(directives,sourceSpan){var componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>1){this._reportError("More than one component matched on this element.\n"+"Make sure that only one component's selector can match a given element.\n"+("Conflicting components: "+componentTypeNames.join(',')),sourceSpan);}};/**
     * Make sure that non-angular tags conform to the schemas.
     *
     * Note: An element is considered an angular tag when at least one directive selector matches the
     * tag name.
     *
     * @param matchElement Whether any directive has matched on the tag name
     * @param element the html element
     */TemplateParseVisitor.prototype._assertElementExists=function(matchElement,element){var elName=element.name.replace(/^:xhtml:/,'');if(!matchElement&&!this._schemaRegistry.hasElement(elName,this._schemas)){var errorMsg="'"+elName+"' is not a known element:\n";errorMsg+="1. If '"+elName+"' is an Angular component, then verify that it is part of this module.\n";if(elName.indexOf('-')>-1){errorMsg+="2. If '"+elName+"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.";}else{errorMsg+="2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}this._reportError(errorMsg,element.sourceSpan);}};TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate=function(directives,elementProps,sourceSpan){var _this=this;var componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>0){this._reportError("Components on an embedded template: "+componentTypeNames.join(','),sourceSpan);}elementProps.forEach(function(prop){_this._reportError("Property binding "+prop.name+" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".",sourceSpan);});};TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives=function(directives,events){var _this=this;var allDirectiveEvents=new Set();directives.forEach(function(directive){Object.keys(directive.directive.outputs).forEach(function(k){var eventName=directive.directive.outputs[k];allDirectiveEvents.add(eventName);});});events.forEach(function(event){if(event.target!=null||!allDirectiveEvents.has(event.name)){_this._reportError("Event binding "+event.fullName+" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".",event.sourceSpan);}});};TemplateParseVisitor.prototype._checkPropertiesInSchema=function(elementName,boundProps){var _this=this;// Note: We can't filter out empty expressions before this method,
// as we still want to validate them!
return boundProps.filter(function(boundProp){if(boundProp.type===0/* Property */&&!_this._schemaRegistry.hasProperty(elementName,boundProp.name,_this._schemas)){var errorMsg="Can't bind to '"+boundProp.name+"' since it isn't a known property of '"+elementName+"'.";if(elementName.startsWith('ng-')){errorMsg+="\n1. If '"+boundProp.name+"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component."+"\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}else if(elementName.indexOf('-')>-1){errorMsg+="\n1. If '"+elementName+"' is an Angular component and it has '"+boundProp.name+"' input, then verify that it is part of this module."+("\n2. If '"+elementName+"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.")+"\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}_this._reportError(errorMsg,boundProp.sourceSpan);}return!isEmptyExpression(boundProp.value);});};TemplateParseVisitor.prototype._reportError=function(message,sourceSpan,level){if(level===void 0){level=ParseErrorLevel.ERROR;}this._targetErrors.push(new ParseError(sourceSpan,message,level));};return TemplateParseVisitor;}();var NonBindableVisitor=/** @class */function(){function NonBindableVisitor(){}NonBindableVisitor.prototype.visitElement=function(ast,parent){var preparsedElement=preparseElement(ast);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE||preparsedElement.type===PreparsedElementType.STYLESHEET){// Skipping <script> for security reasons
// Skipping <style> and stylesheets as we already processed them
// in the StyleCompiler
return null;}var attrNameAndValues=ast.attrs.map(function(attr){return[attr.name,attr.value];});var selector=createElementCssSelector(ast.name,attrNameAndValues);var ngContentIndex=parent.findNgContentIndex(selector);var children=visitAll(this,ast.children,EMPTY_ELEMENT_CONTEXT);return new ElementAst(ast.name,visitAll(this,ast.attrs),[],[],[],[],[],false,[],children,ngContentIndex,ast.sourceSpan,ast.endSourceSpan);};NonBindableVisitor.prototype.visitComment=function(comment,context){return null;};NonBindableVisitor.prototype.visitAttribute=function(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);};NonBindableVisitor.prototype.visitText=function(text,parent){var ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR());return new TextAst(text.value,ngContentIndex,text.sourceSpan);};NonBindableVisitor.prototype.visitExpansion=function(expansion,context){return expansion;};NonBindableVisitor.prototype.visitExpansionCase=function(expansionCase,context){return expansionCase;};return NonBindableVisitor;}();/**
 * A reference to an element or directive in a template. E.g., the reference in this template:
 *
 * <div #myMenu="coolMenu">
 *
 * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}
 */var ElementOrDirectiveRef=/** @class */function(){function ElementOrDirectiveRef(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}/** Gets whether this is a reference to the given directive. */ElementOrDirectiveRef.prototype.isReferenceToDirective=function(directive){return splitExportAs(directive.exportAs).indexOf(this.value)!==-1;};return ElementOrDirectiveRef;}();/** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */function splitExportAs(exportAs){return exportAs?exportAs.split(',').map(function(e){return e.trim();}):[];}function splitClasses(classAttrValue){return classAttrValue.trim().split(/\s+/g);}var ElementContext=/** @class */function(){function ElementContext(isTemplateElement,_ngContentIndexMatcher,_wildcardNgContentIndex,providerContext){this.isTemplateElement=isTemplateElement;this._ngContentIndexMatcher=_ngContentIndexMatcher;this._wildcardNgContentIndex=_wildcardNgContentIndex;this.providerContext=providerContext;}ElementContext.create=function(isTemplateElement,directives,providerContext){var matcher=new SelectorMatcher();var wildcardNgContentIndex=null;var component=directives.find(function(directive){return directive.directive.isComponent;});if(component){var ngContentSelectors=component.directive.template.ngContentSelectors;for(var i=0;i<ngContentSelectors.length;i++){var selector=ngContentSelectors[i];if(selector==='*'){wildcardNgContentIndex=i;}else{matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]),i);}}}return new ElementContext(isTemplateElement,matcher,wildcardNgContentIndex,providerContext);};ElementContext.prototype.findNgContentIndex=function(selector){var ngContentIndices=[];this._ngContentIndexMatcher.match(selector,function(selector,ngContentIndex){ngContentIndices.push(ngContentIndex);});ngContentIndices.sort();if(this._wildcardNgContentIndex!=null){ngContentIndices.push(this._wildcardNgContentIndex);}return ngContentIndices.length>0?ngContentIndices[0]:null;};return ElementContext;}();function createElementCssSelector(elementName,attributes){var cssSelector=new CssSelector();var elNameNoNs=splitNsName(elementName)[1];cssSelector.setElement(elNameNoNs);for(var i=0;i<attributes.length;i++){var attrName=attributes[i][0];var attrNameNoNs=splitNsName(attrName)[1];var attrValue=attributes[i][1];cssSelector.addAttribute(attrNameNoNs,attrValue);if(attrName.toLowerCase()==CLASS_ATTR){var classes=splitClasses(attrValue);classes.forEach(function(className){return cssSelector.addClassName(className);});}}return cssSelector;}var EMPTY_ELEMENT_CONTEXT=new ElementContext(true,new SelectorMatcher(),null,null);var NON_BINDABLE_VISITOR=new NonBindableVisitor();function _isEmptyTextNode(node){return node instanceof Text&&node.value.trim().length==0;}function removeSummaryDuplicates(items){var map=new Map();items.forEach(function(item){if(!map.get(item.type.reference)){map.set(item.type.reference,item);}});return Array.from(map.values());}function isEmptyExpression(ast){if(ast instanceof ASTWithSource){ast=ast.ast;}return ast instanceof EmptyExpr;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EventHandlerVars=/** @class */function(){function EventHandlerVars(){}EventHandlerVars.event=variable('$event');return EventHandlerVars;}();var ConvertActionBindingResult=/** @class */function(){function ConvertActionBindingResult(/**
     * Render2 compatible statements,
     */stmts,/**
     * Variable name used with render2 compatible statements.
     */allowDefault){this.stmts=stmts;this.allowDefault=allowDefault;/**
         * This is bit of a hack. It converts statements which render2 expects to statements which are
         * expected by render3.
         *
         * Example: `<div click="doSomething($event)">` will generate:
         *
         * Render3:
         * ```
         * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);
         * return pd_b;
         * ```
         *
         * but render2 expects:
         * ```
         * return ctx.doSomething($event);
         * ```
         */ // TODO(misko): remove this hack once we no longer support ViewEngine.
this.render3Stmts=stmts.map(function(statement){if(statement instanceof DeclareVarStmt&&statement.name==allowDefault.name&&statement.value instanceof BinaryOperatorExpr){var lhs=statement.value.lhs;return new ReturnStatement(lhs.value);}return statement;});}return ConvertActionBindingResult;}();/**
 * Converts the given expression AST into an executable output AST, assuming the expression is
 * used in an action binding (e.g. an event handler).
 */function convertActionBinding(localResolver,implicitReceiver,action,bindingId,interpolationFunction){if(!localResolver){localResolver=new DefaultLocalResolver();}var actionWithoutBuiltins=convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){// Note: no caching for literal arrays in actions.
return function(args){return literalArr(args);};},createLiteralMapConverter:function createLiteralMapConverter(keys){// Note: no caching for literal maps in actions.
return function(values){var entries=keys.map(function(k,i){return{key:k.key,value:values[i],quoted:k.quoted};});return literalMap(entries);};},createPipeConverter:function createPipeConverter(name){throw new Error("Illegal State: Actions are not allowed to contain pipes. Pipe: "+name);}},action);var visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId,interpolationFunction);var actionStmts=[];flattenStatements(actionWithoutBuiltins.visit(visitor,_Mode.Statement),actionStmts);prependTemporaryDecls(visitor.temporaryCount,bindingId,actionStmts);var lastIndex=actionStmts.length-1;var preventDefaultVar=null;if(lastIndex>=0){var lastStatement=actionStmts[lastIndex];var returnExpr=convertStmtIntoExpression(lastStatement);if(returnExpr){// Note: We need to cast the result of the method call to dynamic,
// as it might be a void method!
preventDefaultVar=createPreventDefaultVar(bindingId);actionStmts[lastIndex]=preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false))).toDeclStmt(null,[StmtModifier.Final]);}}return new ConvertActionBindingResult(actionStmts,preventDefaultVar);}function convertPropertyBindingBuiltins(converterFactory,ast){return convertBuiltins(converterFactory,ast);}var ConvertPropertyBindingResult=/** @class */function(){function ConvertPropertyBindingResult(stmts,currValExpr){this.stmts=stmts;this.currValExpr=currValExpr;}return ConvertPropertyBindingResult;}();var BindingForm;(function(BindingForm){// The general form of binding expression, supports all expressions.
BindingForm[BindingForm["General"]=0]="General";// Try to generate a simple binding (no temporaries or statements)
// otherwise generate a general binding
BindingForm[BindingForm["TrySimple"]=1]="TrySimple";})(BindingForm||(BindingForm={}));/**
 * Converts the given expression AST into an executable output AST, assuming the expression
 * is used in property binding. The expression has to be preprocessed via
 * `convertPropertyBindingBuiltins`.
 */function convertPropertyBinding(localResolver,implicitReceiver,expressionWithoutBuiltins,bindingId,form,interpolationFunction){if(!localResolver){localResolver=new DefaultLocalResolver();}var currValExpr=createCurrValueExpr(bindingId);var stmts=[];var visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId,interpolationFunction);var outputExpr=expressionWithoutBuiltins.visit(visitor,_Mode.Expression);if(visitor.temporaryCount){for(var i=0;i<visitor.temporaryCount;i++){stmts.push(temporaryDeclaration(bindingId,i));}}else if(form==BindingForm.TrySimple){return new ConvertPropertyBindingResult([],outputExpr);}stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE,[StmtModifier.Final]));return new ConvertPropertyBindingResult(stmts,currValExpr);}function convertBuiltins(converterFactory,ast){var visitor=new _BuiltinAstConverter(converterFactory);return ast.visit(visitor);}function temporaryName(bindingId,temporaryNumber){return"tmp_"+bindingId+"_"+temporaryNumber;}function temporaryDeclaration(bindingId,temporaryNumber){return new DeclareVarStmt(temporaryName(bindingId,temporaryNumber),NULL_EXPR);}function prependTemporaryDecls(temporaryCount,bindingId,statements){for(var i=temporaryCount-1;i>=0;i--){statements.unshift(temporaryDeclaration(bindingId,i));}}var _Mode;(function(_Mode){_Mode[_Mode["Statement"]=0]="Statement";_Mode[_Mode["Expression"]=1]="Expression";})(_Mode||(_Mode={}));function ensureStatementMode(mode,ast){if(mode!==_Mode.Statement){throw new Error("Expected a statement, but saw "+ast);}}function ensureExpressionMode(mode,ast){if(mode!==_Mode.Expression){throw new Error("Expected an expression, but saw "+ast);}}function convertToStatementIfNeeded(mode,expr){if(mode===_Mode.Statement){return expr.toStmt();}else{return expr;}}var _BuiltinAstConverter=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(_BuiltinAstConverter,_super);function _BuiltinAstConverter(_converterFactory){var _this=_super.call(this)||this;_this._converterFactory=_converterFactory;return _this;}_BuiltinAstConverter.prototype.visitPipe=function(ast,context){var _this=this;var args=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([ast.exp],ast.args).map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createPipeConverter(ast.name,args.length));};_BuiltinAstConverter.prototype.visitLiteralArray=function(ast,context){var _this=this;var args=ast.expressions.map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createLiteralArrayConverter(ast.expressions.length));};_BuiltinAstConverter.prototype.visitLiteralMap=function(ast,context){var _this=this;var args=ast.values.map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createLiteralMapConverter(ast.keys));};return _BuiltinAstConverter;}(AstTransformer);var _AstToIrVisitor=/** @class */function(){function _AstToIrVisitor(_localResolver,_implicitReceiver,bindingId,interpolationFunction){this._localResolver=_localResolver;this._implicitReceiver=_implicitReceiver;this.bindingId=bindingId;this.interpolationFunction=interpolationFunction;this._nodeMap=new Map();this._resultMap=new Map();this._currentTemporary=0;this.temporaryCount=0;}_AstToIrVisitor.prototype.visitBinary=function(ast,mode){var op;switch(ast.operation){case'+':op=BinaryOperator.Plus;break;case'-':op=BinaryOperator.Minus;break;case'*':op=BinaryOperator.Multiply;break;case'/':op=BinaryOperator.Divide;break;case'%':op=BinaryOperator.Modulo;break;case'&&':op=BinaryOperator.And;break;case'||':op=BinaryOperator.Or;break;case'==':op=BinaryOperator.Equals;break;case'!=':op=BinaryOperator.NotEquals;break;case'===':op=BinaryOperator.Identical;break;case'!==':op=BinaryOperator.NotIdentical;break;case'<':op=BinaryOperator.Lower;break;case'>':op=BinaryOperator.Bigger;break;case'<=':op=BinaryOperator.LowerEquals;break;case'>=':op=BinaryOperator.BiggerEquals;break;default:throw new Error("Unsupported operation "+ast.operation);}return convertToStatementIfNeeded(mode,new BinaryOperatorExpr(op,this._visit(ast.left,_Mode.Expression),this._visit(ast.right,_Mode.Expression)));};_AstToIrVisitor.prototype.visitChain=function(ast,mode){ensureStatementMode(mode,ast);return this.visitAll(ast.expressions,mode);};_AstToIrVisitor.prototype.visitConditional=function(ast,mode){var value=this._visit(ast.condition,_Mode.Expression);return convertToStatementIfNeeded(mode,value.conditional(this._visit(ast.trueExp,_Mode.Expression),this._visit(ast.falseExp,_Mode.Expression)));};_AstToIrVisitor.prototype.visitPipe=function(ast,mode){throw new Error("Illegal state: Pipes should have been converted into functions. Pipe: "+ast.name);};_AstToIrVisitor.prototype.visitFunctionCall=function(ast,mode){var convertedArgs=this.visitAll(ast.args,_Mode.Expression);var fnResult;if(ast instanceof BuiltinFunctionCall){fnResult=ast.converter(convertedArgs);}else{fnResult=this._visit(ast.target,_Mode.Expression).callFn(convertedArgs);}return convertToStatementIfNeeded(mode,fnResult);};_AstToIrVisitor.prototype.visitImplicitReceiver=function(ast,mode){ensureExpressionMode(mode,ast);return this._implicitReceiver;};_AstToIrVisitor.prototype.visitInterpolation=function(ast,mode){ensureExpressionMode(mode,ast);var args=[literal(ast.expressions.length)];for(var i=0;i<ast.strings.length-1;i++){args.push(literal(ast.strings[i]));args.push(this._visit(ast.expressions[i],_Mode.Expression));}args.push(literal(ast.strings[ast.strings.length-1]));if(this.interpolationFunction){return this.interpolationFunction(args);}return ast.expressions.length<=9?importExpr(Identifiers.inlineInterpolate).callFn(args):importExpr(Identifiers.interpolate).callFn([args[0],literalArr(args.slice(1))]);};_AstToIrVisitor.prototype.visitKeyedRead=function(ast,mode){var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{return convertToStatementIfNeeded(mode,this._visit(ast.obj,_Mode.Expression).key(this._visit(ast.key,_Mode.Expression)));}};_AstToIrVisitor.prototype.visitKeyedWrite=function(ast,mode){var obj=this._visit(ast.obj,_Mode.Expression);var key=this._visit(ast.key,_Mode.Expression);var value=this._visit(ast.value,_Mode.Expression);return convertToStatementIfNeeded(mode,obj.key(key).set(value));};_AstToIrVisitor.prototype.visitLiteralArray=function(ast,mode){throw new Error("Illegal State: literal arrays should have been converted into functions");};_AstToIrVisitor.prototype.visitLiteralMap=function(ast,mode){throw new Error("Illegal State: literal maps should have been converted into functions");};_AstToIrVisitor.prototype.visitLiteralPrimitive=function(ast,mode){// For literal values of null, undefined, true, or false allow type interference
// to infer the type.
var type=ast.value===null||ast.value===undefined||ast.value===true||ast.value===true?INFERRED_TYPE:undefined;return convertToStatementIfNeeded(mode,literal(ast.value,type));};_AstToIrVisitor.prototype._getLocal=function(name){return this._localResolver.getLocal(name);};_AstToIrVisitor.prototype.visitMethodCall=function(ast,mode){if(ast.receiver instanceof ImplicitReceiver&&ast.name=='$any'){var args=this.visitAll(ast.args,_Mode.Expression);if(args.length!=1){throw new Error("Invalid call to $any, expected 1 argument but received "+(args.length||'none'));}return args[0].cast(DYNAMIC_TYPE);}var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var args=this.visitAll(ast.args,_Mode.Expression);var result=null;var receiver=this._visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){var varExpr=this._getLocal(ast.name);if(varExpr){result=varExpr.callFn(args);}}if(result==null){result=receiver.callMethod(ast.name,args);}return convertToStatementIfNeeded(mode,result);}};_AstToIrVisitor.prototype.visitPrefixNot=function(ast,mode){return convertToStatementIfNeeded(mode,not(this._visit(ast.expression,_Mode.Expression)));};_AstToIrVisitor.prototype.visitNonNullAssert=function(ast,mode){return convertToStatementIfNeeded(mode,assertNotNull(this._visit(ast.expression,_Mode.Expression)));};_AstToIrVisitor.prototype.visitPropertyRead=function(ast,mode){var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var result=null;var receiver=this._visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){result=this._getLocal(ast.name);}if(result==null){result=receiver.prop(ast.name);}return convertToStatementIfNeeded(mode,result);}};_AstToIrVisitor.prototype.visitPropertyWrite=function(ast,mode){var receiver=this._visit(ast.receiver,_Mode.Expression);var varExpr=null;if(receiver===this._implicitReceiver){var localExpr=this._getLocal(ast.name);if(localExpr){if(localExpr instanceof ReadPropExpr){// If the local variable is a property read expression, it's a reference
// to a 'context.property' value and will be used as the target of the
// write expression.
varExpr=localExpr;}else{// Otherwise it's an error.
throw new Error('Cannot assign to a reference or variable!');}}}// If no local expression could be produced, use the original receiver's
// property as the target.
if(varExpr===null){varExpr=receiver.prop(ast.name);}return convertToStatementIfNeeded(mode,varExpr.set(this._visit(ast.value,_Mode.Expression)));};_AstToIrVisitor.prototype.visitSafePropertyRead=function(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);};_AstToIrVisitor.prototype.visitSafeMethodCall=function(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);};_AstToIrVisitor.prototype.visitAll=function(asts,mode){var _this=this;return asts.map(function(ast){return _this._visit(ast,mode);});};_AstToIrVisitor.prototype.visitQuote=function(ast,mode){throw new Error("Quotes are not supported for evaluation!\n        Statement: "+ast.uninterpretedExpression+" located at "+ast.location);};_AstToIrVisitor.prototype._visit=function(ast,mode){var result=this._resultMap.get(ast);if(result)return result;return(this._nodeMap.get(ast)||ast).visit(this,mode);};_AstToIrVisitor.prototype.convertSafeAccess=function(ast,leftMostSafe,mode){// If the expression contains a safe access node on the left it needs to be converted to
// an expression that guards the access to the member by checking the receiver for blank. As
// execution proceeds from left to right, the left most part of the expression must be guarded
// first but, because member access is left associative, the right side of the expression is at
// the top of the AST. The desired result requires lifting a copy of the the left part of the
// expression up to test it for blank before generating the unguarded version.
// Consider, for example the following expression: a?.b.c?.d.e
// This results in the ast:
//         .
//        / \
//       ?.   e
//      /  \
//     .    d
//    / \
//   ?.  c
//  /  \
// a    b
// The following tree should be generated:
//
//        /---- ? ----\
//       /      |      \
//     a   /--- ? ---\  null
//        /     |     \
//       .      .     null
//      / \    / \
//     .  c   .   e
//    / \    / \
//   a   b  ,   d
//         / \
//        .   c
//       / \
//      a   b
//
// Notice that the first guard condition is the left hand of the left most safe access node
// which comes in as leftMostSafe to this routine.
var guardedExpression=this._visit(leftMostSafe.receiver,_Mode.Expression);var temporary=undefined;if(this.needsTemporary(leftMostSafe.receiver)){// If the expression has method calls or pipes then we need to save the result into a
// temporary variable to avoid calling stateful or impure code more than once.
temporary=this.allocateTemporary();// Preserve the result in the temporary variable
guardedExpression=temporary.set(guardedExpression);// Ensure all further references to the guarded expression refer to the temporary instead.
this._resultMap.set(leftMostSafe.receiver,temporary);}var condition=guardedExpression.isBlank();// Convert the ast to an unguarded access to the receiver's member. The map will substitute
// leftMostNode with its unguarded version in the call to `this.visit()`.
if(leftMostSafe instanceof SafeMethodCall){this._nodeMap.set(leftMostSafe,new MethodCall(leftMostSafe.span,leftMostSafe.receiver,leftMostSafe.name,leftMostSafe.args));}else{this._nodeMap.set(leftMostSafe,new PropertyRead(leftMostSafe.span,leftMostSafe.receiver,leftMostSafe.name));}// Recursively convert the node now without the guarded member access.
var access=this._visit(ast,_Mode.Expression);// Remove the mapping. This is not strictly required as the converter only traverses each node
// once but is safer if the conversion is changed to traverse the nodes more than once.
this._nodeMap.delete(leftMostSafe);// If we allocated a temporary, release it.
if(temporary){this.releaseTemporary(temporary);}// Produce the conditional
return convertToStatementIfNeeded(mode,condition.conditional(literal(null),access));};// Given a expression of the form a?.b.c?.d.e the the left most safe node is
// the (a?.b). The . and ?. are left associative thus can be rewritten as:
// ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or
// safe method call as this needs be transform initially to:
//   a == null ? null : a.c.b.c?.d.e
// then to:
//   a == null ? null : a.b.c == null ? null : a.b.c.d.e
_AstToIrVisitor.prototype.leftMostSafeNode=function(ast){var _this=this;var visit=function visit(visitor,ast){return(_this._nodeMap.get(ast)||ast).visit(visitor);};return ast.visit({visitBinary:function visitBinary(ast){return null;},visitChain:function visitChain(ast){return null;},visitConditional:function visitConditional(ast){return null;},visitFunctionCall:function visitFunctionCall(ast){return null;},visitImplicitReceiver:function visitImplicitReceiver(ast){return null;},visitInterpolation:function visitInterpolation(ast){return null;},visitKeyedRead:function visitKeyedRead(ast){return visit(this,ast.obj);},visitKeyedWrite:function visitKeyedWrite(ast){return null;},visitLiteralArray:function visitLiteralArray(ast){return null;},visitLiteralMap:function visitLiteralMap(ast){return null;},visitLiteralPrimitive:function visitLiteralPrimitive(ast){return null;},visitMethodCall:function visitMethodCall(ast){return visit(this,ast.receiver);},visitPipe:function visitPipe(ast){return null;},visitPrefixNot:function visitPrefixNot(ast){return null;},visitNonNullAssert:function visitNonNullAssert(ast){return null;},visitPropertyRead:function visitPropertyRead(ast){return visit(this,ast.receiver);},visitPropertyWrite:function visitPropertyWrite(ast){return null;},visitQuote:function visitQuote(ast){return null;},visitSafeMethodCall:function visitSafeMethodCall(ast){return visit(this,ast.receiver)||ast;},visitSafePropertyRead:function visitSafePropertyRead(ast){return visit(this,ast.receiver)||ast;}});};// Returns true of the AST includes a method or a pipe indicating that, if the
// expression is used as the target of a safe property or method access then
// the expression should be stored into a temporary variable.
_AstToIrVisitor.prototype.needsTemporary=function(ast){var _this=this;var visit=function visit(visitor,ast){return ast&&(_this._nodeMap.get(ast)||ast).visit(visitor);};var visitSome=function visitSome(visitor,ast){return ast.some(function(ast){return visit(visitor,ast);});};return ast.visit({visitBinary:function visitBinary(ast){return visit(this,ast.left)||visit(this,ast.right);},visitChain:function visitChain(ast){return false;},visitConditional:function visitConditional(ast){return visit(this,ast.condition)||visit(this,ast.trueExp)||visit(this,ast.falseExp);},visitFunctionCall:function visitFunctionCall(ast){return true;},visitImplicitReceiver:function visitImplicitReceiver(ast){return false;},visitInterpolation:function visitInterpolation(ast){return visitSome(this,ast.expressions);},visitKeyedRead:function visitKeyedRead(ast){return false;},visitKeyedWrite:function visitKeyedWrite(ast){return false;},visitLiteralArray:function visitLiteralArray(ast){return true;},visitLiteralMap:function visitLiteralMap(ast){return true;},visitLiteralPrimitive:function visitLiteralPrimitive(ast){return false;},visitMethodCall:function visitMethodCall(ast){return true;},visitPipe:function visitPipe(ast){return true;},visitPrefixNot:function visitPrefixNot(ast){return visit(this,ast.expression);},visitNonNullAssert:function visitNonNullAssert(ast){return visit(this,ast.expression);},visitPropertyRead:function visitPropertyRead(ast){return false;},visitPropertyWrite:function visitPropertyWrite(ast){return false;},visitQuote:function visitQuote(ast){return false;},visitSafeMethodCall:function visitSafeMethodCall(ast){return true;},visitSafePropertyRead:function visitSafePropertyRead(ast){return false;}});};_AstToIrVisitor.prototype.allocateTemporary=function(){var tempNumber=this._currentTemporary++;this.temporaryCount=Math.max(this._currentTemporary,this.temporaryCount);return new ReadVarExpr(temporaryName(this.bindingId,tempNumber));};_AstToIrVisitor.prototype.releaseTemporary=function(temporary){this._currentTemporary--;if(temporary.name!=temporaryName(this.bindingId,this._currentTemporary)){throw new Error("Temporary "+temporary.name+" released out of order");}};return _AstToIrVisitor;}();function flattenStatements(arg,output){if(Array.isArray(arg)){arg.forEach(function(entry){return flattenStatements(entry,output);});}else{output.push(arg);}}var DefaultLocalResolver=/** @class */function(){function DefaultLocalResolver(){}DefaultLocalResolver.prototype.getLocal=function(name){if(name===EventHandlerVars.event.name){return EventHandlerVars.event;}return null;};return DefaultLocalResolver;}();function createCurrValueExpr(bindingId){return variable("currVal_"+bindingId);// fix syntax highlighting: `
}function createPreventDefaultVar(bindingId){return variable("pd_"+bindingId);}function convertStmtIntoExpression(stmt){if(stmt instanceof ExpressionStatement){return stmt.expr;}else if(stmt instanceof ReturnStatement){return stmt.value;}return null;}var BuiltinFunctionCall=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(BuiltinFunctionCall,_super);function BuiltinFunctionCall(span,args,converter){var _this=_super.call(this,span,null,args)||this;_this.args=args;_this.converter=converter;return _this;}return BuiltinFunctionCall;}(FunctionCall);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Generates code that is used to type check templates.
 */var TypeCheckCompiler=/** @class */function(){function TypeCheckCompiler(options,reflector){this.options=options;this.reflector=reflector;}/**
     * Important notes:
     * - This must not produce new `import` statements, but only refer to types outside
     *   of the file via the variables provided via externalReferenceVars.
     *   This allows Typescript to reuse the old program's structure as no imports have changed.
     * - This must not produce any exports, as this would pollute the .d.ts file
     *   and also violate the point above.
     */TypeCheckCompiler.prototype.compileComponent=function(componentId,component,template,usedPipes,externalReferenceVars,ctx){var _this=this;var pipes=new Map();usedPipes.forEach(function(p){return pipes.set(p.name,p.type.reference);});var embeddedViewCount=0;var viewBuilderFactory=function viewBuilderFactory(parent,guards){var embeddedViewIndex=embeddedViewCount++;return new ViewBuilder(_this.options,_this.reflector,externalReferenceVars,parent,component.type.reference,component.isHost,embeddedViewIndex,pipes,guards,ctx,viewBuilderFactory);};var visitor=viewBuilderFactory(null,[]);visitor.visitAll([],template);return visitor.build(componentId);};return TypeCheckCompiler;}();var DYNAMIC_VAR_NAME='_any';var TypeCheckLocalResolver=/** @class */function(){function TypeCheckLocalResolver(){}TypeCheckLocalResolver.prototype.getLocal=function(name){if(name===EventHandlerVars.event.name){// References to the event should not be type-checked.
// TODO(chuckj): determine a better type for the event.
return variable(DYNAMIC_VAR_NAME);}return null;};return TypeCheckLocalResolver;}();var defaultResolver=new TypeCheckLocalResolver();var ViewBuilder=/** @class */function(){function ViewBuilder(options,reflector,externalReferenceVars,parent,component,isHostComponent,embeddedViewIndex,pipes,guards,ctx,viewBuilderFactory){this.options=options;this.reflector=reflector;this.externalReferenceVars=externalReferenceVars;this.parent=parent;this.component=component;this.isHostComponent=isHostComponent;this.embeddedViewIndex=embeddedViewIndex;this.pipes=pipes;this.guards=guards;this.ctx=ctx;this.viewBuilderFactory=viewBuilderFactory;this.refOutputVars=new Map();this.variables=[];this.children=[];this.updates=[];this.actions=[];}ViewBuilder.prototype.getOutputVar=function(type){var varName;if(type===this.component&&this.isHostComponent){varName=DYNAMIC_VAR_NAME;}else if(type instanceof StaticSymbol){varName=this.externalReferenceVars.get(type);}else{varName=DYNAMIC_VAR_NAME;}if(!varName){throw new Error("Illegal State: referring to a type without a variable "+JSON.stringify(type));}return varName;};ViewBuilder.prototype.getTypeGuardExpressions=function(ast){var e_1,_a,e_2,_b;var result=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this.guards);try{for(var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(ast.directives),_d=_c.next();!_d.done;_d=_c.next()){var directive=_d.value;try{for(var _e=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(directive.inputs),_f=_e.next();!_f.done;_f=_e.next()){var input=_f.value;var guard=directive.directive.guards[input.directiveName];if(guard){var useIf=guard==='UseIf';result.push({guard:guard,useIf:useIf,expression:{context:this.component,value:input.value}});}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_1)throw e_1.error;}}return result;};ViewBuilder.prototype.visitAll=function(variables,astNodes){this.variables=variables;templateVisitAll(this,astNodes);};ViewBuilder.prototype.build=function(componentId,targetStatements){var _this=this;if(targetStatements===void 0){targetStatements=[];}var e_3,_a;this.children.forEach(function(child){return child.build(componentId,targetStatements);});var viewStmts=[variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];var bindingCount=0;this.updates.forEach(function(expression){var _a=_this.preprocessUpdateExpression(expression),sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+bindingCount++;var nameResolver=context===_this.component?_this:defaultResolver;var _b=convertPropertyBinding(nameResolver,variable(_this.getOutputVar(context)),value,bindingId,BindingForm.General),stmts=_b.stmts,currValExpr=_b.currValExpr;stmts.push(new ExpressionStatement(currValExpr));viewStmts.push.apply(viewStmts,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));});this.actions.forEach(function(_a){var sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+bindingCount++;var nameResolver=context===_this.component?_this:defaultResolver;var stmts=convertActionBinding(nameResolver,variable(_this.getOutputVar(context)),value,bindingId).stmts;viewStmts.push.apply(viewStmts,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));});if(this.guards.length){var guardExpression=undefined;try{for(var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(this.guards),_c=_b.next();!_c.done;_c=_b.next()){var guard=_c.value;var _d=this.preprocessUpdateExpression(guard.expression),context=_d.context,value=_d.value;var bindingId=""+bindingCount++;var nameResolver=context===this.component?this:defaultResolver;// We only support support simple expressions and ignore others as they
// are unlikely to affect type narrowing.
var _e=convertPropertyBinding(nameResolver,variable(this.getOutputVar(context)),value,bindingId,BindingForm.TrySimple),stmts=_e.stmts,currValExpr=_e.currValExpr;if(stmts.length==0){var guardClause=guard.useIf?currValExpr:this.ctx.importExpr(guard.guard).callFn([currValExpr]);guardExpression=guardExpression?guardExpression.and(guardClause):guardClause;}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_3)throw e_3.error;}}if(guardExpression){viewStmts=[new IfStmt(guardExpression,viewStmts)];}}var viewName="_View_"+componentId+"_"+this.embeddedViewIndex;var viewFactory=new DeclareFunctionStmt(viewName,[],viewStmts);targetStatements.push(viewFactory);return targetStatements;};ViewBuilder.prototype.visitBoundText=function(ast,context){var _this=this;var astWithSource=ast.value;var inter=astWithSource.ast;inter.expressions.forEach(function(expr){return _this.updates.push({context:_this.component,value:expr,sourceSpan:ast.sourceSpan});});};ViewBuilder.prototype.visitEmbeddedTemplate=function(ast,context){this.visitElementOrTemplate(ast);// Note: The old view compiler used to use an `any` type
// for the context in any embedded view.
// We keep this behaivor behind a flag for now.
if(this.options.fullTemplateTypeCheck){// Find any applicable type guards. For example, NgIf has a type guard on ngIf
// (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only
// stamped out if ngIf is truthy so any bindings in the template can assume that,
// if a nullable type is used for ngIf, that expression is not null or undefined.
var guards=this.getTypeGuardExpressions(ast);var childVisitor=this.viewBuilderFactory(this,guards);this.children.push(childVisitor);childVisitor.visitAll(ast.variables,ast.children);}};ViewBuilder.prototype.visitElement=function(ast,context){var _this=this;this.visitElementOrTemplate(ast);ast.inputs.forEach(function(inputAst){_this.updates.push({context:_this.component,value:inputAst.value,sourceSpan:inputAst.sourceSpan});});templateVisitAll(this,ast.children);};ViewBuilder.prototype.visitElementOrTemplate=function(ast){var _this=this;ast.directives.forEach(function(dirAst){_this.visitDirective(dirAst);});ast.references.forEach(function(ref){var outputVarType=null;// Note: The old view compiler used to use an `any` type
// for directives exposed via `exportAs`.
// We keep this behaivor behind a flag for now.
if(ref.value&&ref.value.identifier&&_this.options.fullTemplateTypeCheck){outputVarType=ref.value.identifier.reference;}else{outputVarType=BuiltinTypeName.Dynamic;}_this.refOutputVars.set(ref.name,outputVarType);});ast.outputs.forEach(function(outputAst){_this.actions.push({context:_this.component,value:outputAst.handler,sourceSpan:outputAst.sourceSpan});});};ViewBuilder.prototype.visitDirective=function(dirAst){var _this=this;var dirType=dirAst.directive.type.reference;dirAst.inputs.forEach(function(input){return _this.updates.push({context:_this.component,value:input.value,sourceSpan:input.sourceSpan});});// Note: The old view compiler used to use an `any` type
// for expressions in host properties / events.
// We keep this behaivor behind a flag for now.
if(this.options.fullTemplateTypeCheck){dirAst.hostProperties.forEach(function(inputAst){return _this.updates.push({context:dirType,value:inputAst.value,sourceSpan:inputAst.sourceSpan});});dirAst.hostEvents.forEach(function(hostEventAst){return _this.actions.push({context:dirType,value:hostEventAst.handler,sourceSpan:hostEventAst.sourceSpan});});}};ViewBuilder.prototype.getLocal=function(name){if(name==EventHandlerVars.event.name){return variable(this.getOutputVar(BuiltinTypeName.Dynamic));}for(var currBuilder=this;currBuilder;currBuilder=currBuilder.parent){var outputVarType=void 0;// check references
outputVarType=currBuilder.refOutputVars.get(name);if(outputVarType==null){// check variables
var varAst=currBuilder.variables.find(function(varAst){return varAst.name===name;});if(varAst){outputVarType=BuiltinTypeName.Dynamic;}}if(outputVarType!=null){return variable(this.getOutputVar(outputVarType));}}return null;};ViewBuilder.prototype.pipeOutputVar=function(name){var pipe=this.pipes.get(name);if(!pipe){throw new Error("Illegal State: Could not find pipe "+name+" in template of "+this.component);}return this.getOutputVar(pipe);};ViewBuilder.prototype.preprocessUpdateExpression=function(expression){var _this=this;return{sourceSpan:expression.sourceSpan,context:expression.context,value:convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){return function(args){var arr=literalArr(args);// Note: The old view compiler used to use an `any` type
// for arrays.
return _this.options.fullTemplateTypeCheck?arr:arr.cast(DYNAMIC_TYPE);};},createLiteralMapConverter:function createLiteralMapConverter(keys){return function(values){var entries=keys.map(function(k,i){return{key:k.key,value:values[i],quoted:k.quoted};});var map=literalMap(entries);// Note: The old view compiler used to use an `any` type
// for maps.
return _this.options.fullTemplateTypeCheck?map:map.cast(DYNAMIC_TYPE);};},createPipeConverter:function createPipeConverter(name,argCount){return function(args){// Note: The old view compiler used to use an `any` type
// for pipes.
var pipeExpr=_this.options.fullTemplateTypeCheck?variable(_this.pipeOutputVar(name)):variable(_this.getOutputVar(BuiltinTypeName.Dynamic));return pipeExpr.callMethod('transform',args);};}},expression.value)};};ViewBuilder.prototype.visitNgContent=function(ast,context){};ViewBuilder.prototype.visitText=function(ast,context){};ViewBuilder.prototype.visitDirectiveProperty=function(ast,context){};ViewBuilder.prototype.visitReference=function(ast,context){};ViewBuilder.prototype.visitVariable=function(ast,context){};ViewBuilder.prototype.visitEvent=function(ast,context){};ViewBuilder.prototype.visitElementProperty=function(ast,context){};ViewBuilder.prototype.visitAttr=function(ast,context){};return ViewBuilder;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CLASS_ATTR$1='class';var STYLE_ATTR='style';var IMPLICIT_TEMPLATE_VAR='\$implicit';var ViewCompileResult=/** @class */function(){function ViewCompileResult(viewClassVar,rendererTypeVar){this.viewClassVar=viewClassVar;this.rendererTypeVar=rendererTypeVar;}return ViewCompileResult;}();var ViewCompiler=/** @class */function(){function ViewCompiler(_reflector){this._reflector=_reflector;}ViewCompiler.prototype.compileComponent=function(outputCtx,component,template,styles,usedPipes){var _this=this;var _a;var embeddedViewCount=0;var staticQueryIds=findStaticQueryIds(template);var renderComponentVarName=undefined;if(!component.isHost){var template_1=component.template;var customRenderData=[];if(template_1.animations&&template_1.animations.length){customRenderData.push(new LiteralMapEntry('animation',convertValueToOutputAst(outputCtx,template_1.animations),true));}var renderComponentVar=variable(rendererTypeName(component.type.reference));renderComponentVarName=renderComponentVar.name;outputCtx.statements.push(renderComponentVar.set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([new LiteralMapEntry('encapsulation',literal(template_1.encapsulation),false),new LiteralMapEntry('styles',styles,false),new LiteralMapEntry('data',new LiteralMapExpr(customRenderData),false)])])).toDeclStmt(importType(Identifiers.RendererType2),[StmtModifier.Final,StmtModifier.Exported]));}var viewBuilderFactory=function viewBuilderFactory(parent){var embeddedViewIndex=embeddedViewCount++;return new ViewBuilder$1(_this._reflector,outputCtx,parent,component,embeddedViewIndex,usedPipes,staticQueryIds,viewBuilderFactory);};var visitor=viewBuilderFactory(null);visitor.visitAll([],template);(_a=outputCtx.statements).push.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(visitor.build()));return new ViewCompileResult(visitor.viewName,renderComponentVarName);};return ViewCompiler;}();var LOG_VAR$1=variable('_l');var VIEW_VAR=variable('_v');var CHECK_VAR=variable('_ck');var COMP_VAR=variable('_co');var EVENT_NAME_VAR=variable('en');var ALLOW_DEFAULT_VAR=variable("ad");var ViewBuilder$1=/** @class */function(){function ViewBuilder(reflector,outputCtx,parent,component,embeddedViewIndex,usedPipes,staticQueryIds,viewBuilderFactory){this.reflector=reflector;this.outputCtx=outputCtx;this.parent=parent;this.component=component;this.embeddedViewIndex=embeddedViewIndex;this.usedPipes=usedPipes;this.staticQueryIds=staticQueryIds;this.viewBuilderFactory=viewBuilderFactory;this.nodes=[];this.purePipeNodeIndices=Object.create(null);// Need Object.create so that we don't have builtin values...
this.refNodeIndices=Object.create(null);this.variables=[];this.children=[];// TODO(tbosch): The old view compiler used to use an `any` type
// for the context in any embedded view. We keep this behaivor for now
// to be able to introduce the new view compiler without too many errors.
this.compType=this.embeddedViewIndex>0?DYNAMIC_TYPE:expressionType(outputCtx.importExpr(this.component.type.reference));this.viewName=viewClassName(this.component.type.reference,this.embeddedViewIndex);}ViewBuilder.prototype.visitAll=function(variables,astNodes){var _this=this;this.variables=variables;// create the pipes for the pure pipes immediately, so that we know their indices.
if(!this.parent){this.usedPipes.forEach(function(pipe){if(pipe.pure){_this.purePipeNodeIndices[pipe.name]=_this._createPipe(null,pipe);}});}if(!this.parent){var queryIds_1=staticViewQueryIds(this.staticQueryIds);this.component.viewQueries.forEach(function(query,queryIndex){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var queryId=queryIndex+1;var bindingType=query.first?0/* First */:1/* All */;var flags=134217728/* TypeViewQuery */|calcStaticDynamicQueryFlags(queryIds_1,queryId,query.first);_this.nodes.push(function(){return{sourceSpan:null,nodeFlags:flags,nodeDef:importExpr(Identifiers.queryDef).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType),false)])])};});});}templateVisitAll(this,astNodes);if(this.parent&&(astNodes.length===0||needsAdditionalRootNode(astNodes))){// if the view is an embedded view, then we need to add an additional root node in some cases
this.nodes.push(function(){return{sourceSpan:null,nodeFlags:1/* TypeElement */,nodeDef:importExpr(Identifiers.anchorDef).callFn([literal(0/* None */),NULL_EXPR,NULL_EXPR,literal(0)])};});}};ViewBuilder.prototype.build=function(targetStatements){if(targetStatements===void 0){targetStatements=[];}this.children.forEach(function(child){return child.build(targetStatements);});var _a=this._createNodeExpressions(),updateRendererStmts=_a.updateRendererStmts,updateDirectivesStmts=_a.updateDirectivesStmts,nodeDefExprs=_a.nodeDefExprs;var updateRendererFn=this._createUpdateFn(updateRendererStmts);var updateDirectivesFn=this._createUpdateFn(updateDirectivesStmts);var viewFlags=0/* None */;if(!this.parent&&this.component.changeDetection===ChangeDetectionStrategy.OnPush){viewFlags|=2/* OnPush */;}var viewFactory=new DeclareFunctionStmt(this.viewName,[new FnParam(LOG_VAR$1.name)],[new ReturnStatement(importExpr(Identifiers.viewDef).callFn([literal(viewFlags),literalArr(nodeDefExprs),updateDirectivesFn,updateRendererFn]))],importType(Identifiers.ViewDefinition),this.embeddedViewIndex===0?[StmtModifier.Exported]:[]);targetStatements.push(viewFactory);return targetStatements;};ViewBuilder.prototype._createUpdateFn=function(updateStmts){var updateFn;if(updateStmts.length>0){var preStmts=[];if(!this.component.isHost&&findReadVarNames(updateStmts).has(COMP_VAR.name)){preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));}updateFn=fn([new FnParam(CHECK_VAR.name,INFERRED_TYPE),new FnParam(VIEW_VAR.name,INFERRED_TYPE)],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(preStmts,updateStmts),INFERRED_TYPE);}else{updateFn=NULL_EXPR;}return updateFn;};ViewBuilder.prototype.visitNgContent=function(ast,context){// ngContentDef(ngContentIndex: number, index: number): NodeDef;
this.nodes.push(function(){return{sourceSpan:ast.sourceSpan,nodeFlags:8/* TypeNgContent */,nodeDef:importExpr(Identifiers.ngContentDef).callFn([literal(ast.ngContentIndex),literal(ast.index)])};});};ViewBuilder.prototype.visitText=function(ast,context){// Static text nodes have no check function
var checkIndex=-1;this.nodes.push(function(){return{sourceSpan:ast.sourceSpan,nodeFlags:2/* TypeText */,nodeDef:importExpr(Identifiers.textDef).callFn([literal(checkIndex),literal(ast.ngContentIndex),literalArr([literal(ast.value)])])};});};ViewBuilder.prototype.visitBoundText=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array
this.nodes.push(null);var astWithSource=ast.value;var inter=astWithSource.ast;var updateRendererExpressions=inter.expressions.map(function(expr,bindingIndex){return _this._preprocessUpdateExpression({nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:ast.sourceSpan,context:COMP_VAR,value:expr});});// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:2/* TypeText */,nodeDef:importExpr(Identifiers.textDef).callFn([literal(checkIndex),literal(ast.ngContentIndex),literalArr(inter.strings.map(function(s){return literal(s);}))]),updateRenderer:updateRendererExpressions};};};ViewBuilder.prototype.visitEmbeddedTemplate=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array
this.nodes.push(null);var _a=this._visitElementOrTemplate(nodeIndex,ast),flags=_a.flags,queryMatchesExpr=_a.queryMatchesExpr,hostEvents=_a.hostEvents;var childVisitor=this.viewBuilderFactory(this);this.children.push(childVisitor);childVisitor.visitAll(ast.variables,ast.children);var childCount=this.nodes.length-nodeIndex-1;// anchorDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,
//   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:
//   ViewDefinitionFactory): NodeDef;
this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:1/* TypeElement */|flags,nodeDef:importExpr(Identifiers.anchorDef).callFn([literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),_this._createElementHandleEventFn(nodeIndex,hostEvents),variable(childVisitor.viewName)])};};};ViewBuilder.prototype.visitElement=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array so we can add children
this.nodes.push(null);// Using a null element name creates an anchor.
var elName=isNgContainer(ast.name)?null:ast.name;var _a=this._visitElementOrTemplate(nodeIndex,ast),flags=_a.flags,usedEvents=_a.usedEvents,queryMatchesExpr=_a.queryMatchesExpr,dirHostBindings=_a.hostBindings,hostEvents=_a.hostEvents;var inputDefs=[];var updateRendererExpressions=[];var outputDefs=[];if(elName){var hostBindings=ast.inputs.map(function(inputAst){return{context:COMP_VAR,inputAst:inputAst,dirAst:null};}).concat(dirHostBindings);if(hostBindings.length){updateRendererExpressions=hostBindings.map(function(hostBinding,bindingIndex){return _this._preprocessUpdateExpression({context:hostBinding.context,nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:hostBinding.inputAst.sourceSpan,value:hostBinding.inputAst.value});});inputDefs=hostBindings.map(function(hostBinding){return elementBindingDef(hostBinding.inputAst,hostBinding.dirAst);});}outputDefs=usedEvents.map(function(_a){var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a,2),target=_b[0],eventName=_b[1];return literalArr([literal(target),literal(eventName)]);});}templateVisitAll(this,ast.children);var childCount=this.nodes.length-nodeIndex-1;var compAst=ast.directives.find(function(dirAst){return dirAst.directive.isComponent;});var compRendererType=NULL_EXPR;var compView=NULL_EXPR;if(compAst){compView=this.outputCtx.importExpr(compAst.directive.componentViewType);compRendererType=this.outputCtx.importExpr(compAst.directive.rendererType);}// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:1/* TypeElement */|flags,nodeDef:importExpr(Identifiers.elementDef).callFn([literal(checkIndex),literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),literal(elName),elName?fixedAttrsDef(ast):NULL_EXPR,inputDefs.length?literalArr(inputDefs):NULL_EXPR,outputDefs.length?literalArr(outputDefs):NULL_EXPR,_this._createElementHandleEventFn(nodeIndex,hostEvents),compView,compRendererType]),updateRenderer:updateRendererExpressions};};};ViewBuilder.prototype._visitElementOrTemplate=function(nodeIndex,ast){var _this=this;var flags=0/* None */;if(ast.hasViewContainer){flags|=16777216/* EmbeddedViews */;}var usedEvents=new Map();ast.outputs.forEach(function(event){var _a=elementEventNameAndTarget(event,null),name=_a.name,target=_a.target;usedEvents.set(elementEventFullName(target,name),[target,name]);});ast.directives.forEach(function(dirAst){dirAst.hostEvents.forEach(function(event){var _a=elementEventNameAndTarget(event,dirAst),name=_a.name,target=_a.target;usedEvents.set(elementEventFullName(target,name),[target,name]);});});var hostBindings=[];var hostEvents=[];this._visitComponentFactoryResolverProvider(ast.directives);ast.providers.forEach(function(providerAst,providerIndex){var dirAst=undefined;var dirIndex=undefined;ast.directives.forEach(function(localDirAst,i){if(localDirAst.directive.type.reference===tokenReference(providerAst.token)){dirAst=localDirAst;dirIndex=i;}});if(dirAst){var _a=_this._visitDirective(providerAst,dirAst,dirIndex,nodeIndex,ast.references,ast.queryMatches,usedEvents,_this.staticQueryIds.get(ast)),dirHostBindings=_a.hostBindings,dirHostEvents=_a.hostEvents;hostBindings.push.apply(hostBindings,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(dirHostBindings));hostEvents.push.apply(hostEvents,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(dirHostEvents));}else{_this._visitProvider(providerAst,ast.queryMatches);}});var queryMatchExprs=[];ast.queryMatches.forEach(function(match){var valueType=undefined;if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.ElementRef)){valueType=0/* ElementRef */;}else if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)){valueType=3/* ViewContainerRef */;}else if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.TemplateRef)){valueType=2/* TemplateRef */;}if(valueType!=null){queryMatchExprs.push(literalArr([literal(match.queryId),literal(valueType)]));}});ast.references.forEach(function(ref){var valueType=undefined;if(!ref.value){valueType=1/* RenderElement */;}else if(tokenReference(ref.value)===_this.reflector.resolveExternalReference(Identifiers.TemplateRef)){valueType=2/* TemplateRef */;}if(valueType!=null){_this.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(valueType)]));}});ast.outputs.forEach(function(outputAst){hostEvents.push({context:COMP_VAR,eventAst:outputAst,dirAst:null});});return{flags:flags,usedEvents:Array.from(usedEvents.values()),queryMatchesExpr:queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,hostBindings:hostBindings,hostEvents:hostEvents};};ViewBuilder.prototype._visitDirective=function(providerAst,dirAst,directiveIndex,elementNodeIndex,refs,queryMatches,usedEvents,queryIds){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array so we can add children
this.nodes.push(null);dirAst.directive.queries.forEach(function(query,queryIndex){var queryId=dirAst.contentQueryStartId+queryIndex;var flags=67108864/* TypeContentQuery */|calcStaticDynamicQueryFlags(queryIds,queryId,query.first);var bindingType=query.first?0/* First */:1/* All */;_this.nodes.push(function(){return{sourceSpan:dirAst.sourceSpan,nodeFlags:flags,nodeDef:importExpr(Identifiers.queryDef).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType),false)])])};});});// Note: the operation below might also create new nodeDefs,
// but we don't want them to be a child of a directive,
// as they might be a provider/pipe on their own.
// I.e. we only allow queries as children of directives nodes.
var childCount=this.nodes.length-nodeIndex-1;var _a=this._visitProviderOrDirective(providerAst,queryMatches),flags=_a.flags,queryMatchExprs=_a.queryMatchExprs,providerExpr=_a.providerExpr,depsExpr=_a.depsExpr;refs.forEach(function(ref){if(ref.value&&tokenReference(ref.value)===tokenReference(providerAst.token)){_this.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(4/* Provider */)]));}});if(dirAst.directive.isComponent){flags|=32768/* Component */;}var inputDefs=dirAst.inputs.map(function(inputAst,inputIndex){var mapValue=literalArr([literal(inputIndex),literal(inputAst.directiveName)]);// Note: it's important to not quote the key so that we can capture renames by minifiers!
return new LiteralMapEntry(inputAst.directiveName,mapValue,false);});var outputDefs=[];var dirMeta=dirAst.directive;Object.keys(dirMeta.outputs).forEach(function(propName){var eventName=dirMeta.outputs[propName];if(usedEvents.has(eventName)){// Note: it's important to not quote the key so that we can capture renames by minifiers!
outputDefs.push(new LiteralMapEntry(propName,literal(eventName),false));}});var updateDirectiveExpressions=[];if(dirAst.inputs.length||(flags&(262144/* DoCheck */|65536/* OnInit */))>0){updateDirectiveExpressions=dirAst.inputs.map(function(input,bindingIndex){return _this._preprocessUpdateExpression({nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:input.sourceSpan,context:COMP_VAR,value:input.value});});}var dirContextExpr=importExpr(Identifiers.nodeValue).callFn([VIEW_VAR,literal(nodeIndex)]);var hostBindings=dirAst.hostProperties.map(function(inputAst){return{context:dirContextExpr,dirAst:dirAst,inputAst:inputAst};});var hostEvents=dirAst.hostEvents.map(function(hostEventAst){return{context:dirContextExpr,eventAst:hostEventAst,dirAst:dirAst};});// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:dirAst.sourceSpan,nodeFlags:16384/* TypeDirective */|flags,nodeDef:importExpr(Identifiers.directiveDef).callFn([literal(checkIndex),literal(flags),queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,literal(childCount),providerExpr,depsExpr,inputDefs.length?new LiteralMapExpr(inputDefs):NULL_EXPR,outputDefs.length?new LiteralMapExpr(outputDefs):NULL_EXPR]),updateDirectives:updateDirectiveExpressions,directive:dirAst.directive.type};};return{hostBindings:hostBindings,hostEvents:hostEvents};};ViewBuilder.prototype._visitProvider=function(providerAst,queryMatches){this._addProviderNode(this._visitProviderOrDirective(providerAst,queryMatches));};ViewBuilder.prototype._visitComponentFactoryResolverProvider=function(directives){var componentDirMeta=directives.find(function(dirAst){return dirAst.directive.isComponent;});if(componentDirMeta&&componentDirMeta.directive.entryComponents.length){var _a=componentFactoryResolverProviderDef(this.reflector,this.outputCtx,8192/* PrivateProvider */,componentDirMeta.directive.entryComponents),providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,flags=_a.flags,tokenExpr=_a.tokenExpr;this._addProviderNode({providerExpr:providerExpr,depsExpr:depsExpr,flags:flags,tokenExpr:tokenExpr,queryMatchExprs:[],sourceSpan:componentDirMeta.sourceSpan});}};ViewBuilder.prototype._addProviderNode=function(data){var nodeIndex=this.nodes.length;// providerDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,
//   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;
this.nodes.push(function(){return{sourceSpan:data.sourceSpan,nodeFlags:data.flags,nodeDef:importExpr(Identifiers.providerDef).callFn([literal(data.flags),data.queryMatchExprs.length?literalArr(data.queryMatchExprs):NULL_EXPR,data.tokenExpr,data.providerExpr,data.depsExpr])};});};ViewBuilder.prototype._visitProviderOrDirective=function(providerAst,queryMatches){var flags=0/* None */;var queryMatchExprs=[];queryMatches.forEach(function(match){if(tokenReference(match.value)===tokenReference(providerAst.token)){queryMatchExprs.push(literalArr([literal(match.queryId),literal(4/* Provider */)]));}});var _a=providerDef(this.outputCtx,providerAst),providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,providerFlags=_a.flags,tokenExpr=_a.tokenExpr;return{flags:flags|providerFlags,queryMatchExprs:queryMatchExprs,providerExpr:providerExpr,depsExpr:depsExpr,tokenExpr:tokenExpr,sourceSpan:providerAst.sourceSpan};};ViewBuilder.prototype.getLocal=function(name){if(name==EventHandlerVars.event.name){return EventHandlerVars.event;}var currViewExpr=VIEW_VAR;for(var currBuilder=this;currBuilder;currBuilder=currBuilder.parent,currViewExpr=currViewExpr.prop('parent').cast(DYNAMIC_TYPE)){// check references
var refNodeIndex=currBuilder.refNodeIndices[name];if(refNodeIndex!=null){return importExpr(Identifiers.nodeValue).callFn([currViewExpr,literal(refNodeIndex)]);}// check variables
var varAst=currBuilder.variables.find(function(varAst){return varAst.name===name;});if(varAst){var varValue=varAst.value||IMPLICIT_TEMPLATE_VAR;return currViewExpr.prop('context').prop(varValue);}}return null;};ViewBuilder.prototype._createLiteralArrayConverter=function(sourceSpan,argCount){if(argCount===0){var valueExpr_1=importExpr(Identifiers.EMPTY_ARRAY);return function(){return valueExpr_1;};}var checkIndex=this.nodes.length;this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:32/* TypePureArray */,nodeDef:importExpr(Identifiers.pureArrayDef).callFn([literal(checkIndex),literal(argCount)])};});return function(args){return callCheckStmt(checkIndex,args);};};ViewBuilder.prototype._createLiteralMapConverter=function(sourceSpan,keys){if(keys.length===0){var valueExpr_2=importExpr(Identifiers.EMPTY_MAP);return function(){return valueExpr_2;};}var map=literalMap(keys.map(function(e,i){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},e,{value:literal(i)});}));var checkIndex=this.nodes.length;this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:64/* TypePureObject */,nodeDef:importExpr(Identifiers.pureObjectDef).callFn([literal(checkIndex),map])};});return function(args){return callCheckStmt(checkIndex,args);};};ViewBuilder.prototype._createPipeConverter=function(expression,name,argCount){var pipe=this.usedPipes.find(function(pipeSummary){return pipeSummary.name===name;});if(pipe.pure){var checkIndex_1=this.nodes.length;this.nodes.push(function(){return{sourceSpan:expression.sourceSpan,nodeFlags:128/* TypePurePipe */,nodeDef:importExpr(Identifiers.purePipeDef).callFn([literal(checkIndex_1),literal(argCount)])};});// find underlying pipe in the component view
var compViewExpr=VIEW_VAR;var compBuilder=this;while(compBuilder.parent){compBuilder=compBuilder.parent;compViewExpr=compViewExpr.prop('parent').cast(DYNAMIC_TYPE);}var pipeNodeIndex=compBuilder.purePipeNodeIndices[name];var pipeValueExpr_1=importExpr(Identifiers.nodeValue).callFn([compViewExpr,literal(pipeNodeIndex)]);return function(args){return callUnwrapValue(expression.nodeIndex,expression.bindingIndex,callCheckStmt(checkIndex_1,[pipeValueExpr_1].concat(args)));};}else{var nodeIndex=this._createPipe(expression.sourceSpan,pipe);var nodeValueExpr_1=importExpr(Identifiers.nodeValue).callFn([VIEW_VAR,literal(nodeIndex)]);return function(args){return callUnwrapValue(expression.nodeIndex,expression.bindingIndex,nodeValueExpr_1.callMethod('transform',args));};}};ViewBuilder.prototype._createPipe=function(sourceSpan,pipe){var _this=this;var nodeIndex=this.nodes.length;var flags=0/* None */;pipe.type.lifecycleHooks.forEach(function(lifecycleHook){// for pipes, we only support ngOnDestroy
if(lifecycleHook===LifecycleHooks.OnDestroy){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var depExprs=pipe.type.diDeps.map(function(diDep){return depDef(_this.outputCtx,diDep);});// function pipeDef(
//   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef
this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:16/* TypePipe */,nodeDef:importExpr(Identifiers.pipeDef).callFn([literal(flags),_this.outputCtx.importExpr(pipe.type.reference),literalArr(depExprs)])};});return nodeIndex;};/**
     * For the AST in `UpdateExpression.value`:
     * - create nodes for pipes, literal arrays and, literal maps,
     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.
     *
     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!
     */ViewBuilder.prototype._preprocessUpdateExpression=function(expression){var _this=this;return{nodeIndex:expression.nodeIndex,bindingIndex:expression.bindingIndex,sourceSpan:expression.sourceSpan,context:expression.context,value:convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){return _this._createLiteralArrayConverter(expression.sourceSpan,argCount);},createLiteralMapConverter:function createLiteralMapConverter(keys){return _this._createLiteralMapConverter(expression.sourceSpan,keys);},createPipeConverter:function createPipeConverter(name,argCount){return _this._createPipeConverter(expression,name,argCount);}},expression.value)};};ViewBuilder.prototype._createNodeExpressions=function(){var self=this;var updateBindingCount=0;var updateRendererStmts=[];var updateDirectivesStmts=[];var nodeDefExprs=this.nodes.map(function(factory,nodeIndex){var _a=factory(),nodeDef=_a.nodeDef,nodeFlags=_a.nodeFlags,updateDirectives=_a.updateDirectives,updateRenderer=_a.updateRenderer,sourceSpan=_a.sourceSpan;if(updateRenderer){updateRendererStmts.push.apply(updateRendererStmts,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(createUpdateStatements(nodeIndex,sourceSpan,updateRenderer,false)));}if(updateDirectives){updateDirectivesStmts.push.apply(updateDirectivesStmts,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(createUpdateStatements(nodeIndex,sourceSpan,updateDirectives,(nodeFlags&(262144/* DoCheck */|65536/* OnInit */))>0)));}// We use a comma expression to call the log function before
// the nodeDef function, but still use the result of the nodeDef function
// as the value.
// Note: We only add the logger to elements / text nodes,
// so we don't generate too much code.
var logWithNodeDef=nodeFlags&3/* CatRenderNode */?new CommaExpr([LOG_VAR$1.callFn([]).callFn([]),nodeDef]):nodeDef;return applySourceSpanToExpressionIfNeeded(logWithNodeDef,sourceSpan);});return{updateRendererStmts:updateRendererStmts,updateDirectivesStmts:updateDirectivesStmts,nodeDefExprs:nodeDefExprs};function createUpdateStatements(nodeIndex,sourceSpan,expressions,allowEmptyExprs){var updateStmts=[];var exprs=expressions.map(function(_a){var sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+updateBindingCount++;var nameResolver=context===COMP_VAR?self:null;var _b=convertPropertyBinding(nameResolver,context,value,bindingId,BindingForm.General),stmts=_b.stmts,currValExpr=_b.currValExpr;updateStmts.push.apply(updateStmts,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));return applySourceSpanToExpressionIfNeeded(currValExpr,sourceSpan);});if(expressions.length||allowEmptyExprs){updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex,exprs).toStmt(),sourceSpan));}return updateStmts;}};ViewBuilder.prototype._createElementHandleEventFn=function(nodeIndex,handlers){var _this=this;var handleEventStmts=[];var handleEventBindingCount=0;handlers.forEach(function(_a){var context=_a.context,eventAst=_a.eventAst,dirAst=_a.dirAst;var bindingId=""+handleEventBindingCount++;var nameResolver=context===COMP_VAR?_this:null;var _b=convertActionBinding(nameResolver,context,eventAst.handler,bindingId),stmts=_b.stmts,allowDefault=_b.allowDefault;var trueStmts=stmts;if(allowDefault){trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());}var _c=elementEventNameAndTarget(eventAst,dirAst),eventTarget=_c.target,eventName=_c.name;var fullEventName=elementEventFullName(eventTarget,eventName);handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR),trueStmts),eventAst.sourceSpan));});var handleEventFn;if(handleEventStmts.length>0){var preStmts=[ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];if(!this.component.isHost&&findReadVarNames(handleEventStmts).has(COMP_VAR.name)){preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));}handleEventFn=fn([new FnParam(VIEW_VAR.name,INFERRED_TYPE),new FnParam(EVENT_NAME_VAR.name,INFERRED_TYPE),new FnParam(EventHandlerVars.event.name,INFERRED_TYPE)],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(preStmts,handleEventStmts,[new ReturnStatement(ALLOW_DEFAULT_VAR)]),INFERRED_TYPE);}else{handleEventFn=NULL_EXPR;}return handleEventFn;};ViewBuilder.prototype.visitDirective=function(ast,context){};ViewBuilder.prototype.visitDirectiveProperty=function(ast,context){};ViewBuilder.prototype.visitReference=function(ast,context){};ViewBuilder.prototype.visitVariable=function(ast,context){};ViewBuilder.prototype.visitEvent=function(ast,context){};ViewBuilder.prototype.visitElementProperty=function(ast,context){};ViewBuilder.prototype.visitAttr=function(ast,context){};return ViewBuilder;}();function needsAdditionalRootNode(astNodes){var lastAstNode=astNodes[astNodes.length-1];if(lastAstNode instanceof EmbeddedTemplateAst){return lastAstNode.hasViewContainer;}if(lastAstNode instanceof ElementAst){if(isNgContainer(lastAstNode.name)&&lastAstNode.children.length){return needsAdditionalRootNode(lastAstNode.children);}return lastAstNode.hasViewContainer;}return lastAstNode instanceof NgContentAst;}function elementBindingDef(inputAst,dirAst){var inputType=inputAst.type;switch(inputType){case 1/* Attribute */:return literalArr([literal(1/* TypeElementAttribute */),literal(inputAst.name),literal(inputAst.securityContext)]);case 0/* Property */:return literalArr([literal(8/* TypeProperty */),literal(inputAst.name),literal(inputAst.securityContext)]);case 4/* Animation */:var bindingType=8/* TypeProperty */|(dirAst&&dirAst.directive.isComponent?32/* SyntheticHostProperty */:16/* SyntheticProperty */);return literalArr([literal(bindingType),literal('@'+inputAst.name),literal(inputAst.securityContext)]);case 2/* Class */:return literalArr([literal(2/* TypeElementClass */),literal(inputAst.name),NULL_EXPR]);case 3/* Style */:return literalArr([literal(4/* TypeElementStyle */),literal(inputAst.name),literal(inputAst.unit)]);default:// This default case is not needed by TypeScript compiler, as the switch is exhaustive.
// However Closure Compiler does not understand that and reports an error in typed mode.
// The `throw new Error` below works around the problem, and the unexpected: never variable
// makes sure tsc still checks this code is unreachable.
var unexpected=inputType;throw new Error("unexpected "+unexpected);}}function fixedAttrsDef(elementAst){var mapResult=Object.create(null);elementAst.attrs.forEach(function(attrAst){mapResult[attrAst.name]=attrAst.value;});elementAst.directives.forEach(function(dirAst){Object.keys(dirAst.directive.hostAttributes).forEach(function(name){var value=dirAst.directive.hostAttributes[name];var prevValue=mapResult[name];mapResult[name]=prevValue!=null?mergeAttributeValue(name,prevValue,value):value;});});// Note: We need to sort to get a defined output order
// for tests and for caching generated artifacts...
return literalArr(Object.keys(mapResult).sort().map(function(attrName){return literalArr([literal(attrName),literal(mapResult[attrName])]);}));}function mergeAttributeValue(attrName,attrValue1,attrValue2){if(attrName==CLASS_ATTR$1||attrName==STYLE_ATTR){return attrValue1+" "+attrValue2;}else{return attrValue2;}}function callCheckStmt(nodeIndex,exprs){if(exprs.length>10){return CHECK_VAR.callFn([VIEW_VAR,literal(nodeIndex),literal(1/* Dynamic */),literalArr(exprs)]);}else{return CHECK_VAR.callFn(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([VIEW_VAR,literal(nodeIndex),literal(0/* Inline */)],exprs));}}function callUnwrapValue(nodeIndex,bindingIdx,expr){return importExpr(Identifiers.unwrapValue).callFn([VIEW_VAR,literal(nodeIndex),literal(bindingIdx),expr]);}function findStaticQueryIds(nodes,result){if(result===void 0){result=new Map();}nodes.forEach(function(node){var staticQueryIds=new Set();var dynamicQueryIds=new Set();var queryMatches=undefined;if(node instanceof ElementAst){findStaticQueryIds(node.children,result);node.children.forEach(function(child){var childData=result.get(child);childData.staticQueryIds.forEach(function(queryId){return staticQueryIds.add(queryId);});childData.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});queryMatches=node.queryMatches;}else if(node instanceof EmbeddedTemplateAst){findStaticQueryIds(node.children,result);node.children.forEach(function(child){var childData=result.get(child);childData.staticQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});childData.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});queryMatches=node.queryMatches;}if(queryMatches){queryMatches.forEach(function(match){return staticQueryIds.add(match.queryId);});}dynamicQueryIds.forEach(function(queryId){return staticQueryIds.delete(queryId);});result.set(node,{staticQueryIds:staticQueryIds,dynamicQueryIds:dynamicQueryIds});});return result;}function staticViewQueryIds(nodeStaticQueryIds){var staticQueryIds=new Set();var dynamicQueryIds=new Set();Array.from(nodeStaticQueryIds.values()).forEach(function(entry){entry.staticQueryIds.forEach(function(queryId){return staticQueryIds.add(queryId);});entry.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});dynamicQueryIds.forEach(function(queryId){return staticQueryIds.delete(queryId);});return{staticQueryIds:staticQueryIds,dynamicQueryIds:dynamicQueryIds};}function elementEventNameAndTarget(eventAst,dirAst){if(eventAst.isAnimation){return{name:"@"+eventAst.name+"."+eventAst.phase,target:dirAst&&dirAst.directive.isComponent?'component':null};}else{return eventAst;}}function calcStaticDynamicQueryFlags(queryIds,queryId,isFirst){var flags=0/* None */;// Note: We only make queries static that query for a single item.
// This is because of backwards compatibility with the old view compiler...
if(isFirst&&(queryIds.staticQueryIds.has(queryId)||!queryIds.dynamicQueryIds.has(queryId))){flags|=268435456/* StaticQuery */;}else{flags|=536870912/* DynamicQuery */;}return flags;}function elementEventFullName(target,name){return target?target+":"+name:name;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CONSTANT_PREFIX='_c';// Closure variables holding messages must be named `MSG_[A-Z0-9]+`
var TRANSLATION_PREFIX='MSG_';/**
 * Closure uses `goog.getMsg(message)` to lookup translations
 */var GOOG_GET_MSG='goog.getMsg';/**
 * Context to use when producing a key.
 *
 * This ensures we see the constant not the reference variable when producing
 * a key.
 */var KEY_CONTEXT={};/**
 * A node that is a place-holder that allows the node to be replaced when the actual
 * node is known.
 *
 * This allows the constant pool to change an expression from a direct reference to
 * a constant to a shared constant. It returns a fix-up node that is later allowed to
 * change the referenced expression.
 */var FixupExpression=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FixupExpression,_super);function FixupExpression(resolved){var _this=_super.call(this,resolved.type)||this;_this.resolved=resolved;_this.original=resolved;return _this;}FixupExpression.prototype.visitExpression=function(visitor,context){if(context===KEY_CONTEXT){// When producing a key we want to traverse the constant not the
// variable used to refer to it.
return this.original.visitExpression(visitor,context);}else{return this.resolved.visitExpression(visitor,context);}};FixupExpression.prototype.isEquivalent=function(e){return e instanceof FixupExpression&&this.resolved.isEquivalent(e.resolved);};FixupExpression.prototype.isConstant=function(){return true;};FixupExpression.prototype.fixup=function(expression){this.resolved=expression;this.shared=true;};return FixupExpression;}(Expression);/**
 * A constant pool allows a code emitter to share constant in an output context.
 *
 * The constant pool also supports sharing access to ivy definitions references.
 */var ConstantPool=/** @class */function(){function ConstantPool(){this.statements=[];this.translations=new Map();this.literals=new Map();this.literalFactories=new Map();this.injectorDefinitions=new Map();this.directiveDefinitions=new Map();this.componentDefinitions=new Map();this.pipeDefinitions=new Map();this.nextNameIndex=0;}ConstantPool.prototype.getConstLiteral=function(literal$$1,forceShared){if(literal$$1 instanceof LiteralExpr||literal$$1 instanceof FixupExpression){// Do no put simple literals into the constant pool or try to produce a constant for a
// reference to a constant.
return literal$$1;}var key=this.keyOf(literal$$1);var fixup=this.literals.get(key);var newValue=false;if(!fixup){fixup=new FixupExpression(literal$$1);this.literals.set(key,fixup);newValue=true;}if(!newValue&&!fixup.shared||newValue&&forceShared){// Replace the expression with a variable
var name_1=this.freshName();this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));fixup.fixup(variable(name_1));}return fixup;};// Generates closure specific code for translation.
//
// ```
// /**
//  * @desc description?
//  * @meaning meaning?
//  */
// const MSG_XYZ = goog.getMsg('message');
// ```
ConstantPool.prototype.getTranslation=function(message,meta,suffix){// The identity of an i18n message depends on the message and its meaning
var key=meta.meaning?message+"\0\0"+meta.meaning:message;var exp=this.translations.get(key);if(exp){return exp;}var docStmt=i18nMetaToDocStmt(meta);if(docStmt){this.statements.push(docStmt);}// Call closure to get the translation
var variable$$1=variable(this.freshTranslationName(suffix));var fnCall=variable(GOOG_GET_MSG).callFn([literal(message)]);var msgStmt=variable$$1.set(fnCall).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]);this.statements.push(msgStmt);this.translations.set(key,variable$$1);return variable$$1;};ConstantPool.prototype.getDefinition=function(type,kind,ctx,forceShared){if(forceShared===void 0){forceShared=false;}var definitions=this.definitionsOf(kind);var fixup=definitions.get(type);var newValue=false;if(!fixup){var property=this.propertyNameOf(kind);fixup=new FixupExpression(ctx.importExpr(type).prop(property));definitions.set(type,fixup);newValue=true;}if(!newValue&&!fixup.shared||newValue&&forceShared){var name_2=this.freshName();this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));fixup.fixup(variable(name_2));}return fixup;};ConstantPool.prototype.getLiteralFactory=function(literal$$1){// Create a pure function that builds an array of a mix of constant  and variable expressions
if(literal$$1 instanceof LiteralArrayExpr){var argumentsForKey=literal$$1.entries.map(function(e){return e.isConstant()?e:literal(null);});var key=this.keyOf(literalArr(argumentsForKey));return this._getLiteralFactory(key,literal$$1.entries,function(entries){return literalArr(entries);});}else{var expressionForKey=literalMap(literal$$1.entries.map(function(e){return{key:e.key,value:e.value.isConstant()?e.value:literal(null),quoted:e.quoted};}));var key=this.keyOf(expressionForKey);return this._getLiteralFactory(key,literal$$1.entries.map(function(e){return e.value;}),function(entries){return literalMap(entries.map(function(value,index){return{key:literal$$1.entries[index].key,value:value,quoted:literal$$1.entries[index].quoted};}));});}};ConstantPool.prototype._getLiteralFactory=function(key,values,resultMap){var _this=this;var literalFactory=this.literalFactories.get(key);var literalFactoryArguments=values.filter(function(e){return!e.isConstant();});if(!literalFactory){var resultExpressions=values.map(function(e,index){return e.isConstant()?_this.getConstLiteral(e,true):variable("a"+index);});var parameters=resultExpressions.filter(isVariable).map(function(e){return new FnParam(e.name,DYNAMIC_TYPE);});var pureFunctionDeclaration=fn(parameters,[new ReturnStatement(resultMap(resultExpressions))],INFERRED_TYPE);var name_3=this.freshName();this.statements.push(variable(name_3).set(pureFunctionDeclaration).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));literalFactory=variable(name_3);this.literalFactories.set(key,literalFactory);}return{literalFactory:literalFactory,literalFactoryArguments:literalFactoryArguments};};/**
     * Produce a unique name.
     *
     * The name might be unique among different prefixes if any of the prefixes end in
     * a digit so the prefix should be a constant string (not based on user input) and
     * must not end in a digit.
     */ConstantPool.prototype.uniqueName=function(prefix){return""+prefix+this.nextNameIndex++;};ConstantPool.prototype.definitionsOf=function(kind){switch(kind){case 2/* Component */:return this.componentDefinitions;case 1/* Directive */:return this.directiveDefinitions;case 0/* Injector */:return this.injectorDefinitions;case 3/* Pipe */:return this.pipeDefinitions;}error("Unknown definition kind "+kind);return this.componentDefinitions;};ConstantPool.prototype.propertyNameOf=function(kind){switch(kind){case 2/* Component */:return'ngComponentDef';case 1/* Directive */:return'ngDirectiveDef';case 0/* Injector */:return'ngInjectorDef';case 3/* Pipe */:return'ngPipeDef';}error("Unknown definition kind "+kind);return'<unknown>';};ConstantPool.prototype.freshName=function(){return this.uniqueName(CONSTANT_PREFIX);};ConstantPool.prototype.freshTranslationName=function(suffix){return this.uniqueName(TRANSLATION_PREFIX+suffix).toUpperCase();};ConstantPool.prototype.keyOf=function(expression){return expression.visitExpression(new KeyVisitor(),KEY_CONTEXT);};return ConstantPool;}();/**
 * Visitor used to determine if 2 expressions are equivalent and can be shared in the
 * `ConstantPool`.
 *
 * When the id (string) generated by the visitor is equal, expressions are considered equivalent.
 */var KeyVisitor=/** @class */function(){function KeyVisitor(){this.visitWrappedNodeExpr=invalid;this.visitWriteVarExpr=invalid;this.visitWriteKeyExpr=invalid;this.visitWritePropExpr=invalid;this.visitInvokeMethodExpr=invalid;this.visitInvokeFunctionExpr=invalid;this.visitInstantiateExpr=invalid;this.visitConditionalExpr=invalid;this.visitNotExpr=invalid;this.visitAssertNotNullExpr=invalid;this.visitCastExpr=invalid;this.visitFunctionExpr=invalid;this.visitBinaryOperatorExpr=invalid;this.visitReadPropExpr=invalid;this.visitReadKeyExpr=invalid;this.visitCommaExpr=invalid;}KeyVisitor.prototype.visitLiteralExpr=function(ast){return""+(typeof ast.value==='string'?'"'+ast.value+'"':ast.value);};KeyVisitor.prototype.visitLiteralArrayExpr=function(ast,context){var _this=this;return"["+ast.entries.map(function(entry){return entry.visitExpression(_this,context);}).join(',')+"]";};KeyVisitor.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;var mapKey=function mapKey(entry){var quote=entry.quoted?'"':'';return""+quote+entry.key+quote;};var mapEntry=function mapEntry(entry){return mapKey(entry)+":"+entry.value.visitExpression(_this,context);};return"{"+ast.entries.map(mapEntry).join(',');};KeyVisitor.prototype.visitExternalExpr=function(ast){return ast.value.moduleName?"EX:"+ast.value.moduleName+":"+ast.value.name:"EX:"+ast.value.runtime.name;};KeyVisitor.prototype.visitReadVarExpr=function(node){return"VAR:"+node.name;};KeyVisitor.prototype.visitTypeofExpr=function(node,context){return"TYPEOF:"+node.expr.visitExpression(this,context);};return KeyVisitor;}();function invalid(arg){throw new Error("Invalid state: Visitor "+this.constructor.name+" doesn't handle "+arg.constructor.name);}function isVariable(e){return e instanceof ReadVarExpr;}// Converts i18n meta informations for a message (description, meaning) to a JsDoc statement
// formatted as expected by the Closure compiler.
function i18nMetaToDocStmt(meta){var tags=[];if(meta.description){tags.push({tagName:"desc"/* Desc */,text:meta.description});}if(meta.meaning){tags.push({tagName:"meaning"/* Meaning */,text:meta.meaning});}return tags.length==0?null:new JSDocCommentStmt(tags);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A container for message extracted from the templates.
 */var MessageBundle=/** @class */function(){function MessageBundle(_htmlParser,_implicitTags,_implicitAttrs,_locale){if(_locale===void 0){_locale=null;}this._htmlParser=_htmlParser;this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;this._locale=_locale;this._messages=[];}MessageBundle.prototype.updateFromTemplate=function(html,url,interpolationConfig){var _a;var htmlParserResult=this._htmlParser.parse(html,url,true,interpolationConfig);if(htmlParserResult.errors.length){return htmlParserResult.errors;}var i18nParserResult=extractMessages(htmlParserResult.rootNodes,interpolationConfig,this._implicitTags,this._implicitAttrs);if(i18nParserResult.errors.length){return i18nParserResult.errors;}(_a=this._messages).push.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(i18nParserResult.messages));return[];};// Return the message in the internal format
// The public (serialized) format might be different, see the `write` method.
MessageBundle.prototype.getMessages=function(){return this._messages;};MessageBundle.prototype.write=function(serializer,filterSources){var messages={};var mapperVisitor=new MapPlaceholderNames();// Deduplicate messages based on their ID
this._messages.forEach(function(message){var _a;var id=serializer.digest(message);if(!messages.hasOwnProperty(id)){messages[id]=message;}else{(_a=messages[id].sources).push.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(message.sources));}});// Transform placeholder names using the serializer mapping
var msgList=Object.keys(messages).map(function(id){var mapper=serializer.createNameMapper(messages[id]);var src=messages[id];var nodes=mapper?mapperVisitor.convert(src.nodes,mapper):src.nodes;var transformedMessage=new Message(nodes,{},{},src.meaning,src.description,id);transformedMessage.sources=src.sources;if(filterSources){transformedMessage.sources.forEach(function(source){return source.filePath=filterSources(source.filePath);});}return transformedMessage;});return serializer.write(msgList,this._locale);};return MessageBundle;}();// Transform an i18n AST by renaming the placeholder nodes with the given mapper
var MapPlaceholderNames=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapPlaceholderNames,_super);function MapPlaceholderNames(){return _super!==null&&_super.apply(this,arguments)||this;}MapPlaceholderNames.prototype.convert=function(nodes,mapper){var _this=this;return mapper?nodes.map(function(n){return n.visit(_this,mapper);}):nodes;};MapPlaceholderNames.prototype.visitTagPlaceholder=function(ph,mapper){var _this=this;var startName=mapper.toPublicName(ph.startName);var closeName=ph.closeName?mapper.toPublicName(ph.closeName):ph.closeName;var children=ph.children.map(function(n){return n.visit(_this,mapper);});return new TagPlaceholder(ph.tag,ph.attrs,startName,closeName,children,ph.isVoid,ph.sourceSpan);};MapPlaceholderNames.prototype.visitPlaceholder=function(ph,mapper){return new Placeholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);};MapPlaceholderNames.prototype.visitIcuPlaceholder=function(ph,mapper){return new IcuPlaceholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);};return MapPlaceholderNames;}(CloneVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function mapLiteral(obj){return literalMap(Object.keys(obj).map(function(key){return{key:key,quoted:false,value:obj[key]};}));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CORE$1='@angular/core';var Identifiers$1=/** @class */function(){function Identifiers(){}/* Methods */Identifiers.NEW_METHOD='factory';Identifiers.TRANSFORM_METHOD='transform';Identifiers.PATCH_DEPS='patchedDeps';/* Instructions */Identifiers.namespaceHTML={name:'ɵnamespaceHTML',moduleName:CORE$1};Identifiers.namespaceMathML={name:'ɵnamespaceMathML',moduleName:CORE$1};Identifiers.namespaceSVG={name:'ɵnamespaceSVG',moduleName:CORE$1};Identifiers.element={name:'ɵelement',moduleName:CORE$1};Identifiers.elementStart={name:'ɵelementStart',moduleName:CORE$1};Identifiers.elementEnd={name:'ɵelementEnd',moduleName:CORE$1};Identifiers.elementProperty={name:'ɵelementProperty',moduleName:CORE$1};Identifiers.elementAttribute={name:'ɵelementAttribute',moduleName:CORE$1};Identifiers.elementClassProp={name:'ɵelementClassProp',moduleName:CORE$1};Identifiers.elementContainerStart={name:'ɵEC',moduleName:CORE$1};Identifiers.elementContainerEnd={name:'ɵeC',moduleName:CORE$1};Identifiers.elementStyling={name:'ɵelementStyling',moduleName:CORE$1};Identifiers.elementStylingMap={name:'ɵelementStylingMap',moduleName:CORE$1};Identifiers.elementStyleProp={name:'ɵelementStyleProp',moduleName:CORE$1};Identifiers.elementStylingApply={name:'ɵelementStylingApply',moduleName:CORE$1};Identifiers.containerCreate={name:'ɵcontainer',moduleName:CORE$1};Identifiers.nextContext={name:'ɵnextContext',moduleName:CORE$1};Identifiers.templateCreate={name:'ɵtemplate',moduleName:CORE$1};Identifiers.text={name:'ɵtext',moduleName:CORE$1};Identifiers.textBinding={name:'ɵtextBinding',moduleName:CORE$1};Identifiers.bind={name:'ɵbind',moduleName:CORE$1};Identifiers.enableBindings={name:'ɵenableBindings',moduleName:CORE$1};Identifiers.disableBindings={name:'ɵdisableBindings',moduleName:CORE$1};Identifiers.getCurrentView={name:'ɵgetCurrentView',moduleName:CORE$1};Identifiers.restoreView={name:'ɵrestoreView',moduleName:CORE$1};Identifiers.interpolation1={name:'ɵinterpolation1',moduleName:CORE$1};Identifiers.interpolation2={name:'ɵinterpolation2',moduleName:CORE$1};Identifiers.interpolation3={name:'ɵinterpolation3',moduleName:CORE$1};Identifiers.interpolation4={name:'ɵinterpolation4',moduleName:CORE$1};Identifiers.interpolation5={name:'ɵinterpolation5',moduleName:CORE$1};Identifiers.interpolation6={name:'ɵinterpolation6',moduleName:CORE$1};Identifiers.interpolation7={name:'ɵinterpolation7',moduleName:CORE$1};Identifiers.interpolation8={name:'ɵinterpolation8',moduleName:CORE$1};Identifiers.interpolationV={name:'ɵinterpolationV',moduleName:CORE$1};Identifiers.pureFunction0={name:'ɵpureFunction0',moduleName:CORE$1};Identifiers.pureFunction1={name:'ɵpureFunction1',moduleName:CORE$1};Identifiers.pureFunction2={name:'ɵpureFunction2',moduleName:CORE$1};Identifiers.pureFunction3={name:'ɵpureFunction3',moduleName:CORE$1};Identifiers.pureFunction4={name:'ɵpureFunction4',moduleName:CORE$1};Identifiers.pureFunction5={name:'ɵpureFunction5',moduleName:CORE$1};Identifiers.pureFunction6={name:'ɵpureFunction6',moduleName:CORE$1};Identifiers.pureFunction7={name:'ɵpureFunction7',moduleName:CORE$1};Identifiers.pureFunction8={name:'ɵpureFunction8',moduleName:CORE$1};Identifiers.pureFunctionV={name:'ɵpureFunctionV',moduleName:CORE$1};Identifiers.pipeBind1={name:'ɵpipeBind1',moduleName:CORE$1};Identifiers.pipeBind2={name:'ɵpipeBind2',moduleName:CORE$1};Identifiers.pipeBind3={name:'ɵpipeBind3',moduleName:CORE$1};Identifiers.pipeBind4={name:'ɵpipeBind4',moduleName:CORE$1};Identifiers.pipeBindV={name:'ɵpipeBindV',moduleName:CORE$1};Identifiers.i18nAttribute={name:'ɵi18nAttribute',moduleName:CORE$1};Identifiers.i18nExp={name:'ɵi18nExp',moduleName:CORE$1};Identifiers.i18nStart={name:'ɵi18nStart',moduleName:CORE$1};Identifiers.i18nEnd={name:'ɵi18nEnd',moduleName:CORE$1};Identifiers.i18nApply={name:'ɵi18nApply',moduleName:CORE$1};Identifiers.load={name:'ɵload',moduleName:CORE$1};Identifiers.loadQueryList={name:'ɵloadQueryList',moduleName:CORE$1};Identifiers.pipe={name:'ɵpipe',moduleName:CORE$1};Identifiers.projection={name:'ɵprojection',moduleName:CORE$1};Identifiers.projectionDef={name:'ɵprojectionDef',moduleName:CORE$1};Identifiers.reference={name:'ɵreference',moduleName:CORE$1};Identifiers.inject={name:'inject',moduleName:CORE$1};Identifiers.injectAttribute={name:'ɵinjectAttribute',moduleName:CORE$1};Identifiers.directiveInject={name:'ɵdirectiveInject',moduleName:CORE$1};Identifiers.templateRefExtractor={name:'ɵtemplateRefExtractor',moduleName:CORE$1};Identifiers.defineBase={name:'ɵdefineBase',moduleName:CORE$1};Identifiers.BaseDef={name:'ɵBaseDef',moduleName:CORE$1};Identifiers.defineComponent={name:'ɵdefineComponent',moduleName:CORE$1};Identifiers.ComponentDefWithMeta={name:'ɵComponentDefWithMeta',moduleName:CORE$1};Identifiers.defineDirective={name:'ɵdefineDirective',moduleName:CORE$1};Identifiers.DirectiveDefWithMeta={name:'ɵDirectiveDefWithMeta',moduleName:CORE$1};Identifiers.InjectorDef={name:'ɵInjectorDef',moduleName:CORE$1};Identifiers.defineInjector={name:'defineInjector',moduleName:CORE$1};Identifiers.NgModuleDefWithMeta={name:'ɵNgModuleDefWithMeta',moduleName:CORE$1};Identifiers.defineNgModule={name:'ɵdefineNgModule',moduleName:CORE$1};Identifiers.PipeDefWithMeta={name:'ɵPipeDefWithMeta',moduleName:CORE$1};Identifiers.definePipe={name:'ɵdefinePipe',moduleName:CORE$1};Identifiers.query={name:'ɵquery',moduleName:CORE$1};Identifiers.queryRefresh={name:'ɵqueryRefresh',moduleName:CORE$1};Identifiers.registerContentQuery={name:'ɵregisterContentQuery',moduleName:CORE$1};Identifiers.NgOnChangesFeature={name:'ɵNgOnChangesFeature',moduleName:CORE$1};Identifiers.InheritDefinitionFeature={name:'ɵInheritDefinitionFeature',moduleName:CORE$1};Identifiers.PublicFeature={name:'ɵPublicFeature',moduleName:CORE$1};Identifiers.listener={name:'ɵlistener',moduleName:CORE$1};Identifiers.getFactoryOf={name:'ɵgetFactoryOf',moduleName:CORE$1};Identifiers.getInheritedFactory={name:'ɵgetInheritedFactory',moduleName:CORE$1};// sanitization-related functions
Identifiers.sanitizeHtml={name:'ɵsanitizeHtml',moduleName:CORE$1};Identifiers.sanitizeStyle={name:'ɵsanitizeStyle',moduleName:CORE$1};Identifiers.defaultStyleSanitizer={name:'ɵdefaultStyleSanitizer',moduleName:CORE$1};Identifiers.sanitizeResourceUrl={name:'ɵsanitizeResourceUrl',moduleName:CORE$1};Identifiers.sanitizeScript={name:'ɵsanitizeScript',moduleName:CORE$1};Identifiers.sanitizeUrl={name:'ɵsanitizeUrl',moduleName:CORE$1};return Identifiers;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /** Name of the temporary to use during data binding */var TEMPORARY_NAME='_t';/** Name of the context parameter passed into a template function */var CONTEXT_NAME='ctx';/** Name of the RenderFlag passed into a template function */var RENDER_FLAGS='rf';/** The prefix reference variables */var REFERENCE_PREFIX='_r';/** The name of the implicit context reference */var IMPLICIT_REFERENCE='$implicit';/** Name of the i18n attributes **/var I18N_ATTR='i18n';var I18N_ATTR_PREFIX='i18n-';/** I18n separators for metadata **/var MEANING_SEPARATOR$1='|';var ID_SEPARATOR$1='@@';/** Placeholder wrapper for i18n expressions **/var I18N_PLACEHOLDER_SYMBOL='�';/** Non bindable attribute name **/var NON_BINDABLE_ATTR='ngNonBindable';/**
 * Creates an allocator for a temporary variable.
 *
 * A variable declaration is added to the statements the first time the allocator is invoked.
 */function temporaryAllocator(statements,name){var temp=null;return function(){if(!temp){statements.push(new DeclareVarStmt(TEMPORARY_NAME,undefined,DYNAMIC_TYPE));temp=variable(name);}return temp;};}function unsupported(feature){if(this){throw new Error("Builder "+this.constructor.name+" doesn't support "+feature+" yet");}throw new Error("Feature "+feature+" is not supported yet");}function invalid$1(arg){throw new Error("Invalid state: Visitor "+this.constructor.name+" doesn't handle "+undefined);}function isI18NAttribute(name){return name===I18N_ATTR||name.startsWith(I18N_ATTR_PREFIX);}function wrapI18nPlaceholder(content){return""+I18N_PLACEHOLDER_SYMBOL+content+I18N_PLACEHOLDER_SYMBOL;}function assembleI18nTemplate(strings){if(!strings.length)return'';var acc='';var lastIdx=strings.length-1;for(var i=0;i<lastIdx;i++){acc+=""+strings[i]+wrapI18nPlaceholder(i);}acc+=strings[lastIdx];return acc;}function asLiteral(value){if(Array.isArray(value)){return literalArr(value.map(asLiteral));}return literal(value,INFERRED_TYPE);}function conditionallyCreateMapObjectLiteral(keys){if(Object.getOwnPropertyNames(keys).length>0){return mapToExpression(keys);}return null;}function mapToExpression(map,quoted){if(quoted===void 0){quoted=false;}return literalMap(Object.getOwnPropertyNames(map).map(function(key){return{key:key,quoted:quoted,value:asLiteral(map[key])};}));}/**
 *  Remove trailing null nodes as they are implied.
 */function trimTrailingNulls(parameters){while(isNull(parameters[parameters.length-1])){parameters.pop();}return parameters;}function getQueryPredicate(query,constantPool){if(Array.isArray(query.predicate)){var predicate_1=[];query.predicate.forEach(function(selector){// Each item in predicates array may contain strings with comma-separated refs
// (for ex. 'ref, ref1, ..., refN'), thus we extract individual refs and store them
// as separate array entities
var selectors=selector.split(',').map(function(token){return literal(token.trim());});predicate_1.push.apply(predicate_1,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(selectors));});return constantPool.getConstLiteral(literalArr(predicate_1),true);}else{return query.predicate;}}var DefinitionMap=/** @class */function(){function DefinitionMap(){this.values=[];}DefinitionMap.prototype.set=function(key,value){if(value){this.values.push({key:key,value:value,quoted:false});}};DefinitionMap.prototype.toLiteralMap=function(){return literalMap(this.values);};return DefinitionMap;}();/**
 * Extract a map of properties to values for a given element or template node, which can be used
 * by the directive matching machinery.
 *
 * @param elOrTpl the element or template in question
 * @return an object set up for directive matching. For attributes on the element/template, this
 * object maps a property name to its (static) value. For any bindings, this map simply maps the
 * property name to an empty string.
 */function getAttrsForDirectiveMatching(elOrTpl){var attributesMap={};elOrTpl.attributes.forEach(function(a){if(!isI18NAttribute(a.name)){attributesMap[a.name]=a.value;}});elOrTpl.inputs.forEach(function(i){attributesMap[i.name]='';});elOrTpl.outputs.forEach(function(o){attributesMap[o.name]='';});return attributesMap;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var R3FactoryDelegateType;(function(R3FactoryDelegateType){R3FactoryDelegateType[R3FactoryDelegateType["Class"]=0]="Class";R3FactoryDelegateType[R3FactoryDelegateType["Function"]=1]="Function";R3FactoryDelegateType[R3FactoryDelegateType["Factory"]=2]="Factory";})(R3FactoryDelegateType||(R3FactoryDelegateType={}));/**
 * Resolved type of a dependency.
 *
 * Occasionally, dependencies will have special significance which is known statically. In that
 * case the `R3ResolvedDependencyType` informs the factory generator that a particular dependency
 * should be generated specially (usually by calling a special injection function instead of the
 * standard one).
 */var R3ResolvedDependencyType;(function(R3ResolvedDependencyType){/**
     * A normal token dependency.
     */R3ResolvedDependencyType[R3ResolvedDependencyType["Token"]=0]="Token";/**
     * The dependency is for an attribute.
     *
     * The token expression is a string representing the attribute name.
     */R3ResolvedDependencyType[R3ResolvedDependencyType["Attribute"]=1]="Attribute";/**
     * The dependency is for the `Injector` type itself.
     */R3ResolvedDependencyType[R3ResolvedDependencyType["Injector"]=2]="Injector";})(R3ResolvedDependencyType||(R3ResolvedDependencyType={}));/**
 * Construct a factory function expression for the given `R3FactoryMetadata`.
 */function compileFactoryFunction(meta){var t=variable('t');var statements=[];// The type to instantiate via constructor invocation. If there is no delegated factory, meaning
// this type is always created by constructor invocation, then this is the type-to-create
// parameter provided by the user (t) if specified, or the current type if not. If there is a
// delegated factory (which is used to create the current type) then this is only the type-to-
// create parameter (t).
var typeForCtor=!isDelegatedMetadata(meta)?new BinaryOperatorExpr(BinaryOperator.Or,t,meta.type):t;var ctorExpr=null;if(meta.deps!==null){// There is a constructor (either explicitly or implicitly defined).
ctorExpr=new InstantiateExpr(typeForCtor,injectDependencies(meta.deps,meta.injectFn));}else{var baseFactory=variable("\u0275"+meta.name+"_BaseFactory");var getInheritedFactory=importExpr(Identifiers$1.getInheritedFactory);var baseFactoryStmt=baseFactory.set(getInheritedFactory.callFn([meta.type])).toDeclStmt(INFERRED_TYPE,[StmtModifier.Exported,StmtModifier.Final]);statements.push(baseFactoryStmt);// There is no constructor, use the base class' factory to construct typeForCtor.
ctorExpr=baseFactory.callFn([typeForCtor]);}var ctorExprFinal=ctorExpr;var body=[];var retExpr=null;function makeConditionalFactory(nonCtorExpr){var r=variable('r');body.push(r.set(NULL_EXPR).toDeclStmt());body.push(ifStmt(t,[r.set(ctorExprFinal).toStmt()],[r.set(nonCtorExpr).toStmt()]));return r;}if(isDelegatedMetadata(meta)&&meta.delegateType===R3FactoryDelegateType.Factory){var delegateFactory=variable("\u0275"+meta.name+"_BaseFactory");var getFactoryOf=importExpr(Identifiers$1.getFactoryOf);if(meta.delegate.isEquivalent(meta.type)){throw new Error("Illegal state: compiling factory that delegates to itself");}var delegateFactoryStmt=delegateFactory.set(getFactoryOf.callFn([meta.delegate])).toDeclStmt(INFERRED_TYPE,[StmtModifier.Exported,StmtModifier.Final]);statements.push(delegateFactoryStmt);var r=makeConditionalFactory(delegateFactory.callFn([]));retExpr=r;}else if(isDelegatedMetadata(meta)){// This type is created with a delegated factory. If a type parameter is not specified, call
// the factory instead.
var delegateArgs=injectDependencies(meta.delegateDeps,meta.injectFn);// Either call `new delegate(...)` or `delegate(...)` depending on meta.useNewForDelegate.
var factoryExpr=new(meta.delegateType===R3FactoryDelegateType.Class?InstantiateExpr:InvokeFunctionExpr)(meta.delegate,delegateArgs);retExpr=makeConditionalFactory(factoryExpr);}else if(isExpressionFactoryMetadata(meta)){// TODO(alxhub): decide whether to lower the value here or in the caller
retExpr=makeConditionalFactory(meta.expression);}else{retExpr=ctorExpr;}return{factory:fn([new FnParam('t',DYNAMIC_TYPE)],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(body,[new ReturnStatement(retExpr)]),INFERRED_TYPE,undefined,meta.name+"_Factory"),statements:statements};}function injectDependencies(deps,injectFn){return deps.map(function(dep){return compileInjectDependency(dep,injectFn);});}function compileInjectDependency(dep,injectFn){// Interpret the dependency according to its resolved type.
switch(dep.resolved){case R3ResolvedDependencyType.Token:case R3ResolvedDependencyType.Injector:{// Build up the injection flags according to the metadata.
var flags=0/* Default */|(dep.self?2/* Self */:0)|(dep.skipSelf?4/* SkipSelf */:0)|(dep.host?1/* Host */:0)|(dep.optional?8/* Optional */:0);// Determine the token used for injection. In almost all cases this is the given token, but
// if the dependency is resolved to the `Injector` then the special `INJECTOR` token is used
// instead.
var token=dep.token;if(dep.resolved===R3ResolvedDependencyType.Injector){token=importExpr(Identifiers.INJECTOR);}// Build up the arguments to the injectFn call.
var injectArgs=[token];// If this dependency is optional or otherwise has non-default flags, then additional
// parameters describing how to inject the dependency must be passed to the inject function
// that's being used.
if(flags!==0/* Default */||dep.optional){injectArgs.push(literal(flags));}return importExpr(injectFn).callFn(injectArgs);}case R3ResolvedDependencyType.Attribute:// In the case of attributes, the attribute name in question is given as the token.
return importExpr(Identifiers$1.injectAttribute).callFn([dep.token]);default:return unsupported("Unknown R3ResolvedDependencyType: "+R3ResolvedDependencyType[dep.resolved]);}}/**
 * A helper function useful for extracting `R3DependencyMetadata` from a Render2
 * `CompileTypeMetadata` instance.
 */function dependenciesFromGlobalMetadata(type,outputCtx,reflector){var e_1,_a;// Use the `CompileReflector` to look up references to some well-known Angular types. These will
// be compared with the token to statically determine whether the token has significance to
// Angular, and set the correct `R3ResolvedDependencyType` as a result.
var injectorRef=reflector.resolveExternalReference(Identifiers.Injector);// Iterate through the type's DI dependencies and produce `R3DependencyMetadata` for each of them.
var deps=[];try{for(var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(type.diDeps),_c=_b.next();!_c.done;_c=_b.next()){var dependency=_c.value;if(dependency.token){var tokenRef=tokenReference(dependency.token);var resolved=R3ResolvedDependencyType.Token;if(tokenRef===injectorRef){resolved=R3ResolvedDependencyType.Injector;}else if(dependency.isAttribute){resolved=R3ResolvedDependencyType.Attribute;}// In the case of most dependencies, the token will be a reference to a type. Sometimes,
// however, it can be a string, in the case of older Angular code or @Attribute injection.
var token=tokenRef instanceof StaticSymbol?outputCtx.importExpr(tokenRef):literal(tokenRef);// Construct the dependency.
deps.push({token:token,resolved:resolved,host:!!dependency.isHost,optional:!!dependency.isOptional,self:!!dependency.isSelf,skipSelf:!!dependency.isSkipSelf});}else{unsupported('dependency without a token');}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return deps;}function isDelegatedMetadata(meta){return meta.delegateType!==undefined;}function isExpressionFactoryMetadata(meta){return meta.expression!==undefined;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Convert an object map with `Expression` values into a `LiteralMapExpr`.
 */function mapToMapExpression(map){var result=Object.keys(map).map(function(key){return{key:key,value:map[key],quoted:false};});return literalMap(result);}/**
 * Convert metadata into an `Expression` in the given `OutputContext`.
 *
 * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.
 */function convertMetaToOutput(meta,ctx){if(Array.isArray(meta)){return literalArr(meta.map(function(entry){return convertMetaToOutput(entry,ctx);}));}if(meta instanceof StaticSymbol){return ctx.importExpr(meta);}if(meta==null){return literal(meta);}throw new Error("Internal error: Unsupported or unknown metadata: "+meta);}function typeWithParameters(type,numParams){var params=null;if(numParams>0){params=[];for(var i=0;i<numParams;i++){params.push(DYNAMIC_TYPE);}}return expressionType(type,null,params);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.
 */function compileNgModule(meta){var moduleType=meta.type,bootstrap=meta.bootstrap,declarations=meta.declarations,imports=meta.imports,exports=meta.exports;var expression=importExpr(Identifiers$1.defineNgModule).callFn([mapToMapExpression({type:moduleType,bootstrap:literalArr(bootstrap.map(function(ref){return ref.value;})),declarations:literalArr(declarations.map(function(ref){return ref.value;})),imports:literalArr(imports.map(function(ref){return ref.value;})),exports:literalArr(exports.map(function(ref){return ref.value;}))})]);var type=new ExpressionType(importExpr(Identifiers$1.NgModuleDefWithMeta,[new ExpressionType(moduleType),tupleTypeOf(declarations),tupleTypeOf(imports),tupleTypeOf(exports)]));var additionalStatements=[];return{expression:expression,type:type,additionalStatements:additionalStatements};}function compileInjector(meta){var result=compileFactoryFunction({name:meta.name,type:meta.type,deps:meta.deps,injectFn:Identifiers$1.inject});var expression=importExpr(Identifiers$1.defineInjector).callFn([mapToMapExpression({factory:result.factory,providers:meta.providers,imports:meta.imports})]);var type=new ExpressionType(importExpr(Identifiers$1.InjectorDef,[new ExpressionType(meta.type)]));return{expression:expression,type:type,statements:result.statements};}// TODO(alxhub): integrate this with `compileNgModule`. Currently the two are separate operations.
function compileNgModuleFromRender2(ctx,ngModule,injectableCompiler){var className=identifierName(ngModule.type);var rawImports=ngModule.rawImports?[ngModule.rawImports]:[];var rawExports=ngModule.rawExports?[ngModule.rawExports]:[];var injectorDefArg=mapLiteral({'factory':injectableCompiler.factoryFor({type:ngModule.type,symbol:ngModule.type.reference},ctx),'providers':convertMetaToOutput(ngModule.rawProviders,ctx),'imports':convertMetaToOutput(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(rawImports,rawExports),ctx)});var injectorDef=importExpr(Identifiers$1.defineInjector).callFn([injectorDefArg]);ctx.statements.push(new ClassStmt(/* name */className,/* parent */null,/* fields */[new ClassField(/* name */'ngInjectorDef',/* type */INFERRED_TYPE,/* modifiers */[StmtModifier.Static],/* initializer */injectorDef)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]));}function tupleTypeOf(exp){var types=exp.map(function(ref){return typeofExpr(ref.type);});return exp.length>0?expressionType(literalArr(types)):NONE_TYPE;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function compilePipeFromMetadata(metadata){var definitionMapValues=[];// e.g. `name: 'myPipe'`
definitionMapValues.push({key:'name',value:literal(metadata.pipeName),quoted:false});// e.g. `type: MyPipe`
definitionMapValues.push({key:'type',value:metadata.type,quoted:false});var templateFactory=compileFactoryFunction({name:metadata.name,type:metadata.type,deps:metadata.deps,injectFn:Identifiers$1.directiveInject});definitionMapValues.push({key:'factory',value:templateFactory.factory,quoted:false});// e.g. `pure: true`
definitionMapValues.push({key:'pure',value:literal(metadata.pure),quoted:false});var expression=importExpr(Identifiers$1.definePipe).callFn([literalMap(definitionMapValues)]);var type=new ExpressionType(importExpr(Identifiers$1.PipeDefWithMeta,[new ExpressionType(metadata.type),new ExpressionType(new LiteralExpr(metadata.pipeName))]));return{expression:expression,type:type,statements:templateFactory.statements};}/**
 * Write a pipe definition to the output context.
 */function compilePipeFromRender2(outputCtx,pipe,reflector){var name=identifierName(pipe.type);if(!name){return error("Cannot resolve the name of "+pipe.type);}var metadata={name:name,pipeName:pipe.name,type:outputCtx.importExpr(pipe.type.reference),deps:dependenciesFromGlobalMetadata(pipe.type,outputCtx,reflector),pure:pipe.pure};var res=compilePipeFromMetadata(metadata);var definitionField=outputCtx.constantPool.propertyNameOf(3/* Pipe */);outputCtx.statements.push(new ClassStmt(/* name */name,/* parent */null,/* fields */[new ClassField(/* name */definitionField,/* type */INFERRED_TYPE,/* modifiers */[StmtModifier.Static],/* initializer */res.expression)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Text$3=/** @class */function(){function Text(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Text.prototype.visit=function(visitor){return visitor.visitText(this);};return Text;}();var BoundText=/** @class */function(){function BoundText(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}BoundText.prototype.visit=function(visitor){return visitor.visitBoundText(this);};return BoundText;}();var TextAttribute=/** @class */function(){function TextAttribute(name,value,sourceSpan,valueSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}TextAttribute.prototype.visit=function(visitor){return visitor.visitTextAttribute(this);};return TextAttribute;}();var BoundAttribute=/** @class */function(){function BoundAttribute(name,type,securityContext,value,unit,sourceSpan){this.name=name;this.type=type;this.securityContext=securityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;}BoundAttribute.fromBoundElementProperty=function(prop){return new BoundAttribute(prop.name,prop.type,prop.securityContext,prop.value,prop.unit,prop.sourceSpan);};BoundAttribute.prototype.visit=function(visitor){return visitor.visitBoundAttribute(this);};return BoundAttribute;}();var BoundEvent=/** @class */function(){function BoundEvent(name,handler,target,phase,sourceSpan){this.name=name;this.handler=handler;this.target=target;this.phase=phase;this.sourceSpan=sourceSpan;}BoundEvent.fromParsedEvent=function(event){var target=event.type===0/* Regular */?event.targetOrPhase:null;var phase=event.type===1/* Animation */?event.targetOrPhase:null;return new BoundEvent(event.name,event.handler,target,phase,event.sourceSpan);};BoundEvent.prototype.visit=function(visitor){return visitor.visitBoundEvent(this);};return BoundEvent;}();var Element$1=/** @class */function(){function Element(name,attributes,inputs,outputs,children,references,sourceSpan,startSourceSpan,endSourceSpan){this.name=name;this.attributes=attributes;this.inputs=inputs;this.outputs=outputs;this.children=children;this.references=references;this.sourceSpan=sourceSpan;this.startSourceSpan=startSourceSpan;this.endSourceSpan=endSourceSpan;}Element.prototype.visit=function(visitor){return visitor.visitElement(this);};return Element;}();var Template=/** @class */function(){function Template(attributes,inputs,outputs,children,references,variables,sourceSpan,startSourceSpan,endSourceSpan){this.attributes=attributes;this.inputs=inputs;this.outputs=outputs;this.children=children;this.references=references;this.variables=variables;this.sourceSpan=sourceSpan;this.startSourceSpan=startSourceSpan;this.endSourceSpan=endSourceSpan;}Template.prototype.visit=function(visitor){return visitor.visitTemplate(this);};return Template;}();var Content=/** @class */function(){function Content(selectorIndex,attributes,sourceSpan){this.selectorIndex=selectorIndex;this.attributes=attributes;this.sourceSpan=sourceSpan;}Content.prototype.visit=function(visitor){return visitor.visitContent(this);};return Content;}();var Variable=/** @class */function(){function Variable(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}Variable.prototype.visit=function(visitor){return visitor.visitVariable(this);};return Variable;}();var Reference=/** @class */function(){function Reference(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}Reference.prototype.visit=function(visitor){return visitor.visitReference(this);};return Reference;}();function visitAll$1(visitor,nodes){var e_1,_a,e_2,_b;var result=[];if(visitor.visit){try{for(var nodes_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(nodes),nodes_1_1=nodes_1.next();!nodes_1_1.done;nodes_1_1=nodes_1.next()){var node=nodes_1_1.value;var newNode=visitor.visit(node)||node.visit(visitor);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(nodes_1_1&&!nodes_1_1.done&&(_a=nodes_1.return))_a.call(nodes_1);}finally{if(e_1)throw e_1.error;}}}else{try{for(var nodes_2=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(nodes),nodes_2_1=nodes_2.next();!nodes_2_1.done;nodes_2_1=nodes_2.next()){var node=nodes_2_1.value;var newNode=node.visit(visitor);if(newNode){result.push(newNode);}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(nodes_2_1&&!nodes_2_1.done&&(_b=nodes_2.return))_b.call(nodes_2);}finally{if(e_2)throw e_2.error;}}}return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var BIND_NAME_REGEXP$1=/^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;// Group 1 = "bind-"
var KW_BIND_IDX$1=1;// Group 2 = "let-"
var KW_LET_IDX$1=2;// Group 3 = "ref-/#"
var KW_REF_IDX$1=3;// Group 4 = "on-"
var KW_ON_IDX$1=4;// Group 5 = "bindon-"
var KW_BINDON_IDX$1=5;// Group 6 = "@"
var KW_AT_IDX$1=6;// Group 7 = the identifier after "bind-", "let-", "ref-/#", "on-", "bindon-" or "@"
var IDENT_KW_IDX$1=7;// Group 8 = identifier inside [()]
var IDENT_BANANA_BOX_IDX$1=8;// Group 9 = identifier inside []
var IDENT_PROPERTY_IDX$1=9;// Group 10 = identifier inside ()
var IDENT_EVENT_IDX$1=10;var TEMPLATE_ATTR_PREFIX$1='*';// Default selector used by `<ng-content>` if none specified
var DEFAULT_CONTENT_SELECTOR='*';function htmlAstToRender3Ast(htmlNodes,bindingParser){var transformer=new HtmlAstToIvyAst(bindingParser);var ivyNodes=visitAll(transformer,htmlNodes);// Errors might originate in either the binding parser or the html to ivy transformer
var allErrors=bindingParser.errors.concat(transformer.errors);var errors=allErrors.filter(function(e){return e.level===ParseErrorLevel.ERROR;});if(errors.length>0){var errorString=errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString,errors);}return{nodes:ivyNodes,errors:allErrors,ngContentSelectors:transformer.ngContentSelectors,hasNgContent:transformer.hasNgContent};}var HtmlAstToIvyAst=/** @class */function(){function HtmlAstToIvyAst(bindingParser){this.bindingParser=bindingParser;this.errors=[];// Selectors for the `ng-content` tags. Only non `*` selectors are recorded here
this.ngContentSelectors=[];// Any `<ng-content>` in the template ?
this.hasNgContent=false;}// HTML visitor
HtmlAstToIvyAst.prototype.visitElement=function(element){var _this=this;var e_1,_a;var preparsedElement=preparseElement(element);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE){// Skipping <script> for security reasons
// Skipping <style> as we already processed them
// in the StyleCompiler
return null;}if(preparsedElement.type===PreparsedElementType.STYLESHEET&&isStyleUrlResolvable(preparsedElement.hrefAttr)){// Skipping stylesheets with either relative urls or package scheme as we already processed
// them in the StyleCompiler
return null;}// Whether the element is a `<ng-template>`
var isTemplateElement=isNgTemplate(element.name);var parsedProperties=[];var boundEvents=[];var variables=[];var references=[];var attributes=[];var templateParsedProperties=[];var templateVariables=[];// Whether the element has any *-attribute
var elementHasInlineTemplate=false;try{for(var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(element.attrs),_c=_b.next();!_c.done;_c=_b.next()){var attribute=_c.value;var hasBinding=false;var normalizedName=normalizeAttributeName(attribute.name);// `*attr` defines template bindings
var isTemplateBinding=false;if(normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)){// *-attributes
if(elementHasInlineTemplate){this.reportError("Can't have multiple template bindings on one element. Use only one attribute prefixed with *",attribute.sourceSpan);}isTemplateBinding=true;elementHasInlineTemplate=true;var templateValue=attribute.value;var templateKey=normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length);var parsedVariables=[];this.bindingParser.parseInlineTemplateBinding(templateKey,templateValue,attribute.sourceSpan,[],templateParsedProperties,parsedVariables);templateVariables.push.apply(templateVariables,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(parsedVariables.map(function(v){return new Variable(v.name,v.value,v.sourceSpan);})));}else{// Check for variables, events, property bindings, interpolation
hasBinding=this.parseAttribute(isTemplateElement,attribute,[],parsedProperties,boundEvents,variables,references);}if(!hasBinding&&!isTemplateBinding){// don't include the bindings as attributes as well in the AST
attributes.push(this.visitAttribute(attribute));}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}var children=visitAll(preparsedElement.nonBindable?NON_BINDABLE_VISITOR$1:this,element.children);var parsedElement;if(preparsedElement.type===PreparsedElementType.NG_CONTENT){// `<ng-content>`
this.hasNgContent=true;if(element.children&&!element.children.every(isEmptyTextNode)){this.reportError("<ng-content> element cannot have content.",element.sourceSpan);}var selector=preparsedElement.selectAttr;var attributes_1=element.attrs.map(function(attribute){return _this.visitAttribute(attribute);});var selectorIndex=selector===DEFAULT_CONTENT_SELECTOR?0:this.ngContentSelectors.push(selector);parsedElement=new Content(selectorIndex,attributes_1,element.sourceSpan);}else if(isTemplateElement){// `<ng-template>`
var attrs=this.extractAttributes(element.name,parsedProperties);parsedElement=new Template(attributes,attrs.bound,boundEvents,children,references,variables,element.sourceSpan,element.startSourceSpan,element.endSourceSpan);}else{var attrs=this.extractAttributes(element.name,parsedProperties);parsedElement=new Element$1(element.name,attributes,attrs.bound,boundEvents,children,references,element.sourceSpan,element.startSourceSpan,element.endSourceSpan);}if(elementHasInlineTemplate){var attrs=this.extractAttributes('ng-template',templateParsedProperties);// TODO(pk): test for this case
parsedElement=new Template(attrs.literal,attrs.bound,[],[parsedElement],[],templateVariables,element.sourceSpan,element.startSourceSpan,element.endSourceSpan);}return parsedElement;};HtmlAstToIvyAst.prototype.visitAttribute=function(attribute){return new TextAttribute(attribute.name,attribute.value,attribute.sourceSpan,attribute.valueSpan);};HtmlAstToIvyAst.prototype.visitText=function(text){var valueNoNgsp=replaceNgsp(text.value);var expr=this.bindingParser.parseInterpolation(valueNoNgsp,text.sourceSpan);return expr?new BoundText(expr,text.sourceSpan):new Text$3(valueNoNgsp,text.sourceSpan);};HtmlAstToIvyAst.prototype.visitComment=function(comment){return null;};HtmlAstToIvyAst.prototype.visitExpansion=function(expansion){return null;};HtmlAstToIvyAst.prototype.visitExpansionCase=function(expansionCase){return null;};// convert view engine `ParsedProperty` to a format suitable for IVY
HtmlAstToIvyAst.prototype.extractAttributes=function(elementName,properties){var _this=this;var bound=[];var literal=[];properties.forEach(function(prop){if(prop.isLiteral){literal.push(new TextAttribute(prop.name,prop.expression.source||'',prop.sourceSpan));}else{var bep=_this.bindingParser.createBoundElementProperty(elementName,prop);bound.push(BoundAttribute.fromBoundElementProperty(bep));}});return{bound:bound,literal:literal};};HtmlAstToIvyAst.prototype.parseAttribute=function(isTemplateElement,attribute,matchableAttributes,parsedProperties,boundEvents,variables,references){var name=normalizeAttributeName(attribute.name);var value=attribute.value;var srcSpan=attribute.sourceSpan;var bindParts=name.match(BIND_NAME_REGEXP$1);var hasBinding=false;if(bindParts){hasBinding=true;if(bindParts[KW_BIND_IDX$1]!=null){this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1],value,false,srcSpan,matchableAttributes,parsedProperties);}else if(bindParts[KW_LET_IDX$1]){if(isTemplateElement){var identifier=bindParts[IDENT_KW_IDX$1];this.parseVariable(identifier,value,srcSpan,variables);}else{this.reportError("\"let-\" is only supported on ng-template elements.",srcSpan);}}else if(bindParts[KW_REF_IDX$1]){var identifier=bindParts[IDENT_KW_IDX$1];this.parseReference(identifier,value,srcSpan,references);}else if(bindParts[KW_ON_IDX$1]){var events=[];this.bindingParser.parseEvent(bindParts[IDENT_KW_IDX$1],value,srcSpan,matchableAttributes,events);addEvents(events,boundEvents);}else if(bindParts[KW_BINDON_IDX$1]){this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1],value,false,srcSpan,matchableAttributes,parsedProperties);this.parseAssignmentEvent(bindParts[IDENT_KW_IDX$1],value,srcSpan,matchableAttributes,boundEvents);}else if(bindParts[KW_AT_IDX$1]){this.bindingParser.parseLiteralAttr(name,value,srcSpan,matchableAttributes,parsedProperties);}else if(bindParts[IDENT_BANANA_BOX_IDX$1]){this.bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX$1],value,false,srcSpan,matchableAttributes,parsedProperties);this.parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX$1],value,srcSpan,matchableAttributes,boundEvents);}else if(bindParts[IDENT_PROPERTY_IDX$1]){this.bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX$1],value,false,srcSpan,matchableAttributes,parsedProperties);}else if(bindParts[IDENT_EVENT_IDX$1]){var events=[];this.bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX$1],value,srcSpan,matchableAttributes,events);addEvents(events,boundEvents);}}else{hasBinding=this.bindingParser.parsePropertyInterpolation(name,value,srcSpan,matchableAttributes,parsedProperties);}return hasBinding;};HtmlAstToIvyAst.prototype.parseVariable=function(identifier,value,sourceSpan,variables){if(identifier.indexOf('-')>-1){this.reportError("\"-\" is not allowed in variable names",sourceSpan);}variables.push(new Variable(identifier,value,sourceSpan));};HtmlAstToIvyAst.prototype.parseReference=function(identifier,value,sourceSpan,references){if(identifier.indexOf('-')>-1){this.reportError("\"-\" is not allowed in reference names",sourceSpan);}references.push(new Reference(identifier,value,sourceSpan));};HtmlAstToIvyAst.prototype.parseAssignmentEvent=function(name,expression,sourceSpan,targetMatchableAttrs,boundEvents){var events=[];this.bindingParser.parseEvent(name+"Change",expression+"=$event",sourceSpan,targetMatchableAttrs,events);addEvents(events,boundEvents);};HtmlAstToIvyAst.prototype.reportError=function(message,sourceSpan,level){if(level===void 0){level=ParseErrorLevel.ERROR;}this.errors.push(new ParseError(sourceSpan,message,level));};return HtmlAstToIvyAst;}();var NonBindableVisitor$1=/** @class */function(){function NonBindableVisitor(){}NonBindableVisitor.prototype.visitElement=function(ast){var preparsedElement=preparseElement(ast);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE||preparsedElement.type===PreparsedElementType.STYLESHEET){// Skipping <script> for security reasons
// Skipping <style> and stylesheets as we already processed them
// in the StyleCompiler
return null;}var children=visitAll(this,ast.children,null);return new Element$1(ast.name,visitAll(this,ast.attrs),/* inputs */[],/* outputs */[],children,/* references */[],ast.sourceSpan,ast.startSourceSpan,ast.endSourceSpan);};NonBindableVisitor.prototype.visitComment=function(comment){return null;};NonBindableVisitor.prototype.visitAttribute=function(attribute){return new TextAttribute(attribute.name,attribute.value,attribute.sourceSpan);};NonBindableVisitor.prototype.visitText=function(text){return new Text$3(text.value,text.sourceSpan);};NonBindableVisitor.prototype.visitExpansion=function(expansion){return null;};NonBindableVisitor.prototype.visitExpansionCase=function(expansionCase){return null;};return NonBindableVisitor;}();var NON_BINDABLE_VISITOR$1=new NonBindableVisitor$1();function normalizeAttributeName(attrName){return /^data-/i.test(attrName)?attrName.substring(5):attrName;}function addEvents(events,boundEvents){boundEvents.push.apply(boundEvents,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(events.map(function(e){return BoundEvent.fromParsedEvent(e);})));}function isEmptyTextNode(node){return node instanceof Text&&node.value.trim().length==0;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Parses string representation of a style and converts it into object literal.
 *
 * @param value string representation of style as used in the `style` attribute in HTML.
 *   Example: `color: red; height: auto`.
 * @returns an object literal. `{ color: 'red', height: 'auto'}`.
 */function parseStyle(value){var styles={};var i=0;var parenDepth=0;var quote=0/* QuoteNone */;var valueStart=0;var propStart=0;var currentProp=null;var valueHasQuotes=false;while(i<value.length){var token=value.charCodeAt(i++);switch(token){case 40/* OpenParen */:parenDepth++;break;case 41/* CloseParen */:parenDepth--;break;case 39/* QuoteSingle */:// valueStart needs to be there since prop values don't
// have quotes in CSS
valueHasQuotes=valueHasQuotes||valueStart>0;if(quote===0/* QuoteNone */){quote=39/* QuoteSingle */;}else if(quote===39/* QuoteSingle */&&value.charCodeAt(i-1)!==92/* BackSlash */){quote=0/* QuoteNone */;}break;case 34/* QuoteDouble */:// same logic as above
valueHasQuotes=valueHasQuotes||valueStart>0;if(quote===0/* QuoteNone */){quote=34/* QuoteDouble */;}else if(quote===34/* QuoteDouble */&&value.charCodeAt(i-1)!==92/* BackSlash */){quote=0/* QuoteNone */;}break;case 58/* Colon */:if(!currentProp&&parenDepth===0&&quote===0/* QuoteNone */){currentProp=hyphenate(value.substring(propStart,i-1).trim());valueStart=i;}break;case 59/* Semicolon */:if(currentProp&&valueStart>0&&parenDepth===0&&quote===0/* QuoteNone */){var styleVal=value.substring(valueStart,i-1).trim();styles[currentProp]=valueHasQuotes?stripUnnecessaryQuotes(styleVal):styleVal;propStart=i;valueStart=0;currentProp=null;valueHasQuotes=false;}break;}}if(currentProp&&valueStart){var styleVal=value.substr(valueStart).trim();styles[currentProp]=valueHasQuotes?stripUnnecessaryQuotes(styleVal):styleVal;}return styles;}function stripUnnecessaryQuotes(value){var qS=value.charCodeAt(0);var qE=value.charCodeAt(value.length-1);if(qS==qE&&(qS==39/* QuoteSingle */||qS==34/* QuoteDouble */)){var tempValue=value.substring(1,value.length-1);// special case to avoid using a multi-quoted string that was just chomped
// (e.g. `font-family: "Verdana", "sans-serif"`)
if(tempValue.indexOf('\'')==-1&&tempValue.indexOf('"')==-1){value=tempValue;}}return value;}function hyphenate(value){return value.replace(/[a-z][A-Z]/g,function(v){return v.charAt(0)+'-'+v.charAt(1);}).toLowerCase();}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function mapBindingToInstruction(type){switch(type){case 0/* Property */:return Identifiers$1.elementProperty;case 2/* Class */:return Identifiers$1.elementClassProp;case 1/* Attribute */:case 4/* Animation */:return Identifiers$1.elementAttribute;default:return undefined;}}//  if (rf & flags) { .. }
function renderFlagCheckIfStmt(flags,statements){return ifStmt(variable(RENDER_FLAGS).bitwiseAnd(literal(flags),null,false),statements);}var TemplateDefinitionBuilder=/** @class */function(){function TemplateDefinitionBuilder(constantPool,parentBindingScope,level,contextName,templateName,viewQueries,directiveMatcher,directives,pipeTypeByName,pipes,_namespace,relativeContextFilePath){if(level===void 0){level=0;}var _this=this;this.constantPool=constantPool;this.level=level;this.contextName=contextName;this.templateName=templateName;this.viewQueries=viewQueries;this.directiveMatcher=directiveMatcher;this.directives=directives;this.pipeTypeByName=pipeTypeByName;this.pipes=pipes;this._namespace=_namespace;this.relativeContextFilePath=relativeContextFilePath;this._dataIndex=0;this._bindingContext=0;this._prefixCode=[];/**
         * List of callbacks to generate creation mode instructions. We store them here as we process
         * the template so bindings in listeners are resolved only once all nodes have been visited.
         * This ensures all local refs and context variables are available for matching.
         */this._creationCodeFns=[];/**
         * List of callbacks to generate update mode instructions. We store them here as we process
         * the template so bindings are resolved only once all nodes have been visited. This ensures
         * all local refs and context variables are available for matching.
         */this._updateCodeFns=[];/** Temporary variable declarations generated from visiting pipes, literals, etc. */this._tempVariables=[];/**
         * List of callbacks to build nested templates. Nested templates must not be visited until
         * after the parent template has finished visiting all of its nodes. This ensures that all
         * local ref bindings in nested templates are able to find local ref values if the refs
         * are defined after the template declaration.
         */this._nestedTemplateFns=[];this._unsupported=unsupported;// Whether we are inside a translatable element (`<p i18n>... somewhere here ... </p>)
this._inI18nSection=false;this._i18nSectionIndex=-1;// Maps of placeholder to node indexes for each of the i18n section
this._phToNodeIdxes=[{}];// Number of slots to reserve for pureFunctions
this._pureFunctionSlots=0;// Number of binding slots
this._bindingSlots=0;// These should be handled in the template or element directly.
this.visitReference=invalid$1;this.visitVariable=invalid$1;this.visitTextAttribute=invalid$1;this.visitBoundAttribute=invalid$1;this.visitBoundEvent=invalid$1;// view queries can take up space in data and allocation happens earlier (in the "viewQuery"
// function)
this._dataIndex=viewQueries.length;this._bindingScope=parentBindingScope.nestedScope(level);// Turn the relative context file path into an identifier by replacing non-alphanumeric
// characters with underscores.
this.fileBasedI18nSuffix=relativeContextFilePath.replace(/[^A-Za-z0-9]/g,'_')+'_';this._valueConverter=new ValueConverter(constantPool,function(){return _this.allocateDataSlot();},function(numSlots){return _this.allocatePureFunctionSlots(numSlots);},function(name,localName,slot,value){var pipeType=pipeTypeByName.get(name);if(pipeType){_this.pipes.add(pipeType);}_this._bindingScope.set(_this.level,localName,value);_this.creationInstruction(null,Identifiers$1.pipe,[literal(slot),literal(name)]);});}TemplateDefinitionBuilder.prototype.registerContextVariables=function(variable$$1){var scopedName=this._bindingScope.freshReferenceName();var retrievalLevel=this.level;var lhs=variable(variable$$1.name+scopedName);this._bindingScope.set(retrievalLevel,variable$$1.name,lhs,1/* CONTEXT */,function(scope,relativeLevel){var rhs;if(scope.bindingLevel===retrievalLevel){// e.g. ctx
rhs=variable(CONTEXT_NAME);}else{var sharedCtxVar=scope.getSharedContextName(retrievalLevel);// e.g. ctx_r0   OR  x(2);
rhs=sharedCtxVar?sharedCtxVar:generateNextContextExpr(relativeLevel);}// e.g. const $item$ = x(2).$implicit;
return[lhs.set(rhs.prop(variable$$1.value||IMPLICIT_REFERENCE)).toConstDecl()];});};TemplateDefinitionBuilder.prototype.buildTemplateFunction=function(nodes,variables,hasNgContent,ngContentSelectors){var _this=this;if(hasNgContent===void 0){hasNgContent=false;}if(ngContentSelectors===void 0){ngContentSelectors=[];}var e_1,_a;if(this._namespace!==Identifiers$1.namespaceHTML){this.creationInstruction(null,this._namespace);}// Create variable bindings
variables.forEach(function(v){return _this.registerContextVariables(v);});// Output a `ProjectionDef` instruction when some `<ng-content>` are present
if(hasNgContent){var parameters=[];// Only selectors with a non-default value are generated
if(ngContentSelectors.length>1){var r3Selectors=ngContentSelectors.map(function(s){return parseSelectorToR3Selector(s);});// `projectionDef` needs both the parsed and raw value of the selectors
var parsed=this.constantPool.getConstLiteral(asLiteral(r3Selectors),true);var unParsed=this.constantPool.getConstLiteral(asLiteral(ngContentSelectors),true);parameters.push(parsed,unParsed);}this.creationInstruction(null,Identifiers$1.projectionDef,parameters);}// This is the initial pass through the nodes of this template. In this pass, we
// queue all creation mode and update mode instructions for generation in the second
// pass. It's necessary to separate the passes to ensure local refs are defined before
// resolving bindings. We also count bindings in this pass as we walk bound expressions.
visitAll$1(this,nodes);// Add total binding count to pure function count so pure function instructions are
// generated with the correct slot offset when update instructions are processed.
this._pureFunctionSlots+=this._bindingSlots;// Pipes are walked in the first pass (to enqueue `pipe()` creation instructions and
// `pipeBind` update instructions), so we have to update the slot offsets manually
// to account for bindings.
this._valueConverter.updatePipeSlotOffsets(this._bindingSlots);// Nested templates must be processed before creation instructions so template()
// instructions can be generated with the correct internal const count.
this._nestedTemplateFns.forEach(function(buildTemplateFn){return buildTemplateFn();});// Generate all the creation mode instructions (e.g. resolve bindings in listeners)
var creationStatements=this._creationCodeFns.map(function(fn$$1){return fn$$1();});// Generate all the update mode instructions (e.g. resolve property or text bindings)
var updateStatements=this._updateCodeFns.map(function(fn$$1){return fn$$1();});//  Variable declaration must occur after binding resolution so we can generate context
//  instructions that build on each other. e.g. const b = x().$implicit(); const b = x();
var creationVariables=this._bindingScope.viewSnapshotStatements();var updateVariables=this._bindingScope.variableDeclarations().concat(this._tempVariables);var creationBlock=creationStatements.length>0?[renderFlagCheckIfStmt(1/* Create */,creationVariables.concat(creationStatements))]:[];var updateBlock=updateStatements.length>0?[renderFlagCheckIfStmt(2/* Update */,updateVariables.concat(updateStatements))]:[];try{// Generate maps of placeholder name to node indexes
// TODO(vicb): This is a WIP, not fully supported yet
for(var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(this._phToNodeIdxes),_c=_b.next();!_c.done;_c=_b.next()){var phToNodeIdx=_c.value;if(Object.keys(phToNodeIdx).length>0){var scopedName=this._bindingScope.freshReferenceName();var phMap=variable(scopedName).set(mapToExpression(phToNodeIdx,true)).toConstDecl();this._prefixCode.push(phMap);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return fn(// i.e. (rf: RenderFlags, ctx: any)
[new FnParam(RENDER_FLAGS,NUMBER_TYPE),new FnParam(CONTEXT_NAME,null)],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this._prefixCode,creationBlock,updateBlock),INFERRED_TYPE,null,this.templateName);};// LocalResolver
TemplateDefinitionBuilder.prototype.getLocal=function(name){return this._bindingScope.get(name);};TemplateDefinitionBuilder.prototype.i18nTranslate=function(label,meta){return this.constantPool.getTranslation(label,parseI18nMeta(meta),this.fileBasedI18nSuffix);};TemplateDefinitionBuilder.prototype.visitContent=function(ngContent){var slot=this.allocateDataSlot();var selectorIndex=ngContent.selectorIndex;var parameters=[literal(slot)];var attributeAsList=[];ngContent.attributes.forEach(function(attribute){var name=attribute.name;if(name!=='select'){attributeAsList.push(name,attribute.value);}});if(attributeAsList.length>0){parameters.push(literal(selectorIndex),asLiteral(attributeAsList));}else if(selectorIndex!==0){parameters.push(literal(selectorIndex));}this.creationInstruction(ngContent.sourceSpan,Identifiers$1.projection,parameters);};TemplateDefinitionBuilder.prototype.getNamespaceInstruction=function(namespaceKey){switch(namespaceKey){case'math':return Identifiers$1.namespaceMathML;case'svg':return Identifiers$1.namespaceSVG;default:return Identifiers$1.namespaceHTML;}};TemplateDefinitionBuilder.prototype.addNamespaceInstruction=function(nsInstruction,element){this._namespace=nsInstruction;this.creationInstruction(element.sourceSpan,nsInstruction);};TemplateDefinitionBuilder.prototype.visitElement=function(element){var _this=this;var e_2,_a;var elementIndex=this.allocateDataSlot();var wasInI18nSection=this._inI18nSection;var outputAttrs={};var attrI18nMetas={};var i18nMeta='';var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(splitNsName(element.name),2),namespaceKey=_b[0],elementName=_b[1];var isNgContainer$$1=isNgContainer(element.name);// Elements inside i18n sections are replaced with placeholders
// TODO(vicb): nested elements are a WIP in this phase
if(this._inI18nSection){var phName=element.name.toLowerCase();if(!this._phToNodeIdxes[this._i18nSectionIndex][phName]){this._phToNodeIdxes[this._i18nSectionIndex][phName]=[];}this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);}var isNonBindableMode=false;try{// Handle i18n and ngNonBindable attributes
for(var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(element.attributes),_d=_c.next();!_d.done;_d=_c.next()){var attr=_d.value;var name_1=attr.name;var value=attr.value;if(name_1===NON_BINDABLE_ATTR){isNonBindableMode=true;}else if(name_1===I18N_ATTR){if(this._inI18nSection){throw new Error("Could not mark an element as translatable inside of a translatable section");}this._inI18nSection=true;this._i18nSectionIndex++;this._phToNodeIdxes[this._i18nSectionIndex]={};i18nMeta=value;}else if(name_1.startsWith(I18N_ATTR_PREFIX)){attrI18nMetas[name_1.slice(I18N_ATTR_PREFIX.length)]=value;}else{outputAttrs[name_1]=value;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_2)throw e_2.error;}}// Match directives on non i18n attributes
this.matchDirectives(element.name,element);// Regular element or ng-container creation mode
var parameters=[literal(elementIndex)];if(!isNgContainer$$1){parameters.push(literal(elementName));}// Add the attributes
var attributes=[];var initialStyleDeclarations=[];var initialClassDeclarations=[];var styleInputs=[];var classInputs=[];var allOtherInputs=[];var i18nAttrs=[];element.inputs.forEach(function(input){switch(input.type){// [attr.style] or [attr.class] should not be treated as styling-based
// bindings since they are intended to be written directly to the attr
// and therefore will skip all style/class resolution that is present
// with style="", [style]="" and [style.prop]="", class="",
// [class.prop]="". [class]="" assignments
case 0/* Property */:if(input.name=='style'){// this should always go first in the compilation (for [style])
styleInputs.splice(0,0,input);}else if(isClassBinding(input)){// this should always go first in the compilation (for [class])
classInputs.splice(0,0,input);}else if(attrI18nMetas.hasOwnProperty(input.name)){i18nAttrs.push({name:input.name,value:input.value});}else{allOtherInputs.push(input);}break;case 3/* Style */:styleInputs.push(input);break;case 2/* Class */:classInputs.push(input);break;default:allOtherInputs.push(input);break;}});var currStyleIndex=0;var currClassIndex=0;var staticStylesMap=null;var staticClassesMap=null;var stylesIndexMap={};var classesIndexMap={};Object.getOwnPropertyNames(outputAttrs).forEach(function(name){var value=outputAttrs[name];if(name=='style'){staticStylesMap=parseStyle(value);Object.keys(staticStylesMap).forEach(function(prop){stylesIndexMap[prop]=currStyleIndex++;});}else if(name=='class'){staticClassesMap={};value.split(/\s+/g).forEach(function(className){classesIndexMap[className]=currClassIndex++;staticClassesMap[className]=true;});}else{if(attrI18nMetas.hasOwnProperty(name)){i18nAttrs.push({name:name,value:value});}else{attributes.push(literal(name),literal(value));}}});var hasMapBasedStyling=false;for(var i=0;i<styleInputs.length;i++){var input=styleInputs[i];var isMapBasedStyleBinding=i===0&&input.name==='style';if(isMapBasedStyleBinding){hasMapBasedStyling=true;}else if(!stylesIndexMap.hasOwnProperty(input.name)){stylesIndexMap[input.name]=currStyleIndex++;}}for(var i=0;i<classInputs.length;i++){var input=classInputs[i];var isMapBasedClassBinding=i===0&&isClassBinding(input);if(!isMapBasedClassBinding&&!stylesIndexMap.hasOwnProperty(input.name)){classesIndexMap[input.name]=currClassIndex++;}}// in the event that a [style] binding is used then sanitization will
// always be imported because it is not possible to know ahead of time
// whether style bindings will use or not use any sanitizable properties
// that isStyleSanitizable() will detect
var useDefaultStyleSanitizer=hasMapBasedStyling;// this will build the instructions so that they fall into the following syntax
// => [prop1, prop2, prop3, 0, prop1, value1, prop2, value2]
Object.keys(stylesIndexMap).forEach(function(prop){useDefaultStyleSanitizer=useDefaultStyleSanitizer||isStyleSanitizable(prop);initialStyleDeclarations.push(literal(prop));});if(staticStylesMap){initialStyleDeclarations.push(literal(1/* VALUES_MODE */));Object.keys(staticStylesMap).forEach(function(prop){initialStyleDeclarations.push(literal(prop));var value=staticStylesMap[prop];initialStyleDeclarations.push(literal(value));});}Object.keys(classesIndexMap).forEach(function(prop){initialClassDeclarations.push(literal(prop));});if(staticClassesMap){initialClassDeclarations.push(literal(1/* VALUES_MODE */));Object.keys(staticClassesMap).forEach(function(className){initialClassDeclarations.push(literal(className));initialClassDeclarations.push(literal(true));});}var hasStylingInstructions=initialStyleDeclarations.length||styleInputs.length||initialClassDeclarations.length||classInputs.length;// add attributes for directive matching purposes
attributes.push.apply(attributes,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this.prepareSyntheticAndSelectOnlyAttrs(allOtherInputs,element.outputs)));parameters.push(this.toAttrsParam(attributes));// local refs (ex.: <div #foo #bar="baz">)
parameters.push(this.prepareRefsParameter(element.references));var wasInNamespace=this._namespace;var currentNamespace=this.getNamespaceInstruction(namespaceKey);// If the namespace is changing now, include an instruction to change it
// during element creation.
if(currentNamespace!==wasInNamespace){this.addNamespaceInstruction(currentNamespace,element);}var implicit=variable(CONTEXT_NAME);var createSelfClosingInstruction=!hasStylingInstructions&&!isNgContainer$$1&&element.children.length===0&&element.outputs.length===0&&i18nAttrs.length===0;if(createSelfClosingInstruction){this.creationInstruction(element.sourceSpan,Identifiers$1.element,trimTrailingNulls(parameters));}else{this.creationInstruction(element.sourceSpan,isNgContainer$$1?Identifiers$1.elementContainerStart:Identifiers$1.elementStart,trimTrailingNulls(parameters));if(isNonBindableMode){this.creationInstruction(element.sourceSpan,Identifiers$1.disableBindings);}// process i18n element attributes
if(i18nAttrs.length){var hasBindings_1=false;var i18nAttrArgs_1=[];i18nAttrs.forEach(function(_a){var name=_a.name,value=_a.value;var meta=attrI18nMetas[name];if(typeof value==='string'){// in case of static string value, 3rd argument is 0 declares
// that there are no expressions defined in this translation
i18nAttrArgs_1.push(literal(name),_this.i18nTranslate(value,meta),literal(0));}else{var converted=value.visit(_this._valueConverter);if(converted instanceof Interpolation){var strings=converted.strings,expressions=converted.expressions;var label=assembleI18nTemplate(strings);i18nAttrArgs_1.push(literal(name),_this.i18nTranslate(label,meta),literal(expressions.length));expressions.forEach(function(expression){hasBindings_1=true;var binding=_this.convertExpressionBinding(implicit,expression);_this.updateInstruction(element.sourceSpan,Identifiers$1.i18nExp,[binding]);});}}});if(i18nAttrArgs_1.length){var index=literal(this.allocateDataSlot());var args=this.constantPool.getConstLiteral(literalArr(i18nAttrArgs_1),true);this.creationInstruction(element.sourceSpan,Identifiers$1.i18nAttribute,[index,args]);if(hasBindings_1){this.updateInstruction(element.sourceSpan,Identifiers$1.i18nApply,[index]);}}}// initial styling for static style="..." attributes
if(hasStylingInstructions){var paramsList=[];if(initialClassDeclarations.length){// the template compiler handles initial class styling (e.g. class="foo") values
// in a special command called `elementClass` so that the initial class
// can be processed during runtime. These initial class values are bound to
// a constant because the inital class values do not change (since they're static).
paramsList.push(this.constantPool.getConstLiteral(literalArr(initialClassDeclarations),true));}else if(initialStyleDeclarations.length||useDefaultStyleSanitizer){// no point in having an extra `null` value unless there are follow-up params
paramsList.push(NULL_EXPR);}if(initialStyleDeclarations.length){// the template compiler handles initial style (e.g. style="foo") values
// in a special command called `elementStyle` so that the initial styles
// can be processed during runtime. These initial styles values are bound to
// a constant because the inital style values do not change (since they're static).
paramsList.push(this.constantPool.getConstLiteral(literalArr(initialStyleDeclarations),true));}else if(useDefaultStyleSanitizer){// no point in having an extra `null` value unless there are follow-up params
paramsList.push(NULL_EXPR);}if(useDefaultStyleSanitizer){paramsList.push(importExpr(Identifiers$1.defaultStyleSanitizer));}this.creationInstruction(null,Identifiers$1.elementStyling,paramsList);}// Generate Listeners (outputs)
element.outputs.forEach(function(outputAst){_this.creationInstruction(outputAst.sourceSpan,Identifiers$1.listener,_this.prepareListenerParameter(element.name,outputAst));});}if((styleInputs.length||classInputs.length)&&hasStylingInstructions){var indexLiteral_1=literal(elementIndex);var firstStyle=styleInputs[0];var mapBasedStyleInput_1=firstStyle&&firstStyle.name=='style'?firstStyle:null;var firstClass=classInputs[0];var mapBasedClassInput_1=firstClass&&isClassBinding(firstClass)?firstClass:null;var stylingInput=mapBasedStyleInput_1||mapBasedClassInput_1;if(stylingInput){this.updateInstruction(stylingInput.sourceSpan,Identifiers$1.elementStylingMap,function(){var params=[indexLiteral_1];if(mapBasedClassInput_1){var mapBasedClassValue=mapBasedClassInput_1.value.visit(_this._valueConverter);params.push(_this.convertPropertyBinding(implicit,mapBasedClassValue,true));}else if(mapBasedStyleInput_1){params.push(NULL_EXPR);}if(mapBasedStyleInput_1){var mapBasedStyleValue=mapBasedStyleInput_1.value.visit(_this._valueConverter);params.push(_this.convertPropertyBinding(implicit,mapBasedStyleValue,true));}return params;});}var lastInputCommand=null;if(styleInputs.length){var i=mapBasedStyleInput_1?1:0;for(i;i<styleInputs.length;i++){var input=styleInputs[i];var key=input.name;var styleIndex=stylesIndexMap[key];var value=input.value.visit(this._valueConverter);var params=[indexLiteral_1,literal(styleIndex),this.convertPropertyBinding(implicit,value,true)];if(input.unit!=null){params.push(literal(input.unit));}this.updateInstruction(input.sourceSpan,Identifiers$1.elementStyleProp,params);}lastInputCommand=styleInputs[styleInputs.length-1];}if(classInputs.length){var i=mapBasedClassInput_1?1:0;var _loop_1=function _loop_1(){var input=classInputs[i];var params=[];var sanitizationRef=resolveSanitizationFn(input,input.securityContext);if(sanitizationRef)params.push(sanitizationRef);var key=input.name;var classIndex=classesIndexMap[key];var value=input.value.visit(this_1._valueConverter);this_1.updateInstruction(input.sourceSpan,Identifiers$1.elementClassProp,function(){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([indexLiteral_1,literal(classIndex),_this.convertPropertyBinding(implicit,value,true)],params);});};var this_1=this;for(i;i<classInputs.length;i++){_loop_1();}lastInputCommand=classInputs[classInputs.length-1];}this.updateInstruction(lastInputCommand.sourceSpan,Identifiers$1.elementStylingApply,[indexLiteral_1]);}// Generate element input bindings
allOtherInputs.forEach(function(input){var instruction=mapBindingToInstruction(input.type);if(input.type===4/* Animation */){var value_1=input.value.visit(_this._valueConverter);// setAttribute without a value doesn't make any sense
if(value_1.name||value_1.value){var name_2=prepareSyntheticAttributeName(input.name);_this.updateInstruction(input.sourceSpan,Identifiers$1.elementAttribute,function(){return[literal(elementIndex),literal(name_2),_this.convertPropertyBinding(implicit,value_1)];});}}else if(instruction){var params_1=[];var sanitizationRef=resolveSanitizationFn(input,input.securityContext);if(sanitizationRef)params_1.push(sanitizationRef);// TODO(chuckj): runtime: security context
var value_2=input.value.visit(_this._valueConverter);_this.allocateBindingSlots(value_2);_this.updateInstruction(input.sourceSpan,instruction,function(){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([literal(elementIndex),literal(input.name),_this.convertPropertyBinding(implicit,value_2)],params_1);});}else{_this._unsupported("binding type "+input.type);}});// Traverse element child nodes
if(this._inI18nSection&&element.children.length==1&&element.children[0]instanceof Text$3){var text=element.children[0];this.visitSingleI18nTextChild(text,i18nMeta);}else{visitAll$1(this,element.children);}if(!createSelfClosingInstruction){// Finish element construction mode.
if(isNonBindableMode){this.creationInstruction(element.endSourceSpan||element.sourceSpan,Identifiers$1.enableBindings);}this.creationInstruction(element.endSourceSpan||element.sourceSpan,isNgContainer$$1?Identifiers$1.elementContainerEnd:Identifiers$1.elementEnd);}// Restore the state before exiting this node
this._inI18nSection=wasInI18nSection;};TemplateDefinitionBuilder.prototype.visitTemplate=function(template){var _this=this;var templateIndex=this.allocateDataSlot();var elName='';if(template.children.length===1&&template.children[0]instanceof Element$1){// When the template as a single child, derive the context name from the tag
elName=sanitizeIdentifier(template.children[0].name);}var contextName=elName?this.contextName+"_"+elName:'';var templateName=contextName?contextName+"_Template_"+templateIndex:"Template_"+templateIndex;var parameters=[literal(templateIndex),variable(templateName),TYPED_NULL_EXPR];// find directives matching on a given <ng-template> node
this.matchDirectives('ng-template',template);// prepare attributes parameter (including attributes used for directive matching)
var attrsExprs=[];template.attributes.forEach(function(a){attrsExprs.push(asLiteral(a.name),asLiteral(a.value));});attrsExprs.push.apply(attrsExprs,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this.prepareSyntheticAndSelectOnlyAttrs(template.inputs,template.outputs)));parameters.push(this.toAttrsParam(attrsExprs));// local refs (ex.: <ng-template #foo>)
if(template.references&&template.references.length){parameters.push(this.prepareRefsParameter(template.references));parameters.push(importExpr(Identifiers$1.templateRefExtractor));}// handle property bindings e.g. p(1, 'forOf', ɵbind(ctx.items));
var context=variable(CONTEXT_NAME);template.inputs.forEach(function(input){var value=input.value.visit(_this._valueConverter);_this.allocateBindingSlots(value);_this.updateInstruction(template.sourceSpan,Identifiers$1.elementProperty,function(){return[literal(templateIndex),literal(input.name),_this.convertPropertyBinding(context,value)];});});// Create the template function
var templateVisitor=new TemplateDefinitionBuilder(this.constantPool,this._bindingScope,this.level+1,contextName,templateName,[],this.directiveMatcher,this.directives,this.pipeTypeByName,this.pipes,this._namespace,this.fileBasedI18nSuffix);// Nested templates must not be visited until after their parent templates have completed
// processing, so they are queued here until after the initial pass. Otherwise, we wouldn't
// be able to support bindings in nested templates to local refs that occur after the
// template definition. e.g. <div *ngIf="showing"> {{ foo }} </div>  <div #foo></div>
this._nestedTemplateFns.push(function(){var templateFunctionExpr=templateVisitor.buildTemplateFunction(template.children,template.variables);_this.constantPool.statements.push(templateFunctionExpr.toDeclStmt(templateName,null));});// e.g. template(1, MyComp_Template_1)
this.creationInstruction(template.sourceSpan,Identifiers$1.templateCreate,function(){parameters.splice(2,0,literal(templateVisitor.getConstCount()),literal(templateVisitor.getVarCount()));return trimTrailingNulls(parameters);});// Generate listeners for directive output
template.outputs.forEach(function(outputAst){_this.creationInstruction(outputAst.sourceSpan,Identifiers$1.listener,_this.prepareListenerParameter('ng_template',outputAst));});};TemplateDefinitionBuilder.prototype.visitBoundText=function(text){var _this=this;var nodeIndex=this.allocateDataSlot();this.creationInstruction(text.sourceSpan,Identifiers$1.text,[literal(nodeIndex)]);var value=text.value.visit(this._valueConverter);this.allocateBindingSlots(value);this.updateInstruction(text.sourceSpan,Identifiers$1.textBinding,function(){return[literal(nodeIndex),_this.convertPropertyBinding(variable(CONTEXT_NAME),value)];});};TemplateDefinitionBuilder.prototype.visitText=function(text){this.creationInstruction(text.sourceSpan,Identifiers$1.text,[literal(this.allocateDataSlot()),literal(text.value)]);};// When the content of the element is a single text node the translation can be inlined:
//
// `<p i18n="desc|mean">some content</p>`
// compiles to
// ```
// /**
// * @desc desc
// * @meaning mean
// */
// const MSG_XYZ = goog.getMsg('some content');
// i0.ɵtext(1, MSG_XYZ);
// ```
TemplateDefinitionBuilder.prototype.visitSingleI18nTextChild=function(text,i18nMeta){var variable$$1=this.i18nTranslate(text.value,i18nMeta);this.creationInstruction(text.sourceSpan,Identifiers$1.text,[literal(this.allocateDataSlot()),variable$$1]);};TemplateDefinitionBuilder.prototype.allocateDataSlot=function(){return this._dataIndex++;};TemplateDefinitionBuilder.prototype.getConstCount=function(){return this._dataIndex;};TemplateDefinitionBuilder.prototype.getVarCount=function(){return this._pureFunctionSlots;};TemplateDefinitionBuilder.prototype.bindingContext=function(){return""+this._bindingContext++;};// Bindings must only be resolved after all local refs have been visited, so all
// instructions are queued in callbacks that execute once the initial pass has completed.
// Otherwise, we wouldn't be able to support local refs that are defined after their
// bindings. e.g. {{ foo }} <div #foo></div>
TemplateDefinitionBuilder.prototype.instructionFn=function(fns,span,reference,paramsOrFn){fns.push(function(){var params=Array.isArray(paramsOrFn)?paramsOrFn:paramsOrFn();return instruction(span,reference,params).toStmt();});};TemplateDefinitionBuilder.prototype.creationInstruction=function(span,reference,paramsOrFn){this.instructionFn(this._creationCodeFns,span,reference,paramsOrFn||[]);};TemplateDefinitionBuilder.prototype.updateInstruction=function(span,reference,paramsOrFn){this.instructionFn(this._updateCodeFns,span,reference,paramsOrFn||[]);};TemplateDefinitionBuilder.prototype.allocatePureFunctionSlots=function(numSlots){var originalSlots=this._pureFunctionSlots;this._pureFunctionSlots+=numSlots;return originalSlots;};TemplateDefinitionBuilder.prototype.allocateBindingSlots=function(value){this._bindingSlots+=value instanceof Interpolation?value.expressions.length:1;};TemplateDefinitionBuilder.prototype.convertExpressionBinding=function(implicit,value){var convertedPropertyBinding=convertPropertyBinding(this,implicit,value,this.bindingContext(),BindingForm.TrySimple);var valExpr=convertedPropertyBinding.currValExpr;return importExpr(Identifiers$1.bind).callFn([valExpr]);};TemplateDefinitionBuilder.prototype.convertPropertyBinding=function(implicit,value,skipBindFn){var _a;var interpolationFn=value instanceof Interpolation?interpolate:function(){return error('Unexpected interpolation');};var convertedPropertyBinding=convertPropertyBinding(this,implicit,value,this.bindingContext(),BindingForm.TrySimple,interpolationFn);(_a=this._tempVariables).push.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(convertedPropertyBinding.stmts));var valExpr=convertedPropertyBinding.currValExpr;return value instanceof Interpolation||skipBindFn?valExpr:importExpr(Identifiers$1.bind).callFn([valExpr]);};TemplateDefinitionBuilder.prototype.matchDirectives=function(tagName,elOrTpl){var _this=this;if(this.directiveMatcher){var selector=createCssSelector(tagName,getAttrsForDirectiveMatching(elOrTpl));this.directiveMatcher.match(selector,function(cssSelector,staticType){_this.directives.add(staticType);});}};TemplateDefinitionBuilder.prototype.prepareSyntheticAndSelectOnlyAttrs=function(inputs,outputs){var attrExprs=[];var nonSyntheticInputs=[];if(inputs.length){var EMPTY_STRING_EXPR_1=asLiteral('');inputs.forEach(function(input){if(input.type===4/* Animation */){// @attributes are for Renderer2 animation @triggers, but this feature
// may be supported differently in future versions of angular. However,
// @triggers should always just be treated as regular attributes (it's up
// to the renderer to detect and use them in a special way).
attrExprs.push(asLiteral(prepareSyntheticAttributeName(input.name)),EMPTY_STRING_EXPR_1);}else{nonSyntheticInputs.push(input);}});}if(nonSyntheticInputs.length||outputs.length){attrExprs.push(literal(1/* SelectOnly */));nonSyntheticInputs.forEach(function(i){return attrExprs.push(asLiteral(i.name));});outputs.forEach(function(o){return attrExprs.push(asLiteral(o.name));});}return attrExprs;};TemplateDefinitionBuilder.prototype.toAttrsParam=function(attrsExprs){return attrsExprs.length>0?this.constantPool.getConstLiteral(literalArr(attrsExprs),true):TYPED_NULL_EXPR;};TemplateDefinitionBuilder.prototype.prepareRefsParameter=function(references){var _this=this;if(!references||references.length===0){return TYPED_NULL_EXPR;}var refsParam=flatten(references.map(function(reference){var slot=_this.allocateDataSlot();// Generate the update temporary.
var variableName=_this._bindingScope.freshReferenceName();var retrievalLevel=_this.level;var lhs=variable(variableName);_this._bindingScope.set(retrievalLevel,reference.name,lhs,0/* DEFAULT */,function(scope,relativeLevel){// e.g. x(2);
var nextContextStmt=relativeLevel>0?[generateNextContextExpr(relativeLevel).toStmt()]:[];// e.g. const $foo$ = r(1);
var refExpr=lhs.set(importExpr(Identifiers$1.reference).callFn([literal(slot)]));return nextContextStmt.concat(refExpr.toConstDecl());});return[reference.name,reference.value];}));return this.constantPool.getConstLiteral(asLiteral(refsParam),true);};TemplateDefinitionBuilder.prototype.prepareListenerParameter=function(tagName,outputAst){var _this=this;var evNameSanitized=sanitizeIdentifier(outputAst.name);var tagNameSanitized=sanitizeIdentifier(tagName);var functionName=this.templateName+"_"+tagNameSanitized+"_"+evNameSanitized+"_listener";return function(){var listenerScope=_this._bindingScope.nestedScope(_this._bindingScope.bindingLevel);var bindingExpr=convertActionBinding(listenerScope,variable(CONTEXT_NAME),outputAst.handler,'b',function(){return error('Unexpected interpolation');});var statements=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(listenerScope.restoreViewStatement(),listenerScope.variableDeclarations(),bindingExpr.render3Stmts);var handler=fn([new FnParam('$event',DYNAMIC_TYPE)],statements,INFERRED_TYPE,null,functionName);return[literal(outputAst.name),handler];};};return TemplateDefinitionBuilder;}();var ValueConverter=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ValueConverter,_super);function ValueConverter(constantPool,allocateSlot,allocatePureFunctionSlots,definePipe){var _this=_super.call(this)||this;_this.constantPool=constantPool;_this.allocateSlot=allocateSlot;_this.allocatePureFunctionSlots=allocatePureFunctionSlots;_this.definePipe=definePipe;_this._pipeBindExprs=[];return _this;}// AstMemoryEfficientTransformer
ValueConverter.prototype.visitPipe=function(pipe,context){// Allocate a slot to create the pipe
var slot=this.allocateSlot();var slotPseudoLocal="PIPE:"+slot;// Allocate one slot for the result plus one slot per pipe argument
var pureFunctionSlot=this.allocatePureFunctionSlots(2+pipe.args.length);var target=new PropertyRead(pipe.span,new ImplicitReceiver(pipe.span),slotPseudoLocal);var _a=pipeBindingCallInfo(pipe.args),identifier=_a.identifier,isVarLength=_a.isVarLength;this.definePipe(pipe.name,slotPseudoLocal,slot,importExpr(identifier));var args=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([pipe.exp],pipe.args);var convertedArgs=isVarLength?this.visitAll([new LiteralArray(pipe.span,args)]):this.visitAll(args);var pipeBindExpr=new FunctionCall(pipe.span,target,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([new LiteralPrimitive(pipe.span,slot),new LiteralPrimitive(pipe.span,pureFunctionSlot)],convertedArgs));this._pipeBindExprs.push(pipeBindExpr);return pipeBindExpr;};ValueConverter.prototype.updatePipeSlotOffsets=function(bindingSlots){this._pipeBindExprs.forEach(function(pipe){// update the slot offset arg (index 1) to account for binding slots
var slotOffset=pipe.args[1];slotOffset.value+=bindingSlots;});};ValueConverter.prototype.visitLiteralArray=function(array,context){var _this=this;return new BuiltinFunctionCall(array.span,this.visitAll(array.expressions),function(values){// If the literal has calculated (non-literal) elements transform it into
// calls to literal factories that compose the literal and will cache intermediate
// values. Otherwise, just return an literal array that contains the values.
var literal$$1=literalArr(values);return values.every(function(a){return a.isConstant();})?_this.constantPool.getConstLiteral(literal$$1,true):getLiteralFactory(_this.constantPool,literal$$1,_this.allocatePureFunctionSlots);});};ValueConverter.prototype.visitLiteralMap=function(map,context){var _this=this;return new BuiltinFunctionCall(map.span,this.visitAll(map.values),function(values){// If the literal has calculated (non-literal) elements  transform it into
// calls to literal factories that compose the literal and will cache intermediate
// values. Otherwise, just return an literal array that contains the values.
var literal$$1=literalMap(values.map(function(value,index){return{key:map.keys[index].key,value:value,quoted:map.keys[index].quoted};}));return values.every(function(a){return a.isConstant();})?_this.constantPool.getConstLiteral(literal$$1,true):getLiteralFactory(_this.constantPool,literal$$1,_this.allocatePureFunctionSlots);});};return ValueConverter;}(AstMemoryEfficientTransformer);// Pipes always have at least one parameter, the value they operate on
var pipeBindingIdentifiers=[Identifiers$1.pipeBind1,Identifiers$1.pipeBind2,Identifiers$1.pipeBind3,Identifiers$1.pipeBind4];function pipeBindingCallInfo(args){var identifier=pipeBindingIdentifiers[args.length];return{identifier:identifier||Identifiers$1.pipeBindV,isVarLength:!identifier};}var pureFunctionIdentifiers=[Identifiers$1.pureFunction0,Identifiers$1.pureFunction1,Identifiers$1.pureFunction2,Identifiers$1.pureFunction3,Identifiers$1.pureFunction4,Identifiers$1.pureFunction5,Identifiers$1.pureFunction6,Identifiers$1.pureFunction7,Identifiers$1.pureFunction8];function pureFunctionCallInfo(args){var identifier=pureFunctionIdentifiers[args.length];return{identifier:identifier||Identifiers$1.pureFunctionV,isVarLength:!identifier};}function instruction(span,reference,params){return importExpr(reference,null,span).callFn(params,span);}// e.g. x(2);
function generateNextContextExpr(relativeLevelDiff){return importExpr(Identifiers$1.nextContext).callFn(relativeLevelDiff>1?[literal(relativeLevelDiff)]:[]);}function getLiteralFactory(constantPool,literal$$1,allocateSlots){var _a=constantPool.getLiteralFactory(literal$$1),literalFactory=_a.literalFactory,literalFactoryArguments=_a.literalFactoryArguments;// Allocate 1 slot for the result plus 1 per argument
var startSlot=allocateSlots(1+literalFactoryArguments.length);literalFactoryArguments.length>0||error("Expected arguments to a literal factory function");var _b=pureFunctionCallInfo(literalFactoryArguments),identifier=_b.identifier,isVarLength=_b.isVarLength;// Literal factories are pure functions that only need to be re-invoked when the parameters
// change.
var args=[literal(startSlot),literalFactory];if(isVarLength){args.push(literalArr(literalFactoryArguments));}else{args.push.apply(args,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(literalFactoryArguments));}return importExpr(identifier).callFn(args);}/** The prefix used to get a shared context in BindingScope's map. */var SHARED_CONTEXT_KEY='$$shared_ctx$$';var BindingScope=/** @class */function(){function BindingScope(bindingLevel,parent){if(bindingLevel===void 0){bindingLevel=0;}if(parent===void 0){parent=null;}this.bindingLevel=bindingLevel;this.parent=parent;/** Keeps a map from local variables to their BindingData. */this.map=new Map();this.referenceNameIndex=0;this.restoreViewVariable=null;}Object.defineProperty(BindingScope,"ROOT_SCOPE",{get:function get(){if(!BindingScope._ROOT_SCOPE){BindingScope._ROOT_SCOPE=new BindingScope().set(0,'$event',variable('$event'));}return BindingScope._ROOT_SCOPE;},enumerable:true,configurable:true});BindingScope.prototype.get=function(name){var current=this;while(current){var value=current.map.get(name);if(value!=null){if(current!==this){// make a local copy and reset the `declare` state
value={retrievalLevel:value.retrievalLevel,lhs:value.lhs,declareLocalCallback:value.declareLocalCallback,declare:false,priority:value.priority};// Cache the value locally.
this.map.set(name,value);// Possibly generate a shared context var
this.maybeGenerateSharedContextVar(value);this.maybeRestoreView(value.retrievalLevel);}if(value.declareLocalCallback&&!value.declare){value.declare=true;}return value.lhs;}current=current.parent;}// If we get to this point, we are looking for a property on the top level component
// - If level === 0, we are on the top and don't need to re-declare `ctx`.
// - If level > 0, we are in an embedded view. We need to retrieve the name of the
// local var we used to store the component context, e.g. const $comp$ = x();
return this.bindingLevel===0?null:this.getComponentProperty(name);};/**
     * Create a local variable for later reference.
     *
     * @param retrievalLevel The level from which this value can be retrieved
     * @param name Name of the variable.
     * @param lhs AST representing the left hand side of the `let lhs = rhs;`.
     * @param priority The sorting priority of this var
     * @param declareLocalCallback The callback to invoke when declaring this local var
     */BindingScope.prototype.set=function(retrievalLevel,name,lhs,priority,declareLocalCallback){if(priority===void 0){priority=0/* DEFAULT */;}!this.map.has(name)||error("The name "+name+" is already defined in scope to be "+this.map.get(name));this.map.set(name,{retrievalLevel:retrievalLevel,lhs:lhs,declare:false,declareLocalCallback:declareLocalCallback,priority:priority});return this;};BindingScope.prototype.getLocal=function(name){return this.get(name);};BindingScope.prototype.nestedScope=function(level){var newScope=new BindingScope(level,this);if(level>0)newScope.generateSharedContextVar(0);return newScope;};BindingScope.prototype.getSharedContextName=function(retrievalLevel){var sharedCtxObj=this.map.get(SHARED_CONTEXT_KEY+retrievalLevel);return sharedCtxObj&&sharedCtxObj.declare?sharedCtxObj.lhs:null;};BindingScope.prototype.maybeGenerateSharedContextVar=function(value){if(value.priority===1/* CONTEXT */){var sharedCtxObj=this.map.get(SHARED_CONTEXT_KEY+value.retrievalLevel);if(sharedCtxObj){sharedCtxObj.declare=true;}else{this.generateSharedContextVar(value.retrievalLevel);}}};BindingScope.prototype.generateSharedContextVar=function(retrievalLevel){var lhs=variable(CONTEXT_NAME+this.freshReferenceName());this.map.set(SHARED_CONTEXT_KEY+retrievalLevel,{retrievalLevel:retrievalLevel,lhs:lhs,declareLocalCallback:function declareLocalCallback(scope,relativeLevel){// const ctx_r0 = x(2);
return[lhs.set(generateNextContextExpr(relativeLevel)).toConstDecl()];},declare:false,priority:2/* SHARED_CONTEXT */});};BindingScope.prototype.getComponentProperty=function(name){var componentValue=this.map.get(SHARED_CONTEXT_KEY+0);componentValue.declare=true;this.maybeRestoreView(0);return componentValue.lhs.prop(name);};BindingScope.prototype.maybeRestoreView=function(retrievalLevel){if(this.isListenerScope()&&retrievalLevel<this.bindingLevel){if(!this.parent.restoreViewVariable){// parent saves variable to generate a shared `const $s$ = gV();` instruction
this.parent.restoreViewVariable=variable(this.parent.freshReferenceName());}this.restoreViewVariable=this.parent.restoreViewVariable;}};BindingScope.prototype.restoreViewStatement=function(){// rV($state$);
return this.restoreViewVariable?[instruction(null,Identifiers$1.restoreView,[this.restoreViewVariable]).toStmt()]:[];};BindingScope.prototype.viewSnapshotStatements=function(){// const $state$ = gV();
var getCurrentViewInstruction=instruction(null,Identifiers$1.getCurrentView,[]);return this.restoreViewVariable?[this.restoreViewVariable.set(getCurrentViewInstruction).toConstDecl()]:[];};BindingScope.prototype.isListenerScope=function(){return this.parent&&this.parent.bindingLevel===this.bindingLevel;};BindingScope.prototype.variableDeclarations=function(){var _this=this;var currentContextLevel=0;return Array.from(this.map.values()).filter(function(value){return value.declare;}).sort(function(a,b){return b.retrievalLevel-a.retrievalLevel||b.priority-a.priority;}).reduce(function(stmts,value){var levelDiff=_this.bindingLevel-value.retrievalLevel;var currStmts=value.declareLocalCallback(_this,levelDiff-currentContextLevel);currentContextLevel=levelDiff;return stmts.concat(currStmts);},[]);};BindingScope.prototype.freshReferenceName=function(){var current=this;// Find the top scope as it maintains the global reference count
while(current.parent){current=current.parent;}var ref=""+REFERENCE_PREFIX+current.referenceNameIndex++;return ref;};return BindingScope;}();/**
 * Creates a `CssSelector` given a tag name and a map of attributes
 */function createCssSelector(tag,attributes){var cssSelector=new CssSelector();cssSelector.setElement(tag);Object.getOwnPropertyNames(attributes).forEach(function(name){var value=attributes[name];cssSelector.addAttribute(name,value);if(name.toLowerCase()==='class'){var classes=value.trim().split(/\s+/g);classes.forEach(function(className){return cssSelector.addClassName(className);});}});return cssSelector;}// Parse i18n metas like:
// - "@@id",
// - "description[@@id]",
// - "meaning|description[@@id]"
function parseI18nMeta(i18n){var _a,_b;var meaning;var description;var id;if(i18n){// TODO(vicb): figure out how to force a message ID with closure ?
var idIndex=i18n.indexOf(ID_SEPARATOR$1);var descIndex=i18n.indexOf(MEANING_SEPARATOR$1);var meaningAndDesc=void 0;_a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(idIndex>-1?[i18n.slice(0,idIndex),i18n.slice(idIndex+2)]:[i18n,''],2),meaningAndDesc=_a[0],id=_a[1];_b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(descIndex>-1?[meaningAndDesc.slice(0,descIndex),meaningAndDesc.slice(descIndex+1)]:['',meaningAndDesc],2),meaning=_b[0],description=_b[1];}return{description:description,id:id,meaning:meaning};}function interpolate(args){args=args.slice(1);// Ignore the length prefix added for render2
switch(args.length){case 3:return importExpr(Identifiers$1.interpolation1).callFn(args);case 5:return importExpr(Identifiers$1.interpolation2).callFn(args);case 7:return importExpr(Identifiers$1.interpolation3).callFn(args);case 9:return importExpr(Identifiers$1.interpolation4).callFn(args);case 11:return importExpr(Identifiers$1.interpolation5).callFn(args);case 13:return importExpr(Identifiers$1.interpolation6).callFn(args);case 15:return importExpr(Identifiers$1.interpolation7).callFn(args);case 17:return importExpr(Identifiers$1.interpolation8).callFn(args);}args.length>=19&&args.length%2==1||error("Invalid interpolation argument length "+args.length);return importExpr(Identifiers$1.interpolationV).callFn([literalArr(args)]);}/**
 * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.
 *
 * @param template text of the template to parse
 * @param templateUrl URL to use for source mapping of the parsed template
 */function parseTemplate(template,templateUrl,options,relativeContextFilePath){if(options===void 0){options={};}var bindingParser=makeBindingParser();var htmlParser=new HtmlParser();var parseResult=htmlParser.parse(template,templateUrl);if(parseResult.errors&&parseResult.errors.length>0){return{errors:parseResult.errors,nodes:[],hasNgContent:false,ngContentSelectors:[],relativeContextFilePath:relativeContextFilePath};}var rootNodes=parseResult.rootNodes;if(!options.preserveWhitespaces){rootNodes=visitAll(new WhitespaceVisitor(),rootNodes);}var _a=htmlAstToRender3Ast(rootNodes,bindingParser),nodes=_a.nodes,hasNgContent=_a.hasNgContent,ngContentSelectors=_a.ngContentSelectors,errors=_a.errors;if(errors&&errors.length>0){return{errors:errors,nodes:[],hasNgContent:false,ngContentSelectors:[],relativeContextFilePath:relativeContextFilePath};}return{nodes:nodes,hasNgContent:hasNgContent,ngContentSelectors:ngContentSelectors,relativeContextFilePath:relativeContextFilePath};}/**
 * Construct a `BindingParser` with a default configuration.
 */function makeBindingParser(){return new BindingParser(new Parser(new Lexer()),DEFAULT_INTERPOLATION_CONFIG,new DomElementSchemaRegistry(),null,[]);}function isClassBinding(input){return input.name=='className'||input.name=='class';}function resolveSanitizationFn(input,context){switch(context){case SecurityContext.HTML:return importExpr(Identifiers$1.sanitizeHtml);case SecurityContext.SCRIPT:return importExpr(Identifiers$1.sanitizeScript);case SecurityContext.STYLE:// the compiler does not fill in an instruction for [style.prop?] binding
// values because the style algorithm knows internally what props are subject
// to sanitization (only [attr.style] values are explicitly sanitized)
return input.type===1/* Attribute */?importExpr(Identifiers$1.sanitizeStyle):null;case SecurityContext.URL:return importExpr(Identifiers$1.sanitizeUrl);case SecurityContext.RESOURCE_URL:return importExpr(Identifiers$1.sanitizeResourceUrl);default:return null;}}function isStyleSanitizable(prop){switch(prop){case'background-image':case'background':case'border-image':case'filter':case'list-style':case'list-style-image':return true;}return false;}function prepareSyntheticAttributeName(name){return'@'+name;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EMPTY_ARRAY=[];function baseDirectiveFields(meta,constantPool,bindingParser){var definitionMap=new DefinitionMap();// e.g. `type: MyDirective`
definitionMap.set('type',meta.type);// e.g. `selectors: [['', 'someDir', '']]`
definitionMap.set('selectors',createDirectiveSelector(meta.selector));// e.g. `factory: () => new MyApp(directiveInject(ElementRef))`
var result=compileFactoryFunction({name:meta.name,type:meta.type,deps:meta.deps,injectFn:Identifiers$1.directiveInject});definitionMap.set('factory',result.factory);definitionMap.set('contentQueries',createContentQueriesFunction(meta,constantPool));definitionMap.set('contentQueriesRefresh',createContentQueriesRefreshFunction(meta));// Initialize hostVars to number of bound host properties (interpolations illegal)
var hostVars=Object.keys(meta.host.properties).length;// e.g. `hostBindings: (dirIndex, elIndex) => { ... }
definitionMap.set('hostBindings',createHostBindingsFunction(meta,bindingParser,constantPool,function(slots){var originalSlots=hostVars;hostVars+=slots;return originalSlots;}));if(hostVars){// e.g. `hostVars: 2
definitionMap.set('hostVars',literal(hostVars));}// e.g. `attributes: ['role', 'listbox']`
definitionMap.set('attributes',createHostAttributesArray(meta));// e.g 'inputs: {a: 'a'}`
definitionMap.set('inputs',conditionallyCreateMapObjectLiteral(meta.inputs));// e.g 'outputs: {a: 'a'}`
definitionMap.set('outputs',conditionallyCreateMapObjectLiteral(meta.outputs));// e.g. `features: [NgOnChangesFeature]`
var features=[];// TODO: add `PublicFeature` so that directives get registered to the DI - make this configurable
features.push(importExpr(Identifiers$1.PublicFeature));if(meta.usesInheritance){features.push(importExpr(Identifiers$1.InheritDefinitionFeature));}if(meta.lifecycle.usesOnChanges){features.push(importExpr(Identifiers$1.NgOnChangesFeature));}if(features.length){definitionMap.set('features',literalArr(features));}if(meta.exportAs!==null){definitionMap.set('exportAs',literal(meta.exportAs));}return{definitionMap:definitionMap,statements:result.statements};}/**
 * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.
 */function compileDirectiveFromMetadata(meta,constantPool,bindingParser){var _a=baseDirectiveFields(meta,constantPool,bindingParser),definitionMap=_a.definitionMap,statements=_a.statements;var expression=importExpr(Identifiers$1.defineDirective).callFn([definitionMap.toLiteralMap()]);// On the type side, remove newlines from the selector as it will need to fit into a TypeScript
// string literal, which must be on one line.
var selectorForType=(meta.selector||'').replace(/\n/g,'');var type=createTypeForDef(meta,Identifiers$1.DirectiveDefWithMeta);return{expression:expression,type:type,statements:statements};}/**
 * Compile a base definition for the render3 runtime as defined by {@link R3BaseRefMetadata}
 * @param meta the metadata used for compilation.
 */function compileBaseDefFromMetadata(meta){var definitionMap=new DefinitionMap();if(meta.inputs){var inputs_1=meta.inputs;var inputsMap=Object.keys(inputs_1).map(function(key){var v=inputs_1[key];var value=Array.isArray(v)?literalArr(v.map(function(vx){return literal(vx);})):literal(v);return{key:key,value:value,quoted:false};});definitionMap.set('inputs',literalMap(inputsMap));}if(meta.outputs){var outputs_1=meta.outputs;var outputsMap=Object.keys(outputs_1).map(function(key){var value=literal(outputs_1[key]);return{key:key,value:value,quoted:false};});definitionMap.set('outputs',literalMap(outputsMap));}var expression=importExpr(Identifiers$1.defineBase).callFn([definitionMap.toLiteralMap()]);var type=new ExpressionType(importExpr(Identifiers$1.BaseDef));return{expression:expression,type:type};}/**
 * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.
 */function compileComponentFromMetadata(meta,constantPool,bindingParser){var _a=baseDirectiveFields(meta,constantPool,bindingParser),definitionMap=_a.definitionMap,statements=_a.statements;var selector=meta.selector&&CssSelector.parse(meta.selector);var firstSelector=selector&&selector[0];// e.g. `attr: ["class", ".my.app"]`
// This is optional an only included if the first selector of a component specifies attributes.
if(firstSelector){var selectorAttributes=firstSelector.getAttrs();if(selectorAttributes.length){definitionMap.set('attrs',constantPool.getConstLiteral(literalArr(selectorAttributes.map(function(value){return value!=null?literal(value):literal(undefined);})),/* forceShared */true));}}// Generate the CSS matcher that recognize directive
var directiveMatcher=null;if(meta.directives.size){var matcher_1=new SelectorMatcher();meta.directives.forEach(function(expression,selector){matcher_1.addSelectables(CssSelector.parse(selector),expression);});directiveMatcher=matcher_1;}if(meta.viewQueries.length){definitionMap.set('viewQuery',createViewQueriesFunction(meta,constantPool));}// e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`
var templateTypeName=meta.name;var templateName=templateTypeName?templateTypeName+"_Template":null;var directivesUsed=new Set();var pipesUsed=new Set();var template=meta.template;var templateBuilder=new TemplateDefinitionBuilder(constantPool,BindingScope.ROOT_SCOPE,0,templateTypeName,templateName,meta.viewQueries,directiveMatcher,directivesUsed,meta.pipes,pipesUsed,Identifiers$1.namespaceHTML,meta.template.relativeContextFilePath);var templateFunctionExpression=templateBuilder.buildTemplateFunction(template.nodes,[],template.hasNgContent,template.ngContentSelectors);// e.g. `consts: 2`
definitionMap.set('consts',literal(templateBuilder.getConstCount()));// e.g. `vars: 2`
definitionMap.set('vars',literal(templateBuilder.getVarCount()));definitionMap.set('template',templateFunctionExpression);// e.g. `directives: [MyDirective]`
if(directivesUsed.size){var directivesExpr=literalArr(Array.from(directivesUsed));if(meta.wrapDirectivesInClosure){directivesExpr=fn([],[new ReturnStatement(directivesExpr)]);}definitionMap.set('directives',directivesExpr);}// e.g. `pipes: [MyPipe]`
if(pipesUsed.size){definitionMap.set('pipes',literalArr(Array.from(pipesUsed)));}// e.g. `styles: [str1, str2]`
if(meta.styles&&meta.styles.length){var styleValues=meta.encapsulation==ViewEncapsulation.Emulated?compileStyles(meta.styles,CONTENT_ATTR,HOST_ATTR):meta.styles;var strings=styleValues.map(function(str){return literal(str);});definitionMap.set('styles',literalArr(strings));}// e.g. `animations: [trigger('123', [])]`
if(meta.animations!==null){definitionMap.set('animations',meta.animations);}// On the type side, remove newlines from the selector as it will need to fit into a TypeScript
// string literal, which must be on one line.
var selectorForType=(meta.selector||'').replace(/\n/g,'');var expression=importExpr(Identifiers$1.defineComponent).callFn([definitionMap.toLiteralMap()]);var type=createTypeForDef(meta,Identifiers$1.ComponentDefWithMeta);return{expression:expression,type:type,statements:statements};}/**
 * A wrapper around `compileDirective` which depends on render2 global analysis data as its input
 * instead of the `R3DirectiveMetadata`.
 *
 * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected
 * information.
 */function compileDirectiveFromRender2(outputCtx,directive,reflector,bindingParser){var name=identifierName(directive.type);name||error("Cannot resolver the name of "+directive.type);var definitionField=outputCtx.constantPool.propertyNameOf(1/* Directive */);var meta=directiveMetadataFromGlobalMetadata(directive,outputCtx,reflector);var res=compileDirectiveFromMetadata(meta,outputCtx.constantPool,bindingParser);// Create the partial class to be merged with the actual class.
outputCtx.statements.push(new ClassStmt(name,null,[new ClassField(definitionField,INFERRED_TYPE,[StmtModifier.Static],res.expression)],[],new ClassMethod(null,[],[]),[]));}/**
 * A wrapper around `compileComponent` which depends on render2 global analysis data as its input
 * instead of the `R3DirectiveMetadata`.
 *
 * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected
 * information.
 */function compileComponentFromRender2(outputCtx,component,render3Ast,reflector,bindingParser,directiveTypeBySel,pipeTypeByName){var name=identifierName(component.type);name||error("Cannot resolver the name of "+component.type);var definitionField=outputCtx.constantPool.propertyNameOf(2/* Component */);var summary=component.toSummary();// Compute the R3ComponentMetadata from the CompileDirectiveMetadata
var meta=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},directiveMetadataFromGlobalMetadata(component,outputCtx,reflector),{selector:component.selector,template:{nodes:render3Ast.nodes,hasNgContent:render3Ast.hasNgContent,ngContentSelectors:render3Ast.ngContentSelectors,relativeContextFilePath:''},directives:typeMapToExpressionMap(directiveTypeBySel,outputCtx),pipes:typeMapToExpressionMap(pipeTypeByName,outputCtx),viewQueries:queriesFromGlobalMetadata(component.viewQueries,outputCtx),wrapDirectivesInClosure:false,styles:summary.template&&summary.template.styles||EMPTY_ARRAY,encapsulation:summary.template&&summary.template.encapsulation||ViewEncapsulation.Emulated,animations:null});var res=compileComponentFromMetadata(meta,outputCtx.constantPool,bindingParser);// Create the partial class to be merged with the actual class.
outputCtx.statements.push(new ClassStmt(name,null,[new ClassField(definitionField,INFERRED_TYPE,[StmtModifier.Static],res.expression)],[],new ClassMethod(null,[],[]),[]));}/**
 * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.
 */function directiveMetadataFromGlobalMetadata(directive,outputCtx,reflector){var summary=directive.toSummary();var name=identifierName(directive.type);name||error("Cannot resolver the name of "+directive.type);return{name:name,type:outputCtx.importExpr(directive.type.reference),typeArgumentCount:0,typeSourceSpan:typeSourceSpan(directive.isComponent?'Component':'Directive',directive.type),selector:directive.selector,deps:dependenciesFromGlobalMetadata(directive.type,outputCtx,reflector),queries:queriesFromGlobalMetadata(directive.queries,outputCtx),lifecycle:{usesOnChanges:directive.type.lifecycleHooks.some(function(lifecycle){return lifecycle==LifecycleHooks.OnChanges;})},host:{attributes:directive.hostAttributes,listeners:summary.hostListeners,properties:summary.hostProperties},inputs:directive.inputs,outputs:directive.outputs,usesInheritance:false,exportAs:null};}/**
 * Convert `CompileQueryMetadata` into `R3QueryMetadata`.
 */function queriesFromGlobalMetadata(queries,outputCtx){return queries.map(function(query){var read=null;if(query.read&&query.read.identifier){read=outputCtx.importExpr(query.read.identifier.reference);}return{propertyName:query.propertyName,first:query.first,predicate:selectorsFromGlobalMetadata(query.selectors,outputCtx),descendants:query.descendants,read:read};});}/**
 * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate
 * type, or a list of string predicates.
 */function selectorsFromGlobalMetadata(selectors,outputCtx){if(selectors.length>1||selectors.length==1&&selectors[0].value){var selectorStrings=selectors.map(function(value){return value.value;});selectorStrings.some(function(value){return!value;})&&error('Found a type among the string selectors expected');return outputCtx.constantPool.getConstLiteral(literalArr(selectorStrings.map(function(value){return literal(value);})));}if(selectors.length==1){var first=selectors[0];if(first.identifier){return outputCtx.importExpr(first.identifier.reference);}}error('Unexpected query form');return NULL_EXPR;}function createQueryDefinition(query,constantPool,idx){var predicate=getQueryPredicate(query,constantPool);// e.g. r3.Q(null, somePredicate, false) or r3.Q(0, ['div'], false)
var parameters=[literal(idx,INFERRED_TYPE),predicate,literal(query.descendants)];if(query.read){parameters.push(query.read);}return importExpr(Identifiers$1.query).callFn(parameters);}// Turn a directive selector into an R3-compatible selector for directive def
function createDirectiveSelector(selector){return asLiteral(parseSelectorToR3Selector(selector));}function createHostAttributesArray(meta){var e_1,_a;var values=[];var attributes=meta.host.attributes;try{for(var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(Object.getOwnPropertyNames(attributes)),_c=_b.next();!_c.done;_c=_b.next()){var key=_c.value;var value=attributes[key];values.push(literal(key),literal(value));}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}if(values.length>0){return literalArr(values);}return null;}// Return a contentQueries function or null if one is not necessary.
function createContentQueriesFunction(meta,constantPool){if(meta.queries.length){var statements=meta.queries.map(function(query){var queryDefinition=createQueryDefinition(query,constantPool,null);return importExpr(Identifiers$1.registerContentQuery).callFn([queryDefinition]).toStmt();});var typeName=meta.name;return fn([],statements,INFERRED_TYPE,null,typeName?typeName+"_ContentQueries":null);}return null;}// Return a contentQueriesRefresh function or null if one is not necessary.
function createContentQueriesRefreshFunction(meta){if(meta.queries.length>0){var statements_1=[];var typeName=meta.name;var parameters=[new FnParam('dirIndex',NUMBER_TYPE),new FnParam('queryStartIndex',NUMBER_TYPE)];var directiveInstanceVar_1=variable('instance');// var $tmp$: any;
var temporary_1=temporaryAllocator(statements_1,TEMPORARY_NAME);// const $instance$ = $r3$.ɵload(dirIndex);
statements_1.push(directiveInstanceVar_1.set(importExpr(Identifiers$1.load).callFn([variable('dirIndex')])).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));meta.queries.forEach(function(query,idx){var loadQLArg=variable('queryStartIndex');var getQueryList=importExpr(Identifiers$1.loadQueryList).callFn([idx>0?loadQLArg.plus(literal(idx)):loadQLArg]);var assignToTemporary=temporary_1().set(getQueryList);var callQueryRefresh=importExpr(Identifiers$1.queryRefresh).callFn([assignToTemporary]);var updateDirective=directiveInstanceVar_1.prop(query.propertyName).set(query.first?temporary_1().prop('first'):temporary_1());var refreshQueryAndUpdateDirective=callQueryRefresh.and(updateDirective);statements_1.push(refreshQueryAndUpdateDirective.toStmt());});return fn(parameters,statements_1,INFERRED_TYPE,null,typeName?typeName+"_ContentQueriesRefresh":null);}return null;}function stringAsType(str){return expressionType(literal(str));}function stringMapAsType(map){var mapValues=Object.keys(map).map(function(key){return{key:key,value:literal(map[key]),quoted:true};});return expressionType(literalMap(mapValues));}function stringArrayAsType(arr){return arr.length>0?expressionType(literalArr(arr.map(function(value){return literal(value);}))):NONE_TYPE;}function createTypeForDef(meta,typeBase){// On the type side, remove newlines from the selector as it will need to fit into a TypeScript
// string literal, which must be on one line.
var selectorForType=(meta.selector||'').replace(/\n/g,'');return expressionType(importExpr(typeBase,[typeWithParameters(meta.type,meta.typeArgumentCount),stringAsType(selectorForType),meta.exportAs!==null?stringAsType(meta.exportAs):NONE_TYPE,stringMapAsType(meta.inputs),stringMapAsType(meta.outputs),stringArrayAsType(meta.queries.map(function(q){return q.propertyName;}))]));}// Define and update any view queries
function createViewQueriesFunction(meta,constantPool){var createStatements=[];var updateStatements=[];var tempAllocator=temporaryAllocator(updateStatements,TEMPORARY_NAME);for(var i=0;i<meta.viewQueries.length;i++){var query=meta.viewQueries[i];// creation, e.g. r3.Q(0, somePredicate, true);
var queryDefinition=createQueryDefinition(query,constantPool,i);createStatements.push(queryDefinition.toStmt());// update, e.g. (r3.qR(tmp = r3.ɵload(0)) && (ctx.someDir = tmp));
var temporary=tempAllocator();var getQueryList=importExpr(Identifiers$1.load).callFn([literal(i)]);var refresh=importExpr(Identifiers$1.queryRefresh).callFn([temporary.set(getQueryList)]);var updateDirective=variable(CONTEXT_NAME).prop(query.propertyName).set(query.first?temporary.prop('first'):temporary);updateStatements.push(refresh.and(updateDirective).toStmt());}var viewQueryFnName=meta.name?meta.name+"_Query":null;return fn([new FnParam(RENDER_FLAGS,NUMBER_TYPE),new FnParam(CONTEXT_NAME,null)],[renderFlagCheckIfStmt(1/* Create */,createStatements),renderFlagCheckIfStmt(2/* Update */,updateStatements)],INFERRED_TYPE,null,viewQueryFnName);}// Return a host binding function or null if one is not necessary.
function createHostBindingsFunction(meta,bindingParser,constantPool,allocatePureFunctionSlots){var e_2,_a,e_3,_b;var statements=[];var hostBindingSourceSpan=meta.typeSourceSpan;var directiveSummary=metadataAsSummary(meta);// Calculate the host property bindings
var bindings=bindingParser.createBoundHostProperties(directiveSummary,hostBindingSourceSpan);var bindingContext=importExpr(Identifiers$1.load).callFn([variable('dirIndex')]);if(bindings){var valueConverter=new ValueConverter(constantPool,/* new nodes are illegal here */function(){return error('Unexpected node');},allocatePureFunctionSlots,/* pipes are illegal here */function(){return error('Unexpected pipe');});try{for(var bindings_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(bindings),bindings_1_1=bindings_1.next();!bindings_1_1.done;bindings_1_1=bindings_1.next()){var binding=bindings_1_1.value;// resolve literal arrays and literal objects
var value=binding.expression.visit(valueConverter);var bindingExpr=convertPropertyBinding(null,bindingContext,value,'b',BindingForm.TrySimple,function(){return error('Unexpected interpolation');});statements.push.apply(statements,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(bindingExpr.stmts));statements.push(importExpr(Identifiers$1.elementProperty).callFn([variable('elIndex'),literal(binding.name),importExpr(Identifiers$1.bind).callFn([bindingExpr.currValExpr])]).toStmt());}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(bindings_1_1&&!bindings_1_1.done&&(_a=bindings_1.return))_a.call(bindings_1);}finally{if(e_2)throw e_2.error;}}}// Calculate host event bindings
var eventBindings=bindingParser.createDirectiveHostEventAsts(directiveSummary,hostBindingSourceSpan);if(eventBindings){try{for(var eventBindings_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(eventBindings),eventBindings_1_1=eventBindings_1.next();!eventBindings_1_1.done;eventBindings_1_1=eventBindings_1.next()){var binding=eventBindings_1_1.value;var bindingExpr=convertActionBinding(null,bindingContext,binding.handler,'b',function(){return error('Unexpected interpolation');});var bindingName=binding.name&&sanitizeIdentifier(binding.name);var typeName=meta.name;var functionName=typeName&&bindingName?typeName+"_"+bindingName+"_HostBindingHandler":null;var handler=fn([new FnParam('$event',DYNAMIC_TYPE)],Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(bindingExpr.stmts,[new ReturnStatement(bindingExpr.allowDefault)]),INFERRED_TYPE,null,functionName);statements.push(importExpr(Identifiers$1.listener).callFn([literal(binding.name),handler]).toStmt());}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(eventBindings_1_1&&!eventBindings_1_1.done&&(_b=eventBindings_1.return))_b.call(eventBindings_1);}finally{if(e_3)throw e_3.error;}}}if(statements.length>0){var typeName=meta.name;return fn([new FnParam('dirIndex',NUMBER_TYPE),new FnParam('elIndex',NUMBER_TYPE)],statements,INFERRED_TYPE,null,typeName?typeName+"_HostBindings":null);}return null;}function metadataAsSummary(meta){// clang-format off
return{hostAttributes:meta.host.attributes,hostListeners:meta.host.listeners,hostProperties:meta.host.properties};// clang-format on
}function typeMapToExpressionMap(map,outputCtx){// Convert each map entry into another entry where the value is an expression importing the type.
var entries=Array.from(map).map(function(_a){var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a,2),key=_b[0],type=_b[1];return[key,outputCtx.importExpr(type)];});return new Map(entries);}var HOST_REG_EXP$1=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function parseHostBindings(host){var attributes={};var listeners={};var properties={};var animations={};Object.keys(host).forEach(function(key){var value=host[key];var matches=key.match(HOST_REG_EXP$1);if(matches===null){attributes[key]=value;}else if(matches[1/* Property */]!=null){properties[matches[1/* Property */]]=value;}else if(matches[2/* Event */]!=null){listeners[matches[2/* Event */]]=value;}else if(matches[3/* Animation */]!=null){animations[matches[3/* Animation */]]=value;}});return{attributes:attributes,listeners:listeners,properties:properties,animations:animations};}function compileStyles(styles,selector,hostSelector){var shadowCss=new ShadowCss();return styles.map(function(style){return shadowCss.shimCssText(style,selector,hostSelector);});}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var GeneratedFile=/** @class */function(){function GeneratedFile(srcFileUrl,genFileUrl,sourceOrStmts){this.srcFileUrl=srcFileUrl;this.genFileUrl=genFileUrl;if(typeof sourceOrStmts==='string'){this.source=sourceOrStmts;this.stmts=null;}else{this.source=null;this.stmts=sourceOrStmts;}}GeneratedFile.prototype.isEquivalent=function(other){if(this.genFileUrl!==other.genFileUrl){return false;}if(this.source){return this.source===other.source;}if(other.stmts==null){return false;}// Note: the constructor guarantees that if this.source is not filled,
// then this.stmts is.
return areAllEquivalent(this.stmts,other.stmts);};return GeneratedFile;}();function toTypeScript(file,preamble){if(preamble===void 0){preamble='';}if(!file.stmts){throw new Error("Illegal state: No stmts present on GeneratedFile "+file.genFileUrl);}return new TypeScriptEmitter().emitStatements(file.genFileUrl,file.stmts,preamble);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function listLazyRoutes(moduleMeta,reflector){var e_1,_a,e_2,_b;var allLazyRoutes=[];try{for(var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(moduleMeta.transitiveModule.providers),_d=_c.next();!_d.done;_d=_c.next()){var _e=_d.value,provider=_e.provider,module=_e.module;if(tokenReference(provider.token)===reflector.ROUTES){var loadChildren=_collectLoadChildren(provider.useValue);try{for(var loadChildren_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(loadChildren),loadChildren_1_1=loadChildren_1.next();!loadChildren_1_1.done;loadChildren_1_1=loadChildren_1.next()){var route=loadChildren_1_1.value;allLazyRoutes.push(parseLazyRoute(route,reflector,module.reference));}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(loadChildren_1_1&&!loadChildren_1_1.done&&(_b=loadChildren_1.return))_b.call(loadChildren_1);}finally{if(e_2)throw e_2.error;}}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_1)throw e_1.error;}}return allLazyRoutes;}function _collectLoadChildren(routes,target){if(target===void 0){target=[];}var e_3,_a;if(typeof routes==='string'){target.push(routes);}else if(Array.isArray(routes)){try{for(var routes_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(routes),routes_1_1=routes_1.next();!routes_1_1.done;routes_1_1=routes_1.next()){var route=routes_1_1.value;_collectLoadChildren(route,target);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(routes_1_1&&!routes_1_1.done&&(_a=routes_1.return))_a.call(routes_1);}finally{if(e_3)throw e_3.error;}}}else if(routes.loadChildren){_collectLoadChildren(routes.loadChildren,target);}else if(routes.children){_collectLoadChildren(routes.children,target);}return target;}function parseLazyRoute(route,reflector,module){var _a=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(route.split('#'),2),routePath=_a[0],routeName=_a[1];var referencedModule=reflector.resolveExternalReference({moduleName:routePath,name:routeName},module?module.filePath:undefined);return{route:route,module:module||referencedModule,referencedModule:referencedModule};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TS=/^(?!.*\.d\.ts$).*\.ts$/;var ResolvedStaticSymbol=/** @class */function(){function ResolvedStaticSymbol(symbol,metadata){this.symbol=symbol;this.metadata=metadata;}return ResolvedStaticSymbol;}();var SUPPORTED_SCHEMA_VERSION=4;/**
 * This class is responsible for loading metadata per symbol,
 * and normalizing references between symbols.
 *
 * Internally, it only uses symbols without members,
 * and deduces the values for symbols with members based
 * on these symbols.
 */var StaticSymbolResolver=/** @class */function(){function StaticSymbolResolver(host,staticSymbolCache,summaryResolver,errorRecorder){this.host=host;this.staticSymbolCache=staticSymbolCache;this.summaryResolver=summaryResolver;this.errorRecorder=errorRecorder;this.metadataCache=new Map();// Note: this will only contain StaticSymbols without members!
this.resolvedSymbols=new Map();this.resolvedFilePaths=new Set();// Note: this will only contain StaticSymbols without members!
this.importAs=new Map();this.symbolResourcePaths=new Map();this.symbolFromFile=new Map();this.knownFileNameToModuleNames=new Map();}StaticSymbolResolver.prototype.resolveSymbol=function(staticSymbol){if(staticSymbol.members.length>0){return this._resolveSymbolMembers(staticSymbol);}// Note: always ask for a summary first,
// as we might have read shallow metadata via a .d.ts file
// for the symbol.
var resultFromSummary=this._resolveSymbolFromSummary(staticSymbol);if(resultFromSummary){return resultFromSummary;}var resultFromCache=this.resolvedSymbols.get(staticSymbol);if(resultFromCache){return resultFromCache;}// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files. So we always need to check both, the summary
// and metadata.
this._createSymbolsOf(staticSymbol.filePath);return this.resolvedSymbols.get(staticSymbol);};/**
     * getImportAs produces a symbol that can be used to import the given symbol.
     * The import might be different than the symbol if the symbol is exported from
     * a library with a summary; in which case we want to import the symbol from the
     * ngfactory re-export instead of directly to avoid introducing a direct dependency
     * on an otherwise indirect dependency.
     *
     * @param staticSymbol the symbol for which to generate a import symbol
     */StaticSymbolResolver.prototype.getImportAs=function(staticSymbol,useSummaries){if(useSummaries===void 0){useSummaries=true;}if(staticSymbol.members.length){var baseSymbol=this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name);var baseImportAs=this.getImportAs(baseSymbol,useSummaries);return baseImportAs?this.getStaticSymbol(baseImportAs.filePath,baseImportAs.name,staticSymbol.members):null;}var summarizedFileName=stripSummaryForJitFileSuffix(staticSymbol.filePath);if(summarizedFileName!==staticSymbol.filePath){var summarizedName=stripSummaryForJitNameSuffix(staticSymbol.name);var baseSymbol=this.getStaticSymbol(summarizedFileName,summarizedName,staticSymbol.members);var baseImportAs=this.getImportAs(baseSymbol,useSummaries);return baseImportAs?this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath),summaryForJitName(baseImportAs.name),baseSymbol.members):null;}var result=useSummaries&&this.summaryResolver.getImportAs(staticSymbol)||null;if(!result){result=this.importAs.get(staticSymbol);}return result;};/**
     * getResourcePath produces the path to the original location of the symbol and should
     * be used to determine the relative location of resource references recorded in
     * symbol metadata.
     */StaticSymbolResolver.prototype.getResourcePath=function(staticSymbol){return this.symbolResourcePaths.get(staticSymbol)||staticSymbol.filePath;};/**
     * getTypeArity returns the number of generic type parameters the given symbol
     * has. If the symbol is not a type the result is null.
     */StaticSymbolResolver.prototype.getTypeArity=function(staticSymbol){// If the file is a factory/ngsummary file, don't resolve the symbol as doing so would
// cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.
// All references to generated classes must include the correct arity whenever
// generating code.
if(isGeneratedFile(staticSymbol.filePath)){return null;}var resolvedSymbol=unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));while(resolvedSymbol&&resolvedSymbol.metadata instanceof StaticSymbol){resolvedSymbol=unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));}return resolvedSymbol&&resolvedSymbol.metadata&&resolvedSymbol.metadata.arity||null;};StaticSymbolResolver.prototype.getKnownModuleName=function(filePath){return this.knownFileNameToModuleNames.get(filePath)||null;};StaticSymbolResolver.prototype.recordImportAs=function(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();this.importAs.set(sourceSymbol,targetSymbol);};StaticSymbolResolver.prototype.recordModuleNameForFileName=function(fileName,moduleName){this.knownFileNameToModuleNames.set(fileName,moduleName);};/**
     * Invalidate all information derived from the given file.
     *
     * @param fileName the file to invalidate
     */StaticSymbolResolver.prototype.invalidateFile=function(fileName){var e_1,_a;this.metadataCache.delete(fileName);this.resolvedFilePaths.delete(fileName);var symbols=this.symbolFromFile.get(fileName);if(symbols){this.symbolFromFile.delete(fileName);try{for(var symbols_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(symbols),symbols_1_1=symbols_1.next();!symbols_1_1.done;symbols_1_1=symbols_1.next()){var symbol=symbols_1_1.value;this.resolvedSymbols.delete(symbol);this.importAs.delete(symbol);this.symbolResourcePaths.delete(symbol);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(symbols_1_1&&!symbols_1_1.done&&(_a=symbols_1.return))_a.call(symbols_1);}finally{if(e_1)throw e_1.error;}}}};/** @internal */StaticSymbolResolver.prototype.ignoreErrorsFor=function(cb){var recorder=this.errorRecorder;this.errorRecorder=function(){};try{return cb();}finally{this.errorRecorder=recorder;}};StaticSymbolResolver.prototype._resolveSymbolMembers=function(staticSymbol){var members=staticSymbol.members;var baseResolvedSymbol=this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name));if(!baseResolvedSymbol){return null;}var baseMetadata=unwrapResolvedMetadata(baseResolvedSymbol.metadata);if(baseMetadata instanceof StaticSymbol){return new ResolvedStaticSymbol(staticSymbol,this.getStaticSymbol(baseMetadata.filePath,baseMetadata.name,members));}else if(baseMetadata&&baseMetadata.__symbolic==='class'){if(baseMetadata.statics&&members.length===1){return new ResolvedStaticSymbol(staticSymbol,baseMetadata.statics[members[0]]);}}else{var value=baseMetadata;for(var i=0;i<members.length&&value;i++){value=value[members[i]];}return new ResolvedStaticSymbol(staticSymbol,value);}return null;};StaticSymbolResolver.prototype._resolveSymbolFromSummary=function(staticSymbol){var summary=this.summaryResolver.resolveSummary(staticSymbol);return summary?new ResolvedStaticSymbol(staticSymbol,summary.metadata):null;};/**
     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
     * All types passed to the StaticResolver should be pseudo-types returned by this method.
     *
     * @param declarationFile the absolute path of the file where the symbol is declared
     * @param name the name of the type.
     * @param members a symbol for a static member of the named type
     */StaticSymbolResolver.prototype.getStaticSymbol=function(declarationFile,name,members){return this.staticSymbolCache.get(declarationFile,name,members);};/**
     * hasDecorators checks a file's metadata for the presence of decorators without evaluating the
     * metadata.
     *
     * @param filePath the absolute path to examine for decorators.
     * @returns true if any class in the file has a decorator.
     */StaticSymbolResolver.prototype.hasDecorators=function(filePath){var metadata=this.getModuleMetadata(filePath);if(metadata['metadata']){return Object.keys(metadata['metadata']).some(function(metadataKey){var entry=metadata['metadata'][metadataKey];return entry&&entry.__symbolic==='class'&&entry.decorators;});}return false;};StaticSymbolResolver.prototype.getSymbolsOf=function(filePath){var summarySymbols=this.summaryResolver.getSymbolsOf(filePath);if(summarySymbols){return summarySymbols;}// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.
this._createSymbolsOf(filePath);var metadataSymbols=[];this.resolvedSymbols.forEach(function(resolvedSymbol){if(resolvedSymbol.symbol.filePath===filePath){metadataSymbols.push(resolvedSymbol.symbol);}});return metadataSymbols;};StaticSymbolResolver.prototype._createSymbolsOf=function(filePath){var _this=this;var e_2,_a;if(this.resolvedFilePaths.has(filePath)){return;}this.resolvedFilePaths.add(filePath);var resolvedSymbols=[];var metadata=this.getModuleMetadata(filePath);if(metadata['importAs']){// Index bundle indices should use the importAs module name defined
// in the bundle.
this.knownFileNameToModuleNames.set(filePath,metadata['importAs']);}// handle the symbols in one of the re-export location
if(metadata['exports']){var _loop_1=function _loop_1(moduleExport){// handle the symbols in the list of explicitly re-exported symbols.
if(moduleExport.export){moduleExport.export.forEach(function(exportSymbol){var symbolName;if(typeof exportSymbol==='string'){symbolName=exportSymbol;}else{symbolName=exportSymbol.as;}symbolName=unescapeIdentifier(symbolName);var symName=symbolName;if(typeof exportSymbol!=='string'){symName=unescapeIdentifier(exportSymbol.name);}var resolvedModule=_this.resolveModule(moduleExport.from,filePath);if(resolvedModule){var targetSymbol=_this.getStaticSymbol(resolvedModule,symName);var sourceSymbol=_this.getStaticSymbol(filePath,symbolName);resolvedSymbols.push(_this.createExport(sourceSymbol,targetSymbol));}});}else{// handle the symbols via export * directives.
var resolvedModule=this_1.resolveModule(moduleExport.from,filePath);if(resolvedModule){var nestedExports=this_1.getSymbolsOf(resolvedModule);nestedExports.forEach(function(targetSymbol){var sourceSymbol=_this.getStaticSymbol(filePath,targetSymbol.name);resolvedSymbols.push(_this.createExport(sourceSymbol,targetSymbol));});}}};var this_1=this;try{for(var _b=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(metadata['exports']),_c=_b.next();!_c.done;_c=_b.next()){var moduleExport=_c.value;_loop_1(moduleExport);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}}// handle the actual metadata. Has to be after the exports
// as there might be collisions in the names, and we want the symbols
// of the current module to win ofter reexports.
if(metadata['metadata']){// handle direct declarations of the symbol
var topLevelSymbolNames_1=new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));var origins_1=metadata['origins']||{};Object.keys(metadata['metadata']).forEach(function(metadataKey){var symbolMeta=metadata['metadata'][metadataKey];var name=unescapeIdentifier(metadataKey);var symbol=_this.getStaticSymbol(filePath,name);var origin=origins_1.hasOwnProperty(metadataKey)&&origins_1[metadataKey];if(origin){// If the symbol is from a bundled index, use the declaration location of the
// symbol so relative references (such as './my.html') will be calculated
// correctly.
var originFilePath=_this.resolveModule(origin,filePath);if(!originFilePath){_this.reportError(new Error("Couldn't resolve original symbol for "+origin+" from "+filePath));}else{_this.symbolResourcePaths.set(symbol,originFilePath);}}resolvedSymbols.push(_this.createResolvedSymbol(symbol,filePath,topLevelSymbolNames_1,symbolMeta));});}resolvedSymbols.forEach(function(resolvedSymbol){return _this.resolvedSymbols.set(resolvedSymbol.symbol,resolvedSymbol);});this.symbolFromFile.set(filePath,resolvedSymbols.map(function(resolvedSymbol){return resolvedSymbol.symbol;}));};StaticSymbolResolver.prototype.createResolvedSymbol=function(sourceSymbol,topLevelPath,topLevelSymbolNames,metadata){var _this=this;// For classes that don't have Angular summaries / metadata,
// we only keep their arity, but nothing else
// (e.g. their constructor parameters).
// We do this to prevent introducing deep imports
// as we didn't generate .ngfactory.ts files with proper reexports.
var isTsFile=TS.test(sourceSymbol.filePath);if(this.summaryResolver.isLibraryFile(sourceSymbol.filePath)&&!isTsFile&&metadata&&metadata['__symbolic']==='class'){var transformedMeta_1={__symbolic:'class',arity:metadata.arity};return new ResolvedStaticSymbol(sourceSymbol,transformedMeta_1);}var _originalFileMemo;var getOriginalName=function getOriginalName(){if(!_originalFileMemo){// Guess what the original file name is from the reference. If it has a `.d.ts` extension
// replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have
// .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`
// location as it is not important to finding the file.
_originalFileMemo=_this.host.getOutputName(topLevelPath.replace(/((\.ts)|(\.d\.ts)|)$/,'.ts').replace(/^.*node_modules[/\\]/,''));}return _originalFileMemo;};var self=this;var ReferenceTransformer=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ReferenceTransformer,_super);function ReferenceTransformer(){return _super!==null&&_super.apply(this,arguments)||this;}ReferenceTransformer.prototype.visitStringMap=function(map,functionParams){var symbolic=map['__symbolic'];if(symbolic==='function'){var oldLen=functionParams.length;functionParams.push.apply(functionParams,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(map['parameters']||[]));var result=_super.prototype.visitStringMap.call(this,map,functionParams);functionParams.length=oldLen;return result;}else if(symbolic==='reference'){var module=map['module'];var name_1=map['name']?unescapeIdentifier(map['name']):map['name'];if(!name_1){return null;}var filePath=void 0;if(module){filePath=self.resolveModule(module,sourceSymbol.filePath);if(!filePath){return{__symbolic:'error',message:"Could not resolve "+module+" relative to "+sourceSymbol.filePath+".",line:map.line,character:map.character,fileName:getOriginalName()};}return{__symbolic:'resolved',symbol:self.getStaticSymbol(filePath,name_1),line:map.line,character:map.character,fileName:getOriginalName()};}else if(functionParams.indexOf(name_1)>=0){// reference to a function parameter
return{__symbolic:'reference',name:name_1};}else{if(topLevelSymbolNames.has(name_1)){return self.getStaticSymbol(topLevelPath,name_1);}}}else if(symbolic==='error'){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},map,{fileName:getOriginalName()});}else{return _super.prototype.visitStringMap.call(this,map,functionParams);}};return ReferenceTransformer;}(ValueTransformer);var transformedMeta=visitValue(metadata,new ReferenceTransformer(),[]);var unwrappedTransformedMeta=unwrapResolvedMetadata(transformedMeta);if(unwrappedTransformedMeta instanceof StaticSymbol){return this.createExport(sourceSymbol,unwrappedTransformedMeta);}return new ResolvedStaticSymbol(sourceSymbol,transformedMeta);};StaticSymbolResolver.prototype.createExport=function(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();if(this.summaryResolver.isLibraryFile(sourceSymbol.filePath)&&this.summaryResolver.isLibraryFile(targetSymbol.filePath)){// This case is for an ng library importing symbols from a plain ts library
// transitively.
// Note: We rely on the fact that we discover symbols in the direction
// from source files to library files
this.importAs.set(targetSymbol,this.getImportAs(sourceSymbol)||sourceSymbol);}return new ResolvedStaticSymbol(sourceSymbol,targetSymbol);};StaticSymbolResolver.prototype.reportError=function(error$$1,context,path){if(this.errorRecorder){this.errorRecorder(error$$1,context&&context.filePath||path);}else{throw error$$1;}};/**
     * @param module an absolute path to a module file.
     */StaticSymbolResolver.prototype.getModuleMetadata=function(module){var moduleMetadata=this.metadataCache.get(module);if(!moduleMetadata){var moduleMetadatas=this.host.getMetadataFor(module);if(moduleMetadatas){var maxVersion_1=-1;moduleMetadatas.forEach(function(md){if(md&&md['version']>maxVersion_1){maxVersion_1=md['version'];moduleMetadata=md;}});}if(!moduleMetadata){moduleMetadata={__symbolic:'module',version:SUPPORTED_SCHEMA_VERSION,module:module,metadata:{}};}if(moduleMetadata['version']!=SUPPORTED_SCHEMA_VERSION){var errorMessage=moduleMetadata['version']==2?"Unsupported metadata version "+moduleMetadata['version']+" for module "+module+". This module should be compiled with a newer version of ngc":"Metadata version mismatch for module "+module+", found version "+moduleMetadata['version']+", expected "+SUPPORTED_SCHEMA_VERSION;this.reportError(new Error(errorMessage));}this.metadataCache.set(module,moduleMetadata);}return moduleMetadata;};StaticSymbolResolver.prototype.getSymbolByModule=function(module,symbolName,containingFile){var filePath=this.resolveModule(module,containingFile);if(!filePath){this.reportError(new Error("Could not resolve module "+module+(containingFile?' relative to '+containingFile:'')));return this.getStaticSymbol("ERROR:"+module,symbolName);}return this.getStaticSymbol(filePath,symbolName);};StaticSymbolResolver.prototype.resolveModule=function(module,containingFile){try{return this.host.moduleNameToFileName(module,containingFile);}catch(e){console.error("Could not resolve module '"+module+"' relative to file "+containingFile);this.reportError(e,undefined,containingFile);}return null;};return StaticSymbolResolver;}();// Remove extra underscore from escaped identifier.
// See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts
function unescapeIdentifier(identifier){return identifier.startsWith('___')?identifier.substr(1):identifier;}function unwrapResolvedMetadata(metadata){if(metadata&&metadata.__symbolic==='resolved'){return metadata.symbol;}return metadata;}function serializeSummaries(srcFileName,forJitCtx,summaryResolver,symbolResolver,symbols,types){var toJsonSerializer=new ToJsonSerializer(symbolResolver,summaryResolver,srcFileName);// for symbols, we use everything except for the class metadata itself
// (we keep the statics though), as the class metadata is contained in the
// CompileTypeSummary.
symbols.forEach(function(resolvedSymbol){return toJsonSerializer.addSummary({symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata});});// Add type summaries.
types.forEach(function(_a){var summary=_a.summary,metadata=_a.metadata;toJsonSerializer.addSummary({symbol:summary.type.reference,metadata:undefined,type:summary});});var _a=toJsonSerializer.serialize(),json=_a.json,exportAs=_a.exportAs;if(forJitCtx){var forJitSerializer_1=new ForJitSerializer(forJitCtx,symbolResolver,summaryResolver);types.forEach(function(_a){var summary=_a.summary,metadata=_a.metadata;forJitSerializer_1.addSourceType(summary,metadata);});toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function(summary){if(summaryResolver.isLibraryFile(summary.symbol.filePath)&&summary.type){forJitSerializer_1.addLibType(summary.type);}});forJitSerializer_1.serialize(exportAs);}return{json:json,exportAs:exportAs};}function deserializeSummaries(symbolCache,summaryResolver,libraryFileName,json){var deserializer=new FromJsonDeserializer(symbolCache,summaryResolver);return deserializer.deserialize(libraryFileName,json);}function createForJitStub(outputCtx,reference){return createSummaryForJitFunction(outputCtx,reference,NULL_EXPR);}function createSummaryForJitFunction(outputCtx,reference,value){var fnName=summaryForJitName(reference.name);outputCtx.statements.push(fn([],[new ReturnStatement(value)],new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName,[StmtModifier.Final,StmtModifier.Exported]));}var ToJsonSerializer=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ToJsonSerializer,_super);function ToJsonSerializer(symbolResolver,summaryResolver,srcFileName){var _this=_super.call(this)||this;_this.symbolResolver=symbolResolver;_this.summaryResolver=summaryResolver;_this.srcFileName=srcFileName;// Note: This only contains symbols without members.
_this.symbols=[];_this.indexBySymbol=new Map();_this.reexportedBy=new Map();// This now contains a `__symbol: number` in the place of
// StaticSymbols, but otherwise has the same shape as the original objects.
_this.processedSummaryBySymbol=new Map();_this.processedSummaries=[];_this.unprocessedSymbolSummariesBySymbol=new Map();_this.moduleName=symbolResolver.getKnownModuleName(srcFileName);return _this;}ToJsonSerializer.prototype.addSummary=function(summary){var _this=this;var unprocessedSummary=this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);var processedSummary=this.processedSummaryBySymbol.get(summary.symbol);if(!unprocessedSummary){unprocessedSummary={symbol:summary.symbol,metadata:undefined};this.unprocessedSymbolSummariesBySymbol.set(summary.symbol,unprocessedSummary);processedSummary={symbol:this.processValue(summary.symbol,0/* None */)};this.processedSummaries.push(processedSummary);this.processedSummaryBySymbol.set(summary.symbol,processedSummary);}if(!unprocessedSummary.metadata&&summary.metadata){var metadata_1=summary.metadata||{};if(metadata_1.__symbolic==='class'){// For classes, we keep everything except their class decorators.
// We need to keep e.g. the ctor args, method names, method decorators
// so that the class can be extended in another compilation unit.
// We don't keep the class decorators as
// 1) they refer to data
//   that should not cause a rebuild of downstream compilation units
//   (e.g. inline templates of @Component, or @NgModule.declarations)
// 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.
var clone_1={};Object.keys(metadata_1).forEach(function(propName){if(propName!=='decorators'){clone_1[propName]=metadata_1[propName];}});metadata_1=clone_1;}else if(isCall(metadata_1)){if(!isFunctionCall(metadata_1)&&!isMethodCallOnVariable(metadata_1)){// Don't store complex calls as we won't be able to simplify them anyways later on.
metadata_1={__symbolic:'error',message:'Complex function calls are not supported.'};}}// Note: We need to keep storing ctor calls for e.g.
// `export const x = new InjectionToken(...)`
unprocessedSummary.metadata=metadata_1;processedSummary.metadata=this.processValue(metadata_1,1/* ResolveValue */);if(metadata_1 instanceof StaticSymbol&&this.summaryResolver.isLibraryFile(metadata_1.filePath)){var declarationSymbol=this.symbols[this.indexBySymbol.get(metadata_1)];if(!isLoweredSymbol(declarationSymbol.name)){// Note: symbols that were introduced during codegen in the user file can have a reexport
// if a user used `export *`. However, we can't rely on this as tsickle will change
// `export *` into named exports, using only the information from the typechecker.
// As we introduce the new symbols after typecheck, Tsickle does not know about them,
// and omits them when expanding `export *`.
// So we have to keep reexporting these symbols manually via .ngfactory files.
this.reexportedBy.set(declarationSymbol,summary.symbol);}}}if(!unprocessedSummary.type&&summary.type){unprocessedSummary.type=summary.type;// Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,
// as the type summaries already contain the transitive data that they require
// (in a minimal way).
processedSummary.type=this.processValue(summary.type,0/* None */);// except for reexported directives / pipes, so we need to store
// their summaries explicitly.
if(summary.type.summaryKind===CompileSummaryKind.NgModule){var ngModuleSummary=summary.type;ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function(id){var symbol=id.reference;if(_this.summaryResolver.isLibraryFile(symbol.filePath)&&!_this.unprocessedSymbolSummariesBySymbol.has(symbol)){var summary_1=_this.summaryResolver.resolveSummary(symbol);if(summary_1){_this.addSummary(summary_1);}}});}}};ToJsonSerializer.prototype.serialize=function(){var _this=this;var exportAs=[];var json=JSON.stringify({moduleName:this.moduleName,summaries:this.processedSummaries,symbols:this.symbols.map(function(symbol,index){symbol.assertNoMembers();var importAs=undefined;if(_this.summaryResolver.isLibraryFile(symbol.filePath)){var reexportSymbol=_this.reexportedBy.get(symbol);if(reexportSymbol){importAs=_this.indexBySymbol.get(reexportSymbol);}else{var summary=_this.unprocessedSymbolSummariesBySymbol.get(symbol);if(!summary||!summary.metadata||summary.metadata.__symbolic!=='interface'){importAs=symbol.name+"_"+index;exportAs.push({symbol:symbol,exportAs:importAs});}}}return{__symbol:index,name:symbol.name,filePath:_this.summaryResolver.toSummaryFileName(symbol.filePath,_this.srcFileName),importAs:importAs};})});return{json:json,exportAs:exportAs};};ToJsonSerializer.prototype.processValue=function(value,flags){return visitValue(value,this,flags);};ToJsonSerializer.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol){var baseSymbol=this.symbolResolver.getStaticSymbol(value.filePath,value.name);var index=this.visitStaticSymbol(baseSymbol,context);return{__symbol:index,members:value.members};}};/**
     * Strip line and character numbers from ngsummaries.
     * Emitting them causes white spaces changes to retrigger upstream
     * recompilations in bazel.
     * TODO: find out a way to have line and character numbers in errors without
     * excessive recompilation in bazel.
     */ToJsonSerializer.prototype.visitStringMap=function(map,context){if(map['__symbolic']==='resolved'){return visitValue(map.symbol,this,context);}if(map['__symbolic']==='error'){delete map['line'];delete map['character'];}return _super.prototype.visitStringMap.call(this,map,context);};/**
     * Returns null if the options.resolveValue is true, and the summary for the symbol
     * resolved to a type or could not be resolved.
     */ToJsonSerializer.prototype.visitStaticSymbol=function(baseSymbol,flags){var index=this.indexBySymbol.get(baseSymbol);var summary=null;if(flags&1/* ResolveValue */&&this.summaryResolver.isLibraryFile(baseSymbol.filePath)){if(this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)){// the summary for this symbol was already added
// -> nothing to do.
return index;}summary=this.loadSummary(baseSymbol);if(summary&&summary.metadata instanceof StaticSymbol){// The summary is a reexport
index=this.visitStaticSymbol(summary.metadata,flags);// reset the summary as it is just a reexport, so we don't want to store it.
summary=null;}}else if(index!=null){// Note: == on purpose to compare with undefined!
// No summary and the symbol is already added -> nothing to do.
return index;}// Note: == on purpose to compare with undefined!
if(index==null){index=this.symbols.length;this.symbols.push(baseSymbol);}this.indexBySymbol.set(baseSymbol,index);if(summary){this.addSummary(summary);}return index;};ToJsonSerializer.prototype.loadSummary=function(symbol){var summary=this.summaryResolver.resolveSummary(symbol);if(!summary){// some symbols might originate from a plain typescript library
// that just exported .d.ts and .metadata.json files, i.e. where no summary
// files were created.
var resolvedSymbol=this.symbolResolver.resolveSymbol(symbol);if(resolvedSymbol){summary={symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata};}}return summary;};return ToJsonSerializer;}(ValueTransformer);var ForJitSerializer=/** @class */function(){function ForJitSerializer(outputCtx,symbolResolver,summaryResolver){this.outputCtx=outputCtx;this.symbolResolver=symbolResolver;this.summaryResolver=summaryResolver;this.data=[];}ForJitSerializer.prototype.addSourceType=function(summary,metadata){this.data.push({summary:summary,metadata:metadata,isLibrary:false});};ForJitSerializer.prototype.addLibType=function(summary){this.data.push({summary:summary,metadata:null,isLibrary:true});};ForJitSerializer.prototype.serialize=function(exportAsArr){var _this=this;var e_1,_a,e_2,_b,e_3,_c;var exportAsBySymbol=new Map();try{for(var exportAsArr_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(exportAsArr),exportAsArr_1_1=exportAsArr_1.next();!exportAsArr_1_1.done;exportAsArr_1_1=exportAsArr_1.next()){var _d=exportAsArr_1_1.value,symbol=_d.symbol,exportAs=_d.exportAs;exportAsBySymbol.set(symbol,exportAs);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(exportAsArr_1_1&&!exportAsArr_1_1.done&&(_a=exportAsArr_1.return))_a.call(exportAsArr_1);}finally{if(e_1)throw e_1.error;}}var ngModuleSymbols=new Set();try{for(var _e=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(this.data),_f=_e.next();!_f.done;_f=_e.next()){var _g=_f.value,summary=_g.summary,metadata=_g.metadata,isLibrary=_g.isLibrary;if(summary.summaryKind===CompileSummaryKind.NgModule){// collect the symbols that refer to NgModule classes.
// Note: we can't just rely on `summary.type.summaryKind` to determine this as
// we don't add the summaries of all referenced symbols when we serialize type summaries.
// See serializeSummaries for details.
ngModuleSymbols.add(summary.type.reference);var modSummary=summary;try{for(var _h=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(modSummary.modules),_j=_h.next();!_j.done;_j=_h.next()){var mod=_j.value;ngModuleSymbols.add(mod.reference);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_j&&!_j.done&&(_c=_h.return))_c.call(_h);}finally{if(e_3)throw e_3.error;}}}if(!isLibrary){var fnName=summaryForJitName(summary.type.reference.name);createSummaryForJitFunction(this.outputCtx,summary.type.reference,this.serializeSummaryWithDeps(summary,metadata));}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_2)throw e_2.error;}}ngModuleSymbols.forEach(function(ngModuleSymbol){if(_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)){var exportAs=exportAsBySymbol.get(ngModuleSymbol)||ngModuleSymbol.name;var jitExportAsName=summaryForJitName(exportAs);_this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(ngModuleSymbol)).toDeclStmt(null,[StmtModifier.Exported]));}});};ForJitSerializer.prototype.serializeSummaryWithDeps=function(summary,metadata){var _this=this;var expressions=[this.serializeSummary(summary)];var providers=[];if(metadata instanceof CompileNgModuleMetadata){expressions.push.apply(expressions,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(// For directives / pipes, we only add the declared ones,
// and rely on transitively importing NgModules to get the transitive
// summaries.
metadata.declaredDirectives.concat(metadata.declaredPipes).map(function(type){return type.reference;})// For modules,
// we also add the summaries for modules
// from libraries.
// This is ok as we produce reexports for all transitive modules.
.concat(metadata.transitiveModule.modules.map(function(type){return type.reference;}).filter(function(ref){return ref!==metadata.type.reference;})).map(function(ref){return _this.serializeSummaryRef(ref);})));// Note: We don't use `NgModuleSummary.providers`, as that one is transitive,
// and we already have transitive modules.
providers=metadata.providers;}else if(summary.summaryKind===CompileSummaryKind.Directive){var dirSummary=summary;providers=dirSummary.providers.concat(dirSummary.viewProviders);}// Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for
// declaredDirectives / declaredPipes), as we allow
// providers without ctor arguments to skip the `@Injectable` decorator,
// i.e. we didn't generate .ngsummary.ts files for these.
expressions.push.apply(expressions,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(providers.filter(function(provider){return!!provider.useClass;}).map(function(provider){return _this.serializeSummary({summaryKind:CompileSummaryKind.Injectable,type:provider.useClass});})));return literalArr(expressions);};ForJitSerializer.prototype.serializeSummaryRef=function(typeSymbol){var jitImportedSymbol=this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath),summaryForJitName(typeSymbol.name));return this.outputCtx.importExpr(jitImportedSymbol);};ForJitSerializer.prototype.serializeSummary=function(data){var outputCtx=this.outputCtx;var Transformer=/** @class */function(){function Transformer(){}Transformer.prototype.visitArray=function(arr,context){var _this=this;return literalArr(arr.map(function(entry){return visitValue(entry,_this,context);}));};Transformer.prototype.visitStringMap=function(map,context){var _this=this;return new LiteralMapExpr(Object.keys(map).map(function(key){return new LiteralMapEntry(key,visitValue(map[key],_this,context),false);}));};Transformer.prototype.visitPrimitive=function(value,context){return literal(value);};Transformer.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol){return outputCtx.importExpr(value);}else{throw new Error("Illegal State: Encountered value "+value);}};return Transformer;}();return visitValue(data,new Transformer(),null);};return ForJitSerializer;}();var FromJsonDeserializer=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FromJsonDeserializer,_super);function FromJsonDeserializer(symbolCache,summaryResolver){var _this=_super.call(this)||this;_this.symbolCache=symbolCache;_this.summaryResolver=summaryResolver;return _this;}FromJsonDeserializer.prototype.deserialize=function(libraryFileName,json){var _this=this;var data=JSON.parse(json);var allImportAs=[];this.symbols=data.symbols.map(function(serializedSymbol){return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath,libraryFileName),serializedSymbol.name);});data.symbols.forEach(function(serializedSymbol,index){var symbol=_this.symbols[index];var importAs=serializedSymbol.importAs;if(typeof importAs==='number'){allImportAs.push({symbol:symbol,importAs:_this.symbols[importAs]});}else if(typeof importAs==='string'){allImportAs.push({symbol:symbol,importAs:_this.symbolCache.get(ngfactoryFilePath(libraryFileName),importAs)});}});var summaries=visitValue(data.summaries,this,null);return{moduleName:data.moduleName,summaries:summaries,importAs:allImportAs};};FromJsonDeserializer.prototype.visitStringMap=function(map,context){if('__symbol'in map){var baseSymbol=this.symbols[map['__symbol']];var members=map['members'];return members.length?this.symbolCache.get(baseSymbol.filePath,baseSymbol.name,members):baseSymbol;}else{return _super.prototype.visitStringMap.call(this,map,context);}};return FromJsonDeserializer;}(ValueTransformer);function isCall(metadata){return metadata&&metadata.__symbolic==='call';}function isFunctionCall(metadata){return isCall(metadata)&&unwrapResolvedMetadata(metadata.expression)instanceof StaticSymbol;}function isMethodCallOnVariable(metadata){return isCall(metadata)&&metadata.expression&&metadata.expression.__symbolic==='select'&&unwrapResolvedMetadata(metadata.expression.expression)instanceof StaticSymbol;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AotCompiler=/** @class */function(){function AotCompiler(_config,_options,_host,reflector,_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_typeCheckCompiler,_ngModuleCompiler,_injectableCompiler,_outputEmitter,_summaryResolver,_symbolResolver){this._config=_config;this._options=_options;this._host=_host;this.reflector=reflector;this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._typeCheckCompiler=_typeCheckCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._injectableCompiler=_injectableCompiler;this._outputEmitter=_outputEmitter;this._summaryResolver=_summaryResolver;this._symbolResolver=_symbolResolver;this._templateAstCache=new Map();this._analyzedFiles=new Map();this._analyzedFilesForInjectables=new Map();}AotCompiler.prototype.clearCache=function(){this._metadataResolver.clearCache();};AotCompiler.prototype.analyzeModulesSync=function(rootFiles){var _this=this;var analyzeResult=analyzeAndValidateNgModules(rootFiles,this._host,this._symbolResolver,this._metadataResolver);analyzeResult.ngModules.forEach(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,true);});return analyzeResult;};AotCompiler.prototype.analyzeModulesAsync=function(rootFiles){var _this=this;var analyzeResult=analyzeAndValidateNgModules(rootFiles,this._host,this._symbolResolver,this._metadataResolver);return Promise.all(analyzeResult.ngModules.map(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){return analyzeResult;});};AotCompiler.prototype._analyzeFile=function(fileName){var analyzedFile=this._analyzedFiles.get(fileName);if(!analyzedFile){analyzedFile=analyzeFile(this._host,this._symbolResolver,this._metadataResolver,fileName);this._analyzedFiles.set(fileName,analyzedFile);}return analyzedFile;};AotCompiler.prototype._analyzeFileForInjectables=function(fileName){var analyzedFile=this._analyzedFilesForInjectables.get(fileName);if(!analyzedFile){analyzedFile=analyzeFileForInjectables(this._host,this._symbolResolver,this._metadataResolver,fileName);this._analyzedFilesForInjectables.set(fileName,analyzedFile);}return analyzedFile;};AotCompiler.prototype.findGeneratedFileNames=function(fileName){var _this=this;var genFileNames=[];var file=this._analyzeFile(fileName);// Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule
// or a reference to a non source file.
// Note: This is overestimating the required .ngfactory files as the real calculation is harder.
// Only do this for StubEmitFlags.Basic, as adding a type check block
// does not change this file (as we generate type check blocks based on NgModules).
if(this._options.allowEmptyCodegenFiles||file.directives.length||file.pipes.length||file.injectables.length||file.ngModules.length||file.exportsNonSourceFiles){genFileNames.push(ngfactoryFilePath(file.fileName,true));if(this._options.enableSummariesForJit){genFileNames.push(summaryForJitFileName(file.fileName,true));}}var fileSuffix=normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName,true)[1]);file.directives.forEach(function(dirSymbol){var compMeta=_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol).metadata;if(!compMeta.isComponent){return;}// Note: compMeta is a component and therefore template is non null.
compMeta.template.styleUrls.forEach(function(styleUrl){var normalizedUrl=_this._host.resourceNameToFileName(styleUrl,file.fileName);if(!normalizedUrl){throw syntaxError("Couldn't resolve resource "+styleUrl+" relative to "+file.fileName);}var needsShim=(compMeta.template.encapsulation||_this._config.defaultEncapsulation)===ViewEncapsulation.Emulated;genFileNames.push(_stylesModuleUrl(normalizedUrl,needsShim,fileSuffix));if(_this._options.allowEmptyCodegenFiles){genFileNames.push(_stylesModuleUrl(normalizedUrl,!needsShim,fileSuffix));}});});return genFileNames;};AotCompiler.prototype.emitBasicStub=function(genFileName,originalFileName){var outputCtx=this._createOutputContext(genFileName);if(genFileName.endsWith('.ngfactory.ts')){if(!originalFileName){throw new Error("Assertion error: require the original file for .ngfactory.ts stubs. File: "+genFileName);}var originalFile=this._analyzeFile(originalFileName);this._createNgFactoryStub(outputCtx,originalFile,1/* Basic */);}else if(genFileName.endsWith('.ngsummary.ts')){if(this._options.enableSummariesForJit){if(!originalFileName){throw new Error("Assertion error: require the original file for .ngsummary.ts stubs. File: "+genFileName);}var originalFile=this._analyzeFile(originalFileName);_createEmptyStub(outputCtx);originalFile.ngModules.forEach(function(ngModule){// create exports that user code can reference
createForJitStub(outputCtx,ngModule.type.reference);});}}else if(genFileName.endsWith('.ngstyle.ts')){_createEmptyStub(outputCtx);}// Note: for the stubs, we don't need a property srcFileUrl,
// as later on in emitAllImpls we will create the proper GeneratedFiles with the
// correct srcFileUrl.
// This is good as e.g. for .ngstyle.ts files we can't derive
// the url of components based on the genFileUrl.
return this._codegenSourceModule('unknown',outputCtx);};AotCompiler.prototype.emitTypeCheckStub=function(genFileName,originalFileName){var originalFile=this._analyzeFile(originalFileName);var outputCtx=this._createOutputContext(genFileName);if(genFileName.endsWith('.ngfactory.ts')){this._createNgFactoryStub(outputCtx,originalFile,2/* TypeCheck */);}return outputCtx.statements.length>0?this._codegenSourceModule(originalFile.fileName,outputCtx):null;};AotCompiler.prototype.loadFilesAsync=function(fileNames,tsFiles){var _this=this;var files=fileNames.map(function(fileName){return _this._analyzeFile(fileName);});var loadingPromises=[];files.forEach(function(file){return file.ngModules.forEach(function(ngModule){return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false));});});var analyzedInjectables=tsFiles.map(function(tsFile){return _this._analyzeFileForInjectables(tsFile);});return Promise.all(loadingPromises).then(function(_){return{analyzedModules:mergeAndValidateNgFiles(files),analyzedInjectables:analyzedInjectables};});};AotCompiler.prototype.loadFilesSync=function(fileNames,tsFiles){var _this=this;var files=fileNames.map(function(fileName){return _this._analyzeFile(fileName);});files.forEach(function(file){return file.ngModules.forEach(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,true);});});var analyzedInjectables=tsFiles.map(function(tsFile){return _this._analyzeFileForInjectables(tsFile);});return{analyzedModules:mergeAndValidateNgFiles(files),analyzedInjectables:analyzedInjectables};};AotCompiler.prototype._createNgFactoryStub=function(outputCtx,file,emitFlags){var _this=this;var componentId=0;file.ngModules.forEach(function(ngModuleMeta,ngModuleIndex){// Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,
// so we don't change the .ngfactory file too much when adding the type-check block.
// create exports that user code can reference
_this._ngModuleCompiler.createStub(outputCtx,ngModuleMeta.type.reference);// add references to the symbols from the metadata.
// These can be used by the type check block for components,
// and they also cause TypeScript to include these files into the program too,
// which will make them part of the analyzedFiles.
var externalReferences=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(ngModuleMeta.transitiveModule.directives.map(function(d){return d.reference;}),ngModuleMeta.transitiveModule.pipes.map(function(d){return d.reference;}),ngModuleMeta.importedModules.map(function(m){return m.type.reference;}),ngModuleMeta.exportedModules.map(function(m){return m.type.reference;}),_this._externalIdentifierReferences([Identifiers.TemplateRef,Identifiers.ElementRef]));var externalReferenceVars=new Map();externalReferences.forEach(function(ref,typeIndex){externalReferenceVars.set(ref,"_decl"+ngModuleIndex+"_"+typeIndex);});externalReferenceVars.forEach(function(varName,reference){outputCtx.statements.push(variable(varName).set(NULL_EXPR.cast(DYNAMIC_TYPE)).toDeclStmt(expressionType(outputCtx.importExpr(reference,/* typeParams */null,/* useSummaries */false))));});if(emitFlags&2/* TypeCheck */){// add the type-check block for all components of the NgModule
ngModuleMeta.declaredDirectives.forEach(function(dirId){var compMeta=_this._metadataResolver.getDirectiveMetadata(dirId.reference);if(!compMeta.isComponent){return;}componentId++;_this._createTypeCheckBlock(outputCtx,compMeta.type.reference.name+"_Host_"+componentId,ngModuleMeta,_this._metadataResolver.getHostComponentMetadata(compMeta),[compMeta.type],externalReferenceVars);_this._createTypeCheckBlock(outputCtx,compMeta.type.reference.name+"_"+componentId,ngModuleMeta,compMeta,ngModuleMeta.transitiveModule.directives,externalReferenceVars);});}});if(outputCtx.statements.length===0){_createEmptyStub(outputCtx);}};AotCompiler.prototype._externalIdentifierReferences=function(references){var e_1,_a;var result=[];try{for(var references_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(references),references_1_1=references_1.next();!references_1_1.done;references_1_1=references_1.next()){var reference=references_1_1.value;var token=createTokenForExternalReference(this.reflector,reference);if(token.identifier){result.push(token.identifier.reference);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(references_1_1&&!references_1_1.done&&(_a=references_1.return))_a.call(references_1);}finally{if(e_1)throw e_1.error;}}return result;};AotCompiler.prototype._createTypeCheckBlock=function(ctx,componentId,moduleMeta,compMeta,directives,externalReferenceVars){var _a;var _b=this._parseTemplate(compMeta,moduleMeta,directives),parsedTemplate=_b.template,usedPipes=_b.pipes;(_a=ctx.statements).push.apply(_a,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this._typeCheckCompiler.compileComponent(componentId,compMeta,parsedTemplate,usedPipes,externalReferenceVars,ctx)));};AotCompiler.prototype.emitMessageBundle=function(analyzeResult,locale){var _this=this;var errors=[];var htmlParser=new HtmlParser();// TODO(vicb): implicit tags & attributes
var messageBundle=new MessageBundle(htmlParser,[],{},locale);analyzeResult.files.forEach(function(file){var compMetas=[];file.directives.forEach(function(directiveType){var dirMeta=_this._metadataResolver.getDirectiveMetadata(directiveType);if(dirMeta&&dirMeta.isComponent){compMetas.push(dirMeta);}});compMetas.forEach(function(compMeta){var html=compMeta.template.template;// Template URL points to either an HTML or TS file depending on whether
// the file is used with `templateUrl:` or `template:`, respectively.
var templateUrl=compMeta.template.templateUrl;var interpolationConfig=InterpolationConfig.fromArray(compMeta.template.interpolation);errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(messageBundle.updateFromTemplate(html,templateUrl,interpolationConfig)));});});if(errors.length){throw new Error(errors.map(function(e){return e.toString();}).join('\n'));}return messageBundle;};AotCompiler.prototype.emitAllPartialModules=function(_a,r3Files){var _this=this;var ngModuleByPipeOrDirective=_a.ngModuleByPipeOrDirective,files=_a.files;var contextMap=new Map();var getContext=function getContext(fileName){if(!contextMap.has(fileName)){contextMap.set(fileName,_this._createOutputContext(fileName));}return contextMap.get(fileName);};files.forEach(function(file){return _this._compilePartialModule(file.fileName,ngModuleByPipeOrDirective,file.directives,file.pipes,file.ngModules,file.injectables,getContext(file.fileName));});r3Files.forEach(function(file){return _this._compileShallowModules(file.fileName,file.shallowModules,getContext(file.fileName));});return Array.from(contextMap.values()).map(function(context){return{fileName:context.genFilePath,statements:Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(context.constantPool.statements,context.statements)};});};AotCompiler.prototype._compileShallowModules=function(fileName,shallowModules,context){var _this=this;shallowModules.forEach(function(module){return compileNgModuleFromRender2(context,module,_this._injectableCompiler);});};AotCompiler.prototype._compilePartialModule=function(fileName,ngModuleByPipeOrDirective,directives,pipes,ngModules,injectables,context){var _this=this;var errors=[];var schemaRegistry=new DomElementSchemaRegistry();var hostBindingParser=new BindingParser(this._templateParser.expressionParser,DEFAULT_INTERPOLATION_CONFIG,schemaRegistry,[],errors);// Process all components and directives
directives.forEach(function(directiveType){var directiveMetadata=_this._metadataResolver.getDirectiveMetadata(directiveType);if(directiveMetadata.isComponent){var module=ngModuleByPipeOrDirective.get(directiveType);module||error("Cannot determine the module for component '"+identifierName(directiveMetadata.type)+"'");var htmlAst=directiveMetadata.template.htmlAst;var preserveWhitespaces=directiveMetadata.template.preserveWhitespaces;if(!preserveWhitespaces){htmlAst=removeWhitespaces(htmlAst);}var render3Ast=htmlAstToRender3Ast(htmlAst.rootNodes,hostBindingParser);// Map of StaticType by directive selectors
var directiveTypeBySel_1=new Map();var directives_1=module.transitiveModule.directives.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});directives_1.forEach(function(directive){if(directive.selector){directiveTypeBySel_1.set(directive.selector,directive.type.reference);}});// Map of StaticType by pipe names
var pipeTypeByName_1=new Map();var pipes_1=module.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});pipes_1.forEach(function(pipe){pipeTypeByName_1.set(pipe.name,pipe.type.reference);});compileComponentFromRender2(context,directiveMetadata,render3Ast,_this.reflector,hostBindingParser,directiveTypeBySel_1,pipeTypeByName_1);}else{compileDirectiveFromRender2(context,directiveMetadata,_this.reflector,hostBindingParser);}});pipes.forEach(function(pipeType){var pipeMetadata=_this._metadataResolver.getPipeMetadata(pipeType);if(pipeMetadata){compilePipeFromRender2(context,pipeMetadata,_this.reflector);}});injectables.forEach(function(injectable){return _this._injectableCompiler.compile(injectable,context);});};AotCompiler.prototype.emitAllPartialModules2=function(files){var _this=this;// Using reduce like this is a select many pattern (where map is a select pattern)
return files.reduce(function(r,file){r.push.apply(r,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(_this._emitPartialModule2(file.fileName,file.injectables)));return r;},[]);};AotCompiler.prototype._emitPartialModule2=function(fileName,injectables){var _this=this;var context=this._createOutputContext(fileName);injectables.forEach(function(injectable){return _this._injectableCompiler.compile(injectable,context);});if(context.statements&&context.statements.length>0){return[{fileName:fileName,statements:Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(context.constantPool.statements,context.statements)}];}return[];};AotCompiler.prototype.emitAllImpls=function(analyzeResult){var _this=this;var ngModuleByPipeOrDirective=analyzeResult.ngModuleByPipeOrDirective,files=analyzeResult.files;var sourceModules=files.map(function(file){return _this._compileImplFile(file.fileName,ngModuleByPipeOrDirective,file.directives,file.pipes,file.ngModules,file.injectables);});return flatten(sourceModules);};AotCompiler.prototype._compileImplFile=function(srcFileUrl,ngModuleByPipeOrDirective,directives,pipes,ngModules,injectables){var _this=this;var fileSuffix=normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl,true)[1]);var generatedFiles=[];var outputCtx=this._createOutputContext(ngfactoryFilePath(srcFileUrl,true));generatedFiles.push.apply(generatedFiles,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(this._createSummary(srcFileUrl,directives,pipes,ngModules,injectables,outputCtx)));// compile all ng modules
ngModules.forEach(function(ngModuleMeta){return _this._compileModule(outputCtx,ngModuleMeta);});// compile components
directives.forEach(function(dirType){var compMeta=_this._metadataResolver.getDirectiveMetadata(dirType);if(!compMeta.isComponent){return;}var ngModule=ngModuleByPipeOrDirective.get(dirType);if(!ngModule){throw new Error("Internal Error: cannot determine the module for component "+identifierName(compMeta.type)+"!");}// compile styles
var componentStylesheet=_this._styleCompiler.compileComponent(outputCtx,compMeta);// Note: compMeta is a component and therefore template is non null.
compMeta.template.externalStylesheets.forEach(function(stylesheetMeta){// Note: fill non shim and shim style files as they might
// be shared by component with and without ViewEncapsulation.
var shim=_this._styleCompiler.needsStyleShim(compMeta);generatedFiles.push(_this._codegenStyles(srcFileUrl,compMeta,stylesheetMeta,shim,fileSuffix));if(_this._options.allowEmptyCodegenFiles){generatedFiles.push(_this._codegenStyles(srcFileUrl,compMeta,stylesheetMeta,!shim,fileSuffix));}});// compile components
var compViewVars=_this._compileComponent(outputCtx,compMeta,ngModule,ngModule.transitiveModule.directives,componentStylesheet,fileSuffix);_this._compileComponentFactory(outputCtx,compMeta,ngModule,fileSuffix);});if(outputCtx.statements.length>0||this._options.allowEmptyCodegenFiles){var srcModule=this._codegenSourceModule(srcFileUrl,outputCtx);generatedFiles.unshift(srcModule);}return generatedFiles;};AotCompiler.prototype._createSummary=function(srcFileName,directives,pipes,ngModules,injectables,ngFactoryCtx){var _this=this;var symbolSummaries=this._symbolResolver.getSymbolsOf(srcFileName).map(function(symbol){return _this._symbolResolver.resolveSymbol(symbol);});var typeData=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(ngModules.map(function(meta){return{summary:_this._metadataResolver.getNgModuleSummary(meta.type.reference),metadata:_this._metadataResolver.getNgModuleMetadata(meta.type.reference)};}),directives.map(function(ref){return{summary:_this._metadataResolver.getDirectiveSummary(ref),metadata:_this._metadataResolver.getDirectiveMetadata(ref)};}),pipes.map(function(ref){return{summary:_this._metadataResolver.getPipeSummary(ref),metadata:_this._metadataResolver.getPipeMetadata(ref)};}),injectables.map(function(ref){return{summary:_this._metadataResolver.getInjectableSummary(ref.symbol),metadata:_this._metadataResolver.getInjectableSummary(ref.symbol).type};}));var forJitOutputCtx=this._options.enableSummariesForJit?this._createOutputContext(summaryForJitFileName(srcFileName,true)):null;var _a=serializeSummaries(srcFileName,forJitOutputCtx,this._summaryResolver,this._symbolResolver,symbolSummaries,typeData),json=_a.json,exportAs=_a.exportAs;exportAs.forEach(function(entry){ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null,[StmtModifier.Exported]));});var summaryJson=new GeneratedFile(srcFileName,summaryFileName(srcFileName),json);var result=[summaryJson];if(forJitOutputCtx){result.push(this._codegenSourceModule(srcFileName,forJitOutputCtx));}return result;};AotCompiler.prototype._compileModule=function(outputCtx,ngModule){var providers=[];if(this._options.locale){var normalizedLocale=this._options.locale.replace(/_/g,'-');providers.push({token:createTokenForExternalReference(this.reflector,Identifiers.LOCALE_ID),useValue:normalizedLocale});}if(this._options.i18nFormat){providers.push({token:createTokenForExternalReference(this.reflector,Identifiers.TRANSLATIONS_FORMAT),useValue:this._options.i18nFormat});}this._ngModuleCompiler.compile(outputCtx,ngModule,providers);};AotCompiler.prototype._compileComponentFactory=function(outputCtx,compMeta,ngModule,fileSuffix){var hostMeta=this._metadataResolver.getHostComponentMetadata(compMeta);var hostViewFactoryVar=this._compileComponent(outputCtx,hostMeta,ngModule,[compMeta.type],null,fileSuffix).viewClassVar;var compFactoryVar=componentFactoryName(compMeta.type.reference);var inputsExprs=[];for(var propName in compMeta.inputs){var templateName=compMeta.inputs[propName];// Don't quote so that the key gets minified...
inputsExprs.push(new LiteralMapEntry(propName,literal(templateName),false));}var outputsExprs=[];for(var propName in compMeta.outputs){var templateName=compMeta.outputs[propName];// Don't quote so that the key gets minified...
outputsExprs.push(new LiteralMapEntry(propName,literal(templateName),false));}outputCtx.statements.push(variable(compFactoryVar).set(importExpr(Identifiers.createComponentFactory).callFn([literal(compMeta.selector),outputCtx.importExpr(compMeta.type.reference),variable(hostViewFactoryVar),new LiteralMapExpr(inputsExprs),new LiteralMapExpr(outputsExprs),literalArr(compMeta.template.ngContentSelectors.map(function(selector){return literal(selector);}))])).toDeclStmt(importType(Identifiers.ComponentFactory,[expressionType(outputCtx.importExpr(compMeta.type.reference))],[TypeModifier.Const]),[StmtModifier.Final,StmtModifier.Exported]));};AotCompiler.prototype._compileComponent=function(outputCtx,compMeta,ngModule,directiveIdentifiers,componentStyles,fileSuffix){var _a=this._parseTemplate(compMeta,ngModule,directiveIdentifiers),parsedTemplate=_a.template,usedPipes=_a.pipes;var stylesExpr=componentStyles?variable(componentStyles.stylesVar):literalArr([]);var viewResult=this._viewCompiler.compileComponent(outputCtx,compMeta,parsedTemplate,stylesExpr,usedPipes);if(componentStyles){_resolveStyleStatements(this._symbolResolver,componentStyles,this._styleCompiler.needsStyleShim(compMeta),fileSuffix);}return viewResult;};AotCompiler.prototype._parseTemplate=function(compMeta,ngModule,directiveIdentifiers){var _this=this;if(this._templateAstCache.has(compMeta.type.reference)){return this._templateAstCache.get(compMeta.type.reference);}var preserveWhitespaces=compMeta.template.preserveWhitespaces;var directives=directiveIdentifiers.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});var pipes=ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});var result=this._templateParser.parse(compMeta,compMeta.template.htmlAst,directives,pipes,ngModule.schemas,templateSourceUrl(ngModule.type,compMeta,compMeta.template),preserveWhitespaces);this._templateAstCache.set(compMeta.type.reference,result);return result;};AotCompiler.prototype._createOutputContext=function(genFilePath){var _this=this;var importExpr$$1=function importExpr$$1(symbol,typeParams,useSummaries){if(typeParams===void 0){typeParams=null;}if(useSummaries===void 0){useSummaries=true;}if(!(symbol instanceof StaticSymbol)){throw new Error("Internal error: unknown identifier "+JSON.stringify(symbol));}var arity=_this._symbolResolver.getTypeArity(symbol)||0;var _a=_this._symbolResolver.getImportAs(symbol,useSummaries)||symbol,filePath=_a.filePath,name=_a.name,members=_a.members;var importModule=_this._fileNameToModuleName(filePath,genFilePath);// It should be good enough to compare filePath to genFilePath and if they are equal
// there is a self reference. However, ngfactory files generate to .ts but their
// symbols have .d.ts so a simple compare is insufficient. They should be canonical
// and is tracked by #17705.
var selfReference=_this._fileNameToModuleName(genFilePath,genFilePath);var moduleName=importModule===selfReference?null:importModule;// If we are in a type expression that refers to a generic type then supply
// the required type parameters. If there were not enough type parameters
// supplied, supply any as the type. Outside a type expression the reference
// should not supply type parameters and be treated as a simple value reference
// to the constructor function itself.
var suppliedTypeParams=typeParams||[];var missingTypeParamsCount=arity-suppliedTypeParams.length;var allTypeParams=suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));return members.reduce(function(expr,memberName){return expr.prop(memberName);},importExpr(new ExternalReference(moduleName,name,null),allTypeParams));};return{statements:[],genFilePath:genFilePath,importExpr:importExpr$$1,constantPool:new ConstantPool()};};AotCompiler.prototype._fileNameToModuleName=function(importedFilePath,containingFilePath){return this._summaryResolver.getKnownModuleName(importedFilePath)||this._symbolResolver.getKnownModuleName(importedFilePath)||this._host.fileNameToModuleName(importedFilePath,containingFilePath);};AotCompiler.prototype._codegenStyles=function(srcFileUrl,compMeta,stylesheetMetadata,isShimmed,fileSuffix){var outputCtx=this._createOutputContext(_stylesModuleUrl(stylesheetMetadata.moduleUrl,isShimmed,fileSuffix));var compiledStylesheet=this._styleCompiler.compileStyles(outputCtx,compMeta,stylesheetMetadata,isShimmed);_resolveStyleStatements(this._symbolResolver,compiledStylesheet,isShimmed,fileSuffix);return this._codegenSourceModule(srcFileUrl,outputCtx);};AotCompiler.prototype._codegenSourceModule=function(srcFileUrl,ctx){return new GeneratedFile(srcFileUrl,ctx.genFilePath,ctx.statements);};AotCompiler.prototype.listLazyRoutes=function(entryRoute,analyzedModules){var e_2,_a,e_3,_b;var self=this;if(entryRoute){var symbol=parseLazyRoute(entryRoute,this.reflector).referencedModule;return visitLazyRoute(symbol);}else if(analyzedModules){var allLazyRoutes=[];try{for(var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(analyzedModules.ngModules),_d=_c.next();!_d.done;_d=_c.next()){var ngModule=_d.value;var lazyRoutes=listLazyRoutes(ngModule,this.reflector);try{for(var lazyRoutes_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(lazyRoutes),lazyRoutes_1_1=lazyRoutes_1.next();!lazyRoutes_1_1.done;lazyRoutes_1_1=lazyRoutes_1.next()){var lazyRoute=lazyRoutes_1_1.value;allLazyRoutes.push(lazyRoute);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(lazyRoutes_1_1&&!lazyRoutes_1_1.done&&(_b=lazyRoutes_1.return))_b.call(lazyRoutes_1);}finally{if(e_3)throw e_3.error;}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_2)throw e_2.error;}}return allLazyRoutes;}else{throw new Error("Either route or analyzedModules has to be specified!");}function visitLazyRoute(symbol,seenRoutes,allLazyRoutes){if(seenRoutes===void 0){seenRoutes=new Set();}if(allLazyRoutes===void 0){allLazyRoutes=[];}var e_4,_a;// Support pointing to default exports, but stop recursing there,
// as the StaticReflector does not yet support default exports.
if(seenRoutes.has(symbol)||!symbol.name){return allLazyRoutes;}seenRoutes.add(symbol);var lazyRoutes=listLazyRoutes(self._metadataResolver.getNgModuleMetadata(symbol,true),self.reflector);try{for(var lazyRoutes_2=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(lazyRoutes),lazyRoutes_2_1=lazyRoutes_2.next();!lazyRoutes_2_1.done;lazyRoutes_2_1=lazyRoutes_2.next()){var lazyRoute=lazyRoutes_2_1.value;allLazyRoutes.push(lazyRoute);visitLazyRoute(lazyRoute.referencedModule,seenRoutes,allLazyRoutes);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(lazyRoutes_2_1&&!lazyRoutes_2_1.done&&(_a=lazyRoutes_2.return))_a.call(lazyRoutes_2);}finally{if(e_4)throw e_4.error;}}return allLazyRoutes;}};return AotCompiler;}();function _createEmptyStub(outputCtx){// Note: We need to produce at least one import statement so that
// TypeScript knows that the file is an es6 module. Otherwise our generated
// exports / imports won't be emitted properly by TypeScript.
outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());}function _resolveStyleStatements(symbolResolver,compileResult,needsShim,fileSuffix){compileResult.dependencies.forEach(function(dep){dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl,needsShim,fileSuffix),dep.name));});}function _stylesModuleUrl(stylesheetUrl,shim,suffix){return""+stylesheetUrl+(shim?'.shim':'')+".ngstyle"+suffix;}function analyzeNgModules(fileNames,host,staticSymbolResolver,metadataResolver){var files=_analyzeFilesIncludingNonProgramFiles(fileNames,host,staticSymbolResolver,metadataResolver);return mergeAnalyzedFiles(files);}function analyzeAndValidateNgModules(fileNames,host,staticSymbolResolver,metadataResolver){return validateAnalyzedModules(analyzeNgModules(fileNames,host,staticSymbolResolver,metadataResolver));}function validateAnalyzedModules(analyzedModules){if(analyzedModules.symbolsMissingModule&&analyzedModules.symbolsMissingModule.length){var messages=analyzedModules.symbolsMissingModule.map(function(s){return"Cannot determine the module for class "+s.name+" in "+s.filePath+"! Add "+s.name+" to the NgModule to fix it.";});throw syntaxError(messages.join('\n'));}return analyzedModules;}// Analyzes all of the program files,
// including files that are not part of the program
// but are referenced by an NgModule.
function _analyzeFilesIncludingNonProgramFiles(fileNames,host,staticSymbolResolver,metadataResolver){var seenFiles=new Set();var files=[];var visitFile=function visitFile(fileName){if(seenFiles.has(fileName)||!host.isSourceFile(fileName)){return false;}seenFiles.add(fileName);var analyzedFile=analyzeFile(host,staticSymbolResolver,metadataResolver,fileName);files.push(analyzedFile);analyzedFile.ngModules.forEach(function(ngModule){ngModule.transitiveModule.modules.forEach(function(modMeta){return visitFile(modMeta.reference.filePath);});});};fileNames.forEach(function(fileName){return visitFile(fileName);});return files;}function analyzeFile(host,staticSymbolResolver,metadataResolver,fileName){var directives=[];var pipes=[];var injectables=[];var ngModules=[];var hasDecorators=staticSymbolResolver.hasDecorators(fileName);var exportsNonSourceFiles=false;// Don't analyze .d.ts files that have no decorators as a shortcut
// to speed up the analysis. This prevents us from
// resolving the references in these files.
// Note: exportsNonSourceFiles is only needed when compiling with summaries,
// which is not the case when .d.ts files are treated as input files.
if(!fileName.endsWith('.d.ts')||hasDecorators){staticSymbolResolver.getSymbolsOf(fileName).forEach(function(symbol){var resolvedSymbol=staticSymbolResolver.resolveSymbol(symbol);var symbolMeta=resolvedSymbol.metadata;if(!symbolMeta||symbolMeta.__symbolic==='error'){return;}var isNgSymbol=false;if(symbolMeta.__symbolic==='class'){if(metadataResolver.isDirective(symbol)){isNgSymbol=true;directives.push(symbol);}else if(metadataResolver.isPipe(symbol)){isNgSymbol=true;pipes.push(symbol);}else if(metadataResolver.isNgModule(symbol)){var ngModule=metadataResolver.getNgModuleMetadata(symbol,false);if(ngModule){isNgSymbol=true;ngModules.push(ngModule);}}else if(metadataResolver.isInjectable(symbol)){isNgSymbol=true;var injectable=metadataResolver.getInjectableMetadata(symbol,null,false);if(injectable){injectables.push(injectable);}}}if(!isNgSymbol){exportsNonSourceFiles=exportsNonSourceFiles||isValueExportingNonSourceFile(host,symbolMeta);}});}return{fileName:fileName,directives:directives,pipes:pipes,ngModules:ngModules,injectables:injectables,exportsNonSourceFiles:exportsNonSourceFiles};}function analyzeFileForInjectables(host,staticSymbolResolver,metadataResolver,fileName){var injectables=[];var shallowModules=[];if(staticSymbolResolver.hasDecorators(fileName)){staticSymbolResolver.getSymbolsOf(fileName).forEach(function(symbol){var resolvedSymbol=staticSymbolResolver.resolveSymbol(symbol);var symbolMeta=resolvedSymbol.metadata;if(!symbolMeta||symbolMeta.__symbolic==='error'){return;}if(symbolMeta.__symbolic==='class'){if(metadataResolver.isInjectable(symbol)){var injectable=metadataResolver.getInjectableMetadata(symbol,null,false);if(injectable){injectables.push(injectable);}}else if(metadataResolver.isNgModule(symbol)){var module=metadataResolver.getShallowModuleMetadata(symbol);if(module){shallowModules.push(module);}}}});}return{fileName:fileName,injectables:injectables,shallowModules:shallowModules};}function isValueExportingNonSourceFile(host,metadata){var exportsNonSourceFiles=false;var Visitor=/** @class */function(){function Visitor(){}Visitor.prototype.visitArray=function(arr,context){var _this=this;arr.forEach(function(v){return visitValue(v,_this,context);});};Visitor.prototype.visitStringMap=function(map,context){var _this=this;Object.keys(map).forEach(function(key){return visitValue(map[key],_this,context);});};Visitor.prototype.visitPrimitive=function(value,context){};Visitor.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol&&!host.isSourceFile(value.filePath)){exportsNonSourceFiles=true;}};return Visitor;}();visitValue(metadata,new Visitor(),null);return exportsNonSourceFiles;}function mergeAnalyzedFiles(analyzedFiles){var allNgModules=[];var ngModuleByPipeOrDirective=new Map();var allPipesAndDirectives=new Set();analyzedFiles.forEach(function(af){af.ngModules.forEach(function(ngModule){allNgModules.push(ngModule);ngModule.declaredDirectives.forEach(function(d){return ngModuleByPipeOrDirective.set(d.reference,ngModule);});ngModule.declaredPipes.forEach(function(p){return ngModuleByPipeOrDirective.set(p.reference,ngModule);});});af.directives.forEach(function(d){return allPipesAndDirectives.add(d);});af.pipes.forEach(function(p){return allPipesAndDirectives.add(p);});});var symbolsMissingModule=[];allPipesAndDirectives.forEach(function(ref){if(!ngModuleByPipeOrDirective.has(ref)){symbolsMissingModule.push(ref);}});return{ngModules:allNgModules,ngModuleByPipeOrDirective:ngModuleByPipeOrDirective,symbolsMissingModule:symbolsMissingModule,files:analyzedFiles};}function mergeAndValidateNgFiles(files){return validateAnalyzedModules(mergeAnalyzedFiles(files));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var FORMATTED_MESSAGE='ngFormattedMessage';function indentStr(level){if(level<=0)return'';if(level<6)return['',' ','  ','   ','    ','     '][level];var half=indentStr(Math.floor(level/2));return half+half+(level%2===1?' ':'');}function formatChain(chain,indent){if(indent===void 0){indent=0;}if(!chain)return'';var position=chain.position?chain.position.fileName+"("+(chain.position.line+1)+","+(chain.position.column+1)+")":'';var prefix=position&&indent===0?position+": ":'';var postfix=position&&indent!==0?" at "+position:'';var message=""+prefix+chain.message+postfix;return""+indentStr(indent)+message+(chain.next&&'\n'+formatChain(chain.next,indent+2)||'');}function formattedError(chain){var message=formatChain(chain)+'.';var error$$1=syntaxError(message);error$$1[FORMATTED_MESSAGE]=true;error$$1.chain=chain;error$$1.position=chain.position;return error$$1;}function isFormattedError(error$$1){return!!error$$1[FORMATTED_MESSAGE];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ANGULAR_CORE='@angular/core';var ANGULAR_ROUTER='@angular/router';var HIDDEN_KEY=/^\$.*\$$/;var IGNORE={__symbolic:'ignore'};var USE_VALUE='useValue';var PROVIDE='provide';var REFERENCE_SET=new Set([USE_VALUE,'useFactory','data','id','loadChildren']);var TYPEGUARD_POSTFIX='TypeGuard';var USE_IF='UseIf';function shouldIgnore(value){return value&&value.__symbolic=='ignore';}/**
 * A static reflector implements enough of the Reflector API that is necessary to compile
 * templates statically.
 */var StaticReflector=/** @class */function(){function StaticReflector(summaryResolver,symbolResolver,knownMetadataClasses,knownMetadataFunctions,errorRecorder){if(knownMetadataClasses===void 0){knownMetadataClasses=[];}if(knownMetadataFunctions===void 0){knownMetadataFunctions=[];}var _this=this;this.summaryResolver=summaryResolver;this.symbolResolver=symbolResolver;this.errorRecorder=errorRecorder;this.annotationCache=new Map();this.shallowAnnotationCache=new Map();this.propertyCache=new Map();this.parameterCache=new Map();this.methodCache=new Map();this.staticCache=new Map();this.conversionMap=new Map();this.resolvedExternalReferences=new Map();this.annotationForParentClassWithSummaryKind=new Map();this.initializeConversionMap();knownMetadataClasses.forEach(function(kc){return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath,kc.name),kc.ctor);});knownMetadataFunctions.forEach(function(kf){return _this._registerFunction(_this.getStaticSymbol(kf.filePath,kf.name),kf.fn);});this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive,[createDirective,createComponent]);this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe,[createPipe]);this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule,[createNgModule]);this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable,[createInjectable,createPipe,createDirective,createComponent,createNgModule]);}StaticReflector.prototype.componentModuleUrl=function(typeOrFunc){var staticSymbol=this.findSymbolDeclaration(typeOrFunc);return this.symbolResolver.getResourcePath(staticSymbol);};StaticReflector.prototype.resolveExternalReference=function(ref,containingFile){var key=undefined;if(!containingFile){key=ref.moduleName+":"+ref.name;var declarationSymbol_1=this.resolvedExternalReferences.get(key);if(declarationSymbol_1)return declarationSymbol_1;}var refSymbol=this.symbolResolver.getSymbolByModule(ref.moduleName,ref.name,containingFile);var declarationSymbol=this.findSymbolDeclaration(refSymbol);if(!containingFile){this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath,ref.moduleName);this.symbolResolver.recordImportAs(declarationSymbol,refSymbol);}if(key){this.resolvedExternalReferences.set(key,declarationSymbol);}return declarationSymbol;};StaticReflector.prototype.findDeclaration=function(moduleUrl,name,containingFile){return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl,name,containingFile));};StaticReflector.prototype.tryFindDeclaration=function(moduleUrl,name,containingFile){var _this=this;return this.symbolResolver.ignoreErrorsFor(function(){return _this.findDeclaration(moduleUrl,name,containingFile);});};StaticReflector.prototype.findSymbolDeclaration=function(symbol){var resolvedSymbol=this.symbolResolver.resolveSymbol(symbol);if(resolvedSymbol){var resolvedMetadata=resolvedSymbol.metadata;if(resolvedMetadata&&resolvedMetadata.__symbolic==='resolved'){resolvedMetadata=resolvedMetadata.symbol;}if(resolvedMetadata instanceof StaticSymbol){return this.findSymbolDeclaration(resolvedSymbol.metadata);}}return symbol;};StaticReflector.prototype.tryAnnotations=function(type){var originalRecorder=this.errorRecorder;this.errorRecorder=function(error$$1,fileName){};try{return this.annotations(type);}finally{this.errorRecorder=originalRecorder;}};StaticReflector.prototype.annotations=function(type){var _this=this;return this._annotations(type,function(type,decorators){return _this.simplify(type,decorators);},this.annotationCache);};StaticReflector.prototype.shallowAnnotations=function(type){var _this=this;return this._annotations(type,function(type,decorators){return _this.simplify(type,decorators,true);},this.shallowAnnotationCache);};StaticReflector.prototype._annotations=function(type,simplify,annotationCache){var annotations=annotationCache.get(type);if(!annotations){annotations=[];var classMetadata=this.getTypeMetadata(type);var parentType=this.findParentType(type,classMetadata);if(parentType){var parentAnnotations=this.annotations(parentType);annotations.push.apply(annotations,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(parentAnnotations));}var ownAnnotations_1=[];if(classMetadata['decorators']){ownAnnotations_1=simplify(type,classMetadata['decorators']);if(ownAnnotations_1){annotations.push.apply(annotations,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(ownAnnotations_1));}}if(parentType&&!this.summaryResolver.isLibraryFile(type.filePath)&&this.summaryResolver.isLibraryFile(parentType.filePath)){var summary=this.summaryResolver.resolveSummary(parentType);if(summary&&summary.type){var requiredAnnotationTypes=this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind);var typeHasRequiredAnnotation=requiredAnnotationTypes.some(function(requiredType){return ownAnnotations_1.some(function(ann){return requiredType.isTypeOf(ann);});});if(!typeHasRequiredAnnotation){this.reportError(formatMetadataError(metadataError("Class "+type.name+" in "+type.filePath+" extends from a "+CompileSummaryKind[summary.type.summaryKind]+" in another compilation unit without duplicating the decorator",/* summary */undefined,"Please add a "+requiredAnnotationTypes.map(function(type){return type.ngMetadataName;}).join(' or ')+" decorator to the class"),type),type);}}}annotationCache.set(type,annotations.filter(function(ann){return!!ann;}));}return annotations;};StaticReflector.prototype.propMetadata=function(type){var _this=this;var propMetadata=this.propertyCache.get(type);if(!propMetadata){var classMetadata=this.getTypeMetadata(type);propMetadata={};var parentType=this.findParentType(type,classMetadata);if(parentType){var parentPropMetadata_1=this.propMetadata(parentType);Object.keys(parentPropMetadata_1).forEach(function(parentProp){propMetadata[parentProp]=parentPropMetadata_1[parentProp];});}var members_1=classMetadata['members']||{};Object.keys(members_1).forEach(function(propName){var propData=members_1[propName];var prop=propData.find(function(a){return a['__symbolic']=='property'||a['__symbolic']=='method';});var decorators=[];if(propMetadata[propName]){decorators.push.apply(decorators,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(propMetadata[propName]));}propMetadata[propName]=decorators;if(prop&&prop['decorators']){decorators.push.apply(decorators,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(_this.simplify(type,prop['decorators'])));}});this.propertyCache.set(type,propMetadata);}return propMetadata;};StaticReflector.prototype.parameters=function(type){var _this=this;if(!(type instanceof StaticSymbol)){this.reportError(new Error("parameters received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);return[];}try{var parameters_1=this.parameterCache.get(type);if(!parameters_1){var classMetadata=this.getTypeMetadata(type);var parentType=this.findParentType(type,classMetadata);var members=classMetadata?classMetadata['members']:null;var ctorData=members?members['__ctor__']:null;if(ctorData){var ctor=ctorData.find(function(a){return a['__symbolic']=='constructor';});var rawParameterTypes=ctor['parameters']||[];var parameterDecorators_1=this.simplify(type,ctor['parameterDecorators']||[]);parameters_1=[];rawParameterTypes.forEach(function(rawParamType,index){var nestedResult=[];var paramType=_this.trySimplify(type,rawParamType);if(paramType)nestedResult.push(paramType);var decorators=parameterDecorators_1?parameterDecorators_1[index]:null;if(decorators){nestedResult.push.apply(nestedResult,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(decorators));}parameters_1.push(nestedResult);});}else if(parentType){parameters_1=this.parameters(parentType);}if(!parameters_1){parameters_1=[];}this.parameterCache.set(type,parameters_1);}return parameters_1;}catch(e){console.error("Failed on type "+JSON.stringify(type)+" with error "+e);throw e;}};StaticReflector.prototype._methodNames=function(type){var methodNames=this.methodCache.get(type);if(!methodNames){var classMetadata=this.getTypeMetadata(type);methodNames={};var parentType=this.findParentType(type,classMetadata);if(parentType){var parentMethodNames_1=this._methodNames(parentType);Object.keys(parentMethodNames_1).forEach(function(parentProp){methodNames[parentProp]=parentMethodNames_1[parentProp];});}var members_2=classMetadata['members']||{};Object.keys(members_2).forEach(function(propName){var propData=members_2[propName];var isMethod=propData.some(function(a){return a['__symbolic']=='method';});methodNames[propName]=methodNames[propName]||isMethod;});this.methodCache.set(type,methodNames);}return methodNames;};StaticReflector.prototype._staticMembers=function(type){var staticMembers=this.staticCache.get(type);if(!staticMembers){var classMetadata=this.getTypeMetadata(type);var staticMemberData=classMetadata['statics']||{};staticMembers=Object.keys(staticMemberData);this.staticCache.set(type,staticMembers);}return staticMembers;};StaticReflector.prototype.findParentType=function(type,classMetadata){var parentType=this.trySimplify(type,classMetadata['extends']);if(parentType instanceof StaticSymbol){return parentType;}};StaticReflector.prototype.hasLifecycleHook=function(type,lcProperty){if(!(type instanceof StaticSymbol)){this.reportError(new Error("hasLifecycleHook received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);}try{return!!this._methodNames(type)[lcProperty];}catch(e){console.error("Failed on type "+JSON.stringify(type)+" with error "+e);throw e;}};StaticReflector.prototype.guards=function(type){var e_1,_a;if(!(type instanceof StaticSymbol)){this.reportError(new Error("guards received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);return{};}var staticMembers=this._staticMembers(type);var result={};try{for(var staticMembers_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(staticMembers),staticMembers_1_1=staticMembers_1.next();!staticMembers_1_1.done;staticMembers_1_1=staticMembers_1.next()){var name_1=staticMembers_1_1.value;if(name_1.endsWith(TYPEGUARD_POSTFIX)){var property=name_1.substr(0,name_1.length-TYPEGUARD_POSTFIX.length);var value=void 0;if(property.endsWith(USE_IF)){property=name_1.substr(0,property.length-USE_IF.length);value=USE_IF;}else{value=this.getStaticSymbol(type.filePath,type.name,[name_1]);}result[property]=value;}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(staticMembers_1_1&&!staticMembers_1_1.done&&(_a=staticMembers_1.return))_a.call(staticMembers_1);}finally{if(e_1)throw e_1.error;}}return result;};StaticReflector.prototype._registerDecoratorOrConstructor=function(type,ctor){this.conversionMap.set(type,function(context,args){return new(ctor.bind.apply(ctor,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],args)))();});};StaticReflector.prototype._registerFunction=function(type,fn){this.conversionMap.set(type,function(context,args){return fn.apply(undefined,args);});};StaticReflector.prototype.initializeConversionMap=function(){this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Injectable'),createInjectable);this.injectionToken=this.findDeclaration(ANGULAR_CORE,'InjectionToken');this.opaqueToken=this.findDeclaration(ANGULAR_CORE,'OpaqueToken');this.ROUTES=this.tryFindDeclaration(ANGULAR_ROUTER,'ROUTES');this.ANALYZE_FOR_ENTRY_COMPONENTS=this.findDeclaration(ANGULAR_CORE,'ANALYZE_FOR_ENTRY_COMPONENTS');this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),createHost);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),createSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),createSkipSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Inject'),createInject);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),createOptional);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Attribute'),createAttribute);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChild'),createContentChild);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChildren'),createContentChildren);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChild'),createViewChild);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChildren'),createViewChildren);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Input'),createInput);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Output'),createOutput);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Pipe'),createPipe);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostBinding'),createHostBinding);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostListener'),createHostListener);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Directive'),createDirective);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Component'),createComponent);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'NgModule'),createNgModule);// Note: Some metadata classes can be used directly with Provider.deps.
this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),createHost);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),createSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),createSkipSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),createOptional);};/**
     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
     * All types passed to the StaticResolver should be pseudo-types returned by this method.
     *
     * @param declarationFile the absolute path of the file where the symbol is declared
     * @param name the name of the type.
     */StaticReflector.prototype.getStaticSymbol=function(declarationFile,name,members){return this.symbolResolver.getStaticSymbol(declarationFile,name,members);};/**
     * Simplify but discard any errors
     */StaticReflector.prototype.trySimplify=function(context,value){var originalRecorder=this.errorRecorder;this.errorRecorder=function(error$$1,fileName){};var result=this.simplify(context,value);this.errorRecorder=originalRecorder;return result;};/** @internal */StaticReflector.prototype.simplify=function(context,value,lazy){if(lazy===void 0){lazy=false;}var self=this;var scope=BindingScope$1.empty;var calling=new Map();function simplifyInContext(context,value,depth,references){function resolveReferenceValue(staticSymbol){var resolvedSymbol=self.symbolResolver.resolveSymbol(staticSymbol);return resolvedSymbol?resolvedSymbol.metadata:null;}function simplifyEagerly(value){return simplifyInContext(context,value,depth,0);}function simplifyLazily(value){return simplifyInContext(context,value,depth,references+1);}function simplifyNested(nestedContext,value){if(nestedContext===context){// If the context hasn't changed let the exception propagate unmodified.
return simplifyInContext(nestedContext,value,depth+1,references);}try{return simplifyInContext(nestedContext,value,depth+1,references);}catch(e){if(isMetadataError(e)){// Propagate the message text up but add a message to the chain that explains how we got
// here.
// e.chain implies e.symbol
var summaryMsg=e.chain?'references \''+e.symbol.name+'\'':errorSummary(e);var summary="'"+nestedContext.name+"' "+summaryMsg;var chain={message:summary,position:e.position,next:e.chain};// TODO(chuckj): retrieve the position information indirectly from the collectors node
// map if the metadata is from a .ts file.
self.error({message:e.message,advise:e.advise,context:e.context,chain:chain,symbol:nestedContext},context);}else{// It is probably an internal error.
throw e;}}}function simplifyCall(functionSymbol,targetFunction,args,targetExpression){if(targetFunction&&targetFunction['__symbolic']=='function'){if(calling.get(functionSymbol)){self.error({message:'Recursion is not supported',summary:"called '"+functionSymbol.name+"' recursively",value:targetFunction},functionSymbol);}try{var value_1=targetFunction['value'];if(value_1&&(depth!=0||value_1.__symbolic!='error')){var parameters=targetFunction['parameters'];var defaults=targetFunction.defaults;args=args.map(function(arg){return simplifyNested(context,arg);}).map(function(arg){return shouldIgnore(arg)?undefined:arg;});if(defaults&&defaults.length>args.length){args.push.apply(args,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(defaults.slice(args.length).map(function(value){return simplify(value);})));}calling.set(functionSymbol,true);var functionScope=BindingScope$1.build();for(var i=0;i<parameters.length;i++){functionScope.define(parameters[i],args[i]);}var oldScope=scope;var result_1;try{scope=functionScope.done();result_1=simplifyNested(functionSymbol,value_1);}finally{scope=oldScope;}return result_1;}}finally{calling.delete(functionSymbol);}}if(depth===0){// If depth is 0 we are evaluating the top level expression that is describing element
// decorator. In this case, it is a decorator we don't understand, such as a custom
// non-angular decorator, and we should just ignore it.
return IGNORE;}var position=undefined;if(targetExpression&&targetExpression.__symbolic=='resolved'){var line=targetExpression.line;var character=targetExpression.character;var fileName=targetExpression.fileName;if(fileName!=null&&line!=null&&character!=null){position={fileName:fileName,line:line,column:character};}}self.error({message:FUNCTION_CALL_NOT_SUPPORTED,context:functionSymbol,value:targetFunction,position:position},context);}function simplify(expression){var e_2,_a,e_3,_b;if(isPrimitive(expression)){return expression;}if(expression instanceof Array){var result_2=[];try{for(var _c=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(expression),_d=_c.next();!_d.done;_d=_c.next()){var item=_d.value;// Check for a spread expression
if(item&&item.__symbolic==='spread'){// We call with references as 0 because we require the actual value and cannot
// tolerate a reference here.
var spreadArray=simplifyEagerly(item.expression);if(Array.isArray(spreadArray)){try{for(var spreadArray_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(spreadArray),spreadArray_1_1=spreadArray_1.next();!spreadArray_1_1.done;spreadArray_1_1=spreadArray_1.next()){var spreadItem=spreadArray_1_1.value;result_2.push(spreadItem);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(spreadArray_1_1&&!spreadArray_1_1.done&&(_b=spreadArray_1.return))_b.call(spreadArray_1);}finally{if(e_3)throw e_3.error;}}continue;}}var value_2=simplify(item);if(shouldIgnore(value_2)){continue;}result_2.push(value_2);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_2)throw e_2.error;}}return result_2;}if(expression instanceof StaticSymbol){// Stop simplification at builtin symbols or if we are in a reference context and
// the symbol doesn't have members.
if(expression===self.injectionToken||self.conversionMap.has(expression)||references>0&&!expression.members.length){return expression;}else{var staticSymbol=expression;var declarationValue=resolveReferenceValue(staticSymbol);if(declarationValue!=null){return simplifyNested(staticSymbol,declarationValue);}else{return staticSymbol;}}}if(expression){if(expression['__symbolic']){var staticSymbol=void 0;switch(expression['__symbolic']){case'binop':var left=simplify(expression['left']);if(shouldIgnore(left))return left;var right=simplify(expression['right']);if(shouldIgnore(right))return right;switch(expression['operator']){case'&&':return left&&right;case'||':return left||right;case'|':return left|right;case'^':return left^right;case'&':return left&right;case'==':return left==right;case'!=':return left!=right;case'===':return left===right;case'!==':return left!==right;case'<':return left<right;case'>':return left>right;case'<=':return left<=right;case'>=':return left>=right;case'<<':return left<<right;case'>>':return left>>right;case'+':return left+right;case'-':return left-right;case'*':return left*right;case'/':return left/right;case'%':return left%right;}return null;case'if':var condition=simplify(expression['condition']);return condition?simplify(expression['thenExpression']):simplify(expression['elseExpression']);case'pre':var operand=simplify(expression['operand']);if(shouldIgnore(operand))return operand;switch(expression['operator']){case'+':return operand;case'-':return-operand;case'!':return!operand;case'~':return~operand;}return null;case'index':var indexTarget=simplifyEagerly(expression['expression']);var index=simplifyEagerly(expression['index']);if(indexTarget&&isPrimitive(index))return indexTarget[index];return null;case'select':var member=expression['member'];var selectContext=context;var selectTarget=simplify(expression['expression']);if(selectTarget instanceof StaticSymbol){var members=selectTarget.members.concat(member);selectContext=self.getStaticSymbol(selectTarget.filePath,selectTarget.name,members);var declarationValue=resolveReferenceValue(selectContext);if(declarationValue!=null){return simplifyNested(selectContext,declarationValue);}else{return selectContext;}}if(selectTarget&&isPrimitive(member))return simplifyNested(selectContext,selectTarget[member]);return null;case'reference':// Note: This only has to deal with variable references, as symbol references have
// been converted into 'resolved'
// in the StaticSymbolResolver.
var name_2=expression['name'];var localValue=scope.resolve(name_2);if(localValue!=BindingScope$1.missing){return localValue;}break;case'resolved':try{return simplify(expression.symbol);}catch(e){// If an error is reported evaluating the symbol record the position of the
// reference in the error so it can
// be reported in the error message generated from the exception.
if(isMetadataError(e)&&expression.fileName!=null&&expression.line!=null&&expression.character!=null){e.position={fileName:expression.fileName,line:expression.line,column:expression.character};}throw e;}case'class':return context;case'function':return context;case'new':case'call':// Determine if the function is a built-in conversion
staticSymbol=simplifyInContext(context,expression['expression'],depth+1,/* references */0);if(staticSymbol instanceof StaticSymbol){if(staticSymbol===self.injectionToken||staticSymbol===self.opaqueToken){// if somebody calls new InjectionToken, don't create an InjectionToken,
// but rather return the symbol to which the InjectionToken is assigned to.
// OpaqueToken is supported too as it is required by the language service to
// support v4 and prior versions of Angular.
return context;}var argExpressions=expression['arguments']||[];var converter=self.conversionMap.get(staticSymbol);if(converter){var args=argExpressions.map(function(arg){return simplifyNested(context,arg);}).map(function(arg){return shouldIgnore(arg)?undefined:arg;});return converter(context,args);}else{// Determine if the function is one we can simplify.
var targetFunction=resolveReferenceValue(staticSymbol);return simplifyCall(staticSymbol,targetFunction,argExpressions,expression['expression']);}}return IGNORE;case'error':var message=expression.message;if(expression['line']!=null){self.error({message:message,context:expression.context,value:expression,position:{fileName:expression['fileName'],line:expression['line'],column:expression['character']}},context);}else{self.error({message:message,context:expression.context},context);}return IGNORE;case'ignore':return expression;}return null;}return mapStringMap(expression,function(value,name){if(REFERENCE_SET.has(name)){if(name===USE_VALUE&&PROVIDE in expression){// If this is a provider expression, check for special tokens that need the value
// during analysis.
var provide=simplify(expression.provide);if(provide===self.ROUTES||provide==self.ANALYZE_FOR_ENTRY_COMPONENTS){return simplify(value);}}return simplifyLazily(value);}return simplify(value);});}return IGNORE;}return simplify(value);}var result;try{result=simplifyInContext(context,value,0,lazy?1:0);}catch(e){if(this.errorRecorder){this.reportError(e,context);}else{throw formatMetadataError(e,context);}}if(shouldIgnore(result)){return undefined;}return result;};StaticReflector.prototype.getTypeMetadata=function(type){var resolvedSymbol=this.symbolResolver.resolveSymbol(type);return resolvedSymbol&&resolvedSymbol.metadata?resolvedSymbol.metadata:{__symbolic:'class'};};StaticReflector.prototype.reportError=function(error$$1,context,path){if(this.errorRecorder){this.errorRecorder(formatMetadataError(error$$1,context),context&&context.filePath||path);}else{throw error$$1;}};StaticReflector.prototype.error=function(_a,reportingContext){var message=_a.message,summary=_a.summary,advise=_a.advise,position=_a.position,context=_a.context,value=_a.value,symbol=_a.symbol,chain=_a.chain;this.reportError(metadataError(message,summary,advise,position,symbol,context,chain),reportingContext);};return StaticReflector;}();var METADATA_ERROR='ngMetadataError';function metadataError(message,summary,advise,position,symbol,context,chain){var error$$1=syntaxError(message);error$$1[METADATA_ERROR]=true;if(advise)error$$1.advise=advise;if(position)error$$1.position=position;if(summary)error$$1.summary=summary;if(context)error$$1.context=context;if(chain)error$$1.chain=chain;if(symbol)error$$1.symbol=symbol;return error$$1;}function isMetadataError(error$$1){return!!error$$1[METADATA_ERROR];}var REFERENCE_TO_NONEXPORTED_CLASS='Reference to non-exported class';var VARIABLE_NOT_INITIALIZED='Variable not initialized';var DESTRUCTURE_NOT_SUPPORTED='Destructuring not supported';var COULD_NOT_RESOLVE_TYPE='Could not resolve type';var FUNCTION_CALL_NOT_SUPPORTED='Function call not supported';var REFERENCE_TO_LOCAL_SYMBOL='Reference to a local symbol';var LAMBDA_NOT_SUPPORTED='Lambda not supported';function expandedMessage(message,context){switch(message){case REFERENCE_TO_NONEXPORTED_CLASS:if(context&&context.className){return"References to a non-exported class are not supported in decorators but "+context.className+" was referenced.";}break;case VARIABLE_NOT_INITIALIZED:return'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';case DESTRUCTURE_NOT_SUPPORTED:return'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';case COULD_NOT_RESOLVE_TYPE:if(context&&context.typeName){return"Could not resolve type "+context.typeName;}break;case FUNCTION_CALL_NOT_SUPPORTED:if(context&&context.name){return"Function calls are not supported in decorators but '"+context.name+"' was called";}return'Function calls are not supported in decorators';case REFERENCE_TO_LOCAL_SYMBOL:if(context&&context.name){return"Reference to a local (non-exported) symbols are not supported in decorators but '"+context.name+"' was referenced";}break;case LAMBDA_NOT_SUPPORTED:return"Function expressions are not supported in decorators";}return message;}function messageAdvise(message,context){switch(message){case REFERENCE_TO_NONEXPORTED_CLASS:if(context&&context.className){return"Consider exporting '"+context.className+"'";}break;case DESTRUCTURE_NOT_SUPPORTED:return'Consider simplifying to avoid destructuring';case REFERENCE_TO_LOCAL_SYMBOL:if(context&&context.name){return"Consider exporting '"+context.name+"'";}break;case LAMBDA_NOT_SUPPORTED:return"Consider changing the function expression into an exported function";}return undefined;}function errorSummary(error$$1){if(error$$1.summary){return error$$1.summary;}switch(error$$1.message){case REFERENCE_TO_NONEXPORTED_CLASS:if(error$$1.context&&error$$1.context.className){return"references non-exported class "+error$$1.context.className;}break;case VARIABLE_NOT_INITIALIZED:return'is not initialized';case DESTRUCTURE_NOT_SUPPORTED:return'is a destructured variable';case COULD_NOT_RESOLVE_TYPE:return'could not be resolved';case FUNCTION_CALL_NOT_SUPPORTED:if(error$$1.context&&error$$1.context.name){return"calls '"+error$$1.context.name+"'";}return"calls a function";case REFERENCE_TO_LOCAL_SYMBOL:if(error$$1.context&&error$$1.context.name){return"references local variable "+error$$1.context.name;}return"references a local variable";}return'contains the error';}function mapStringMap(input,transform){if(!input)return{};var result={};Object.keys(input).forEach(function(key){var value=transform(input[key],key);if(!shouldIgnore(value)){if(HIDDEN_KEY.test(key)){Object.defineProperty(result,key,{enumerable:false,configurable:true,value:value});}else{result[key]=value;}}});return result;}function isPrimitive(o){return o===null||typeof o!=='function'&&_typeof(o)!=='object';}var BindingScope$1=/** @class */function(){function BindingScope(){}BindingScope.build=function(){var current=new Map();return{define:function define(name,value){current.set(name,value);return this;},done:function done(){return current.size>0?new PopulatedScope(current):BindingScope.empty;}};};BindingScope.missing={};BindingScope.empty={resolve:function resolve(name){return BindingScope.missing;}};return BindingScope;}();var PopulatedScope=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PopulatedScope,_super);function PopulatedScope(bindings){var _this=_super.call(this)||this;_this.bindings=bindings;return _this;}PopulatedScope.prototype.resolve=function(name){return this.bindings.has(name)?this.bindings.get(name):BindingScope$1.missing;};return PopulatedScope;}(BindingScope$1);function formatMetadataMessageChain(chain,advise){var expanded=expandedMessage(chain.message,chain.context);var nesting=chain.symbol?" in '"+chain.symbol.name+"'":'';var message=""+expanded+nesting;var position=chain.position;var next=chain.next?formatMetadataMessageChain(chain.next,advise):advise?{message:advise}:undefined;return{message:message,position:position,next:next};}function formatMetadataError(e,context){if(isMetadataError(e)){// Produce a formatted version of the and leaving enough information in the original error
// to recover the formatting information to eventually produce a diagnostic error message.
var position=e.position;var chain={message:"Error during template compile of '"+context.name+"'",position:position,next:{message:e.message,next:e.chain,context:e.context,symbol:e.symbol}};var advise=e.advise||messageAdvise(e.message,e.context);return formattedError(formatMetadataMessageChain(chain,advise));}return e;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AotSummaryResolver=/** @class */function(){function AotSummaryResolver(host,staticSymbolCache){this.host=host;this.staticSymbolCache=staticSymbolCache;// Note: this will only contain StaticSymbols without members!
this.summaryCache=new Map();this.loadedFilePaths=new Map();// Note: this will only contain StaticSymbols without members!
this.importAs=new Map();this.knownFileNameToModuleNames=new Map();}AotSummaryResolver.prototype.isLibraryFile=function(filePath){// Note: We need to strip the .ngfactory. file path,
// so this method also works for generated files
// (for which host.isSourceFile will always return false).
return!this.host.isSourceFile(stripGeneratedFileSuffix(filePath));};AotSummaryResolver.prototype.toSummaryFileName=function(filePath,referringSrcFileName){return this.host.toSummaryFileName(filePath,referringSrcFileName);};AotSummaryResolver.prototype.fromSummaryFileName=function(fileName,referringLibFileName){return this.host.fromSummaryFileName(fileName,referringLibFileName);};AotSummaryResolver.prototype.resolveSummary=function(staticSymbol){var rootSymbol=staticSymbol.members.length?this.staticSymbolCache.get(staticSymbol.filePath,staticSymbol.name):staticSymbol;var summary=this.summaryCache.get(rootSymbol);if(!summary){this._loadSummaryFile(staticSymbol.filePath);summary=this.summaryCache.get(staticSymbol);}return rootSymbol===staticSymbol&&summary||null;};AotSummaryResolver.prototype.getSymbolsOf=function(filePath){if(this._loadSummaryFile(filePath)){return Array.from(this.summaryCache.keys()).filter(function(symbol){return symbol.filePath===filePath;});}return null;};AotSummaryResolver.prototype.getImportAs=function(staticSymbol){staticSymbol.assertNoMembers();return this.importAs.get(staticSymbol);};/**
     * Converts a file path to a module name that can be used as an `import`.
     */AotSummaryResolver.prototype.getKnownModuleName=function(importedFilePath){return this.knownFileNameToModuleNames.get(importedFilePath)||null;};AotSummaryResolver.prototype.addSummary=function(summary){this.summaryCache.set(summary.symbol,summary);};AotSummaryResolver.prototype._loadSummaryFile=function(filePath){var _this=this;var hasSummary=this.loadedFilePaths.get(filePath);if(hasSummary!=null){return hasSummary;}var json=null;if(this.isLibraryFile(filePath)){var summaryFilePath=summaryFileName(filePath);try{json=this.host.loadSummary(summaryFilePath);}catch(e){console.error("Error loading summary file "+summaryFilePath);throw e;}}hasSummary=json!=null;this.loadedFilePaths.set(filePath,hasSummary);if(json){var _a=deserializeSummaries(this.staticSymbolCache,this,filePath,json),moduleName=_a.moduleName,summaries=_a.summaries,importAs=_a.importAs;summaries.forEach(function(summary){return _this.summaryCache.set(summary.symbol,summary);});if(moduleName){this.knownFileNameToModuleNames.set(filePath,moduleName);}importAs.forEach(function(importAs){_this.importAs.set(importAs.symbol,importAs.importAs);});}return hasSummary;};return AotSummaryResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function createAotUrlResolver(host){return{resolve:function resolve(basePath,url){var filePath=host.resourceNameToFileName(url,basePath);if(!filePath){throw syntaxError("Couldn't resolve resource "+url+" from "+basePath);}return filePath;}};}/**
 * Creates a new AotCompiler based on options and a host.
 */function createAotCompiler(compilerHost,options,errorCollector){var translations=options.translations||'';var urlResolver=createAotUrlResolver(compilerHost);var symbolCache=new StaticSymbolCache();var summaryResolver=new AotSummaryResolver(compilerHost,symbolCache);var symbolResolver=new StaticSymbolResolver(compilerHost,symbolCache,summaryResolver);var staticReflector=new StaticReflector(summaryResolver,symbolResolver,[],[],errorCollector);var htmlParser;if(!!options.enableIvy){// Ivy handles i18n at the compiler level so we must use a regular parser
htmlParser=new HtmlParser();}else{htmlParser=new I18NHtmlParser(new HtmlParser(),translations,options.i18nFormat,options.missingTranslation,console);}var config=new CompilerConfig({defaultEncapsulation:ViewEncapsulation.Emulated,useJit:false,missingTranslation:options.missingTranslation,preserveWhitespaces:options.preserveWhitespaces,strictInjectionParameters:options.strictInjectionParameters});var normalizer=new DirectiveNormalizer({get:function get(url){return compilerHost.loadResource(url);}},urlResolver,htmlParser,config);var expressionParser=new Parser(new Lexer());var elementSchemaRegistry=new DomElementSchemaRegistry();var tmplParser=new TemplateParser(config,staticReflector,expressionParser,elementSchemaRegistry,htmlParser,console,[]);var resolver=new CompileMetadataResolver(config,htmlParser,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,console,symbolCache,staticReflector,errorCollector);// TODO(vicb): do not pass options.i18nFormat here
var viewCompiler=new ViewCompiler(staticReflector);var typeCheckCompiler=new TypeCheckCompiler(options,staticReflector);var compiler=new AotCompiler(config,options,compilerHost,staticReflector,resolver,tmplParser,new StyleCompiler(urlResolver),viewCompiler,typeCheckCompiler,new NgModuleCompiler(staticReflector),new InjectableCompiler(staticReflector,!!options.enableIvy),new TypeScriptEmitter(),summaryResolver,symbolResolver);return{compiler:compiler,reflector:staticReflector};}var SummaryResolver=/** @class */function(){function SummaryResolver(){}return SummaryResolver;}();var JitSummaryResolver=/** @class */function(){function JitSummaryResolver(){this._summaries=new Map();}JitSummaryResolver.prototype.isLibraryFile=function(){return false;};JitSummaryResolver.prototype.toSummaryFileName=function(fileName){return fileName;};JitSummaryResolver.prototype.fromSummaryFileName=function(fileName){return fileName;};JitSummaryResolver.prototype.resolveSummary=function(reference){return this._summaries.get(reference)||null;};JitSummaryResolver.prototype.getSymbolsOf=function(){return[];};JitSummaryResolver.prototype.getImportAs=function(reference){return reference;};JitSummaryResolver.prototype.getKnownModuleName=function(fileName){return null;};JitSummaryResolver.prototype.addSummary=function(summary){this._summaries.set(summary.symbol,summary);};return JitSummaryResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function interpretStatements(statements,reflector){var ctx=new _ExecutionContext(null,null,null,new Map());var visitor=new StatementInterpreter(reflector);visitor.visitAllStatements(statements,ctx);var result={};ctx.exports.forEach(function(exportName){result[exportName]=ctx.vars.get(exportName);});return result;}function _executeFunctionStatements(varNames,varValues,statements,ctx,visitor){var childCtx=ctx.createChildWihtLocalVars();for(var i=0;i<varNames.length;i++){childCtx.vars.set(varNames[i],varValues[i]);}var result=visitor.visitAllStatements(statements,childCtx);return result?result.value:null;}var _ExecutionContext=/** @class */function(){function _ExecutionContext(parent,instance,className,vars){this.parent=parent;this.instance=instance;this.className=className;this.vars=vars;this.exports=[];}_ExecutionContext.prototype.createChildWihtLocalVars=function(){return new _ExecutionContext(this,this.instance,this.className,new Map());};return _ExecutionContext;}();var ReturnValue=/** @class */function(){function ReturnValue(value){this.value=value;}return ReturnValue;}();function createDynamicClass(_classStmt,_ctx,_visitor){var propertyDescriptors={};_classStmt.getters.forEach(function(getter){// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[getter.name]={configurable:false,get:function get(){var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);return _executeFunctionStatements([],[],getter.body,instanceCtx,_visitor);}};});_classStmt.methods.forEach(function(method){var paramNames=method.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[method.name]={writable:false,configurable:false,value:function value(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);return _executeFunctionStatements(paramNames,args,method.body,instanceCtx,_visitor);}};});var ctorParamNames=_classStmt.constructorMethod.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
var ctor=function ctor(){var _this=this;var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);_classStmt.fields.forEach(function(field){_this[field.name]=undefined;});_executeFunctionStatements(ctorParamNames,args,_classStmt.constructorMethod.body,instanceCtx,_visitor);};var superClass=_classStmt.parent?_classStmt.parent.visitExpression(_visitor,_ctx):Object;ctor.prototype=Object.create(superClass.prototype,propertyDescriptors);return ctor;}var StatementInterpreter=/** @class */function(){function StatementInterpreter(reflector){this.reflector=reflector;}StatementInterpreter.prototype.debugAst=function(ast){return debugOutputAstAsTypeScript(ast);};StatementInterpreter.prototype.visitDeclareVarStmt=function(stmt,ctx){var initialValue=stmt.value?stmt.value.visitExpression(this,ctx):undefined;ctx.vars.set(stmt.name,initialValue);if(stmt.hasModifier(StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitWriteVarExpr=function(expr,ctx){var value=expr.value.visitExpression(this,ctx);var currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(expr.name)){currCtx.vars.set(expr.name,value);return value;}currCtx=currCtx.parent;}throw new Error("Not declared variable "+expr.name);};StatementInterpreter.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Cannot interpret a WrappedNodeExpr.');};StatementInterpreter.prototype.visitTypeofExpr=function(ast,ctx){throw new Error('Cannot interpret a TypeofExpr');};StatementInterpreter.prototype.visitReadVarExpr=function(ast,ctx){var varName=ast.name;if(ast.builtin!=null){switch(ast.builtin){case BuiltinVar.Super:return ctx.instance.__proto__;case BuiltinVar.This:return ctx.instance;case BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$2;break;case BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$2;break;default:throw new Error("Unknown builtin variable "+ast.builtin);}}var currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(varName)){return currCtx.vars.get(varName);}currCtx=currCtx.parent;}throw new Error("Not declared variable "+varName);};StatementInterpreter.prototype.visitWriteKeyExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var index=expr.index.visitExpression(this,ctx);var value=expr.value.visitExpression(this,ctx);receiver[index]=value;return value;};StatementInterpreter.prototype.visitWritePropExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var value=expr.value.visitExpression(this,ctx);receiver[expr.name]=value;return value;};StatementInterpreter.prototype.visitInvokeMethodExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var args=this.visitAllExpressions(expr.args,ctx);var result;if(expr.builtin!=null){switch(expr.builtin){case BuiltinMethod.ConcatArray:result=receiver.concat.apply(receiver,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));break;case BuiltinMethod.SubscribeObservable:result=receiver.subscribe({next:args[0]});break;case BuiltinMethod.Bind:result=receiver.bind.apply(receiver,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));break;default:throw new Error("Unknown builtin method "+expr.builtin);}}else{result=receiver[expr.name].apply(receiver,args);}return result;};StatementInterpreter.prototype.visitInvokeFunctionExpr=function(stmt,ctx){var args=this.visitAllExpressions(stmt.args,ctx);var fnExpr=stmt.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===BuiltinVar.Super){ctx.instance.constructor.prototype.constructor.apply(ctx.instance,args);return null;}else{var fn$$1=stmt.fn.visitExpression(this,ctx);return fn$$1.apply(null,args);}};StatementInterpreter.prototype.visitReturnStmt=function(stmt,ctx){return new ReturnValue(stmt.value.visitExpression(this,ctx));};StatementInterpreter.prototype.visitDeclareClassStmt=function(stmt,ctx){var clazz=createDynamicClass(stmt,ctx,this);ctx.vars.set(stmt.name,clazz);if(stmt.hasModifier(StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitExpressionStmt=function(stmt,ctx){return stmt.expr.visitExpression(this,ctx);};StatementInterpreter.prototype.visitIfStmt=function(stmt,ctx){var condition=stmt.condition.visitExpression(this,ctx);if(condition){return this.visitAllStatements(stmt.trueCase,ctx);}else if(stmt.falseCase!=null){return this.visitAllStatements(stmt.falseCase,ctx);}return null;};StatementInterpreter.prototype.visitTryCatchStmt=function(stmt,ctx){try{return this.visitAllStatements(stmt.bodyStmts,ctx);}catch(e){var childCtx=ctx.createChildWihtLocalVars();childCtx.vars.set(CATCH_ERROR_VAR$2,e);childCtx.vars.set(CATCH_STACK_VAR$2,e.stack);return this.visitAllStatements(stmt.catchStmts,childCtx);}};StatementInterpreter.prototype.visitThrowStmt=function(stmt,ctx){throw stmt.error.visitExpression(this,ctx);};StatementInterpreter.prototype.visitCommentStmt=function(stmt,context){return null;};StatementInterpreter.prototype.visitJSDocCommentStmt=function(stmt,context){return null;};StatementInterpreter.prototype.visitInstantiateExpr=function(ast,ctx){var args=this.visitAllExpressions(ast.args,ctx);var clazz=ast.classExpr.visitExpression(this,ctx);return new(clazz.bind.apply(clazz,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],args)))();};StatementInterpreter.prototype.visitLiteralExpr=function(ast,ctx){return ast.value;};StatementInterpreter.prototype.visitExternalExpr=function(ast,ctx){return this.reflector.resolveExternalReference(ast.value);};StatementInterpreter.prototype.visitConditionalExpr=function(ast,ctx){if(ast.condition.visitExpression(this,ctx)){return ast.trueCase.visitExpression(this,ctx);}else if(ast.falseCase!=null){return ast.falseCase.visitExpression(this,ctx);}return null;};StatementInterpreter.prototype.visitNotExpr=function(ast,ctx){return!ast.condition.visitExpression(this,ctx);};StatementInterpreter.prototype.visitAssertNotNullExpr=function(ast,ctx){return ast.condition.visitExpression(this,ctx);};StatementInterpreter.prototype.visitCastExpr=function(ast,ctx){return ast.value.visitExpression(this,ctx);};StatementInterpreter.prototype.visitFunctionExpr=function(ast,ctx){var paramNames=ast.params.map(function(param){return param.name;});return _declareFn(paramNames,ast.statements,ctx,this);};StatementInterpreter.prototype.visitDeclareFunctionStmt=function(stmt,ctx){var paramNames=stmt.params.map(function(param){return param.name;});ctx.vars.set(stmt.name,_declareFn(paramNames,stmt.statements,ctx,this));if(stmt.hasModifier(StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitBinaryOperatorExpr=function(ast,ctx){var _this=this;var lhs=function lhs(){return ast.lhs.visitExpression(_this,ctx);};var rhs=function rhs(){return ast.rhs.visitExpression(_this,ctx);};switch(ast.operator){case BinaryOperator.Equals:return lhs()==rhs();case BinaryOperator.Identical:return lhs()===rhs();case BinaryOperator.NotEquals:return lhs()!=rhs();case BinaryOperator.NotIdentical:return lhs()!==rhs();case BinaryOperator.And:return lhs()&&rhs();case BinaryOperator.Or:return lhs()||rhs();case BinaryOperator.Plus:return lhs()+rhs();case BinaryOperator.Minus:return lhs()-rhs();case BinaryOperator.Divide:return lhs()/rhs();case BinaryOperator.Multiply:return lhs()*rhs();case BinaryOperator.Modulo:return lhs()%rhs();case BinaryOperator.Lower:return lhs()<rhs();case BinaryOperator.LowerEquals:return lhs()<=rhs();case BinaryOperator.Bigger:return lhs()>rhs();case BinaryOperator.BiggerEquals:return lhs()>=rhs();default:throw new Error("Unknown operator "+ast.operator);}};StatementInterpreter.prototype.visitReadPropExpr=function(ast,ctx){var result;var receiver=ast.receiver.visitExpression(this,ctx);result=receiver[ast.name];return result;};StatementInterpreter.prototype.visitReadKeyExpr=function(ast,ctx){var receiver=ast.receiver.visitExpression(this,ctx);var prop=ast.index.visitExpression(this,ctx);return receiver[prop];};StatementInterpreter.prototype.visitLiteralArrayExpr=function(ast,ctx){return this.visitAllExpressions(ast.entries,ctx);};StatementInterpreter.prototype.visitLiteralMapExpr=function(ast,ctx){var _this=this;var result={};ast.entries.forEach(function(entry){return result[entry.key]=entry.value.visitExpression(_this,ctx);});return result;};StatementInterpreter.prototype.visitCommaExpr=function(ast,context){var values=this.visitAllExpressions(ast.parts,context);return values[values.length-1];};StatementInterpreter.prototype.visitAllExpressions=function(expressions,ctx){var _this=this;return expressions.map(function(expr){return expr.visitExpression(_this,ctx);});};StatementInterpreter.prototype.visitAllStatements=function(statements,ctx){for(var i=0;i<statements.length;i++){var stmt=statements[i];var val=stmt.visitStatement(this,ctx);if(val instanceof ReturnValue){return val;}}return null;};return StatementInterpreter;}();function _declareFn(varNames,statements,ctx,visitor){return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return _executeFunctionStatements(varNames,args,statements,ctx,visitor);};}var CATCH_ERROR_VAR$2='error';var CATCH_STACK_VAR$2='stack';/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AbstractJsEmitterVisitor=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AbstractJsEmitterVisitor,_super);function AbstractJsEmitterVisitor(){return _super.call(this,false)||this;}AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){var _this=this;ctx.pushClass(stmt);this._visitClassConstructor(stmt,ctx);if(stmt.parent!=null){ctx.print(stmt,stmt.name+".prototype = Object.create(");stmt.parent.visitExpression(this,ctx);ctx.println(stmt,".prototype);");}stmt.getters.forEach(function(getter){return _this._visitClassGetter(stmt,getter,ctx);});stmt.methods.forEach(function(method){return _this._visitClassMethod(stmt,method,ctx);});ctx.popClass();return null;};AbstractJsEmitterVisitor.prototype._visitClassConstructor=function(stmt,ctx){ctx.print(stmt,"function "+stmt.name+"(");if(stmt.constructorMethod!=null){this._visitParams(stmt.constructorMethod.params,ctx);}ctx.println(stmt,") {");ctx.incIndent();if(stmt.constructorMethod!=null){if(stmt.constructorMethod.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(stmt.constructorMethod.body,ctx);}}ctx.decIndent();ctx.println(stmt,"}");};AbstractJsEmitterVisitor.prototype._visitClassGetter=function(stmt,getter,ctx){ctx.println(stmt,"Object.defineProperty("+stmt.name+".prototype, '"+getter.name+"', { get: function() {");ctx.incIndent();if(getter.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(getter.body,ctx);}ctx.decIndent();ctx.println(stmt,"}});");};AbstractJsEmitterVisitor.prototype._visitClassMethod=function(stmt,method,ctx){ctx.print(stmt,stmt.name+".prototype."+method.name+" = function(");this._visitParams(method.params,ctx);ctx.println(stmt,") {");ctx.incIndent();if(method.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(method.body,ctx);}ctx.decIndent();ctx.println(stmt,"};");};AbstractJsEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');};AbstractJsEmitterVisitor.prototype.visitReadVarExpr=function(ast,ctx){if(ast.builtin===BuiltinVar.This){ctx.print(ast,'self');}else if(ast.builtin===BuiltinVar.Super){throw new Error("'super' needs to be handled at a parent ast node, not at the variable level!");}else{_super.prototype.visitReadVarExpr.call(this,ast,ctx);}return null;};AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){ctx.print(stmt,"var "+stmt.name);if(stmt.value){ctx.print(stmt,' = ');stmt.value.visitExpression(this,ctx);}ctx.println(stmt,";");return null;};AbstractJsEmitterVisitor.prototype.visitCastExpr=function(ast,ctx){ast.value.visitExpression(this,ctx);return null;};AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr=function(expr,ctx){var fnExpr=expr.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===BuiltinVar.Super){ctx.currentClass.parent.visitExpression(this,ctx);ctx.print(expr,".call(this");if(expr.args.length>0){ctx.print(expr,", ");this.visitAllExpressions(expr.args,ctx,',');}ctx.print(expr,")");}else{_super.prototype.visitInvokeFunctionExpr.call(this,expr,ctx);}return null;};AbstractJsEmitterVisitor.prototype.visitFunctionExpr=function(ast,ctx){ctx.print(ast,"function"+(ast.name?' '+ast.name:'')+"(");this._visitParams(ast.params,ctx);ctx.println(ast,") {");ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,"}");return null;};AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){ctx.print(stmt,"function "+stmt.name+"(");this._visitParams(stmt.params,ctx);ctx.println(stmt,") {");ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};AbstractJsEmitterVisitor.prototype.visitTryCatchStmt=function(stmt,ctx){ctx.println(stmt,"try {");ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,"} catch ("+CATCH_ERROR_VAR$1.name+") {");ctx.incIndent();var catchStmts=[CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null,[StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};AbstractJsEmitterVisitor.prototype._visitParams=function(params,ctx){this.visitAllObjects(function(param){return ctx.print(null,param.name);},params,ctx,',');};AbstractJsEmitterVisitor.prototype.getBuiltinMethodName=function(method){var name;switch(method){case BuiltinMethod.ConcatArray:name='concat';break;case BuiltinMethod.SubscribeObservable:name='subscribe';break;case BuiltinMethod.Bind:name='bind';break;default:throw new Error("Unknown builtin method: "+method);}return name;};return AbstractJsEmitterVisitor;}(AbstractEmitterVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function evalExpression(sourceUrl,ctx,vars,createSourceMap){var fnBody=ctx.toSource()+"\n//# sourceURL="+sourceUrl;var fnArgNames=[];var fnArgValues=[];for(var argName in vars){fnArgNames.push(argName);fnArgValues.push(vars[argName]);}if(createSourceMap){// using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise
// E.g. ```
// function anonymous(a,b,c
// /**/) { ... }```
// We don't want to hard code this fact, so we auto detect it via an empty function first.
var emptyFn=new(Function.bind.apply(Function,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],fnArgNames.concat('return null;'))))().toString();var headerLines=emptyFn.slice(0,emptyFn.indexOf('return null;')).split('\n').length-1;fnBody+="\n"+ctx.toSourceMapGenerator(sourceUrl,headerLines).toJsComment();}return new(Function.bind.apply(Function,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([void 0],fnArgNames.concat(fnBody))))().apply(void 0,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(fnArgValues));}function jitStatements(sourceUrl,statements,reflector,createSourceMaps){var converter=new JitEmitterVisitor(reflector);var ctx=EmitterVisitorContext.createRoot();converter.visitAllStatements(statements,ctx);converter.createReturnStmt(ctx);return evalExpression(sourceUrl,ctx,converter.getArgs(),createSourceMaps);}var JitEmitterVisitor=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(JitEmitterVisitor,_super);function JitEmitterVisitor(reflector){var _this=_super.call(this)||this;_this.reflector=reflector;_this._evalArgNames=[];_this._evalArgValues=[];_this._evalExportedVars=[];return _this;}JitEmitterVisitor.prototype.createReturnStmt=function(ctx){var stmt=new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function(resultVar){return new LiteralMapEntry(resultVar,variable(resultVar),false);})));stmt.visitStatement(this,ctx);};JitEmitterVisitor.prototype.getArgs=function(){var result={};for(var i=0;i<this._evalArgNames.length;i++){result[this._evalArgNames[i]]=this._evalArgValues[i];}return result;};JitEmitterVisitor.prototype.visitExternalExpr=function(ast,ctx){this._emitReferenceToExternal(ast,this.reflector.resolveExternalReference(ast.value),ctx);return null;};JitEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){this._emitReferenceToExternal(ast,ast.node,ctx);return null;};JitEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareVarStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareFunctionStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareClassStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype._emitReferenceToExternal=function(ast,value,ctx){var id=this._evalArgValues.indexOf(value);if(id===-1){id=this._evalArgValues.length;this._evalArgValues.push(value);var name_1=identifierName({reference:value})||'val';this._evalArgNames.push("jit_"+name_1+"_"+id);}ctx.print(ast,this._evalArgNames[id]);};return JitEmitterVisitor;}(AbstractJsEmitterVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An internal module of the Angular compiler that begins with component types,
 * extracts templates, and eventually produces a compiled version of the component
 * ready for linking into an application.
 *
 * @security  When compiling templates at runtime, you must ensure that the entire template comes
 * from a trusted source. Attacker-controlled data introduced by a template could expose your
 * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).
 */var JitCompiler=/** @class */function(){function JitCompiler(_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_ngModuleCompiler,_summaryResolver,_reflector,_compilerConfig,_console,getExtraNgModuleProviders){this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._summaryResolver=_summaryResolver;this._reflector=_reflector;this._compilerConfig=_compilerConfig;this._console=_console;this.getExtraNgModuleProviders=getExtraNgModuleProviders;this._compiledTemplateCache=new Map();this._compiledHostTemplateCache=new Map();this._compiledDirectiveWrapperCache=new Map();this._compiledNgModuleCache=new Map();this._sharedStylesheetCount=0;this._addedAotSummaries=new Set();}JitCompiler.prototype.compileModuleSync=function(moduleType){return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType,true));};JitCompiler.prototype.compileModuleAsync=function(moduleType){return Promise.resolve(this._compileModuleAndComponents(moduleType,false));};JitCompiler.prototype.compileModuleAndAllComponentsSync=function(moduleType){return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType,true));};JitCompiler.prototype.compileModuleAndAllComponentsAsync=function(moduleType){return Promise.resolve(this._compileModuleAndAllComponents(moduleType,false));};JitCompiler.prototype.getComponentFactory=function(component){var summary=this._metadataResolver.getDirectiveSummary(component);return summary.componentFactory;};JitCompiler.prototype.loadAotSummaries=function(summaries){this.clearCache();this._addAotSummaries(summaries);};JitCompiler.prototype._addAotSummaries=function(fn$$1){if(this._addedAotSummaries.has(fn$$1)){return;}this._addedAotSummaries.add(fn$$1);var summaries=fn$$1();for(var i=0;i<summaries.length;i++){var entry=summaries[i];if(typeof entry==='function'){this._addAotSummaries(entry);}else{var summary=entry;this._summaryResolver.addSummary({symbol:summary.type.reference,metadata:null,type:summary});}}};JitCompiler.prototype.hasAotSummary=function(ref){return!!this._summaryResolver.resolveSummary(ref);};JitCompiler.prototype._filterJitIdentifiers=function(ids){var _this=this;return ids.map(function(mod){return mod.reference;}).filter(function(ref){return!_this.hasAotSummary(ref);});};JitCompiler.prototype._compileModuleAndComponents=function(moduleType,isSync){var _this=this;return SyncAsync.then(this._loadModules(moduleType,isSync),function(){_this._compileComponents(moduleType,null);return _this._compileModule(moduleType);});};JitCompiler.prototype._compileModuleAndAllComponents=function(moduleType,isSync){var _this=this;return SyncAsync.then(this._loadModules(moduleType,isSync),function(){var componentFactories=[];_this._compileComponents(moduleType,componentFactories);return{ngModuleFactory:_this._compileModule(moduleType),componentFactories:componentFactories};});};JitCompiler.prototype._loadModules=function(mainModule,isSync){var _this=this;var loading=[];var mainNgModule=this._metadataResolver.getNgModuleMetadata(mainModule);// Note: for runtime compilation, we want to transitively compile all modules,
// so we also need to load the declared directives / pipes for all nested modules.
this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function(nestedNgModule){// getNgModuleMetadata only returns null if the value passed in is not an NgModule
var moduleMeta=_this._metadataResolver.getNgModuleMetadata(nestedNgModule);_this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function(ref){var promise=_this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference,ref,isSync);if(promise){loading.push(promise);}});_this._filterJitIdentifiers(moduleMeta.declaredPipes).forEach(function(ref){return _this._metadataResolver.getOrLoadPipeMetadata(ref);});});return SyncAsync.all(loading);};JitCompiler.prototype._compileModule=function(moduleType){var ngModuleFactory=this._compiledNgModuleCache.get(moduleType);if(!ngModuleFactory){var moduleMeta=this._metadataResolver.getNgModuleMetadata(moduleType);// Always provide a bound Compiler
var extraProviders=this.getExtraNgModuleProviders(moduleMeta.type.reference);var outputCtx=createOutputContext();var compileResult=this._ngModuleCompiler.compile(outputCtx,moduleMeta,extraProviders);ngModuleFactory=this._interpretOrJit(ngModuleJitUrl(moduleMeta),outputCtx.statements)[compileResult.ngModuleFactoryVar];this._compiledNgModuleCache.set(moduleMeta.type.reference,ngModuleFactory);}return ngModuleFactory;};/**
     * @internal
     */JitCompiler.prototype._compileComponents=function(mainModule,allComponentFactories){var _this=this;var ngModule=this._metadataResolver.getNgModuleMetadata(mainModule);var moduleByJitDirective=new Map();var templates=new Set();var transJitModules=this._filterJitIdentifiers(ngModule.transitiveModule.modules);transJitModules.forEach(function(localMod){var localModuleMeta=_this._metadataResolver.getNgModuleMetadata(localMod);_this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function(dirRef){moduleByJitDirective.set(dirRef,localModuleMeta);var dirMeta=_this._metadataResolver.getDirectiveMetadata(dirRef);if(dirMeta.isComponent){templates.add(_this._createCompiledTemplate(dirMeta,localModuleMeta));if(allComponentFactories){var template=_this._createCompiledHostTemplate(dirMeta.type.reference,localModuleMeta);templates.add(template);allComponentFactories.push(dirMeta.componentFactory);}}});});transJitModules.forEach(function(localMod){var localModuleMeta=_this._metadataResolver.getNgModuleMetadata(localMod);_this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function(dirRef){var dirMeta=_this._metadataResolver.getDirectiveMetadata(dirRef);if(dirMeta.isComponent){dirMeta.entryComponents.forEach(function(entryComponentType){var moduleMeta=moduleByJitDirective.get(entryComponentType.componentType);templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));});}});localModuleMeta.entryComponents.forEach(function(entryComponentType){if(!_this.hasAotSummary(entryComponentType.componentType)){var moduleMeta=moduleByJitDirective.get(entryComponentType.componentType);templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));}});});templates.forEach(function(template){return _this._compileTemplate(template);});};JitCompiler.prototype.clearCacheFor=function(type){this._compiledNgModuleCache.delete(type);this._metadataResolver.clearCacheFor(type);this._compiledHostTemplateCache.delete(type);var compiledTemplate=this._compiledTemplateCache.get(type);if(compiledTemplate){this._compiledTemplateCache.delete(type);}};JitCompiler.prototype.clearCache=function(){// Note: don't clear the _addedAotSummaries, as they don't change!
this._metadataResolver.clearCache();this._compiledTemplateCache.clear();this._compiledHostTemplateCache.clear();this._compiledNgModuleCache.clear();};JitCompiler.prototype._createCompiledHostTemplate=function(compType,ngModule){if(!ngModule){throw new Error("Component "+stringify(compType)+" is not part of any NgModule or the module has not been imported into your module.");}var compiledTemplate=this._compiledHostTemplateCache.get(compType);if(!compiledTemplate){var compMeta=this._metadataResolver.getDirectiveMetadata(compType);assertComponent(compMeta);var hostMeta=this._metadataResolver.getHostComponentMetadata(compMeta,compMeta.componentFactory.viewDefFactory);compiledTemplate=new CompiledTemplate(true,compMeta.type,hostMeta,ngModule,[compMeta.type]);this._compiledHostTemplateCache.set(compType,compiledTemplate);}return compiledTemplate;};JitCompiler.prototype._createCompiledTemplate=function(compMeta,ngModule){var compiledTemplate=this._compiledTemplateCache.get(compMeta.type.reference);if(!compiledTemplate){assertComponent(compMeta);compiledTemplate=new CompiledTemplate(false,compMeta.type,compMeta,ngModule,ngModule.transitiveModule.directives);this._compiledTemplateCache.set(compMeta.type.reference,compiledTemplate);}return compiledTemplate;};JitCompiler.prototype._compileTemplate=function(template){var _this=this;if(template.isCompiled){return;}var compMeta=template.compMeta;var externalStylesheetsByModuleUrl=new Map();var outputContext=createOutputContext();var componentStylesheet=this._styleCompiler.compileComponent(outputContext,compMeta);compMeta.template.externalStylesheets.forEach(function(stylesheetMeta){var compiledStylesheet=_this._styleCompiler.compileStyles(createOutputContext(),compMeta,stylesheetMeta);externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl,compiledStylesheet);});this._resolveStylesCompileResult(componentStylesheet,externalStylesheetsByModuleUrl);var pipes=template.ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});var _a=this._parseTemplate(compMeta,template.ngModule,template.directives),parsedTemplate=_a.template,usedPipes=_a.pipes;var compileResult=this._viewCompiler.compileComponent(outputContext,compMeta,parsedTemplate,variable(componentStylesheet.stylesVar),usedPipes);var evalResult=this._interpretOrJit(templateJitUrl(template.ngModule.type,template.compMeta),outputContext.statements);var viewClass=evalResult[compileResult.viewClassVar];var rendererType=evalResult[compileResult.rendererTypeVar];template.compiled(viewClass,rendererType);};JitCompiler.prototype._parseTemplate=function(compMeta,ngModule,directiveIdentifiers){var _this=this;// Note: ! is ok here as components always have a template.
var preserveWhitespaces=compMeta.template.preserveWhitespaces;var directives=directiveIdentifiers.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});var pipes=ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});return this._templateParser.parse(compMeta,compMeta.template.htmlAst,directives,pipes,ngModule.schemas,templateSourceUrl(ngModule.type,compMeta,compMeta.template),preserveWhitespaces);};JitCompiler.prototype._resolveStylesCompileResult=function(result,externalStylesheetsByModuleUrl){var _this=this;result.dependencies.forEach(function(dep,i){var nestedCompileResult=externalStylesheetsByModuleUrl.get(dep.moduleUrl);var nestedStylesArr=_this._resolveAndEvalStylesCompileResult(nestedCompileResult,externalStylesheetsByModuleUrl);dep.setValue(nestedStylesArr);});};JitCompiler.prototype._resolveAndEvalStylesCompileResult=function(result,externalStylesheetsByModuleUrl){this._resolveStylesCompileResult(result,externalStylesheetsByModuleUrl);return this._interpretOrJit(sharedStylesheetJitUrl(result.meta,this._sharedStylesheetCount++),result.outputCtx.statements)[result.stylesVar];};JitCompiler.prototype._interpretOrJit=function(sourceUrl,statements){if(!this._compilerConfig.useJit){return interpretStatements(statements,this._reflector);}else{return jitStatements(sourceUrl,statements,this._reflector,this._compilerConfig.jitDevMode);}};return JitCompiler;}();var CompiledTemplate=/** @class */function(){function CompiledTemplate(isHost,compType,compMeta,ngModule,directives){this.isHost=isHost;this.compType=compType;this.compMeta=compMeta;this.ngModule=ngModule;this.directives=directives;this._viewClass=null;this.isCompiled=false;}CompiledTemplate.prototype.compiled=function(viewClass,rendererType){this._viewClass=viewClass;this.compMeta.componentViewType.setDelegate(viewClass);for(var prop in rendererType){this.compMeta.rendererType[prop]=rendererType[prop];}this.isCompiled=true;};return CompiledTemplate;}();function assertComponent(meta){if(!meta.isComponent){throw new Error("Could not compile '"+identifierName(meta.type)+"' because it is not a component.");}}function createOutputContext(){var importExpr$$1=function importExpr$$1(symbol){return importExpr({name:identifierName(symbol),moduleName:null,runtime:symbol});};return{statements:[],genFilePath:'',importExpr:importExpr$$1,constantPool:new ConstantPool()};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Provides access to reflection data about symbols that the compiler needs.
 */var CompileReflector=/** @class */function(){function CompileReflector(){}return CompileReflector;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Create a {@link UrlResolver} with no package prefix.
 */function createUrlResolverWithoutPackagePrefix(){return new UrlResolver();}function createOfflineCompileUrlResolver(){return new UrlResolver('.');}var UrlResolver=/** @class */function(){function UrlResolverImpl(_packagePrefix){if(_packagePrefix===void 0){_packagePrefix=null;}this._packagePrefix=_packagePrefix;}/**
     * Resolves the `url` given the `baseUrl`:
     * - when the `url` is null, the `baseUrl` is returned,
     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of
     * `baseUrl` and `url`,
     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is
     * returned as is (ignoring the `baseUrl`)
     */UrlResolverImpl.prototype.resolve=function(baseUrl,url){var resolvedUrl=url;if(baseUrl!=null&&baseUrl.length>0){resolvedUrl=_resolveUrl(baseUrl,resolvedUrl);}var resolvedParts=_split(resolvedUrl);var prefix=this._packagePrefix;if(prefix!=null&&resolvedParts!=null&&resolvedParts[_ComponentIndex.Scheme]=='package'){var path=resolvedParts[_ComponentIndex.Path];prefix=prefix.replace(/\/+$/,'');path=path.replace(/^\/+/,'');return prefix+"/"+path;}return resolvedUrl;};return UrlResolverImpl;}();/**
 * Extract the scheme of a URL.
 */function getUrlScheme(url){var match=_split(url);return match&&match[_ComponentIndex.Scheme]||'';}// The code below is adapted from Traceur:
// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js
/**
 * Builds a URI string from already-encoded parts.
 *
 * No encoding is performed.  Any component may be omitted as either null or
 * undefined.
 *
 * @param opt_scheme The scheme such as 'http'.
 * @param opt_userInfo The user name before the '@'.
 * @param opt_domain The domain such as 'www.google.com', already
 *     URI-encoded.
 * @param opt_port The port number.
 * @param opt_path The path, already URI-encoded.  If it is not
 *     empty, it must begin with a slash.
 * @param opt_queryData The URI-encoded query data.
 * @param opt_fragment The URI-encoded fragment identifier.
 * @return The fully combined URI.
 */function _buildFromEncodedParts(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_queryData,opt_fragment){var out=[];if(opt_scheme!=null){out.push(opt_scheme+':');}if(opt_domain!=null){out.push('//');if(opt_userInfo!=null){out.push(opt_userInfo+'@');}out.push(opt_domain);if(opt_port!=null){out.push(':'+opt_port);}}if(opt_path!=null){out.push(opt_path);}if(opt_queryData!=null){out.push('?'+opt_queryData);}if(opt_fragment!=null){out.push('#'+opt_fragment);}return out.join('');}/**
 * A regular expression for breaking a URI into its component parts.
 *
 * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says
 * As the "first-match-wins" algorithm is identical to the "greedy"
 * disambiguation method used by POSIX regular expressions, it is natural and
 * commonplace to use a regular expression for parsing the potential five
 * components of a URI reference.
 *
 * The following line is the regular expression for breaking-down a
 * well-formed URI reference into its components.
 *
 * <pre>
 * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
 *  12            3  4          5       6  7        8 9
 * </pre>
 *
 * The numbers in the second line above are only to assist readability; they
 * indicate the reference points for each subexpression (i.e., each paired
 * parenthesis). We refer to the value matched for subexpression <n> as $<n>.
 * For example, matching the above expression to
 * <pre>
 *     http://www.ics.uci.edu/pub/ietf/uri/#Related
 * </pre>
 * results in the following subexpression matches:
 * <pre>
 *    $1 = http:
 *    $2 = http
 *    $3 = //www.ics.uci.edu
 *    $4 = www.ics.uci.edu
 *    $5 = /pub/ietf/uri/
 *    $6 = <undefined>
 *    $7 = <undefined>
 *    $8 = #Related
 *    $9 = Related
 * </pre>
 * where <undefined> indicates that the component is not present, as is the
 * case for the query component in the above example. Therefore, we can
 * determine the value of the five components as
 * <pre>
 *    scheme    = $2
 *    authority = $4
 *    path      = $5
 *    query     = $7
 *    fragment  = $9
 * </pre>
 *
 * The regular expression has been modified slightly to expose the
 * userInfo, domain, and port separately from the authority.
 * The modified version yields
 * <pre>
 *    $1 = http              scheme
 *    $2 = <undefined>       userInfo -\
 *    $3 = www.ics.uci.edu   domain     | authority
 *    $4 = <undefined>       port     -/
 *    $5 = /pub/ietf/uri/    path
 *    $6 = <undefined>       query without ?
 *    $7 = Related           fragment without #
 * </pre>
 * @internal
 */var _splitRe=new RegExp('^'+'(?:'+'([^:/?#.]+)'+// scheme - ignore special characters
// used by other URL parts such as :,
// ?, /, #, and .
':)?'+'(?://'+'(?:([^/?#]*)@)?'+// userInfo
"([\\w\\d\\-\\u0100-\\uffff.%]*)"+// domain - restrict to letters,
// digits, dashes, dots, percent
// escapes, and unicode characters.
'(?::([0-9]+))?'+// port
')?'+'([^?#]+)?'+// path
'(?:\\?([^#]*))?'+// query
'(?:#(.*))?'+// fragment
'$');/**
 * The index of each URI component in the return value of goog.uri.utils.split.
 * @enum {number}
 */var _ComponentIndex;(function(_ComponentIndex){_ComponentIndex[_ComponentIndex["Scheme"]=1]="Scheme";_ComponentIndex[_ComponentIndex["UserInfo"]=2]="UserInfo";_ComponentIndex[_ComponentIndex["Domain"]=3]="Domain";_ComponentIndex[_ComponentIndex["Port"]=4]="Port";_ComponentIndex[_ComponentIndex["Path"]=5]="Path";_ComponentIndex[_ComponentIndex["QueryData"]=6]="QueryData";_ComponentIndex[_ComponentIndex["Fragment"]=7]="Fragment";})(_ComponentIndex||(_ComponentIndex={}));/**
 * Splits a URI into its component parts.
 *
 * Each component can be accessed via the component indices; for example:
 * <pre>
 * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];
 * </pre>
 *
 * @param uri The URI string to examine.
 * @return Each component still URI-encoded.
 *     Each component that is present will contain the encoded value, whereas
 *     components that are not present will be undefined or empty, depending
 *     on the browser's regular expression implementation.  Never null, since
 *     arbitrary strings may still look like path names.
 */function _split(uri){return uri.match(_splitRe);}/**
  * Removes dot segments in given path component, as described in
  * RFC 3986, section 5.2.4.
  *
  * @param path A non-empty path component.
  * @return Path component with removed dot segments.
  */function _removeDotSegments(path){if(path=='/')return'/';var leadingSlash=path[0]=='/'?'/':'';var trailingSlash=path[path.length-1]==='/'?'/':'';var segments=path.split('/');var out=[];var up=0;for(var pos=0;pos<segments.length;pos++){var segment=segments[pos];switch(segment){case'':case'.':break;case'..':if(out.length>0){out.pop();}else{up++;}break;default:out.push(segment);}}if(leadingSlash==''){while(up-->0){out.unshift('..');}if(out.length===0)out.push('.');}return leadingSlash+out.join('/')+trailingSlash;}/**
 * Takes an array of the parts from split and canonicalizes the path part
 * and then joins all the parts.
 */function _joinAndCanonicalizePath(parts){var path=parts[_ComponentIndex.Path];path=path==null?'':_removeDotSegments(path);parts[_ComponentIndex.Path]=path;return _buildFromEncodedParts(parts[_ComponentIndex.Scheme],parts[_ComponentIndex.UserInfo],parts[_ComponentIndex.Domain],parts[_ComponentIndex.Port],path,parts[_ComponentIndex.QueryData],parts[_ComponentIndex.Fragment]);}/**
 * Resolves a URL.
 * @param base The URL acting as the base URL.
 * @param to The URL to resolve.
 */function _resolveUrl(base,url){var parts=_split(encodeURI(url));var baseParts=_split(base);if(parts[_ComponentIndex.Scheme]!=null){return _joinAndCanonicalizePath(parts);}else{parts[_ComponentIndex.Scheme]=baseParts[_ComponentIndex.Scheme];}for(var i=_ComponentIndex.Scheme;i<=_ComponentIndex.Port;i++){if(parts[i]==null){parts[i]=baseParts[i];}}if(parts[_ComponentIndex.Path][0]=='/'){return _joinAndCanonicalizePath(parts);}var path=baseParts[_ComponentIndex.Path];if(path==null)path='/';var index=path.lastIndexOf('/');path=path.substring(0,index+1)+parts[_ComponentIndex.Path];parts[_ComponentIndex.Path]=path;return _joinAndCanonicalizePath(parts);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An interface for retrieving documents by URL that the compiler uses
 * to load templates.
 */var ResourceLoader=/** @class */function(){function ResourceLoader(){}ResourceLoader.prototype.get=function(url){return'';};return ResourceLoader;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Extractor=/** @class */function(){function Extractor(host,staticSymbolResolver,messageBundle,metadataResolver){this.host=host;this.staticSymbolResolver=staticSymbolResolver;this.messageBundle=messageBundle;this.metadataResolver=metadataResolver;}Extractor.prototype.extract=function(rootFiles){var _this=this;var _a=analyzeAndValidateNgModules(rootFiles,this.host,this.staticSymbolResolver,this.metadataResolver),files=_a.files,ngModules=_a.ngModules;return Promise.all(ngModules.map(function(ngModule){return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){var errors=[];files.forEach(function(file){var compMetas=[];file.directives.forEach(function(directiveType){var dirMeta=_this.metadataResolver.getDirectiveMetadata(directiveType);if(dirMeta&&dirMeta.isComponent){compMetas.push(dirMeta);}});compMetas.forEach(function(compMeta){var html=compMeta.template.template;// Template URL points to either an HTML or TS file depending on
// whether the file is used with `templateUrl:` or `template:`,
// respectively.
var templateUrl=compMeta.template.templateUrl;var interpolationConfig=InterpolationConfig.fromArray(compMeta.template.interpolation);errors.push.apply(errors,Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(_this.messageBundle.updateFromTemplate(html,templateUrl,interpolationConfig)));});});if(errors.length){throw new Error(errors.map(function(e){return e.toString();}).join('\n'));}return _this.messageBundle;});};Extractor.create=function(host,locale){var htmlParser=new HtmlParser();var urlResolver=createAotUrlResolver(host);var symbolCache=new StaticSymbolCache();var summaryResolver=new AotSummaryResolver(host,symbolCache);var staticSymbolResolver=new StaticSymbolResolver(host,symbolCache,summaryResolver);var staticReflector=new StaticReflector(summaryResolver,staticSymbolResolver);var config=new CompilerConfig({defaultEncapsulation:ViewEncapsulation.Emulated,useJit:false});var normalizer=new DirectiveNormalizer({get:function get(url){return host.loadResource(url);}},urlResolver,htmlParser,config);var elementSchemaRegistry=new DomElementSchemaRegistry();var resolver=new CompileMetadataResolver(config,htmlParser,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,console,symbolCache,staticReflector);// TODO(vicb): implicit tags & attributes
var messageBundle=new MessageBundle(htmlParser,[],{},locale);var extractor=new Extractor(host,staticSymbolResolver,messageBundle,resolver);return{extractor:extractor,staticReflector:staticReflector};};return Extractor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function compileInjectable(meta){var result=null;var factoryMeta={name:meta.name,type:meta.type,deps:meta.ctorDeps,injectFn:Identifiers.inject};if(meta.useClass!==undefined){// meta.useClass has two modes of operation. Either deps are specified, in which case `new` is
// used to instantiate the class with dependencies injected, or deps are not specified and
// the factory of the class is used to instantiate it.
//
// A special case exists for useClass: Type where Type is the injectable type itself, in which
// case omitting deps just uses the constructor dependencies instead.
var useClassOnSelf=meta.useClass.isEquivalent(meta.type);var deps=meta.userDeps||useClassOnSelf&&meta.ctorDeps||undefined;if(deps!==undefined){// factory: () => new meta.useClass(...deps)
result=compileFactoryFunction(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},factoryMeta,{delegate:meta.useClass,delegateDeps:deps,delegateType:R3FactoryDelegateType.Class}));}else{result=compileFactoryFunction(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},factoryMeta,{delegate:meta.useClass,delegateType:R3FactoryDelegateType.Factory}));}}else if(meta.useFactory!==undefined){result=compileFactoryFunction(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},factoryMeta,{delegate:meta.useFactory,delegateDeps:meta.userDeps||[],delegateType:R3FactoryDelegateType.Function}));}else if(meta.useValue!==undefined){// Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for
// client code because meta.useValue is an Expression which will be defined even if the actual
// value is undefined.
result=compileFactoryFunction(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},factoryMeta,{expression:meta.useValue}));}else if(meta.useExisting!==undefined){// useExisting is an `inject` call on the existing token.
result=compileFactoryFunction(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({},factoryMeta,{expression:importExpr(Identifiers.inject).callFn([meta.useExisting])}));}else{result=compileFactoryFunction(factoryMeta);}var token=meta.type;var providedIn=meta.providedIn;var expression=importExpr(Identifiers.defineInjectable).callFn([mapToMapExpression({token:token,factory:result.factory,providedIn:providedIn})]);var type=new ExpressionType(importExpr(Identifiers.InjectableDef,[new ExpressionType(meta.type)]));return{expression:expression,type:type,statements:result.statements};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Processes `Target`s with a given set of directives and performs a binding operation, which
 * returns an object similar to TypeScript's `ts.TypeChecker` that contains knowledge about the
 * target.
 */var R3TargetBinder=/** @class */function(){function R3TargetBinder(directiveMatcher){this.directiveMatcher=directiveMatcher;}/**
     * Perform a binding operation on the given `Target` and return a `BoundTarget` which contains
     * metadata about the types referenced in the template.
     */R3TargetBinder.prototype.bind=function(target){if(!target.template){// TODO(alxhub): handle targets which contain things like HostBindings, etc.
throw new Error('Binding without a template not yet supported');}// First, parse the template into a `Scope` structure. This operation captures the syntactic
// scopes in the template and makes them available for later use.
var scope=Scope.apply(target.template);// Next, perform directive matching on the template using the `DirectiveBinder`. This returns:
//   - directives: Map of nodes (elements & ng-templates) to the directives on them.
//   - bindings: Map of inputs, outputs, and attributes to the directive/element that claims
//     them. TODO(alxhub): handle multiple directives claiming an input/output/etc.
//   - references: Map of #references to their targets.
var _a=DirectiveBinder.apply(target.template,this.directiveMatcher),directives=_a.directives,bindings=_a.bindings,references=_a.references;// Finally, run the TemplateBinder to bind references, variables, and other entities within the
// template. This extracts all the metadata that doesn't depend on directive matching.
var _b=TemplateBinder.apply(target.template,scope),expressions=_b.expressions,symbols=_b.symbols,nestingLevel=_b.nestingLevel;return new R3BoundTarget(target,directives,bindings,references,expressions,symbols,nestingLevel);};return R3TargetBinder;}();/**
 * Represents a binding scope within a template.
 *
 * Any variables, references, or other named entities declared within the template will
 * be captured and available by name in `namedEntities`. Additionally, child templates will
 * be analyzed and have their child `Scope`s available in `childScopes`.
 */var Scope=/** @class */function(){function Scope(parentScope){this.parentScope=parentScope;/**
         * Named members of the `Scope`, such as `Reference`s or `Variable`s.
         */this.namedEntities=new Map();/**
         * Child `Scope`s for immediately nested `Template`s.
         */this.childScopes=new Map();}/**
     * Process a template (either as a `Template` sub-template with variables, or a plain array of
     * template `Node`s) and construct its `Scope`.
     */Scope.apply=function(template){var scope=new Scope();scope.ingest(template);return scope;};/**
     * Internal method to process the template and populate the `Scope`.
     */Scope.prototype.ingest=function(template){var _this=this;if(template instanceof Template){// Variables on an <ng-template> are defined in the inner scope.
template.variables.forEach(function(node){return _this.visitVariable(node);});// Process the nodes of the template.
template.children.forEach(function(node){return node.visit(_this);});}else{// No overarching `Template` instance, so process the nodes directly.
template.forEach(function(node){return node.visit(_this);});}};Scope.prototype.visitElement=function(element){var _this=this;// `Element`s in the template may have `Reference`s which are captured in the scope.
element.references.forEach(function(node){return _this.visitReference(node);});// Recurse into the `Element`'s children.
element.children.forEach(function(node){return node.visit(_this);});};Scope.prototype.visitTemplate=function(template){var _this=this;// References on a <ng-template> are defined in the outer scope, so capture them before
// processing the template's child scope.
template.references.forEach(function(node){return _this.visitReference(node);});// Next, create an inner scope and process the template within it.
var scope=new Scope(this);scope.ingest(template);this.childScopes.set(template,scope);};Scope.prototype.visitVariable=function(variable){// Declare the variable if it's not already.
this.maybeDeclare(variable);};Scope.prototype.visitReference=function(reference){// Declare the variable if it's not already.
this.maybeDeclare(reference);};// Unused visitors.
Scope.prototype.visitContent=function(content){};Scope.prototype.visitBoundAttribute=function(attr){};Scope.prototype.visitBoundEvent=function(event){};Scope.prototype.visitBoundText=function(text){};Scope.prototype.visitText=function(text){};Scope.prototype.visitTextAttribute=function(attr){};Scope.prototype.maybeDeclare=function(thing){// Declare something with a name, as long as that name isn't taken.
if(!this.namedEntities.has(thing.name)){this.namedEntities.set(thing.name,thing);}};/**
     * Look up a variable within this `Scope`.
     *
     * This can recurse into a parent `Scope` if it's available.
     */Scope.prototype.lookup=function(name){if(this.namedEntities.has(name)){// Found in the local scope.
return this.namedEntities.get(name);}else if(this.parentScope!==undefined){// Not in the local scope, but there's a parent scope so check there.
return this.parentScope.lookup(name);}else{// At the top level and it wasn't found.
return null;}};/**
     * Get the child scope for a `Template`.
     *
     * This should always be defined.
     */Scope.prototype.getChildScope=function(template){var res=this.childScopes.get(template);if(res===undefined){throw new Error("Assertion error: child scope for "+template+" not found");}return res;};return Scope;}();/**
 * Processes a template and matches directives on nodes (elements and templates).
 *
 * Usually used via the static `apply()` method.
 */var DirectiveBinder=/** @class */function(){function DirectiveBinder(matcher,directives,bindings,references){this.matcher=matcher;this.directives=directives;this.bindings=bindings;this.references=references;}/**
     * Process a template (list of `Node`s) and perform directive matching against each node.
     *
     * @param template the list of template `Node`s to match (recursively).
     * @param selectorMatcher a `SelectorMatcher` containing the directives that are in scope for
     * this template.
     * @returns three maps which contain information about directives in the template: the
     * `directives` map which lists directives matched on each node, the `bindings` map which
     * indicates which directives claimed which bindings (inputs, outputs, etc), and the `references`
     * map which resolves #references (`Reference`s) within the template to the named directive or
     * template node.
     */DirectiveBinder.apply=function(template,selectorMatcher){var directives=new Map();var bindings=new Map();var references=new Map();var matcher=new DirectiveBinder(selectorMatcher,directives,bindings,references);matcher.ingest(template);return{directives:directives,bindings:bindings,references:references};};DirectiveBinder.prototype.ingest=function(template){var _this=this;template.forEach(function(node){return node.visit(_this);});};DirectiveBinder.prototype.visitElement=function(element){this.visitElementOrTemplate(element.name,element);};DirectiveBinder.prototype.visitTemplate=function(template){this.visitElementOrTemplate('ng-template',template);};DirectiveBinder.prototype.visitElementOrTemplate=function(tag,node){var _this=this;// First, determine the HTML shape of the node for the purpose of directive matching.
// Do this by building up a `CssSelector` for the node.
var cssSelector=new CssSelector();cssSelector.setElement(tag);// Add attributes to the CSS selector.
var attrs=getAttrsForDirectiveMatching(node);Object.getOwnPropertyNames(attrs).forEach(function(name){var value=attrs[name];cssSelector.addAttribute(name,value);// Treat the 'class' attribute specially.
if(name.toLowerCase()==='class'){var classes=value.trim().split(/\s+/g);classes.forEach(function(className){return cssSelector.addClassName(className);});}});// Next, use the `SelectorMatcher` to get the list of directives on the node.
var directives=[];this.matcher.match(cssSelector,function(_,directive){return directives.push(directive);});if(directives.length>0){this.directives.set(node,directives);}// Resolve any references that are created on this node.
node.references.forEach(function(ref){var dirTarget=null;// If the reference expression is empty, then it matches the "primary" directive on the node
// (if there is one). Otherwise it matches the host node itself (either an element or
// <ng-template> node).
if(ref.value.trim()===''){// This could be a reference to a component if there is one.
dirTarget=directives.find(function(dir){return dir.isComponent;})||null;}else{// This is a reference to a directive exported via exportAs. One should exist.
dirTarget=directives.find(function(dir){return dir.exportAs===ref.value;})||null;// Check if a matching directive was found, and error if it wasn't.
if(dirTarget===null){// TODO(alxhub): Return an error value here that can be used for template validation.
throw new Error("Assertion error: failed to find directive with exportAs: "+ref.value);}}if(dirTarget!==null){// This reference points to a directive.
_this.references.set(ref,{directive:dirTarget,node:node});}else{// This reference points to the node itself.
_this.references.set(ref,node);}});// Associate bindings on the node with directives or with the node itself.
// Inputs:
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(node.attributes,node.inputs).forEach(function(binding){var dir=directives.find(function(dir){return dir.inputs.hasOwnProperty(binding.name);});if(dir!==undefined){_this.bindings.set(binding,dir);}else{_this.bindings.set(binding,node);}});// Outputs:
node.outputs.forEach(function(binding){var dir=directives.find(function(dir){return dir.outputs.hasOwnProperty(binding.name);});if(dir!==undefined){_this.bindings.set(binding,dir);}else{_this.bindings.set(binding,node);}});// Recurse into the node's children.
node.children.forEach(function(child){return child.visit(_this);});};// Unused visitors.
DirectiveBinder.prototype.visitContent=function(content){};DirectiveBinder.prototype.visitVariable=function(variable){};DirectiveBinder.prototype.visitReference=function(reference){};DirectiveBinder.prototype.visitTextAttribute=function(attribute){};DirectiveBinder.prototype.visitBoundAttribute=function(attribute){};DirectiveBinder.prototype.visitBoundEvent=function(attribute){};DirectiveBinder.prototype.visitBoundAttributeOrEvent=function(node){};DirectiveBinder.prototype.visitText=function(text){};DirectiveBinder.prototype.visitBoundText=function(text){};return DirectiveBinder;}();/**
 * Processes a template and extract metadata about expressions and symbols within.
 *
 * This is a companion to the `DirectiveBinder` that doesn't require knowledge of directives matched
 * within the template in order to operate.
 *
 * Expressions are visited by the superclass `RecursiveAstVisitor`, with custom logic provided
 * by overridden methods from that visitor.
 */var TemplateBinder=/** @class */function(_super){Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TemplateBinder,_super);function TemplateBinder(bindings,symbols,nestingLevel,scope,template,level){var _this=_super.call(this)||this;_this.bindings=bindings;_this.symbols=symbols;_this.nestingLevel=nestingLevel;_this.scope=scope;_this.template=template;_this.level=level;// Save a bit of processing time by constructing this closure in advance.
_this.visitNode=function(node){return node.visit(_this);};return _this;}/**
     * Process a template and extract metadata about expressions and symbols within.
     *
     * @param template the nodes of the template to process
     * @param scope the `Scope` of the template being processed.
     * @returns three maps which contain metadata about the template: `expressions` which interprets
     * special `AST` nodes in expressions as pointing to references or variables declared within the
     * template, `symbols` which maps those variables and references to the nested `Template` which
     * declares them, if any, and `nestingLevel` which associates each `Template` with a integer
     * nesting level (how many levels deep within the template structure the `Template` is), starting
     * at 1.
     */TemplateBinder.apply=function(template,scope){var expressions=new Map();var symbols=new Map();var nestingLevel=new Map();// The top-level template has nesting level 0.
var binder=new TemplateBinder(expressions,symbols,nestingLevel,scope,template instanceof Template?template:null,0);binder.ingest(template);return{expressions:expressions,symbols:symbols,nestingLevel:nestingLevel};};TemplateBinder.prototype.ingest=function(template){if(template instanceof Template){// For <ng-template>s, process inputs, outputs, variables, and child nodes. References were
// processed in the scope of the containing template.
template.inputs.forEach(this.visitNode);template.outputs.forEach(this.visitNode);template.variables.forEach(this.visitNode);template.children.forEach(this.visitNode);// Set the nesting level.
this.nestingLevel.set(template,this.level);}else{// Visit each node from the top-level template.
template.forEach(this.visitNode);}};TemplateBinder.prototype.visitElement=function(element){// Vist the inputs, outputs, and children of the element.
element.inputs.forEach(this.visitNode);element.outputs.forEach(this.visitNode);element.children.forEach(this.visitNode);};TemplateBinder.prototype.visitTemplate=function(template){// First, visit the inputs, outputs of the template node.
template.inputs.forEach(this.visitNode);template.outputs.forEach(this.visitNode);// References are also evaluated in the outer context.
template.references.forEach(this.visitNode);// Next, recurse into the template using its scope, and bumping the nesting level up by one.
var childScope=this.scope.getChildScope(template);var binder=new TemplateBinder(this.bindings,this.symbols,this.nestingLevel,childScope,template,this.level+1);binder.ingest(template);};TemplateBinder.prototype.visitVariable=function(variable){// Register the `Variable` as a symbol in the current `Template`.
if(this.template!==null){this.symbols.set(variable,this.template);}};TemplateBinder.prototype.visitReference=function(reference){// Register the `Reference` as a symbol in the current `Template`.
if(this.template!==null){this.symbols.set(reference,this.template);}};// Unused template visitors
TemplateBinder.prototype.visitText=function(text){};TemplateBinder.prototype.visitContent=function(content){};TemplateBinder.prototype.visitTextAttribute=function(attribute){};// The remaining visitors are concerned with processing AST expressions within template bindings
TemplateBinder.prototype.visitBoundAttribute=function(attribute){attribute.value.visit(this);};TemplateBinder.prototype.visitBoundEvent=function(event){event.handler.visit(this);};TemplateBinder.prototype.visitBoundText=function(text){text.value.visit(this);};// These five types of AST expressions can refer to expression roots, which could be variables
// or references in the current scope.
TemplateBinder.prototype.visitPropertyRead=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitPropertyRead.call(this,ast,context);};TemplateBinder.prototype.visitSafePropertyRead=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitSafePropertyRead.call(this,ast,context);};TemplateBinder.prototype.visitPropertyWrite=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitPropertyWrite.call(this,ast,context);};TemplateBinder.prototype.visitMethodCall=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitMethodCall.call(this,ast,context);};TemplateBinder.prototype.visitSafeMethodCall=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitSafeMethodCall.call(this,ast,context);};TemplateBinder.prototype.maybeMap=function(scope,ast,name){// If the receiver of the expression isn't the `ImplicitReceiver`, this isn't the root of an
// `AST` expression that maps to a `Variable` or `Reference`.
if(!(ast.receiver instanceof ImplicitReceiver)){return;}// Check whether the name exists in the current scope. If so, map it. Otherwise, the name is
// probably a property on the top-level component context.
var target=this.scope.lookup(name);if(target!==null){this.bindings.set(ast,target);}};return TemplateBinder;}(RecursiveAstVisitor);/**
 * Metadata container for a `Target` that allows queries for specific bits of metadata.
 *
 * See `BoundTarget` for documentation on the individual methods.
 */var R3BoundTarget=/** @class */function(){function R3BoundTarget(target,directives,bindings,references,exprTargets,symbols,nestingLevel){this.target=target;this.directives=directives;this.bindings=bindings;this.references=references;this.exprTargets=exprTargets;this.symbols=symbols;this.nestingLevel=nestingLevel;}R3BoundTarget.prototype.getDirectivesOfNode=function(node){return this.directives.get(node)||null;};R3BoundTarget.prototype.getReferenceTarget=function(ref){return this.references.get(ref)||null;};R3BoundTarget.prototype.getConsumerOfBinding=function(binding){return this.bindings.get(binding)||null;};R3BoundTarget.prototype.getExpressionTarget=function(expr){return this.exprTargets.get(expr)||null;};R3BoundTarget.prototype.getTemplateOfSymbol=function(symbol){return this.symbols.get(symbol)||null;};R3BoundTarget.prototype.getNestingLevel=function(template){return this.nestingLevel.get(template)||0;};R3BoundTarget.prototype.getUsedDirectives=function(){var set=new Set();this.directives.forEach(function(dirs){return dirs.forEach(function(dir){return set.add(dir);});});return Array.from(set.values());};return R3BoundTarget;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Implementation of `CompileReflector` which resolves references to @angular/core
 * symbols at runtime, according to a consumer-provided mapping.
 *
 * Only supports `resolveExternalReference`, all other methods throw.
 */var R3JitReflector=/** @class */function(){function R3JitReflector(context){this.context=context;}R3JitReflector.prototype.resolveExternalReference=function(ref){// This reflector only handles @angular/core imports.
if(ref.moduleName!=='@angular/core'){throw new Error("Cannot resolve external reference to "+ref.moduleName+", only references to @angular/core are supported.");}if(!this.context.hasOwnProperty(ref.name)){throw new Error("No value provided for @angular/core symbol '"+ref.name+"'.");}return this.context[ref.name];};R3JitReflector.prototype.parameters=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.annotations=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.shallowAnnotations=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.tryAnnotations=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.propMetadata=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.hasLifecycleHook=function(type,lcProperty){throw new Error('Not implemented.');};R3JitReflector.prototype.guards=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.componentModuleUrl=function(type,cmpMetadata){throw new Error('Not implemented.');};return R3JitReflector;}();/**
 * JIT compiles an expression and returns the result of executing that expression.
 *
 * @param def the definition which will be compiled and executed to get the value to patch
 * @param context an object map of @angular/core symbol names to symbols which will be available in
 * the context of the compiled expression
 * @param sourceUrl a URL to use for the source map of the compiled expression
 * @param constantPool an optional `ConstantPool` which contains constants used in the expression
 */function jitExpression(def,context,sourceUrl,preStatements){// The ConstantPool may contain Statements which declare variables used in the final expression.
// Therefore, its statements need to precede the actual JIT operation. The final statement is a
// declaration of $def which is set to the expression being compiled.
var statements=Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(preStatements,[new DeclareVarStmt('$def',def,undefined,[StmtModifier.Exported])]);var res=jitStatements(sourceUrl,statements,new R3JitReflector(context),false);return res['$def'];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // This file only reexports content of the `src` folder. Keep it that way.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // This file only reexports content of the `src` folder. Keep it that way.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__["audit"]; });

/* harmony import */ var _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(367);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__["auditTime"]; });

/* harmony import */ var _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(368);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__["buffer"]; });

/* harmony import */ var _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(369);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__["bufferCount"]; });

/* harmony import */ var _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(370);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__["bufferTime"]; });

/* harmony import */ var _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(371);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__["bufferToggle"]; });

/* harmony import */ var _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(372);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__["bufferWhen"]; });

/* harmony import */ var _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(373);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__["catchError"]; });

/* harmony import */ var _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(374);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__["combineAll"]; });

/* harmony import */ var _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(375);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__["combineLatest"]; });

/* harmony import */ var _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(376);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__["concat"]; });

/* harmony import */ var _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(344);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__["concatAll"]; });

/* harmony import */ var _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(377);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__["concatMap"]; });

/* harmony import */ var _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(378);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__["concatMapTo"]; });

/* harmony import */ var _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(379);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "count", function() { return _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__["count"]; });

/* harmony import */ var _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(380);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__["debounce"]; });

/* harmony import */ var _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(381);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__["debounceTime"]; });

/* harmony import */ var _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(382);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__["defaultIfEmpty"]; });

/* harmony import */ var _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(383);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__["delay"]; });

/* harmony import */ var _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(385);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__["delayWhen"]; });

/* harmony import */ var _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(386);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__["dematerialize"]; });

/* harmony import */ var _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(387);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__["distinct"]; });

/* harmony import */ var _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(388);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__["distinctUntilChanged"]; });

/* harmony import */ var _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(389);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__["distinctUntilKeyChanged"]; });

/* harmony import */ var _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(390);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__["elementAt"]; });

/* harmony import */ var _internal_operators_every__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(395);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _internal_operators_every__WEBPACK_IMPORTED_MODULE_25__["every"]; });

/* harmony import */ var _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(396);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_26__["exhaust"]; });

/* harmony import */ var _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(397);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_27__["exhaustMap"]; });

/* harmony import */ var _internal_operators_expand__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(398);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return _internal_operators_expand__WEBPACK_IMPORTED_MODULE_28__["expand"]; });

/* harmony import */ var _internal_operators_filter__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(391);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _internal_operators_filter__WEBPACK_IMPORTED_MODULE_29__["filter"]; });

/* harmony import */ var _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(399);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_30__["finalize"]; });

/* harmony import */ var _internal_operators_find__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(400);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "find", function() { return _internal_operators_find__WEBPACK_IMPORTED_MODULE_31__["find"]; });

/* harmony import */ var _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(401);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_32__["findIndex"]; });

/* harmony import */ var _internal_operators_first__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(402);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "first", function() { return _internal_operators_first__WEBPACK_IMPORTED_MODULE_33__["first"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(290);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_34__["groupBy"]; });

/* harmony import */ var _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(403);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_35__["ignoreElements"]; });

/* harmony import */ var _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(404);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_36__["isEmpty"]; });

/* harmony import */ var _internal_operators_last__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(405);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "last", function() { return _internal_operators_last__WEBPACK_IMPORTED_MODULE_37__["last"]; });

/* harmony import */ var _internal_operators_map__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(324);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _internal_operators_map__WEBPACK_IMPORTED_MODULE_38__["map"]; });

/* harmony import */ var _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(407);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_39__["mapTo"]; });

/* harmony import */ var _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(408);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_40__["materialize"]; });

/* harmony import */ var _internal_operators_max__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(409);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _internal_operators_max__WEBPACK_IMPORTED_MODULE_41__["max"]; });

/* harmony import */ var _internal_operators_merge__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(412);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_operators_merge__WEBPACK_IMPORTED_MODULE_42__["merge"]; });

/* harmony import */ var _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(345);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_43__["mergeAll"]; });

/* harmony import */ var _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(346);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_44__["mergeMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_44__["mergeMap"]; });

/* harmony import */ var _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(413);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_45__["mergeMapTo"]; });

/* harmony import */ var _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(414);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_46__["mergeScan"]; });

/* harmony import */ var _internal_operators_min__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(415);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _internal_operators_min__WEBPACK_IMPORTED_MODULE_47__["min"]; });

/* harmony import */ var _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(416);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_48__["multicast"]; });

/* harmony import */ var _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(300);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_49__["observeOn"]; });

/* harmony import */ var _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(417);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_50__["onErrorResumeNext"]; });

/* harmony import */ var _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(418);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_51__["pairwise"]; });

/* harmony import */ var _internal_operators_partition__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(419);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _internal_operators_partition__WEBPACK_IMPORTED_MODULE_52__["partition"]; });

/* harmony import */ var _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(421);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_53__["pluck"]; });

/* harmony import */ var _internal_operators_publish__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(422);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return _internal_operators_publish__WEBPACK_IMPORTED_MODULE_54__["publish"]; });

/* harmony import */ var _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(423);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_55__["publishBehavior"]; });

/* harmony import */ var _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(424);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_56__["publishLast"]; });

/* harmony import */ var _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(425);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_57__["publishReplay"]; });

/* harmony import */ var _internal_operators_race__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(426);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_operators_race__WEBPACK_IMPORTED_MODULE_58__["race"]; });

/* harmony import */ var _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(410);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_59__["reduce"]; });

/* harmony import */ var _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(427);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_60__["repeat"]; });

/* harmony import */ var _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(428);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_61__["repeatWhen"]; });

/* harmony import */ var _internal_operators_retry__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(429);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return _internal_operators_retry__WEBPACK_IMPORTED_MODULE_62__["retry"]; });

/* harmony import */ var _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(430);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_63__["retryWhen"]; });

/* harmony import */ var _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(289);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_64__["refCount"]; });

/* harmony import */ var _internal_operators_sample__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(431);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _internal_operators_sample__WEBPACK_IMPORTED_MODULE_65__["sample"]; });

/* harmony import */ var _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(432);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_66__["sampleTime"]; });

/* harmony import */ var _internal_operators_scan__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(411);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _internal_operators_scan__WEBPACK_IMPORTED_MODULE_67__["scan"]; });

/* harmony import */ var _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(433);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_68__["sequenceEqual"]; });

/* harmony import */ var _internal_operators_share__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(434);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "share", function() { return _internal_operators_share__WEBPACK_IMPORTED_MODULE_69__["share"]; });

/* harmony import */ var _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(435);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_70__["shareReplay"]; });

/* harmony import */ var _internal_operators_single__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(436);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "single", function() { return _internal_operators_single__WEBPACK_IMPORTED_MODULE_71__["single"]; });

/* harmony import */ var _internal_operators_skip__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(437);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return _internal_operators_skip__WEBPACK_IMPORTED_MODULE_72__["skip"]; });

/* harmony import */ var _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(438);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_73__["skipLast"]; });

/* harmony import */ var _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(439);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_74__["skipUntil"]; });

/* harmony import */ var _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(440);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_75__["skipWhile"]; });

/* harmony import */ var _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(441);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_76__["startWith"]; });

/* harmony import */ var _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(442);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_77__["subscribeOn"]; });

/* harmony import */ var _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(444);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_78__["switchAll"]; });

/* harmony import */ var _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(445);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_79__["switchMap"]; });

/* harmony import */ var _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(446);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_80__["switchMapTo"]; });

/* harmony import */ var _internal_operators_take__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(394);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "take", function() { return _internal_operators_take__WEBPACK_IMPORTED_MODULE_81__["take"]; });

/* harmony import */ var _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(406);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_82__["takeLast"]; });

/* harmony import */ var _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(447);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_83__["takeUntil"]; });

/* harmony import */ var _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(448);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_84__["takeWhile"]; });

/* harmony import */ var _internal_operators_tap__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(393);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _internal_operators_tap__WEBPACK_IMPORTED_MODULE_85__["tap"]; });

/* harmony import */ var _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(449);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_86__["throttle"]; });

/* harmony import */ var _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(450);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_87__["throttleTime"]; });

/* harmony import */ var _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(392);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_88__["throwIfEmpty"]; });

/* harmony import */ var _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(451);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_89__["timeInterval"]; });

/* harmony import */ var _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(452);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_90__["timeout"]; });

/* harmony import */ var _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(453);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_91__["timeoutWith"]; });

/* harmony import */ var _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(454);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_92__["timestamp"]; });

/* harmony import */ var _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(455);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_93__["toArray"]; });

/* harmony import */ var _internal_operators_window__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(456);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _internal_operators_window__WEBPACK_IMPORTED_MODULE_94__["window"]; });

/* harmony import */ var _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(457);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_95__["windowCount"]; });

/* harmony import */ var _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(458);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_96__["windowTime"]; });

/* harmony import */ var _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(459);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_97__["windowToggle"]; });

/* harmony import */ var _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(460);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_98__["windowWhen"]; });

/* harmony import */ var _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(461);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_99__["withLatestFrom"]; });

/* harmony import */ var _internal_operators_zip__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(462);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_operators_zip__WEBPACK_IMPORTED_MODULE_100__["zip"]; });

/* harmony import */ var _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(463);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_101__["zipAll"]; });

/* Operator exports */

/** PURE_IMPORTS_START  PURE_IMPORTS_END */








































































































/***/ }),
/* 366 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return audit; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(279);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */

function audit(durationSelector) {
  return function auditOperatorFunction(source) {
    return source.lift(new AuditOperator(durationSelector));
  };
}

var AuditOperator =
/*@__PURE__*/
function () {
  function AuditOperator(durationSelector) {
    this.durationSelector = durationSelector;
  }

  AuditOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
  };

  return AuditOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var AuditSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AuditSubscriber, _super);

  function AuditSubscriber(destination, durationSelector) {
    var _this = _super.call(this, destination) || this;

    _this.durationSelector = durationSelector;
    _this.hasValue = false;
    return _this;
  }

  AuditSubscriber.prototype._next = function (value) {
    this.value = value;
    this.hasValue = true;

    if (!this.throttled) {
      var duration = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_1__["tryCatch"])(this.durationSelector)(value);

      if (duration === _util_errorObject__WEBPACK_IMPORTED_MODULE_2__["errorObject"]) {
        this.destination.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_2__["errorObject"].e);
      } else {
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, duration);

        if (innerSubscription.closed) {
          this.clearThrottle();
        } else {
          this.add(this.throttled = innerSubscription);
        }
      }
    }
  };

  AuditSubscriber.prototype.clearThrottle = function () {
    var _a = this,
        value = _a.value,
        hasValue = _a.hasValue,
        throttled = _a.throttled;

    if (throttled) {
      this.remove(throttled);
      this.throttled = null;
      throttled.unsubscribe();
    }

    if (hasValue) {
      this.value = null;
      this.hasValue = false;
      this.destination.next(value);
    }
  };

  AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
    this.clearThrottle();
  };

  AuditSubscriber.prototype.notifyComplete = function () {
    this.clearThrottle();
  };

  return AuditSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);

/***/ }),
/* 367 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return auditTime; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(314);
/* harmony import */ var _audit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(366);
/* harmony import */ var _observable_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(361);
/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */



/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */

function auditTime(duration, scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
  }

  return Object(_audit__WEBPACK_IMPORTED_MODULE_1__["audit"])(function () {
    return Object(_observable_timer__WEBPACK_IMPORTED_MODULE_2__["timer"])(duration, scheduler);
  });
}

/***/ }),
/* 368 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return buffer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */

function buffer(closingNotifier) {
  return function bufferOperatorFunction(source) {
    return source.lift(new BufferOperator(closingNotifier));
  };
}

var BufferOperator =
/*@__PURE__*/
function () {
  function BufferOperator(closingNotifier) {
    this.closingNotifier = closingNotifier;
  }

  BufferOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
  };

  return BufferOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var BufferSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferSubscriber, _super);

  function BufferSubscriber(destination, closingNotifier) {
    var _this = _super.call(this, destination) || this;

    _this.buffer = [];

    _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, closingNotifier));

    return _this;
  }

  BufferSubscriber.prototype._next = function (value) {
    this.buffer.push(value);
  };

  BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var buffer = this.buffer;
    this.buffer = [];
    this.destination.next(buffer);
  };

  return BufferSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 369 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return bufferCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */

function bufferCount(bufferSize, startBufferEvery) {
  if (startBufferEvery === void 0) {
    startBufferEvery = null;
  }

  return function bufferCountOperatorFunction(source) {
    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
  };
}

var BufferCountOperator =
/*@__PURE__*/
function () {
  function BufferCountOperator(bufferSize, startBufferEvery) {
    this.bufferSize = bufferSize;
    this.startBufferEvery = startBufferEvery;

    if (!startBufferEvery || bufferSize === startBufferEvery) {
      this.subscriberClass = BufferCountSubscriber;
    } else {
      this.subscriberClass = BufferSkipCountSubscriber;
    }
  }

  BufferCountOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
  };

  return BufferCountOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var BufferCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferCountSubscriber, _super);

  function BufferCountSubscriber(destination, bufferSize) {
    var _this = _super.call(this, destination) || this;

    _this.bufferSize = bufferSize;
    _this.buffer = [];
    return _this;
  }

  BufferCountSubscriber.prototype._next = function (value) {
    var buffer = this.buffer;
    buffer.push(value);

    if (buffer.length == this.bufferSize) {
      this.destination.next(buffer);
      this.buffer = [];
    }
  };

  BufferCountSubscriber.prototype._complete = function () {
    var buffer = this.buffer;

    if (buffer.length > 0) {
      this.destination.next(buffer);
    }

    _super.prototype._complete.call(this);
  };

  return BufferCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var BufferSkipCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferSkipCountSubscriber, _super);

  function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
    var _this = _super.call(this, destination) || this;

    _this.bufferSize = bufferSize;
    _this.startBufferEvery = startBufferEvery;
    _this.buffers = [];
    _this.count = 0;
    return _this;
  }

  BufferSkipCountSubscriber.prototype._next = function (value) {
    var _a = this,
        bufferSize = _a.bufferSize,
        startBufferEvery = _a.startBufferEvery,
        buffers = _a.buffers,
        count = _a.count;

    this.count++;

    if (count % startBufferEvery === 0) {
      buffers.push([]);
    }

    for (var i = buffers.length; i--;) {
      var buffer = buffers[i];
      buffer.push(value);

      if (buffer.length === bufferSize) {
        buffers.splice(i, 1);
        this.destination.next(buffer);
      }
    }
  };

  BufferSkipCountSubscriber.prototype._complete = function () {
    var _a = this,
        buffers = _a.buffers,
        destination = _a.destination;

    while (buffers.length > 0) {
      var buffer = buffers.shift();

      if (buffer.length > 0) {
        destination.next(buffer);
      }
    }

    _super.prototype._complete.call(this);
  };

  return BufferSkipCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 370 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return bufferTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(270);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(304);
/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */

function bufferTime(bufferTimeSpan) {
  var length = arguments.length;
  var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(arguments[arguments.length - 1])) {
    scheduler = arguments[arguments.length - 1];
    length--;
  }

  var bufferCreationInterval = null;

  if (length >= 2) {
    bufferCreationInterval = arguments[1];
  }

  var maxBufferSize = Number.POSITIVE_INFINITY;

  if (length >= 3) {
    maxBufferSize = arguments[2];
  }

  return function bufferTimeOperatorFunction(source) {
    return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
  };
}

var BufferTimeOperator =
/*@__PURE__*/
function () {
  function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
    this.bufferTimeSpan = bufferTimeSpan;
    this.bufferCreationInterval = bufferCreationInterval;
    this.maxBufferSize = maxBufferSize;
    this.scheduler = scheduler;
  }

  BufferTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
  };

  return BufferTimeOperator;
}();

var Context =
/*@__PURE__*/
function () {
  function Context() {
    this.buffer = [];
  }

  return Context;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var BufferTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferTimeSubscriber, _super);

  function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.bufferTimeSpan = bufferTimeSpan;
    _this.bufferCreationInterval = bufferCreationInterval;
    _this.maxBufferSize = maxBufferSize;
    _this.scheduler = scheduler;
    _this.contexts = [];

    var context = _this.openContext();

    _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;

    if (_this.timespanOnly) {
      var timeSpanOnlyState = {
        subscriber: _this,
        context: context,
        bufferTimeSpan: bufferTimeSpan
      };

      _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
    } else {
      var closeState = {
        subscriber: _this,
        context: context
      };
      var creationState = {
        bufferTimeSpan: bufferTimeSpan,
        bufferCreationInterval: bufferCreationInterval,
        subscriber: _this,
        scheduler: scheduler
      };

      _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));

      _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
    }

    return _this;
  }

  BufferTimeSubscriber.prototype._next = function (value) {
    var contexts = this.contexts;
    var len = contexts.length;
    var filledBufferContext;

    for (var i = 0; i < len; i++) {
      var context_1 = contexts[i];
      var buffer = context_1.buffer;
      buffer.push(value);

      if (buffer.length == this.maxBufferSize) {
        filledBufferContext = context_1;
      }
    }

    if (filledBufferContext) {
      this.onBufferFull(filledBufferContext);
    }
  };

  BufferTimeSubscriber.prototype._error = function (err) {
    this.contexts.length = 0;

    _super.prototype._error.call(this, err);
  };

  BufferTimeSubscriber.prototype._complete = function () {
    var _a = this,
        contexts = _a.contexts,
        destination = _a.destination;

    while (contexts.length > 0) {
      var context_2 = contexts.shift();
      destination.next(context_2.buffer);
    }

    _super.prototype._complete.call(this);
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  BufferTimeSubscriber.prototype._unsubscribe = function () {
    this.contexts = null;
  };

  BufferTimeSubscriber.prototype.onBufferFull = function (context) {
    this.closeContext(context);
    var closeAction = context.closeAction;
    closeAction.unsubscribe();
    this.remove(closeAction);

    if (!this.closed && this.timespanOnly) {
      context = this.openContext();
      var bufferTimeSpan = this.bufferTimeSpan;
      var timeSpanOnlyState = {
        subscriber: this,
        context: context,
        bufferTimeSpan: bufferTimeSpan
      };
      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
    }
  };

  BufferTimeSubscriber.prototype.openContext = function () {
    var context = new Context();
    this.contexts.push(context);
    return context;
  };

  BufferTimeSubscriber.prototype.closeContext = function (context) {
    this.destination.next(context.buffer);
    var contexts = this.contexts;
    var spliceIndex = contexts ? contexts.indexOf(context) : -1;

    if (spliceIndex >= 0) {
      contexts.splice(contexts.indexOf(context), 1);
    }
  };

  return BufferTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]);

function dispatchBufferTimeSpanOnly(state) {
  var subscriber = state.subscriber;
  var prevContext = state.context;

  if (prevContext) {
    subscriber.closeContext(prevContext);
  }

  if (!subscriber.closed) {
    state.context = subscriber.openContext();
    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
  }
}

function dispatchBufferCreation(state) {
  var bufferCreationInterval = state.bufferCreationInterval,
      bufferTimeSpan = state.bufferTimeSpan,
      subscriber = state.subscriber,
      scheduler = state.scheduler;
  var context = subscriber.openContext();
  var action = this;

  if (!subscriber.closed) {
    subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, {
      subscriber: subscriber,
      context: context
    }));
    action.schedule(state, bufferCreationInterval);
  }
}

function dispatchBufferClose(arg) {
  var subscriber = arg.subscriber,
      context = arg.context;
  subscriber.closeContext(context);
}

/***/ }),
/* 371 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return bufferToggle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */




/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */

function bufferToggle(openings, closingSelector) {
  return function bufferToggleOperatorFunction(source) {
    return source.lift(new BufferToggleOperator(openings, closingSelector));
  };
}

var BufferToggleOperator =
/*@__PURE__*/
function () {
  function BufferToggleOperator(openings, closingSelector) {
    this.openings = openings;
    this.closingSelector = closingSelector;
  }

  BufferToggleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
  };

  return BufferToggleOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var BufferToggleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferToggleSubscriber, _super);

  function BufferToggleSubscriber(destination, openings, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.openings = openings;
    _this.closingSelector = closingSelector;
    _this.contexts = [];

    _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, openings));

    return _this;
  }

  BufferToggleSubscriber.prototype._next = function (value) {
    var contexts = this.contexts;
    var len = contexts.length;

    for (var i = 0; i < len; i++) {
      contexts[i].buffer.push(value);
    }
  };

  BufferToggleSubscriber.prototype._error = function (err) {
    var contexts = this.contexts;

    while (contexts.length > 0) {
      var context_1 = contexts.shift();
      context_1.subscription.unsubscribe();
      context_1.buffer = null;
      context_1.subscription = null;
    }

    this.contexts = null;

    _super.prototype._error.call(this, err);
  };

  BufferToggleSubscriber.prototype._complete = function () {
    var contexts = this.contexts;

    while (contexts.length > 0) {
      var context_2 = contexts.shift();
      this.destination.next(context_2.buffer);
      context_2.subscription.unsubscribe();
      context_2.buffer = null;
      context_2.subscription = null;
    }

    this.contexts = null;

    _super.prototype._complete.call(this);
  };

  BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
  };

  BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
    this.closeBuffer(innerSub.context);
  };

  BufferToggleSubscriber.prototype.openBuffer = function (value) {
    try {
      var closingSelector = this.closingSelector;
      var closingNotifier = closingSelector.call(this, value);

      if (closingNotifier) {
        this.trySubscribe(closingNotifier);
      }
    } catch (err) {
      this._error(err);
    }
  };

  BufferToggleSubscriber.prototype.closeBuffer = function (context) {
    var contexts = this.contexts;

    if (contexts && context) {
      var buffer = context.buffer,
          subscription = context.subscription;
      this.destination.next(buffer);
      contexts.splice(contexts.indexOf(context), 1);
      this.remove(subscription);
      subscription.unsubscribe();
    }
  };

  BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
    var contexts = this.contexts;
    var buffer = [];
    var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
    var context = {
      buffer: buffer,
      subscription: subscription
    };
    contexts.push(context);
    var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, closingNotifier, context);

    if (!innerSubscription || innerSubscription.closed) {
      this.closeBuffer(context);
    } else {
      innerSubscription.context = context;
      this.add(innerSubscription);
      subscription.add(innerSubscription);
    }
  };

  return BufferToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);

/***/ }),
/* 372 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return bufferWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(279);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */






/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */

function bufferWhen(closingSelector) {
  return function (source) {
    return source.lift(new BufferWhenOperator(closingSelector));
  };
}

var BufferWhenOperator =
/*@__PURE__*/
function () {
  function BufferWhenOperator(closingSelector) {
    this.closingSelector = closingSelector;
  }

  BufferWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
  };

  return BufferWhenOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var BufferWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferWhenSubscriber, _super);

  function BufferWhenSubscriber(destination, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.closingSelector = closingSelector;
    _this.subscribing = false;

    _this.openBuffer();

    return _this;
  }

  BufferWhenSubscriber.prototype._next = function (value) {
    this.buffer.push(value);
  };

  BufferWhenSubscriber.prototype._complete = function () {
    var buffer = this.buffer;

    if (buffer) {
      this.destination.next(buffer);
    }

    _super.prototype._complete.call(this);
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  BufferWhenSubscriber.prototype._unsubscribe = function () {
    this.buffer = null;
    this.subscribing = false;
  };

  BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.openBuffer();
  };

  BufferWhenSubscriber.prototype.notifyComplete = function () {
    if (this.subscribing) {
      this.complete();
    } else {
      this.openBuffer();
    }
  };

  BufferWhenSubscriber.prototype.openBuffer = function () {
    var closingSubscription = this.closingSubscription;

    if (closingSubscription) {
      this.remove(closingSubscription);
      closingSubscription.unsubscribe();
    }

    var buffer = this.buffer;

    if (this.buffer) {
      this.destination.next(buffer);
    }

    this.buffer = [];
    var closingNotifier = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_2__["tryCatch"])(this.closingSelector)();

    if (closingNotifier === _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"]) {
      this.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"].e);
    } else {
      closingSubscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
      this.closingSubscription = closingSubscription;
      this.add(closingSubscription);
      this.subscribing = true;
      closingSubscription.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__["subscribeToResult"])(this, closingNotifier));
      this.subscribing = false;
    }
  };

  return BufferWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__["OuterSubscriber"]);

/***/ }),
/* 373 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return catchError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 *
 * <img src="./img/catch.png" width="100%">
 *
 * @example <caption>Continues with a different Observable when there's an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n == 4) {
 * 	     throw 'four!';
 *     }
 *	   return n;
 *   })
 *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, I, II, III, IV, V
 *
 * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n === 4) {
 * 	     throw 'four!';
 *     }
 * 	   return n;
 *   })
 *   .catch((err, caught) => caught)
 *   .take(30)
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, 1, 2, 3, ...
 *
 * @example <caption>Throws a new error when the source Observable throws an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 *     if (n == 4) {
 *       throw 'four!';
 *     }
 *     return n;
 *   })
 *   .catch(err => {
 *     throw 'error in source. Details: ' + err;
 *   })
 *   .subscribe(
 *     x => console.log(x),
 *     err => console.log(err)
 *   );
 *   // 1, 2, 3, error in source. Details: four!
 *
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} An observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @name catchError
 */

function catchError(selector) {
  return function catchErrorOperatorFunction(source) {
    var operator = new CatchOperator(selector);
    var caught = source.lift(operator);
    return operator.caught = caught;
  };
}

var CatchOperator =
/*@__PURE__*/
function () {
  function CatchOperator(selector) {
    this.selector = selector;
  }

  CatchOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
  };

  return CatchOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var CatchSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CatchSubscriber, _super);

  function CatchSubscriber(destination, selector, caught) {
    var _this = _super.call(this, destination) || this;

    _this.selector = selector;
    _this.caught = caught;
    return _this;
  } // NOTE: overriding `error` instead of `_error` because we don't want
  // to have this flag this subscriber as `isStopped`. We can mimic the
  // behavior of the RetrySubscriber (from the `retry` operator), where
  // we unsubscribe from our source chain, reset our Subscriber flags,
  // then subscribe to the selector result.


  CatchSubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var result = void 0;

      try {
        result = this.selector(err, this.caught);
      } catch (err2) {
        _super.prototype.error.call(this, err2);

        return;
      }

      this._unsubscribeAndRecycle();

      this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, result));
    }
  };

  return CatchSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 374 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return combineAll; });
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(326);
/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */

function combineAll(project) {
  return function (source) {
    return source.lift(new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__["CombineLatestOperator"](project));
  };
}

/***/ }),
/* 375 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(276);
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(326);
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(338);
/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */



var none = {};
/* tslint:enable:max-line-length */

/**
 * @deprecated Deprecated in favor of static combineLatest.
 */

function combineLatest() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var project = null;

  if (typeof observables[observables.length - 1] === 'function') {
    project = observables.pop();
  } // if the first and only other argument besides the resultSelector is an array
  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`


  if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(observables[0])) {
    observables = observables[0].slice();
  }

  return function (source) {
    return source.lift.call(Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__["from"])([source].concat(observables)), new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__["CombineLatestOperator"](project));
  };
}

/***/ }),
/* 376 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(337);
/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * @deprecated Deprecated in favor of static concat.
 */

function concat() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function (source) {
    return source.lift.call(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"].apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 377 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return concatMap; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(346);
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */

function concatMap(project, resultSelector) {
  return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(project, resultSelector, 1);
}

/***/ }),
/* 378 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return concatMapTo; });
/* harmony import */ var _concatMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(377);
/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */

function concatMapTo(innerObservable, resultSelector) {
  return Object(_concatMap__WEBPACK_IMPORTED_MODULE_0__["concatMap"])(function () {
    return innerObservable;
  }, resultSelector);
}

/***/ }),
/* 379 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "count", function() { return count; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting a value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 4
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */

function count(predicate) {
  return function (source) {
    return source.lift(new CountOperator(predicate, source));
  };
}

var CountOperator =
/*@__PURE__*/
function () {
  function CountOperator(predicate, source) {
    this.predicate = predicate;
    this.source = source;
  }

  CountOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
  };

  return CountOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var CountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CountSubscriber, _super);

  function CountSubscriber(destination, predicate, source) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.source = source;
    _this.count = 0;
    _this.index = 0;
    return _this;
  }

  CountSubscriber.prototype._next = function (value) {
    if (this.predicate) {
      this._tryPredicate(value);
    } else {
      this.count++;
    }
  };

  CountSubscriber.prototype._tryPredicate = function (value) {
    var result;

    try {
      result = this.predicate(value, this.index++, this.source);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    if (result) {
      this.count++;
    }
  };

  CountSubscriber.prototype._complete = function () {
    this.destination.next(this.count);
    this.destination.complete();
  };

  return CountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 380 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */

function debounce(durationSelector) {
  return function (source) {
    return source.lift(new DebounceOperator(durationSelector));
  };
}

var DebounceOperator =
/*@__PURE__*/
function () {
  function DebounceOperator(durationSelector) {
    this.durationSelector = durationSelector;
  }

  DebounceOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
  };

  return DebounceOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DebounceSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DebounceSubscriber, _super);

  function DebounceSubscriber(destination, durationSelector) {
    var _this = _super.call(this, destination) || this;

    _this.durationSelector = durationSelector;
    _this.hasValue = false;
    _this.durationSubscription = null;
    return _this;
  }

  DebounceSubscriber.prototype._next = function (value) {
    try {
      var result = this.durationSelector.call(this, value);

      if (result) {
        this._tryNext(value, result);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  DebounceSubscriber.prototype._complete = function () {
    this.emitValue();
    this.destination.complete();
  };

  DebounceSubscriber.prototype._tryNext = function (value, duration) {
    var subscription = this.durationSubscription;
    this.value = value;
    this.hasValue = true;

    if (subscription) {
      subscription.unsubscribe();
      this.remove(subscription);
    }

    subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, duration);

    if (subscription && !subscription.closed) {
      this.add(this.durationSubscription = subscription);
    }
  };

  DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.emitValue();
  };

  DebounceSubscriber.prototype.notifyComplete = function () {
    this.emitValue();
  };

  DebounceSubscriber.prototype.emitValue = function () {
    if (this.hasValue) {
      var value = this.value;
      var subscription = this.durationSubscription;

      if (subscription) {
        this.durationSubscription = null;
        subscription.unsubscribe();
        this.remove(subscription);
      } // This must be done *before* passing the value
      // along to the destination because it's possible for
      // the value to synchronously re-enter this operator
      // recursively if the duration selector Observable
      // emits synchronously


      this.value = null;
      this.hasValue = false;

      _super.prototype._next.call(this, value);
    }
  };

  return DebounceSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 381 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return debounceTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(314);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link IScheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */

function debounceTime(dueTime, scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
  }

  return function (source) {
    return source.lift(new DebounceTimeOperator(dueTime, scheduler));
  };
}

var DebounceTimeOperator =
/*@__PURE__*/
function () {
  function DebounceTimeOperator(dueTime, scheduler) {
    this.dueTime = dueTime;
    this.scheduler = scheduler;
  }

  DebounceTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
  };

  return DebounceTimeOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DebounceTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DebounceTimeSubscriber, _super);

  function DebounceTimeSubscriber(destination, dueTime, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.dueTime = dueTime;
    _this.scheduler = scheduler;
    _this.debouncedSubscription = null;
    _this.lastValue = null;
    _this.hasValue = false;
    return _this;
  }

  DebounceTimeSubscriber.prototype._next = function (value) {
    this.clearDebounce();
    this.lastValue = value;
    this.hasValue = true;
    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
  };

  DebounceTimeSubscriber.prototype._complete = function () {
    this.debouncedNext();
    this.destination.complete();
  };

  DebounceTimeSubscriber.prototype.debouncedNext = function () {
    this.clearDebounce();

    if (this.hasValue) {
      var lastValue = this.lastValue; // This must be done *before* passing the value
      // along to the destination because it's possible for
      // the value to synchronously re-enter this operator
      // recursively when scheduled with things like
      // VirtualScheduler/TestScheduler.

      this.lastValue = null;
      this.hasValue = false;
      this.destination.next(lastValue);
    }
  };

  DebounceTimeSubscriber.prototype.clearDebounce = function () {
    var debouncedSubscription = this.debouncedSubscription;

    if (debouncedSubscription !== null) {
      this.remove(debouncedSubscription);
      debouncedSubscription.unsubscribe();
      this.debouncedSubscription = null;
    }
  };

  return DebounceTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

function dispatchNext(subscriber) {
  subscriber.debouncedNext();
}

/***/ }),
/* 382 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return defaultIfEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/* tslint:enable:max-line-length */

/**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */

function defaultIfEmpty(defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = null;
  }

  return function (source) {
    return source.lift(new DefaultIfEmptyOperator(defaultValue));
  };
}

var DefaultIfEmptyOperator =
/*@__PURE__*/
function () {
  function DefaultIfEmptyOperator(defaultValue) {
    this.defaultValue = defaultValue;
  }

  DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
  };

  return DefaultIfEmptyOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DefaultIfEmptySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DefaultIfEmptySubscriber, _super);

  function DefaultIfEmptySubscriber(destination, defaultValue) {
    var _this = _super.call(this, destination) || this;

    _this.defaultValue = defaultValue;
    _this.isEmpty = true;
    return _this;
  }

  DefaultIfEmptySubscriber.prototype._next = function (value) {
    this.isEmpty = false;
    this.destination.next(value);
  };

  DefaultIfEmptySubscriber.prototype._complete = function () {
    if (this.isEmpty) {
      this.destination.next(this.defaultValue);
    }

    this.destination.complete();
  };

  return DefaultIfEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 383 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return delay; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(384);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(270);
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(301);
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */





/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */

function delay(delay, scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  }

  var absoluteDelay = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__["isDate"])(delay);
  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);
  return function (source) {
    return source.lift(new DelayOperator(delayFor, scheduler));
  };
}

var DelayOperator =
/*@__PURE__*/
function () {
  function DelayOperator(delay, scheduler) {
    this.delay = delay;
    this.scheduler = scheduler;
  }

  DelayOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
  };

  return DelayOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DelaySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DelaySubscriber, _super);

  function DelaySubscriber(destination, delay, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.delay = delay;
    _this.scheduler = scheduler;
    _this.queue = [];
    _this.active = false;
    _this.errored = false;
    return _this;
  }

  DelaySubscriber.dispatch = function (state) {
    var source = state.source;
    var queue = source.queue;
    var scheduler = state.scheduler;
    var destination = state.destination;

    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {
      queue.shift().notification.observe(destination);
    }

    if (queue.length > 0) {
      var delay_1 = Math.max(0, queue[0].time - scheduler.now());
      this.schedule(state, delay_1);
    } else {
      source.active = false;
    }
  };

  DelaySubscriber.prototype._schedule = function (scheduler) {
    this.active = true;
    this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
      source: this,
      destination: this.destination,
      scheduler: scheduler
    }));
  };

  DelaySubscriber.prototype.scheduleNotification = function (notification) {
    if (this.errored === true) {
      return;
    }

    var scheduler = this.scheduler;
    var message = new DelayMessage(scheduler.now() + this.delay, notification);
    this.queue.push(message);

    if (this.active === false) {
      this._schedule(scheduler);
    }
  };

  DelaySubscriber.prototype._next = function (value) {
    this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__["Notification"].createNext(value));
  };

  DelaySubscriber.prototype._error = function (err) {
    this.errored = true;
    this.queue = [];
    this.destination.error(err);
  };

  DelaySubscriber.prototype._complete = function () {
    this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__["Notification"].createComplete());
  };

  return DelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]);

var DelayMessage =
/*@__PURE__*/
function () {
  function DelayMessage(time, notification) {
    this.time = time;
    this.notification = notification;
  }

  return DelayMessage;
}();

/***/ }),
/* 384 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return isDate; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isDate(value) {
  return value instanceof Date && !isNaN(+value);
}

/***/ }),
/* 385 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return delayWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(268);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */

function delayWhen(delayDurationSelector, subscriptionDelay) {
  if (subscriptionDelay) {
    return function (source) {
      return new SubscriptionDelayObservable(source, subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));
    };
  }

  return function (source) {
    return source.lift(new DelayWhenOperator(delayDurationSelector));
  };
}

var DelayWhenOperator =
/*@__PURE__*/
function () {
  function DelayWhenOperator(delayDurationSelector) {
    this.delayDurationSelector = delayDurationSelector;
  }

  DelayWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
  };

  return DelayWhenOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DelayWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DelayWhenSubscriber, _super);

  function DelayWhenSubscriber(destination, delayDurationSelector) {
    var _this = _super.call(this, destination) || this;

    _this.delayDurationSelector = delayDurationSelector;
    _this.completed = false;
    _this.delayNotifierSubscriptions = [];
    _this.values = [];
    return _this;
  }

  DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(outerValue);
    this.removeSubscription(innerSub);
    this.tryComplete();
  };

  DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
    var value = this.removeSubscription(innerSub);

    if (value) {
      this.destination.next(value);
    }

    this.tryComplete();
  };

  DelayWhenSubscriber.prototype._next = function (value) {
    try {
      var delayNotifier = this.delayDurationSelector(value);

      if (delayNotifier) {
        this.tryDelay(delayNotifier, value);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  DelayWhenSubscriber.prototype._complete = function () {
    this.completed = true;
    this.tryComplete();
  };

  DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
    subscription.unsubscribe();
    var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
    var value = null;

    if (subscriptionIdx !== -1) {
      value = this.values[subscriptionIdx];
      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
      this.values.splice(subscriptionIdx, 1);
    }

    return value;
  };

  DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
    var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, delayNotifier, value);

    if (notifierSubscription && !notifierSubscription.closed) {
      this.add(notifierSubscription);
      this.delayNotifierSubscriptions.push(notifierSubscription);
    }

    this.values.push(value);
  };

  DelayWhenSubscriber.prototype.tryComplete = function () {
    if (this.completed && this.delayNotifierSubscriptions.length === 0) {
      this.destination.complete();
    }
  };

  return DelayWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SubscriptionDelayObservable =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscriptionDelayObservable, _super);

  function SubscriptionDelayObservable(source, subscriptionDelay) {
    var _this = _super.call(this) || this;

    _this.source = source;
    _this.subscriptionDelay = subscriptionDelay;
    return _this;
  }
  /** @deprecated This is an internal implementation detail, do not use. */


  SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
  };

  return SubscriptionDelayObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SubscriptionDelaySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscriptionDelaySubscriber, _super);

  function SubscriptionDelaySubscriber(parent, source) {
    var _this = _super.call(this) || this;

    _this.parent = parent;
    _this.source = source;
    _this.sourceSubscribed = false;
    return _this;
  }

  SubscriptionDelaySubscriber.prototype._next = function (unused) {
    this.subscribeToSource();
  };

  SubscriptionDelaySubscriber.prototype._error = function (err) {
    this.unsubscribe();
    this.parent.error(err);
  };

  SubscriptionDelaySubscriber.prototype._complete = function () {
    this.subscribeToSource();
  };

  SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
    if (!this.sourceSubscribed) {
      this.sourceSubscribed = true;
      this.unsubscribe();
      this.source.subscribe(this.parent);
    }
  };

  return SubscriptionDelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 386 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return dematerialize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * // Results in:
 * // A
 * // B
 * // TypeError: x.toUpperCase is not a function
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */

function dematerialize() {
  return function dematerializeOperatorFunction(source) {
    return source.lift(new DeMaterializeOperator());
  };
}

var DeMaterializeOperator =
/*@__PURE__*/
function () {
  function DeMaterializeOperator() {}

  DeMaterializeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DeMaterializeSubscriber(subscriber));
  };

  return DeMaterializeOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DeMaterializeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DeMaterializeSubscriber, _super);

  function DeMaterializeSubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  DeMaterializeSubscriber.prototype._next = function (value) {
    value.observe(this.destination);
  };

  return DeMaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 387 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return distinct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistinctSubscriber", function() { return DistinctSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 *
 * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will
 * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the
 * source observable directly with an equality check against previous values.
 *
 * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.
 *
 * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the
 * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`
 * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so
 * that the internal `Set` can be "flushed", basically clearing it of values.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)
 *   .distinct()
 *   .subscribe(x => console.log(x)); // 1, 2, 3, 4
 *
 * @example <caption>An example using a keySelector function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     .distinct((p: Person) => p.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 *
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [keySelector] Optional function to select which value you want to check as distinct.
 * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */

function distinct(keySelector, flushes) {
  return function (source) {
    return source.lift(new DistinctOperator(keySelector, flushes));
  };
}

var DistinctOperator =
/*@__PURE__*/
function () {
  function DistinctOperator(keySelector, flushes) {
    this.keySelector = keySelector;
    this.flushes = flushes;
  }

  DistinctOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
  };

  return DistinctOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DistinctSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DistinctSubscriber, _super);

  function DistinctSubscriber(destination, keySelector, flushes) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.values = new Set();

    if (flushes) {
      _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, flushes));
    }

    return _this;
  }

  DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values.clear();
  };

  DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  DistinctSubscriber.prototype._next = function (value) {
    if (this.keySelector) {
      this._useKeySelector(value);
    } else {
      this._finalizeNext(value, value);
    }
  };

  DistinctSubscriber.prototype._useKeySelector = function (value) {
    var key;
    var destination = this.destination;

    try {
      key = this.keySelector(value);
    } catch (err) {
      destination.error(err);
      return;
    }

    this._finalizeNext(key, value);
  };

  DistinctSubscriber.prototype._finalizeNext = function (key, value) {
    var values = this.values;

    if (!values.has(key)) {
      values.add(key);
      this.destination.next(value);
    }
  };

  return DistinctSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);



/***/ }),
/* 388 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return distinctUntilChanged; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(279);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)
 *   .distinctUntilChanged()
 *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4
 *
 * @example <caption>An example using a compare function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */

function distinctUntilChanged(compare, keySelector) {
  return function (source) {
    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));
  };
}

var DistinctUntilChangedOperator =
/*@__PURE__*/
function () {
  function DistinctUntilChangedOperator(compare, keySelector) {
    this.compare = compare;
    this.keySelector = keySelector;
  }

  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
  };

  return DistinctUntilChangedOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var DistinctUntilChangedSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DistinctUntilChangedSubscriber, _super);

  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.hasKey = false;

    if (typeof compare === 'function') {
      _this.compare = compare;
    }

    return _this;
  }

  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
    return x === y;
  };

  DistinctUntilChangedSubscriber.prototype._next = function (value) {
    var keySelector = this.keySelector;
    var key = value;

    if (keySelector) {
      key = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_2__["tryCatch"])(this.keySelector)(value);

      if (key === _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"]) {
        return this.destination.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"].e);
      }
    }

    var result = false;

    if (this.hasKey) {
      result = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_2__["tryCatch"])(this.compare)(this.key, key);

      if (result === _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"]) {
        return this.destination.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"].e);
      }
    } else {
      this.hasKey = true;
    }

    if (Boolean(result) === false) {
      this.key = key;
      this.destination.next(value);
    }
  };

  return DistinctUntilChangedSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 389 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return distinctUntilKeyChanged; });
/* harmony import */ var _distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(388);
/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>An example comparing the name of persons</caption>
 *
 *  interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'},
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilKeyChanged('name')
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @example <caption>An example comparing the first letters of the name</caption>
 *
 * interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo1'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo2'},
 *     { age: 6, name: 'Foo3'})
 *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo1' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo2' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 *
 * @param {string} key String key for object property lookup on each item.
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */

function distinctUntilKeyChanged(key, compare) {
  return Object(_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__["distinctUntilChanged"])(function (x, y) {
    return compare ? compare(x[key], y[key]) : x[key] === y[key];
  });
}

/***/ }),
/* 390 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return elementAt; });
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(320);
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(391);
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(392);
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(382);
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(394);
/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */





/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // click 1 = nothing
 * // click 2 = nothing
 * // click 3 = MouseEvent object logged to console
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */

function elementAt(index, defaultValue) {
  if (index < 0) {
    throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"]();
  }

  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) {
      return i === index;
    }), Object(_take__WEBPACK_IMPORTED_MODULE_4__["take"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__["throwIfEmpty"])(function () {
      return new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"]();
    }));
  };
}

/***/ }),
/* 391 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/* tslint:enable:max-line-length */

/**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */

function filter(predicate, thisArg) {
  return function filterOperatorFunction(source) {
    return source.lift(new FilterOperator(predicate, thisArg));
  };
}

var FilterOperator =
/*@__PURE__*/
function () {
  function FilterOperator(predicate, thisArg) {
    this.predicate = predicate;
    this.thisArg = thisArg;
  }

  FilterOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
  };

  return FilterOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var FilterSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FilterSubscriber, _super);

  function FilterSubscriber(destination, predicate, thisArg) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.thisArg = thisArg;
    _this.count = 0;
    return _this;
  } // the try catch block below is left specifically for
  // optimization and perf reasons. a tryCatcher is not necessary here.


  FilterSubscriber.prototype._next = function (value) {
    var result;

    try {
      result = this.predicate.call(this.thisArg, value, this.count++);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    if (result) {
      this.destination.next(value);
    }
  };

  return FilterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 392 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return throwIfEmpty; });
/* harmony import */ var _tap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(393);
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(321);
/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */


/**
 * If the source observable completes without emitting a value, it will emit
 * an error. The error will be created at that time by the optional
 * `errorFactory` argument, otherwise, the error will be {@link ErrorEmpty}.
 *
 * @example
 *
 * const click$ = fromEvent(button, 'click');
 *
 * clicks$.pipe(
 *   takeUntil(timer(1000)),
 *   throwIfEmpty(
 *     () => new Error('the button was not clicked within 1 second')
 *   ),
 * )
 * .subscribe({
 *   next() { console.log('The button was clicked'); },
 *   error(err) { console.error(err); },
 * });
 * @param {Function} [errorFactory] A factory function called to produce the
 * error to be thrown when the source observable completes without emitting a
 * value.
 */

var throwIfEmpty = function throwIfEmpty(errorFactory) {
  if (errorFactory === void 0) {
    errorFactory = defaultErrorFactory;
  }

  return Object(_tap__WEBPACK_IMPORTED_MODULE_0__["tap"])({
    hasValue: false,
    next: function next() {
      this.hasValue = true;
    },
    complete: function complete() {
      if (!this.hasValue) {
        throw errorFactory();
      }
    }
  });
};

function defaultErrorFactory() {
  return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__["EmptyError"]();
}

/***/ }),
/* 393 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return tap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(284);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(271);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source as long as errors don't occur.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @name tap
 */

function tap(nextOrObserver, error, complete) {
  return function tapOperatorFunction(source) {
    return source.lift(new DoOperator(nextOrObserver, error, complete));
  };
}

var DoOperator =
/*@__PURE__*/
function () {
  function DoOperator(nextOrObserver, error, complete) {
    this.nextOrObserver = nextOrObserver;
    this.error = error;
    this.complete = complete;
  }

  DoOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
  };

  return DoOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var TapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TapSubscriber, _super);

  function TapSubscriber(destination, observerOrNext, error, complete) {
    var _this = _super.call(this, destination) || this;

    _this._tapNext = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
    _this._tapError = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
    _this._tapComplete = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
    _this._tapError = error || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
    _this._tapComplete = complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];

    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(observerOrNext)) {
      _this._context = _this;
      _this._tapNext = observerOrNext;
    } else if (observerOrNext) {
      _this._context = observerOrNext;
      _this._tapNext = observerOrNext.next || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
      _this._tapError = observerOrNext.error || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
      _this._tapComplete = observerOrNext.complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
    }

    return _this;
  }

  TapSubscriber.prototype._next = function (value) {
    try {
      this._tapNext.call(this._context, value);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(value);
  };

  TapSubscriber.prototype._error = function (err) {
    try {
      this._tapError.call(this._context, err);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.error(err);
  };

  TapSubscriber.prototype._complete = function () {
    try {
      this._tapComplete.call(this._context);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    return this.destination.complete();
  };

  return TapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 394 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "take", function() { return take; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(320);
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(302);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */

function take(count) {
  return function (source) {
    if (count === 0) {
      return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__["empty"])();
    } else {
      return source.lift(new TakeOperator(count));
    }
  };
}

var TakeOperator =
/*@__PURE__*/
function () {
  function TakeOperator(total) {
    this.total = total;

    if (this.total < 0) {
      throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"]();
    }
  }

  TakeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TakeSubscriber(subscriber, this.total));
  };

  return TakeOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var TakeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeSubscriber, _super);

  function TakeSubscriber(destination, total) {
    var _this = _super.call(this, destination) || this;

    _this.total = total;
    _this.count = 0;
    return _this;
  }

  TakeSubscriber.prototype._next = function (value) {
    var total = this.total;
    var count = ++this.count;

    if (count <= total) {
      this.destination.next(value);

      if (count === total) {
        this.destination.complete();
        this.unsubscribe();
      }
    }
  };

  return TakeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 395 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return every; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 *
 * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>
 *  Observable.of(1, 2, 3, 4, 5, 6)
 *     .every(x => x < 5)
 *     .subscribe(x => console.log(x)); // -> false
 *
 * @param {function} predicate A function for determining if an item meets a specified condition.
 * @param {any} [thisArg] Optional object to use for `this` in the callback.
 * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */

function every(predicate, thisArg) {
  return function (source) {
    return source.lift(new EveryOperator(predicate, thisArg, source));
  };
}

var EveryOperator =
/*@__PURE__*/
function () {
  function EveryOperator(predicate, thisArg, source) {
    this.predicate = predicate;
    this.thisArg = thisArg;
    this.source = source;
  }

  EveryOperator.prototype.call = function (observer, source) {
    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
  };

  return EveryOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var EverySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](EverySubscriber, _super);

  function EverySubscriber(destination, predicate, thisArg, source) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.thisArg = thisArg;
    _this.source = source;
    _this.index = 0;
    _this.thisArg = thisArg || _this;
    return _this;
  }

  EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
    this.destination.next(everyValueMatch);
    this.destination.complete();
  };

  EverySubscriber.prototype._next = function (value) {
    var result = false;

    try {
      result = this.predicate.call(this.thisArg, value, this.index++, this.source);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    if (!result) {
      this.notifyComplete(false);
    }
  };

  EverySubscriber.prototype._complete = function () {
    this.notifyComplete(true);
  };

  return EverySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 396 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return exhaust; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable that takes a source of Observables and propagates the first observable
 * exclusively until it completes before subscribing to the next.
 * @method exhaust
 * @owner Observable
 */

function exhaust() {
  return function (source) {
    return source.lift(new SwitchFirstOperator());
  };
}

var SwitchFirstOperator =
/*@__PURE__*/
function () {
  function SwitchFirstOperator() {}

  SwitchFirstOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SwitchFirstSubscriber(subscriber));
  };

  return SwitchFirstOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SwitchFirstSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SwitchFirstSubscriber, _super);

  function SwitchFirstSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.hasCompleted = false;
    _this.hasSubscription = false;
    return _this;
  }

  SwitchFirstSubscriber.prototype._next = function (value) {
    if (!this.hasSubscription) {
      this.hasSubscription = true;
      this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, value));
    }
  };

  SwitchFirstSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (!this.hasSubscription) {
      this.destination.complete();
    }
  };

  SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
    this.remove(innerSub);
    this.hasSubscription = false;

    if (this.hasCompleted) {
      this.destination.complete();
    }
  };

  return SwitchFirstSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 397 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return exhaustMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(324);
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(338);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */

function exhaustMap(project, resultSelector) {
  if (resultSelector) {
    // DEPRECATED PATH
    return function (source) {
      return source.pipe(exhaustMap(function (a, i) {
        return Object(_observable_from__WEBPACK_IMPORTED_MODULE_4__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return function (source) {
    return source.lift(new ExhauseMapOperator(project));
  };
}

var ExhauseMapOperator =
/*@__PURE__*/
function () {
  function ExhauseMapOperator(project) {
    this.project = project;
  }

  ExhauseMapOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
  };

  return ExhauseMapOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var ExhaustMapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExhaustMapSubscriber, _super);

  function ExhaustMapSubscriber(destination, project) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.hasSubscription = false;
    _this.hasCompleted = false;
    _this.index = 0;
    return _this;
  }

  ExhaustMapSubscriber.prototype._next = function (value) {
    if (!this.hasSubscription) {
      this.tryNext(value);
    }
  };

  ExhaustMapSubscriber.prototype.tryNext = function (value) {
    var index = this.index++;
    var destination = this.destination;

    try {
      var result = this.project(value, index);
      this.hasSubscription = true;
      this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, result, value, index));
    } catch (err) {
      destination.error(err);
    }
  };

  ExhaustMapSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (!this.hasSubscription) {
      this.destination.complete();
    }
  };

  ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  ExhaustMapSubscriber.prototype.notifyError = function (err) {
    this.destination.error(err);
  };

  ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {
    this.remove(innerSub);
    this.hasSubscription = false;

    if (this.hasCompleted) {
      this.destination.complete();
    }
  };

  return ExhaustMapSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 398 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return expand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandOperator", function() { return ExpandOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandSubscriber", function() { return ExpandSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(279);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */

function expand(project, concurrent, scheduler) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  if (scheduler === void 0) {
    scheduler = undefined;
  }

  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
  return function (source) {
    return source.lift(new ExpandOperator(project, concurrent, scheduler));
  };
}

var ExpandOperator =
/*@__PURE__*/
function () {
  function ExpandOperator(project, concurrent, scheduler) {
    this.project = project;
    this.concurrent = concurrent;
    this.scheduler = scheduler;
  }

  ExpandOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
  };

  return ExpandOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var ExpandSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExpandSubscriber, _super);

  function ExpandSubscriber(destination, project, concurrent, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.concurrent = concurrent;
    _this.scheduler = scheduler;
    _this.index = 0;
    _this.active = 0;
    _this.hasCompleted = false;

    if (concurrent < Number.POSITIVE_INFINITY) {
      _this.buffer = [];
    }

    return _this;
  }

  ExpandSubscriber.dispatch = function (arg) {
    var subscriber = arg.subscriber,
        result = arg.result,
        value = arg.value,
        index = arg.index;
    subscriber.subscribeToProjection(result, value, index);
  };

  ExpandSubscriber.prototype._next = function (value) {
    var destination = this.destination;

    if (destination.closed) {
      this._complete();

      return;
    }

    var index = this.index++;

    if (this.active < this.concurrent) {
      destination.next(value);
      var result = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_1__["tryCatch"])(this.project)(value, index);

      if (result === _util_errorObject__WEBPACK_IMPORTED_MODULE_2__["errorObject"]) {
        destination.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_2__["errorObject"].e);
      } else if (!this.scheduler) {
        this.subscribeToProjection(result, value, index);
      } else {
        var state = {
          subscriber: this,
          result: result,
          value: value,
          index: index
        };
        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
      }
    } else {
      this.buffer.push(value);
    }
  };

  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
    this.active++;
    this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, result, value, index));
  };

  ExpandSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (this.hasCompleted && this.active === 0) {
      this.destination.complete();
    }
  };

  ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this._next(innerValue);
  };

  ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
    var buffer = this.buffer;
    this.remove(innerSub);
    this.active--;

    if (buffer && buffer.length > 0) {
      this._next(buffer.shift());
    }

    if (this.hasCompleted && this.active === 0) {
      this.destination.complete();
    }
  };

  return ExpandSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);



/***/ }),
/* 399 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return finalize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(275);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */



/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback Function to be called when source terminates.
 * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */

function finalize(callback) {
  return function (source) {
    return source.lift(new FinallyOperator(callback));
  };
}

var FinallyOperator =
/*@__PURE__*/
function () {
  function FinallyOperator(callback) {
    this.callback = callback;
  }

  FinallyOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new FinallySubscriber(subscriber, this.callback));
  };

  return FinallyOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var FinallySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FinallySubscriber, _super);

  function FinallySubscriber(destination, callback) {
    var _this = _super.call(this, destination) || this;

    _this.add(new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"](callback));

    return _this;
  }

  return FinallySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 400 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueOperator", function() { return FindValueOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueSubscriber", function() { return FindValueSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */

function find(predicate, thisArg) {
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate is not a function');
  }

  return function (source) {
    return source.lift(new FindValueOperator(predicate, source, false, thisArg));
  };
}

var FindValueOperator =
/*@__PURE__*/
function () {
  function FindValueOperator(predicate, source, yieldIndex, thisArg) {
    this.predicate = predicate;
    this.source = source;
    this.yieldIndex = yieldIndex;
    this.thisArg = thisArg;
  }

  FindValueOperator.prototype.call = function (observer, source) {
    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
  };

  return FindValueOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var FindValueSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FindValueSubscriber, _super);

  function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.source = source;
    _this.yieldIndex = yieldIndex;
    _this.thisArg = thisArg;
    _this.index = 0;
    return _this;
  }

  FindValueSubscriber.prototype.notifyComplete = function (value) {
    var destination = this.destination;
    destination.next(value);
    destination.complete();
  };

  FindValueSubscriber.prototype._next = function (value) {
    var _a = this,
        predicate = _a.predicate,
        thisArg = _a.thisArg;

    var index = this.index++;

    try {
      var result = predicate.call(thisArg || this, value, index, this.source);

      if (result) {
        this.notifyComplete(this.yieldIndex ? index : value);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  FindValueSubscriber.prototype._complete = function () {
    this.notifyComplete(this.yieldIndex ? -1 : undefined);
  };

  return FindValueSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);



/***/ }),
/* 401 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return findIndex; });
/* harmony import */ var _operators_find__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(400);
/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */

/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */

function findIndex(predicate, thisArg) {
  return function (source) {
    return source.lift(new _operators_find__WEBPACK_IMPORTED_MODULE_0__["FindValueOperator"](predicate, source, true, thisArg));
  };
}

/***/ }),
/* 402 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(321);
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(391);
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(394);
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(382);
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(392);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(319);
/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */






/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} An Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */

function first(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) {
      return predicate(v, i, source);
    }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_take__WEBPACK_IMPORTED_MODULE_2__["take"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__["throwIfEmpty"])(function () {
      return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"]();
    }));
  };
}

/***/ }),
/* 403 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return ignoreElements; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} An empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */

function ignoreElements() {
  return function ignoreElementsOperatorFunction(source) {
    return source.lift(new IgnoreElementsOperator());
  };
}

var IgnoreElementsOperator =
/*@__PURE__*/
function () {
  function IgnoreElementsOperator() {}

  IgnoreElementsOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new IgnoreElementsSubscriber(subscriber));
  };

  return IgnoreElementsOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var IgnoreElementsSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](IgnoreElementsSubscriber, _super);

  function IgnoreElementsSubscriber() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  IgnoreElementsSubscriber.prototype._next = function (unused) {// Do nothing
  };

  return IgnoreElementsSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 404 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return isEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function isEmpty() {
  return function (source) {
    return source.lift(new IsEmptyOperator());
  };
}

var IsEmptyOperator =
/*@__PURE__*/
function () {
  function IsEmptyOperator() {}

  IsEmptyOperator.prototype.call = function (observer, source) {
    return source.subscribe(new IsEmptySubscriber(observer));
  };

  return IsEmptyOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var IsEmptySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](IsEmptySubscriber, _super);

  function IsEmptySubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
    var destination = this.destination;
    destination.next(isEmpty);
    destination.complete();
  };

  IsEmptySubscriber.prototype._next = function (value) {
    this.notifyComplete(false);
  };

  IsEmptySubscriber.prototype._complete = function () {
    this.notifyComplete(true);
  };

  return IsEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 405 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return last; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(321);
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(391);
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(406);
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(392);
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(382);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(319);
/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */






/**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} [predicate] - The condition any source emitted item has to satisfy.
 * @param {any} [defaultValue] - An optional default value to provide if last
 * predicate isn't met or no values were emitted.
 * @return {Observable} An Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 */

function last(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) {
      return predicate(v, i, source);
    }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_takeLast__WEBPACK_IMPORTED_MODULE_2__["takeLast"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__["throwIfEmpty"])(function () {
      return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"]();
    }));
  };
}

/***/ }),
/* 406 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return takeLast; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(320);
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(302);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.pipe(takeLast(3));
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */

function takeLast(count) {
  return function takeLastOperatorFunction(source) {
    if (count === 0) {
      return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__["empty"])();
    } else {
      return source.lift(new TakeLastOperator(count));
    }
  };
}

var TakeLastOperator =
/*@__PURE__*/
function () {
  function TakeLastOperator(total) {
    this.total = total;

    if (this.total < 0) {
      throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"]();
    }
  }

  TakeLastOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
  };

  return TakeLastOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var TakeLastSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeLastSubscriber, _super);

  function TakeLastSubscriber(destination, total) {
    var _this = _super.call(this, destination) || this;

    _this.total = total;
    _this.ring = new Array();
    _this.count = 0;
    return _this;
  }

  TakeLastSubscriber.prototype._next = function (value) {
    var ring = this.ring;
    var total = this.total;
    var count = this.count++;

    if (ring.length < total) {
      ring.push(value);
    } else {
      var index = count % total;
      ring[index] = value;
    }
  };

  TakeLastSubscriber.prototype._complete = function () {
    var destination = this.destination;
    var count = this.count;

    if (count > 0) {
      var total = this.count >= this.total ? this.total : this.count;
      var ring = this.ring;

      for (var i = 0; i < total; i++) {
        var idx = count++ % total;
        destination.next(ring[idx]);
      }
    }

    destination.complete();
  };

  return TakeLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 407 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return mapTo; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */

function mapTo(value) {
  return function (source) {
    return source.lift(new MapToOperator(value));
  };
}

var MapToOperator =
/*@__PURE__*/
function () {
  function MapToOperator(value) {
    this.value = value;
  }

  MapToOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MapToSubscriber(subscriber, this.value));
  };

  return MapToOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var MapToSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapToSubscriber, _super);

  function MapToSubscriber(destination, value) {
    var _this = _super.call(this, destination) || this;

    _this.value = value;
    return _this;
  }

  MapToSubscriber.prototype._next = function (x) {
    this.destination.next(this.value);
  };

  return MapToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 408 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return materialize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(301);
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - Notification {kind: "N", value: "A", error: undefined, hasValue: true}
 * // - Notification {kind: "N", value: "B", error: undefined, hasValue: true}
 * // - Notification {kind: "E", value: undefined, error: TypeError:
 * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x
 * //   [as project] (http://1…, hasValue: false}
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */

function materialize() {
  return function materializeOperatorFunction(source) {
    return source.lift(new MaterializeOperator());
  };
}

var MaterializeOperator =
/*@__PURE__*/
function () {
  function MaterializeOperator() {}

  MaterializeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MaterializeSubscriber(subscriber));
  };

  return MaterializeOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var MaterializeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MaterializeSubscriber, _super);

  function MaterializeSubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  MaterializeSubscriber.prototype._next = function (value) {
    this.destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createNext(value));
  };

  MaterializeSubscriber.prototype._error = function (err) {
    var destination = this.destination;
    destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createError(err));
    destination.complete();
  };

  MaterializeSubscriber.prototype._complete = function () {
    var destination = this.destination;
    destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createComplete());
    destination.complete();
  };

  return MaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 409 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(410);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

/**
 * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the largest value.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @example <caption>Get the maximal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .max()
 *   .subscribe(x => console.log(x)); // -> 8
 *
 * @example <caption>Use a comparer function to get the maximal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'
 * }
 *
 * @see {@link min}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable} An Observable that emits item with the largest value.
 * @method max
 * @owner Observable
 */

function max(comparer) {
  var max = typeof comparer === 'function' ? function (x, y) {
    return comparer(x, y) > 0 ? x : y;
  } : function (x, y) {
    return x > y ? x : y;
  };
  return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(max);
}

/***/ }),
/* 410 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(411);
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(406);
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(382);
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(283);
/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */




/* tslint:enable:max-line-length */

/**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */

function reduce(accumulator, seed) {
  // providing a seed of `undefined` *should* be valid and trigger
  // hasSeed! so don't use `seed !== undefined` checks!
  // For this reason, we have to check it here at the original call site
  // otherwise inside Operator/Subscriber we won't know if `undefined`
  // means they didn't provide anything or if they literally provided `undefined`
  if (arguments.length >= 2) {
    return function reduceOperatorFunctionWithSeed(source) {
      return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(accumulator, seed), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1), Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__["defaultIfEmpty"])(seed))(source);
    };
  }

  return function reduceOperatorFunction(source) {
    return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(function (acc, value, index) {
      return accumulator(acc, value, index + 1);
    }), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1))(source);
  };
}

/***/ }),
/* 411 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return scan; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/* tslint:enable:max-line-length */

/**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */

function scan(accumulator, seed) {
  var hasSeed = false; // providing a seed of `undefined` *should* be valid and trigger
  // hasSeed! so don't use `seed !== undefined` checks!
  // For this reason, we have to check it here at the original call site
  // otherwise inside Operator/Subscriber we won't know if `undefined`
  // means they didn't provide anything or if they literally provided `undefined`

  if (arguments.length >= 2) {
    hasSeed = true;
  }

  return function scanOperatorFunction(source) {
    return source.lift(new ScanOperator(accumulator, seed, hasSeed));
  };
}

var ScanOperator =
/*@__PURE__*/
function () {
  function ScanOperator(accumulator, seed, hasSeed) {
    if (hasSeed === void 0) {
      hasSeed = false;
    }

    this.accumulator = accumulator;
    this.seed = seed;
    this.hasSeed = hasSeed;
  }

  ScanOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
  };

  return ScanOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var ScanSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ScanSubscriber, _super);

  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
    var _this = _super.call(this, destination) || this;

    _this.accumulator = accumulator;
    _this._seed = _seed;
    _this.hasSeed = hasSeed;
    _this.index = 0;
    return _this;
  }

  Object.defineProperty(ScanSubscriber.prototype, "seed", {
    get: function get() {
      return this._seed;
    },
    set: function set(value) {
      this.hasSeed = true;
      this._seed = value;
    },
    enumerable: true,
    configurable: true
  });

  ScanSubscriber.prototype._next = function (value) {
    if (!this.hasSeed) {
      this.seed = value;
      this.destination.next(value);
    } else {
      return this._tryNext(value);
    }
  };

  ScanSubscriber.prototype._tryNext = function (value) {
    var index = this.index++;
    var result;

    try {
      result = this.accumulator(this.seed, value, index);
    } catch (err) {
      this.destination.error(err);
    }

    this.seed = result;
    this.destination.next(result);
  };

  return ScanSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 412 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _observable_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(355);
/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * @deprecated Deprecated in favor of static merge.
 */

function merge() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function (source) {
    return source.lift.call(_observable_merge__WEBPACK_IMPORTED_MODULE_0__["merge"].apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 413 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return mergeMapTo; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(346);
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable`
 * @method mergeMapTo
 * @owner Observable
 */

function mergeMapTo(innerObservable, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  if (typeof resultSelector === 'function') {
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () {
      return innerObservable;
    }, resultSelector, concurrent);
  }

  if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () {
    return innerObservable;
  }, concurrent);
}

/***/ }),
/* 414 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return mergeScan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanOperator", function() { return MergeScanOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanSubscriber", function() { return MergeScanSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(279);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(328);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(327);
/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */





/**
 * Applies an accumulator function over the source Observable where the
 * accumulator function itself returns an Observable, then each intermediate
 * Observable returned is merged into the output Observable.
 *
 * <span class="informal">It's like {@link scan}, but the Observables returned
 * by the accumulator are merged into the outer Observable.</span>
 *
 * @example <caption>Count the number of click events</caption>
 * const click$ = Rx.Observable.fromEvent(document, 'click');
 * const one$ = click$.mapTo(1);
 * const seed = 0;
 * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);
 * count$.subscribe(x => console.log(x));
 *
 * // Results:
 * 1
 * 2
 * 3
 * 4
 * // ...and so on for each click
 *
 * @param {function(acc: R, value: T): Observable<R>} accumulator
 * The accumulator function called on each source value.
 * @param seed The initial accumulation value.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of
 * input Observables being subscribed to concurrently.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method mergeScan
 * @owner Observable
 */

function mergeScan(accumulator, seed, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  return function (source) {
    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));
  };
}

var MergeScanOperator =
/*@__PURE__*/
function () {
  function MergeScanOperator(accumulator, seed, concurrent) {
    this.accumulator = accumulator;
    this.seed = seed;
    this.concurrent = concurrent;
  }

  MergeScanOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
  };

  return MergeScanOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var MergeScanSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MergeScanSubscriber, _super);

  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
    var _this = _super.call(this, destination) || this;

    _this.accumulator = accumulator;
    _this.acc = acc;
    _this.concurrent = concurrent;
    _this.hasValue = false;
    _this.hasCompleted = false;
    _this.buffer = [];
    _this.active = 0;
    _this.index = 0;
    return _this;
  }

  MergeScanSubscriber.prototype._next = function (value) {
    if (this.active < this.concurrent) {
      var index = this.index++;
      var ish = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_1__["tryCatch"])(this.accumulator)(this.acc, value);
      var destination = this.destination;

      if (ish === _util_errorObject__WEBPACK_IMPORTED_MODULE_2__["errorObject"]) {
        destination.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_2__["errorObject"].e);
      } else {
        this.active++;

        this._innerSub(ish, value, index);
      }
    } else {
      this.buffer.push(value);
    }
  };

  MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
    this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, ish, value, index));
  };

  MergeScanSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (this.active === 0 && this.buffer.length === 0) {
      if (this.hasValue === false) {
        this.destination.next(this.acc);
      }

      this.destination.complete();
    }
  };

  MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var destination = this.destination;
    this.acc = innerValue;
    this.hasValue = true;
    destination.next(innerValue);
  };

  MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
    var buffer = this.buffer;
    this.remove(innerSub);
    this.active--;

    if (buffer.length > 0) {
      this._next(buffer.shift());
    } else if (this.active === 0 && this.hasCompleted) {
      if (this.hasValue === false) {
        this.destination.next(this.acc);
      }

      this.destination.complete();
    }
  };

  return MergeScanSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__["OuterSubscriber"]);



/***/ }),
/* 415 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(410);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

/**
 * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the smallest value.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @example <caption>Get the minimal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .min()
 *   .subscribe(x => console.log(x)); // -> 2
 *
 * @example <caption>Use a comparer function to get the minimal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'
 * }
 *
 * @see {@link max}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable<R>} An Observable that emits item with the smallest value.
 * @method min
 * @owner Observable
 */

function min(comparer) {
  var min = typeof comparer === 'function' ? function (x, y) {
    return comparer(x, y) < 0 ? x : y;
  } : function (x, y) {
    return x < y ? x : y;
  };
  return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(min);
}

/***/ }),
/* 416 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return multicast; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MulticastOperator", function() { return MulticastOperator; });
/* harmony import */ var _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(285);
/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * Returns an Observable that emits the results of invoking a specified selector on items
 * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through
 * which the source sequence's elements will be multicast to the selector function
 * or Subject to push source elements into.
 * @param {Function} [selector] - Optional selector function that can use the multicasted source stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the given source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable} An Observable that emits the results of invoking the selector
 * on the items emitted by a `ConnectableObservable` that shares a single subscription to
 * the underlying stream.
 * @method multicast
 * @owner Observable
 */

function multicast(subjectOrSubjectFactory, selector) {
  return function multicastOperatorFunction(source) {
    var subjectFactory;

    if (typeof subjectOrSubjectFactory === 'function') {
      subjectFactory = subjectOrSubjectFactory;
    } else {
      subjectFactory = function subjectFactory() {
        return subjectOrSubjectFactory;
      };
    }

    if (typeof selector === 'function') {
      return source.lift(new MulticastOperator(subjectFactory, selector));
    }

    var connectable = Object.create(source, _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__["connectableObservableDescriptor"]);
    connectable.source = source;
    connectable.subjectFactory = subjectFactory;
    return connectable;
  };
}

var MulticastOperator =
/*@__PURE__*/
function () {
  function MulticastOperator(subjectFactory, selector) {
    this.subjectFactory = subjectFactory;
    this.selector = selector;
  }

  MulticastOperator.prototype.call = function (subscriber, source) {
    var selector = this.selector;
    var subject = this.subjectFactory();
    var subscription = selector(subject).subscribe(subscriber);
    subscription.add(source.subscribe(subject));
    return subscription;
  };

  return MulticastOperator;
}();



/***/ }),
/* 417 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNextStatic", function() { return onErrorResumeNextStatic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(338);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(276);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one
 * that was passed.
 *
 * <span class="informal">Execute series of Observables no matter what, even if it means swallowing errors.</span>
 *
 * <img src="./img/onErrorResumeNext.png" width="100%">
 *
 * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as
 * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same
 * as the source.
 *
 * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.
 * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`
 * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting
 * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another
 * Observable in provided series, no matter if previous Observable completed or ended with an error. This will
 * be happening until there is no more Observables left in the series, at which point returned Observable will
 * complete - even if the last subscribed stream ended with an error.
 *
 * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive
 * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable
 * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with
 * an error.
 *
 * Note that you do not get any access to errors emitted by the Observables. In particular do not
 * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take
 * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.
 *
 *
 * @example <caption>Subscribe to the next Observable after map fails</caption>
 * Rx.Observable.of(1, 2, 3, 0)
 *   .map(x => {
 *       if (x === 0) { throw Error(); }
         return 10 / x;
 *   })
 *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))
 *   .subscribe(
 *     val => console.log(val),
 *     err => console.log(err),          // Will never be called.
 *     () => console.log('that\'s it!')
 *   );
 *
 * // Logs:
 * // 10
 * // 5
 * // 3.3333333333333335
 * // 1
 * // 2
 * // 3
 * // "that's it!"
 *
 * @see {@link concat}
 * @see {@link catch}
 *
 * @param {...ObservableInput} observables Observables passed either directly or as an array.
 * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes
 * to the next passed Observable and so on, until it completes or runs out of Observables.
 * @method onErrorResumeNext
 * @owner Observable
 */

function onErrorResumeNext() {
  var nextSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    nextSources[_i] = arguments[_i];
  }

  if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(nextSources[0])) {
    nextSources = nextSources[0];
  }

  return function (source) {
    return source.lift(new OnErrorResumeNextOperator(nextSources));
  };
}
/* tslint:enable:max-line-length */

function onErrorResumeNextStatic() {
  var nextSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    nextSources[_i] = arguments[_i];
  }

  var source = null;

  if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(nextSources[0])) {
    nextSources = nextSources[0];
  }

  source = nextSources.shift();
  return Object(_observable_from__WEBPACK_IMPORTED_MODULE_1__["from"])(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}

var OnErrorResumeNextOperator =
/*@__PURE__*/
function () {
  function OnErrorResumeNextOperator(nextSources) {
    this.nextSources = nextSources;
  }

  OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
  };

  return OnErrorResumeNextOperator;
}();

var OnErrorResumeNextSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OnErrorResumeNextSubscriber, _super);

  function OnErrorResumeNextSubscriber(destination, nextSources) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.nextSources = nextSources;
    return _this;
  }

  OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype._error = function (err) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype._complete = function () {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
    var next = this.nextSources.shift();

    if (next) {
      this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, next));
    } else {
      this.destination.complete();
    }
  };

  return OnErrorResumeNextSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);

/***/ }),
/* 418 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return pairwise; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */

function pairwise() {
  return function (source) {
    return source.lift(new PairwiseOperator());
  };
}

var PairwiseOperator =
/*@__PURE__*/
function () {
  function PairwiseOperator() {}

  PairwiseOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new PairwiseSubscriber(subscriber));
  };

  return PairwiseOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var PairwiseSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PairwiseSubscriber, _super);

  function PairwiseSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.hasPrev = false;
    return _this;
  }

  PairwiseSubscriber.prototype._next = function (value) {
    if (this.hasPrev) {
      this.destination.next([this.prev, value]);
    } else {
      this.hasPrev = true;
    }

    this.prev = value;
  };

  return PairwiseSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 419 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(420);
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(391);
/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */


/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */

function partition(predicate, thisArg) {
  return function (source) {
    return [Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(predicate, thisArg)(source), Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__["not"])(predicate, thisArg))(source)];
  };
}

/***/ }),
/* 420 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "not", function() { return not; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
  function notPred() {
    return !notPred.pred.apply(notPred.thisArg, arguments);
  }

  notPred.pred = pred;
  notPred.thisArg = thisArg;
  return notPred;
}

/***/ }),
/* 421 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return pluck; });
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(324);
/** PURE_IMPORTS_START _map PURE_IMPORTS_END */

/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} A new Observable of property values from the source values.
 * @method pluck
 * @owner Observable
 */

function pluck() {
  var properties = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    properties[_i] = arguments[_i];
  }

  var length = properties.length;

  if (length === 0) {
    throw new Error('list of properties cannot be empty.');
  }

  return function (source) {
    return Object(_map__WEBPACK_IMPORTED_MODULE_0__["map"])(plucker(properties, length))(source);
  };
}

function plucker(props, length) {
  var mapper = function mapper(x) {
    var currentProp = x;

    for (var i = 0; i < length; i++) {
      var p = currentProp[props[i]];

      if (typeof p !== 'undefined') {
        currentProp = p;
      } else {
        return undefined;
      }
    }

    return currentProp;
  };

  return mapper;
}

/***/ }),
/* 422 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return publish; });
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(286);
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(416);
/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */


/* tslint:enable:max-line-length */

/**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times
 * as needed, without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */

function publish(selector) {
  return selector ? Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () {
    return new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
  }, selector) : Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"]());
}

/***/ }),
/* 423 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return publishBehavior; });
/* harmony import */ var _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(291);
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(416);
/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */


/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */

function publishBehavior(value) {
  return function (source) {
    return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__["BehaviorSubject"](value))(source);
  };
}

/***/ }),
/* 424 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return publishLast; });
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(309);
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(416);
/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */


function publishLast() {
  return function (source) {
    return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__["AsyncSubject"]())(source);
  };
}

/***/ }),
/* 425 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return publishReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(416);
/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */


/* tslint:enable:max-line-length */

function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
    scheduler = selectorOrScheduler;
  }

  var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
  var subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
  return function (source) {
    return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () {
      return subject;
    }, selector)(source);
  };
}

/***/ }),
/* 426 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(276);
/* harmony import */ var _observable_race__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(359);
/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */


/* tslint:enable:max-line-length */

/**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables.
 * @param {...Observables} ...observables Sources used to race for which Observable emits first.
 * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */

function race() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function raceOperatorFunction(source) {
    // if the only argument is an array, it was most likely called with
    // `pair([obs1, obs2, ...])`
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(observables[0])) {
      observables = observables[0];
    }

    return source.lift.call(_observable_race__WEBPACK_IMPORTED_MODULE_1__["race"].apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 427 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return repeat; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(302);
/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */



/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */

function repeat(count) {
  if (count === void 0) {
    count = -1;
  }

  return function (source) {
    if (count === 0) {
      return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
    } else if (count < 0) {
      return source.lift(new RepeatOperator(-1, source));
    } else {
      return source.lift(new RepeatOperator(count - 1, source));
    }
  };
}

var RepeatOperator =
/*@__PURE__*/
function () {
  function RepeatOperator(count, source) {
    this.count = count;
    this.source = source;
  }

  RepeatOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
  };

  return RepeatOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var RepeatSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RepeatSubscriber, _super);

  function RepeatSubscriber(destination, count, source) {
    var _this = _super.call(this, destination) || this;

    _this.count = count;
    _this.source = source;
    return _this;
  }

  RepeatSubscriber.prototype.complete = function () {
    if (!this.isStopped) {
      var _a = this,
          source = _a.source,
          count = _a.count;

      if (count === 0) {
        return _super.prototype.complete.call(this);
      } else if (count > -1) {
        this.count = count - 1;
      }

      source.subscribe(this._unsubscribeAndRecycle());
    }
  };

  return RepeatSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 428 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return repeatWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(279);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */






/**
 * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source
 * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable
 * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise
 * this method will resubscribe to the source Observable.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with
 * which a user can `complete` or `error`, aborting the repetition.
 * @return {Observable} The source Observable modified with repeat logic.
 * @method repeatWhen
 * @owner Observable
 */

function repeatWhen(notifier) {
  return function (source) {
    return source.lift(new RepeatWhenOperator(notifier));
  };
}

var RepeatWhenOperator =
/*@__PURE__*/
function () {
  function RepeatWhenOperator(notifier) {
    this.notifier = notifier;
  }

  RepeatWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
  };

  return RepeatWhenOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var RepeatWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RepeatWhenSubscriber, _super);

  function RepeatWhenSubscriber(destination, notifier, source) {
    var _this = _super.call(this, destination) || this;

    _this.notifier = notifier;
    _this.source = source;
    _this.sourceIsBeingSubscribedTo = true;
    return _this;
  }

  RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.sourceIsBeingSubscribedTo = true;
    this.source.subscribe(this);
  };

  RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
    if (this.sourceIsBeingSubscribedTo === false) {
      return _super.prototype.complete.call(this);
    }
  };

  RepeatWhenSubscriber.prototype.complete = function () {
    this.sourceIsBeingSubscribedTo = false;

    if (!this.isStopped) {
      if (!this.retries) {
        this.subscribeToRetries();
      }

      if (!this.retriesSubscription || this.retriesSubscription.closed) {
        return _super.prototype.complete.call(this);
      }

      this._unsubscribeAndRecycle();

      this.notifications.next();
    }
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  RepeatWhenSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        notifications = _a.notifications,
        retriesSubscription = _a.retriesSubscription;

    if (notifications) {
      notifications.unsubscribe();
      this.notifications = null;
    }

    if (retriesSubscription) {
      retriesSubscription.unsubscribe();
      this.retriesSubscription = null;
    }

    this.retries = null;
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
    var _unsubscribe = this._unsubscribe;
    this._unsubscribe = null;

    _super.prototype._unsubscribeAndRecycle.call(this);

    this._unsubscribe = _unsubscribe;
    return this;
  };

  RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
    this.notifications = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
    var retries = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_2__["tryCatch"])(this.notifier)(this.notifications);

    if (retries === _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"]) {
      return _super.prototype.complete.call(this);
    }

    this.retries = retries;
    this.retriesSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__["subscribeToResult"])(this, retries);
  };

  return RepeatWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__["OuterSubscriber"]);

/***/ }),
/* 429 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return retry; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given
 * as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} count - Number of retry attempts before failing.
 * @return {Observable} The source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */

function retry(count) {
  if (count === void 0) {
    count = -1;
  }

  return function (source) {
    return source.lift(new RetryOperator(count, source));
  };
}

var RetryOperator =
/*@__PURE__*/
function () {
  function RetryOperator(count, source) {
    this.count = count;
    this.source = source;
  }

  RetryOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
  };

  return RetryOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var RetrySubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RetrySubscriber, _super);

  function RetrySubscriber(destination, count, source) {
    var _this = _super.call(this, destination) || this;

    _this.count = count;
    _this.source = source;
    return _this;
  }

  RetrySubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var _a = this,
          source = _a.source,
          count = _a.count;

      if (count === 0) {
        return _super.prototype.error.call(this, err);
      } else if (count > -1) {
        this.count = count - 1;
      }

      source.subscribe(this._unsubscribeAndRecycle());
    }
  };

  return RetrySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 430 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return retryWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(279);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */






/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.
 * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child
 * subscription. Otherwise this method will resubscribe to the source Observable.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a
 * user can `complete` or `error`, aborting the retry.
 * @return {Observable} The source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */

function retryWhen(notifier) {
  return function (source) {
    return source.lift(new RetryWhenOperator(notifier, source));
  };
}

var RetryWhenOperator =
/*@__PURE__*/
function () {
  function RetryWhenOperator(notifier, source) {
    this.notifier = notifier;
    this.source = source;
  }

  RetryWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
  };

  return RetryWhenOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var RetryWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RetryWhenSubscriber, _super);

  function RetryWhenSubscriber(destination, notifier, source) {
    var _this = _super.call(this, destination) || this;

    _this.notifier = notifier;
    _this.source = source;
    return _this;
  }

  RetryWhenSubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var errors = this.errors;
      var retries = this.retries;
      var retriesSubscription = this.retriesSubscription;

      if (!retries) {
        errors = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        retries = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_2__["tryCatch"])(this.notifier)(errors);

        if (retries === _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"]) {
          return _super.prototype.error.call(this, _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"].e);
        }

        retriesSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__["subscribeToResult"])(this, retries);
      } else {
        this.errors = null;
        this.retriesSubscription = null;
      }

      this._unsubscribeAndRecycle();

      this.errors = errors;
      this.retries = retries;
      this.retriesSubscription = retriesSubscription;
      errors.next(err);
    }
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  RetryWhenSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        errors = _a.errors,
        retriesSubscription = _a.retriesSubscription;

    if (errors) {
      errors.unsubscribe();
      this.errors = null;
    }

    if (retriesSubscription) {
      retriesSubscription.unsubscribe();
      this.retriesSubscription = null;
    }

    this.retries = null;
  };

  RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var _unsubscribe = this._unsubscribe;
    this._unsubscribe = null;

    this._unsubscribeAndRecycle();

    this._unsubscribe = _unsubscribe;
    this.source.subscribe(this);
  };

  return RetryWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__["OuterSubscriber"]);

/***/ }),
/* 431 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return sample; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */

function sample(notifier) {
  return function (source) {
    return source.lift(new SampleOperator(notifier));
  };
}

var SampleOperator =
/*@__PURE__*/
function () {
  function SampleOperator(notifier) {
    this.notifier = notifier;
  }

  SampleOperator.prototype.call = function (subscriber, source) {
    var sampleSubscriber = new SampleSubscriber(subscriber);
    var subscription = source.subscribe(sampleSubscriber);
    subscription.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(sampleSubscriber, this.notifier));
    return subscription;
  };

  return SampleOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SampleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SampleSubscriber, _super);

  function SampleSubscriber() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.hasValue = false;
    return _this;
  }

  SampleSubscriber.prototype._next = function (value) {
    this.value = value;
    this.hasValue = true;
  };

  SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.emitValue();
  };

  SampleSubscriber.prototype.notifyComplete = function () {
    this.emitValue();
  };

  SampleSubscriber.prototype.emitValue = function () {
    if (this.hasValue) {
      this.hasValue = false;
      this.destination.next(this.value);
    }
  };

  return SampleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 432 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return sampleTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(314);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */

function sampleTime(period, scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
  }

  return function (source) {
    return source.lift(new SampleTimeOperator(period, scheduler));
  };
}

var SampleTimeOperator =
/*@__PURE__*/
function () {
  function SampleTimeOperator(period, scheduler) {
    this.period = period;
    this.scheduler = scheduler;
  }

  SampleTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
  };

  return SampleTimeOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SampleTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SampleTimeSubscriber, _super);

  function SampleTimeSubscriber(destination, period, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.period = period;
    _this.scheduler = scheduler;
    _this.hasValue = false;

    _this.add(scheduler.schedule(dispatchNotification, period, {
      subscriber: _this,
      period: period
    }));

    return _this;
  }

  SampleTimeSubscriber.prototype._next = function (value) {
    this.lastValue = value;
    this.hasValue = true;
  };

  SampleTimeSubscriber.prototype.notifyNext = function () {
    if (this.hasValue) {
      this.hasValue = false;
      this.destination.next(this.lastValue);
    }
  };

  return SampleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

function dispatchNotification(state) {
  var subscriber = state.subscriber,
      period = state.period;
  subscriber.notifyNext();
  this.schedule(state, period);
}

/***/ }),
/* 433 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return sequenceEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualOperator", function() { return SequenceEqualOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualSubscriber", function() { return SequenceEqualSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(279);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */




/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Rx.Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo The observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence.
 * @method sequenceEqual
 * @owner Observable
 */

function sequenceEqual(compareTo, comparor) {
  return function (source) {
    return source.lift(new SequenceEqualOperator(compareTo, comparor));
  };
}

var SequenceEqualOperator =
/*@__PURE__*/
function () {
  function SequenceEqualOperator(compareTo, comparor) {
    this.compareTo = compareTo;
    this.comparor = comparor;
  }

  SequenceEqualOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));
  };

  return SequenceEqualOperator;
}();


/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */

var SequenceEqualSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SequenceEqualSubscriber, _super);

  function SequenceEqualSubscriber(destination, compareTo, comparor) {
    var _this = _super.call(this, destination) || this;

    _this.compareTo = compareTo;
    _this.comparor = comparor;
    _this._a = [];
    _this._b = [];
    _this._oneComplete = false;

    _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));

    return _this;
  }

  SequenceEqualSubscriber.prototype._next = function (value) {
    if (this._oneComplete && this._b.length === 0) {
      this.emit(false);
    } else {
      this._a.push(value);

      this.checkValues();
    }
  };

  SequenceEqualSubscriber.prototype._complete = function () {
    if (this._oneComplete) {
      this.emit(this._a.length === 0 && this._b.length === 0);
    } else {
      this._oneComplete = true;
    }
  };

  SequenceEqualSubscriber.prototype.checkValues = function () {
    var _c = this,
        _a = _c._a,
        _b = _c._b,
        comparor = _c.comparor;

    while (_a.length > 0 && _b.length > 0) {
      var a = _a.shift();

      var b = _b.shift();

      var areEqual = false;

      if (comparor) {
        areEqual = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_2__["tryCatch"])(comparor)(a, b);

        if (areEqual === _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"]) {
          this.destination.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"].e);
        }
      } else {
        areEqual = a === b;
      }

      if (!areEqual) {
        this.emit(false);
      }
    }
  };

  SequenceEqualSubscriber.prototype.emit = function (value) {
    var destination = this.destination;
    destination.next(value);
    destination.complete();
  };

  SequenceEqualSubscriber.prototype.nextB = function (value) {
    if (this._oneComplete && this._a.length === 0) {
      this.emit(false);
    } else {
      this._b.push(value);

      this.checkValues();
    }
  };

  return SequenceEqualSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);



var SequenceEqualCompareToSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SequenceEqualCompareToSubscriber, _super);

  function SequenceEqualCompareToSubscriber(destination, parent) {
    var _this = _super.call(this, destination) || this;

    _this.parent = parent;
    return _this;
  }

  SequenceEqualCompareToSubscriber.prototype._next = function (value) {
    this.parent.nextB(value);
  };

  SequenceEqualCompareToSubscriber.prototype._error = function (err) {
    this.parent.error(err);
  };

  SequenceEqualCompareToSubscriber.prototype._complete = function () {
    this.parent._complete();
  };

  return SequenceEqualCompareToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 434 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "share", function() { return share; });
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(416);
/* harmony import */ var _refCount__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(289);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(286);
/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */




function shareSubjectFactory() {
  return new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
}
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 * This is an alias for .multicast(() => new Subject()).refCount().
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.
 * @method share
 * @owner Observable
 */


function share() {
  return function (source) {
    return Object(_refCount__WEBPACK_IMPORTED_MODULE_1__["refCount"])()(Object(_multicast__WEBPACK_IMPORTED_MODULE_0__["multicast"])(shareSubjectFactory)(source));
  };
}

/***/ }),
/* 435 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return shareReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);
/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */

/**
 * @method shareReplay
 * @owner Observable
 */

function shareReplay(bufferSize, windowTime, scheduler) {
  return function (source) {
    return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));
  };
}

function shareReplayOperator(bufferSize, windowTime, scheduler) {
  var subject;
  var refCount = 0;
  var subscription;
  var hasError = false;
  var isComplete = false;
  return function shareReplayOperation(source) {
    refCount++;

    if (!subject || hasError) {
      hasError = false;
      subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
      subscription = source.subscribe({
        next: function next(value) {
          subject.next(value);
        },
        error: function error(err) {
          hasError = true;
          subject.error(err);
        },
        complete: function complete() {
          isComplete = true;
          subject.complete();
        }
      });
    }

    var innerSub = subject.subscribe(this);
    return function () {
      refCount--;
      innerSub.unsubscribe();

      if (subscription && refCount === 0 && isComplete) {
        subscription.unsubscribe();
      }
    };
  };
}

/***/ }),
/* 436 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "single", function() { return single; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(321);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */



/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable
 * emits items but none match the specified predicate then `undefined` is emiited.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches
 * the predicate or `undefined` when no items match.
 *
 * @method single
 * @owner Observable
 */

function single(predicate) {
  return function (source) {
    return source.lift(new SingleOperator(predicate, source));
  };
}

var SingleOperator =
/*@__PURE__*/
function () {
  function SingleOperator(predicate, source) {
    this.predicate = predicate;
    this.source = source;
  }

  SingleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
  };

  return SingleOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SingleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SingleSubscriber, _super);

  function SingleSubscriber(destination, predicate, source) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.source = source;
    _this.seenValue = false;
    _this.index = 0;
    return _this;
  }

  SingleSubscriber.prototype.applySingleValue = function (value) {
    if (this.seenValue) {
      this.destination.error('Sequence contains more than one element');
    } else {
      this.seenValue = true;
      this.singleValue = value;
    }
  };

  SingleSubscriber.prototype._next = function (value) {
    var index = this.index++;

    if (this.predicate) {
      this.tryNext(value, index);
    } else {
      this.applySingleValue(value);
    }
  };

  SingleSubscriber.prototype.tryNext = function (value, index) {
    try {
      if (this.predicate(value, index, this.source)) {
        this.applySingleValue(value);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  SingleSubscriber.prototype._complete = function () {
    var destination = this.destination;

    if (this.index > 0) {
      destination.next(this.seenValue ? this.singleValue : undefined);
      destination.complete();
    } else {
      destination.error(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__["EmptyError"]());
    }
  };

  return SingleSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 437 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return skip; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Returns an Observable that skips the first `count` items emitted by the source Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} count - The number of times, items emitted by source Observable should be skipped.
 * @return {Observable} An Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */

function skip(count) {
  return function (source) {
    return source.lift(new SkipOperator(count));
  };
}

var SkipOperator =
/*@__PURE__*/
function () {
  function SkipOperator(total) {
    this.total = total;
  }

  SkipOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SkipSubscriber(subscriber, this.total));
  };

  return SkipOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SkipSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipSubscriber, _super);

  function SkipSubscriber(destination, total) {
    var _this = _super.call(this, destination) || this;

    _this.total = total;
    _this.count = 0;
    return _this;
  }

  SkipSubscriber.prototype._next = function (x) {
    if (++this.count > this.total) {
      this.destination.next(x);
    }
  };

  return SkipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 438 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return skipLast; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(320);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */



/**
 * Skip the last `count` values emitted by the source Observable.
 *
 * <img src="./img/skipLast.png" width="100%">
 *
 * `skipLast` returns an Observable that accumulates a queue with a length
 * enough to store the first `count` values. As more values are received,
 * values are taken from the front of the queue and produced on the result
 * sequence. This causes values to be delayed.
 *
 * @example <caption>Skip the last 2 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 5);
 * var skipLastTwo = many.skipLast(2);
 * skipLastTwo.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 1 2 3
 *
 * @see {@link skip}
 * @see {@link skipUntil}
 * @see {@link skipWhile}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws
 * ArgumentOutOrRangeError if `i < 0`.
 *
 * @param {number} count Number of elements to skip from the end of the source Observable.
 * @returns {Observable<T>} An Observable that skips the last count values
 * emitted by the source Observable.
 * @method skipLast
 * @owner Observable
 */

function skipLast(count) {
  return function (source) {
    return source.lift(new SkipLastOperator(count));
  };
}

var SkipLastOperator =
/*@__PURE__*/
function () {
  function SkipLastOperator(_skipCount) {
    this._skipCount = _skipCount;

    if (this._skipCount < 0) {
      throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"]();
    }
  }

  SkipLastOperator.prototype.call = function (subscriber, source) {
    if (this._skipCount === 0) {
      // If we don't want to skip any values then just subscribe
      // to Subscriber without any further logic.
      return source.subscribe(new _Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"](subscriber));
    } else {
      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
    }
  };

  return SkipLastOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SkipLastSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipLastSubscriber, _super);

  function SkipLastSubscriber(destination, _skipCount) {
    var _this = _super.call(this, destination) || this;

    _this._skipCount = _skipCount;
    _this._count = 0;
    _this._ring = new Array(_skipCount);
    return _this;
  }

  SkipLastSubscriber.prototype._next = function (value) {
    var skipCount = this._skipCount;
    var count = this._count++;

    if (count < skipCount) {
      this._ring[count] = value;
    } else {
      var currentIndex = count % skipCount;
      var ring = this._ring;
      var oldValue = ring[currentIndex];
      ring[currentIndex] = value;
      this.destination.next(oldValue);
    }
  };

  return SkipLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 439 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return skipUntil; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */

function skipUntil(notifier) {
  return function (source) {
    return source.lift(new SkipUntilOperator(notifier));
  };
}

var SkipUntilOperator =
/*@__PURE__*/
function () {
  function SkipUntilOperator(notifier) {
    this.notifier = notifier;
  }

  SkipUntilOperator.prototype.call = function (destination, source) {
    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
  };

  return SkipUntilOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SkipUntilSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipUntilSubscriber, _super);

  function SkipUntilSubscriber(destination, notifier) {
    var _this = _super.call(this, destination) || this;

    _this.hasValue = false;

    _this.add(_this.innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, notifier));

    return _this;
  }

  SkipUntilSubscriber.prototype._next = function (value) {
    if (this.hasValue) {
      _super.prototype._next.call(this, value);
    }
  };

  SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.hasValue = true;
    this.innerSubscription.unsubscribe();
  };

  SkipUntilSubscriber.prototype.notifyComplete = function () {
    /* do nothing */
  };

  return SkipUntilSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 440 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return skipWhile; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - A function to test each item emitted from the source Observable.
 * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */

function skipWhile(predicate) {
  return function (source) {
    return source.lift(new SkipWhileOperator(predicate));
  };
}

var SkipWhileOperator =
/*@__PURE__*/
function () {
  function SkipWhileOperator(predicate) {
    this.predicate = predicate;
  }

  SkipWhileOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
  };

  return SkipWhileOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SkipWhileSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipWhileSubscriber, _super);

  function SkipWhileSubscriber(destination, predicate) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.skipping = true;
    _this.index = 0;
    return _this;
  }

  SkipWhileSubscriber.prototype._next = function (value) {
    var destination = this.destination;

    if (this.skipping) {
      this.tryCallPredicate(value);
    }

    if (!this.skipping) {
      destination.next(value);
    }
  };

  SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
    try {
      var result = this.predicate(value, this.index++);
      this.skipping = Boolean(result);
    } catch (err) {
      this.destination.error(err);
    }
  };

  return SkipWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 441 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return startWith; });
/* harmony import */ var _observable_fromArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(305);
/* harmony import */ var _observable_scalar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(307);
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(302);
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(337);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(304);
/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 * Returns an Observable that emits the items you specify as arguments before it begins to emit
 * items emitted by the source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {...T} values - Items you want the modified Observable to emit first.
 * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling
 * the emissions of the `next` notifications.
 * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */

function startWith() {
  var array = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    array[_i] = arguments[_i];
  }

  return function (source) {
    var scheduler = array[array.length - 1];

    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_4__["isScheduler"])(scheduler)) {
      array.pop();
    } else {
      scheduler = null;
    }

    var len = array.length;

    if (len === 1 && !scheduler) {
      return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_3__["concat"])(Object(_observable_scalar__WEBPACK_IMPORTED_MODULE_1__["scalar"])(array[0]), source);
    } else if (len > 0) {
      return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_3__["concat"])(Object(_observable_fromArray__WEBPACK_IMPORTED_MODULE_0__["fromArray"])(array, scheduler), source);
    } else {
      return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_3__["concat"])(Object(_observable_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])(scheduler), source);
    }
  };
}

/***/ }),
/* 442 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return subscribeOn; });
/* harmony import */ var _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(443);
/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */

/**
 * Asynchronously subscribes Observers to this Observable on the specified IScheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.
 * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.
 .
 * @method subscribeOn
 * @owner Observable
 */

function subscribeOn(scheduler, delay) {
  if (delay === void 0) {
    delay = 0;
  }

  return function subscribeOnOperatorFunction(source) {
    return source.lift(new SubscribeOnOperator(scheduler, delay));
  };
}

var SubscribeOnOperator =
/*@__PURE__*/
function () {
  function SubscribeOnOperator(scheduler, delay) {
    this.scheduler = scheduler;
    this.delay = delay;
  }

  SubscribeOnOperator.prototype.call = function (subscriber, source) {
    return new _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__["SubscribeOnObservable"](source, this.delay, this.scheduler).subscribe(subscriber);
  };

  return SubscribeOnOperator;
}();

/***/ }),
/* 443 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubscribeOnObservable", function() { return SubscribeOnObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(268);
/* harmony import */ var _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(310);
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(354);
/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */




/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */

var SubscribeOnObservable =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscribeOnObservable, _super);

  function SubscribeOnObservable(source, delayTime, scheduler) {
    if (delayTime === void 0) {
      delayTime = 0;
    }

    if (scheduler === void 0) {
      scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
    }

    var _this = _super.call(this) || this;

    _this.source = source;
    _this.delayTime = delayTime;
    _this.scheduler = scheduler;

    if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_3__["isNumeric"])(delayTime) || delayTime < 0) {
      _this.delayTime = 0;
    }

    if (!scheduler || typeof scheduler.schedule !== 'function') {
      _this.scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
    }

    return _this;
  }
  /** @nocollapse */


  SubscribeOnObservable.create = function (source, delay, scheduler) {
    if (delay === void 0) {
      delay = 0;
    }

    if (scheduler === void 0) {
      scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
    }

    return new SubscribeOnObservable(source, delay, scheduler);
  };
  /** @nocollapse */


  SubscribeOnObservable.dispatch = function (arg) {
    var source = arg.source,
        subscriber = arg.subscriber;
    return this.add(source.subscribe(subscriber));
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  SubscribeOnObservable.prototype._subscribe = function (subscriber) {
    var delay = this.delayTime;
    var source = this.source;
    var scheduler = this.scheduler;
    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
      source: source,
      subscriber: subscriber
    });
  };

  return SubscribeOnObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]);



/***/ }),
/* 444 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return switchAll; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(445);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(319);
/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */


function switchAll() {
  return Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"]);
}

/***/ }),
/* 445 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return switchMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(324);
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(338);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */

function switchMap(project, resultSelector) {
  if (typeof resultSelector === 'function') {
    return function (source) {
      return source.pipe(switchMap(function (a, i) {
        return Object(_observable_from__WEBPACK_IMPORTED_MODULE_4__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return function (source) {
    return source.lift(new SwitchMapOperator(project));
  };
}

var SwitchMapOperator =
/*@__PURE__*/
function () {
  function SwitchMapOperator(project) {
    this.project = project;
  }

  SwitchMapOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
  };

  return SwitchMapOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var SwitchMapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SwitchMapSubscriber, _super);

  function SwitchMapSubscriber(destination, project) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.index = 0;
    return _this;
  }

  SwitchMapSubscriber.prototype._next = function (value) {
    var result;
    var index = this.index++;

    try {
      result = this.project(value, index);
    } catch (error) {
      this.destination.error(error);
      return;
    }

    this._innerSub(result, value, index);
  };

  SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
    var innerSubscription = this.innerSubscription;

    if (innerSubscription) {
      innerSubscription.unsubscribe();
    }

    this.add(this.innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, result, value, index));
  };

  SwitchMapSubscriber.prototype._complete = function () {
    var innerSubscription = this.innerSubscription;

    if (!innerSubscription || innerSubscription.closed) {
      _super.prototype._complete.call(this);
    }
  };

  SwitchMapSubscriber.prototype._unsubscribe = function () {
    this.innerSubscription = null;
  };

  SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
    this.remove(innerSub);
    this.innerSubscription = null;

    if (this.isStopped) {
      _super.prototype._complete.call(this);
    }
  };

  SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  return SwitchMapSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 446 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return switchMapTo; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(445);
/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */

function switchMapTo(innerObservable, resultSelector) {
  return resultSelector ? Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () {
    return innerObservable;
  }, resultSelector) : Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () {
    return innerObservable;
  });
}

/***/ }),
/* 447 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return takeUntil; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits a value. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value, the output Observable stops mirroring the source Observable
 * and completes. If the `notifier` doesn't emit any value and completes
 * then `takeUntil` will pass all values.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */

function takeUntil(notifier) {
  return function (source) {
    return source.lift(new TakeUntilOperator(notifier));
  };
}

var TakeUntilOperator =
/*@__PURE__*/
function () {
  function TakeUntilOperator(notifier) {
    this.notifier = notifier;
  }

  TakeUntilOperator.prototype.call = function (subscriber, source) {
    var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
    var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(takeUntilSubscriber, this.notifier);

    if (notifierSubscription && !notifierSubscription.closed) {
      takeUntilSubscriber.add(notifierSubscription);
      return source.subscribe(takeUntilSubscriber);
    }

    return takeUntilSubscriber;
  };

  return TakeUntilOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var TakeUntilSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeUntilSubscriber, _super);

  function TakeUntilSubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.complete();
  };

  TakeUntilSubscriber.prototype.notifyComplete = function () {// noop
  };

  return TakeUntilSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 448 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return takeWhile; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */

function takeWhile(predicate) {
  return function (source) {
    return source.lift(new TakeWhileOperator(predicate));
  };
}

var TakeWhileOperator =
/*@__PURE__*/
function () {
  function TakeWhileOperator(predicate) {
    this.predicate = predicate;
  }

  TakeWhileOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));
  };

  return TakeWhileOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var TakeWhileSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeWhileSubscriber, _super);

  function TakeWhileSubscriber(destination, predicate) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.index = 0;
    return _this;
  }

  TakeWhileSubscriber.prototype._next = function (value) {
    var destination = this.destination;
    var result;

    try {
      result = this.predicate(value, this.index++);
    } catch (err) {
      destination.error(err);
      return;
    }

    this.nextOrComplete(value, result);
  };

  TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
    var destination = this.destination;

    if (Boolean(predicateResult)) {
      destination.next(value);
    } else {
      destination.complete();
    }
  };

  return TakeWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 449 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultThrottleConfig", function() { return defaultThrottleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return throttle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



var defaultThrottleConfig = {
  leading: true,
  trailing: false
};
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults
 * to `{ leading: true, trailing: false }`.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */

function throttle(durationSelector, config) {
  if (config === void 0) {
    config = defaultThrottleConfig;
  }

  return function (source) {
    return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));
  };
}

var ThrottleOperator =
/*@__PURE__*/
function () {
  function ThrottleOperator(durationSelector, leading, trailing) {
    this.durationSelector = durationSelector;
    this.leading = leading;
    this.trailing = trailing;
  }

  ThrottleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
  };

  return ThrottleOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc
 * @ignore
 * @extends {Ignored}
 */


var ThrottleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrottleSubscriber, _super);

  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.durationSelector = durationSelector;
    _this._leading = _leading;
    _this._trailing = _trailing;
    _this._hasValue = false;
    return _this;
  }

  ThrottleSubscriber.prototype._next = function (value) {
    this._hasValue = true;
    this._sendValue = value;

    if (!this._throttled) {
      if (this._leading) {
        this.send();
      } else {
        this.throttle(value);
      }
    }
  };

  ThrottleSubscriber.prototype.send = function () {
    var _a = this,
        _hasValue = _a._hasValue,
        _sendValue = _a._sendValue;

    if (_hasValue) {
      this.destination.next(_sendValue);
      this.throttle(_sendValue);
    }

    this._hasValue = false;
    this._sendValue = null;
  };

  ThrottleSubscriber.prototype.throttle = function (value) {
    var duration = this.tryDurationSelector(value);

    if (duration) {
      this.add(this._throttled = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, duration));
    }
  };

  ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
    try {
      return this.durationSelector(value);
    } catch (err) {
      this.destination.error(err);
      return null;
    }
  };

  ThrottleSubscriber.prototype.throttlingDone = function () {
    var _a = this,
        _throttled = _a._throttled,
        _trailing = _a._trailing;

    if (_throttled) {
      _throttled.unsubscribe();
    }

    this._throttled = null;

    if (_trailing) {
      this.send();
    }
  };

  ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.throttlingDone();
  };

  ThrottleSubscriber.prototype.notifyComplete = function () {
    this.throttlingDone();
  };

  return ThrottleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 450 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return throttleTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(314);
/* harmony import */ var _throttle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(449);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */




/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the throttling.
 * @param {Object} config a configuration object to define `leading` and
 * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */

function throttleTime(duration, scheduler, config) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
  }

  if (config === void 0) {
    config = _throttle__WEBPACK_IMPORTED_MODULE_3__["defaultThrottleConfig"];
  }

  return function (source) {
    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));
  };
}

var ThrottleTimeOperator =
/*@__PURE__*/
function () {
  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
    this.duration = duration;
    this.scheduler = scheduler;
    this.leading = leading;
    this.trailing = trailing;
  }

  ThrottleTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
  };

  return ThrottleTimeOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var ThrottleTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrottleTimeSubscriber, _super);

  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
    var _this = _super.call(this, destination) || this;

    _this.duration = duration;
    _this.scheduler = scheduler;
    _this.leading = leading;
    _this.trailing = trailing;
    _this._hasTrailingValue = false;
    _this._trailingValue = null;
    return _this;
  }

  ThrottleTimeSubscriber.prototype._next = function (value) {
    if (this.throttled) {
      if (this.trailing) {
        this._trailingValue = value;
        this._hasTrailingValue = true;
      }
    } else {
      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {
        subscriber: this
      }));

      if (this.leading) {
        this.destination.next(value);
      }
    }
  };

  ThrottleTimeSubscriber.prototype._complete = function () {
    if (this._hasTrailingValue) {
      this.destination.next(this._trailingValue);
      this.destination.complete();
    } else {
      this.destination.complete();
    }
  };

  ThrottleTimeSubscriber.prototype.clearThrottle = function () {
    var throttled = this.throttled;

    if (throttled) {
      if (this.trailing && this._hasTrailingValue) {
        this.destination.next(this._trailingValue);
        this._trailingValue = null;
        this._hasTrailingValue = false;
      }

      throttled.unsubscribe();
      this.remove(throttled);
      this.throttled = null;
    }
  };

  return ThrottleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

function dispatchNext(arg) {
  var subscriber = arg.subscriber;
  subscriber.clearThrottle();
}

/***/ }),
/* 451 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return timeInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeInterval", function() { return TimeInterval; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(314);
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(411);
/* harmony import */ var _observable_defer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(347);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(324);
/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */




function timeInterval(scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
  }

  return function (source) {
    return Object(_observable_defer__WEBPACK_IMPORTED_MODULE_2__["defer"])(function () {
      return source.pipe( // HACK: the typings seem off with scan
      Object(_scan__WEBPACK_IMPORTED_MODULE_1__["scan"])(function (_a, value) {
        var current = _a.current;
        return {
          value: value,
          current: scheduler.now(),
          last: current
        };
      }, {
        current: scheduler.now(),
        value: undefined,
        last: undefined
      }), Object(_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_a) {
        var current = _a.current,
            last = _a.last,
            value = _a.value;
        return new TimeInterval(value, current - last);
      }));
    });
  };
}

var TimeInterval =
/*@__PURE__*/
function () {
  function TimeInterval(value, interval) {
    this.value = value;
    this.interval = interval;
  }

  return TimeInterval;
}();



/***/ }),
/* 452 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return timeout; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(314);
/* harmony import */ var _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(322);
/* harmony import */ var _timeoutWith__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(453);
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(308);
/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */




/**
 *
 * Errors if Observable does not emit a value in given time span.
 *
 * <span class="informal">Timeouts on Observable that doesn't emit values fast enough.</span>
 *
 * <img src="./img/timeout.png" width="100%">
 *
 * `timeout` operator accepts as an argument either a number or a Date.
 *
 * If number was provided, it returns an Observable that behaves like a source
 * Observable, unless there is a period of time where there is no value emitted.
 * So if you provide `100` as argument and first value comes after 50ms from
 * the moment of subscription, this value will be simply re-emitted by the resulting
 * Observable. If however after that 100ms passes without a second value being emitted,
 * stream will end with an error and source Observable will be unsubscribed.
 * These checks are performed throughout whole lifecycle of Observable - from the moment
 * it was subscribed to, until it completes or errors itself. Thus every value must be
 * emitted within specified period since previous value.
 *
 * If provided argument was Date, returned Observable behaves differently. It throws
 * if Observable did not complete before provided Date. This means that periods between
 * emission of particular values do not matter in this case. If Observable did not complete
 * before provided Date, source Observable will be unsubscribed. Other than that, resulting
 * stream behaves just as source Observable.
 *
 * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)
 * when returned Observable will check if source stream emitted value or completed.
 *
 * @example <caption>Check if ticks are emitted within certain timespan</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(1100) // Let's use bigger timespan to be safe,
 *                       // since `interval` might fire a bit later then scheduled.
 * .subscribe(
 *     value => console.log(value), // Will emit numbers just as regular `interval` would.
 *     err => console.log(err) // Will never be called.
 * );
 *
 * seconds.timeout(900).subscribe(
 *     value => console.log(value), // Will never be called.
 *     err => console.log(err) // Will emit error before even first value is emitted,
 *                             // since it did not arrive within 900ms period.
 * );
 *
 * @example <caption>Use Date to check if Observable completed</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(new Date("December 17, 2020 03:24:00"))
 * .subscribe(
 *     value => console.log(value), // Will emit values as regular `interval` would
 *                                  // until December 17, 2020 at 03:24:00.
 *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,
 *                             // since Observable did not complete by then.
 * );
 *
 * @see {@link timeoutWith}
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.
 * @method timeout
 * @owner Observable
 */

function timeout(due, scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
  }

  return Object(_timeoutWith__WEBPACK_IMPORTED_MODULE_2__["timeoutWith"])(due, Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_3__["throwError"])(new _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__["TimeoutError"]()), scheduler);
}

/***/ }),
/* 453 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return timeoutWith; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(384);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





/* tslint:enable:max-line-length */

/**
 *
 * Errors if Observable does not emit a value in given time span, in case of which
 * subscribes to the second Observable.
 *
 * <span class="informal">It's a version of `timeout` operator that let's you specify fallback Observable.</span>
 *
 * <img src="./img/timeoutWith.png" width="100%">
 *
 * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,
 * still accepting as a first argument either a number or a Date, which control - respectively -
 * when values of source Observable should be emitted or when it should complete.
 *
 * The only difference is that it accepts a second, required parameter. This parameter
 * should be an Observable which will be subscribed when source Observable fails any timeout check.
 * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting
 * values from second Observable. Note that this fallback Observable is not checked for timeouts
 * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second
 * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that
 * stream completes, it completes as well.
 *
 * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided
 * here - as a third, optional parameter. It still is used to schedule timeout checks and -
 * as a consequence - when second Observable will be subscribed, since subscription happens
 * immediately after failing check.
 *
 * @example <caption>Add fallback observable</caption>
 * const seconds = Rx.Observable.interval(1000);
 * const minutes = Rx.Observable.interval(60 * 1000);
 *
 * seconds.timeoutWith(900, minutes)
 *     .subscribe(
 *         value => console.log(value), // After 900ms, will start emitting `minutes`,
 *                                      // since first value of `seconds` will not arrive fast enough.
 *         err => console.log(err) // Would be called after 900ms in case of `timeout`,
 *                                 // but here will never be called.
 *     );
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable
 *                          passed as a second parameter.
 * @method timeoutWith
 * @owner Observable
 */

function timeoutWith(due, withObservable, scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
  }

  return function (source) {
    var absoluteTimeout = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__["isDate"])(due);
    var waitFor = absoluteTimeout ? +due - scheduler.now() : Math.abs(due);
    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
  };
}

var TimeoutWithOperator =
/*@__PURE__*/
function () {
  function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
    this.waitFor = waitFor;
    this.absoluteTimeout = absoluteTimeout;
    this.withObservable = withObservable;
    this.scheduler = scheduler;
  }

  TimeoutWithOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
  };

  return TimeoutWithOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var TimeoutWithSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TimeoutWithSubscriber, _super);

  function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.absoluteTimeout = absoluteTimeout;
    _this.waitFor = waitFor;
    _this.withObservable = withObservable;
    _this.scheduler = scheduler;
    _this.action = null;

    _this.scheduleTimeout();

    return _this;
  }

  TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
    var withObservable = subscriber.withObservable;

    subscriber._unsubscribeAndRecycle();

    subscriber.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(subscriber, withObservable));
  };

  TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
    var action = this.action;

    if (action) {
      // Recycle the action if we've already scheduled one. All the production
      // Scheduler Actions mutate their state/delay time and return themeselves.
      // VirtualActions are immutable, so they create and return a clone. In this
      // case, we need to set the action reference to the most recent VirtualAction,
      // to ensure that's the one we clone from next time.
      this.action = action.schedule(this, this.waitFor);
    } else {
      this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
    }
  };

  TimeoutWithSubscriber.prototype._next = function (value) {
    if (!this.absoluteTimeout) {
      this.scheduleTimeout();
    }

    _super.prototype._next.call(this, value);
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  TimeoutWithSubscriber.prototype._unsubscribe = function () {
    this.action = null;
    this.scheduler = null;
    this.withObservable = null;
  };

  return TimeoutWithSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]);

/***/ }),
/* 454 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return timestamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timestamp", function() { return Timestamp; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(314);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(324);
/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */


/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */

function timestamp(scheduler) {
  if (scheduler === void 0) {
    scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
  }

  return Object(_map__WEBPACK_IMPORTED_MODULE_1__["map"])(function (value) {
    return new Timestamp(value, scheduler.now());
  }); // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));
}

var Timestamp =
/*@__PURE__*/
function () {
  function Timestamp(value, timestamp) {
    this.value = value;
    this.timestamp = timestamp;
  }

  return Timestamp;
}();



/***/ }),
/* 455 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(410);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */


function toArrayReducer(arr, item, index) {
  if (index === 0) {
    return [item];
  }

  arr.push(item);
  return arr;
}

function toArray() {
  return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(toArrayReducer, []);
}

/***/ }),
/* 456 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "window", function() { return window; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */

function window(windowBoundaries) {
  return function windowOperatorFunction(source) {
    return source.lift(new WindowOperator(windowBoundaries));
  };
}

var WindowOperator =
/*@__PURE__*/
function () {
  function WindowOperator(windowBoundaries) {
    this.windowBoundaries = windowBoundaries;
  }

  WindowOperator.prototype.call = function (subscriber, source) {
    var windowSubscriber = new WindowSubscriber(subscriber);
    var sourceSubscription = source.subscribe(windowSubscriber);

    if (!sourceSubscription.closed) {
      windowSubscriber.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(windowSubscriber, this.windowBoundaries));
    }

    return sourceSubscription;
  };

  return WindowOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var WindowSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowSubscriber, _super);

  function WindowSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
    destination.next(_this.window);
    return _this;
  }

  WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.openWindow();
  };

  WindowSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  WindowSubscriber.prototype.notifyComplete = function (innerSub) {
    this._complete();
  };

  WindowSubscriber.prototype._next = function (value) {
    this.window.next(value);
  };

  WindowSubscriber.prototype._error = function (err) {
    this.window.error(err);
    this.destination.error(err);
  };

  WindowSubscriber.prototype._complete = function () {
    this.window.complete();
    this.destination.complete();
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  WindowSubscriber.prototype._unsubscribe = function () {
    this.window = null;
  };

  WindowSubscriber.prototype.openWindow = function () {
    var prevWindow = this.window;

    if (prevWindow) {
      prevWindow.complete();
    }

    var destination = this.destination;
    var newWindow = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
    destination.next(newWindow);
  };

  return WindowSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]);

/***/ }),
/* 457 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return windowCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(270);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(286);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */



/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */

function windowCount(windowSize, startWindowEvery) {
  if (startWindowEvery === void 0) {
    startWindowEvery = 0;
  }

  return function windowCountOperatorFunction(source) {
    return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
  };
}

var WindowCountOperator =
/*@__PURE__*/
function () {
  function WindowCountOperator(windowSize, startWindowEvery) {
    this.windowSize = windowSize;
    this.startWindowEvery = startWindowEvery;
  }

  WindowCountOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
  };

  return WindowCountOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var WindowCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowCountSubscriber, _super);

  function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.windowSize = windowSize;
    _this.startWindowEvery = startWindowEvery;
    _this.windows = [new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]()];
    _this.count = 0;
    destination.next(_this.windows[0]);
    return _this;
  }

  WindowCountSubscriber.prototype._next = function (value) {
    var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;
    var destination = this.destination;
    var windowSize = this.windowSize;
    var windows = this.windows;
    var len = windows.length;

    for (var i = 0; i < len && !this.closed; i++) {
      windows[i].next(value);
    }

    var c = this.count - windowSize + 1;

    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
      windows.shift().complete();
    }

    if (++this.count % startWindowEvery === 0 && !this.closed) {
      var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
      windows.push(window_1);
      destination.next(window_1);
    }
  };

  WindowCountSubscriber.prototype._error = function (err) {
    var windows = this.windows;

    if (windows) {
      while (windows.length > 0 && !this.closed) {
        windows.shift().error(err);
      }
    }

    this.destination.error(err);
  };

  WindowCountSubscriber.prototype._complete = function () {
    var windows = this.windows;

    if (windows) {
      while (windows.length > 0 && !this.closed) {
        windows.shift().complete();
      }
    }

    this.destination.complete();
  };

  WindowCountSubscriber.prototype._unsubscribe = function () {
    this.count = 0;
    this.windows = null;
  };

  return WindowCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]);

/***/ }),
/* 458 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return windowTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(314);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(270);
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(354);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(304);
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */






function windowTime(windowTimeSpan) {
  var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
  var windowCreationInterval = null;
  var maxWindowSize = Number.POSITIVE_INFINITY;

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[3])) {
    scheduler = arguments[3];
  }

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[2])) {
    scheduler = arguments[2];
  } else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__["isNumeric"])(arguments[2])) {
    maxWindowSize = arguments[2];
  }

  if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[1])) {
    scheduler = arguments[1];
  } else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__["isNumeric"])(arguments[1])) {
    windowCreationInterval = arguments[1];
  }

  return function windowTimeOperatorFunction(source) {
    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
  };
}

var WindowTimeOperator =
/*@__PURE__*/
function () {
  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
    this.windowTimeSpan = windowTimeSpan;
    this.windowCreationInterval = windowCreationInterval;
    this.maxWindowSize = maxWindowSize;
    this.scheduler = scheduler;
  }

  WindowTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
  };

  return WindowTimeOperator;
}();

var CountedSubject =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CountedSubject, _super);

  function CountedSubject() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this._numberOfNextedValues = 0;
    return _this;
  }

  CountedSubject.prototype.next = function (value) {
    this._numberOfNextedValues++;

    _super.prototype.next.call(this, value);
  };

  Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
    get: function get() {
      return this._numberOfNextedValues;
    },
    enumerable: true,
    configurable: true
  });
  return CountedSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var WindowTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowTimeSubscriber, _super);

  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.windowTimeSpan = windowTimeSpan;
    _this.windowCreationInterval = windowCreationInterval;
    _this.maxWindowSize = maxWindowSize;
    _this.scheduler = scheduler;
    _this.windows = [];

    var window = _this.openWindow();

    if (windowCreationInterval !== null && windowCreationInterval >= 0) {
      var closeState = {
        subscriber: _this,
        window: window,
        context: null
      };
      var creationState = {
        windowTimeSpan: windowTimeSpan,
        windowCreationInterval: windowCreationInterval,
        subscriber: _this,
        scheduler: scheduler
      };

      _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));

      _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
    } else {
      var timeSpanOnlyState = {
        subscriber: _this,
        window: window,
        windowTimeSpan: windowTimeSpan
      };

      _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
    }

    return _this;
  }

  WindowTimeSubscriber.prototype._next = function (value) {
    var windows = this.windows;
    var len = windows.length;

    for (var i = 0; i < len; i++) {
      var window_1 = windows[i];

      if (!window_1.closed) {
        window_1.next(value);

        if (window_1.numberOfNextedValues >= this.maxWindowSize) {
          this.closeWindow(window_1);
        }
      }
    }
  };

  WindowTimeSubscriber.prototype._error = function (err) {
    var windows = this.windows;

    while (windows.length > 0) {
      windows.shift().error(err);
    }

    this.destination.error(err);
  };

  WindowTimeSubscriber.prototype._complete = function () {
    var windows = this.windows;

    while (windows.length > 0) {
      var window_2 = windows.shift();

      if (!window_2.closed) {
        window_2.complete();
      }
    }

    this.destination.complete();
  };

  WindowTimeSubscriber.prototype.openWindow = function () {
    var window = new CountedSubject();
    this.windows.push(window);
    var destination = this.destination;
    destination.next(window);
    return window;
  };

  WindowTimeSubscriber.prototype.closeWindow = function (window) {
    window.complete();
    var windows = this.windows;
    windows.splice(windows.indexOf(window), 1);
  };

  return WindowTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]);

function dispatchWindowTimeSpanOnly(state) {
  var subscriber = state.subscriber,
      windowTimeSpan = state.windowTimeSpan,
      window = state.window;

  if (window) {
    subscriber.closeWindow(window);
  }

  state.window = subscriber.openWindow();
  this.schedule(state, windowTimeSpan);
}

function dispatchWindowCreation(state) {
  var windowTimeSpan = state.windowTimeSpan,
      subscriber = state.subscriber,
      scheduler = state.scheduler,
      windowCreationInterval = state.windowCreationInterval;
  var window = subscriber.openWindow();
  var action = this;
  var context = {
    action: action,
    subscription: null
  };
  var timeSpanState = {
    subscriber: subscriber,
    window: window,
    context: context
  };
  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
  action.add(context.subscription);
  action.schedule(state, windowCreationInterval);
}

function dispatchWindowClose(state) {
  var subscriber = state.subscriber,
      window = state.window,
      context = state.context;

  if (context && context.action && context.subscription) {
    context.action.remove(context.subscription);
  }

  subscriber.closeWindow(window);
}

/***/ }),
/* 459 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return windowToggle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(275);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(279);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */







/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */

function windowToggle(openings, closingSelector) {
  return function (source) {
    return source.lift(new WindowToggleOperator(openings, closingSelector));
  };
}

var WindowToggleOperator =
/*@__PURE__*/
function () {
  function WindowToggleOperator(openings, closingSelector) {
    this.openings = openings;
    this.closingSelector = closingSelector;
  }

  WindowToggleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
  };

  return WindowToggleOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var WindowToggleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowToggleSubscriber, _super);

  function WindowToggleSubscriber(destination, openings, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.openings = openings;
    _this.closingSelector = closingSelector;
    _this.contexts = [];

    _this.add(_this.openSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_6__["subscribeToResult"])(_this, openings, openings));

    return _this;
  }

  WindowToggleSubscriber.prototype._next = function (value) {
    var contexts = this.contexts;

    if (contexts) {
      var len = contexts.length;

      for (var i = 0; i < len; i++) {
        contexts[i].window.next(value);
      }
    }
  };

  WindowToggleSubscriber.prototype._error = function (err) {
    var contexts = this.contexts;
    this.contexts = null;

    if (contexts) {
      var len = contexts.length;
      var index = -1;

      while (++index < len) {
        var context_1 = contexts[index];
        context_1.window.error(err);
        context_1.subscription.unsubscribe();
      }
    }

    _super.prototype._error.call(this, err);
  };

  WindowToggleSubscriber.prototype._complete = function () {
    var contexts = this.contexts;
    this.contexts = null;

    if (contexts) {
      var len = contexts.length;
      var index = -1;

      while (++index < len) {
        var context_2 = contexts[index];
        context_2.window.complete();
        context_2.subscription.unsubscribe();
      }
    }

    _super.prototype._complete.call(this);
  };
  /** @deprecated This is an internal implementation detail, do not use. */


  WindowToggleSubscriber.prototype._unsubscribe = function () {
    var contexts = this.contexts;
    this.contexts = null;

    if (contexts) {
      var len = contexts.length;
      var index = -1;

      while (++index < len) {
        var context_3 = contexts[index];
        context_3.window.unsubscribe();
        context_3.subscription.unsubscribe();
      }
    }
  };

  WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    if (outerValue === this.openings) {
      var closingSelector = this.closingSelector;
      var closingNotifier = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_3__["tryCatch"])(closingSelector)(innerValue);

      if (closingNotifier === _util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"]) {
        return this.error(_util_errorObject__WEBPACK_IMPORTED_MODULE_4__["errorObject"].e);
      } else {
        var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
        var context_4 = {
          window: window_1,
          subscription: subscription
        };
        this.contexts.push(context_4);
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_6__["subscribeToResult"])(this, closingNotifier, context_4);

        if (innerSubscription.closed) {
          this.closeWindow(this.contexts.length - 1);
        } else {
          innerSubscription.context = context_4;
          subscription.add(innerSubscription);
        }

        this.destination.next(window_1);
      }
    } else {
      this.closeWindow(this.contexts.indexOf(outerValue));
    }
  };

  WindowToggleSubscriber.prototype.notifyError = function (err) {
    this.error(err);
  };

  WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
    if (inner !== this.openSubscription) {
      this.closeWindow(this.contexts.indexOf(inner.context));
    }
  };

  WindowToggleSubscriber.prototype.closeWindow = function (index) {
    if (index === -1) {
      return;
    }

    var contexts = this.contexts;
    var context = contexts[index];
    var window = context.window,
        subscription = context.subscription;
    contexts.splice(index, 1);
    window.complete();
    subscription.unsubscribe();
  };

  return WindowToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_5__["OuterSubscriber"]);

/***/ }),
/* 460 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return windowWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);
/* harmony import */ var _util_tryCatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(278);
/* harmony import */ var _util_errorObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(279);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */






/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */

function windowWhen(closingSelector) {
  return function windowWhenOperatorFunction(source) {
    return source.lift(new WindowOperator(closingSelector));
  };
}

var WindowOperator =
/*@__PURE__*/
function () {
  function WindowOperator(closingSelector) {
    this.closingSelector = closingSelector;
  }

  WindowOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
  };

  return WindowOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var WindowSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowSubscriber, _super);

  function WindowSubscriber(destination, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.closingSelector = closingSelector;

    _this.openWindow();

    return _this;
  }

  WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.openWindow(innerSub);
  };

  WindowSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  WindowSubscriber.prototype.notifyComplete = function (innerSub) {
    this.openWindow(innerSub);
  };

  WindowSubscriber.prototype._next = function (value) {
    this.window.next(value);
  };

  WindowSubscriber.prototype._error = function (err) {
    this.window.error(err);
    this.destination.error(err);
    this.unsubscribeClosingNotification();
  };

  WindowSubscriber.prototype._complete = function () {
    this.window.complete();
    this.destination.complete();
    this.unsubscribeClosingNotification();
  };

  WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
    if (this.closingNotification) {
      this.closingNotification.unsubscribe();
    }
  };

  WindowSubscriber.prototype.openWindow = function (innerSub) {
    if (innerSub === void 0) {
      innerSub = null;
    }

    if (innerSub) {
      this.remove(innerSub);
      innerSub.unsubscribe();
    }

    var prevWindow = this.window;

    if (prevWindow) {
      prevWindow.complete();
    }

    var window = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
    this.destination.next(window);
    var closingNotifier = Object(_util_tryCatch__WEBPACK_IMPORTED_MODULE_2__["tryCatch"])(this.closingSelector)();

    if (closingNotifier === _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"]) {
      var err = _util_errorObject__WEBPACK_IMPORTED_MODULE_3__["errorObject"].e;
      this.destination.error(err);
      this.window.error(err);
    } else {
      this.add(this.closingNotification = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__["subscribeToResult"])(this, closingNotifier));
    }
  };

  return WindowSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__["OuterSubscriber"]);

/***/ }),
/* 461 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return withLatestFrom; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



/* tslint:enable:max-line-length */

/**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */

function withLatestFrom() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  return function (source) {
    var project;

    if (typeof args[args.length - 1] === 'function') {
      project = args.pop();
    }

    var observables = args;
    return source.lift(new WithLatestFromOperator(observables, project));
  };
}

var WithLatestFromOperator =
/*@__PURE__*/
function () {
  function WithLatestFromOperator(observables, project) {
    this.observables = observables;
    this.project = project;
  }

  WithLatestFromOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
  };

  return WithLatestFromOperator;
}();
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */


var WithLatestFromSubscriber =
/*@__PURE__*/
function (_super) {
  tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WithLatestFromSubscriber, _super);

  function WithLatestFromSubscriber(destination, observables, project) {
    var _this = _super.call(this, destination) || this;

    _this.observables = observables;
    _this.project = project;
    _this.toRespond = [];
    var len = observables.length;
    _this.values = new Array(len);

    for (var i = 0; i < len; i++) {
      _this.toRespond.push(i);
    }

    for (var i = 0; i < len; i++) {
      var observable = observables[i];

      _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, observable, observable, i));
    }

    return _this;
  }

  WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values[outerIndex] = innerValue;
    var toRespond = this.toRespond;

    if (toRespond.length > 0) {
      var found = toRespond.indexOf(outerIndex);

      if (found !== -1) {
        toRespond.splice(found, 1);
      }
    }
  };

  WithLatestFromSubscriber.prototype.notifyComplete = function () {// noop
  };

  WithLatestFromSubscriber.prototype._next = function (value) {
    if (this.toRespond.length === 0) {
      var args = [value].concat(this.values);

      if (this.project) {
        this._tryProject(args);
      } else {
        this.destination.next(args);
      }
    }
  };

  WithLatestFromSubscriber.prototype._tryProject = function (args) {
    var result;

    try {
      result = this.project.apply(this, args);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return WithLatestFromSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]);

/***/ }),
/* 462 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(363);
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

/* tslint:enable:max-line-length */

/**
 * @deprecated Deprecated in favor of static zip.
 */

function zip() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function zipOperatorFunction(source) {
    return source.lift.call(_observable_zip__WEBPACK_IMPORTED_MODULE_0__["zip"].apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 463 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return zipAll; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(363);
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zipAll(project) {
  return function (source) {
    return source.lift(new _observable_zip__WEBPACK_IMPORTED_MODULE_0__["ZipOperator"](project));
  };
}

/***/ }),
/* 464 */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 464;

/***/ }),
/* 465 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a", function() { return CachedResourceLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RESOURCE_CACHE_PROVIDER", function() { return RESOURCE_CACHE_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "platformBrowserDynamic", function() { return platformBrowserDynamic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JitCompilerFactory", function() { return JitCompilerFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵCompilerImpl", function() { return CompilerImpl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵplatformCoreDynamic", function() { return platformCoreDynamic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS", function() { return INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵResourceLoaderImpl", function() { return ResourceLoaderImpl; });
/* harmony import */ var _angular_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(266);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(264);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(265);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(263);
/**
 * @license Angular v7.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */





/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var MODULE_SUFFIX = '';
var builtinExternalReferences = createBuiltinExternalReferencesMap();

var JitReflector =
/** @class */
function () {
  function JitReflector() {
    this.reflectionCapabilities = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵReflectionCapabilities"]();
  }

  JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {
    var moduleId = cmpMetadata.moduleId;

    if (typeof moduleId === 'string') {
      var scheme = Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["getUrlScheme"])(moduleId);
      return scheme ? moduleId : "package:" + moduleId + MODULE_SUFFIX;
    } else if (moduleId !== null && moduleId !== void 0) {
      throw Object(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["syntaxError"])("moduleId should be a string in \"" + Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵstringify"])(type) + "\". See https://goo.gl/wIDDiL for more information.\n" + "If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.");
    }

    return "./" + Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵstringify"])(type);
  };

  JitReflector.prototype.parameters = function (typeOrFunc) {
    return this.reflectionCapabilities.parameters(typeOrFunc);
  };

  JitReflector.prototype.tryAnnotations = function (typeOrFunc) {
    return this.annotations(typeOrFunc);
  };

  JitReflector.prototype.annotations = function (typeOrFunc) {
    return this.reflectionCapabilities.annotations(typeOrFunc);
  };

  JitReflector.prototype.shallowAnnotations = function (typeOrFunc) {
    throw new Error('Not supported in JIT mode');
  };

  JitReflector.prototype.propMetadata = function (typeOrFunc) {
    return this.reflectionCapabilities.propMetadata(typeOrFunc);
  };

  JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {
    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);
  };

  JitReflector.prototype.guards = function (type) {
    return this.reflectionCapabilities.guards(type);
  };

  JitReflector.prototype.resolveExternalReference = function (ref) {
    return builtinExternalReferences.get(ref) || ref.runtime;
  };

  return JitReflector;
}();

function createBuiltinExternalReferencesMap() {
  var map = new Map();
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ANALYZE_FOR_ENTRY_COMPONENTS, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ANALYZE_FOR_ENTRY_COMPONENTS"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ElementRef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].NgModuleRef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleRef"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ViewContainerRef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ChangeDetectorRef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].Renderer2, _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].QueryList, _angular_core__WEBPACK_IMPORTED_MODULE_1__["QueryList"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].TemplateRef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].CodegenComponentFactoryResolver, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵCodegenComponentFactoryResolver"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ComponentFactoryResolver, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ComponentFactory, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactory"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ComponentRef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentRef"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].NgModuleFactory, _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleFactory"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].createModuleFactory, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcmf"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].moduleDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵmod"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].moduleProviderDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵmpd"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].RegisterModuleFactoryFn, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵregisterModuleFactory"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].Injector, _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ViewEncapsulation, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ChangeDetectionStrategy, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectionStrategy"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].SecurityContext, _angular_core__WEBPACK_IMPORTED_MODULE_1__["SecurityContext"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].LOCALE_ID, _angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].TRANSLATIONS_FORMAT, _angular_core__WEBPACK_IMPORTED_MODULE_1__["TRANSLATIONS_FORMAT"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].inlineInterpolate, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵinlineInterpolate"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].interpolate, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵinterpolate"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].EMPTY_ARRAY, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵEMPTY_ARRAY"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].EMPTY_MAP, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵEMPTY_MAP"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].Renderer, _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].viewDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].elementDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].anchorDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].textDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵted"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].directiveDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].providerDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵprd"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].queryDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵqud"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].pureArrayDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpad"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].pureObjectDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].purePipeDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵppd"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].pipeDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpid"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].nodeValue, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵnov"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].ngContentDef, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵncd"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].unwrapValue, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵunv"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].createRendererType2, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]);
  map.set(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Identifiers"].createComponentFactory, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]);
  return map;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ERROR_COLLECTOR_TOKEN = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('ErrorCollector');
/**
 * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.
 */

var DEFAULT_PACKAGE_URL_PROVIDER = {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["PACKAGE_ROOT_URL"],
  useValue: '/'
};
var _NO_RESOURCE_LOADER = {
  get: function get(url) {
    throw new Error("No ResourceLoader implementation has been provided. Can't read the url \"" + url + "\"");
  }
};
var baseHtmlParser = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('HtmlParser');

var CompilerImpl =
/** @class */
function () {
  function CompilerImpl(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, compilerConfig, console) {
    this._metadataResolver = _metadataResolver;
    this._delegate = new _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["JitCompiler"](_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));
    this.injector = injector;
  }

  CompilerImpl.prototype.getExtraNgModuleProviders = function () {
    return [this._metadataResolver.getProviderMetadata(new _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ProviderMeta"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"], {
      useValue: this
    }))];
  };

  CompilerImpl.prototype.compileModuleSync = function (moduleType) {
    return this._delegate.compileModuleSync(moduleType);
  };

  CompilerImpl.prototype.compileModuleAsync = function (moduleType) {
    return this._delegate.compileModuleAsync(moduleType);
  };

  CompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {
    var result = this._delegate.compileModuleAndAllComponentsSync(moduleType);

    return {
      ngModuleFactory: result.ngModuleFactory,
      componentFactories: result.componentFactories
    };
  };

  CompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {
    return this._delegate.compileModuleAndAllComponentsAsync(moduleType).then(function (result) {
      return {
        ngModuleFactory: result.ngModuleFactory,
        componentFactories: result.componentFactories
      };
    });
  };

  CompilerImpl.prototype.loadAotSummaries = function (summaries) {
    this._delegate.loadAotSummaries(summaries);
  };

  CompilerImpl.prototype.hasAotSummary = function (ref) {
    return this._delegate.hasAotSummary(ref);
  };

  CompilerImpl.prototype.getComponentFactory = function (component) {
    return this._delegate.getComponentFactory(component);
  };

  CompilerImpl.prototype.clearCache = function () {
    this._delegate.clearCache();
  };

  CompilerImpl.prototype.clearCacheFor = function (type) {
    this._delegate.clearCacheFor(type);
  };

  CompilerImpl.prototype.getModuleId = function (moduleType) {
    var meta = this._metadataResolver.getNgModuleMetadata(moduleType);

    return meta && meta.id || undefined;
  };

  return CompilerImpl;
}();
/**
 * A set of providers that provide `JitCompiler` and its dependencies to use for
 * template compilation.
 */


var COMPILER_PROVIDERS = [{
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"],
  useValue: new JitReflector()
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ResourceLoader"],
  useValue: _NO_RESOURCE_LOADER
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["JitSummaryResolver"],
  deps: []
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["SummaryResolver"],
  useExisting: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["JitSummaryResolver"]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵConsole"],
  deps: []
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Lexer"],
  deps: []
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Parser"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Lexer"]]
}, {
  provide: baseHtmlParser,
  useClass: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["HtmlParser"],
  deps: []
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["I18NHtmlParser"],
  useFactory: function useFactory(parser, translations, format, config, console) {
    translations = translations || '';
    var missingTranslation = translations ? config.missingTranslation : _angular_core__WEBPACK_IMPORTED_MODULE_1__["MissingTranslationStrategy"].Ignore;
    return new _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["I18NHtmlParser"](parser, translations, format, missingTranslation, console);
  },
  deps: [baseHtmlParser, [new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["TRANSLATIONS"])], [new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["TRANSLATIONS_FORMAT"])], [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"]], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵConsole"]]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["HtmlParser"],
  useExisting: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["I18NHtmlParser"]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["TemplateParser"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["Parser"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ElementSchemaRegistry"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["I18NHtmlParser"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵConsole"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["DirectiveNormalizer"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ResourceLoader"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["UrlResolver"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["HtmlParser"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileMetadataResolver"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["HtmlParser"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["NgModuleResolver"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["DirectiveResolver"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["PipeResolver"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["SummaryResolver"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ElementSchemaRegistry"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["DirectiveNormalizer"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵConsole"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["StaticSymbolCache"]], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"], ERROR_COLLECTOR_TOKEN]]
}, DEFAULT_PACKAGE_URL_PROVIDER, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["StyleCompiler"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["UrlResolver"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ViewCompiler"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["NgModuleCompiler"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"],
  useValue: new _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"]()
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"],
  useClass: CompilerImpl,
  deps: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileMetadataResolver"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["TemplateParser"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["StyleCompiler"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ViewCompiler"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["NgModuleCompiler"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["SummaryResolver"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"], _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵConsole"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["DomElementSchemaRegistry"],
  deps: []
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ElementSchemaRegistry"],
  useExisting: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["DomElementSchemaRegistry"]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["UrlResolver"],
  deps: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["PACKAGE_ROOT_URL"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["DirectiveResolver"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["PipeResolver"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"]]
}, {
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["NgModuleResolver"],
  deps: [_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompileReflector"]]
}];
/**
 * @experimental
 */

var JitCompilerFactory =
/** @class */
function () {
  /* @internal */
  function JitCompilerFactory(defaultOptions) {
    var compilerOptions = {
      useJit: true,
      defaultEncapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].Emulated,
      missingTranslation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["MissingTranslationStrategy"].Warning
    };
    this._defaultOptions = Object(tslib__WEBPACK_IMPORTED_MODULE_2__["__spread"])([compilerOptions], defaultOptions);
  }

  JitCompilerFactory.prototype.createCompiler = function (options) {
    if (options === void 0) {
      options = [];
    }

    var opts = _mergeOptions(this._defaultOptions.concat(options));

    var injector = _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"].create([COMPILER_PROVIDERS, {
      provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"],
      useFactory: function useFactory() {
        return new _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["CompilerConfig"]({
          // let explicit values from the compiler options overwrite options
          // from the app providers
          useJit: opts.useJit,
          jitDevMode: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["isDevMode"])(),
          // let explicit values from the compiler options overwrite options
          // from the app providers
          defaultEncapsulation: opts.defaultEncapsulation,
          missingTranslation: opts.missingTranslation,
          preserveWhitespaces: opts.preserveWhitespaces
        });
      },
      deps: []
    }, opts.providers]);
    return injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"]);
  };

  return JitCompilerFactory;
}();

function _mergeOptions(optionsArr) {
  return {
    useJit: _lastDefined(optionsArr.map(function (options) {
      return options.useJit;
    })),
    defaultEncapsulation: _lastDefined(optionsArr.map(function (options) {
      return options.defaultEncapsulation;
    })),
    providers: _mergeArrays(optionsArr.map(function (options) {
      return options.providers;
    })),
    missingTranslation: _lastDefined(optionsArr.map(function (options) {
      return options.missingTranslation;
    })),
    preserveWhitespaces: _lastDefined(optionsArr.map(function (options) {
      return options.preserveWhitespaces;
    }))
  };
}

function _lastDefined(args) {
  for (var i = args.length - 1; i >= 0; i--) {
    if (args[i] !== undefined) {
      return args[i];
    }
  }

  return undefined;
}

function _mergeArrays(parts) {
  var result = [];
  parts.forEach(function (part) {
    return part && result.push.apply(result, Object(tslib__WEBPACK_IMPORTED_MODULE_2__["__spread"])(part));
  });
  return result;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A platform that included corePlatform and the compiler.
 *
 * @experimental
 */


var platformCoreDynamic = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["createPlatformFactory"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["platformCore"], 'coreDynamic', [{
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["COMPILER_OPTIONS"],
  useValue: {},
  multi: true
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["CompilerFactory"],
  useClass: JitCompilerFactory,
  deps: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["COMPILER_OPTIONS"]]
}]);

var ResourceLoaderImpl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_2__["__extends"])(ResourceLoaderImpl, _super);

  function ResourceLoaderImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  ResourceLoaderImpl.prototype.get = function (url) {
    var resolve;
    var reject;
    var promise = new Promise(function (res, rej) {
      resolve = res;
      reject = rej;
    });
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'text';

    xhr.onload = function () {
      // responseText is the old-school way of retrieving response (supported by IE8 & 9)
      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported
      // by IE10)
      var response = xhr.response || xhr.responseText; // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)

      var status = xhr.status === 1223 ? 204 : xhr.status; // fix status code when it is 0 (0 status is undocumented).
      // Occurs when accessing file resources or on Android 4.1 stock browser
      // while retrieving files from application cache.

      if (status === 0) {
        status = response ? 200 : 0;
      }

      if (200 <= status && status <= 300) {
        resolve(response);
      } else {
        reject("Failed to load " + url);
      }
    };

    xhr.onerror = function () {
      reject("Failed to load " + url);
    };

    xhr.send();
    return promise;
  };

  ResourceLoaderImpl = Object(tslib__WEBPACK_IMPORTED_MODULE_2__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()], ResourceLoaderImpl);
  return ResourceLoaderImpl;
}(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ResourceLoader"]);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS"], {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["COMPILER_OPTIONS"],
  useValue: {
    providers: [{
      provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ResourceLoader"],
      useClass: ResourceLoaderImpl,
      deps: []
    }]
  },
  multi: true
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"],
  useValue: _angular_common__WEBPACK_IMPORTED_MODULE_3__["ɵPLATFORM_BROWSER_ID"]
}];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An implementation of ResourceLoader that uses a template cache to avoid doing an actual
 * ResourceLoader.
 *
 * The template cache needs to be built and loaded into window.$templateCache
 * via a separate mechanism.
 */

var CachedResourceLoader =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_2__["__extends"])(CachedResourceLoader, _super);

  function CachedResourceLoader() {
    var _this = _super.call(this) || this;

    _this._cache = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵglobal"].$templateCache;

    if (_this._cache == null) {
      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');
    }

    return _this;
  }

  CachedResourceLoader.prototype.get = function (url) {
    if (this._cache.hasOwnProperty(url)) {
      return Promise.resolve(this._cache[url]);
    } else {
      return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);
    }
  };

  return CachedResourceLoader;
}(_angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ResourceLoader"]);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Version"]('7.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @experimental
 */

var RESOURCE_CACHE_PROVIDER = [{
  provide: _angular_compiler__WEBPACK_IMPORTED_MODULE_0__["ResourceLoader"],
  useClass: CachedResourceLoader,
  deps: []
}];
var platformBrowserDynamic = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["createPlatformFactory"])(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),
/* 466 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bc", function() { return InternalFormsSharedModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bb", function() { return REACTIVE_DRIVEN_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_z", function() { return SHARED_FORM_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_ba", function() { return TEMPLATE_DRIVEN_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_a", function() { return CHECKBOX_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_b", function() { return DEFAULT_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_c", function() { return AbstractControlStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_d", function() { return ngControlStatusHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_e", function() { return formDirectiveProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_f", function() { return NG_FORM_SELECTOR_WARNING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_g", function() { return formControlBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_h", function() { return modelGroupProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bh", function() { return NgNoValidate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bd", function() { return NUMBER_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_be", function() { return NumberValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_i", function() { return RADIO_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_j", function() { return RadioControlRegistry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bf", function() { return RANGE_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_bg", function() { return RangeValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_k", function() { return NG_MODEL_WITH_FORM_CONTROL_WARNING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_l", function() { return formControlBinding$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_m", function() { return controlNameBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_n", function() { return formDirectiveProvider$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_p", function() { return formArrayNameProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_o", function() { return formGroupNameProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_q", function() { return SELECT_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_s", function() { return NgSelectMultipleOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_r", function() { return SELECT_MULTIPLE_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_u", function() { return CHECKBOX_REQUIRED_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_v", function() { return EMAIL_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_x", function() { return MAX_LENGTH_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_w", function() { return MIN_LENGTH_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_y", function() { return PATTERN_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_forms_forms_t", function() { return REQUIRED_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractControlDirective", function() { return AbstractControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractFormGroupDirective", function() { return AbstractFormGroupDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckboxControlValueAccessor", function() { return CheckboxControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ControlContainer", function() { return ControlContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NG_VALUE_ACCESSOR", function() { return NG_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPOSITION_BUFFER_MODE", function() { return COMPOSITION_BUFFER_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultValueAccessor", function() { return DefaultValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgControl", function() { return NgControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgControlStatus", function() { return NgControlStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgControlStatusGroup", function() { return NgControlStatusGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgForm", function() { return NgForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgFormSelectorWarning", function() { return NgFormSelectorWarning; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModel", function() { return NgModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgModelGroup", function() { return NgModelGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioControlValueAccessor", function() { return RadioControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormControlDirective", function() { return FormControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormControlName", function() { return FormControlName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormGroupDirective", function() { return FormGroupDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormArrayName", function() { return FormArrayName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormGroupName", function() { return FormGroupName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgSelectOption", function() { return NgSelectOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectControlValueAccessor", function() { return SelectControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectMultipleControlValueAccessor", function() { return SelectMultipleControlValueAccessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckboxRequiredValidator", function() { return CheckboxRequiredValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailValidator", function() { return EmailValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaxLengthValidator", function() { return MaxLengthValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MinLengthValidator", function() { return MinLengthValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PatternValidator", function() { return PatternValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequiredValidator", function() { return RequiredValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormBuilder", function() { return FormBuilder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractControl", function() { return AbstractControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormArray", function() { return FormArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormControl", function() { return FormControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormGroup", function() { return FormGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NG_ASYNC_VALIDATORS", function() { return NG_ASYNC_VALIDATORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NG_VALIDATORS", function() { return NG_VALIDATORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validators", function() { return Validators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormsModule", function() { return FormsModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReactiveFormsModule", function() { return ReactiveFormsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(266);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(267);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(365);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(263);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license Angular v7.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */





/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * Base class for control directives.
 *
 * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.
 *
 */

var AbstractControlDirective =
/** @class */
function () {
  function AbstractControlDirective() {}

  Object.defineProperty(AbstractControlDirective.prototype, "value", {
    /**
     * @description
     * Reports the value of the control if it is present, otherwise null.
     */
    get: function get() {
      return this.control ? this.control.value : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "valid", {
    /**
     * @description
     * Reports whether the control is valid. A control is considered valid if no
     * validation errors exist with the current value.
     * If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.valid : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "invalid", {
    /**
     * @description
     * Reports whether the control is invalid, meaning that an error exists in the input value.
     * If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.invalid : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "pending", {
    /**
     * @description
     * Reports whether a control is pending, meaning that that async validation is occurring and
     * errors are not yet available for the input value. If the control is not present, null is
     * returned.
     */
    get: function get() {
      return this.control ? this.control.pending : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "disabled", {
    /**
     * @description
     * Reports whether the control is disabled, meaning that the control is disabled
     * in the UI and is exempt from validation checks and excluded from aggregate
     * values of ancestor controls. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.disabled : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "enabled", {
    /**
     * @description
     * Reports whether the control is enabled, meaning that the control is included in ancestor
     * calculations of validity or value. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.enabled : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "errors", {
    /**
     * @description
     * Reports the control's validation errors. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.errors : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "pristine", {
    /**
     * @description
     * Reports whether the control is pristine, meaning that the user has not yet changed
     * the value in the UI. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.pristine : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "dirty", {
    /**
     * @description
     * Reports whether the control is dirty, meaning that the user has changed
     * the value in the UI. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.dirty : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "touched", {
    /**
     * @description
     * Reports whether the control is touched, meaning that the user has triggered
     * a `blur` event on it. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.touched : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "status", {
    /**
     * @description
     * Reports the validation status of the control. Possible values include:
     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.
     * If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.status : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "untouched", {
    /**
     * @description
     * Reports whether the control is untouched, meaning that the user has not yet triggered
     * a `blur` event on it. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.untouched : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "statusChanges", {
    /**
     * @description
     * Returns a multicasting observable that emits a validation status whenever it is
     * calculated for the control. If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.statusChanges : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "valueChanges", {
    /**
     * @description
     * Returns a multicasting observable of value changes for the control that emits every time the
     * value of the control changes in the UI or programmatically.
     * If the control is not present, null is returned.
     */
    get: function get() {
      return this.control ? this.control.valueChanges : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "path", {
    /**
     * @description
     * Returns an array that represents the path from the top-level form to this control.
     * Each index is the string name of the control on that level.
     */
    get: function get() {
      return null;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @description
   * Resets the control with the provided value if the control is present.
   */

  AbstractControlDirective.prototype.reset = function (value) {
    if (value === void 0) {
      value = undefined;
    }

    if (this.control) this.control.reset(value);
  };
  /**
   * @description
   * Reports whether the control with the given path has the error specified.
   * If no path is given, it checks for the error on the present control.
   * If the control is not present, false is returned.
   */


  AbstractControlDirective.prototype.hasError = function (errorCode, path) {
    return this.control ? this.control.hasError(errorCode, path) : false;
  };
  /**
   * @description
   * Reports error data for the control with the given path.
   * If the control is not present, null is returned.
   */


  AbstractControlDirective.prototype.getError = function (errorCode, path) {
    return this.control ? this.control.getError(errorCode, path) : null;
  };

  return AbstractControlDirective;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * A base class for directives that contain multiple registered instances of `NgControl`.
 * Only used by the forms module.
 */


var ControlContainer =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ControlContainer, _super);

  function ControlContainer() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(ControlContainer.prototype, "formDirective", {
    /**
     * @description
     * The top-level form directive for the control.
     */
    get: function get() {
      return null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ControlContainer.prototype, "path", {
    /**
     * @description
     * The path to this group.
     */
    get: function get() {
      return null;
    },
    enumerable: true,
    configurable: true
  });
  return ControlContainer;
}(AbstractControlDirective);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function isEmptyInputValue(value) {
  // we don't check for string here so it also works with arrays
  return value == null || value.length === 0;
}
/**
 * @description
 * An `InjectionToken` for registering additional synchronous validators used with `AbstractControl`s.
 *
 * @see `NG_ASYNC_VALIDATORS`
 *
 * @usageNotes
 *
 * ### Providing a custom validator
 *
 * The following example registers a custom validator directive. Adding the validator to the
 * existing collection of validators requires the `multi: true` option.
 *
 * ```typescript
 * @Directive({
 *   selector: '[customValidator]',
 *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]
 * })
 * class CustomValidatorDirective implements Validator {
 *   validate(control: AbstractControl): ValidationErrors | null {
 *     return { 'custom': true };
 *   }
 * }
 * ```
 *
 */


var NG_VALIDATORS = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('NgValidators');
/**
 * @description
 * An `InjectionToken` for registering additional asynchronous validators used with `AbstractControl`s.
 *
 * @see `NG_VALIDATORS`
 *
 */

var NG_ASYNC_VALIDATORS = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('NgAsyncValidators');
var EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;
/**
 * @description
 * Provides a set of built-in validators that can be used by form controls.
 *
 * A validator is a function that processes a `FormControl` or collection of
 * controls and returns an error map or null. A null map means that validation has passed.
 *
 * @see [Form Validation](/guide/form-validation)
 *
 */

var Validators =
/** @class */
function () {
  function Validators() {}
  /**
   * @description
   * Validator that requires the control's value to be greater than or equal to the provided number.
   * The validator exists only as a function and not as a directive.
   *
   * @usageNotes
   *
   * ### Validate against a minimum of 3
   *
   * ```typescript
   * const control = new FormControl(2, Validators.min(3));
   *
   * console.log(control.errors); // {min: {min: 3, actual: 2}}
   * ```
   *
   * @returns A validator function that returns an error map with the
   * `min` property if the validation check fails, otherwise `null`.
   *
   */


  Validators.min = function (min) {
    return function (control) {
      if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {
        return null; // don't validate empty values to allow optional controls
      }

      var value = parseFloat(control.value); // Controls with NaN values after parsing should be treated as not having a
      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min

      return !isNaN(value) && value < min ? {
        'min': {
          'min': min,
          'actual': control.value
        }
      } : null;
    };
  };
  /**
   * @description
   * Validator that requires the control's value to be less than or equal to the provided number.
   * The validator exists only as a function and not as a directive.
   *
   * @usageNotes
   *
   * ### Validate against a maximum of 15
   *
   * ```typescript
   * const control = new FormControl(16, Validators.max(15));
   *
   * console.log(control.errors); // {max: {max: 15, actual: 16}}
   * ```
   *
   * @returns A validator function that returns an error map with the
   * `max` property if the validation check fails, otherwise `null`.
   *
   */


  Validators.max = function (max) {
    return function (control) {
      if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {
        return null; // don't validate empty values to allow optional controls
      }

      var value = parseFloat(control.value); // Controls with NaN values after parsing should be treated as not having a
      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max

      return !isNaN(value) && value > max ? {
        'max': {
          'max': max,
          'actual': control.value
        }
      } : null;
    };
  };
  /**
   * @description
   * Validator that requires the control have a non-empty value.
   *
   * @usageNotes
   *
   * ### Validate that the field is non-empty
   *
   * ```typescript
   * const control = new FormControl('', Validators.required);
   *
   * console.log(control.errors); // {required: true}
   * ```
   *
   * @returns An error map with the `required` property
   * if the validation check fails, otherwise `null`.
   *
   */


  Validators.required = function (control) {
    return isEmptyInputValue(control.value) ? {
      'required': true
    } : null;
  };
  /**
   * @description
   * Validator that requires the control's value be true. This validator is commonly
   * used for required checkboxes.
   *
   * @usageNotes
   *
   * ### Validate that the field value is true
   *
   * ```typescript
   * const control = new FormControl('', Validators.requiredTrue);
   *
   * console.log(control.errors); // {required: true}
   * ```
   *
   * @returns An error map that contains the `required` property
   * set to `true` if the validation check fails, otherwise `null`.
   */


  Validators.requiredTrue = function (control) {
    return control.value === true ? null : {
      'required': true
    };
  };
  /**
   * @description
   * Validator that requires the control's value pass an email validation test.
   *
   * @usageNotes
   *
   * ### Validate that the field matches a valid email pattern
   *
   * ```typescript
   * const control = new FormControl('bad@', Validators.email);
   *
   * console.log(control.errors); // {email: true}
   * ```
   *
   * @returns An error map with the `email` property
   * if the validation check fails, otherwise `null`.
   *
   */


  Validators.email = function (control) {
    if (isEmptyInputValue(control.value)) {
      return null; // don't validate empty values to allow optional controls
    }

    return EMAIL_REGEXP.test(control.value) ? null : {
      'email': true
    };
  };
  /**
   * @description
   * Validator that requires the length of the control's value to be greater than or equal
   * to the provided minimum length. This validator is also provided by default if you use the
   * the HTML5 `minlength` attribute.
   *
   * @usageNotes
   *
   * ### Validate that the field has a minimum of 3 characters
   *
   * ```typescript
   * const control = new FormControl('ng', Validators.minLength(3));
   *
   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}
   * ```
   *
   * ```html
   * <input minlength="5">
   * ```
   *
   * @returns A validator function that returns an error map with the
   * `minlength` if the validation check fails, otherwise `null`.
   */


  Validators.minLength = function (minLength) {
    return function (control) {
      if (isEmptyInputValue(control.value)) {
        return null; // don't validate empty values to allow optional controls
      }

      var length = control.value ? control.value.length : 0;
      return length < minLength ? {
        'minlength': {
          'requiredLength': minLength,
          'actualLength': length
        }
      } : null;
    };
  };
  /**
   * @description
   * Validator that requires the length of the control's value to be less than or equal
   * to the provided maximum length. This validator is also provided by default if you use the
   * the HTML5 `maxlength` attribute.
   *
   * @usageNotes
   *
   * ### Validate that the field has maximum of 5 characters
   *
   * ```typescript
   * const control = new FormControl('Angular', Validators.maxLength(5));
   *
   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}
   * ```
   *
   * ```html
   * <input maxlength="5">
   * ```
   *
   * @returns A validator function that returns an error map with the
   * `maxlength` property if the validation check fails, otherwise `null`.
   */


  Validators.maxLength = function (maxLength) {
    return function (control) {
      var length = control.value ? control.value.length : 0;
      return length > maxLength ? {
        'maxlength': {
          'requiredLength': maxLength,
          'actualLength': length
        }
      } : null;
    };
  };
  /**
   * @description
   * Validator that requires the control's value to match a regex pattern. This validator is also
   * provided
   * by default if you use the HTML5 `pattern` attribute.
   *
   * @usageNotes
   *
   * ### Validate that the field only contains letters or spaces
   *
   * ```typescript
   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));
   *
   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}
   * ```
   *
   * ```html
   * <input pattern="[a-zA-Z ]*">
   * ```
   *
   * @returns A validator function that returns an error map with the
   * `pattern` property if the validation check fails, otherwise `null`.
   */


  Validators.pattern = function (pattern) {
    if (!pattern) return Validators.nullValidator;
    var regex;
    var regexStr;

    if (typeof pattern === 'string') {
      regexStr = '';
      if (pattern.charAt(0) !== '^') regexStr += '^';
      regexStr += pattern;
      if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';
      regex = new RegExp(regexStr);
    } else {
      regexStr = pattern.toString();
      regex = pattern;
    }

    return function (control) {
      if (isEmptyInputValue(control.value)) {
        return null; // don't validate empty values to allow optional controls
      }

      var value = control.value;
      return regex.test(value) ? null : {
        'pattern': {
          'requiredPattern': regexStr,
          'actualValue': value
        }
      };
    };
  };
  /**
   * @description
   * Validator that performs no operation.
   */


  Validators.nullValidator = function (control) {
    return null;
  };

  Validators.compose = function (validators) {
    if (!validators) return null;
    var presentValidators = validators.filter(isPresent);
    if (presentValidators.length == 0) return null;
    return function (control) {
      return _mergeErrors(_executeValidators(control, presentValidators));
    };
  };
  /**
   * @description
   * Compose multiple async validators into a single function that returns the union
   * of the individual error objects for the provided control.
   *
   * @returns A validator function that returns an error map with the
   * merged error objects of the async validators if the validation check fails, otherwise `null`.
  */


  Validators.composeAsync = function (validators) {
    if (!validators) return null;
    var presentValidators = validators.filter(isPresent);
    if (presentValidators.length == 0) return null;
    return function (control) {
      var observables = _executeAsyncValidators(control, presentValidators).map(toObservable);

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["forkJoin"])(observables).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(_mergeErrors));
    };
  };

  return Validators;
}();

function isPresent(o) {
  return o != null;
}

function toObservable(r) {
  var obs = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵisPromise"])(r) ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(r) : r;

  if (!Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵisObservable"])(obs)) {
    throw new Error("Expected validator to return Promise or Observable.");
  }

  return obs;
}

function _executeValidators(control, validators) {
  return validators.map(function (v) {
    return v(control);
  });
}

function _executeAsyncValidators(control, validators) {
  return validators.map(function (v) {
    return v(control);
  });
}

function _mergeErrors(arrayOfErrors) {
  var res = arrayOfErrors.reduce(function (res, errors) {
    return errors != null ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, res, errors) : res;
  }, {});
  return Object.keys(res).length === 0 ? null : res;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used to provide a `ControlValueAccessor` for form controls.
 *
 * See `DefaultValueAccessor` for how to implement one.
 *
 */


var NG_VALUE_ACCESSOR = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('NgValueAccessor');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var CHECKBOX_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return CheckboxControlValueAccessor;
  }),
  multi: true
};
/**
 * The accessor for writing a value and listening to changes on a checkbox input element.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input type="checkbox" name="rememberLogin" ngModel>
 * ```
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var CheckboxControlValueAccessor =
/** @class */
function () {
  function CheckboxControlValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  CheckboxControlValueAccessor.prototype.writeValue = function (value) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);
  };

  CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  CheckboxControlValueAccessor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',
    host: {
      '(change)': 'onChange($event.target.checked)',
      '(blur)': 'onTouched()'
    },
    providers: [CHECKBOX_VALUE_ACCESSOR]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])], CheckboxControlValueAccessor);
  return CheckboxControlValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var DEFAULT_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return DefaultValueAccessor;
  }),
  multi: true
};
/**
 * We must check whether the agent is Android because composition events
 * behave differently between iOS and Android.
 */

function _isAndroid() {
  var userAgent = Object(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["ɵgetDOM"])() ? Object(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["ɵgetDOM"])().getUserAgent() : '';
  return /android (\d+)/.test(userAgent.toLowerCase());
}
/**
 * Turn this mode on if you want form directives to buffer IME input until compositionend
 * @experimental
 */


var COMPOSITION_BUFFER_MODE = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('CompositionEventMode');
/**
 * The default accessor for writing a value and listening to changes that is used by the
 * `NgModel`, `FormControlDirective`, and `FormControlName` directives.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input type="text" name="searchQuery" ngModel>
 * ```
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var DefaultValueAccessor =
/** @class */
function () {
  function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    this._compositionMode = _compositionMode;

    this.onChange = function (_) {};

    this.onTouched = function () {};
    /** Whether the user is creating a composition string (IME events). */


    this._composing = false;

    if (this._compositionMode == null) {
      this._compositionMode = !_isAndroid();
    }
  }

  DefaultValueAccessor.prototype.writeValue = function (value) {
    var normalizedValue = value == null ? '' : value;

    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);
  };

  DefaultValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  DefaultValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };
  /** @internal */


  DefaultValueAccessor.prototype._handleInput = function (value) {
    if (!this._compositionMode || this._compositionMode && !this._composing) {
      this.onChange(value);
    }
  };
  /** @internal */


  DefaultValueAccessor.prototype._compositionStart = function () {
    this._composing = true;
  };
  /** @internal */


  DefaultValueAccessor.prototype._compositionEnd = function (value) {
    this._composing = false;
    this._compositionMode && this.onChange(value);
  };

  DefaultValueAccessor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',
    // TODO: vsavkin replace the above selector with the one below it once
    // https://github.com/angular/angular/issues/3011 is implemented
    // selector: '[ngModel],[formControl],[formControlName]',
    host: {
      '(input)': '$any(this)._handleInput($event.target.value)',
      '(blur)': 'onTouched()',
      '(compositionstart)': '$any(this)._compositionStart()',
      '(compositionend)': '$any(this)._compositionEnd($event.target.value)'
    },
    providers: [DEFAULT_VALUE_ACCESSOR]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(COMPOSITION_BUFFER_MODE)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], Boolean])], DefaultValueAccessor);
  return DefaultValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function normalizeValidator(validator) {
  if (validator.validate) {
    return function (c) {
      return validator.validate(c);
    };
  } else {
    return validator;
  }
}

function normalizeAsyncValidator(validator) {
  if (validator.validate) {
    return function (c) {
      return validator.validate(c);
    };
  } else {
    return validator;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NUMBER_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return NumberValueAccessor;
  }),
  multi: true
};
/**
 * The accessor for writing a number value and listening to changes that is used by the
 * `NgModel`, `FormControlDirective`, and `FormControlName` directives.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input type="number" [(ngModel)]="age">
 * ```
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var NumberValueAccessor =
/** @class */
function () {
  function NumberValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  NumberValueAccessor.prototype.writeValue = function (value) {
    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null
    var normalizedValue = value == null ? '' : value;

    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);
  };

  NumberValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = function (value) {
      fn(value == '' ? null : parseFloat(value));
    };
  };

  NumberValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  NumberValueAccessor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',
    host: {
      '(change)': 'onChange($event.target.value)',
      '(input)': 'onChange($event.target.value)',
      '(blur)': 'onTouched()'
    },
    providers: [NUMBER_VALUE_ACCESSOR]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])], NumberValueAccessor);
  return NumberValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function unimplemented() {
  throw new Error('unimplemented');
}
/**
 * @description
 * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`
 * object to a DOM element.
 */


var NgControl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgControl, _super);

  function NgControl() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    /**
     * @description
     * The parent form for the control.
     *
     * @internal
     */


    _this._parent = null;
    /**
     * @description
     * The name for the control
     */

    _this.name = null;
    /**
     * @description
     * The value accessor for the control
     */

    _this.valueAccessor = null;
    /**
     * @description
     * The uncomposed array of synchronous validators for the control
     *
     * @internal
     */

    _this._rawValidators = [];
    /**
     * @description
     * The uncomposed array of async validators for the control
     *
     * @internal
     */

    _this._rawAsyncValidators = [];
    return _this;
  }

  Object.defineProperty(NgControl.prototype, "validator", {
    /**
     * @description
     * The registered synchronous validator function for the control
     *
     * @throws An exception that this method is not implemented
     */
    get: function get() {
      return unimplemented();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgControl.prototype, "asyncValidator", {
    /**
     * @description
     * The registered async validator function for the control
     *
     * @throws An exception that this method is not implemented
     */
    get: function get() {
      return unimplemented();
    },
    enumerable: true,
    configurable: true
  });
  return NgControl;
}(AbstractControlDirective);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var RADIO_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return RadioControlValueAccessor;
  }),
  multi: true
};
/**
 * Internal class used by Angular to uncheck radio buttons with the matching name.
 */

var RadioControlRegistry =
/** @class */
function () {
  function RadioControlRegistry() {
    this._accessors = [];
  }

  RadioControlRegistry.prototype.add = function (control, accessor) {
    this._accessors.push([control, accessor]);
  };

  RadioControlRegistry.prototype.remove = function (accessor) {
    for (var i = this._accessors.length - 1; i >= 0; --i) {
      if (this._accessors[i][1] === accessor) {
        this._accessors.splice(i, 1);

        return;
      }
    }
  };

  RadioControlRegistry.prototype.select = function (accessor) {
    var _this = this;

    this._accessors.forEach(function (c) {
      if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {
        c[1].fireUncheck(accessor.value);
      }
    });
  };

  RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {
    if (!controlPair[0].control) return false;
    return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;
  };

  RadioControlRegistry = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()], RadioControlRegistry);
  return RadioControlRegistry;
}();
/**
 * @description
 *
 * Writes radio control values and listens to radio control changes.
 *
 * Used by `NgModel`, `FormControlDirective`, and `FormControlName`
 * to keep the view synced with the `FormControl` model.
 *
 * If you have imported the `FormsModule` or the `ReactiveFormsModule`, this
 * value accessor will be active on any radio control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * @usageNotes
 * ### How to use radio buttons with form directives
 *
 * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons
 * in the same group have the same `name` attribute.  Radio buttons with different `name`
 * attributes do not affect each other.
 *
 * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}
 *
 * When using radio buttons in a reactive form, radio buttons in the same group should have the
 * same `formControlName`. You can also add a `name` attribute, but it's optional.
 *
 * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */


var RadioControlValueAccessor =
/** @class */
function () {
  function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    this._registry = _registry;
    this._injector = _injector;

    this.onChange = function () {};

    this.onTouched = function () {};
  }

  RadioControlValueAccessor.prototype.ngOnInit = function () {
    this._control = this._injector.get(NgControl);

    this._checkName();

    this._registry.add(this._control, this);
  };

  RadioControlValueAccessor.prototype.ngOnDestroy = function () {
    this._registry.remove(this);
  };

  RadioControlValueAccessor.prototype.writeValue = function (value) {
    this._state = value === this.value;

    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);
  };

  RadioControlValueAccessor.prototype.registerOnChange = function (fn) {
    var _this = this;

    this._fn = fn;

    this.onChange = function () {
      fn(_this.value);

      _this._registry.select(_this);
    };
  };

  RadioControlValueAccessor.prototype.fireUncheck = function (value) {
    this.writeValue(value);
  };

  RadioControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  RadioControlValueAccessor.prototype._checkName = function () {
    if (this.name && this.formControlName && this.name !== this.formControlName) {
      this._throwNameError();
    }

    if (!this.name && this.formControlName) this.name = this.formControlName;
  };

  RadioControlValueAccessor.prototype._throwNameError = function () {
    throw new Error("\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    ");
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RadioControlValueAccessor.prototype, "name", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RadioControlValueAccessor.prototype, "formControlName", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], RadioControlValueAccessor.prototype, "value", void 0);

  RadioControlValueAccessor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',
    host: {
      '(change)': 'onChange()',
      '(blur)': 'onTouched()'
    },
    providers: [RADIO_VALUE_ACCESSOR]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], RadioControlRegistry, _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])], RadioControlValueAccessor);
  return RadioControlValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var RANGE_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return RangeValueAccessor;
  }),
  multi: true
};
/**
 * The accessor for writing a range value and listening to changes that is used by the
 * `NgModel`, `FormControlDirective`, and `FormControlName` directives.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input type="range" [(ngModel)]="age" >
 * ```
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var RangeValueAccessor =
/** @class */
function () {
  function RangeValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  RangeValueAccessor.prototype.writeValue = function (value) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));
  };

  RangeValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = function (value) {
      fn(value == '' ? null : parseFloat(value));
    };
  };

  RangeValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  RangeValueAccessor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',
    host: {
      '(change)': 'onChange($event.target.value)',
      '(input)': 'onChange($event.target.value)',
      '(blur)': 'onTouched()'
    },
    providers: [RANGE_VALUE_ACCESSOR]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])], RangeValueAccessor);
  return RangeValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var FormErrorExamples = {
  formControlName: "\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });",
  formGroupName: "\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });",
  formArrayName: "\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });",
  ngModelGroup: "\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>",
  ngModelWithFormGroup: "\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  "
};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ReactiveErrors =
/** @class */
function () {
  function ReactiveErrors() {}

  ReactiveErrors.controlParentException = function () {
    throw new Error("formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " + FormErrorExamples.formControlName);
  };

  ReactiveErrors.ngModelGroupException = function () {
    throw new Error("formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        " + FormErrorExamples.formGroupName + "\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        " + FormErrorExamples.ngModelGroup);
  };

  ReactiveErrors.missingFormException = function () {
    throw new Error("formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       " + FormErrorExamples.formControlName);
  };

  ReactiveErrors.groupParentException = function () {
    throw new Error("formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " + FormErrorExamples.formGroupName);
  };

  ReactiveErrors.arrayParentException = function () {
    throw new Error("formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        " + FormErrorExamples.formArrayName);
  };

  ReactiveErrors.disabledAttrWarning = function () {
    console.warn("\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    ");
  };

  ReactiveErrors.ngModelWarning = function (directiveName) {
    console.warn("\n    It looks like you're using ngModel on the same form field as " + directiveName + ". \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/" + (directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName') + "#use-with-ngmodel\n    ");
  };

  return ReactiveErrors;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SELECT_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return SelectControlValueAccessor;
  }),
  multi: true
};

function _buildValueString(id, value) {
  if (id == null) return "" + value;
  if (value && _typeof(value) === 'object') value = 'Object';
  return (id + ": " + value).slice(0, 50);
}

function _extractId(valueString) {
  return valueString.split(':')[0];
}
/**
 * @description
 *
 * Writes values and listens to changes on a select element.
 *
 * Used by `NgModel`, `FormControlDirective`, and `FormControlName`
 * to keep the view synced with the `FormControl` model.
 *
 * If you have imported the `FormsModule` or the `ReactiveFormsModule`, this
 * value accessor will be active on any select control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * @usageNotes
 * ### How to use select controls with form directives
 *
 * To use a select in a template-driven form, simply add an `ngModel` and a `name`
 * attribute to the main `<select>` tag.
 *
 * If your option values are simple strings, you can bind to the normal `value` property
 * on the option.  If your option values happen to be objects (and you'd like to save the
 * selection in your form as an object), use `ngValue` instead:
 *
 * {@example forms/ts/selectControl/select_control_example.ts region='Component'}
 *
 * In reactive forms, you'll also want to add your form directive (`formControlName` or
 * `formControl`) on the main `<select>` tag. Like in the former example, you have the
 * choice of binding to the  `value` or `ngValue` property on the select's options.
 *
 * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}
 *
 * ### Caveat: Option selection
 *
 * Angular uses object identity to select option. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.
 * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects option by the return value of the function.
 *
 * ### Syntax
 *
 * ```
 * <select [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 * Note: We listen to the 'change' event because 'input' events aren't fired
 * for selects in Firefox and IE:
 * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350
 * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */


var SelectControlValueAccessor =
/** @class */
function () {
  function SelectControlValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    /** @internal */

    this._optionMap = new Map();
    /** @internal */

    this._idCounter = 0;

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this._compareWith = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵlooseIdentical"];
  }

  Object.defineProperty(SelectControlValueAccessor.prototype, "compareWith", {
    set: function set(fn) {
      if (typeof fn !== 'function') {
        throw new Error("compareWith must be a function, but received " + JSON.stringify(fn));
      }

      this._compareWith = fn;
    },
    enumerable: true,
    configurable: true
  });

  SelectControlValueAccessor.prototype.writeValue = function (value) {
    this.value = value;

    var id = this._getOptionId(value);

    if (id == null) {
      this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);
    }

    var valueString = _buildValueString(id, value);

    this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);
  };

  SelectControlValueAccessor.prototype.registerOnChange = function (fn) {
    var _this = this;

    this.onChange = function (valueString) {
      _this.value = _this._getOptionValue(valueString);
      fn(_this.value);
    };
  };

  SelectControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };
  /** @internal */


  SelectControlValueAccessor.prototype._registerOption = function () {
    return (this._idCounter++).toString();
  };
  /** @internal */


  SelectControlValueAccessor.prototype._getOptionId = function (value) {
    var e_1, _a;

    try {
      for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(Array.from(this._optionMap.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {
        var id = _c.value;
        if (this._compareWith(this._optionMap.get(id), value)) return id;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return null;
  };
  /** @internal */


  SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {
    var id = _extractId(valueString);

    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Function])], SelectControlValueAccessor.prototype, "compareWith", null);

  SelectControlValueAccessor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',
    host: {
      '(change)': 'onChange($event.target.value)',
      '(blur)': 'onTouched()'
    },
    providers: [SELECT_VALUE_ACCESSOR]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])], SelectControlValueAccessor);
  return SelectControlValueAccessor;
}();
/**
 * @description
 *
 * Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * See docs for `SelectControlValueAccessor` for usage examples.
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */


var NgSelectOption =
/** @class */
function () {
  function NgSelectOption(_element, _renderer, _select) {
    this._element = _element;
    this._renderer = _renderer;
    this._select = _select;
    if (this._select) this.id = this._select._registerOption();
  }

  Object.defineProperty(NgSelectOption.prototype, "ngValue", {
    set: function set(value) {
      if (this._select == null) return;

      this._select._optionMap.set(this.id, value);

      this._setElementValue(_buildValueString(this.id, value));

      this._select.writeValue(this._select.value);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgSelectOption.prototype, "value", {
    set: function set(value) {
      this._setElementValue(value);

      if (this._select) this._select.writeValue(this._select.value);
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  NgSelectOption.prototype._setElementValue = function (value) {
    this._renderer.setProperty(this._element.nativeElement, 'value', value);
  };

  NgSelectOption.prototype.ngOnDestroy = function () {
    if (this._select) {
      this._select._optionMap.delete(this.id);

      this._select.writeValue(this._select.value);
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngValue'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], NgSelectOption.prototype, "ngValue", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('value'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], NgSelectOption.prototype, "value", null);

  NgSelectOption = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'option'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], SelectControlValueAccessor])], NgSelectOption);
  return NgSelectOption;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SELECT_MULTIPLE_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return SelectMultipleControlValueAccessor;
  }),
  multi: true
};

function _buildValueString$1(id, value) {
  if (id == null) return "" + value;
  if (typeof value === 'string') value = "'" + value + "'";
  if (value && _typeof(value) === 'object') value = 'Object';
  return (id + ": " + value).slice(0, 50);
}

function _extractId$1(valueString) {
  return valueString.split(':')[0];
}
/**
 * The accessor for writing a value and listening to changes on a select element.
 *
 * @usageNotes
 * ### Caveat: Options selection
 *
 * Angular uses object identity to select options. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`
 * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects options by the return value of the function.
 *
 * ### Syntax
 *
 * ```
 * <select multiple [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 * @ngModule ReactiveFormsModule
 * @ngModule FormsModule
 */


var SelectMultipleControlValueAccessor =
/** @class */
function () {
  function SelectMultipleControlValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    /** @internal */

    this._optionMap = new Map();
    /** @internal */

    this._idCounter = 0;

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this._compareWith = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵlooseIdentical"];
  }

  Object.defineProperty(SelectMultipleControlValueAccessor.prototype, "compareWith", {
    set: function set(fn) {
      if (typeof fn !== 'function') {
        throw new Error("compareWith must be a function, but received " + JSON.stringify(fn));
      }

      this._compareWith = fn;
    },
    enumerable: true,
    configurable: true
  });

  SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {
    var _this = this;

    this.value = value;
    var optionSelectedStateSetter;

    if (Array.isArray(value)) {
      // convert values to ids
      var ids_1 = value.map(function (v) {
        return _this._getOptionId(v);
      });

      optionSelectedStateSetter = function optionSelectedStateSetter(opt, o) {
        opt._setSelected(ids_1.indexOf(o.toString()) > -1);
      };
    } else {
      optionSelectedStateSetter = function optionSelectedStateSetter(opt, o) {
        opt._setSelected(false);
      };
    }

    this._optionMap.forEach(optionSelectedStateSetter);
  };

  SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {
    var _this = this;

    this.onChange = function (_) {
      var selected = [];

      if (_.hasOwnProperty('selectedOptions')) {
        var options = _.selectedOptions;

        for (var i = 0; i < options.length; i++) {
          var opt = options.item(i);

          var val = _this._getOptionValue(opt.value);

          selected.push(val);
        }
      } // Degrade on IE
      else {
          var options = _.options;

          for (var i = 0; i < options.length; i++) {
            var opt = options.item(i);

            if (opt.selected) {
              var val = _this._getOptionValue(opt.value);

              selected.push(val);
            }
          }
        }

      _this.value = selected;
      fn(selected);
    };
  };

  SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };
  /** @internal */


  SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {
    var id = (this._idCounter++).toString();

    this._optionMap.set(id, value);

    return id;
  };
  /** @internal */


  SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {
    var e_1, _a;

    try {
      for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(Array.from(this._optionMap.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {
        var id = _c.value;
        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return null;
  };
  /** @internal */


  SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {
    var id = _extractId$1(valueString);

    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Function])], SelectMultipleControlValueAccessor.prototype, "compareWith", null);

  SelectMultipleControlValueAccessor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',
    host: {
      '(change)': 'onChange($event.target)',
      '(blur)': 'onTouched()'
    },
    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])], SelectMultipleControlValueAccessor);
  return SelectMultipleControlValueAccessor;
}();
/**
 * Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <select multiple name="city" ngModel>
 *   <option *ngFor="let c of cities" [value]="c"></option>
 * </select>
 * ```
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */


var NgSelectMultipleOption =
/** @class */
function () {
  function NgSelectMultipleOption(_element, _renderer, _select) {
    this._element = _element;
    this._renderer = _renderer;
    this._select = _select;

    if (this._select) {
      this.id = this._select._registerOption(this);
    }
  }

  Object.defineProperty(NgSelectMultipleOption.prototype, "ngValue", {
    set: function set(value) {
      if (this._select == null) return;
      this._value = value;

      this._setElementValue(_buildValueString$1(this.id, value));

      this._select.writeValue(this._select.value);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgSelectMultipleOption.prototype, "value", {
    set: function set(value) {
      if (this._select) {
        this._value = value;

        this._setElementValue(_buildValueString$1(this.id, value));

        this._select.writeValue(this._select.value);
      } else {
        this._setElementValue(value);
      }
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  NgSelectMultipleOption.prototype._setElementValue = function (value) {
    this._renderer.setProperty(this._element.nativeElement, 'value', value);
  };
  /** @internal */


  NgSelectMultipleOption.prototype._setSelected = function (selected) {
    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);
  };

  NgSelectMultipleOption.prototype.ngOnDestroy = function () {
    if (this._select) {
      this._select._optionMap.delete(this.id);

      this._select.writeValue(this._select.value);
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngValue'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], NgSelectMultipleOption.prototype, "ngValue", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('value'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], NgSelectMultipleOption.prototype, "value", null);

  NgSelectMultipleOption = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'option'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], SelectMultipleControlValueAccessor])], NgSelectMultipleOption);
  return NgSelectMultipleOption;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function controlPath(name, parent) {
  return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(parent.path, [name]);
}

function setUpControl(control, dir) {
  if (!control) _throwError(dir, 'Cannot find control with');
  if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');
  control.validator = Validators.compose([control.validator, dir.validator]);
  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
  dir.valueAccessor.writeValue(control.value);
  setUpViewChangePipeline(control, dir);
  setUpModelChangePipeline(control, dir);
  setUpBlurPipeline(control, dir);

  if (dir.valueAccessor.setDisabledState) {
    control.registerOnDisabledChange(function (isDisabled) {
      dir.valueAccessor.setDisabledState(isDisabled);
    });
  } // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4


  dir._rawValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(function () {
      return control.updateValueAndValidity();
    });
  });

  dir._rawAsyncValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(function () {
      return control.updateValueAndValidity();
    });
  });
}

function cleanUpControl(control, dir) {
  dir.valueAccessor.registerOnChange(function () {
    return _noControlError(dir);
  });
  dir.valueAccessor.registerOnTouched(function () {
    return _noControlError(dir);
  });

  dir._rawValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) {
      validator.registerOnValidatorChange(null);
    }
  });

  dir._rawAsyncValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) {
      validator.registerOnValidatorChange(null);
    }
  });

  if (control) control._clearChangeFns();
}

function setUpViewChangePipeline(control, dir) {
  dir.valueAccessor.registerOnChange(function (newValue) {
    control._pendingValue = newValue;
    control._pendingChange = true;
    control._pendingDirty = true;
    if (control.updateOn === 'change') updateControl(control, dir);
  });
}

function setUpBlurPipeline(control, dir) {
  dir.valueAccessor.registerOnTouched(function () {
    control._pendingTouched = true;
    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);
    if (control.updateOn !== 'submit') control.markAsTouched();
  });
}

function updateControl(control, dir) {
  if (control._pendingDirty) control.markAsDirty();
  control.setValue(control._pendingValue, {
    emitModelToViewChange: false
  });
  dir.viewToModelUpdate(control._pendingValue);
  control._pendingChange = false;
}

function setUpModelChangePipeline(control, dir) {
  control.registerOnChange(function (newValue, emitModelEvent) {
    // control -> view
    dir.valueAccessor.writeValue(newValue); // control -> ngModel

    if (emitModelEvent) dir.viewToModelUpdate(newValue);
  });
}

function setUpFormContainer(control, dir) {
  if (control == null) _throwError(dir, 'Cannot find control with');
  control.validator = Validators.compose([control.validator, dir.validator]);
  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
}

function _noControlError(dir) {
  return _throwError(dir, 'There is no FormControl instance attached to form control element with');
}

function _throwError(dir, message) {
  var messageEnd;

  if (dir.path.length > 1) {
    messageEnd = "path: '" + dir.path.join(' -> ') + "'";
  } else if (dir.path[0]) {
    messageEnd = "name: '" + dir.path + "'";
  } else {
    messageEnd = 'unspecified name attribute';
  }

  throw new Error(message + " " + messageEnd);
}

function composeValidators(validators) {
  return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;
}

function composeAsyncValidators(validators) {
  return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) : null;
}

function isPropertyUpdated(changes, viewModel) {
  if (!changes.hasOwnProperty('model')) return false;
  var change = changes['model'];
  if (change.isFirstChange()) return true;
  return !Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵlooseIdentical"])(viewModel, change.currentValue);
}

var BUILTIN_ACCESSORS = [CheckboxControlValueAccessor, RangeValueAccessor, NumberValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor];

function isBuiltInAccessor(valueAccessor) {
  return BUILTIN_ACCESSORS.some(function (a) {
    return valueAccessor.constructor === a;
  });
}

function syncPendingControls(form, directives) {
  form._syncPendingControls();

  directives.forEach(function (dir) {
    var control = dir.control;

    if (control.updateOn === 'submit' && control._pendingChange) {
      dir.viewToModelUpdate(control._pendingValue);
      control._pendingChange = false;
    }
  });
} // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented


function selectValueAccessor(dir, valueAccessors) {
  if (!valueAccessors) return null;
  if (!Array.isArray(valueAccessors)) _throwError(dir, 'Value accessor was not provided as an array for form control with');
  var defaultAccessor = undefined;
  var builtinAccessor = undefined;
  var customAccessor = undefined;
  valueAccessors.forEach(function (v) {
    if (v.constructor === DefaultValueAccessor) {
      defaultAccessor = v;
    } else if (isBuiltInAccessor(v)) {
      if (builtinAccessor) _throwError(dir, 'More than one built-in value accessor matches form control with');
      builtinAccessor = v;
    } else {
      if (customAccessor) _throwError(dir, 'More than one custom value accessor matches form control with');
      customAccessor = v;
    }
  });
  if (customAccessor) return customAccessor;
  if (builtinAccessor) return builtinAccessor;
  if (defaultAccessor) return defaultAccessor;

  _throwError(dir, 'No valid value accessor for form control with');

  return null;
}

function removeDir(list, el) {
  var index = list.indexOf(el);
  if (index > -1) list.splice(index, 1);
} // TODO(kara): remove after deprecation period


function _ngModelWarning(name, type, instance, warningConfig) {
  if (!Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["isDevMode"])() || warningConfig === 'never') return;

  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {
    ReactiveErrors.ngModelWarning(name);
    type._ngModelWarningSentOnce = true;
    instance._ngModelWarningSent = true;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.
 *
 */


var AbstractFormGroupDirective =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AbstractFormGroupDirective, _super);

  function AbstractFormGroupDirective() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @description
   * An internal callback method triggered on the instance after the inputs are set.
   * Registers the group with its parent group.
   */


  AbstractFormGroupDirective.prototype.ngOnInit = function () {
    this._checkParentType();

    this.formDirective.addFormGroup(this);
  };
  /**
   * @description
   * An internal callback method triggered before the instance is destroyed.
   * Removes the group from its parent group.
   */


  AbstractFormGroupDirective.prototype.ngOnDestroy = function () {
    if (this.formDirective) {
      this.formDirective.removeFormGroup(this);
    }
  };

  Object.defineProperty(AbstractFormGroupDirective.prototype, "control", {
    /**
     * @description
     * The `FormGroup` bound to this directive.
     */
    get: function get() {
      return this.formDirective.getFormGroup(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "path", {
    /**
     * @description
     * The path to this group from the top-level directive.
     */
    get: function get() {
      return controlPath(this.name, this._parent);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "formDirective", {
    /**
     * @description
     * The top-level directive for this group if present, otherwise null.
     */
    get: function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "validator", {
    /**
     * @description
     * The synchronous validators registered with this group.
     */
    get: function get() {
      return composeValidators(this._validators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "asyncValidator", {
    /**
     * @description
     * The async validators registered with this group.
     */
    get: function get() {
      return composeAsyncValidators(this._asyncValidators);
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  AbstractFormGroupDirective.prototype._checkParentType = function () {};

  return AbstractFormGroupDirective;
}(ControlContainer);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var AbstractControlStatus =
/** @class */
function () {
  function AbstractControlStatus(cd) {
    this._cd = cd;
  }

  Object.defineProperty(AbstractControlStatus.prototype, "ngClassUntouched", {
    get: function get() {
      return this._cd.control ? this._cd.control.untouched : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassTouched", {
    get: function get() {
      return this._cd.control ? this._cd.control.touched : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassPristine", {
    get: function get() {
      return this._cd.control ? this._cd.control.pristine : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassDirty", {
    get: function get() {
      return this._cd.control ? this._cd.control.dirty : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassValid", {
    get: function get() {
      return this._cd.control ? this._cd.control.valid : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassInvalid", {
    get: function get() {
      return this._cd.control ? this._cd.control.invalid : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassPending", {
    get: function get() {
      return this._cd.control ? this._cd.control.pending : false;
    },
    enumerable: true,
    configurable: true
  });
  return AbstractControlStatus;
}();

var ngControlStatusHost = {
  '[class.ng-untouched]': 'ngClassUntouched',
  '[class.ng-touched]': 'ngClassTouched',
  '[class.ng-pristine]': 'ngClassPristine',
  '[class.ng-dirty]': 'ngClassDirty',
  '[class.ng-valid]': 'ngClassValid',
  '[class.ng-invalid]': 'ngClassInvalid',
  '[class.ng-pending]': 'ngClassPending'
};
/**
 * Directive automatically applied to Angular form controls that sets CSS classes
 * based on control status. The following classes are applied as the properties
 * become true:
 *
 * * ng-valid
 * * ng-invalid
 * * ng-pending
 * * ng-pristine
 * * ng-dirty
 * * ng-untouched
 * * ng-touched
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var NgControlStatus =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgControlStatus, _super);

  function NgControlStatus(cd) {
    return _super.call(this, cd) || this;
  }

  NgControlStatus = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[formControlName],[ngModel],[formControl]',
    host: ngControlStatusHost
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [NgControl])], NgControlStatus);
  return NgControlStatus;
}(AbstractControlStatus);
/**
 * Directive automatically applied to Angular form groups that sets CSS classes
 * based on control status (valid/invalid/dirty/etc).
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */


var NgControlStatusGroup =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgControlStatusGroup, _super);

  function NgControlStatusGroup(cd) {
    return _super.call(this, cd) || this;
  }

  NgControlStatusGroup = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',
    host: ngControlStatusHost
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ControlContainer])], NgControlStatusGroup);
  return NgControlStatusGroup;
}(AbstractControlStatus);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Reports that a FormControl is valid, meaning that no errors exist in the input value.
 *
 * @see `status`
 */


var VALID = 'VALID';
/**
 * Reports that a FormControl is invalid, meaning that an error exists in the input value.
 *
 * @see `status`
 */

var INVALID = 'INVALID';
/**
 * Reports that a FormControl is pending, meaning that that async validation is occurring and
 * errors are not yet available for the input value.
 *
 * @see `markAsPending`
 * @see `status`
 */

var PENDING = 'PENDING';
/**
 * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor
 * calculations of validity or value.
 *
 * @see `markAsDisabled`
 * @see `status`
 */

var DISABLED = 'DISABLED';

function _find(control, path, delimiter) {
  if (path == null) return null;

  if (!(path instanceof Array)) {
    path = path.split(delimiter);
  }

  if (path instanceof Array && path.length === 0) return null;
  return path.reduce(function (v, name) {
    if (v instanceof FormGroup) {
      return v.controls.hasOwnProperty(name) ? v.controls[name] : null;
    }

    if (v instanceof FormArray) {
      return v.at(name) || null;
    }

    return null;
  }, control);
}

function coerceToValidator(validatorOrOpts) {
  var validator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts;
  return Array.isArray(validator) ? composeValidators(validator) : validator || null;
}

function coerceToAsyncValidator(asyncValidator, validatorOrOpts) {
  var origAsyncValidator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator;
  return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) : origAsyncValidator || null;
}

function isOptionsObj(validatorOrOpts) {
  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && _typeof(validatorOrOpts) === 'object';
}
/**
 * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.
 *
 * It provides some of the shared behavior that all controls and groups of controls have, like
 * running validators, calculating status, and resetting state. It also defines the properties
 * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be
 * instantiated directly.
 *
 * @see [Forms Guide](/guide/forms)
 * @see [Reactive Forms Guide](/guide/reactive-forms)
 * @see [Dynamic Forms Guide](/guide/dynamic-form)
 *
 */


var AbstractControl =
/** @class */
function () {
  /**
   * Initialize the AbstractControl instance.
   *
   * @param validator The function that determines the synchronous validity of this control.
   * @param asyncValidator The function that determines the asynchronous validity of this
   * control.
   */
  function AbstractControl(validator, asyncValidator) {
    this.validator = validator;
    this.asyncValidator = asyncValidator;
    /** @internal */

    this._onCollectionChange = function () {};
    /**
     * A control is `pristine` if the user has not yet changed
     * the value in the UI.
     *
     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.
     * Programmatic changes to a control's value do not mark it dirty.
     */


    this.pristine = true;
    /**
     * True if the control is marked as `touched`.
     *
     * A control is marked `touched` once the user has triggered
     * a `blur` event on it.
     */

    this.touched = false;
    /** @internal */

    this._onDisabledChange = [];
  }

  Object.defineProperty(AbstractControl.prototype, "parent", {
    /**
     * The parent control.
     */
    get: function get() {
      return this._parent;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "valid", {
    /**
     * A control is `valid` when its `status` is `VALID`.
     *
     * @see `status`
     *
     * @returns True if the control has passed all of its validation tests,
     * false otherwise.
     */
    get: function get() {
      return this.status === VALID;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "invalid", {
    /**
     * A control is `invalid` when its `status` is `INVALID`.
     *
     * @see `status`
     *
     * @returns True if this control has failed one or more of its validation checks,
     * false otherwise.
     */
    get: function get() {
      return this.status === INVALID;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "pending", {
    /**
     * A control is `pending` when its `status` is `PENDING`.
     *
     * @see `status`
     *
     * @returns True if this control is in the process of conducting a validation check,
     * false otherwise.
     */
    get: function get() {
      return this.status == PENDING;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "disabled", {
    /**
     * A control is `disabled` when its `status` is `DISABLED`.
     *
     * @see `status`
     *
     * Disabled controls are exempt from validation checks and
     * are not included in the aggregate value of their ancestor
     * controls.
     *
     * @returns True if the control is disabled, false otherwise.
     */
    get: function get() {
      return this.status === DISABLED;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "enabled", {
    /**
     * A control is `enabled` as long as its `status` is not `DISABLED`.
     *
     * @see `status`
     *
     * @returns True if the control has any status other than 'DISABLED',
     * false if the status is 'DISABLED'.
     *
     */
    get: function get() {
      return this.status !== DISABLED;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "dirty", {
    /**
     * A control is `dirty` if the user has changed the value
     * in the UI.
     *
     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.
     * Programmatic changes to a control's value do not mark it dirty.
     */
    get: function get() {
      return !this.pristine;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "untouched", {
    /**
     * True if the control has not been marked as touched
     *
     * A control is `untouched` if the user has not yet triggered
     * a `blur` event on it.
     */
    get: function get() {
      return !this.touched;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "updateOn", {
    /**
     * Reports the update strategy of the `AbstractControl` (meaning
     * the event on which the control updates itself).
     * Possible values: `'change'` | `'blur'` | `'submit'`
     * Default value: `'change'`
     */
    get: function get() {
      return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Sets the synchronous validators that are active on this control.  Calling
   * this overwrites any existing sync validators.
   */

  AbstractControl.prototype.setValidators = function (newValidator) {
    this.validator = coerceToValidator(newValidator);
  };
  /**
   * Sets the async validators that are active on this control. Calling this
   * overwrites any existing async validators.
   */


  AbstractControl.prototype.setAsyncValidators = function (newValidator) {
    this.asyncValidator = coerceToAsyncValidator(newValidator);
  };
  /**
   * Empties out the sync validator list.
   */


  AbstractControl.prototype.clearValidators = function () {
    this.validator = null;
  };
  /**
   * Empties out the async validator list.
   */


  AbstractControl.prototype.clearAsyncValidators = function () {
    this.asyncValidator = null;
  };
  /**
   * Marks the control as `touched`. A control is touched by focus and
   * blur events that do not change the value; compare `markAsDirty`;
   *
   *  @param opts Configuration options that determine how the control propagates changes
   * and emits events events after marking is applied.
   * * `onlySelf`: When true, mark only this control. When false or not supplied,
   * marks all direct ancestors. Default is false.
   */


  AbstractControl.prototype.markAsTouched = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.touched = true;

    if (this._parent && !opts.onlySelf) {
      this._parent.markAsTouched(opts);
    }
  };
  /**
   * Marks the control as `untouched`.
   *
   * If the control has any children, also marks all children as `untouched`
   * and recalculates the `touched` status of all parent controls.
   *
   *  @param opts Configuration options that determine how the control propagates changes
   * and emits events after the marking is applied.
   * * `onlySelf`: When true, mark only this control. When false or not supplied,
   * marks all direct ancestors. Default is false.
   */


  AbstractControl.prototype.markAsUntouched = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.touched = false;
    this._pendingTouched = false;

    this._forEachChild(function (control) {
      control.markAsUntouched({
        onlySelf: true
      });
    });

    if (this._parent && !opts.onlySelf) {
      this._parent._updateTouched(opts);
    }
  };
  /**
   * Marks the control as `dirty`. A control becomes dirty when
   * the control's is changed through the UI; compare `markAsTouched`.
   *
   *  @param opts Configuration options that determine how the control propagates changes
   * and emits events after marking is applied.
   * * `onlySelf`: When true, mark only this control. When false or not supplied,
   * marks all direct ancestors. Default is false.
   */


  AbstractControl.prototype.markAsDirty = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.pristine = false;

    if (this._parent && !opts.onlySelf) {
      this._parent.markAsDirty(opts);
    }
  };
  /**
   * Marks the control as `pristine`.
   *
   * If the control has any children, marks all children as `pristine`,
   * and recalculates the `pristine` status of all parent
   * controls.
   *
   *  @param opts Configuration options that determine how the control emits events after
   * marking is applied.
   * * `onlySelf`: When true, mark only this control. When false or not supplied,
   * marks all direct ancestors. Default is false..
   */


  AbstractControl.prototype.markAsPristine = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.pristine = true;
    this._pendingDirty = false;

    this._forEachChild(function (control) {
      control.markAsPristine({
        onlySelf: true
      });
    });

    if (this._parent && !opts.onlySelf) {
      this._parent._updatePristine(opts);
    }
  };
  /**
   * Marks the control as `pending`.
   *
   * A control is pending while the control performs async validation.
   *
   *  @param opts Configuration options that determine how the control propagates changes and
   * emits events after marking is applied.
   * * `onlySelf`: When true, mark only this control. When false or not supplied,
   * marks all direct ancestors. Default is false..
   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`
   * observable emits an event with the latest status the control is marked pending.
   * When false, no events are emitted.
   *
   */


  AbstractControl.prototype.markAsPending = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.status = PENDING;

    if (opts.emitEvent !== false) {
      this.statusChanges.emit(this.status);
    }

    if (this._parent && !opts.onlySelf) {
      this._parent.markAsPending(opts);
    }
  };
  /**
   * Disables the control. This means the control is exempt from validation checks and
   * excluded from the aggregate value of any parent. Its status is `DISABLED`.
   *
   * If the control has children, all children are also disabled.
   *
   *  @param opts Configuration options that determine how the control propagates
   * changes and emits events after the control is disabled.
   * * `onlySelf`: When true, mark only this control. When false or not supplied,
   * marks all direct ancestors. Default is false..
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control is disabled.
   * When false, no events are emitted.
   */


  AbstractControl.prototype.disable = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.status = DISABLED;
    this.errors = null;

    this._forEachChild(function (control) {
      control.disable(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, opts, {
        onlySelf: true
      }));
    });

    this._updateValue();

    if (opts.emitEvent !== false) {
      this.valueChanges.emit(this.value);
      this.statusChanges.emit(this.status);
    }

    this._updateAncestors(opts);

    this._onDisabledChange.forEach(function (changeFn) {
      return changeFn(true);
    });
  };
  /**
   * Enables the control. This means the control is included in validation checks and
   * the aggregate value of its parent. Its status recalculates based on its value and
   * its validators.
   *
   * By default, if the control has children, all children are enabled.
   *
   *  @param opts Configure options that control how the control propagates changes and
   * emits events when marked as untouched
   * * `onlySelf`: When true, mark only this control. When false or not supplied,
   * marks all direct ancestors. Default is false..
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control is enabled.
   * When false, no events are emitted.
   */


  AbstractControl.prototype.enable = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.status = VALID;

    this._forEachChild(function (control) {
      control.enable(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, opts, {
        onlySelf: true
      }));
    });

    this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: opts.emitEvent
    });

    this._updateAncestors(opts);

    this._onDisabledChange.forEach(function (changeFn) {
      return changeFn(false);
    });
  };

  AbstractControl.prototype._updateAncestors = function (opts) {
    if (this._parent && !opts.onlySelf) {
      this._parent.updateValueAndValidity(opts);

      this._parent._updatePristine();

      this._parent._updateTouched();
    }
  };
  /**
   * @param parent Sets the parent of the control
   */


  AbstractControl.prototype.setParent = function (parent) {
    this._parent = parent;
  };
  /**
   * Recalculates the value and validation status of the control.
   *
   * By default, it also updates the value and validity of its ancestors.
   *
   * @param opts Configuration options determine how the control propagates changes and emits events
   * after updates and validity checks are applied.
   * * `onlySelf`: When true, only update this control. When false or not supplied,
   * update all direct ancestors. Default is false..
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control is updated.
   * When false, no events are emitted.
   */


  AbstractControl.prototype.updateValueAndValidity = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this._setInitialStatus();

    this._updateValue();

    if (this.enabled) {
      this._cancelExistingSubscription();

      this.errors = this._runValidator();
      this.status = this._calculateStatus();

      if (this.status === VALID || this.status === PENDING) {
        this._runAsyncValidator(opts.emitEvent);
      }
    }

    if (opts.emitEvent !== false) {
      this.valueChanges.emit(this.value);
      this.statusChanges.emit(this.status);
    }

    if (this._parent && !opts.onlySelf) {
      this._parent.updateValueAndValidity(opts);
    }
  };
  /** @internal */


  AbstractControl.prototype._updateTreeValidity = function (opts) {
    if (opts === void 0) {
      opts = {
        emitEvent: true
      };
    }

    this._forEachChild(function (ctrl) {
      return ctrl._updateTreeValidity(opts);
    });

    this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: opts.emitEvent
    });
  };

  AbstractControl.prototype._setInitialStatus = function () {
    this.status = this._allControlsDisabled() ? DISABLED : VALID;
  };

  AbstractControl.prototype._runValidator = function () {
    return this.validator ? this.validator(this) : null;
  };

  AbstractControl.prototype._runAsyncValidator = function (emitEvent) {
    var _this = this;

    if (this.asyncValidator) {
      this.status = PENDING;
      var obs = toObservable(this.asyncValidator(this));
      this._asyncValidationSubscription = obs.subscribe(function (errors) {
        return _this.setErrors(errors, {
          emitEvent: emitEvent
        });
      });
    }
  };

  AbstractControl.prototype._cancelExistingSubscription = function () {
    if (this._asyncValidationSubscription) {
      this._asyncValidationSubscription.unsubscribe();
    }
  };
  /**
   * Sets errors on a form control when running validations manually, rather than automatically.
   *
   * Calling `setErrors` also updates the validity of the parent control.
   *
   * @usageNotes
   * ### Manually set the errors for a control
   *
   * ```
   * const login = new FormControl('someLogin');
   * login.setErrors({
   *   notUnique: true
   * });
   *
   * expect(login.valid).toEqual(false);
   * expect(login.errors).toEqual({ notUnique: true });
   *
   * login.setValue('someOtherLogin');
   *
   * expect(login.valid).toEqual(true);
   * ```
   */


  AbstractControl.prototype.setErrors = function (errors, opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.errors = errors;

    this._updateControlsErrors(opts.emitEvent !== false);
  };
  /**
   * Retrieves a child control given the control's name or path.
   *
   * @param path A dot-delimited string or array of string/number values that define the path to the
   * control.
   *
   * @usageNotes
   * ### Retrieve a nested control
   *
   * For example, to get a `name` control nested within a `person` sub-group:
   *
   * * `this.form.get('person.name');`
   *
   * -OR-
   *
   * * `this.form.get(['person', 'name']);`
   */


  AbstractControl.prototype.get = function (path) {
    return _find(this, path, '.');
  };
  /**
   * Reports error data for a specific error occurring in this control or in another control.
   *
   * @param errorCode The error code for which to retrieve data
   * @param path The path to a control to check. If not supplied, checks for the error in this
   * control.
   *
   * @returns The error data if the control with the given path has the given error, otherwise null
   * or undefined.
   */


  AbstractControl.prototype.getError = function (errorCode, path) {
    var control = path ? this.get(path) : this;
    return control && control.errors ? control.errors[errorCode] : null;
  };
  /**
   * Reports whether the control with the given path has the error specified.
   *
   * @param errorCode The error code for which to retrieve data
   * @param path The path to a control to check. If not supplied, checks for the error in this
   * control.
   * @returns True when the control with the given path has the error, otherwise false.
   */


  AbstractControl.prototype.hasError = function (errorCode, path) {
    return !!this.getError(errorCode, path);
  };

  Object.defineProperty(AbstractControl.prototype, "root", {
    /**
     * Retrieves the top-level ancestor of this control.
     */
    get: function get() {
      var x = this;

      while (x._parent) {
        x = x._parent;
      }

      return x;
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  AbstractControl.prototype._updateControlsErrors = function (emitEvent) {
    this.status = this._calculateStatus();

    if (emitEvent) {
      this.statusChanges.emit(this.status);
    }

    if (this._parent) {
      this._parent._updateControlsErrors(emitEvent);
    }
  };
  /** @internal */


  AbstractControl.prototype._initObservables = function () {
    this.valueChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    this.statusChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
  };

  AbstractControl.prototype._calculateStatus = function () {
    if (this._allControlsDisabled()) return DISABLED;
    if (this.errors) return INVALID;
    if (this._anyControlsHaveStatus(PENDING)) return PENDING;
    if (this._anyControlsHaveStatus(INVALID)) return INVALID;
    return VALID;
  };
  /** @internal */


  AbstractControl.prototype._anyControlsHaveStatus = function (status) {
    return this._anyControls(function (control) {
      return control.status === status;
    });
  };
  /** @internal */


  AbstractControl.prototype._anyControlsDirty = function () {
    return this._anyControls(function (control) {
      return control.dirty;
    });
  };
  /** @internal */


  AbstractControl.prototype._anyControlsTouched = function () {
    return this._anyControls(function (control) {
      return control.touched;
    });
  };
  /** @internal */


  AbstractControl.prototype._updatePristine = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.pristine = !this._anyControlsDirty();

    if (this._parent && !opts.onlySelf) {
      this._parent._updatePristine(opts);
    }
  };
  /** @internal */


  AbstractControl.prototype._updateTouched = function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.touched = this._anyControlsTouched();

    if (this._parent && !opts.onlySelf) {
      this._parent._updateTouched(opts);
    }
  };
  /** @internal */


  AbstractControl.prototype._isBoxedValue = function (formState) {
    return _typeof(formState) === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;
  };
  /** @internal */


  AbstractControl.prototype._registerOnCollectionChange = function (fn) {
    this._onCollectionChange = fn;
  };
  /** @internal */


  AbstractControl.prototype._setUpdateStrategy = function (opts) {
    if (isOptionsObj(opts) && opts.updateOn != null) {
      this._updateOn = opts.updateOn;
    }
  };

  return AbstractControl;
}();
/**
 * Tracks the value and validation status of an individual form control.
 *
 * This is one of the three fundamental building blocks of Angular forms, along with
 * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that
 * implements most of the base functionality for accessing the value, validation status,
 * user interactions and events.
 *
 * @see `AbstractControl`
 * @see [Reactive Forms Guide](guide/reactive-forms)
 * @see [Usage Notes](#usage-notes)
 *
 * @usageNotes
 *
 * ### Initializing Form Controls
 *
 * Instantiate a `FormControl`, with an initial value.
 *
 * ```ts
 * const control = new FormControl('some value');
 * console.log(control.value);     // 'some value'
 *```
 *
 * The following example initializes the control with a form state object. The `value`
 * and `disabled` keys are required in this case.
 *
 * ```ts
 * const control = new FormControl({ value: 'n/a', disabled: true });
 * console.log(control.value);     // 'n/a'
 * console.log(control.status);    // 'DISABLED'
 * ```
 *
 * The following example initializes the control with a sync validator.
 *
 * ```ts
 * const control = new FormControl('', Validators.required);
 * console.log(control.value);      // ''
 * console.log(control.status);     // 'INVALID'
 * ```
 *
 * The following example initializes the control using an options object.
 *
 * ```ts
 * const control = new FormControl('', {
 *    validators: Validators.required,
 *    asyncValidators: myAsyncValidator
 * });
 * ```
 *
 * ### Configure the control to update on a blur event
 *
 * Set the `updateOn` option to `'blur'` to update on the blur `event`.
 *
 * ```ts
 * const control = new FormControl('', { updateOn: 'blur' });
 * ```
 *
 * ### Configure the control to update on a submit event
 *
 * Set the `updateOn` option to `'submit'` to update on a submit `event`.
 *
 * ```ts
 * const control = new FormControl('', { updateOn: 'submit' });
 * ```
 *
 * ### Reset the control back to an initial value
 *
 * You reset to a specific form state by passing through a standalone
 * value or a form state object that contains both a value and a disabled state
 * (these are the only two properties that cannot be calculated).
 *
 * ```ts
 * const control = new FormControl('Nancy');
 *
 * console.log(control.value); // 'Nancy'
 *
 * control.reset('Drew');
 *
 * console.log(control.value); // 'Drew'
 * ```
 *
 * ### Reset the control back to an initial value and disabled
 *
 * ```
 * const control = new FormControl('Nancy');
 *
 * console.log(control.value); // 'Nancy'
 * console.log(control.status); // 'VALID'
 *
 * control.reset({ value: 'Drew', disabled: true });
 *
 * console.log(control.value); // 'Drew'
 * console.log(control.status); // 'DISABLED'
 *
*/


var FormControl =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormControl, _super);
  /**
  * Creates a new `FormControl` instance.
  *
  * @param formState Initializes the control with an initial value,
  * or an object that defines the initial value and disabled state.
  *
  * @param validatorOrOpts A synchronous validator function, or an array of
  * such functions, or an `AbstractControlOptions` object that contains validation functions
  * and a validation trigger.
  *
  * @param asyncValidator A single async validator or array of async validator functions
  *
  */


  function FormControl(formState, validatorOrOpts, asyncValidator) {
    if (formState === void 0) {
      formState = null;
    }

    var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;
    /** @internal */


    _this._onChange = [];

    _this._applyFormState(formState);

    _this._setUpdateStrategy(validatorOrOpts);

    _this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: false
    });

    _this._initObservables();

    return _this;
  }
  /**
   * Sets a new value for the form control.
   *
   * @param value The new value for the control.
   * @param options Configuration options that determine how the control proopagates changes
   * and emits events when the value changes.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   *
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
   * false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control value is updated.
   * When false, no events are emitted.
   * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an
   * `onChange` event to
   * update the view.
   * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an
   * `ngModelChange`
   * event to update the model.
   *
   */


  FormControl.prototype.setValue = function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    this.value = this._pendingValue = value;

    if (this._onChange.length && options.emitModelToViewChange !== false) {
      this._onChange.forEach(function (changeFn) {
        return changeFn(_this.value, options.emitViewToModelChange !== false);
      });
    }

    this.updateValueAndValidity(options);
  };
  /**
   * Patches the value of a control.
   *
   * This function is functionally the same as {@link FormControl#setValue setValue} at this level.
   * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and
   * `FormArrays`, where it does behave differently.
   *
   * @see `setValue` for options
   */


  FormControl.prototype.patchValue = function (value, options) {
    if (options === void 0) {
      options = {};
    }

    this.setValue(value, options);
  };
  /**
   * Resets the form control, marking it `pristine` and `untouched`, and setting
   * the value to null.
   *
   * @param formState Resets the control with an initial value,
   * or an object that defines the initial value and disabled state.
   *
   * @param options Configuration options that determine how the control propagates changes
   * and emits events after the value changes.
   *
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
   * false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control is reset.
   * When false, no events are emitted.
   *
   */


  FormControl.prototype.reset = function (formState, options) {
    if (formState === void 0) {
      formState = null;
    }

    if (options === void 0) {
      options = {};
    }

    this._applyFormState(formState);

    this.markAsPristine(options);
    this.markAsUntouched(options);
    this.setValue(this.value, options);
    this._pendingChange = false;
  };
  /**
   * @internal
   */


  FormControl.prototype._updateValue = function () {};
  /**
   * @internal
   */


  FormControl.prototype._anyControls = function (condition) {
    return false;
  };
  /**
   * @internal
   */


  FormControl.prototype._allControlsDisabled = function () {
    return this.disabled;
  };
  /**
   * Register a listener for change events.
   *
   * @param fn The method that is called when the value changes
   */


  FormControl.prototype.registerOnChange = function (fn) {
    this._onChange.push(fn);
  };
  /**
   * @internal
   */


  FormControl.prototype._clearChangeFns = function () {
    this._onChange = [];
    this._onDisabledChange = [];

    this._onCollectionChange = function () {};
  };
  /**
   * Register a listener for disabled events.
   *
   * @param fn The method that is called when the disabled status changes.
   */


  FormControl.prototype.registerOnDisabledChange = function (fn) {
    this._onDisabledChange.push(fn);
  };
  /**
   * @internal
   */


  FormControl.prototype._forEachChild = function (cb) {};
  /** @internal */


  FormControl.prototype._syncPendingControls = function () {
    if (this.updateOn === 'submit') {
      if (this._pendingDirty) this.markAsDirty();
      if (this._pendingTouched) this.markAsTouched();

      if (this._pendingChange) {
        this.setValue(this._pendingValue, {
          onlySelf: true,
          emitModelToViewChange: false
        });
        return true;
      }
    }

    return false;
  };

  FormControl.prototype._applyFormState = function (formState) {
    if (this._isBoxedValue(formState)) {
      this.value = this._pendingValue = formState.value;
      formState.disabled ? this.disable({
        onlySelf: true,
        emitEvent: false
      }) : this.enable({
        onlySelf: true,
        emitEvent: false
      });
    } else {
      this.value = this._pendingValue = formState;
    }
  };

  return FormControl;
}(AbstractControl);
/**
 * Tracks the value and validity state of a group of `FormControl` instances.
 *
 * A `FormGroup` aggregates the values of each child `FormControl` into one object,
 * with each control name as the key.  It calculates its status by reducing the status values
 * of its children. For example, if one of the controls in a group is invalid, the entire
 * group becomes invalid.
 *
 * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,
 * along with `FormControl` and `FormArray`.
 *
 * When instantiating a `FormGroup`, pass in a collection of child controls as the first
 * argument. The key for each child registers the name for the control.
 *
 * @usageNotes
 *
 * ### Create a form group with 2 controls
 *
 * ```
 * const form = new FormGroup({
 *   first: new FormControl('Nancy', Validators.minLength(2)),
 *   last: new FormControl('Drew'),
 * });
 *
 * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}
 * console.log(form.status);  // 'VALID'
 * ```
 *
 * ### Create a form group with a group-level validator
 *
 * You include group-level validators as the second arg, or group-level async
 * validators as the third arg. These come in handy when you want to perform validation
 * that considers the value of more than one child control.
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('', Validators.minLength(2)),
 *   passwordConfirm: new FormControl('', Validators.minLength(2)),
 * }, passwordMatchValidator);
 *
 *
 * function passwordMatchValidator(g: FormGroup) {
 *    return g.get('password').value === g.get('passwordConfirm').value
 *       ? null : {'mismatch': true};
 * }
 * ```
 *
 * Like `FormControl` instances, you choose to pass in
 * validators and async validators as part of an options object.
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('')
 *   passwordConfirm: new FormControl('')
 * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });
 * ```
 *
 * ### Set the updateOn property for all controls in a form group
 *
 * The options object is used to set a default value for each child
 * control's `updateOn` property. If you set `updateOn` to `'blur'` at the
 * group level, all child controls default to 'blur', unless the child
 * has explicitly specified a different `updateOn` value.
 *
 * ```ts
 * const c = new FormGroup({
 *   one: new FormControl()
 * }, { updateOn: 'blur' });
 * ```
 */


var FormGroup =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormGroup, _super);
  /**
  * Creates a new `FormGroup` instance.
  *
  * @param controls A collection of child controls. The key for each child is the name
  * under which it is registered.
  *
  * @param validatorOrOpts A synchronous validator function, or an array of
  * such functions, or an `AbstractControlOptions` object that contains validation functions
  * and a validation trigger.
  *
  * @param asyncValidator A single async validator or array of async validator functions
  *
  */


  function FormGroup(controls, validatorOrOpts, asyncValidator) {
    var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;

    _this.controls = controls;

    _this._initObservables();

    _this._setUpdateStrategy(validatorOrOpts);

    _this._setUpControls();

    _this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: false
    });

    return _this;
  }
  /**
   * Registers a control with the group's list of controls.
   *
   * This method does not update the value or validity of the control.
   * Use {@link FormGroup#addControl addControl} instead.
   *
   * @param name The control name to register in the collection
   * @param control Provides the control for the given name
   */


  FormGroup.prototype.registerControl = function (name, control) {
    if (this.controls[name]) return this.controls[name];
    this.controls[name] = control;
    control.setParent(this);

    control._registerOnCollectionChange(this._onCollectionChange);

    return control;
  };
  /**
   * Add a control to this group.
   *
   * This method also updates the value and validity of the control.
   *
   * @param name The control name to add to the collection
   * @param control Provides the control for the given name
   */


  FormGroup.prototype.addControl = function (name, control) {
    this.registerControl(name, control);
    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /**
   * Remove a control from this group.
   *
   * @param name The control name to remove from the collection
   */


  FormGroup.prototype.removeControl = function (name) {
    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(function () {});
    delete this.controls[name];
    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /**
   * Replace an existing control.
   *
   * @param name The control name to replace in the collection
   * @param control Provides the control for the given name
   */


  FormGroup.prototype.setControl = function (name, control) {
    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(function () {});
    delete this.controls[name];
    if (control) this.registerControl(name, control);
    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /**
   * Check whether there is an enabled control with the given name in the group.
   *
   * Reports false for disabled controls. If you'd like to check for existence in the group
   * only, use {@link AbstractControl#get get} instead.
   *
   * @param name The control name to check for existence in the collection
   *
   * @returns false for disabled controls, true otherwise.
   */


  FormGroup.prototype.contains = function (controlName) {
    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;
  };
  /**
   * Sets the value of the `FormGroup`. It accepts an object that matches
   * the structure of the group, with control names as keys.
   *
   * @usageNotes
   * ### Set the complete value for the form group
   *
   * ```
   * const form = new FormGroup({
   *   first: new FormControl(),
   *   last: new FormControl()
   * });
   *
   * console.log(form.value);   // {first: null, last: null}
   *
   * form.setValue({first: 'Nancy', last: 'Drew'});
   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}
   * ```
   *
   * @throws When strict checks fail, such as setting the value of a control
   * that doesn't exist or if you excluding the value of a control.
   *
   * @param value The new value for the control that matches the structure of the group.
   * @param options Configuration options that determine how the control propagates changes
   * and emits events after the value changes.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   *
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
   * false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control value is updated.
   * When false, no events are emitted.
   */


  FormGroup.prototype.setValue = function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    this._checkAllValuesPresent(value);

    Object.keys(value).forEach(function (name) {
      _this._throwIfControlMissing(name);

      _this.controls[name].setValue(value[name], {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });
    this.updateValueAndValidity(options);
  };
  /**
   * Patches the value of the `FormGroup`. It accepts an object with control
   * names as keys, and does its best to match the values to the correct controls
   * in the group.
   *
   * It accepts both super-sets and sub-sets of the group without throwing an error.
   *
   * @usageNotes
   * ### Patch the value for a form group
   *
   * ```
   * const form = new FormGroup({
   *    first: new FormControl(),
   *    last: new FormControl()
   * });
   * console.log(form.value);   // {first: null, last: null}
   *
   * form.patchValue({first: 'Nancy'});
   * console.log(form.value);   // {first: 'Nancy', last: null}
   * ```
   *
   * @param value The object that matches the structure of the group.
   * @param options Configuration options that determine how the control propagates changes and
   * emits events after the value is patched.
   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is
   * true.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control value is updated.
   * When false, no events are emitted.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   */


  FormGroup.prototype.patchValue = function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    Object.keys(value).forEach(function (name) {
      if (_this.controls[name]) {
        _this.controls[name].patchValue(value[name], {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      }
    });
    this.updateValueAndValidity(options);
  };
  /**
   * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and
   * the value of all descendants to null.
   *
   * You reset to a specific form state by passing in a map of states
   * that matches the structure of your form, with control names as keys. The state
   * is a standalone value or a form state object with both a value and a disabled
   * status.
   *
   * @param formState Resets the control with an initial value,
   * or an object that defines the initial value and disabled state.
   *
   * @param options Configuration options that determine how the control propagates changes
   * and emits events when the group is reset.
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is
   * false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control is reset.
   * When false, no events are emitted.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   *
   * @usageNotes
   *
   * ### Reset the form group values
   *
   * ```ts
   * const form = new FormGroup({
   *   first: new FormControl('first name'),
   *   last: new FormControl('last name')
   * });
   *
   * console.log(form.value);  // {first: 'first name', last: 'last name'}
   *
   * form.reset({ first: 'name', last: 'last name' });
   *
   * console.log(form.value);  // {first: 'name', last: 'last name'}
   * ```
   *
   * ### Reset the form group values and disabled status
   *
   * ```
   * const form = new FormGroup({
   *   first: new FormControl('first name'),
   *   last: new FormControl('last name')
   * });
   *
   * form.reset({
   *   first: {value: 'name', disabled: true},
   *   last: 'last'
   * });
   *
   * console.log(this.form.value);  // {first: 'name', last: 'last name'}
   * console.log(this.form.get('first').status);  // 'DISABLED'
   * ```
   */


  FormGroup.prototype.reset = function (value, options) {
    if (value === void 0) {
      value = {};
    }

    if (options === void 0) {
      options = {};
    }

    this._forEachChild(function (control, name) {
      control.reset(value[name], {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });

    this.updateValueAndValidity(options);

    this._updatePristine(options);

    this._updateTouched(options);
  };
  /**
   * The aggregate value of the `FormGroup`, including any disabled controls.
   *
   * Retrieves all values regardless of disabled status.
   * The `value` property is the best way to get the value of the group, because
   * it excludes disabled controls in the `FormGroup`.
   */


  FormGroup.prototype.getRawValue = function () {
    return this._reduceChildren({}, function (acc, control, name) {
      acc[name] = control instanceof FormControl ? control.value : control.getRawValue();
      return acc;
    });
  };
  /** @internal */


  FormGroup.prototype._syncPendingControls = function () {
    var subtreeUpdated = this._reduceChildren(false, function (updated, child) {
      return child._syncPendingControls() ? true : updated;
    });

    if (subtreeUpdated) this.updateValueAndValidity({
      onlySelf: true
    });
    return subtreeUpdated;
  };
  /** @internal */


  FormGroup.prototype._throwIfControlMissing = function (name) {
    if (!Object.keys(this.controls).length) {
      throw new Error("\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
    }

    if (!this.controls[name]) {
      throw new Error("Cannot find form control with name: " + name + ".");
    }
  };
  /** @internal */


  FormGroup.prototype._forEachChild = function (cb) {
    var _this = this;

    Object.keys(this.controls).forEach(function (k) {
      return cb(_this.controls[k], k);
    });
  };
  /** @internal */


  FormGroup.prototype._setUpControls = function () {
    var _this = this;

    this._forEachChild(function (control) {
      control.setParent(_this);

      control._registerOnCollectionChange(_this._onCollectionChange);
    });
  };
  /** @internal */


  FormGroup.prototype._updateValue = function () {
    this.value = this._reduceValue();
  };
  /** @internal */


  FormGroup.prototype._anyControls = function (condition) {
    var _this = this;

    var res = false;

    this._forEachChild(function (control, name) {
      res = res || _this.contains(name) && condition(control);
    });

    return res;
  };
  /** @internal */


  FormGroup.prototype._reduceValue = function () {
    var _this = this;

    return this._reduceChildren({}, function (acc, control, name) {
      if (control.enabled || _this.disabled) {
        acc[name] = control.value;
      }

      return acc;
    });
  };
  /** @internal */


  FormGroup.prototype._reduceChildren = function (initValue, fn) {
    var res = initValue;

    this._forEachChild(function (control, name) {
      res = fn(res, control, name);
    });

    return res;
  };
  /** @internal */


  FormGroup.prototype._allControlsDisabled = function () {
    var e_1, _a;

    try {
      for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(Object.keys(this.controls)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var controlName = _c.value;

        if (this.controls[controlName].enabled) {
          return false;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return Object.keys(this.controls).length > 0 || this.disabled;
  };
  /** @internal */


  FormGroup.prototype._checkAllValuesPresent = function (value) {
    this._forEachChild(function (control, name) {
      if (value[name] === undefined) {
        throw new Error("Must supply a value for form control with name: '" + name + "'.");
      }
    });
  };

  return FormGroup;
}(AbstractControl);
/**
 * Tracks the value and validity state of an array of `FormControl`,
 * `FormGroup` or `FormArray` instances.
 *
 * A `FormArray` aggregates the values of each child `FormControl` into an array.
 * It calculates its status by reducing the status values of its children. For example, if one of
 * the controls in a `FormArray` is invalid, the entire array becomes invalid.
 *
 * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,
 * along with `FormControl` and `FormGroup`.
 *
 * @usageNotes
 *
 * ### Create an array of form controls
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy', Validators.minLength(2)),
 *   new FormControl('Drew'),
 * ]);
 *
 * console.log(arr.value);   // ['Nancy', 'Drew']
 * console.log(arr.status);  // 'VALID'
 * ```
 *
 * ### Create a form array with array-level validators
 *
 * You include array-level validators and async validators. These come in handy
 * when you want to perform validation that considers the value of more than one child
 * control.
 *
 * The two types of validators are passed in separately as the second and third arg
 * respectively, or together as part of an options object.
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy'),
 *   new FormControl('Drew')
 * ], {validators: myValidator, asyncValidators: myAsyncValidator});
 * ```
 *
  * ### Set the updateOn property for all controls in a form array
 *
 * The options object is used to set a default value for each child
 * control's `updateOn` property. If you set `updateOn` to `'blur'` at the
 * array level, all child controls default to 'blur', unless the child
 * has explicitly specified a different `updateOn` value.
 *
 * ```ts
 * const arr = new FormArray([
 *    new FormControl()
 * ], {updateOn: 'blur'});
 * ```
 *
 * ### Adding or removing controls from a form array
 *
 * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods
 * in `FormArray` itself. These methods ensure the controls are properly tracked in the
 * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate
 * the `FormArray` directly, as that result in strange and unexpected behavior such
 * as broken change detection.
 *
 *
 */


var FormArray =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormArray, _super);
  /**
  * Creates a new `FormArray` instance.
  *
  * @param controls An array of child controls. Each child control is given an index
  * where it is registered.
  *
  * @param validatorOrOpts A synchronous validator function, or an array of
  * such functions, or an `AbstractControlOptions` object that contains validation functions
  * and a validation trigger.
  *
  * @param asyncValidator A single async validator or array of async validator functions
  *
  */


  function FormArray(controls, validatorOrOpts, asyncValidator) {
    var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;

    _this.controls = controls;

    _this._initObservables();

    _this._setUpdateStrategy(validatorOrOpts);

    _this._setUpControls();

    _this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: false
    });

    return _this;
  }
  /**
   * Get the `AbstractControl` at the given `index` in the array.
   *
   * @param index Index in the array to retrieve the control
   */


  FormArray.prototype.at = function (index) {
    return this.controls[index];
  };
  /**
   * Insert a new `AbstractControl` at the end of the array.
   *
   * @param control Form control to be inserted
   */


  FormArray.prototype.push = function (control) {
    this.controls.push(control);

    this._registerControl(control);

    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /**
   * Insert a new `AbstractControl` at the given `index` in the array.
   *
   * @param index Index in the array to insert the control
   * @param control Form control to be inserted
   */


  FormArray.prototype.insert = function (index, control) {
    this.controls.splice(index, 0, control);

    this._registerControl(control);

    this.updateValueAndValidity();
  };
  /**
   * Remove the control at the given `index` in the array.
   *
   * @param index Index in the array to remove the control
   */


  FormArray.prototype.removeAt = function (index) {
    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(function () {});
    this.controls.splice(index, 1);
    this.updateValueAndValidity();
  };
  /**
   * Replace an existing control.
   *
   * @param index Index in the array to replace the control
   * @param control The `AbstractControl` control to replace the existing control
   */


  FormArray.prototype.setControl = function (index, control) {
    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(function () {});
    this.controls.splice(index, 1);

    if (control) {
      this.controls.splice(index, 0, control);

      this._registerControl(control);
    }

    this.updateValueAndValidity();

    this._onCollectionChange();
  };

  Object.defineProperty(FormArray.prototype, "length", {
    /**
     * Length of the control array.
     */
    get: function get() {
      return this.controls.length;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Sets the value of the `FormArray`. It accepts an array that matches
   * the structure of the control.
   *
   * This method performs strict checks, and throws an error if you try
   * to set the value of a control that doesn't exist or if you exclude the
   * value of a control.
   *
   * @usageNotes
   * ### Set the values for the controls in the form array
   *
   * ```
   * const arr = new FormArray([
   *   new FormControl(),
   *   new FormControl()
   * ]);
   * console.log(arr.value);   // [null, null]
   *
   * arr.setValue(['Nancy', 'Drew']);
   * console.log(arr.value);   // ['Nancy', 'Drew']
   * ```
   *
   * @param value Array of values for the controls
   * @param options Configure options that determine how the control propagates changes and
   * emits events after the value changes
   *
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default
   * is false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control value is updated.
   * When false, no events are emitted.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   */

  FormArray.prototype.setValue = function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    this._checkAllValuesPresent(value);

    value.forEach(function (newValue, index) {
      _this._throwIfControlMissing(index);

      _this.at(index).setValue(newValue, {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });
    this.updateValueAndValidity(options);
  };
  /**
   * Patches the value of the `FormArray`. It accepts an array that matches the
   * structure of the control, and does its best to match the values to the correct
   * controls in the group.
   *
   * It accepts both super-sets and sub-sets of the array without throwing an error.
   *
   * @usageNotes
   * ### Patch the values for controls in a form array
   *
   * ```
   * const arr = new FormArray([
   *    new FormControl(),
   *    new FormControl()
   * ]);
   * console.log(arr.value);   // [null, null]
   *
   * arr.patchValue(['Nancy']);
   * console.log(arr.value);   // ['Nancy', null]
   * ```
   *
   * @param value Array of latest values for the controls
   * @param options Configure options that determine how the control propagates changes and
   * emits events after the value changes
   *
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default
   * is false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control value is updated.
   * When false, no events are emitted.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   */


  FormArray.prototype.patchValue = function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    value.forEach(function (newValue, index) {
      if (_this.at(index)) {
        _this.at(index).patchValue(newValue, {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      }
    });
    this.updateValueAndValidity(options);
  };
  /**
   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the
   * value of all descendants to null or null maps.
   *
   * You reset to a specific form state by passing in an array of states
   * that matches the structure of the control. The state is a standalone value
   * or a form state object with both a value and a disabled status.
   *
   * @usageNotes
   * ### Reset the values in a form array
   *
   * ```ts
   * const arr = new FormArray([
   *    new FormControl(),
   *    new FormControl()
   * ]);
   * arr.reset(['name', 'last name']);
   *
   * console.log(this.arr.value);  // ['name', 'last name']
   * ```
   *
   * ### Reset the values in a form array and the disabled status for the first control
   *
   * ```
   * this.arr.reset([
   *   {value: 'name', disabled: true},
   *   'last'
   * ]);
   *
   * console.log(this.arr.value);  // ['name', 'last name']
   * console.log(this.arr.get(0).status);  // 'DISABLED'
   * ```
   *
   * @param value Array of values for the controls
   * @param options Configure options that determine how the control propagates changes and
   * emits events after the value changes
   *
   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default
   * is false.
   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and
   * `valueChanges`
   * observables emit events with the latest status and value when the control is reset.
   * When false, no events are emitted.
   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity
   * updateValueAndValidity} method.
   */


  FormArray.prototype.reset = function (value, options) {
    if (value === void 0) {
      value = [];
    }

    if (options === void 0) {
      options = {};
    }

    this._forEachChild(function (control, index) {
      control.reset(value[index], {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });

    this.updateValueAndValidity(options);

    this._updatePristine(options);

    this._updateTouched(options);
  };
  /**
   * The aggregate value of the array, including any disabled controls.
   *
   * Reports all values regardless of disabled status.
   * For enabled controls only, the `value` property is the best way to get the value of the array.
   */


  FormArray.prototype.getRawValue = function () {
    return this.controls.map(function (control) {
      return control instanceof FormControl ? control.value : control.getRawValue();
    });
  };
  /** @internal */


  FormArray.prototype._syncPendingControls = function () {
    var subtreeUpdated = this.controls.reduce(function (updated, child) {
      return child._syncPendingControls() ? true : updated;
    }, false);
    if (subtreeUpdated) this.updateValueAndValidity({
      onlySelf: true
    });
    return subtreeUpdated;
  };
  /** @internal */


  FormArray.prototype._throwIfControlMissing = function (index) {
    if (!this.controls.length) {
      throw new Error("\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
    }

    if (!this.at(index)) {
      throw new Error("Cannot find form control at index " + index);
    }
  };
  /** @internal */


  FormArray.prototype._forEachChild = function (cb) {
    this.controls.forEach(function (control, index) {
      cb(control, index);
    });
  };
  /** @internal */


  FormArray.prototype._updateValue = function () {
    var _this = this;

    this.value = this.controls.filter(function (control) {
      return control.enabled || _this.disabled;
    }).map(function (control) {
      return control.value;
    });
  };
  /** @internal */


  FormArray.prototype._anyControls = function (condition) {
    return this.controls.some(function (control) {
      return control.enabled && condition(control);
    });
  };
  /** @internal */


  FormArray.prototype._setUpControls = function () {
    var _this = this;

    this._forEachChild(function (control) {
      return _this._registerControl(control);
    });
  };
  /** @internal */


  FormArray.prototype._checkAllValuesPresent = function (value) {
    this._forEachChild(function (control, i) {
      if (value[i] === undefined) {
        throw new Error("Must supply a value for form control at index: " + i + ".");
      }
    });
  };
  /** @internal */


  FormArray.prototype._allControlsDisabled = function () {
    var e_2, _a;

    try {
      for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(this.controls), _c = _b.next(); !_c.done; _c = _b.next()) {
        var control = _c.value;
        if (control.enabled) return false;
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return this.controls.length > 0 || this.disabled;
  };

  FormArray.prototype._registerControl = function (control) {
    control.setParent(this);

    control._registerOnCollectionChange(this._onCollectionChange);
  };

  return FormArray;
}(AbstractControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formDirectiveProvider = {
  provide: ControlContainer,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return NgForm;
  })
};
var resolvedPromise = Promise.resolve(null);
/**
 * @description
 *
 * Creates a top-level `FormGroup` instance and binds it to a form
 * to track aggregate form value and validation status.
 *
 * As soon as you import the `FormsModule`, this directive becomes active by default on
 * all `<form>` tags.  You don't need to add a special selector.
 *
 * You can export the directive into a local template variable using `ngForm` as the key
 * (ex: `#myForm="ngForm"`). This is optional, but useful.  Many properties from the underlying
 * `FormGroup` instance are duplicated on the directive itself, so a reference to it
 * will give you access to the aggregate value and validity status of the form, as well as
 * user interaction properties like `dirty` and `touched`.
 *
 * To register child controls with the form, you'll want to use `NgModel` with a
 * `name` attribute.  You can also use `NgModelGroup` if you'd like to create
 * sub-groups within the form.
 *
 * You can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.
 * If you want to import the `FormsModule` but skip its usage in some forms,
 * for example, to use native HTML5 validation, you can add `ngNoForm` and the `<form>`
 * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is
 * unnecessary because the `<form>` tags are inert. In that case, you would
 * refrain from using the `formGroup` directive.
 *
 * Support for using `ngForm` element selector has been deprecated in Angular v6 and will be removed
 * in Angular v9.
 *
 * This has been deprecated to keep selectors consistent with other core Angular selectors,
 * as element selectors are typically written in kebab-case.
 *
 * Now deprecated:
 * ```html
 * <ngForm #myForm="ngForm">
 * ```
 *
 * After:
 * ```html
 * <ng-form #myForm="ngForm">
 * ```
 *
 * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * @ngModule FormsModule
 */

var NgForm =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgForm, _super);

  function NgForm(validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this.submitted = false;
    _this._directives = [];
    _this.ngSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    _this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));
    return _this;
  }

  NgForm.prototype.ngAfterViewInit = function () {
    this._setUpdateStrategy();
  };

  Object.defineProperty(NgForm.prototype, "formDirective", {
    get: function get() {
      return this;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForm.prototype, "control", {
    get: function get() {
      return this.form;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForm.prototype, "path", {
    get: function get() {
      return [];
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForm.prototype, "controls", {
    get: function get() {
      return this.form.controls;
    },
    enumerable: true,
    configurable: true
  });

  NgForm.prototype.addControl = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      dir.control = container.registerControl(dir.name, dir.control);
      setUpControl(dir.control, dir);
      dir.control.updateValueAndValidity({
        emitEvent: false
      });

      _this._directives.push(dir);
    });
  };

  NgForm.prototype.getControl = function (dir) {
    return this.form.get(dir.path);
  };

  NgForm.prototype.removeControl = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      if (container) {
        container.removeControl(dir.name);
      }

      removeDir(_this._directives, dir);
    });
  };

  NgForm.prototype.addFormGroup = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      var group = new FormGroup({});
      setUpFormContainer(group, dir);
      container.registerControl(dir.name, group);
      group.updateValueAndValidity({
        emitEvent: false
      });
    });
  };

  NgForm.prototype.removeFormGroup = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      if (container) {
        container.removeControl(dir.name);
      }
    });
  };

  NgForm.prototype.getFormGroup = function (dir) {
    return this.form.get(dir.path);
  };

  NgForm.prototype.updateModel = function (dir, value) {
    var _this = this;

    resolvedPromise.then(function () {
      var ctrl = _this.form.get(dir.path);

      ctrl.setValue(value);
    });
  };

  NgForm.prototype.setValue = function (value) {
    this.control.setValue(value);
  };

  NgForm.prototype.onSubmit = function ($event) {
    this.submitted = true;
    syncPendingControls(this.form, this._directives);
    this.ngSubmit.emit($event);
    return false;
  };

  NgForm.prototype.onReset = function () {
    this.resetForm();
  };

  NgForm.prototype.resetForm = function (value) {
    if (value === void 0) {
      value = undefined;
    }

    this.form.reset(value);
    this.submitted = false;
  };

  NgForm.prototype._setUpdateStrategy = function () {
    if (this.options && this.options.updateOn != null) {
      this.form._updateOn = this.options.updateOn;
    }
  };
  /** @internal */


  NgForm.prototype._findContainer = function (path) {
    path.pop();
    return path.length ? this.form.get(path) : this.form;
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngFormOptions'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], NgForm.prototype, "options", void 0);

  NgForm = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,ng-form,[ngForm]',
    providers: [formDirectiveProvider],
    host: {
      '(submit)': 'onSubmit($event)',
      '(reset)': 'onReset()'
    },
    outputs: ['ngSubmit'],
    exportAs: 'ngForm'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Array, Array])], NgForm);
  return NgForm;
}(ControlContainer);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var TemplateDrivenErrors =
/** @class */
function () {
  function TemplateDrivenErrors() {}

  TemplateDrivenErrors.modelParentException = function () {
    throw new Error("\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      " + FormErrorExamples.formControlName + "\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      " + FormErrorExamples.ngModelWithFormGroup);
  };

  TemplateDrivenErrors.formGroupNameException = function () {
    throw new Error("\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      " + FormErrorExamples.formGroupName + "\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      " + FormErrorExamples.ngModelGroup);
  };

  TemplateDrivenErrors.missingNameException = function () {
    throw new Error("If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">");
  };

  TemplateDrivenErrors.modelGroupParentException = function () {
    throw new Error("\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      " + FormErrorExamples.formGroupName + "\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      " + FormErrorExamples.ngModelGroup);
  };

  TemplateDrivenErrors.ngFormWarning = function () {
    console.warn("\n    It looks like you're using 'ngForm'.\n\n    Support for using the 'ngForm' element selector has been deprecated in Angular v6 and will be removed\n    in Angular v9.\n\n    Use 'ng-form' instead.\n\n    Before:\n    <ngForm #myForm=\"ngForm\">\n\n    After:\n    <ng-form #myForm=\"ngForm\">\n    ");
  };

  return TemplateDrivenErrors;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Token to provide to turn off the warning when using 'ngForm' deprecated selector.
 */


var NG_FORM_SELECTOR_WARNING = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('NgFormSelectorWarning');
/**
 * This directive is solely used to display warnings when the deprecated `ngForm` selector is used.
 *
 * @deprecated in Angular v6 and will be removed in Angular v9.
 * @ngModule FormsModule
 */

var NgFormSelectorWarning =
/** @class */
function () {
  function NgFormSelectorWarning(ngFormWarning) {
    if ((!ngFormWarning || ngFormWarning === 'once') && !NgFormSelectorWarning_1._ngFormWarning || ngFormWarning === 'always') {
      TemplateDrivenErrors.ngFormWarning();
      NgFormSelectorWarning_1._ngFormWarning = true;
    }
  }

  NgFormSelectorWarning_1 = NgFormSelectorWarning;
  var NgFormSelectorWarning_1;
  /**
   * Static property used to track whether the deprecation warning for this selector has been sent.
   * Used to support warning config of "once".
   *
   * @internal
   */

  NgFormSelectorWarning._ngFormWarning = false;
  NgFormSelectorWarning = NgFormSelectorWarning_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'ngForm'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_FORM_SELECTOR_WARNING)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], NgFormSelectorWarning);
  return NgFormSelectorWarning;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var modelGroupProvider = {
  provide: ControlContainer,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return NgModelGroup;
  })
};
/**
 * @description
 *
 * Creates and binds a `FormGroup` instance to a DOM element.
 *
 * This directive can only be used as a child of `NgForm` (or in other words,
 * within `<form>` tags).
 *
 * Use this directive if you'd like to create a sub-group within a form. This can
 * come in handy if you want to validate a sub-group of your form separately from
 * the rest of your form, or if some values in your domain model make more sense to
 * consume together in a nested object.
 *
 * Pass in the name you'd like this sub-group to have and it will become the key
 * for the sub-group in the form's full value. You can also export the directive into
 * a local template variable using `ngModelGroup` (ex: `#myGroup="ngModelGroup"`).
 *
 * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}
 *
 * @ngModule FormsModule
 */

var NgModelGroup =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgModelGroup, _super);

  function NgModelGroup(parent, validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this._parent = parent;
    _this._validators = validators;
    _this._asyncValidators = asyncValidators;
    return _this;
  }

  NgModelGroup_1 = NgModelGroup;
  /** @internal */

  NgModelGroup.prototype._checkParentType = function () {
    if (!(this._parent instanceof NgModelGroup_1) && !(this._parent instanceof NgForm)) {
      TemplateDrivenErrors.modelGroupParentException();
    }
  };

  var NgModelGroup_1;

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngModelGroup'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], NgModelGroup.prototype, "name", void 0);

  NgModelGroup = NgModelGroup_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[ngModelGroup]',
    providers: [modelGroupProvider],
    exportAs: 'ngModelGroup'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ControlContainer, Array, Array])], NgModelGroup);
  return NgModelGroup;
}(AbstractFormGroupDirective);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formControlBinding = {
  provide: NgControl,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return NgModel;
  })
};
/**
 * `ngModel` forces an additional change detection run when its inputs change:
 * E.g.:
 * ```
 * <div>{{myModel.valid}}</div>
 * <input [(ngModel)]="myValue" #myModel="ngModel">
 * ```
 * I.e. `ngModel` can export itself on the element and then be used in the template.
 * Normally, this would result in expressions before the `input` that use the exported directive
 * to have and old value as they have been
 * dirty checked before. As this is a very common case for `ngModel`, we added this second change
 * detection run.
 *
 * Notes:
 * - this is just one extra run no matter how many `ngModel` have been changed.
 * - this is a general problem when using `exportAs` for directives!
 */

var resolvedPromise$1 = Promise.resolve(null);
/**
 * @description
 *
 * Creates a `FormControl` instance from a domain model and binds it
 * to a form control element.
 *
 * The `FormControl` instance will track the value, user interaction, and
 * validation status of the control and keep the view synced with the model. If used
 * within a parent form, the directive will also register itself with the form as a child
 * control.
 *
 * This directive can be used by itself or as part of a larger form. All you need is the
 * `ngModel` selector to activate it.
 *
 * It accepts a domain model as an optional `Input`. If you have a one-way binding
 * to `ngModel` with `[]` syntax, changing the value of the domain model in the component
 * class will set the value in the view. If you have a two-way binding with `[()]` syntax
 * (also known as 'banana-box syntax'), the value in the UI will always be synced back to
 * the domain model in your class as well.
 *
 * If you wish to inspect the properties of the associated `FormControl` (like
 * validity state), you can also export the directive into a local template variable using
 * `ngModel` as the key (ex: `#myVar="ngModel"`). You can then access the control using the
 * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)
 * will fall through to the control anyway, so you can access them directly. You can see a
 * full list of properties directly available in `AbstractControlDirective`.
 *
 * The following is an example of a simple standalone control using `ngModel`:
 *
 * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}
 *
 * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute
 * so that the control can be registered with the parent form under that name.
 *
 * It's worth noting that in the context of a parent form, you often can skip one-way or
 * two-way binding because the parent form will sync the value for you. You can access
 * its properties by exporting it into a local template variable using `ngForm` (ex:
 * `#f="ngForm"`). Then you can pass it where it needs to go on submit.
 *
 * If you do need to populate initial values into your form, using a one-way binding for
 * `ngModel` tends to be sufficient as long as you use the exported form's value rather
 * than the domain model's value on submit.
 *
 * Take a look at an example of using `ngModel` within a form:
 *
 * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * To see `ngModel` examples with different form control types, see:
 *
 * * Radio buttons: `RadioControlValueAccessor`
 * * Selects: `SelectControlValueAccessor`
 *
 * @ngModule FormsModule
 */

var NgModel =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NgModel, _super);

  function NgModel(parent, validators, asyncValidators, valueAccessors) {
    var _this = _super.call(this) || this;

    _this.control = new FormControl();
    /** @internal */

    _this._registered = false;
    _this.update = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    _this._parent = parent;
    _this._rawValidators = validators || [];
    _this._rawAsyncValidators = asyncValidators || [];
    _this.valueAccessor = selectValueAccessor(_this, valueAccessors);
    return _this;
  }

  NgModel.prototype.ngOnChanges = function (changes) {
    this._checkForErrors();

    if (!this._registered) this._setUpControl();

    if ('isDisabled' in changes) {
      this._updateDisabled(changes);
    }

    if (isPropertyUpdated(changes, this.viewModel)) {
      this._updateValue(this.model);

      this.viewModel = this.model;
    }
  };

  NgModel.prototype.ngOnDestroy = function () {
    this.formDirective && this.formDirective.removeControl(this);
  };

  Object.defineProperty(NgModel.prototype, "path", {
    get: function get() {
      return this._parent ? controlPath(this.name, this._parent) : [this.name];
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgModel.prototype, "formDirective", {
    get: function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgModel.prototype, "validator", {
    get: function get() {
      return composeValidators(this._rawValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgModel.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._rawAsyncValidators);
    },
    enumerable: true,
    configurable: true
  });

  NgModel.prototype.viewToModelUpdate = function (newValue) {
    this.viewModel = newValue;
    this.update.emit(newValue);
  };

  NgModel.prototype._setUpControl = function () {
    this._setUpdateStrategy();

    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);
    this._registered = true;
  };

  NgModel.prototype._setUpdateStrategy = function () {
    if (this.options && this.options.updateOn != null) {
      this.control._updateOn = this.options.updateOn;
    }
  };

  NgModel.prototype._isStandalone = function () {
    return !this._parent || !!(this.options && this.options.standalone);
  };

  NgModel.prototype._setUpStandalone = function () {
    setUpControl(this.control, this);
    this.control.updateValueAndValidity({
      emitEvent: false
    });
  };

  NgModel.prototype._checkForErrors = function () {
    if (!this._isStandalone()) {
      this._checkParentType();
    }

    this._checkName();
  };

  NgModel.prototype._checkParentType = function () {
    if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {
      TemplateDrivenErrors.formGroupNameException();
    } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {
      TemplateDrivenErrors.modelParentException();
    }
  };

  NgModel.prototype._checkName = function () {
    if (this.options && this.options.name) this.name = this.options.name;

    if (!this._isStandalone() && !this.name) {
      TemplateDrivenErrors.missingNameException();
    }
  };

  NgModel.prototype._updateValue = function (value) {
    var _this = this;

    resolvedPromise$1.then(function () {
      _this.control.setValue(value, {
        emitViewToModelChange: false
      });
    });
  };

  NgModel.prototype._updateDisabled = function (changes) {
    var _this = this;

    var disabledValue = changes['isDisabled'].currentValue;
    var isDisabled = disabledValue === '' || disabledValue && disabledValue !== 'false';
    resolvedPromise$1.then(function () {
      if (isDisabled && !_this.control.disabled) {
        _this.control.disable();
      } else if (!isDisabled && _this.control.disabled) {
        _this.control.enable();
      }
    });
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], NgModel.prototype, "name", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('disabled'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], NgModel.prototype, "isDisabled", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngModel'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], NgModel.prototype, "model", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngModelOptions'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], NgModel.prototype, "options", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('ngModelChange'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], NgModel.prototype, "update", void 0);

  NgModel = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[ngModel]:not([formControlName]):not([formControl])',
    providers: [formControlBinding],
    exportAs: 'ngModel'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALUE_ACCESSOR)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ControlContainer, Array, Array, Array])], NgModel);
  return NgModel;
}(NgControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Token to provide to turn off the ngModel warning on formControl and formControlName.
 */


var NG_MODEL_WITH_FORM_CONTROL_WARNING = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('NgModelWithFormControlWarning');
var formControlBinding$1 = {
  provide: NgControl,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return FormControlDirective;
  })
};
/**
 * @description
 *
 * Syncs a standalone `FormControl` instance to a form control element.
 *
 * This directive ensures that any values written to the `FormControl`
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * `FormControl` instance (view -> model).
 *
 * @usageNotes
 * Use this directive if you'd like to create and manage a `FormControl` instance directly.
 * Simply create a `FormControl`, save it to your component class, and pass it into the
 * `FormControlDirective`.
 *
 * This directive is designed to be used as a standalone control.  Unlike `FormControlName`,
 * it does not require that your `FormControl` instance be part of any parent
 * `FormGroup`, and it won't be registered to any `FormGroupDirective` that
 * exists above it.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * `FormControl` instance. See a full list of available properties in
 * `AbstractControl`.
 *
 * **Set the value**: You can pass in an initial value when instantiating the `FormControl`,
 * or you can set it programmatically later using {@link AbstractControl#setValue setValue} or
 * {@link AbstractControl#patchValue patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {@link AbstractControl#valueChanges valueChanges} event.  You can also listen to
 * {@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}
 *
 * ### Use with ngModel
 *
 * Support for using the `ngModel` input property and `ngModelChange` event with reactive
 * form directives has been deprecated in Angular v6 and will be removed in Angular v7.
 *
 * Now deprecated:
 *
 * ```html
 * <input [formControl]="control" [(ngModel)]="value">
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * This has been deprecated for a few reasons. First, developers have found this pattern
 * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's
 * an input/output property named `ngModel` on the reactive form directive that simply
 * approximates (some of) its behavior. Specifically, it allows getting/setting the value
 * and intercepting value events. However, some of `ngModel`'s other features - like
 * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,
 * which has understandably caused some confusion.
 *
 * In addition, this pattern mixes template-driven and reactive forms strategies, which
 * we generally don't recommend because it doesn't take advantage of the full benefits of
 * either strategy. Setting the value in the template violates the template-agnostic
 * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in
 * the class removes the convenience of defining forms in the template.
 *
 * To update your code before v7, you'll want to decide whether to stick with reactive form
 * directives (and get/set values using reactive forms patterns) or switch over to
 * template-driven directives.
 *
 * After (choice 1 - use reactive forms):
 *
 * ```html
 * <input [formControl]="control">
 * ```
 *
 * ```ts
 * this.control.setValue('some value');
 * ```
 *
 * After (choice 2 - use template-driven forms):
 *
 * ```html
 * <input [(ngModel)]="value">
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * By default, when you use this pattern, you will see a deprecation warning once in dev
 * mode. You can choose to silence this warning by providing a config for
 * `ReactiveFormsModule` at import time:
 *
 * ```ts
 * imports: [
 *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});
 * ]
 * ```
 *
 * Alternatively, you can choose to surface a separate warning for each instance of this
 * pattern with a config value of `"always"`. This may help to track down where in the code
 * the pattern is being used as the code is being updated.
 *
 * @ngModule ReactiveFormsModule
 */

var FormControlDirective =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormControlDirective, _super);

  function FormControlDirective(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {
    var _this = _super.call(this) || this;

    _this._ngModelWarningConfig = _ngModelWarningConfig;
    /** @deprecated as of v6 */

    _this.update = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    /**
     * Instance property used to track whether an ngModel warning has been sent out for this
     * particular FormControlDirective instance. Used to support warning config of "always".
     *
     * @internal
     */

    _this._ngModelWarningSent = false;
    _this._rawValidators = validators || [];
    _this._rawAsyncValidators = asyncValidators || [];
    _this.valueAccessor = selectValueAccessor(_this, valueAccessors);
    return _this;
  }

  FormControlDirective_1 = FormControlDirective;
  Object.defineProperty(FormControlDirective.prototype, "isDisabled", {
    set: function set(isDisabled) {
      ReactiveErrors.disabledAttrWarning();
    },
    enumerable: true,
    configurable: true
  });

  FormControlDirective.prototype.ngOnChanges = function (changes) {
    if (this._isControlChanged(changes)) {
      setUpControl(this.form, this);

      if (this.control.disabled && this.valueAccessor.setDisabledState) {
        this.valueAccessor.setDisabledState(true);
      }

      this.form.updateValueAndValidity({
        emitEvent: false
      });
    }

    if (isPropertyUpdated(changes, this.viewModel)) {
      _ngModelWarning('formControl', FormControlDirective_1, this, this._ngModelWarningConfig);

      this.form.setValue(this.model);
      this.viewModel = this.model;
    }
  };

  Object.defineProperty(FormControlDirective.prototype, "path", {
    get: function get() {
      return [];
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlDirective.prototype, "validator", {
    get: function get() {
      return composeValidators(this._rawValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlDirective.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._rawAsyncValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlDirective.prototype, "control", {
    get: function get() {
      return this.form;
    },
    enumerable: true,
    configurable: true
  });

  FormControlDirective.prototype.viewToModelUpdate = function (newValue) {
    this.viewModel = newValue;
    this.update.emit(newValue);
  };

  FormControlDirective.prototype._isControlChanged = function (changes) {
    return changes.hasOwnProperty('form');
  };

  var FormControlDirective_1;
  /**
   * Static property used to track whether any ngModel warnings have been sent across
   * all instances of FormControlDirective. Used to support warning config of "once".
   *
   * @internal
   */

  FormControlDirective._ngModelWarningSentOnce = false;

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('formControl'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", FormControl)], FormControlDirective.prototype, "form", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('disabled'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Boolean])], FormControlDirective.prototype, "isDisabled", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngModel'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], FormControlDirective.prototype, "model", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('ngModelChange'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], FormControlDirective.prototype, "update", void 0);

  FormControlDirective = FormControlDirective_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[formControl]',
    providers: [formControlBinding$1],
    exportAs: 'ngForm'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALUE_ACCESSOR)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_MODEL_WITH_FORM_CONTROL_WARNING)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Array, Array, Array, Object])], FormControlDirective);
  return FormControlDirective;
}(NgControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formDirectiveProvider$1 = {
  provide: ControlContainer,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return FormGroupDirective;
  })
};
/**
 * @description
 *
 * Binds an existing `FormGroup` to a DOM element.
 *
 * This directive accepts an existing `FormGroup` instance. It will then use this
 * `FormGroup` instance to match any child `FormControl`, `FormGroup`,
 * and `FormArray` instances to child `FormControlName`, `FormGroupName`,
 * and `FormArrayName` directives.
 *
 * @usageNotes
 * **Set value**: You can set the form's initial value when instantiating the
 * `FormGroup`, or you can set it programmatically later using the `FormGroup`'s
 * {@link AbstractControl#setValue setValue} or {@link AbstractControl#patchValue patchValue}
 * methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe
 * to the `FormGroup`'s {@link AbstractControl#valueChanges valueChanges} event.  You can also
 * listen to its {@link AbstractControl#statusChanges statusChanges} event to be notified when the
 * validation status is re-calculated.
 *
 * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * @ngModule ReactiveFormsModule
 */

var FormGroupDirective =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormGroupDirective, _super);

  function FormGroupDirective(_validators, _asyncValidators) {
    var _this = _super.call(this) || this;

    _this._validators = _validators;
    _this._asyncValidators = _asyncValidators;
    _this.submitted = false;
    _this.directives = [];
    _this.form = null;
    _this.ngSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    return _this;
  }

  FormGroupDirective.prototype.ngOnChanges = function (changes) {
    this._checkFormPresent();

    if (changes.hasOwnProperty('form')) {
      this._updateValidators();

      this._updateDomValue();

      this._updateRegistrations();
    }
  };

  Object.defineProperty(FormGroupDirective.prototype, "formDirective", {
    get: function get() {
      return this;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormGroupDirective.prototype, "control", {
    get: function get() {
      return this.form;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormGroupDirective.prototype, "path", {
    get: function get() {
      return [];
    },
    enumerable: true,
    configurable: true
  });

  FormGroupDirective.prototype.addControl = function (dir) {
    var ctrl = this.form.get(dir.path);
    setUpControl(ctrl, dir);
    ctrl.updateValueAndValidity({
      emitEvent: false
    });
    this.directives.push(dir);
    return ctrl;
  };

  FormGroupDirective.prototype.getControl = function (dir) {
    return this.form.get(dir.path);
  };

  FormGroupDirective.prototype.removeControl = function (dir) {
    removeDir(this.directives, dir);
  };

  FormGroupDirective.prototype.addFormGroup = function (dir) {
    var ctrl = this.form.get(dir.path);
    setUpFormContainer(ctrl, dir);
    ctrl.updateValueAndValidity({
      emitEvent: false
    });
  };

  FormGroupDirective.prototype.removeFormGroup = function (dir) {};

  FormGroupDirective.prototype.getFormGroup = function (dir) {
    return this.form.get(dir.path);
  };

  FormGroupDirective.prototype.addFormArray = function (dir) {
    var ctrl = this.form.get(dir.path);
    setUpFormContainer(ctrl, dir);
    ctrl.updateValueAndValidity({
      emitEvent: false
    });
  };

  FormGroupDirective.prototype.removeFormArray = function (dir) {};

  FormGroupDirective.prototype.getFormArray = function (dir) {
    return this.form.get(dir.path);
  };

  FormGroupDirective.prototype.updateModel = function (dir, value) {
    var ctrl = this.form.get(dir.path);
    ctrl.setValue(value);
  };

  FormGroupDirective.prototype.onSubmit = function ($event) {
    this.submitted = true;
    syncPendingControls(this.form, this.directives);
    this.ngSubmit.emit($event);
    return false;
  };

  FormGroupDirective.prototype.onReset = function () {
    this.resetForm();
  };

  FormGroupDirective.prototype.resetForm = function (value) {
    if (value === void 0) {
      value = undefined;
    }

    this.form.reset(value);
    this.submitted = false;
  };
  /** @internal */


  FormGroupDirective.prototype._updateDomValue = function () {
    var _this = this;

    this.directives.forEach(function (dir) {
      var newCtrl = _this.form.get(dir.path);

      if (dir.control !== newCtrl) {
        cleanUpControl(dir.control, dir);
        if (newCtrl) setUpControl(newCtrl, dir);
        dir.control = newCtrl;
      }
    });

    this.form._updateTreeValidity({
      emitEvent: false
    });
  };

  FormGroupDirective.prototype._updateRegistrations = function () {
    var _this = this;

    this.form._registerOnCollectionChange(function () {
      return _this._updateDomValue();
    });

    if (this._oldForm) this._oldForm._registerOnCollectionChange(function () {});
    this._oldForm = this.form;
  };

  FormGroupDirective.prototype._updateValidators = function () {
    var sync = composeValidators(this._validators);
    this.form.validator = Validators.compose([this.form.validator, sync]);
    var async = composeAsyncValidators(this._asyncValidators);
    this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);
  };

  FormGroupDirective.prototype._checkFormPresent = function () {
    if (!this.form) {
      ReactiveErrors.missingFormException();
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('formGroup'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", FormGroup)], FormGroupDirective.prototype, "form", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], FormGroupDirective.prototype, "ngSubmit", void 0);

  FormGroupDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[formGroup]',
    providers: [formDirectiveProvider$1],
    host: {
      '(submit)': 'onSubmit($event)',
      '(reset)': 'onReset()'
    },
    exportAs: 'ngForm'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Array, Array])], FormGroupDirective);
  return FormGroupDirective;
}(ControlContainer);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var formGroupNameProvider = {
  provide: ControlContainer,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return FormGroupName;
  })
};
/**
 * @description
 *
 * Syncs a nested `FormGroup` to a DOM element.
 *
 * This directive can only be used with a parent `FormGroupDirective` (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested `FormGroup` you want to link, and
 * will look for a `FormGroup` registered with that name in the parent
 * `FormGroup` instance you passed into `FormGroupDirective`.
 *
 * Nested form groups can come in handy when you want to validate a sub-group of a
 * form separately from the rest or when you'd like to group the values of certain
 * controls into their own nested object.
 *
 * @usageNotes
 * **Access the group**: You can access the associated `FormGroup` using the
 * {@link AbstractControl#get get} method. Ex: `this.form.get('name')`.
 *
 * You can also access individual controls within the group using dot syntax.
 * Ex: `this.form.get('name.first')`
 *
 * **Get the value**: the `value` property is always synced and available on the
 * `FormGroup`. See a full list of available properties in `AbstractControl`.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the `FormGroup`, or you can set it programmatically later using
 * {@link AbstractControl#setValue setValue} or {@link AbstractControl#patchValue patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the group, you can
 * subscribe to the {@link AbstractControl#valueChanges valueChanges} event.  You can also listen to
 * {@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}
 *
 * @ngModule ReactiveFormsModule
 */

var FormGroupName =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormGroupName, _super);

  function FormGroupName(parent, validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this._parent = parent;
    _this._validators = validators;
    _this._asyncValidators = asyncValidators;
    return _this;
  }
  /** @internal */


  FormGroupName.prototype._checkParentType = function () {
    if (_hasInvalidParent(this._parent)) {
      ReactiveErrors.groupParentException();
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('formGroupName'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], FormGroupName.prototype, "name", void 0);

  FormGroupName = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[formGroupName]',
    providers: [formGroupNameProvider]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ControlContainer, Array, Array])], FormGroupName);
  return FormGroupName;
}(AbstractFormGroupDirective);

var formArrayNameProvider = {
  provide: ControlContainer,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return FormArrayName;
  })
};
/**
 * @description
 *
 * Syncs a nested `FormArray` to a DOM element.
 *
 * This directive is designed to be used with a parent `FormGroupDirective` (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested `FormArray` you want to link, and
 * will look for a `FormArray` registered with that name in the parent
 * `FormGroup` instance you passed into `FormGroupDirective`.
 *
 * Nested form arrays can come in handy when you have a group of form controls but
 * you're not sure how many there will be. Form arrays allow you to create new
 * form controls dynamically.
 *
 * @usageNotes
 * **Access the array**: You can access the associated `FormArray` using the
 * {@link AbstractControl#get get} method on the parent `FormGroup`.
 * Ex: `this.form.get('cities')`.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * `FormArray`. See a full list of available properties in `AbstractControl`.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the `FormArray`, or you can set the value programmatically later using the
 * `FormArray`'s {@link AbstractControl#setValue setValue} or
 * {@link AbstractControl#patchValue patchValue} methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the array, you can
 * subscribe to the `FormArray`'s {@link AbstractControl#valueChanges valueChanges} event.
 * You can also listen to its {@link AbstractControl#statusChanges statusChanges} event to be
 * notified when the validation status is re-calculated.
 *
 * **Add new controls**: You can add new controls to the `FormArray` dynamically by calling
 * its {@link FormArray#push push} method.
 * Ex: `this.form.get('cities').push(new FormControl());`
 *
 * ### Example
 *
 * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}
 *
 * @ngModule ReactiveFormsModule
 */

var FormArrayName =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormArrayName, _super);

  function FormArrayName(parent, validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this._parent = parent;
    _this._validators = validators;
    _this._asyncValidators = asyncValidators;
    return _this;
  }

  FormArrayName.prototype.ngOnInit = function () {
    this._checkParentType();

    this.formDirective.addFormArray(this);
  };

  FormArrayName.prototype.ngOnDestroy = function () {
    if (this.formDirective) {
      this.formDirective.removeFormArray(this);
    }
  };

  Object.defineProperty(FormArrayName.prototype, "control", {
    get: function get() {
      return this.formDirective.getFormArray(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "formDirective", {
    get: function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "path", {
    get: function get() {
      return controlPath(this.name, this._parent);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "validator", {
    get: function get() {
      return composeValidators(this._validators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._asyncValidators);
    },
    enumerable: true,
    configurable: true
  });

  FormArrayName.prototype._checkParentType = function () {
    if (_hasInvalidParent(this._parent)) {
      ReactiveErrors.arrayParentException();
    }
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('formArrayName'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], FormArrayName.prototype, "name", void 0);

  FormArrayName = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[formArrayName]',
    providers: [formArrayNameProvider]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ControlContainer, Array, Array])], FormArrayName);
  return FormArrayName;
}(ControlContainer);

function _hasInvalidParent(parent) {
  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var controlNameBinding = {
  provide: NgControl,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return FormControlName;
  })
};
/**
 * @description
 *
 * Syncs a `FormControl` in an existing `FormGroup` to a form control
 * element by name.
 *
 * This directive ensures that any values written to the `FormControl`
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * `FormControl` instance (view -> model).
 *
 * @usageNotes
 * This directive is designed to be used with a parent `FormGroupDirective` (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the `FormControl` instance you want to
 * link, and will look for a `FormControl` registered with that name in the
 * closest `FormGroup` or `FormArray` above it.
 *
 * **Access the control**: You can access the `FormControl` associated with
 * this directive by using the {@link AbstractControl#get get} method.
 * Ex: `this.form.get('first');`
 *
 * **Get value**: the `value` property is always synced and available on the `FormControl`.
 * See a full list of available properties in `AbstractControl`.
 *
 *  **Set value**: You can set an initial value for the control when instantiating the
 *  `FormControl`, or you can set it programmatically later using
 *  {@link AbstractControl#setValue setValue} or {@link AbstractControl#patchValue patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {@link AbstractControl#valueChanges valueChanges} event.  You can also listen to
 * {@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * To see `formControlName` examples with different form control types, see:
 *
 * * Radio buttons: `RadioControlValueAccessor`
 * * Selects: `SelectControlValueAccessor`
 *
 * ### Use with ngModel
 *
 * Support for using the `ngModel` input property and `ngModelChange` event with reactive
 * form directives has been deprecated in Angular v6 and will be removed in Angular v7.
 *
 * Now deprecated:
 *
 * ```html
 * <form [formGroup]="form">
 *   <input formControlName="first" [(ngModel)]="value">
 * </form>
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * This has been deprecated for a few reasons. First, developers have found this pattern
 * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's
 * an input/output property named `ngModel` on the reactive form directive that simply
 * approximates (some of) its behavior. Specifically, it allows getting/setting the value
 * and intercepting value events. However, some of `ngModel`'s other features - like
 * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,
 * which has understandably caused some confusion.
 *
 * In addition, this pattern mixes template-driven and reactive forms strategies, which
 * we generally don't recommend because it doesn't take advantage of the full benefits of
 * either strategy. Setting the value in the template violates the template-agnostic
 * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in
 * the class removes the convenience of defining forms in the template.
 *
 * To update your code before v7, you'll want to decide whether to stick with reactive form
 * directives (and get/set values using reactive forms patterns) or switch over to
 * template-driven directives.
 *
 * After (choice 1 - use reactive forms):
 *
 * ```html
 * <form [formGroup]="form">
 *   <input formControlName="first">
 * </form>
 * ```
 *
 * ```ts
 * this.form.get('first').setValue('some value');
 * ```
 *
 * After (choice 2 - use template-driven forms):
 *
 * ```html
 * <input [(ngModel)]="value">
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * By default, when you use this pattern, you will see a deprecation warning once in dev
 * mode. You can choose to silence this warning by providing a config for
 * `ReactiveFormsModule` at import time:
 *
 * ```ts
 * imports: [
 *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});
 * ]
 * ```
 *
 * Alternatively, you can choose to surface a separate warning for each instance of this
 * pattern with a config value of `"always"`. This may help to track down where in the code
 * the pattern is being used as the code is being updated.
 *
 * @ngModule ReactiveFormsModule
 */

var FormControlName =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FormControlName, _super);

  function FormControlName(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {
    var _this = _super.call(this) || this;

    _this._ngModelWarningConfig = _ngModelWarningConfig;
    _this._added = false;
    /** @deprecated as of v6 */

    _this.update = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    /**
     * Instance property used to track whether an ngModel warning has been sent out for this
     * particular FormControlName instance. Used to support warning config of "always".
     *
     * @internal
     */

    _this._ngModelWarningSent = false;
    _this._parent = parent;
    _this._rawValidators = validators || [];
    _this._rawAsyncValidators = asyncValidators || [];
    _this.valueAccessor = selectValueAccessor(_this, valueAccessors);
    return _this;
  }

  FormControlName_1 = FormControlName;
  Object.defineProperty(FormControlName.prototype, "isDisabled", {
    set: function set(isDisabled) {
      ReactiveErrors.disabledAttrWarning();
    },
    enumerable: true,
    configurable: true
  });

  FormControlName.prototype.ngOnChanges = function (changes) {
    if (!this._added) this._setUpControl();

    if (isPropertyUpdated(changes, this.viewModel)) {
      _ngModelWarning('formControlName', FormControlName_1, this, this._ngModelWarningConfig);

      this.viewModel = this.model;
      this.formDirective.updateModel(this, this.model);
    }
  };

  FormControlName.prototype.ngOnDestroy = function () {
    if (this.formDirective) {
      this.formDirective.removeControl(this);
    }
  };

  FormControlName.prototype.viewToModelUpdate = function (newValue) {
    this.viewModel = newValue;
    this.update.emit(newValue);
  };

  Object.defineProperty(FormControlName.prototype, "path", {
    get: function get() {
      return controlPath(this.name, this._parent);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlName.prototype, "formDirective", {
    get: function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlName.prototype, "validator", {
    get: function get() {
      return composeValidators(this._rawValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlName.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._rawAsyncValidators);
    },
    enumerable: true,
    configurable: true
  });

  FormControlName.prototype._checkParentType = function () {
    if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {
      ReactiveErrors.ngModelGroupException();
    } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {
      ReactiveErrors.controlParentException();
    }
  };

  FormControlName.prototype._setUpControl = function () {
    this._checkParentType();

    this.control = this.formDirective.addControl(this);

    if (this.control.disabled && this.valueAccessor.setDisabledState) {
      this.valueAccessor.setDisabledState(true);
    }

    this._added = true;
  };

  var FormControlName_1;
  /**
   * Static property used to track whether any ngModel warnings have been sent across
   * all instances of FormControlName. Used to support warning config of "once".
   *
   * @internal
   */

  FormControlName._ngModelWarningSentOnce = false;

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('formControlName'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], FormControlName.prototype, "name", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('disabled'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Boolean])], FormControlName.prototype, "isDisabled", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('ngModel'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], FormControlName.prototype, "model", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('ngModelChange'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], FormControlName.prototype, "update", void 0);

  FormControlName = FormControlName_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[formControlName]',
    providers: [controlNameBinding]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Host"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_ASYNC_VALIDATORS)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Self"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_VALUE_ACCESSOR)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(NG_MODEL_WITH_FORM_CONTROL_WARNING)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ControlContainer, Array, Array, Array, Object])], FormControlName);
  return FormControlName;
}(NgControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var REQUIRED_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return RequiredValidator;
  }),
  multi: true
};
var CHECKBOX_REQUIRED_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return CheckboxRequiredValidator;
  }),
  multi: true
};
/**
 * A Directive that adds the `required` validator to any controls marked with the
 * `required` attribute, via the `NG_VALIDATORS` binding.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input name="fullName" ngModel required>
 * ```
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var RequiredValidator =
/** @class */
function () {
  function RequiredValidator() {}

  Object.defineProperty(RequiredValidator.prototype, "required", {
    get: function get() {
      return this._required;
    },
    set: function set(value) {
      this._required = value != null && value !== false && "" + value !== 'false';
      if (this._onChange) this._onChange();
    },
    enumerable: true,
    configurable: true
  });

  RequiredValidator.prototype.validate = function (control) {
    return this.required ? Validators.required(control) : null;
  };

  RequiredValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], RequiredValidator.prototype, "required", null);

  RequiredValidator = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',
    providers: [REQUIRED_VALIDATOR],
    host: {
      '[attr.required]': 'required ? "" : null'
    }
  })], RequiredValidator);
  return RequiredValidator;
}();
/**
 * A Directive that adds the `required` validator to checkbox controls marked with the
 * `required` attribute, via the `NG_VALIDATORS` binding.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input type="checkbox" name="active" ngModel required>
 * ```
 *
 * @experimental
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */


var CheckboxRequiredValidator =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CheckboxRequiredValidator, _super);

  function CheckboxRequiredValidator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CheckboxRequiredValidator.prototype.validate = function (control) {
    return this.required ? Validators.requiredTrue(control) : null;
  };

  CheckboxRequiredValidator = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',
    providers: [CHECKBOX_REQUIRED_VALIDATOR],
    host: {
      '[attr.required]': 'required ? "" : null'
    }
  })], CheckboxRequiredValidator);
  return CheckboxRequiredValidator;
}(RequiredValidator);
/**
 * Provider which adds `EmailValidator` to `NG_VALIDATORS`.
 */


var EMAIL_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return EmailValidator;
  }),
  multi: true
};
/**
 * A Directive that adds the `email` validator to controls marked with the
 * `email` attribute, via the `NG_VALIDATORS` binding.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input type="email" name="email" ngModel email>
 * <input type="email" name="email" ngModel email="true">
 * <input type="email" name="email" ngModel [email]="true">
 * ```
 *
 * @experimental
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var EmailValidator =
/** @class */
function () {
  function EmailValidator() {}

  Object.defineProperty(EmailValidator.prototype, "email", {
    set: function set(value) {
      this._enabled = value === '' || value === true || value === 'true';
      if (this._onChange) this._onChange();
    },
    enumerable: true,
    configurable: true
  });

  EmailValidator.prototype.validate = function (control) {
    return this._enabled ? Validators.email(control) : null;
  };

  EmailValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], EmailValidator.prototype, "email", null);

  EmailValidator = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[email][formControlName],[email][formControl],[email][ngModel]',
    providers: [EMAIL_VALIDATOR]
  })], EmailValidator);
  return EmailValidator;
}();
/**
 * Provider which adds `MinLengthValidator` to `NG_VALIDATORS`.
 *
 * @usageNotes
 * ### Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='min'}
 */


var MIN_LENGTH_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return MinLengthValidator;
  }),
  multi: true
};
/**
 * A directive which installs the `MinLengthValidator` for any `formControlName`,
 * `formControl`, or control with `ngModel` that also has a `minlength` attribute.
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var MinLengthValidator =
/** @class */
function () {
  function MinLengthValidator() {}

  MinLengthValidator.prototype.ngOnChanges = function (changes) {
    if ('minlength' in changes) {
      this._createValidator();

      if (this._onChange) this._onChange();
    }
  };

  MinLengthValidator.prototype.validate = function (control) {
    return this.minlength == null ? null : this._validator(control);
  };

  MinLengthValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  MinLengthValidator.prototype._createValidator = function () {
    this._validator = Validators.minLength(parseInt(this.minlength, 10));
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], MinLengthValidator.prototype, "minlength", void 0);

  MinLengthValidator = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',
    providers: [MIN_LENGTH_VALIDATOR],
    host: {
      '[attr.minlength]': 'minlength ? minlength : null'
    }
  })], MinLengthValidator);
  return MinLengthValidator;
}();
/**
 * Provider which adds `MaxLengthValidator` to `NG_VALIDATORS`.
 *
 * @usageNotes
 * ### Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='max'}
 */


var MAX_LENGTH_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return MaxLengthValidator;
  }),
  multi: true
};
/**
 * A directive which installs the `MaxLengthValidator` for any `formControlName`,
 * `formControl`, or control with `ngModel` that also has a `maxlength` attribute.
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var MaxLengthValidator =
/** @class */
function () {
  function MaxLengthValidator() {}

  MaxLengthValidator.prototype.ngOnChanges = function (changes) {
    if ('maxlength' in changes) {
      this._createValidator();

      if (this._onChange) this._onChange();
    }
  };

  MaxLengthValidator.prototype.validate = function (control) {
    return this.maxlength != null ? this._validator(control) : null;
  };

  MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  MaxLengthValidator.prototype._createValidator = function () {
    this._validator = Validators.maxLength(parseInt(this.maxlength, 10));
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], MaxLengthValidator.prototype, "maxlength", void 0);

  MaxLengthValidator = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',
    providers: [MAX_LENGTH_VALIDATOR],
    host: {
      '[attr.maxlength]': 'maxlength ? maxlength : null'
    }
  })], MaxLengthValidator);
  return MaxLengthValidator;
}();

var PATTERN_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function () {
    return PatternValidator;
  }),
  multi: true
};
/**
 * A Directive that adds the `pattern` validator to any controls marked with the
 * `pattern` attribute, via the `NG_VALIDATORS` binding. Uses attribute value
 * as the regex to validate Control value against.  Follows pattern attribute
 * semantics; i.e. regex must match entire Control value.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * <input [name]="fullName" pattern="[a-zA-Z ]*" ngModel>
 * ```
 *
 * @ngModule FormsModule
 * @ngModule ReactiveFormsModule
 */

var PatternValidator =
/** @class */
function () {
  function PatternValidator() {}

  PatternValidator.prototype.ngOnChanges = function (changes) {
    if ('pattern' in changes) {
      this._createValidator();

      if (this._onChange) this._onChange();
    }
  };

  PatternValidator.prototype.validate = function (control) {
    return this._validator(control);
  };

  PatternValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  PatternValidator.prototype._createValidator = function () {
    this._validator = Validators.pattern(this.pattern);
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], PatternValidator.prototype, "pattern", void 0);

  PatternValidator = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',
    providers: [PATTERN_VALIDATOR],
    host: {
      '[attr.pattern]': 'pattern ? pattern : null'
    }
  })], PatternValidator);
  return PatternValidator;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * Creates an `AbstractControl` from a user-specified configuration.
 *
 * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,
 * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex
 * forms.
 *
 * @see [Reactive Forms Guide](/guide/reactive-forms)
 *
 */


var FormBuilder =
/** @class */
function () {
  function FormBuilder() {}
  /**
   * @description
   * Construct a new `FormGroup` instance.
   *
   * @param controlsConfig A collection of child controls. The key for each child is the name
   * under which it is registered.
   *
   * @param extra An object of configuration options for the `FormGroup`.
   * * `validator`: A synchronous validator function, or an array of validator functions
   * * `asyncValidator`: A single async validator or array of async validator functions
   *
   */


  FormBuilder.prototype.group = function (controlsConfig, extra) {
    if (extra === void 0) {
      extra = null;
    }

    var controls = this._reduceControls(controlsConfig);

    var validator = extra != null ? extra['validator'] : null;
    var asyncValidator = extra != null ? extra['asyncValidator'] : null;
    return new FormGroup(controls, validator, asyncValidator);
  };
  /**
   * @description
   * Construct a new `FormControl` instance.
   *
   * @param formState Initializes the control with an initial value,
   * or an object that defines the initial value and disabled state.
   *
   * @param validator A synchronous validator function, or an array of synchronous validator
   * functions.
   *
   * @param asyncValidator A single async validator or array of async validator functions
   *
   * @usageNotes
   *
   * ### Initialize a control as disabled
   *
   * The following example returns a control with an initial value in a disabled state.
   *
   * <code-example path="forms/ts/formBuilder/form_builder_example.ts"
   *   linenums="false" region="disabled-control">
   * </code-example>
   *
   */


  FormBuilder.prototype.control = function (formState, validator, asyncValidator) {
    return new FormControl(formState, validator, asyncValidator);
  };
  /**
   * @description
   * Construct a new `FormArray` instance.
   *
   * @param controlsConfig An array of child controls. The key for each child control is its index
   * in the array.
   *
   * @param validator A synchronous validator function, or an array of synchronous validator
   * functions.
   *
   * @param asyncValidator A single async validator or array of async validator functions
   */


  FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {
    var _this = this;

    var controls = controlsConfig.map(function (c) {
      return _this._createControl(c);
    });
    return new FormArray(controls, validator, asyncValidator);
  };
  /** @internal */


  FormBuilder.prototype._reduceControls = function (controlsConfig) {
    var _this = this;

    var controls = {};
    Object.keys(controlsConfig).forEach(function (controlName) {
      controls[controlName] = _this._createControl(controlsConfig[controlName]);
    });
    return controls;
  };
  /** @internal */


  FormBuilder.prototype._createControl = function (controlConfig) {
    if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup || controlConfig instanceof FormArray) {
      return controlConfig;
    } else if (Array.isArray(controlConfig)) {
      var value = controlConfig[0];
      var validator = controlConfig.length > 1 ? controlConfig[1] : null;
      var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;
      return this.control(value, validator, asyncValidator);
    } else {
      return this.control(controlConfig);
    }
  };

  FormBuilder = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()], FormBuilder);
  return FormBuilder;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Version"]('7.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Adds `novalidate` attribute to all forms by default.
 *
 * `novalidate` is used to disable browser's native form validation.
 *
 * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:
 *
 * ```
 * <form ngNativeValidate></form>
 * ```
 *
 * @experimental
 * @ngModule ReactiveFormsModule
 * @ngModule FormsModule
 */

var NgNoValidate =
/** @class */
function () {
  function NgNoValidate() {}

  NgNoValidate = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',
    host: {
      'novalidate': ''
    }
  })], NgNoValidate);
  return NgNoValidate;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SHARED_FORM_DIRECTIVES = [NgNoValidate, NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator];
var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm, NgFormSelectorWarning];
var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];
/**
 * Internal module used for sharing directives between FormsModule and ReactiveFormsModule
 */

var InternalFormsSharedModule =
/** @class */
function () {
  function InternalFormsSharedModule() {}

  InternalFormsSharedModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
    declarations: SHARED_FORM_DIRECTIVES,
    exports: SHARED_FORM_DIRECTIVES
  })], InternalFormsSharedModule);
  return InternalFormsSharedModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Exports the required providers and directives for template-driven forms,
 * making them available for import by NgModules that import this module.
 * @see [Forms](guide/forms)
 *
 * @see [Forms Guide](/guide/forms)
 */


var FormsModule =
/** @class */
function () {
  function FormsModule() {}

  FormsModule_1 = FormsModule;
  /**
   * @description
   * Provides options for configuring the template-driven forms module.
   *
   * @param opts An object of configuration options
   * * `warnOnDeprecatedNgFormSelector` Configures when to emit a warning when the deprecated
   * `ngForm` selector is used.
   */

  FormsModule.withConfig = function (opts) {
    return {
      ngModule: FormsModule_1,
      providers: [{
        provide: NG_FORM_SELECTOR_WARNING,
        useValue: opts.warnOnDeprecatedNgFormSelector
      }]
    };
  };

  var FormsModule_1;
  FormsModule = FormsModule_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
    declarations: TEMPLATE_DRIVEN_DIRECTIVES,
    providers: [RadioControlRegistry],
    exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]
  })], FormsModule);
  return FormsModule;
}();
/**
 * Exports the required infrastructure and directives for reactive forms,
 * making them available for import by NgModules that import this module.
 * @see [Forms](guide/reactive-forms)
 *
 * @see [Reactive Forms Guide](/guide/reactive-forms)
 *
 */


var ReactiveFormsModule =
/** @class */
function () {
  function ReactiveFormsModule() {}

  ReactiveFormsModule_1 = ReactiveFormsModule;
  /**
   * @description
   * Provides options for configuring the reactive forms module.
   *
   * @param opts An object of configuration options
   * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`
   * binding is used with reactive form directives.
   */

  ReactiveFormsModule.withConfig = function (opts) {
    return {
      ngModule: ReactiveFormsModule_1,
      providers: [{
        provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,
        useValue: opts.warnOnNgModelWithFormControl
      }]
    };
  };

  var ReactiveFormsModule_1;
  ReactiveFormsModule = ReactiveFormsModule_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
    declarations: [REACTIVE_DRIVEN_DIRECTIVES],
    providers: [FormBuilder, RadioControlRegistry],
    exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]
  })], ReactiveFormsModule);
  return ReactiveFormsModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),
/* 467 */,
/* 468 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_a", function() { return ROUTER_FORROOT_GUARD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_h", function() { return RouterInitializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_c", function() { return createRouterScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_i", function() { return getAppInitializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_j", function() { return getBootstrapListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_e", function() { return provideForRootGuard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_d", function() { return provideLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_k", function() { return provideRouterInitializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_g", function() { return rootRoute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_b", function() { return routerNgProbeToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_f", function() { return setupRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_n", function() { return RouterScroller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_l", function() { return Tree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_router_router_m", function() { return TreeNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterLink", function() { return RouterLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterLinkWithHref", function() { return RouterLinkWithHref; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterLinkActive", function() { return RouterLinkActive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterOutlet", function() { return RouterOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivationEnd", function() { return ActivationEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivationStart", function() { return ActivationStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChildActivationEnd", function() { return ChildActivationEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChildActivationStart", function() { return ChildActivationStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuardsCheckEnd", function() { return GuardsCheckEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuardsCheckStart", function() { return GuardsCheckStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationCancel", function() { return NavigationCancel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationEnd", function() { return NavigationEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationError", function() { return NavigationError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationStart", function() { return NavigationStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolveEnd", function() { return ResolveEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolveStart", function() { return ResolveStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouteConfigLoadEnd", function() { return RouteConfigLoadEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouteConfigLoadStart", function() { return RouteConfigLoadStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterEvent", function() { return RouterEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoutesRecognized", function() { return RoutesRecognized; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scroll", function() { return Scroll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouteReuseStrategy", function() { return RouteReuseStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return Router; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTES", function() { return ROUTES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTER_CONFIGURATION", function() { return ROUTER_CONFIGURATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTER_INITIALIZER", function() { return ROUTER_INITIALIZER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterModule", function() { return RouterModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "provideRoutes", function() { return provideRoutes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChildrenOutletContexts", function() { return ChildrenOutletContexts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutletContext", function() { return OutletContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoPreloading", function() { return NoPreloading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreloadAllModules", function() { return PreloadAllModules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreloadingStrategy", function() { return PreloadingStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterPreloader", function() { return RouterPreloader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivatedRoute", function() { return ActivatedRoute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivatedRouteSnapshot", function() { return ActivatedRouteSnapshot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterState", function() { return RouterState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterStateSnapshot", function() { return RouterStateSnapshot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIMARY_OUTLET", function() { return PRIMARY_OUTLET; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToParamMap", function() { return convertToParamMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlHandlingStrategy", function() { return UrlHandlingStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultUrlSerializer", function() { return DefaultUrlSerializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlSegment", function() { return UrlSegment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlSegmentGroup", function() { return UrlSegmentGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlSerializer", function() { return UrlSerializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlTree", function() { return UrlTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵEmptyOutletComponent", function() { return EmptyOutletComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵROUTER_PROVIDERS", function() { return ROUTER_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵflatten", function() { return flatten; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(264);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(266);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(267);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(365);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(265);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(263);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license Angular v7.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */






/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Base for events the Router goes through, as opposed to events tied to a specific
 * Route. `RouterEvent`s will only be fired one time for any given navigation.
 *
 * Example:
 *
 * ```
 * class MyService {
 *   constructor(public router: Router, logger: Logger) {
 *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {
 *       logger.log(e.id, e.url);
 *     });
 *   }
 * }
 * ```
 *
 * @experimental
 */

var RouterEvent =
/** @class */
function () {
  function RouterEvent(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url) {
    this.id = id;
    this.url = url;
  }

  return RouterEvent;
}();
/**
 * @description
 *
 * Represents an event triggered when a navigation starts.
 *
 *
 */


var NavigationStart =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NavigationStart, _super);

  function NavigationStart(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  navigationTrigger,
  /** @docsNotRequired */
  restoredState) {
    if (navigationTrigger === void 0) {
      navigationTrigger = 'imperative';
    }

    if (restoredState === void 0) {
      restoredState = null;
    }

    var _this = _super.call(this, id, url) || this;

    _this.navigationTrigger = navigationTrigger;
    _this.restoredState = restoredState;
    return _this;
  }
  /** @docsNotRequired */


  NavigationStart.prototype.toString = function () {
    return "NavigationStart(id: " + this.id + ", url: '" + this.url + "')";
  };

  return NavigationStart;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when a navigation ends successfully.
 *
 *
 */


var NavigationEnd =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NavigationEnd, _super);

  function NavigationEnd(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    return _this;
  }
  /** @docsNotRequired */


  NavigationEnd.prototype.toString = function () {
    return "NavigationEnd(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "')";
  };

  return NavigationEnd;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when a navigation is canceled.
 *
 *
 */


var NavigationCancel =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NavigationCancel, _super);

  function NavigationCancel(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  reason) {
    var _this = _super.call(this, id, url) || this;

    _this.reason = reason;
    return _this;
  }
  /** @docsNotRequired */


  NavigationCancel.prototype.toString = function () {
    return "NavigationCancel(id: " + this.id + ", url: '" + this.url + "')";
  };

  return NavigationCancel;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when a navigation fails due to an unexpected error.
 *
 *
 */


var NavigationError =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NavigationError, _super);

  function NavigationError(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  error) {
    var _this = _super.call(this, id, url) || this;

    _this.error = error;
    return _this;
  }
  /** @docsNotRequired */


  NavigationError.prototype.toString = function () {
    return "NavigationError(id: " + this.id + ", url: '" + this.url + "', error: " + this.error + ")";
  };

  return NavigationError;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when routes are recognized.
 *
 *
 */


var RoutesRecognized =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RoutesRecognized, _super);

  function RoutesRecognized(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }
  /** @docsNotRequired */


  RoutesRecognized.prototype.toString = function () {
    return "RoutesRecognized(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return RoutesRecognized;
}(RouterEvent);
/**
 * @description
 *
 * Represents the start of the Guard phase of routing.
 *
 * @experimental
 */


var GuardsCheckStart =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GuardsCheckStart, _super);

  function GuardsCheckStart(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }

  GuardsCheckStart.prototype.toString = function () {
    return "GuardsCheckStart(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return GuardsCheckStart;
}(RouterEvent);
/**
 * @description
 *
 * Represents the end of the Guard phase of routing.
 *
 * @experimental
 */


var GuardsCheckEnd =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GuardsCheckEnd, _super);

  function GuardsCheckEnd(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state,
  /** @docsNotRequired */
  shouldActivate) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    _this.shouldActivate = shouldActivate;
    return _this;
  }

  GuardsCheckEnd.prototype.toString = function () {
    return "GuardsCheckEnd(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ", shouldActivate: " + this.shouldActivate + ")";
  };

  return GuardsCheckEnd;
}(RouterEvent);
/**
 * @description
 *
 * Represents the start of the Resolve phase of routing. The timing of this
 * event may change, thus it's experimental. In the current iteration it will run
 * in the "resolve" phase whether there's things to resolve or not. In the future this
 * behavior may change to only run when there are things to be resolved.
 *
 * @experimental
 */


var ResolveStart =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ResolveStart, _super);

  function ResolveStart(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }

  ResolveStart.prototype.toString = function () {
    return "ResolveStart(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return ResolveStart;
}(RouterEvent);
/**
 * @description
 *
 * Represents the end of the Resolve phase of routing. See note on
 * `ResolveStart` for use of this experimental API.
 *
 * @experimental
 */


var ResolveEnd =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ResolveEnd, _super);

  function ResolveEnd(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }

  ResolveEnd.prototype.toString = function () {
    return "ResolveEnd(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return ResolveEnd;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered before lazy loading a route config.
 *
 * @experimental
 */


var RouteConfigLoadStart =
/** @class */
function () {
  function RouteConfigLoadStart(
  /** @docsNotRequired */
  route) {
    this.route = route;
  }

  RouteConfigLoadStart.prototype.toString = function () {
    return "RouteConfigLoadStart(path: " + this.route.path + ")";
  };

  return RouteConfigLoadStart;
}();
/**
 * @description
 *
 * Represents an event triggered when a route has been lazy loaded.
 *
 * @experimental
 */


var RouteConfigLoadEnd =
/** @class */
function () {
  function RouteConfigLoadEnd(
  /** @docsNotRequired */
  route) {
    this.route = route;
  }

  RouteConfigLoadEnd.prototype.toString = function () {
    return "RouteConfigLoadEnd(path: " + this.route.path + ")";
  };

  return RouteConfigLoadEnd;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ChildActivationEnd` for use of this experimental API.
 *
 * @experimental
 */


var ChildActivationStart =
/** @class */
function () {
  function ChildActivationStart(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ChildActivationStart.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ChildActivationStart(path: '" + path + "')";
  };

  return ChildActivationStart;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ChildActivationStart` for use of this experimental API.
 *
 * @experimental
 */


var ChildActivationEnd =
/** @class */
function () {
  function ChildActivationEnd(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ChildActivationEnd.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ChildActivationEnd(path: '" + path + "')";
  };

  return ChildActivationEnd;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ActivationEnd` for use of this experimental API.
 *
 * @experimental
 */


var ActivationStart =
/** @class */
function () {
  function ActivationStart(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ActivationStart.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ActivationStart(path: '" + path + "')";
  };

  return ActivationStart;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ActivationStart` for use of this experimental API.
 *
 * @experimental
 */


var ActivationEnd =
/** @class */
function () {
  function ActivationEnd(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ActivationEnd.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ActivationEnd(path: '" + path + "')";
  };

  return ActivationEnd;
}();
/**
 * @description
 *
 * Represents a scrolling event.
 */


var Scroll =
/** @class */
function () {
  function Scroll(
  /** @docsNotRequired */
  routerEvent,
  /** @docsNotRequired */
  position,
  /** @docsNotRequired */
  anchor) {
    this.routerEvent = routerEvent;
    this.position = position;
    this.anchor = anchor;
  }

  Scroll.prototype.toString = function () {
    var pos = this.position ? this.position[0] + ", " + this.position[1] : null;
    return "Scroll(anchor: '" + this.anchor + "', position: '" + pos + "')";
  };

  return Scroll;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This component is used internally within the router to be a placeholder when an empty
 * router-outlet is needed. For example, with a config such as:
 *
 * `{path: 'parent', outlet: 'nav', children: [...]}`
 *
 * In order to render, there needs to be a component on this config, which will default
 * to this `EmptyOutletComponent`.
 */


var EmptyOutletComponent =
/** @class */
function () {
  function EmptyOutletComponent() {}

  EmptyOutletComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
    template: "<router-outlet></router-outlet>"
  })], EmptyOutletComponent);
  return EmptyOutletComponent;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Name of the primary outlet.
 *
 *
 */


var PRIMARY_OUTLET = 'primary';

var ParamsAsMap =
/** @class */
function () {
  function ParamsAsMap(params) {
    this.params = params || {};
  }

  ParamsAsMap.prototype.has = function (name) {
    return this.params.hasOwnProperty(name);
  };

  ParamsAsMap.prototype.get = function (name) {
    if (this.has(name)) {
      var v = this.params[name];
      return Array.isArray(v) ? v[0] : v;
    }

    return null;
  };

  ParamsAsMap.prototype.getAll = function (name) {
    if (this.has(name)) {
      var v = this.params[name];
      return Array.isArray(v) ? v : [v];
    }

    return [];
  };

  Object.defineProperty(ParamsAsMap.prototype, "keys", {
    get: function get() {
      return Object.keys(this.params);
    },
    enumerable: true,
    configurable: true
  });
  return ParamsAsMap;
}();
/**
 * Convert a `Params` instance to a `ParamMap`.
 *
 *
 */


function convertToParamMap(params) {
  return new ParamsAsMap(params);
}

var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';

function navigationCancelingError(message) {
  var error = Error('NavigationCancelingError: ' + message);
  error[NAVIGATION_CANCELING_ERROR] = true;
  return error;
}

function isNavigationCancelingError(error) {
  return error && error[NAVIGATION_CANCELING_ERROR];
} // Matches the route configuration (`route`) against the actual URL (`segments`).


function defaultUrlMatcher(segments, segmentGroup, route) {
  var parts = route.path.split('/');

  if (parts.length > segments.length) {
    // The actual URL is shorter than the config, no match
    return null;
  }

  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {
    // The config is longer than the actual URL but we are looking for a full match, return null
    return null;
  }

  var posParams = {}; // Check each config part against the actual URL

  for (var index = 0; index < parts.length; index++) {
    var part = parts[index];
    var segment = segments[index];
    var isParameter = part.startsWith(':');

    if (isParameter) {
      posParams[part.substring(1)] = segment;
    } else if (part !== segment.path) {
      // The actual URL part does not match the config, no match
      return null;
    }
  }

  return {
    consumed: segments.slice(0, parts.length),
    posParams: posParams
  };
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var LoadedRouterConfig =
/** @class */
function () {
  function LoadedRouterConfig(routes, module) {
    this.routes = routes;
    this.module = module;
  }

  return LoadedRouterConfig;
}();

function validateConfig(config, parentPath) {
  if (parentPath === void 0) {
    parentPath = '';
  } // forEach doesn't iterate undefined values


  for (var i = 0; i < config.length; i++) {
    var route = config[i];
    var fullPath = getFullPath(parentPath, route);
    validateNode(route, fullPath);
  }
}

function validateNode(route, fullPath) {
  if (!route) {
    throw new Error("\n      Invalid configuration of route '" + fullPath + "': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    ");
  }

  if (Array.isArray(route)) {
    throw new Error("Invalid configuration of route '" + fullPath + "': Array cannot be specified");
  }

  if (!route.component && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {
    throw new Error("Invalid configuration of route '" + fullPath + "': a componentless route without children or loadChildren cannot have a named outlet set");
  }

  if (route.redirectTo && route.children) {
    throw new Error("Invalid configuration of route '" + fullPath + "': redirectTo and children cannot be used together");
  }

  if (route.redirectTo && route.loadChildren) {
    throw new Error("Invalid configuration of route '" + fullPath + "': redirectTo and loadChildren cannot be used together");
  }

  if (route.children && route.loadChildren) {
    throw new Error("Invalid configuration of route '" + fullPath + "': children and loadChildren cannot be used together");
  }

  if (route.redirectTo && route.component) {
    throw new Error("Invalid configuration of route '" + fullPath + "': redirectTo and component cannot be used together");
  }

  if (route.path && route.matcher) {
    throw new Error("Invalid configuration of route '" + fullPath + "': path and matcher cannot be used together");
  }

  if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {
    throw new Error("Invalid configuration of route '" + fullPath + "'. One of the following must be provided: component, redirectTo, children or loadChildren");
  }

  if (route.path === void 0 && route.matcher === void 0) {
    throw new Error("Invalid configuration of route '" + fullPath + "': routes must have either a path or a matcher specified");
  }

  if (typeof route.path === 'string' && route.path.charAt(0) === '/') {
    throw new Error("Invalid configuration of route '" + fullPath + "': path cannot start with a slash");
  }

  if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {
    var exp = "The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.";
    throw new Error("Invalid configuration of route '{path: \"" + fullPath + "\", redirectTo: \"" + route.redirectTo + "\"}': please provide 'pathMatch'. " + exp);
  }

  if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {
    throw new Error("Invalid configuration of route '" + fullPath + "': pathMatch can only be set to 'prefix' or 'full'");
  }

  if (route.children) {
    validateConfig(route.children, fullPath);
  }
}

function getFullPath(parentPath, currentRoute) {
  if (!currentRoute) {
    return parentPath;
  }

  if (!parentPath && !currentRoute.path) {
    return '';
  } else if (parentPath && !currentRoute.path) {
    return parentPath + "/";
  } else if (!parentPath && currentRoute.path) {
    return currentRoute.path;
  } else {
    return parentPath + "/" + currentRoute.path;
  }
}
/**
 * Makes a copy of the config and adds any default required properties.
 */


function standardizeConfig(r) {
  var children = r.children && r.children.map(standardizeConfig);
  var c = children ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, r, {
    children: children
  }) : Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, r);

  if (!c.component && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {
    c.component = EmptyOutletComponent;
  }

  return c;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function shallowEqualArrays(a, b) {
  if (a.length !== b.length) return false;

  for (var i = 0; i < a.length; ++i) {
    if (!shallowEqual(a[i], b[i])) return false;
  }

  return true;
}

function shallowEqual(a, b) {
  var k1 = Object.keys(a);
  var k2 = Object.keys(b);

  if (k1.length != k2.length) {
    return false;
  }

  var key;

  for (var i = 0; i < k1.length; i++) {
    key = k1[i];

    if (a[key] !== b[key]) {
      return false;
    }
  }

  return true;
}
/**
 * Flattens single-level nested arrays.
 */


function flatten(arr) {
  return Array.prototype.concat.apply([], arr);
}
/**
 * Return the last element of an array.
 */


function last$1(a) {
  return a.length > 0 ? a[a.length - 1] : null;
}

function forEach(map$$1, callback) {
  for (var prop in map$$1) {
    if (map$$1.hasOwnProperty(prop)) {
      callback(map$$1[prop], prop);
    }
  }
}

function waitForMap(obj, fn) {
  if (Object.keys(obj).length === 0) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])({});
  }

  var waitHead = [];
  var waitTail = [];
  var res = {};
  forEach(obj, function (a, k) {
    var mapped = fn(k, a).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (r) {
      return res[k] = r;
    }));

    if (k === PRIMARY_OUTLET) {
      waitHead.push(mapped);
    } else {
      waitTail.push(mapped);
    }
  }); // Closure compiler has problem with using spread operator here. So just using Array.concat.

  return rxjs__WEBPACK_IMPORTED_MODULE_2__["of"].apply(null, waitHead.concat(waitTail)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["last"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function () {
    return res;
  }));
}
/**
 * ANDs Observables by merging all input observables, reducing to an Observable verifying all
 * input Observables return `true`.
 */


function andObservables(observables) {
  return observables.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["every"])(function (result) {
    return result === true;
  }));
}

function wrapIntoObservable(value) {
  if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵisObservable"])(value)) {
    return value;
  }

  if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵisPromise"])(value)) {
    // Use `Promise.resolve()` to wrap promise-like instances.
    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the
    // change detection.
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(Promise.resolve(value));
  }

  return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(value);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createEmptyUrlTree() {
  return new UrlTree(new UrlSegmentGroup([], {}), {}, null);
}

function containsTree(container, containee, exact) {
  if (exact) {
    return equalQueryParams(container.queryParams, containee.queryParams) && equalSegmentGroups(container.root, containee.root);
  }

  return containsQueryParams(container.queryParams, containee.queryParams) && containsSegmentGroup(container.root, containee.root);
}

function equalQueryParams(container, containee) {
  // TODO: This does not handle array params correctly.
  return shallowEqual(container, containee);
}

function equalSegmentGroups(container, containee) {
  if (!equalPath(container.segments, containee.segments)) return false;
  if (container.numberOfChildren !== containee.numberOfChildren) return false;

  for (var c in containee.children) {
    if (!container.children[c]) return false;
    if (!equalSegmentGroups(container.children[c], containee.children[c])) return false;
  }

  return true;
}

function containsQueryParams(container, containee) {
  // TODO: This does not handle array params correctly.
  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(function (key) {
    return containee[key] === container[key];
  });
}

function containsSegmentGroup(container, containee) {
  return containsSegmentGroupHelper(container, containee, containee.segments);
}

function containsSegmentGroupHelper(container, containee, containeePaths) {
  if (container.segments.length > containeePaths.length) {
    var current = container.segments.slice(0, containeePaths.length);
    if (!equalPath(current, containeePaths)) return false;
    if (containee.hasChildren()) return false;
    return true;
  } else if (container.segments.length === containeePaths.length) {
    if (!equalPath(container.segments, containeePaths)) return false;

    for (var c in containee.children) {
      if (!container.children[c]) return false;
      if (!containsSegmentGroup(container.children[c], containee.children[c])) return false;
    }

    return true;
  } else {
    var current = containeePaths.slice(0, container.segments.length);
    var next = containeePaths.slice(container.segments.length);
    if (!equalPath(container.segments, current)) return false;
    if (!container.children[PRIMARY_OUTLET]) return false;
    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);
  }
}
/**
 * @description
 *
 * Represents the parsed URL.
 *
 * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a
 * serialized tree.
 * UrlTree is a data structure that provides a lot of affordances in dealing with URLs
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree =
 *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');
 *     const f = tree.fragment; // return 'fragment'
 *     const q = tree.queryParams; // returns {debug: 'true'}
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'
 *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'
 *     g.children['support'].segments; // return 1 segment 'help'
 *   }
 * }
 * ```
 *
 *
 */


var UrlTree =
/** @class */
function () {
  /** @internal */
  function UrlTree(
  /** The root segment group of the URL tree */
  root,
  /** The query params of the URL */
  queryParams,
  /** The fragment of the URL */
  fragment) {
    this.root = root;
    this.queryParams = queryParams;
    this.fragment = fragment;
  }

  Object.defineProperty(UrlTree.prototype, "queryParamMap", {
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = convertToParamMap(this.queryParams);
      }

      return this._queryParamMap;
    },
    enumerable: true,
    configurable: true
  });
  /** @docsNotRequired */

  UrlTree.prototype.toString = function () {
    return DEFAULT_SERIALIZER.serialize(this);
  };

  return UrlTree;
}();
/**
 * @description
 *
 * Represents the parsed URL segment group.
 *
 * See `UrlTree` for more information.
 *
 *
 */


var UrlSegmentGroup =
/** @class */
function () {
  function UrlSegmentGroup(
  /** The URL segments of this group. See `UrlSegment` for more information */
  segments,
  /** The list of children of this group */
  children) {
    var _this = this;

    this.segments = segments;
    this.children = children;
    /** The parent node in the url tree */

    this.parent = null;
    forEach(children, function (v, k) {
      return v.parent = _this;
    });
  }
  /** Whether the segment has child segments */


  UrlSegmentGroup.prototype.hasChildren = function () {
    return this.numberOfChildren > 0;
  };

  Object.defineProperty(UrlSegmentGroup.prototype, "numberOfChildren", {
    /** Number of child segments */
    get: function get() {
      return Object.keys(this.children).length;
    },
    enumerable: true,
    configurable: true
  });
  /** @docsNotRequired */

  UrlSegmentGroup.prototype.toString = function () {
    return serializePaths(this);
  };

  return UrlSegmentGroup;
}();
/**
 * @description
 *
 * Represents a single URL segment.
 *
 * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix
 * parameters associated with the segment.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree = router.parseUrl('/team;id=33');
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments;
 *     s[0].path; // returns 'team'
 *     s[0].parameters; // returns {id: 33}
 *   }
 * }
 * ```
 *
 *
 */


var UrlSegment =
/** @class */
function () {
  function UrlSegment(
  /** The path part of a URL segment */
  path,
  /** The matrix parameters associated with a segment */
  parameters) {
    this.path = path;
    this.parameters = parameters;
  }

  Object.defineProperty(UrlSegment.prototype, "parameterMap", {
    get: function get() {
      if (!this._parameterMap) {
        this._parameterMap = convertToParamMap(this.parameters);
      }

      return this._parameterMap;
    },
    enumerable: true,
    configurable: true
  });
  /** @docsNotRequired */

  UrlSegment.prototype.toString = function () {
    return serializePath(this);
  };

  return UrlSegment;
}();

function equalSegments(as, bs) {
  return equalPath(as, bs) && as.every(function (a, i) {
    return shallowEqual(a.parameters, bs[i].parameters);
  });
}

function equalPath(as, bs) {
  if (as.length !== bs.length) return false;
  return as.every(function (a, i) {
    return a.path === bs[i].path;
  });
}

function mapChildrenIntoArray(segment, fn) {
  var res = [];
  forEach(segment.children, function (child, childOutlet) {
    if (childOutlet === PRIMARY_OUTLET) {
      res = res.concat(fn(child, childOutlet));
    }
  });
  forEach(segment.children, function (child, childOutlet) {
    if (childOutlet !== PRIMARY_OUTLET) {
      res = res.concat(fn(child, childOutlet));
    }
  });
  return res;
}
/**
 * @description
 *
 * Serializes and deserializes a URL string into a URL tree.
 *
 * The url serialization strategy is customizable. You can
 * make all URLs case insensitive by providing a custom UrlSerializer.
 *
 * See `DefaultUrlSerializer` for an example of a URL serializer.
 *
 *
 */


var UrlSerializer =
/** @class */
function () {
  function UrlSerializer() {}

  return UrlSerializer;
}();
/**
 * @description
 *
 * A default implementation of the `UrlSerializer`.
 *
 * Example URLs:
 *
 * ```
 * /inbox/33(popup:compose)
 * /inbox/33;open=true/messages/44
 * ```
 *
 * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the
 * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to
 * specify route specific parameters.
 *
 *
 */


var DefaultUrlSerializer =
/** @class */
function () {
  function DefaultUrlSerializer() {}
  /** Parses a url into a `UrlTree` */


  DefaultUrlSerializer.prototype.parse = function (url) {
    var p = new UrlParser(url);
    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());
  };
  /** Converts a `UrlTree` into a url */


  DefaultUrlSerializer.prototype.serialize = function (tree) {
    var segment = "/" + serializeSegment(tree.root, true);
    var query = serializeQueryParams(tree.queryParams);
    var fragment = typeof tree.fragment === "string" ? "#" + encodeUriFragment(tree.fragment) : '';
    return "" + segment + query + fragment;
  };

  return DefaultUrlSerializer;
}();

var DEFAULT_SERIALIZER = new DefaultUrlSerializer();

function serializePaths(segment) {
  return segment.segments.map(function (p) {
    return serializePath(p);
  }).join('/');
}

function serializeSegment(segment, root) {
  if (!segment.hasChildren()) {
    return serializePaths(segment);
  }

  if (root) {
    var primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';
    var children_1 = [];
    forEach(segment.children, function (v, k) {
      if (k !== PRIMARY_OUTLET) {
        children_1.push(k + ":" + serializeSegment(v, false));
      }
    });
    return children_1.length > 0 ? primary + "(" + children_1.join('//') + ")" : primary;
  } else {
    var children = mapChildrenIntoArray(segment, function (v, k) {
      if (k === PRIMARY_OUTLET) {
        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];
      }

      return [k + ":" + serializeSegment(v, false)];
    });
    return serializePaths(segment) + "/(" + children.join('//') + ")";
  }
}
/**
 * Encodes a URI string with the default encoding. This function will only ever be called from
 * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need
 * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't
 * have to be encoded per https://url.spec.whatwg.org.
 */


function encodeUriString(s) {
  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');
}
/**
 * This function should be used to encode both keys and values in a query string key/value. In
 * the following URL, you need to call encodeUriQuery on "k" and "v":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriQuery(s) {
  return encodeUriString(s).replace(/%3B/gi, ';');
}
/**
 * This function should be used to encode a URL fragment. In the following URL, you need to call
 * encodeUriFragment on "f":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriFragment(s) {
  return encodeURI(s);
}
/**
 * This function should be run on any URI segment as well as the key and value in a key/value
 * pair for matrix params. In the following URL, you need to call encodeUriSegment on "html",
 * "mk", and "mv":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriSegment(s) {
  return encodeUriString(s).replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/%26/gi, '&');
}

function decode(s) {
  return decodeURIComponent(s);
} // Query keys/values should have the "+" replaced first, as "+" in a query string is " ".
// decodeURIComponent function will not decode "+" as a space.


function decodeQuery(s) {
  return decode(s.replace(/\+/g, '%20'));
}

function serializePath(path) {
  return "" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);
}

function serializeMatrixParams(params) {
  return Object.keys(params).map(function (key) {
    return ";" + encodeUriSegment(key) + "=" + encodeUriSegment(params[key]);
  }).join('');
}

function serializeQueryParams(params) {
  var strParams = Object.keys(params).map(function (name) {
    var value = params[name];
    return Array.isArray(value) ? value.map(function (v) {
      return encodeUriQuery(name) + "=" + encodeUriQuery(v);
    }).join('&') : encodeUriQuery(name) + "=" + encodeUriQuery(value);
  });
  return strParams.length ? "?" + strParams.join("&") : '';
}

var SEGMENT_RE = /^[^\/()?;=#]+/;

function matchSegments(str) {
  var match = str.match(SEGMENT_RE);
  return match ? match[0] : '';
}

var QUERY_PARAM_RE = /^[^=?&#]+/; // Return the name of the query param at the start of the string or an empty string

function matchQueryParams(str) {
  var match = str.match(QUERY_PARAM_RE);
  return match ? match[0] : '';
}

var QUERY_PARAM_VALUE_RE = /^[^?&#]+/; // Return the value of the query param at the start of the string or an empty string

function matchUrlQueryParamValue(str) {
  var match = str.match(QUERY_PARAM_VALUE_RE);
  return match ? match[0] : '';
}

var UrlParser =
/** @class */
function () {
  function UrlParser(url) {
    this.url = url;
    this.remaining = url;
  }

  UrlParser.prototype.parseRootSegment = function () {
    this.consumeOptional('/');

    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {
      return new UrlSegmentGroup([], {});
    } // The root segment group never has segments


    return new UrlSegmentGroup([], this.parseChildren());
  };

  UrlParser.prototype.parseQueryParams = function () {
    var params = {};

    if (this.consumeOptional('?')) {
      do {
        this.parseQueryParam(params);
      } while (this.consumeOptional('&'));
    }

    return params;
  };

  UrlParser.prototype.parseFragment = function () {
    return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;
  };

  UrlParser.prototype.parseChildren = function () {
    if (this.remaining === '') {
      return {};
    }

    this.consumeOptional('/');
    var segments = [];

    if (!this.peekStartsWith('(')) {
      segments.push(this.parseSegment());
    }

    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {
      this.capture('/');
      segments.push(this.parseSegment());
    }

    var children = {};

    if (this.peekStartsWith('/(')) {
      this.capture('/');
      children = this.parseParens(true);
    }

    var res = {};

    if (this.peekStartsWith('(')) {
      res = this.parseParens(false);
    }

    if (segments.length > 0 || Object.keys(children).length > 0) {
      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);
    }

    return res;
  }; // parse a segment with its matrix parameters
  // ie `name;k1=v1;k2`


  UrlParser.prototype.parseSegment = function () {
    var path = matchSegments(this.remaining);

    if (path === '' && this.peekStartsWith(';')) {
      throw new Error("Empty path url segment cannot have parameters: '" + this.remaining + "'.");
    }

    this.capture(path);
    return new UrlSegment(decode(path), this.parseMatrixParams());
  };

  UrlParser.prototype.parseMatrixParams = function () {
    var params = {};

    while (this.consumeOptional(';')) {
      this.parseParam(params);
    }

    return params;
  };

  UrlParser.prototype.parseParam = function (params) {
    var key = matchSegments(this.remaining);

    if (!key) {
      return;
    }

    this.capture(key);
    var value = '';

    if (this.consumeOptional('=')) {
      var valueMatch = matchSegments(this.remaining);

      if (valueMatch) {
        value = valueMatch;
        this.capture(value);
      }
    }

    params[decode(key)] = decode(value);
  }; // Parse a single query parameter `name[=value]`


  UrlParser.prototype.parseQueryParam = function (params) {
    var key = matchQueryParams(this.remaining);

    if (!key) {
      return;
    }

    this.capture(key);
    var value = '';

    if (this.consumeOptional('=')) {
      var valueMatch = matchUrlQueryParamValue(this.remaining);

      if (valueMatch) {
        value = valueMatch;
        this.capture(value);
      }
    }

    var decodedKey = decodeQuery(key);
    var decodedVal = decodeQuery(value);

    if (params.hasOwnProperty(decodedKey)) {
      // Append to existing values
      var currentVal = params[decodedKey];

      if (!Array.isArray(currentVal)) {
        currentVal = [currentVal];
        params[decodedKey] = currentVal;
      }

      currentVal.push(decodedVal);
    } else {
      // Create a new value
      params[decodedKey] = decodedVal;
    }
  }; // parse `(a/b//outlet_name:c/d)`


  UrlParser.prototype.parseParens = function (allowPrimary) {
    var segments = {};
    this.capture('(');

    while (!this.consumeOptional(')') && this.remaining.length > 0) {
      var path = matchSegments(this.remaining);
      var next = this.remaining[path.length]; // if is is not one of these characters, then the segment was unescaped
      // or the group was not closed

      if (next !== '/' && next !== ')' && next !== ';') {
        throw new Error("Cannot parse url '" + this.url + "'");
      }

      var outletName = undefined;

      if (path.indexOf(':') > -1) {
        outletName = path.substr(0, path.indexOf(':'));
        this.capture(outletName);
        this.capture(':');
      } else if (allowPrimary) {
        outletName = PRIMARY_OUTLET;
      }

      var children = this.parseChildren();
      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);
      this.consumeOptional('//');
    }

    return segments;
  };

  UrlParser.prototype.peekStartsWith = function (str) {
    return this.remaining.startsWith(str);
  }; // Consumes the prefix when it is present and returns whether it has been consumed


  UrlParser.prototype.consumeOptional = function (str) {
    if (this.peekStartsWith(str)) {
      this.remaining = this.remaining.substring(str.length);
      return true;
    }

    return false;
  };

  UrlParser.prototype.capture = function (str) {
    if (!this.consumeOptional(str)) {
      throw new Error("Expected \"" + str + "\".");
    }
  };

  return UrlParser;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var Tree =
/** @class */
function () {
  function Tree(root) {
    this._root = root;
  }

  Object.defineProperty(Tree.prototype, "root", {
    get: function get() {
      return this._root.value;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @internal
   */

  Tree.prototype.parent = function (t) {
    var p = this.pathFromRoot(t);
    return p.length > 1 ? p[p.length - 2] : null;
  };
  /**
   * @internal
   */


  Tree.prototype.children = function (t) {
    var n = findNode(t, this._root);
    return n ? n.children.map(function (t) {
      return t.value;
    }) : [];
  };
  /**
   * @internal
   */


  Tree.prototype.firstChild = function (t) {
    var n = findNode(t, this._root);
    return n && n.children.length > 0 ? n.children[0].value : null;
  };
  /**
   * @internal
   */


  Tree.prototype.siblings = function (t) {
    var p = findPath(t, this._root);
    if (p.length < 2) return [];
    var c = p[p.length - 2].children.map(function (c) {
      return c.value;
    });
    return c.filter(function (cc) {
      return cc !== t;
    });
  };
  /**
   * @internal
   */


  Tree.prototype.pathFromRoot = function (t) {
    return findPath(t, this._root).map(function (s) {
      return s.value;
    });
  };

  return Tree;
}(); // DFS for the node matching the value


function findNode(value, node) {
  var e_1, _a;

  if (value === node.value) return node;

  try {
    for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {
      var child = _c.value;
      var node_1 = findNode(value, child);
      if (node_1) return node_1;
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return null;
} // Return the path to the node with the given value using DFS


function findPath(value, node) {
  var e_2, _a;

  if (value === node.value) return [node];

  try {
    for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {
      var child = _c.value;
      var path = findPath(value, child);

      if (path.length) {
        path.unshift(node);
        return path;
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return [];
}

var TreeNode =
/** @class */
function () {
  function TreeNode(value, children) {
    this.value = value;
    this.children = children;
  }

  TreeNode.prototype.toString = function () {
    return "TreeNode(" + this.value + ")";
  };

  return TreeNode;
}(); // Return the list of T indexed by outlet name


function nodeChildrenAsMap(node) {
  var map$$1 = {};

  if (node) {
    node.children.forEach(function (child) {
      return map$$1[child.value.outlet] = child;
    });
  }

  return map$$1;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Represents the state of the router.
 *
 * RouterState is a tree of activated routes. Every node in this tree knows about the "consumed" URL
 * segments, the extracted parameters, and the resolved data.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const root: ActivatedRoute = state.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * See `ActivatedRoute` for more information.
 *
 *
 */


var RouterState =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RouterState, _super);
  /** @internal */


  function RouterState(root,
  /** The current snapshot of the router state */
  snapshot) {
    var _this = _super.call(this, root) || this;

    _this.snapshot = snapshot;
    setRouterState(_this, root);
    return _this;
  }

  RouterState.prototype.toString = function () {
    return this.snapshot.toString();
  };

  return RouterState;
}(Tree);

function createEmptyState(urlTree, rootComponent) {
  var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);
  var emptyUrl = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]([new UrlSegment('', {})]);
  var emptyParams = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({});
  var emptyData = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({});
  var emptyQueryParams = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({});
  var fragment = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]('');
  var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);
  activated.snapshot = snapshot.root;
  return new RouterState(new TreeNode(activated, []), snapshot);
}

function createEmptyStateSnapshot(urlTree, rootComponent) {
  var emptyParams = {};
  var emptyData = {};
  var emptyQueryParams = {};
  var fragment = '';
  var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});
  return new RouterStateSnapshot('', new TreeNode(activated, []));
}
/**
 * @description
 *
 * Contains the information about a route associated with a component loaded in an
 * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.
 *
 * ```
 * @Component({...})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: Observable<string> = route.params.map(p => p.id);
 *     const url: Observable<string> = route.url.map(segments => segments.join(''));
 *     // route.data includes both `data` and `resolve`
 *     const user = route.data.map(d => d.user);
 *   }
 * }
 * ```
 *
 *
 */


var ActivatedRoute =
/** @class */
function () {
  /** @internal */
  function ActivatedRoute(
  /** An observable of the URL segments matched by this route */
  url,
  /** An observable of the matrix parameters scoped to this route */
  params,
  /** An observable of the query parameters shared by all the routes */
  queryParams,
  /** An observable of the URL fragment shared by all the routes */
  fragment,
  /** An observable of the static and resolved data of this route. */
  data,
  /** The outlet name of the route. It's a constant */
  outlet,
  /** The component of the route. It's a constant */
  // TODO(vsavkin): remove |string
  component, futureSnapshot) {
    this.url = url;
    this.params = params;
    this.queryParams = queryParams;
    this.fragment = fragment;
    this.data = data;
    this.outlet = outlet;
    this.component = component;
    this._futureSnapshot = futureSnapshot;
  }

  Object.defineProperty(ActivatedRoute.prototype, "routeConfig", {
    /** The configuration used to match this route */
    get: function get() {
      return this._futureSnapshot.routeConfig;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "root", {
    /** The root of the router state */
    get: function get() {
      return this._routerState.root;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "parent", {
    /** The parent of this route in the router state tree */
    get: function get() {
      return this._routerState.parent(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "firstChild", {
    /** The first child of this route in the router state tree */
    get: function get() {
      return this._routerState.firstChild(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "children", {
    /** The children of this route in the router state tree */
    get: function get() {
      return this._routerState.children(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "pathFromRoot", {
    /** The path from the root of the router state tree to this route */
    get: function get() {
      return this._routerState.pathFromRoot(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "paramMap", {
    get: function get() {
      if (!this._paramMap) {
        this._paramMap = this.params.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (p) {
          return convertToParamMap(p);
        }));
      }

      return this._paramMap;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "queryParamMap", {
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = this.queryParams.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (p) {
          return convertToParamMap(p);
        }));
      }

      return this._queryParamMap;
    },
    enumerable: true,
    configurable: true
  });

  ActivatedRoute.prototype.toString = function () {
    return this.snapshot ? this.snapshot.toString() : "Future(" + this._futureSnapshot + ")";
  };

  return ActivatedRoute;
}();
/**
 * Returns the inherited params, data, and resolve for a given route.
 * By default, this only inherits values up to the nearest path-less or component-less route.
 * @internal
 */


function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {
  if (paramsInheritanceStrategy === void 0) {
    paramsInheritanceStrategy = 'emptyOnly';
  }

  var pathFromRoot = route.pathFromRoot;
  var inheritingStartingFrom = 0;

  if (paramsInheritanceStrategy !== 'always') {
    inheritingStartingFrom = pathFromRoot.length - 1;

    while (inheritingStartingFrom >= 1) {
      var current = pathFromRoot[inheritingStartingFrom];
      var parent_1 = pathFromRoot[inheritingStartingFrom - 1]; // current route is an empty path => inherits its parent's params and data

      if (current.routeConfig && current.routeConfig.path === '') {
        inheritingStartingFrom--; // parent is componentless => current route should inherit its params and data
      } else if (!parent_1.component) {
        inheritingStartingFrom--;
      } else {
        break;
      }
    }
  }

  return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));
}
/** @internal */


function flattenInherited(pathFromRoot) {
  return pathFromRoot.reduce(function (res, curr) {
    var params = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, res.params, curr.params);

    var data = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, res.data, curr.data);

    var resolve = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, res.resolve, curr._resolvedData);

    return {
      params: params,
      data: data,
      resolve: resolve
    };
  }, {
    params: {},
    data: {},
    resolve: {}
  });
}
/**
 * @description
 *
 * Contains the information about a route associated with a component loaded in an
 * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to
 * traverse the router state tree.
 *
 * ```
 * @Component({templateUrl:'./my-component.html'})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: string = route.snapshot.params.id;
 *     const url: string = route.snapshot.url.join('');
 *     const user = route.snapshot.data.user;
 *   }
 * }
 * ```
 *
 *
 */


var ActivatedRouteSnapshot =
/** @class */
function () {
  /** @internal */
  function ActivatedRouteSnapshot(
  /** The URL segments matched by this route */
  url,
  /** The matrix parameters scoped to this route */
  params,
  /** The query parameters shared by all the routes */
  queryParams,
  /** The URL fragment shared by all the routes */
  fragment,
  /** The static and resolved data of this route */
  data,
  /** The outlet name of the route */
  outlet,
  /** The component of the route */
  component, routeConfig, urlSegment, lastPathIndex, resolve) {
    this.url = url;
    this.params = params;
    this.queryParams = queryParams;
    this.fragment = fragment;
    this.data = data;
    this.outlet = outlet;
    this.component = component;
    this.routeConfig = routeConfig;
    this._urlSegment = urlSegment;
    this._lastPathIndex = lastPathIndex;
    this._resolve = resolve;
  }

  Object.defineProperty(ActivatedRouteSnapshot.prototype, "root", {
    /** The root of the router state */
    get: function get() {
      return this._routerState.root;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "parent", {
    /** The parent of this route in the router state tree */
    get: function get() {
      return this._routerState.parent(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "firstChild", {
    /** The first child of this route in the router state tree */
    get: function get() {
      return this._routerState.firstChild(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "children", {
    /** The children of this route in the router state tree */
    get: function get() {
      return this._routerState.children(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "pathFromRoot", {
    /** The path from the root of the router state tree to this route */
    get: function get() {
      return this._routerState.pathFromRoot(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "paramMap", {
    get: function get() {
      if (!this._paramMap) {
        this._paramMap = convertToParamMap(this.params);
      }

      return this._paramMap;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "queryParamMap", {
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = convertToParamMap(this.queryParams);
      }

      return this._queryParamMap;
    },
    enumerable: true,
    configurable: true
  });

  ActivatedRouteSnapshot.prototype.toString = function () {
    var url = this.url.map(function (segment) {
      return segment.toString();
    }).join('/');
    var matched = this.routeConfig ? this.routeConfig.path : '';
    return "Route(url:'" + url + "', path:'" + matched + "')";
  };

  return ActivatedRouteSnapshot;
}();
/**
 * @description
 *
 * Represents the state of the router at a moment in time.
 *
 * This is a tree of activated route snapshots. Every node in this tree knows about
 * the "consumed" URL segments, the extracted parameters, and the resolved data.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const snapshot: RouterStateSnapshot = state.snapshot;
 *     const root: ActivatedRouteSnapshot = snapshot.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 *
 */


var RouterStateSnapshot =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RouterStateSnapshot, _super);
  /** @internal */


  function RouterStateSnapshot(
  /** The url from which this snapshot was created */
  url, root) {
    var _this = _super.call(this, root) || this;

    _this.url = url;
    setRouterState(_this, root);
    return _this;
  }

  RouterStateSnapshot.prototype.toString = function () {
    return serializeNode(this._root);
  };

  return RouterStateSnapshot;
}(Tree);

function setRouterState(state, node) {
  node.value._routerState = state;
  node.children.forEach(function (c) {
    return setRouterState(state, c);
  });
}

function serializeNode(node) {
  var c = node.children.length > 0 ? " { " + node.children.map(serializeNode).join(', ') + " } " : '';
  return "" + node.value + c;
}
/**
 * The expectation is that the activate route is created with the right set of parameters.
 * So we push new values into the observables only when they are not the initial values.
 * And we detect that by checking if the snapshot field is set.
 */


function advanceActivatedRoute(route) {
  if (route.snapshot) {
    var currentSnapshot = route.snapshot;
    var nextSnapshot = route._futureSnapshot;
    route.snapshot = nextSnapshot;

    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {
      route.queryParams.next(nextSnapshot.queryParams);
    }

    if (currentSnapshot.fragment !== nextSnapshot.fragment) {
      route.fragment.next(nextSnapshot.fragment);
    }

    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {
      route.params.next(nextSnapshot.params);
    }

    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {
      route.url.next(nextSnapshot.url);
    }

    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {
      route.data.next(nextSnapshot.data);
    }
  } else {
    route.snapshot = route._futureSnapshot; // this is for resolved data

    route.data.next(route._futureSnapshot.data);
  }
}

function equalParamsAndUrlSegments(a, b) {
  var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);
  var parentsMismatch = !a.parent !== !b.parent;
  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createRouterState(routeReuseStrategy, curr, prevState) {
  var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);
  return new RouterState(root, curr);
}

function createNode(routeReuseStrategy, curr, prevState) {
  // reuse an activated route that is currently displayed on the screen
  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {
    var value = prevState.value;
    value._futureSnapshot = curr.value;
    var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);
    return new TreeNode(value, children); // retrieve an activated route that is used to be displayed, but is not currently displayed
  } else {
    var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);

    if (detachedRouteHandle) {
      var tree = detachedRouteHandle.route;
      setFutureSnapshotsOfActivatedRoutes(curr, tree);
      return tree;
    } else {
      var value = createActivatedRoute(curr.value);
      var children = curr.children.map(function (c) {
        return createNode(routeReuseStrategy, c);
      });
      return new TreeNode(value, children);
    }
  }
}

function setFutureSnapshotsOfActivatedRoutes(curr, result) {
  if (curr.value.routeConfig !== result.value.routeConfig) {
    throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');
  }

  if (curr.children.length !== result.children.length) {
    throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');
  }

  result.value._futureSnapshot = curr.value;

  for (var i = 0; i < curr.children.length; ++i) {
    setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);
  }
}

function createOrReuseChildren(routeReuseStrategy, curr, prevState) {
  return curr.children.map(function (child) {
    var e_1, _a;

    try {
      for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {
        var p = _c.value;

        if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {
          return createNode(routeReuseStrategy, child, p);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return createNode(routeReuseStrategy, child);
  });
}

function createActivatedRoute(c) {
  return new ActivatedRoute(new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](c.url), new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](c.params), new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](c.queryParams), new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](c.fragment), new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](c.data), c.outlet, c.component, c);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createUrlTree(route, urlTree, commands, queryParams, fragment) {
  if (commands.length === 0) {
    return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);
  }

  var nav = computeNavigation(commands);

  if (nav.toRoot()) {
    return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);
  }

  var startingPosition = findStartingPosition(nav, urlTree, route);
  var segmentGroup = startingPosition.processChildren ? updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) : updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);
  return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);
}

function isMatrixParams(command) {
  return _typeof(command) === 'object' && command != null && !command.outlets && !command.segmentPath;
}

function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {
  var qp = {};

  if (queryParams) {
    forEach(queryParams, function (value, name) {
      qp[name] = Array.isArray(value) ? value.map(function (v) {
        return "" + v;
      }) : "" + value;
    });
  }

  if (urlTree.root === oldSegmentGroup) {
    return new UrlTree(newSegmentGroup, qp, fragment);
  }

  return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);
}

function replaceSegment(current, oldSegment, newSegment) {
  var children = {};
  forEach(current.children, function (c, outletName) {
    if (c === oldSegment) {
      children[outletName] = newSegment;
    } else {
      children[outletName] = replaceSegment(c, oldSegment, newSegment);
    }
  });
  return new UrlSegmentGroup(current.segments, children);
}

var Navigation =
/** @class */
function () {
  function Navigation(isAbsolute, numberOfDoubleDots, commands) {
    this.isAbsolute = isAbsolute;
    this.numberOfDoubleDots = numberOfDoubleDots;
    this.commands = commands;

    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {
      throw new Error('Root segment cannot have matrix parameters');
    }

    var cmdWithOutlet = commands.find(function (c) {
      return _typeof(c) === 'object' && c != null && c.outlets;
    });

    if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {
      throw new Error('{outlets:{}} has to be the last command');
    }
  }

  Navigation.prototype.toRoot = function () {
    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';
  };

  return Navigation;
}();
/** Transforms commands to a normalized `Navigation` */


function computeNavigation(commands) {
  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {
    return new Navigation(true, 0, commands);
  }

  var numberOfDoubleDots = 0;
  var isAbsolute = false;
  var res = commands.reduce(function (res, cmd, cmdIdx) {
    if (_typeof(cmd) === 'object' && cmd != null) {
      if (cmd.outlets) {
        var outlets_1 = {};
        forEach(cmd.outlets, function (commands, name) {
          outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;
        });
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(res, [{
          outlets: outlets_1
        }]);
      }

      if (cmd.segmentPath) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(res, [cmd.segmentPath]);
      }
    }

    if (!(typeof cmd === 'string')) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(res, [cmd]);
    }

    if (cmdIdx === 0) {
      cmd.split('/').forEach(function (urlPart, partIndex) {
        if (partIndex == 0 && urlPart === '.') ;else if (partIndex == 0 && urlPart === '') {
          //  '/a'
          isAbsolute = true;
        } else if (urlPart === '..') {
          //  '../a'
          numberOfDoubleDots++;
        } else if (urlPart != '') {
          res.push(urlPart);
        }
      });
      return res;
    }

    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(res, [cmd]);
  }, []);
  return new Navigation(isAbsolute, numberOfDoubleDots, res);
}

var Position =
/** @class */
function () {
  function Position(segmentGroup, processChildren, index) {
    this.segmentGroup = segmentGroup;
    this.processChildren = processChildren;
    this.index = index;
  }

  return Position;
}();

function findStartingPosition(nav, tree, route) {
  if (nav.isAbsolute) {
    return new Position(tree.root, true, 0);
  }

  if (route.snapshot._lastPathIndex === -1) {
    return new Position(route.snapshot._urlSegment, true, 0);
  }

  var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;
  var index = route.snapshot._lastPathIndex + modifier;
  return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);
}

function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {
  var g = group;
  var ci = index;
  var dd = numberOfDoubleDots;

  while (dd > ci) {
    dd -= ci;
    g = g.parent;

    if (!g) {
      throw new Error('Invalid number of \'../\'');
    }

    ci = g.segments.length;
  }

  return new Position(g, false, ci - dd);
}

function getPath(command) {
  if (_typeof(command) === 'object' && command != null && command.outlets) {
    return command.outlets[PRIMARY_OUTLET];
  }

  return "" + command;
}

function getOutlets(commands) {
  var _a, _b;

  if (!(_typeof(commands[0]) === 'object')) return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;
  if (commands[0].outlets === undefined) return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;
  return commands[0].outlets;
}

function updateSegmentGroup(segmentGroup, startIndex, commands) {
  if (!segmentGroup) {
    segmentGroup = new UrlSegmentGroup([], {});
  }

  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);
  }

  var m = prefixedWith(segmentGroup, startIndex, commands);
  var slicedCommands = commands.slice(m.commandIndex);

  if (m.match && m.pathIndex < segmentGroup.segments.length) {
    var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});
    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);
    return updateSegmentGroupChildren(g, 0, slicedCommands);
  } else if (m.match && slicedCommands.length === 0) {
    return new UrlSegmentGroup(segmentGroup.segments, {});
  } else if (m.match && !segmentGroup.hasChildren()) {
    return createNewSegmentGroup(segmentGroup, startIndex, commands);
  } else if (m.match) {
    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);
  } else {
    return createNewSegmentGroup(segmentGroup, startIndex, commands);
  }
}

function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {
  if (commands.length === 0) {
    return new UrlSegmentGroup(segmentGroup.segments, {});
  } else {
    var outlets_2 = getOutlets(commands);
    var children_1 = {};
    forEach(outlets_2, function (commands, outlet) {
      if (commands !== null) {
        children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);
      }
    });
    forEach(segmentGroup.children, function (child, childOutlet) {
      if (outlets_2[childOutlet] === undefined) {
        children_1[childOutlet] = child;
      }
    });
    return new UrlSegmentGroup(segmentGroup.segments, children_1);
  }
}

function prefixedWith(segmentGroup, startIndex, commands) {
  var currentCommandIndex = 0;
  var currentPathIndex = startIndex;
  var noMatch = {
    match: false,
    pathIndex: 0,
    commandIndex: 0
  };

  while (currentPathIndex < segmentGroup.segments.length) {
    if (currentCommandIndex >= commands.length) return noMatch;
    var path = segmentGroup.segments[currentPathIndex];
    var curr = getPath(commands[currentCommandIndex]);
    var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;
    if (currentPathIndex > 0 && curr === undefined) break;

    if (curr && next && _typeof(next) === 'object' && next.outlets === undefined) {
      if (!compare(curr, next, path)) return noMatch;
      currentCommandIndex += 2;
    } else {
      if (!compare(curr, {}, path)) return noMatch;
      currentCommandIndex++;
    }

    currentPathIndex++;
  }

  return {
    match: true,
    pathIndex: currentPathIndex,
    commandIndex: currentCommandIndex
  };
}

function createNewSegmentGroup(segmentGroup, startIndex, commands) {
  var paths = segmentGroup.segments.slice(0, startIndex);
  var i = 0;

  while (i < commands.length) {
    if (_typeof(commands[i]) === 'object' && commands[i].outlets !== undefined) {
      var children = createNewSegmentChildren(commands[i].outlets);
      return new UrlSegmentGroup(paths, children);
    } // if we start with an object literal, we need to reuse the path part from the segment


    if (i === 0 && isMatrixParams(commands[0])) {
      var p = segmentGroup.segments[startIndex];
      paths.push(new UrlSegment(p.path, commands[0]));
      i++;
      continue;
    }

    var curr = getPath(commands[i]);
    var next = i < commands.length - 1 ? commands[i + 1] : null;

    if (curr && next && isMatrixParams(next)) {
      paths.push(new UrlSegment(curr, stringify(next)));
      i += 2;
    } else {
      paths.push(new UrlSegment(curr, {}));
      i++;
    }
  }

  return new UrlSegmentGroup(paths, {});
}

function createNewSegmentChildren(outlets) {
  var children = {};
  forEach(outlets, function (commands, outlet) {
    if (commands !== null) {
      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);
    }
  });
  return children;
}

function stringify(params) {
  var res = {};
  forEach(params, function (v, k) {
    return res[k] = "" + v;
  });
  return res;
}

function compare(path, params, segment) {
  return path == segment.path && shallowEqual(params, segment.parameters);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var activateRoutes = function activateRoutes(rootContexts, routeReuseStrategy, forwardEvent) {
  return Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (t) {
    new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent).activate(rootContexts);
    return t;
  });
};

var ActivateRoutes =
/** @class */
function () {
  function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {
    this.routeReuseStrategy = routeReuseStrategy;
    this.futureState = futureState;
    this.currState = currState;
    this.forwardEvent = forwardEvent;
  }

  ActivateRoutes.prototype.activate = function (parentContexts) {
    var futureRoot = this.futureState._root;
    var currRoot = this.currState ? this.currState._root : null;
    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);
    advanceActivatedRoute(this.futureState.root);
    this.activateChildRoutes(futureRoot, currRoot, parentContexts);
  }; // De-activate the child route that are not re-used for the future state


  ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {
    var _this = this;

    var children = nodeChildrenAsMap(currNode); // Recurse on the routes active in the future state to de-activate deeper children

    futureNode.children.forEach(function (futureChild) {
      var childOutletName = futureChild.value.outlet;

      _this.deactivateRoutes(futureChild, children[childOutletName], contexts);

      delete children[childOutletName];
    }); // De-activate the routes that will not be re-used

    forEach(children, function (v, childName) {
      _this.deactivateRouteAndItsChildren(v, contexts);
    });
  };

  ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {
    var future = futureNode.value;
    var curr = currNode ? currNode.value : null;

    if (future === curr) {
      // Reusing the node, check to see if the children need to be de-activated
      if (future.component) {
        // If we have a normal route, we need to go through an outlet.
        var context = parentContext.getContext(future.outlet);

        if (context) {
          this.deactivateChildRoutes(futureNode, currNode, context.children);
        }
      } else {
        // if we have a componentless route, we recurse but keep the same outlet map.
        this.deactivateChildRoutes(futureNode, currNode, parentContext);
      }
    } else {
      if (curr) {
        // Deactivate the current route which will not be re-used
        this.deactivateRouteAndItsChildren(currNode, parentContext);
      }
    }
  };

  ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {
    if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {
      this.detachAndStoreRouteSubtree(route, parentContexts);
    } else {
      this.deactivateRouteAndOutlet(route, parentContexts);
    }
  };

  ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {
    var context = parentContexts.getContext(route.value.outlet);

    if (context && context.outlet) {
      var componentRef = context.outlet.detach();
      var contexts = context.children.onOutletDeactivated();
      this.routeReuseStrategy.store(route.value.snapshot, {
        componentRef: componentRef,
        route: route,
        contexts: contexts
      });
    }
  };

  ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {
    var _this = this;

    var context = parentContexts.getContext(route.value.outlet);

    if (context) {
      var children = nodeChildrenAsMap(route);
      var contexts_1 = route.value.component ? context.children : parentContexts;
      forEach(children, function (v, k) {
        return _this.deactivateRouteAndItsChildren(v, contexts_1);
      });

      if (context.outlet) {
        // Destroy the component
        context.outlet.deactivate(); // Destroy the contexts for all the outlets that were in the component

        context.children.onOutletDeactivated();
      }
    }
  };

  ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {
    var _this = this;

    var children = nodeChildrenAsMap(currNode);
    futureNode.children.forEach(function (c) {
      _this.activateRoutes(c, children[c.value.outlet], contexts);

      _this.forwardEvent(new ActivationEnd(c.value.snapshot));
    });

    if (futureNode.children.length) {
      this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));
    }
  };

  ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {
    var future = futureNode.value;
    var curr = currNode ? currNode.value : null;
    advanceActivatedRoute(future); // reusing the node

    if (future === curr) {
      if (future.component) {
        // If we have a normal route, we need to go through an outlet.
        var context = parentContexts.getOrCreateContext(future.outlet);
        this.activateChildRoutes(futureNode, currNode, context.children);
      } else {
        // if we have a componentless route, we recurse but keep the same outlet map.
        this.activateChildRoutes(futureNode, currNode, parentContexts);
      }
    } else {
      if (future.component) {
        // if we have a normal route, we need to place the component into the outlet and recurse.
        var context = parentContexts.getOrCreateContext(future.outlet);

        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {
          var stored = this.routeReuseStrategy.retrieve(future.snapshot);
          this.routeReuseStrategy.store(future.snapshot, null);
          context.children.onOutletReAttached(stored.contexts);
          context.attachRef = stored.componentRef;
          context.route = stored.route.value;

          if (context.outlet) {
            // Attach right away when the outlet has already been instantiated
            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated
            context.outlet.attach(stored.componentRef, stored.route.value);
          }

          advanceActivatedRouteNodeAndItsChildren(stored.route);
        } else {
          var config = parentLoadedConfig(future.snapshot);
          var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;
          context.attachRef = null;
          context.route = future;
          context.resolver = cmpFactoryResolver;

          if (context.outlet) {
            // Activate the outlet when it has already been instantiated
            // Otherwise it will get activated from its `ngOnInit` when instantiated
            context.outlet.activateWith(future, cmpFactoryResolver);
          }

          this.activateChildRoutes(futureNode, null, context.children);
        }
      } else {
        // if we have a componentless route, we recurse but keep the same outlet map.
        this.activateChildRoutes(futureNode, null, parentContexts);
      }
    }
  };

  return ActivateRoutes;
}();

function advanceActivatedRouteNodeAndItsChildren(node) {
  advanceActivatedRoute(node.value);
  node.children.forEach(advanceActivatedRouteNodeAndItsChildren);
}

function parentLoadedConfig(snapshot) {
  for (var s = snapshot.parent; s; s = s.parent) {
    var route = s.routeConfig;
    if (route && route._loadedConfig) return route._loadedConfig;
    if (route && route.component) return null;
  }

  return null;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NoMatch =
/** @class */
function () {
  function NoMatch(segmentGroup) {
    this.segmentGroup = segmentGroup || null;
  }

  return NoMatch;
}();

var AbsoluteRedirect =
/** @class */
function () {
  function AbsoluteRedirect(urlTree) {
    this.urlTree = urlTree;
  }

  return AbsoluteRedirect;
}();

function noMatch(segmentGroup) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (obs) {
    return obs.error(new NoMatch(segmentGroup));
  });
}

function absoluteRedirect(newTree) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (obs) {
    return obs.error(new AbsoluteRedirect(newTree));
  });
}

function namedOutletsRedirect(redirectTo) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (obs) {
    return obs.error(new Error("Only absolute redirects can have named outlets. redirectTo: '" + redirectTo + "'"));
  });
}

function canLoadFails(route) {
  return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (obs) {
    return obs.error(navigationCancelingError("Cannot load children because the guard of the route \"path: '" + route.path + "'\" returned false"));
  });
}
/**
 * Returns the `UrlTree` with the redirection applied.
 *
 * Lazy modules are loaded along the way.
 */


function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {
  return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();
}

var ApplyRedirects =
/** @class */
function () {
  function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {
    this.configLoader = configLoader;
    this.urlSerializer = urlSerializer;
    this.urlTree = urlTree;
    this.config = config;
    this.allowRedirects = true;
    this.ngModule = moduleInjector.get(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleRef"]);
  }

  ApplyRedirects.prototype.apply = function () {
    var _this = this;

    var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);
    var urlTrees$ = expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (rootSegmentGroup) {
      return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment);
    }));
    return urlTrees$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (e) {
      if (e instanceof AbsoluteRedirect) {
        // after an absolute redirect we do not apply any more redirects!
        _this.allowRedirects = false; // we need to run matching, so we can fetch all lazy-loaded modules

        return _this.match(e.urlTree);
      }

      if (e instanceof NoMatch) {
        throw _this.noMatchError(e);
      }

      throw e;
    }));
  };

  ApplyRedirects.prototype.match = function (tree) {
    var _this = this;

    var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);
    var mapped$ = expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (rootSegmentGroup) {
      return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);
    }));
    return mapped$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (e) {
      if (e instanceof NoMatch) {
        throw _this.noMatchError(e);
      }

      throw e;
    }));
  };

  ApplyRedirects.prototype.noMatchError = function (e) {
    return new Error("Cannot match any routes. URL Segment: '" + e.segmentGroup + "'");
  };

  ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {
    var _a;

    var root = rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) : rootCandidate;
    return new UrlTree(root, queryParams, fragment);
  };

  ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {
    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
      return this.expandChildren(ngModule, routes, segmentGroup).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (children) {
        return new UrlSegmentGroup([], children);
      }));
    }

    return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);
  }; // Recursively expand segment groups for all the child outlets


  ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {
    var _this = this;

    return waitForMap(segmentGroup.children, function (childOutlet, child) {
      return _this.expandSegmentGroup(ngModule, routes, child, childOutlet);
    });
  };

  ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {
    var _this = this;

    return rxjs__WEBPACK_IMPORTED_MODULE_2__["of"].apply(void 0, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(routes)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (r) {
      var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);

      return expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (e) {
        if (e instanceof NoMatch) {
          // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -
          // talk to Jason
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null);
        }

        throw e;
      }));
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(function (s) {
      return !!s;
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (e, _) {
      if (e instanceof rxjs__WEBPACK_IMPORTED_MODULE_2__["EmptyError"] || e.name === 'EmptyError') {
        if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(new UrlSegmentGroup([], {}));
        }

        throw new NoMatch(segmentGroup);
      }

      throw e;
    }));
  };

  ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {
    return segments.length === 0 && !segmentGroup.children[outlet];
  };

  ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {
    if (getOutlet(route) !== outlet) {
      return noMatch(segmentGroup);
    }

    if (route.redirectTo === undefined) {
      return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);
    }

    if (allowRedirects && this.allowRedirects) {
      return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);
    }

    return noMatch(segmentGroup);
  };

  ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {
    if (route.path === '**') {
      return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);
    }

    return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);
  };

  ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {
    var _this = this;

    var newTree = this.applyRedirectCommands([], route.redirectTo, {});

    if (route.redirectTo.startsWith('/')) {
      return absoluteRedirect(newTree);
    }

    return this.lineralizeSegments(route, newTree).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (newSegments) {
      var group = new UrlSegmentGroup(newSegments, {});
      return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);
    }));
  };

  ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {
    var _this = this;

    var _a = match(segmentGroup, route, segments),
        matched = _a.matched,
        consumedSegments = _a.consumedSegments,
        lastChild = _a.lastChild,
        positionalParamSegments = _a.positionalParamSegments;

    if (!matched) return noMatch(segmentGroup);
    var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);

    if (route.redirectTo.startsWith('/')) {
      return absoluteRedirect(newTree);
    }

    return this.lineralizeSegments(route, newTree).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (newSegments) {
      return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);
    }));
  };

  ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {
    var _this = this;

    if (route.path === '**') {
      if (route.loadChildren) {
        return this.configLoader.load(ngModule.injector, route).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (cfg) {
          route._loadedConfig = cfg;
          return new UrlSegmentGroup(segments, {});
        }));
      }

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(new UrlSegmentGroup(segments, {}));
    }

    var _a = match(rawSegmentGroup, route, segments),
        matched = _a.matched,
        consumedSegments = _a.consumedSegments,
        lastChild = _a.lastChild;

    if (!matched) return noMatch(rawSegmentGroup);
    var rawSlicedSegments = segments.slice(lastChild);
    var childConfig$ = this.getChildConfig(ngModule, route, segments);
    return childConfig$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (routerConfig) {
      var childModule = routerConfig.module;
      var childConfig = routerConfig.routes;

      var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig),
          segmentGroup = _a.segmentGroup,
          slicedSegments = _a.slicedSegments;

      if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {
        var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);

        return expanded$_1.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (children) {
          return new UrlSegmentGroup(consumedSegments, children);
        }));
      }

      if (childConfig.length === 0 && slicedSegments.length === 0) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(new UrlSegmentGroup(consumedSegments, {}));
      }

      var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);

      return expanded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (cs) {
        return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);
      }));
    }));
  };

  ApplyRedirects.prototype.getChildConfig = function (ngModule, route, segments) {
    var _this = this;

    if (route.children) {
      // The children belong to the same module
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(new LoadedRouterConfig(route.children, ngModule));
    }

    if (route.loadChildren) {
      // lazy children belong to the loaded module
      if (route._loadedConfig !== undefined) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(route._loadedConfig);
      }

      return runCanLoadGuard(ngModule.injector, route, segments).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (shouldLoad) {
        if (shouldLoad) {
          return _this.configLoader.load(ngModule.injector, route).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (cfg) {
            route._loadedConfig = cfg;
            return cfg;
          }));
        }

        return canLoadFails(route);
      }));
    }

    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(new LoadedRouterConfig([], ngModule));
  };

  ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {
    var res = [];
    var c = urlTree.root;

    while (true) {
      res = res.concat(c.segments);

      if (c.numberOfChildren === 0) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(res);
      }

      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {
        return namedOutletsRedirect(route.redirectTo);
      }

      c = c.children[PRIMARY_OUTLET];
    }
  };

  ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {
    return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);
  };

  ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {
    var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);
    return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);
  };

  ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {
    var res = {};
    forEach(redirectToParams, function (v, k) {
      var copySourceValue = typeof v === 'string' && v.startsWith(':');

      if (copySourceValue) {
        var sourceName = v.substring(1);
        res[k] = actualParams[sourceName];
      } else {
        res[k] = v;
      }
    });
    return res;
  };

  ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {
    var _this = this;

    var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);
    var children = {};
    forEach(group.children, function (child, name) {
      children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);
    });
    return new UrlSegmentGroup(updatedSegments, children);
  };

  ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {
    var _this = this;

    return redirectToSegments.map(function (s) {
      return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) : _this.findOrReturn(s, actualSegments);
    });
  };

  ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {
    var pos = posParams[redirectToUrlSegment.path.substring(1)];
    if (!pos) throw new Error("Cannot redirect to '" + redirectTo + "'. Cannot find '" + redirectToUrlSegment.path + "'.");
    return pos;
  };

  ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {
    var e_1, _a;

    var idx = 0;

    try {
      for (var actualSegments_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {
        var s = actualSegments_1_1.value;

        if (s.path === redirectToUrlSegment.path) {
          actualSegments.splice(idx);
          return s;
        }

        idx++;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return redirectToUrlSegment;
  };

  return ApplyRedirects;
}();

function runCanLoadGuard(moduleInjector, route, segments) {
  var canLoad = route.canLoad;
  if (!canLoad || canLoad.length === 0) return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true);
  var obs = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(canLoad).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (injectionToken) {
    var guard = moduleInjector.get(injectionToken);
    return wrapIntoObservable(guard.canLoad ? guard.canLoad(route, segments) : guard(route, segments));
  }));
  return andObservables(obs);
}

function match(segmentGroup, route, segments) {
  if (route.path === '') {
    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {
      return {
        matched: false,
        consumedSegments: [],
        lastChild: 0,
        positionalParamSegments: {}
      };
    }

    return {
      matched: true,
      consumedSegments: [],
      lastChild: 0,
      positionalParamSegments: {}
    };
  }

  var matcher = route.matcher || defaultUrlMatcher;
  var res = matcher(segments, segmentGroup, route);

  if (!res) {
    return {
      matched: false,
      consumedSegments: [],
      lastChild: 0,
      positionalParamSegments: {}
    };
  }

  return {
    matched: true,
    consumedSegments: res.consumed,
    lastChild: res.consumed.length,
    positionalParamSegments: res.posParams
  };
}

function split(segmentGroup, consumedSegments, slicedSegments, config) {
  if (slicedSegments.length > 0 && containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {
    var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));
    return {
      segmentGroup: mergeTrivialChildren(s),
      slicedSegments: []
    };
  }

  if (slicedSegments.length === 0 && containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {
    var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));
    return {
      segmentGroup: mergeTrivialChildren(s),
      slicedSegments: slicedSegments
    };
  }

  return {
    segmentGroup: segmentGroup,
    slicedSegments: slicedSegments
  };
}

function mergeTrivialChildren(s) {
  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {
    var c = s.children[PRIMARY_OUTLET];
    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);
  }

  return s;
}

function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {
  var e_2, _a;

  var res = {};

  try {
    for (var routes_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {
      var r = routes_1_1.value;

      if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {
        res[getOutlet(r)] = new UrlSegmentGroup([], {});
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, children, res);
}

function createChildrenForEmptySegments(routes, primarySegmentGroup) {
  var e_3, _a;

  var res = {};
  res[PRIMARY_OUTLET] = primarySegmentGroup;

  try {
    for (var routes_2 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {
      var r = routes_2_1.value;

      if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {
        res[getOutlet(r)] = new UrlSegmentGroup([], {});
      }
    }
  } catch (e_3_1) {
    e_3 = {
      error: e_3_1
    };
  } finally {
    try {
      if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);
    } finally {
      if (e_3) throw e_3.error;
    }
  }

  return res;
}

function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {
  return routes.some(function (r) {
    return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET;
  });
}

function containsEmptyPathRedirects(segmentGroup, segments, routes) {
  return routes.some(function (r) {
    return isEmptyPathRedirect(segmentGroup, segments, r);
  });
}

function isEmptyPathRedirect(segmentGroup, segments, r) {
  if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {
    return false;
  }

  return r.path === '' && r.redirectTo !== undefined;
}

function getOutlet(route) {
  return route.outlet || PRIMARY_OUTLET;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (t) {
      return applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (urlAfterRedirects) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
          urlAfterRedirects: urlAfterRedirects
        });
      }));
    }));
  };
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CanActivate =
/** @class */
function () {
  function CanActivate(path) {
    this.path = path;
    this.route = this.path[this.path.length - 1];
  }

  return CanActivate;
}();

var CanDeactivate =
/** @class */
function () {
  function CanDeactivate(component, route) {
    this.component = component;
    this.route = route;
  }

  return CanDeactivate;
}();

function getAllRouteGuards(future, curr, parentContexts) {
  var futureRoot = future._root;
  var currRoot = curr ? curr._root : null;
  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);
}

function getCanActivateChild(p) {
  var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;
  if (!canActivateChild || canActivateChild.length === 0) return null;
  return {
    node: p,
    guards: canActivateChild
  };
}

function getToken(token, snapshot, moduleInjector) {
  var config = getClosestLoadedConfig(snapshot);
  var injector = config ? config.module.injector : moduleInjector;
  return injector.get(token);
}

function getClosestLoadedConfig(snapshot) {
  if (!snapshot) return null;

  for (var s = snapshot.parent; s; s = s.parent) {
    var route = s.routeConfig;
    if (route && route._loadedConfig) return route._loadedConfig;
  }

  return null;
}

function getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks) {
  if (checks === void 0) {
    checks = {
      canDeactivateChecks: [],
      canActivateChecks: []
    };
  }

  var prevChildren = nodeChildrenAsMap(currNode); // Process the children of the future route

  futureNode.children.forEach(function (c) {
    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);
    delete prevChildren[c.value.outlet];
  }); // Process any children left from the current route (not active for the future route)

  forEach(prevChildren, function (v, k) {
    return deactivateRouteAndItsChildren(v, contexts.getContext(k), checks);
  });
  return checks;
}

function getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks) {
  if (checks === void 0) {
    checks = {
      canDeactivateChecks: [],
      canActivateChecks: []
    };
  }

  var future = futureNode.value;
  var curr = currNode ? currNode.value : null;
  var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null; // reusing the node

  if (curr && future.routeConfig === curr.routeConfig) {
    var shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);

    if (shouldRun) {
      checks.canActivateChecks.push(new CanActivate(futurePath));
    } else {
      // we need to set the data
      future.data = curr.data;
      future._resolvedData = curr._resolvedData;
    } // If we have a component, we need to go through an outlet.


    if (future.component) {
      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks); // if we have a componentless route, we recurse but keep the same outlet map.
    } else {
      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);
    }

    if (shouldRun) {
      var outlet = context.outlet;
      checks.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));
    }
  } else {
    if (curr) {
      deactivateRouteAndItsChildren(currNode, context, checks);
    }

    checks.canActivateChecks.push(new CanActivate(futurePath)); // If we have a component, we need to go through an outlet.

    if (future.component) {
      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks); // if we have a componentless route, we recurse but keep the same outlet map.
    } else {
      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);
    }
  }

  return checks;
}

function shouldRunGuardsAndResolvers(curr, future, mode) {
  switch (mode) {
    case 'always':
      return true;

    case 'paramsOrQueryParamsChange':
      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);

    case 'paramsChange':
    default:
      return !equalParamsAndUrlSegments(curr, future);
  }
}

function deactivateRouteAndItsChildren(route, context, checks) {
  var children = nodeChildrenAsMap(route);
  var r = route.value;
  forEach(children, function (node, childName) {
    if (!r.component) {
      deactivateRouteAndItsChildren(node, context, checks);
    } else if (context) {
      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);
    } else {
      deactivateRouteAndItsChildren(node, null, checks);
    }
  });

  if (!r.component) {
    checks.canDeactivateChecks.push(new CanDeactivate(null, r));
  } else if (context && context.outlet && context.outlet.isActivated) {
    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));
  } else {
    checks.canDeactivateChecks.push(new CanDeactivate(null, r));
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function checkGuards(moduleInjector, forwardEvent) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (t) {
      var targetSnapshot = t.targetSnapshot,
          currentSnapshot = t.currentSnapshot,
          _a = t.guards,
          canActivateChecks = _a.canActivateChecks,
          canDeactivateChecks = _a.canDeactivateChecks;

      if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
          guardsResult: true
        }));
      }

      return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (canDeactivate) {
        return canDeactivate ? runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) : Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(false);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (guardsResult) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
          guardsResult: guardsResult
        });
      }));
    }));
  };
}

function runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(checks).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (check) {
    return runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector);
  }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["every"])(function (result) {
    return result === true;
  }));
}

function runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(checks).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (check) {
    return andObservables(Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])([fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, moduleInjector), runCanActivate(futureSnapshot, check.route, moduleInjector)]));
  }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["every"])(function (result) {
    return result === true;
  }));
}
/**
   * This should fire off `ActivationStart` events for each route being activated at this
   * level.
   * In other words, if you're activating `a` and `b` below, `path` will contain the
   * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always
   * return
   * `true` so checks continue to run.
   */


function fireActivationStart(snapshot, forwardEvent) {
  if (snapshot !== null && forwardEvent) {
    forwardEvent(new ActivationStart(snapshot));
  }

  return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true);
}
/**
   * This should fire off `ChildActivationStart` events for each route being activated at this
   * level.
   * In other words, if you're activating `a` and `b` below, `path` will contain the
   * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always
   * return
   * `true` so checks continue to run.
   */


function fireChildActivationStart(snapshot, forwardEvent) {
  if (snapshot !== null && forwardEvent) {
    forwardEvent(new ChildActivationStart(snapshot));
  }

  return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true);
}

function runCanActivate(futureRSS, futureARS, moduleInjector) {
  var canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;
  if (!canActivate || canActivate.length === 0) return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true);
  var obs = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(canActivate).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (c) {
    var guard = getToken(c, futureARS, moduleInjector);
    var observable;

    if (guard.canActivate) {
      observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));
    } else {
      observable = wrapIntoObservable(guard(futureARS, futureRSS));
    }

    return observable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])());
  }));
  return andObservables(obs);
}

function runCanActivateChild(futureRSS, path, moduleInjector) {
  var futureARS = path[path.length - 1];
  var canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(function (p) {
    return getCanActivateChild(p);
  }).filter(function (_) {
    return _ !== null;
  });
  return andObservables(Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(canActivateChildGuards).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (d) {
    var obs = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(d.guards).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (c) {
      var guard = getToken(c, d.node, moduleInjector);
      var observable;

      if (guard.canActivateChild) {
        observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));
      } else {
        observable = wrapIntoObservable(guard(futureARS, futureRSS));
      }

      return observable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])());
    }));
    return andObservables(obs);
  })));
}

function runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {
  var canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;
  if (!canDeactivate || canDeactivate.length === 0) return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true);
  var canDeactivate$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(canDeactivate).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (c) {
    var guard = getToken(c, currARS, moduleInjector);
    var observable;

    if (guard.canDeactivate) {
      observable = wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));
    } else {
      observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));
    }

    return observable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])());
  }));
  return canDeactivate$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["every"])(function (result) {
    return result === true;
  }));
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NoMatch$1 =
/** @class */
function () {
  function NoMatch() {}

  return NoMatch;
}();

function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {
  if (paramsInheritanceStrategy === void 0) {
    paramsInheritanceStrategy = 'emptyOnly';
  }

  if (relativeLinkResolution === void 0) {
    relativeLinkResolution = 'legacy';
  }

  return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution).recognize();
}

var Recognizer =
/** @class */
function () {
  function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {
    this.rootComponentType = rootComponentType;
    this.config = config;
    this.urlTree = urlTree;
    this.url = url;
    this.paramsInheritanceStrategy = paramsInheritanceStrategy;
    this.relativeLinkResolution = relativeLinkResolution;
  }

  Recognizer.prototype.recognize = function () {
    try {
      var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;
      var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);
      var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});
      var rootNode = new TreeNode(root, children);
      var routeState = new RouterStateSnapshot(this.url, rootNode);
      this.inheritParamsAndData(routeState._root);
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(routeState);
    } catch (e) {
      return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (obs) {
        return obs.error(e);
      });
    }
  };

  Recognizer.prototype.inheritParamsAndData = function (routeNode) {
    var _this = this;

    var route = routeNode.value;
    var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);
    route.params = Object.freeze(i.params);
    route.data = Object.freeze(i.data);
    routeNode.children.forEach(function (n) {
      return _this.inheritParamsAndData(n);
    });
  };

  Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {
    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
      return this.processChildren(config, segmentGroup);
    }

    return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);
  };

  Recognizer.prototype.processChildren = function (config, segmentGroup) {
    var _this = this;

    var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) {
      return _this.processSegmentGroup(config, child, childOutlet);
    });
    checkOutletNameUniqueness(children);
    sortActivatedRouteSnapshots(children);
    return children;
  };

  Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {
    var e_1, _a;

    try {
      for (var config_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {
        var r = config_1_1.value;

        try {
          return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);
        } catch (e) {
          if (!(e instanceof NoMatch$1)) throw e;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {
      return [];
    }

    throw new NoMatch$1();
  };

  Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {
    return segments.length === 0 && !segmentGroup.children[outlet];
  };

  Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {
    if (route.redirectTo) throw new NoMatch$1();
    if ((route.outlet || PRIMARY_OUTLET) !== outlet) throw new NoMatch$1();
    var snapshot;
    var consumedSegments = [];
    var rawSlicedSegments = [];

    if (route.path === '**') {
      var params = segments.length > 0 ? last$1(segments).parameters : {};
      snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));
    } else {
      var result = match$1(rawSegment, route, segments);
      consumedSegments = result.consumedSegments;
      rawSlicedSegments = segments.slice(result.lastChild);
      snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));
    }

    var childConfig = getChildConfig(route);

    var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution),
        segmentGroup = _a.segmentGroup,
        slicedSegments = _a.slicedSegments;

    if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {
      var children_1 = this.processChildren(childConfig, segmentGroup);
      return [new TreeNode(snapshot, children_1)];
    }

    if (childConfig.length === 0 && slicedSegments.length === 0) {
      return [new TreeNode(snapshot, [])];
    }

    var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);
    return [new TreeNode(snapshot, children)];
  };

  return Recognizer;
}();

function sortActivatedRouteSnapshots(nodes) {
  nodes.sort(function (a, b) {
    if (a.value.outlet === PRIMARY_OUTLET) return -1;
    if (b.value.outlet === PRIMARY_OUTLET) return 1;
    return a.value.outlet.localeCompare(b.value.outlet);
  });
}

function getChildConfig(route) {
  if (route.children) {
    return route.children;
  }

  if (route.loadChildren) {
    return route._loadedConfig.routes;
  }

  return [];
}

function match$1(segmentGroup, route, segments) {
  if (route.path === '') {
    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {
      throw new NoMatch$1();
    }

    return {
      consumedSegments: [],
      lastChild: 0,
      parameters: {}
    };
  }

  var matcher = route.matcher || defaultUrlMatcher;
  var res = matcher(segments, segmentGroup, route);
  if (!res) throw new NoMatch$1();
  var posParams = {};
  forEach(res.posParams, function (v, k) {
    posParams[k] = v.path;
  });
  var parameters = res.consumed.length > 0 ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, posParams, res.consumed[res.consumed.length - 1].parameters) : posParams;
  return {
    consumedSegments: res.consumed,
    lastChild: res.consumed.length,
    parameters: parameters
  };
}

function checkOutletNameUniqueness(nodes) {
  var names = {};
  nodes.forEach(function (n) {
    var routeWithSameOutletName = names[n.value.outlet];

    if (routeWithSameOutletName) {
      var p = routeWithSameOutletName.url.map(function (s) {
        return s.toString();
      }).join('/');
      var c = n.value.url.map(function (s) {
        return s.toString();
      }).join('/');
      throw new Error("Two segments cannot have the same outlet name: '" + p + "' and '" + c + "'.");
    }

    names[n.value.outlet] = n.value;
  });
}

function getSourceSegmentGroup(segmentGroup) {
  var s = segmentGroup;

  while (s._sourceSegment) {
    s = s._sourceSegment;
  }

  return s;
}

function getPathIndexShift(segmentGroup) {
  var s = segmentGroup;
  var res = s._segmentIndexShift ? s._segmentIndexShift : 0;

  while (s._sourceSegment) {
    s = s._sourceSegment;
    res += s._segmentIndexShift ? s._segmentIndexShift : 0;
  }

  return res - 1;
}

function split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {
  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {
    var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));
    s_1._sourceSegment = segmentGroup;
    s_1._segmentIndexShift = consumedSegments.length;
    return {
      segmentGroup: s_1,
      slicedSegments: []
    };
  }

  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {
    var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));
    s_2._sourceSegment = segmentGroup;
    s_2._segmentIndexShift = consumedSegments.length;
    return {
      segmentGroup: s_2,
      slicedSegments: slicedSegments
    };
  }

  var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);
  s._sourceSegment = segmentGroup;
  s._segmentIndexShift = consumedSegments.length;
  return {
    segmentGroup: s,
    slicedSegments: slicedSegments
  };
}

function addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {
  var e_2, _a;

  var res = {};

  try {
    for (var routes_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {
      var r = routes_1_1.value;

      if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {
        var s = new UrlSegmentGroup([], {});
        s._sourceSegment = segmentGroup;

        if (relativeLinkResolution === 'legacy') {
          s._segmentIndexShift = segmentGroup.segments.length;
        } else {
          s._segmentIndexShift = consumedSegments.length;
        }

        res[getOutlet$1(r)] = s;
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, children, res);
}

function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {
  var e_3, _a;

  var res = {};
  res[PRIMARY_OUTLET] = primarySegment;
  primarySegment._sourceSegment = segmentGroup;
  primarySegment._segmentIndexShift = consumedSegments.length;

  try {
    for (var routes_2 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {
      var r = routes_2_1.value;

      if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {
        var s = new UrlSegmentGroup([], {});
        s._sourceSegment = segmentGroup;
        s._segmentIndexShift = consumedSegments.length;
        res[getOutlet$1(r)] = s;
      }
    }
  } catch (e_3_1) {
    e_3 = {
      error: e_3_1
    };
  } finally {
    try {
      if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);
    } finally {
      if (e_3) throw e_3.error;
    }
  }

  return res;
}

function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {
  return routes.some(function (r) {
    return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET;
  });
}

function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {
  return routes.some(function (r) {
    return emptyPathMatch(segmentGroup, slicedSegments, r);
  });
}

function emptyPathMatch(segmentGroup, slicedSegments, r) {
  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {
    return false;
  }

  return r.path === '' && r.redirectTo === undefined;
}

function getOutlet$1(route) {
  return route.outlet || PRIMARY_OUTLET;
}

function getData(route) {
  return route.data || {};
}

function getResolve(route) {
  return route.resolve || {};
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (t) {
      return recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (targetSnapshot) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
          targetSnapshot: targetSnapshot
        });
      }));
    }));
  };
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function resolveData(paramsInheritanceStrategy, moduleInjector) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (t) {
      var targetSnapshot = t.targetSnapshot,
          canActivateChecks = t.guards.canActivateChecks;

      if (!canActivateChecks.length) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(t);
      }

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(canActivateChecks).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (check) {
        return runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["reduce"])(function (_, __) {
        return _;
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_) {
        return t;
      }));
    }));
  };
}

function runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {
  var resolve = futureARS._resolve;
  return resolveNode(resolve, futureARS, futureRSS, moduleInjector).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (resolvedData) {
    futureARS._resolvedData = resolvedData;
    futureARS.data = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, futureARS.data, inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);
    return null;
  }));
}

function resolveNode(resolve, futureARS, futureRSS, moduleInjector) {
  var keys = Object.keys(resolve);

  if (keys.length === 0) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])({});
  }

  if (keys.length === 1) {
    var key_1 = keys[0];
    return getResolver(resolve[key_1], futureARS, futureRSS, moduleInjector).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (value) {
      var _a;

      return _a = {}, _a[key_1] = value, _a;
    }));
  }

  var data = {};
  var runningResolvers$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(keys).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (key) {
    return getResolver(resolve[key], futureARS, futureRSS, moduleInjector).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (value) {
      data[key] = value;
      return value;
    }));
  }));
  return runningResolvers$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["last"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function () {
    return data;
  }));
}

function getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {
  var resolver = getToken(injectionToken, futureARS, moduleInjector);
  return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) : wrapIntoObservable(resolver(futureARS, futureRSS));
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Perform a side effect through a switchMap for every emission on the source Observable,
 * but return an Observable that is identical to the source. It's essentially the same as
 * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,
 * it will wait before continuing with the original value.
 */


function switchTap(next) {
  return function (source) {
    return source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (v) {
      var nextResult = next(v);

      if (nextResult) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(nextResult).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function () {
          return v;
        }));
      }

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])([v]);
    }));
  };
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Provides a way to customize when activated routes get reused.
 *
 * @experimental
 */


var RouteReuseStrategy =
/** @class */
function () {
  function RouteReuseStrategy() {}

  return RouteReuseStrategy;
}();
/**
 * Does not detach any subtrees. Reuses routes as long as their route config is the same.
 */


var DefaultRouteReuseStrategy =
/** @class */
function () {
  function DefaultRouteReuseStrategy() {}

  DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) {
    return false;
  };

  DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) {};

  DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) {
    return false;
  };

  DefaultRouteReuseStrategy.prototype.retrieve = function (route) {
    return null;
  };

  DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {
    return future.routeConfig === curr.routeConfig;
  };

  return DefaultRouteReuseStrategy;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @docsNotRequired
 * @experimental
 */


var ROUTES = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('ROUTES');

var RouterConfigLoader =
/** @class */
function () {
  function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {
    this.loader = loader;
    this.compiler = compiler;
    this.onLoadStartListener = onLoadStartListener;
    this.onLoadEndListener = onLoadEndListener;
  }

  RouterConfigLoader.prototype.load = function (parentInjector, route) {
    var _this = this;

    if (this.onLoadStartListener) {
      this.onLoadStartListener(route);
    }

    var moduleFactory$ = this.loadModuleFactory(route.loadChildren);
    return moduleFactory$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (factory) {
      if (_this.onLoadEndListener) {
        _this.onLoadEndListener(route);
      }

      var module = factory.create(parentInjector);
      return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);
    }));
  };

  RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {
    var _this = this;

    if (typeof loadChildren === 'string') {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(this.loader.load(loadChildren));
    } else {
      return wrapIntoObservable(loadChildren()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (t) {
        if (t instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleFactory"]) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(t);
        } else {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(_this.compiler.compileModuleAsync(t));
        }
      }));
    }
  };

  return RouterConfigLoader;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Provides a way to migrate AngularJS applications to Angular.
 *
 * @experimental
 */


var UrlHandlingStrategy =
/** @class */
function () {
  function UrlHandlingStrategy() {}

  return UrlHandlingStrategy;
}();
/**
 * @experimental
 */


var DefaultUrlHandlingStrategy =
/** @class */
function () {
  function DefaultUrlHandlingStrategy() {}

  DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) {
    return true;
  };

  DefaultUrlHandlingStrategy.prototype.extract = function (url) {
    return url;
  };

  DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) {
    return newUrlPart;
  };

  return DefaultUrlHandlingStrategy;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function defaultErrorHandler(error) {
  throw error;
}

function defaultMalformedUriErrorHandler(error, urlSerializer, url) {
  return urlSerializer.parse('/');
}
/**
 * @internal
 */


function defaultRouterHook(snapshot, runExtras) {
  return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null);
}
/**
 * @description
 *
 * Provides the navigation and url manipulation capabilities.
 *
 * See `Routes` for more details and examples.
 *
 * @ngModule RouterModule
 *
 *
 */


var Router =
/** @class */
function () {
  /**
   * Creates the router service.
   */
  // TODO: vsavkin make internal after the final is out.
  function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {
    var _this = this;

    this.rootComponentType = rootComponentType;
    this.urlSerializer = urlSerializer;
    this.rootContexts = rootContexts;
    this.location = location;
    this.config = config;
    this.navigationId = 0;
    this.isNgZoneEnabled = false;
    this.events = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
    /**
     * Error handler that is invoked when a navigation errors.
     *
     * See `ErrorHandler` for more information.
     */

    this.errorHandler = defaultErrorHandler;
    /**
     * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an
     * error due to containing an invalid character. The most common case would be a `%` sign
     * that's not encoded and is not part of a percent encoded sequence.
     */

    this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;
    /**
     * Indicates if at least one navigation happened.
     */

    this.navigated = false;
    this.lastSuccessfulId = -1;
    /**
     * Used by RouterModule. This allows us to
     * pause the navigation either before preactivation or after it.
     * @internal
     */

    this.hooks = {
      beforePreactivation: defaultRouterHook,
      afterPreactivation: defaultRouterHook
    };
    /**
     * Extracts and merges URLs. Used for AngularJS to Angular migrations.
     */

    this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();
    this.routeReuseStrategy = new DefaultRouteReuseStrategy();
    /**
     * Define what the router should do if it receives a navigation request to the current URL.
     * By default, the router will ignore this navigation. However, this prevents features such
     * as a "refresh" button. Use this option to configure the behavior when navigating to the
     * current URL. Default is 'ignore'.
     */

    this.onSameUrlNavigation = 'ignore';
    /**
     * Defines how the router merges params, data and resolved data from parent to child
     * routes. Available options are:
     *
     * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less
     *   routes.
     * - `'always'`, enables unconditional inheritance of parent params.
     */

    this.paramsInheritanceStrategy = 'emptyOnly';
    /**
     * Defines when the router updates the browser URL. The default behavior is to update after
     * successful navigation. However, some applications may prefer a mode where the URL gets
     * updated at the beginning of navigation. The most common use case would be updating the
     * URL early so if navigation fails, you can show an error message with the URL that failed.
     * Available options are:
     *
     * - `'deferred'`, the default, updates the browser URL after navigation has finished.
     * - `'eager'`, updates browser URL at the beginning of navigation.
     */

    this.urlUpdateStrategy = 'deferred';
    /**
     * See {@link RouterModule} for more information.
     */

    this.relativeLinkResolution = 'legacy';

    var onLoadStart = function onLoadStart(r) {
      return _this.triggerEvent(new RouteConfigLoadStart(r));
    };

    var onLoadEnd = function onLoadEnd(r) {
      return _this.triggerEvent(new RouteConfigLoadEnd(r));
    };

    this.ngModule = injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleRef"]);
    this.console = injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵConsole"]);
    var ngZone = injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]);
    this.isNgZoneEnabled = ngZone instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"];
    this.resetConfig(config);
    this.currentUrlTree = createEmptyUrlTree();
    this.rawUrlTree = this.currentUrlTree;
    this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);
    this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);
    this.transitions = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({
      id: 0,
      currentUrlTree: this.currentUrlTree,
      currentRawUrl: this.currentUrlTree,
      extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
      urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
      rawUrl: this.currentUrlTree,
      extras: {},
      resolve: null,
      reject: null,
      promise: Promise.resolve(true),
      source: 'imperative',
      state: null,
      currentSnapshot: this.routerState.snapshot,
      targetSnapshot: null,
      currentRouterState: this.routerState,
      targetRouterState: null,
      guards: {
        canActivateChecks: [],
        canDeactivateChecks: []
      },
      guardsResult: null
    });
    this.navigations = this.setupNavigations(this.transitions);
    this.processNavigations();
  }

  Router.prototype.setupNavigations = function (transitions) {
    var _this = this;

    var eventsSubject = this.events;
    return transitions.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(function (t) {
      return t.id !== 0;
    }), // Extract URL
    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (t) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
        extractedUrl: _this.urlHandlingStrategy.extract(t.rawUrl)
      });
    }), // Using switchMap so we cancel executing navigations when a new one comes in
    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (t) {
      var completed = false;
      var errored = false;
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(t).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (t) {
        var urlTransition = !_this.navigated || t.extractedUrl.toString() !== _this.currentUrlTree.toString();

        var processCurrentUrl = (_this.onSameUrlNavigation === 'reload' ? true : urlTransition) && _this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);

        if (processCurrentUrl) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(t).pipe( // Update URL if in `eager` update mode
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (t) {
            return _this.urlUpdateStrategy === 'eager' && !t.extras.skipLocationChange && _this.setBrowserUrl(t.rawUrl, !!t.extras.replaceUrl, t.id);
          }), // Fire NavigationStart event
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (t) {
            var transition = _this.transitions.getValue();

            eventsSubject.next(new NavigationStart(t.id, _this.serializeUrl(t.extractedUrl), t.source, t.state));

            if (transition !== _this.transitions.getValue()) {
              return rxjs__WEBPACK_IMPORTED_MODULE_2__["EMPTY"];
            }

            return [t];
          }), // This delay is required to match old behavior that forced navigation to
          // always be async
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function (t) {
            return Promise.resolve(t);
          }), // ApplyRedirects
          applyRedirects$1(_this.ngModule.injector, _this.configLoader, _this.urlSerializer, _this.config), // Recognize
          recognize$1(_this.rootComponentType, _this.config, function (url) {
            return _this.serializeUrl(url);
          }, _this.paramsInheritanceStrategy), // Fire RoutesRecognized
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (t) {
            var routesRecognized = new RoutesRecognized(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);
            eventsSubject.next(routesRecognized);
          }));
        } else {
          var processPreviousUrl = urlTransition && _this.rawUrlTree && _this.urlHandlingStrategy.shouldProcessUrl(_this.rawUrlTree);
          /* When the current URL shouldn't be processed, but the previous one was, we
           * handle this "error condition" by navigating to the previously successful URL,
           * but leaving the URL intact.*/


          if (processPreviousUrl) {
            var id = t.id,
                extractedUrl = t.extractedUrl,
                source = t.source,
                state = t.state,
                extras = t.extras;
            var navStart = new NavigationStart(id, _this.serializeUrl(extractedUrl), source, state);
            eventsSubject.next(navStart);
            var targetSnapshot = createEmptyState(extractedUrl, _this.rootComponentType).snapshot;
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
              targetSnapshot: targetSnapshot,
              urlAfterRedirects: extractedUrl,
              extras: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, extras, {
                skipLocationChange: false,
                replaceUrl: false
              })
            }));
          } else {
            /* When neither the current or previous URL can be processed, do nothing other
             * than update router's internal reference to the current "settled" URL. This
             * way the next navigation will be coming from the current URL in the browser.
             */
            _this.rawUrlTree = t.rawUrl;
            t.resolve(null);
            return rxjs__WEBPACK_IMPORTED_MODULE_2__["EMPTY"];
          }
        }
      }), // Before Preactivation
      switchTap(function (t) {
        var targetSnapshot = t.targetSnapshot,
            navigationId = t.id,
            appliedUrlTree = t.extractedUrl,
            rawUrlTree = t.rawUrl,
            _a = t.extras,
            skipLocationChange = _a.skipLocationChange,
            replaceUrl = _a.replaceUrl;
        return _this.hooks.beforePreactivation(targetSnapshot, {
          navigationId: navigationId,
          appliedUrlTree: appliedUrlTree,
          rawUrlTree: rawUrlTree,
          skipLocationChange: !!skipLocationChange,
          replaceUrl: !!replaceUrl
        });
      }), // --- GUARDS ---
      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (t) {
        var guardsStart = new GuardsCheckStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);

        _this.triggerEvent(guardsStart);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (t) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
          guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, _this.rootContexts)
        });
      }), checkGuards(_this.ngModule.injector, function (evt) {
        return _this.triggerEvent(evt);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (t) {
        var guardsEnd = new GuardsCheckEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);

        _this.triggerEvent(guardsEnd);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(function (t) {
        if (!t.guardsResult) {
          _this.resetUrlToCurrentUrlTree();

          var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), '');
          eventsSubject.next(navCancel);
          t.resolve(false);
          return false;
        }

        return true;
      }), // --- RESOLVE ---
      switchTap(function (t) {
        if (t.guards.canActivateChecks.length) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(t).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (t) {
            var resolveStart = new ResolveStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);

            _this.triggerEvent(resolveStart);
          }), resolveData(_this.paramsInheritanceStrategy, _this.ngModule.injector), //
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (t) {
            var resolveEnd = new ResolveEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);

            _this.triggerEvent(resolveEnd);
          }));
        }

        return undefined;
      }), // --- AFTER PREACTIVATION ---
      switchTap(function (t) {
        var targetSnapshot = t.targetSnapshot,
            navigationId = t.id,
            appliedUrlTree = t.extractedUrl,
            rawUrlTree = t.rawUrl,
            _a = t.extras,
            skipLocationChange = _a.skipLocationChange,
            replaceUrl = _a.replaceUrl;
        return _this.hooks.afterPreactivation(targetSnapshot, {
          navigationId: navigationId,
          appliedUrlTree: appliedUrlTree,
          rawUrlTree: rawUrlTree,
          skipLocationChange: !!skipLocationChange,
          replaceUrl: !!replaceUrl
        });
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (t) {
        var targetRouterState = createRouterState(_this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, t, {
          targetRouterState: targetRouterState
        });
      }),
      /* Once here, we are about to activate syncronously. The assumption is this will
         succeed, and user code may read from the Router service. Therefore before
         activation, we need to update router properties storing the current URL and the
         RouterState, as well as updated the browser URL. All this should happen *before*
         activating. */
      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (t) {
        _this.currentUrlTree = t.urlAfterRedirects;
        _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, t.rawUrl);
        _this.routerState = t.targetRouterState;

        if (_this.urlUpdateStrategy === 'deferred' && !t.extras.skipLocationChange) {
          _this.setBrowserUrl(_this.rawUrlTree, !!t.extras.replaceUrl, t.id);
        }
      }), activateRoutes(_this.rootContexts, _this.routeReuseStrategy, function (evt) {
        return _this.triggerEvent(evt);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])({
        next: function next() {
          completed = true;
        },
        complete: function complete() {
          completed = true;
        }
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["finalize"])(function () {
        /* When the navigation stream finishes either through error or success, we set the
         * `completed` or `errored` flag. However, there are some situations where we could
         * get here without either of those being set. For instance, a redirect during
         * NavigationStart. Therefore, this is a catch-all to make sure the NavigationCancel
         * event is fired when a navigation gets cancelled but not caught by other means. */
        if (!completed && !errored) {
          // Must reset to current URL tree here to ensure history.state is set. On a fresh
          // page load, if a new navigation comes in before a successful navigation
          // completes, there will be nothing in history.state.navigationId. This can cause
          // sync problems with AngularJS sync code which looks for a value here in order
          // to determine whether or not to handle a given popstate event or to leave it
          // to the Angualr router.
          _this.resetUrlToCurrentUrlTree();

          var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), "Navigation ID " + t.id + " is not equal to the current navigation id " + _this.navigationId);
          eventsSubject.next(navCancel);
          t.resolve(false);
        }
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (e) {
        errored = true;
        /* This error type is issued during Redirect, and is handled as a cancellation
         * rather than an error. */

        if (isNavigationCancelingError(e)) {
          _this.navigated = true;

          _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);

          var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), e.message);
          eventsSubject.next(navCancel);
          t.resolve(false);
          /* All other errors should reset to the router's internal URL reference to the
           * pre-error state. */
        } else {
          _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);

          var navError = new NavigationError(t.id, _this.serializeUrl(t.extractedUrl), e);
          eventsSubject.next(navError);

          try {
            t.resolve(_this.errorHandler(e));
          } catch (ee) {
            t.reject(ee);
          }
        }

        return rxjs__WEBPACK_IMPORTED_MODULE_2__["EMPTY"];
      })); // TODO(jasonaden): remove cast once g3 is on updated TypeScript
    }));
  };
  /**
   * @internal
   * TODO: this should be removed once the constructor of the router made internal
   */


  Router.prototype.resetRootComponentType = function (rootComponentType) {
    this.rootComponentType = rootComponentType; // TODO: vsavkin router 4.0 should make the root component set to null
    // this will simplify the lifecycle of the router.

    this.routerState.root.component = this.rootComponentType;
  };

  Router.prototype.getTransition = function () {
    return this.transitions.value;
  };

  Router.prototype.setTransition = function (t) {
    this.transitions.next(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.getTransition(), t));
  };
  /**
   * Sets up the location change listener and performs the initial navigation.
   */


  Router.prototype.initialNavigation = function () {
    this.setUpLocationChangeListener();

    if (this.navigationId === 0) {
      this.navigateByUrl(this.location.path(true), {
        replaceUrl: true
      });
    }
  };
  /**
   * Sets up the location change listener.
   */


  Router.prototype.setUpLocationChangeListener = function () {
    var _this = this; // Don't need to use Zone.wrap any more, because zone.js
    // already patch onPopState, so location change callback will
    // run into ngZone


    if (!this.locationSubscription) {
      this.locationSubscription = this.location.subscribe(function (change) {
        var rawUrlTree = _this.parseUrl(change['url']);

        var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';
        var state = change.state && change.state.navigationId ? {
          navigationId: change.state.navigationId
        } : null;
        setTimeout(function () {
          _this.scheduleNavigation(rawUrlTree, source, state, {
            replaceUrl: true
          });
        }, 0);
      });
    }
  };

  Object.defineProperty(Router.prototype, "url", {
    /** The current url */
    get: function get() {
      return this.serializeUrl(this.currentUrlTree);
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  Router.prototype.triggerEvent = function (event) {
    this.events.next(event);
  };
  /**
   * Resets the configuration used for navigation and generating links.
   *
   * @usageNotes
   *
   * ### Example
   *
   * ```
   * router.resetConfig([
   *  { path: 'team/:id', component: TeamCmp, children: [
   *    { path: 'simple', component: SimpleCmp },
   *    { path: 'user/:name', component: UserCmp }
   *  ]}
   * ]);
   * ```
   */


  Router.prototype.resetConfig = function (config) {
    validateConfig(config);
    this.config = config.map(standardizeConfig);
    this.navigated = false;
    this.lastSuccessfulId = -1;
  };
  /** @docsNotRequired */


  Router.prototype.ngOnDestroy = function () {
    this.dispose();
  };
  /** Disposes of the router */


  Router.prototype.dispose = function () {
    if (this.locationSubscription) {
      this.locationSubscription.unsubscribe();
      this.locationSubscription = null;
    }
  };
  /**
   * Applies an array of commands to the current url tree and creates a new url tree.
   *
   * When given an activate route, applies the given commands starting from the route.
   * When not given a route, applies the given command starting from the root.
   *
   * @usageNotes
   *
   * ### Example
   *
   * ```
   * // create /team/33/user/11
   * router.createUrlTree(['/team', 33, 'user', 11]);
   *
   * // create /team/33;expand=true/user/11
   * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
   *
   * // you can collapse static segments like this (this works only with the first passed-in value):
   * router.createUrlTree(['/team/33/user', userId]);
   *
   * // If the first segment can contain slashes, and you do not want the router to split it, you
   * // can do the following:
   *
   * router.createUrlTree([{segmentPath: '/one/two'}]);
   *
   * // create /team/33/(user/11//right:chat)
   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
   *
   * // remove the right secondary node
   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
   *
   * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
   *
   * // navigate to /team/33/user/11/details
   * router.createUrlTree(['details'], {relativeTo: route});
   *
   * // navigate to /team/33/user/22
   * router.createUrlTree(['../22'], {relativeTo: route});
   *
   * // navigate to /team/44/user/22
   * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
   * ```
   */


  Router.prototype.createUrlTree = function (commands, navigationExtras) {
    if (navigationExtras === void 0) {
      navigationExtras = {};
    }

    var relativeTo = navigationExtras.relativeTo,
        queryParams = navigationExtras.queryParams,
        fragment = navigationExtras.fragment,
        preserveQueryParams = navigationExtras.preserveQueryParams,
        queryParamsHandling = navigationExtras.queryParamsHandling,
        preserveFragment = navigationExtras.preserveFragment;

    if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["isDevMode"])() && preserveQueryParams && console && console.warn) {
      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');
    }

    var a = relativeTo || this.routerState.root;
    var f = preserveFragment ? this.currentUrlTree.fragment : fragment;
    var q = null;

    if (queryParamsHandling) {
      switch (queryParamsHandling) {
        case 'merge':
          q = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.currentUrlTree.queryParams, queryParams);
          break;

        case 'preserve':
          q = this.currentUrlTree.queryParams;
          break;

        default:
          q = queryParams || null;
      }
    } else {
      q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;
    }

    if (q !== null) {
      q = this.removeEmptyProps(q);
    }

    return createUrlTree(a, this.currentUrlTree, commands, q, f);
  };
  /**
   * Navigate based on the provided url. This navigation is always absolute.
   *
   * Returns a promise that:
   * - resolves to 'true' when navigation succeeds,
   * - resolves to 'false' when navigation fails,
   * - is rejected when an error happens.
   *
   * @usageNotes
   *
   * ### Example
   *
   * ```
   * router.navigateByUrl("/team/33/user/11");
   *
   * // Navigate without updating the URL
   * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
   * ```
   *
   * Since `navigateByUrl()` takes an absolute URL as the first parameter,
   * it will not apply any delta to the current URL and ignores any properties
   * in the second parameter (the `NavigationExtras`) that would change the
   * provided URL.
   */


  Router.prototype.navigateByUrl = function (url, extras) {
    if (extras === void 0) {
      extras = {
        skipLocationChange: false
      };
    }

    if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["isDevMode"])() && this.isNgZoneEnabled && !_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"].isInAngularZone()) {
      this.console.warn("Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?");
    }

    var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);
    var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);
    return this.scheduleNavigation(mergedTree, 'imperative', null, extras);
  };
  /**
   * Navigate based on the provided array of commands and a starting point.
   * If no starting route is provided, the navigation is absolute.
   *
   * Returns a promise that:
   * - resolves to 'true' when navigation succeeds,
   * - resolves to 'false' when navigation fails,
   * - is rejected when an error happens.
   *
   * @usageNotes
   *
   * ### Example
   *
   * ```
   * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
   *
   * // Navigate without updating the URL
   * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
   * ```
   *
   * The first parameter of `navigate()` is a delta to be applied to the current URL
   * or the one provided in the `relativeTo` property of the second parameter (the
   * `NavigationExtras`).
   */


  Router.prototype.navigate = function (commands, extras) {
    if (extras === void 0) {
      extras = {
        skipLocationChange: false
      };
    }

    validateCommands(commands);
    return this.navigateByUrl(this.createUrlTree(commands, extras), extras);
  };
  /** Serializes a `UrlTree` into a string */


  Router.prototype.serializeUrl = function (url) {
    return this.urlSerializer.serialize(url);
  };
  /** Parses a string into a `UrlTree` */


  Router.prototype.parseUrl = function (url) {
    var urlTree;

    try {
      urlTree = this.urlSerializer.parse(url);
    } catch (e) {
      urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);
    }

    return urlTree;
  };
  /** Returns whether the url is activated */


  Router.prototype.isActive = function (url, exact) {
    if (url instanceof UrlTree) {
      return containsTree(this.currentUrlTree, url, exact);
    }

    var urlTree = this.parseUrl(url);
    return containsTree(this.currentUrlTree, urlTree, exact);
  };

  Router.prototype.removeEmptyProps = function (params) {
    return Object.keys(params).reduce(function (result, key) {
      var value = params[key];

      if (value !== null && value !== undefined) {
        result[key] = value;
      }

      return result;
    }, {});
  };

  Router.prototype.processNavigations = function () {
    var _this = this;

    this.navigations.subscribe(function (t) {
      _this.navigated = true;
      _this.lastSuccessfulId = t.id;

      _this.events.next(new NavigationEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(_this.currentUrlTree)));

      t.resolve(true);
    }, function (e) {
      _this.console.warn("Unhandled Navigation Error: ");
    });
  };

  Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {
    var lastNavigation = this.getTransition(); // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),
    // and that navigation results in 'replaceState' that leads to the same URL,
    // we should skip those.

    if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' && lastNavigation.rawUrl.toString() === rawUrl.toString()) {
      return Promise.resolve(true); // return value is not used
    } // Because of a bug in IE and Edge, the location class fires two events (popstate and
    // hashchange) every single time. The second one should be ignored. Otherwise, the URL will
    // flicker. Handles the case when a popstate was emitted first.


    if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' && lastNavigation.rawUrl.toString() === rawUrl.toString()) {
      return Promise.resolve(true); // return value is not used
    } // Because of a bug in IE and Edge, the location class fires two events (popstate and
    // hashchange) every single time. The second one should be ignored. Otherwise, the URL will
    // flicker. Handles the case when a hashchange was emitted first.


    if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' && lastNavigation.rawUrl.toString() === rawUrl.toString()) {
      return Promise.resolve(true); // return value is not used
    }

    var resolve = null;
    var reject = null;
    var promise = new Promise(function (res, rej) {
      resolve = res;
      reject = rej;
    });
    var id = ++this.navigationId;
    this.setTransition({
      id: id,
      source: source,
      state: state,
      currentUrlTree: this.currentUrlTree,
      currentRawUrl: this.rawUrlTree,
      rawUrl: rawUrl,
      extras: extras,
      resolve: resolve,
      reject: reject,
      promise: promise,
      currentSnapshot: this.routerState.snapshot,
      currentRouterState: this.routerState
    }); // Make sure that the error is propagated even though `processNavigations` catch
    // handler does not rethrow

    return promise.catch(function (e) {
      return Promise.reject(e);
    });
  };

  Router.prototype.setBrowserUrl = function (url, replaceUrl, id) {
    var path = this.urlSerializer.serialize(url);

    if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {
      this.location.replaceState(path, '', {
        navigationId: id
      });
    } else {
      this.location.go(path, '', {
        navigationId: id
      });
    }
  };

  Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {
    this.routerState = storedState;
    this.currentUrlTree = storedUrl;
    this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);
    this.resetUrlToCurrentUrlTree();
  };

  Router.prototype.resetUrlToCurrentUrlTree = function () {
    this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', {
      navigationId: this.lastSuccessfulId
    });
  };

  return Router;
}();

function validateCommands(commands) {
  for (var i = 0; i < commands.length; i++) {
    var cmd = commands[i];

    if (cmd == null) {
      throw new Error("The requested path contains " + cmd + " segment at index " + i);
    }
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Lets you link to specific routes in your app.
 *
 * Consider the following route configuration:
 * `[{ path: 'user/:name', component: UserCmp }]`.
 * When linking to this `user/:name` route, you use the `RouterLink` directive.
 *
 * If the link is static, you can use the directive as follows:
 * `<a routerLink="/user/bob">link to user component</a>`
 *
 * If you use dynamic values to generate the link, you can pass an array of path
 * segments, followed by the params for each segment.
 *
 * For instance `['/team', teamId, 'user', userName, {details: true}]`
 * means that we want to generate a link to `/team/11/user/bob;details=true`.
 *
 * Multiple static segments can be merged into one
 * (e.g., `['/team/11/user', userName, {details: true}]`).
 *
 * The first segment name can be prepended with `/`, `./`, or `../`:
 * * If the first segment begins with `/`, the router will look up the route from the root of the
 *   app.
 * * If the first segment begins with `./`, or doesn't begin with a slash, the router will
 *   instead look in the children of the current activated route.
 * * And if the first segment begins with `../`, the router will go up one level.
 *
 * You can set query params and fragment as follows:
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" fragment="education">
 *   link to user component
 * </a>
 * ```
 * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.
 *
 * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the
 * directive to preserve the current query params and fragment:
 *
 * ```
 * <a [routerLink]="['/user/bob']" preserveQueryParams preserveFragment>
 *   link to user component
 * </a>
 * ```
 *
 * You can tell the directive to how to handle queryParams, available options are:
 *  - `'merge'`: merge the queryParams into the current queryParams
 *  - `'preserve'`: preserve the current queryParams
 *  - default/`''`: use the queryParams only
 *
 * Same options for {@link NavigationExtras#queryParamsHandling
 * NavigationExtras#queryParamsHandling}.
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" queryParamsHandling="merge">
 *   link to user component
 * </a>
 * ```
 *
 * The router link directive always treats the provided input as a delta to the current url.
 *
 * For instance, if the current url is `/user/(box//aux:team)`.
 *
 * Then the following link `<a [routerLink]="['/user/jim']">Jim</a>` will generate the link
 * `/user/(jim//aux:team)`.
 *
 * See {@link Router#createUrlTree createUrlTree} for more information.
 *
 * @ngModule RouterModule
 *
 *
 */


var RouterLink =
/** @class */
function () {
  function RouterLink(router, route, tabIndex, renderer, el) {
    this.router = router;
    this.route = route;
    this.commands = [];

    if (tabIndex == null) {
      renderer.setAttribute(el.nativeElement, 'tabindex', '0');
    }
  }

  Object.defineProperty(RouterLink.prototype, "routerLink", {
    set: function set(commands) {
      if (commands != null) {
        this.commands = Array.isArray(commands) ? commands : [commands];
      } else {
        this.commands = [];
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterLink.prototype, "preserveQueryParams", {
    /**
     * @deprecated 4.0.0 use `queryParamsHandling` instead.
     */
    set: function set(value) {
      if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["isDevMode"])() && console && console.warn) {
        console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');
      }

      this.preserve = value;
    },
    enumerable: true,
    configurable: true
  });

  RouterLink.prototype.onClick = function () {
    var extras = {
      skipLocationChange: attrBoolValue(this.skipLocationChange),
      replaceUrl: attrBoolValue(this.replaceUrl)
    };
    this.router.navigateByUrl(this.urlTree, extras);
    return true;
  };

  Object.defineProperty(RouterLink.prototype, "urlTree", {
    get: function get() {
      return this.router.createUrlTree(this.commands, {
        relativeTo: this.route,
        queryParams: this.queryParams,
        fragment: this.fragment,
        preserveQueryParams: attrBoolValue(this.preserve),
        queryParamsHandling: this.queryParamsHandling,
        preserveFragment: attrBoolValue(this.preserveFragment)
      });
    },
    enumerable: true,
    configurable: true
  });

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], RouterLink.prototype, "queryParams", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RouterLink.prototype, "fragment", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RouterLink.prototype, "queryParamsHandling", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], RouterLink.prototype, "preserveFragment", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], RouterLink.prototype, "skipLocationChange", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], RouterLink.prototype, "replaceUrl", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], RouterLink.prototype, "routerLink", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Boolean])], RouterLink.prototype, "preserveQueryParams", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", []), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", Boolean)], RouterLink.prototype, "onClick", null);

  RouterLink = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: ':not(a)[routerLink]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Attribute"])('tabindex')), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Router, ActivatedRoute, String, _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])], RouterLink);
  return RouterLink;
}();
/**
 * @description
 *
 * Lets you link to specific routes in your app.
 *
 * See `RouterLink` for more information.
 *
 * @ngModule RouterModule
 *
 *
 */


var RouterLinkWithHref =
/** @class */
function () {
  function RouterLinkWithHref(router, route, locationStrategy) {
    var _this = this;

    this.router = router;
    this.route = route;
    this.locationStrategy = locationStrategy;
    this.commands = [];
    this.subscription = router.events.subscribe(function (s) {
      if (s instanceof NavigationEnd) {
        _this.updateTargetUrlAndHref();
      }
    });
  }

  Object.defineProperty(RouterLinkWithHref.prototype, "routerLink", {
    set: function set(commands) {
      if (commands != null) {
        this.commands = Array.isArray(commands) ? commands : [commands];
      } else {
        this.commands = [];
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterLinkWithHref.prototype, "preserveQueryParams", {
    set: function set(value) {
      if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["isDevMode"])() && console && console.warn) {
        console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');
      }

      this.preserve = value;
    },
    enumerable: true,
    configurable: true
  });

  RouterLinkWithHref.prototype.ngOnChanges = function (changes) {
    this.updateTargetUrlAndHref();
  };

  RouterLinkWithHref.prototype.ngOnDestroy = function () {
    this.subscription.unsubscribe();
  };

  RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {
    if (button !== 0 || ctrlKey || metaKey || shiftKey) {
      return true;
    }

    if (typeof this.target === 'string' && this.target != '_self') {
      return true;
    }

    var extras = {
      skipLocationChange: attrBoolValue(this.skipLocationChange),
      replaceUrl: attrBoolValue(this.replaceUrl)
    };
    this.router.navigateByUrl(this.urlTree, extras);
    return false;
  };

  RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {
    this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));
  };

  Object.defineProperty(RouterLinkWithHref.prototype, "urlTree", {
    get: function get() {
      return this.router.createUrlTree(this.commands, {
        relativeTo: this.route,
        queryParams: this.queryParams,
        fragment: this.fragment,
        preserveQueryParams: attrBoolValue(this.preserve),
        queryParamsHandling: this.queryParamsHandling,
        preserveFragment: attrBoolValue(this.preserveFragment)
      });
    },
    enumerable: true,
    configurable: true
  });

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostBinding"])('attr.target'), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RouterLinkWithHref.prototype, "target", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], RouterLinkWithHref.prototype, "queryParams", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RouterLinkWithHref.prototype, "fragment", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RouterLinkWithHref.prototype, "queryParamsHandling", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], RouterLinkWithHref.prototype, "preserveFragment", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], RouterLinkWithHref.prototype, "skipLocationChange", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], RouterLinkWithHref.prototype, "replaceUrl", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostBinding"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], RouterLinkWithHref.prototype, "href", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], RouterLinkWithHref.prototype, "routerLink", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Boolean])], RouterLinkWithHref.prototype, "preserveQueryParams", null);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Number, Boolean, Boolean, Boolean]), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", Boolean)], RouterLinkWithHref.prototype, "onClick", null);

  RouterLinkWithHref = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'a[routerLink]'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Router, ActivatedRoute, _angular_common__WEBPACK_IMPORTED_MODULE_4__["LocationStrategy"]])], RouterLinkWithHref);
  return RouterLinkWithHref;
}();

function attrBoolValue(s) {
  return s === '' || !!s;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 * @description
 *
 * Lets you add a CSS class to an element when the link's route becomes active.
 *
 * This directive lets you add a CSS class to an element when the link's route
 * becomes active.
 *
 * Consider the following example:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link">Bob</a>
 * ```
 *
 * When the url is either '/user' or '/user/bob', the active-link class will
 * be added to the `a` tag. If the url changes, the class will be removed.
 *
 * You can set more than one class, as follows:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="class1 class2">Bob</a>
 * <a routerLink="/user/bob" [routerLinkActive]="['class1', 'class2']">Bob</a>
 * ```
 *
 * You can configure RouterLinkActive by passing `exact: true`. This will add the classes
 * only when the url matches the link exactly.
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link" [routerLinkActiveOptions]="{exact:
 * true}">Bob</a>
 * ```
 *
 * You can assign the RouterLinkActive instance to a template variable and directly check
 * the `isActive` status.
 * ```
 * <a routerLink="/user/bob" routerLinkActive #rla="routerLinkActive">
 *   Bob {{ rla.isActive ? '(already open)' : ''}}
 * </a>
 * ```
 *
 * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.
 *
 * ```
 * <div routerLinkActive="active-link" [routerLinkActiveOptions]="{exact: true}">
 *   <a routerLink="/user/jim">Jim</a>
 *   <a routerLink="/user/bob">Bob</a>
 * </div>
 * ```
 *
 * This will set the active-link class on the div tag if the url is either '/user/jim' or
 * '/user/bob'.
 *
 * @ngModule RouterModule
 *
 *
 */


var RouterLinkActive =
/** @class */
function () {
  function RouterLinkActive(router, element, renderer, cdr) {
    var _this = this;

    this.router = router;
    this.element = element;
    this.renderer = renderer;
    this.cdr = cdr;
    this.classes = [];
    this.isActive = false;
    this.routerLinkActiveOptions = {
      exact: false
    };
    this.subscription = router.events.subscribe(function (s) {
      if (s instanceof NavigationEnd) {
        _this.update();
      }
    });
  }

  RouterLinkActive.prototype.ngAfterContentInit = function () {
    var _this = this;

    this.links.changes.subscribe(function (_) {
      return _this.update();
    });
    this.linksWithHrefs.changes.subscribe(function (_) {
      return _this.update();
    });
    this.update();
  };

  Object.defineProperty(RouterLinkActive.prototype, "routerLinkActive", {
    set: function set(data) {
      var classes = Array.isArray(data) ? data : data.split(' ');
      this.classes = classes.filter(function (c) {
        return !!c;
      });
    },
    enumerable: true,
    configurable: true
  });

  RouterLinkActive.prototype.ngOnChanges = function (changes) {
    this.update();
  };

  RouterLinkActive.prototype.ngOnDestroy = function () {
    this.subscription.unsubscribe();
  };

  RouterLinkActive.prototype.update = function () {
    var _this = this;

    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;
    Promise.resolve().then(function () {
      var hasActiveLinks = _this.hasActiveLinks();

      if (_this.isActive !== hasActiveLinks) {
        _this.isActive = hasActiveLinks;

        _this.classes.forEach(function (c) {
          if (hasActiveLinks) {
            _this.renderer.addClass(_this.element.nativeElement, c);
          } else {
            _this.renderer.removeClass(_this.element.nativeElement, c);
          }
        });
      }
    });
  };

  RouterLinkActive.prototype.isLinkActive = function (router) {
    var _this = this;

    return function (link) {
      return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);
    };
  };

  RouterLinkActive.prototype.hasActiveLinks = function () {
    return this.links.some(this.isLinkActive(this.router)) || this.linksWithHrefs.some(this.isLinkActive(this.router));
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ContentChildren"])(RouterLink, {
    descendants: true
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["QueryList"])], RouterLinkActive.prototype, "links", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ContentChildren"])(RouterLinkWithHref, {
    descendants: true
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["QueryList"])], RouterLinkActive.prototype, "linksWithHrefs", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], RouterLinkActive.prototype, "routerLinkActiveOptions", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object])], RouterLinkActive.prototype, "routerLinkActive", null);

  RouterLinkActive = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: '[routerLinkActive]',
    exportAs: 'routerLinkActive'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Router, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]])], RouterLinkActive);
  return RouterLinkActive;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Store contextual information about a `RouterOutlet`
 *
 *
 */


var OutletContext =
/** @class */
function () {
  function OutletContext() {
    this.outlet = null;
    this.route = null;
    this.resolver = null;
    this.children = new ChildrenOutletContexts();
    this.attachRef = null;
  }

  return OutletContext;
}();
/**
 * Store contextual information about the children (= nested) `RouterOutlet`
 *
 *
 */


var ChildrenOutletContexts =
/** @class */
function () {
  function ChildrenOutletContexts() {
    // contexts for child outlets, by name.
    this.contexts = new Map();
  }
  /** Called when a `RouterOutlet` directive is instantiated */


  ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {
    var context = this.getOrCreateContext(childName);
    context.outlet = outlet;
    this.contexts.set(childName, context);
  };
  /**
   * Called when a `RouterOutlet` directive is destroyed.
   * We need to keep the context as the outlet could be destroyed inside a NgIf and might be
   * re-created later.
   */


  ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {
    var context = this.getContext(childName);

    if (context) {
      context.outlet = null;
    }
  };
  /**
   * Called when the corresponding route is deactivated during navigation.
   * Because the component get destroyed, all children outlet are destroyed.
   */


  ChildrenOutletContexts.prototype.onOutletDeactivated = function () {
    var contexts = this.contexts;
    this.contexts = new Map();
    return contexts;
  };

  ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) {
    this.contexts = contexts;
  };

  ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {
    var context = this.getContext(childName);

    if (!context) {
      context = new OutletContext();
      this.contexts.set(childName, context);
    }

    return context;
  };

  ChildrenOutletContexts.prototype.getContext = function (childName) {
    return this.contexts.get(childName) || null;
  };

  return ChildrenOutletContexts;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Acts as a placeholder that Angular dynamically fills based on the current router state.
 *
 * ```
 * <router-outlet></router-outlet>
 * <router-outlet name='left'></router-outlet>
 * <router-outlet name='right'></router-outlet>
 * ```
 *
 * A router outlet will emit an activate event any time a new component is being instantiated,
 * and a deactivate event when it is being destroyed.
 *
 * ```
 * <router-outlet
 *   (activate)='onActivate($event)'
 *   (deactivate)='onDeactivate($event)'></router-outlet>
 * ```
 * @ngModule RouterModule
 *
 *
 */


var RouterOutlet =
/** @class */
function () {
  function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {
    this.parentContexts = parentContexts;
    this.location = location;
    this.resolver = resolver;
    this.changeDetector = changeDetector;
    this.activated = null;
    this._activatedRoute = null;
    this.activateEvents = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    this.deactivateEvents = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    this.name = name || PRIMARY_OUTLET;
    parentContexts.onChildOutletCreated(this.name, this);
  }

  RouterOutlet.prototype.ngOnDestroy = function () {
    this.parentContexts.onChildOutletDestroyed(this.name);
  };

  RouterOutlet.prototype.ngOnInit = function () {
    if (!this.activated) {
      // If the outlet was not instantiated at the time the route got activated we need to populate
      // the outlet when it is initialized (ie inside a NgIf)
      var context = this.parentContexts.getContext(this.name);

      if (context && context.route) {
        if (context.attachRef) {
          // `attachRef` is populated when there is an existing component to mount
          this.attach(context.attachRef, context.route);
        } else {
          // otherwise the component defined in the configuration is created
          this.activateWith(context.route, context.resolver || null);
        }
      }
    }
  };

  Object.defineProperty(RouterOutlet.prototype, "isActivated", {
    get: function get() {
      return !!this.activated;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterOutlet.prototype, "component", {
    get: function get() {
      if (!this.activated) throw new Error('Outlet is not activated');
      return this.activated.instance;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterOutlet.prototype, "activatedRoute", {
    get: function get() {
      if (!this.activated) throw new Error('Outlet is not activated');
      return this._activatedRoute;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterOutlet.prototype, "activatedRouteData", {
    get: function get() {
      if (this._activatedRoute) {
        return this._activatedRoute.snapshot.data;
      }

      return {};
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Called when the `RouteReuseStrategy` instructs to detach the subtree
   */

  RouterOutlet.prototype.detach = function () {
    if (!this.activated) throw new Error('Outlet is not activated');
    this.location.detach();
    var cmp = this.activated;
    this.activated = null;
    this._activatedRoute = null;
    return cmp;
  };
  /**
   * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree
   */


  RouterOutlet.prototype.attach = function (ref, activatedRoute) {
    this.activated = ref;
    this._activatedRoute = activatedRoute;
    this.location.insert(ref.hostView);
  };

  RouterOutlet.prototype.deactivate = function () {
    if (this.activated) {
      var c = this.component;
      this.activated.destroy();
      this.activated = null;
      this._activatedRoute = null;
      this.deactivateEvents.emit(c);
    }
  };

  RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {
    if (this.isActivated) {
      throw new Error('Cannot activate an already activated outlet');
    }

    this._activatedRoute = activatedRoute;
    var snapshot = activatedRoute._futureSnapshot;
    var component = snapshot.routeConfig.component;
    resolver = resolver || this.resolver;
    var factory = resolver.resolveComponentFactory(component);
    var childContexts = this.parentContexts.getOrCreateContext(this.name).children;
    var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);
    this.activated = this.location.createComponent(factory, this.location.length, injector); // Calling `markForCheck` to make sure we will run the change detection when the
    // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.

    this.changeDetector.markForCheck();
    this.activateEvents.emit(this.activated.instance);
  };

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('activate'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], RouterOutlet.prototype, "activateEvents", void 0);

  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('deactivate'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], RouterOutlet.prototype, "deactivateEvents", void 0);

  RouterOutlet = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
    selector: 'router-outlet',
    exportAs: 'outlet'
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Attribute"])('name')), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ChildrenOutletContexts, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"], String, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]])], RouterOutlet);
  return RouterOutlet;
}();

var OutletInjector =
/** @class */
function () {
  function OutletInjector(route, childContexts, parent) {
    this.route = route;
    this.childContexts = childContexts;
    this.parent = parent;
  }

  OutletInjector.prototype.get = function (token, notFoundValue) {
    if (token === ActivatedRoute) {
      return this.route;
    }

    if (token === ChildrenOutletContexts) {
      return this.childContexts;
    }

    return this.parent.get(token, notFoundValue);
  };

  return OutletInjector;
}();
/**
*@license
*Copyright Google Inc. All Rights Reserved.
*
*Use of this source code is governed by an MIT-style license that can be
*found in the LICENSE file at https://angular.io/license
*/

/**
 * @description
 *
 * Provides a preloading strategy.
 *
 * @experimental
 */


var PreloadingStrategy =
/** @class */
function () {
  function PreloadingStrategy() {}

  return PreloadingStrategy;
}();
/**
 * @description
 *
 * Provides a preloading strategy that preloads all modules as quickly as possible.
 *
 * ```
 * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})
 * ```
 *
 * @experimental
 */


var PreloadAllModules =
/** @class */
function () {
  function PreloadAllModules() {}

  PreloadAllModules.prototype.preload = function (route, fn) {
    return fn().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function () {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null);
    }));
  };

  return PreloadAllModules;
}();
/**
 * @description
 *
 * Provides a preloading strategy that does not preload any modules.
 *
 * This strategy is enabled by default.
 *
 * @experimental
 */


var NoPreloading =
/** @class */
function () {
  function NoPreloading() {}

  NoPreloading.prototype.preload = function (route, fn) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null);
  };

  return NoPreloading;
}();
/**
 * The preloader optimistically loads all router configurations to
 * make navigations into lazily-loaded sections of the application faster.
 *
 * The preloader runs in the background. When the router bootstraps, the preloader
 * starts listening to all navigation events. After every such event, the preloader
 * will check if any configurations can be loaded lazily.
 *
 * If a route is protected by `canLoad` guards, the preloaded will not load it.
 *
 *
 */


var RouterPreloader =
/** @class */
function () {
  function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {
    this.router = router;
    this.injector = injector;
    this.preloadingStrategy = preloadingStrategy;

    var onStartLoad = function onStartLoad(r) {
      return router.triggerEvent(new RouteConfigLoadStart(r));
    };

    var onEndLoad = function onEndLoad(r) {
      return router.triggerEvent(new RouteConfigLoadEnd(r));
    };

    this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);
  }

  RouterPreloader.prototype.setUpPreloading = function () {
    var _this = this;

    this.subscription = this.router.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(function (e) {
      return e instanceof NavigationEnd;
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function () {
      return _this.preload();
    })).subscribe(function () {});
  };

  RouterPreloader.prototype.preload = function () {
    var ngModule = this.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleRef"]);
    return this.processRoutes(ngModule, this.router.config);
  }; // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If
  // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This
  // should be refactored.


  RouterPreloader.prototype.ngOnDestroy = function () {
    this.subscription.unsubscribe();
  };

  RouterPreloader.prototype.processRoutes = function (ngModule, routes) {
    var e_1, _a;

    var res = [];

    try {
      for (var routes_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {
        var route = routes_1_1.value; // we already have the config loaded, just recurse

        if (route.loadChildren && !route.canLoad && route._loadedConfig) {
          var childConfig = route._loadedConfig;
          res.push(this.processRoutes(childConfig.module, childConfig.routes)); // no config loaded, fetch the config
        } else if (route.loadChildren && !route.canLoad) {
          res.push(this.preloadConfig(ngModule, route)); // recurse into children
        } else if (route.children) {
          res.push(this.processRoutes(ngModule, route.children));
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(res).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeAll"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_) {
      return void 0;
    }));
  };

  RouterPreloader.prototype.preloadConfig = function (ngModule, route) {
    var _this = this;

    return this.preloadingStrategy.preload(route, function () {
      var loaded$ = _this.loader.load(ngModule.injector, route);

      return loaded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (config) {
        route._loadedConfig = config;
        return _this.processRoutes(config.module, config.routes);
      }));
    });
  };

  RouterPreloader = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Router, _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleFactoryLoader"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], PreloadingStrategy])], RouterPreloader);
  return RouterPreloader;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var RouterScroller =
/** @class */
function () {
  function RouterScroller(router,
  /** @docsNotRequired */
  viewportScroller, options) {
    if (options === void 0) {
      options = {};
    }

    this.router = router;
    this.viewportScroller = viewportScroller;
    this.options = options;
    this.lastId = 0;
    this.lastSource = 'imperative';
    this.restoredId = 0;
    this.store = {}; // Default both options to 'disabled'

    options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';
    options.anchorScrolling = options.anchorScrolling || 'disabled';
  }

  RouterScroller.prototype.init = function () {
    // we want to disable the automatic scrolling because having two places
    // responsible for scrolling results race conditions, especially given
    // that browser don't implement this behavior consistently
    if (this.options.scrollPositionRestoration !== 'disabled') {
      this.viewportScroller.setHistoryScrollRestoration('manual');
    }

    this.routerEventsSubscription = this.createScrollEvents();
    this.scrollEventsSubscription = this.consumeScrollEvents();
  };

  RouterScroller.prototype.createScrollEvents = function () {
    var _this = this;

    return this.router.events.subscribe(function (e) {
      if (e instanceof NavigationStart) {
        // store the scroll position of the current stable navigations.
        _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();
        _this.lastSource = e.navigationTrigger;
        _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;
      } else if (e instanceof NavigationEnd) {
        _this.lastId = e.id;

        _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);
      }
    });
  };

  RouterScroller.prototype.consumeScrollEvents = function () {
    var _this = this;

    return this.router.events.subscribe(function (e) {
      if (!(e instanceof Scroll)) return; // a popstate event. The pop state event will always ignore anchor scrolling.

      if (e.position) {
        if (_this.options.scrollPositionRestoration === 'top') {
          _this.viewportScroller.scrollToPosition([0, 0]);
        } else if (_this.options.scrollPositionRestoration === 'enabled') {
          _this.viewportScroller.scrollToPosition(e.position);
        } // imperative navigation "forward"

      } else {
        if (e.anchor && _this.options.anchorScrolling === 'enabled') {
          _this.viewportScroller.scrollToAnchor(e.anchor);
        } else if (_this.options.scrollPositionRestoration !== 'disabled') {
          _this.viewportScroller.scrollToPosition([0, 0]);
        }
      }
    });
  };

  RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {
    this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));
  };

  RouterScroller.prototype.ngOnDestroy = function () {
    if (this.routerEventsSubscription) {
      this.routerEventsSubscription.unsubscribe();
    }

    if (this.scrollEventsSubscription) {
      this.scrollEventsSubscription.unsubscribe();
    }
  };

  return RouterScroller;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Contains a list of directives
 *
 *
 */


var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];
/**
 * @description
 *
 * Is used in DI to configure the router.
 *
 *
 */

var ROUTER_CONFIGURATION = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('ROUTER_CONFIGURATION');
/**
 * @docsNotRequired
 */

var ROUTER_FORROOT_GUARD = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('ROUTER_FORROOT_GUARD');
var ROUTER_PROVIDERS = [_angular_common__WEBPACK_IMPORTED_MODULE_4__["Location"], {
  provide: UrlSerializer,
  useClass: DefaultUrlSerializer
}, {
  provide: Router,
  useFactory: setupRouter,
  deps: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ApplicationRef"], UrlSerializer, ChildrenOutletContexts, _angular_common__WEBPACK_IMPORTED_MODULE_4__["Location"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleFactoryLoader"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"], ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]()], [RouteReuseStrategy, new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]()]]
}, ChildrenOutletContexts, {
  provide: ActivatedRoute,
  useFactory: rootRoute,
  deps: [Router]
}, {
  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModuleFactoryLoader"],
  useClass: _angular_core__WEBPACK_IMPORTED_MODULE_1__["SystemJsNgModuleLoader"]
}, RouterPreloader, NoPreloading, PreloadAllModules, {
  provide: ROUTER_CONFIGURATION,
  useValue: {
    enableTracing: false
  }
}];

function routerNgProbeToken() {
  return new _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgProbeToken"]('Router', Router);
}
/**
 * @usageNotes
 *
 * RouterModule can be imported multiple times: once per lazily-loaded bundle.
 * Since the router deals with a global shared resource--location, we cannot have
 * more than one router service active.
 *
 * That is why there are two ways to create the module: `RouterModule.forRoot` and
 * `RouterModule.forChild`.
 *
 * * `forRoot` creates a module that contains all the directives, the given routes, and the router
 *   service itself.
 * * `forChild` creates a module that contains all the directives and the given routes, but does not
 *   include the router service.
 *
 * When registered at the root, the module should be used as follows
 *
 * ```
 * @NgModule({
 *   imports: [RouterModule.forRoot(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * For submodules and lazy loaded submodules the module should be used as follows:
 *
 * ```
 * @NgModule({
 *   imports: [RouterModule.forChild(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * @description
 *
 * Adds router directives and providers.
 *
 * Managing state transitions is one of the hardest parts of building applications. This is
 * especially true on the web, where you also need to ensure that the state is reflected in the URL.
 * In addition, we often want to split applications into multiple bundles and load them on demand.
 * Doing this transparently is not trivial.
 *
 * The Angular router solves these problems. Using the router, you can declaratively specify
 * application states, manage state transitions while taking care of the URL, and load bundles on
 * demand.
 *
 * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an
 * overview of how the router should be used.
 *
 *
 */


var RouterModule =
/** @class */
function () {
  // Note: We are injecting the Router so it gets created eagerly...
  function RouterModule(guard, router) {}

  RouterModule_1 = RouterModule;
  /**
   * Creates a module with all the router providers and directives. It also optionally sets up an
   * application listener to perform an initial navigation.
   *
   * Options (see `ExtraOptions`):
   * * `enableTracing` makes the router log all its internal events to the console.
   * * `useHash` enables the location strategy that uses the URL fragment instead of the history
   * API.
   * * `initialNavigation` disables the initial navigation.
   * * `errorHandler` provides a custom error handler.
   * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).
   * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See
   * `ExtraOptions` for more details.
   * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data
   * from parent to child routes.
   */

  RouterModule.forRoot = function (routes, config) {
    return {
      ngModule: RouterModule_1,
      providers: [ROUTER_PROVIDERS, provideRoutes(routes), {
        provide: ROUTER_FORROOT_GUARD,
        useFactory: provideForRootGuard,
        deps: [[Router, new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"]()]]
      }, {
        provide: ROUTER_CONFIGURATION,
        useValue: config ? config : {}
      }, {
        provide: _angular_common__WEBPACK_IMPORTED_MODULE_4__["LocationStrategy"],
        useFactory: provideLocationStrategy,
        deps: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["PlatformLocation"], [new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"](_angular_common__WEBPACK_IMPORTED_MODULE_4__["APP_BASE_HREF"]), new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]()], ROUTER_CONFIGURATION]
      }, {
        provide: RouterScroller,
        useFactory: createRouterScroller,
        deps: [Router, _angular_common__WEBPACK_IMPORTED_MODULE_4__["ViewportScroller"], ROUTER_CONFIGURATION]
      }, {
        provide: PreloadingStrategy,
        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy : NoPreloading
      }, {
        provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgProbeToken"],
        multi: true,
        useFactory: routerNgProbeToken
      }, provideRouterInitializer()]
    };
  };
  /**
   * Creates a module with all the router directives and a provider registering routes.
   */


  RouterModule.forChild = function (routes) {
    return {
      ngModule: RouterModule_1,
      providers: [provideRoutes(routes)]
    };
  };

  var RouterModule_1;
  RouterModule = RouterModule_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
    declarations: ROUTER_DIRECTIVES,
    exports: ROUTER_DIRECTIVES,
    entryComponents: [EmptyOutletComponent]
  }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(ROUTER_FORROOT_GUARD)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object, Router])], RouterModule);
  return RouterModule;
}();

function createRouterScroller(router, viewportScroller, config) {
  if (config.scrollOffset) {
    viewportScroller.setOffset(config.scrollOffset);
  }

  return new RouterScroller(router, viewportScroller, config);
}

function provideLocationStrategy(platformLocationStrategy, baseHref, options) {
  if (options === void 0) {
    options = {};
  }

  return options.useHash ? new _angular_common__WEBPACK_IMPORTED_MODULE_4__["HashLocationStrategy"](platformLocationStrategy, baseHref) : new _angular_common__WEBPACK_IMPORTED_MODULE_4__["PathLocationStrategy"](platformLocationStrategy, baseHref);
}

function provideForRootGuard(router) {
  if (router) {
    throw new Error("RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.");
  }

  return 'guarded';
}
/**
 * @description
 *
 * Registers routes.
 *
 * @usageNotes
 * ### Example
 *
 * ```
 * @NgModule({
 *   imports: [RouterModule.forChild(ROUTES)],
 *   providers: [provideRoutes(EXTRA_ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 *
 */


function provideRoutes(routes) {
  return [{
    provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ANALYZE_FOR_ENTRY_COMPONENTS"],
    multi: true,
    useValue: routes
  }, {
    provide: ROUTES,
    multi: true,
    useValue: routes
  }];
}

function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {
  if (opts === void 0) {
    opts = {};
  }

  var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));

  if (urlHandlingStrategy) {
    router.urlHandlingStrategy = urlHandlingStrategy;
  }

  if (routeReuseStrategy) {
    router.routeReuseStrategy = routeReuseStrategy;
  }

  if (opts.errorHandler) {
    router.errorHandler = opts.errorHandler;
  }

  if (opts.malformedUriErrorHandler) {
    router.malformedUriErrorHandler = opts.malformedUriErrorHandler;
  }

  if (opts.enableTracing) {
    var dom_1 = Object(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["ɵgetDOM"])();
    router.events.subscribe(function (e) {
      dom_1.logGroup("Router Event: " + e.constructor.name);
      dom_1.log(e.toString());
      dom_1.log(e);
      dom_1.logGroupEnd();
    });
  }

  if (opts.onSameUrlNavigation) {
    router.onSameUrlNavigation = opts.onSameUrlNavigation;
  }

  if (opts.paramsInheritanceStrategy) {
    router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;
  }

  if (opts.urlUpdateStrategy) {
    router.urlUpdateStrategy = opts.urlUpdateStrategy;
  }

  if (opts.relativeLinkResolution) {
    router.relativeLinkResolution = opts.relativeLinkResolution;
  }

  return router;
}

function rootRoute(router) {
  return router.routerState.root;
}
/**
 * To initialize the router properly we need to do in two steps:
 *
 * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if
 * a resolver or a guards executes asynchronously. Second, we need to actually run
 * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation
 * hook provided by the router to do that.
 *
 * The router navigation starts, reaches the point when preactivation is done, and then
 * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.
 */


var RouterInitializer =
/** @class */
function () {
  function RouterInitializer(injector) {
    this.injector = injector;
    this.initNavigation = false;
    this.resultOfPreactivationDone = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
  }

  RouterInitializer.prototype.appInitializer = function () {
    var _this = this;

    var p = this.injector.get(_angular_common__WEBPACK_IMPORTED_MODULE_4__["LOCATION_INITIALIZED"], Promise.resolve(null));
    return p.then(function () {
      var resolve = null;
      var res = new Promise(function (r) {
        return resolve = r;
      });

      var router = _this.injector.get(Router);

      var opts = _this.injector.get(ROUTER_CONFIGURATION);

      if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {
        resolve(true);
      } else if (opts.initialNavigation === 'disabled') {
        router.setUpLocationChangeListener();
        resolve(true);
      } else if (opts.initialNavigation === 'enabled') {
        router.hooks.afterPreactivation = function () {
          // only the initial navigation should be delayed
          if (!_this.initNavigation) {
            _this.initNavigation = true;
            resolve(true);
            return _this.resultOfPreactivationDone; // subsequent navigations should not be delayed
          } else {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null);
          }
        };

        router.initialNavigation();
      } else {
        throw new Error("Invalid initialNavigation options: '" + opts.initialNavigation + "'");
      }

      return res;
    });
  };

  RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {
    var opts = this.injector.get(ROUTER_CONFIGURATION);
    var preloader = this.injector.get(RouterPreloader);
    var routerScroller = this.injector.get(RouterScroller);
    var router = this.injector.get(Router);
    var ref = this.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ApplicationRef"]);

    if (bootstrappedComponentRef !== ref.components[0]) {
      return;
    }

    if (this.isLegacyEnabled(opts)) {
      router.initialNavigation();
    } else if (this.isLegacyDisabled(opts)) {
      router.setUpLocationChangeListener();
    }

    preloader.setUpPreloading();
    routerScroller.init();
    router.resetRootComponentType(ref.componentTypes[0]);
    this.resultOfPreactivationDone.next(null);
    this.resultOfPreactivationDone.complete();
  };

  RouterInitializer.prototype.isLegacyEnabled = function (opts) {
    return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true || opts.initialNavigation === undefined;
  };

  RouterInitializer.prototype.isLegacyDisabled = function (opts) {
    return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;
  };

  RouterInitializer = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])], RouterInitializer);
  return RouterInitializer;
}();

function getAppInitializer(r) {
  return r.appInitializer.bind(r);
}

function getBootstrapListener(r) {
  return r.bootstrapListener.bind(r);
}
/**
 * A token for the router initializer that will be called after the app is bootstrapped.
 *
 * @experimental
 */


var ROUTER_INITIALIZER = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('Router Initializer');

function provideRouterInitializer() {
  return [RouterInitializer, {
    provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["APP_INITIALIZER"],
    multi: true,
    useFactory: getAppInitializer,
    deps: [RouterInitializer]
  }, {
    provide: ROUTER_INITIALIZER,
    useFactory: getBootstrapListener,
    deps: [RouterInitializer]
  }, {
    provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["APP_BOOTSTRAP_LISTENER"],
    multi: true,
    useExisting: ROUTER_INITIALIZER
  }];
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Version"]('7.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbAccordionModule", function() { return NgbAccordionModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbAccordionConfig", function() { return NgbAccordionConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbAccordion", function() { return NgbAccordion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPanel", function() { return NgbPanel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPanelTitle", function() { return NgbPanelTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPanelContent", function() { return NgbPanelContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbAlertModule", function() { return NgbAlertModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbAlertConfig", function() { return NgbAlertConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbAlert", function() { return NgbAlert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbButtonsModule", function() { return NgbButtonsModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCheckBox", function() { return NgbCheckBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbRadioGroup", function() { return NgbRadioGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCarouselModule", function() { return NgbCarouselModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCarouselConfig", function() { return NgbCarouselConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCarousel", function() { return NgbCarousel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbSlide", function() { return NgbSlide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCollapseModule", function() { return NgbCollapseModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCollapse", function() { return NgbCollapse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCalendar", function() { return NgbCalendar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCalendarIslamicCivil", function() { return NgbCalendarIslamicCivil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCalendarIslamicUmalqura", function() { return NgbCalendarIslamicUmalqura; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCalendarHebrew", function() { return NgbCalendarHebrew; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbCalendarPersian", function() { return NgbCalendarPersian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDatepickerModule", function() { return NgbDatepickerModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDatepickerI18n", function() { return NgbDatepickerI18n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDatepickerI18nHebrew", function() { return NgbDatepickerI18nHebrew; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDatepickerConfig", function() { return NgbDatepickerConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDate", function() { return NgbDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDateParserFormatter", function() { return NgbDateParserFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDateAdapter", function() { return NgbDateAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDateNativeAdapter", function() { return NgbDateNativeAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDateNativeUTCAdapter", function() { return NgbDateNativeUTCAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDatepicker", function() { return NgbDatepicker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbInputDatepicker", function() { return NgbInputDatepicker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDropdownModule", function() { return NgbDropdownModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDropdownConfig", function() { return NgbDropdownConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDropdown", function() { return NgbDropdown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbModalModule", function() { return NgbModalModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbModal", function() { return NgbModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbModalConfig", function() { return NgbModalConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbActiveModal", function() { return NgbActiveModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbModalRef", function() { return NgbModalRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalDismissReasons", function() { return ModalDismissReasons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPaginationModule", function() { return NgbPaginationModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPaginationConfig", function() { return NgbPaginationConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPagination", function() { return NgbPagination; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPopoverModule", function() { return NgbPopoverModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPopoverConfig", function() { return NgbPopoverConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbPopover", function() { return NgbPopover; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbProgressbarModule", function() { return NgbProgressbarModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbProgressbarConfig", function() { return NgbProgressbarConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbProgressbar", function() { return NgbProgressbar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbRatingModule", function() { return NgbRatingModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbRatingConfig", function() { return NgbRatingConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbRating", function() { return NgbRating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTabsetModule", function() { return NgbTabsetModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTabsetConfig", function() { return NgbTabsetConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTabset", function() { return NgbTabset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTab", function() { return NgbTab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTabContent", function() { return NgbTabContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTabTitle", function() { return NgbTabTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTimepickerModule", function() { return NgbTimepickerModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTimepickerConfig", function() { return NgbTimepickerConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTimepicker", function() { return NgbTimepicker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTimeAdapter", function() { return NgbTimeAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTooltipModule", function() { return NgbTooltipModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTooltipConfig", function() { return NgbTooltipConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTooltip", function() { return NgbTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbHighlight", function() { return NgbHighlight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTypeaheadModule", function() { return NgbTypeaheadModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTypeaheadConfig", function() { return NgbTypeaheadConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbTypeahead", function() { return NgbTypeahead; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbModule", function() { return NgbModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return NgbButtonLabel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵb", function() { return NgbRadio; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵc", function() { return NGB_CAROUSEL_DIRECTIVES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵl", function() { return NGB_DATEPICKER_DATE_ADAPTER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵm", function() { return NgbDateStructAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵg", function() { return NgbDatepickerDayView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵj", function() { return NGB_DATEPICKER_18N_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵk", function() { return NgbDatepickerI18nDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵy", function() { return NgbDatepickerKeyMapService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵf", function() { return NgbDatepickerMonthView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵh", function() { return NgbDatepickerNavigation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi", function() { return NgbDatepickerNavigationSelect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵx", function() { return NgbDatepickerService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbg", function() { return NgbCalendarHijri; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵd", function() { return NGB_DATEPICKER_CALENDAR_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵe", function() { return NgbCalendarGregorian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵn", function() { return NGB_DATEPICKER_PARSER_FORMATTER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵo", function() { return NgbDateISOParserFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵq", function() { return NgbDropdownAnchor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵp", function() { return NgbDropdownMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵr", function() { return NgbDropdownToggle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵz", function() { return NgbModalBackdrop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbb", function() { return NgbModalStack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵba", function() { return NgbModalWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵs", function() { return NgbPopoverWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵt", function() { return NGB_DATEPICKER_TIME_ADAPTER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵu", function() { return NgbTimeStructAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵv", function() { return NgbTooltipWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵw", function() { return NgbTypeaheadWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbd", function() { return ARIA_LIVE_DELAY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbe", function() { return ARIA_LIVE_DELAY_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbf", function() { return Live; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbh", function() { return ContentRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵbc", function() { return ScrollBar; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(265);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(466);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(267);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(365);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(264);






/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @param {?} value
 * @return {?}
 */

function toInteger(value) {
  return parseInt("" + value, 10);
}
/**
 * @param {?} value
 * @return {?}
 */


function toString(value) {
  return value !== undefined && value !== null ? "" + value : '';
}
/**
 * @param {?} value
 * @param {?} max
 * @param {?=} min
 * @return {?}
 */


function getValueInRange(value, max, min) {
  if (min === void 0) {
    min = 0;
  }

  return Math.max(Math.min(value, max), min);
}
/**
 * @param {?} value
 * @return {?}
 */


function isString(value) {
  return typeof value === 'string';
}
/**
 * @param {?} value
 * @return {?}
 */


function isNumber(value) {
  return !isNaN(toInteger(value));
}
/**
 * @param {?} value
 * @return {?}
 */


function isInteger(value) {
  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
}
/**
 * @param {?} value
 * @return {?}
 */


function isDefined(value) {
  return value !== undefined && value !== null;
}
/**
 * @param {?} value
 * @return {?}
 */


function padNumber(value) {
  if (isNumber(value)) {
    return ("0" + value).slice(-2);
  } else {
    return '';
  }
}
/**
 * @param {?} text
 * @return {?}
 */


function regExpEscape(text) {
  return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbAccordion component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the accordions used in the application.
 */


var NgbAccordionConfig =
/** @class */
function () {
  function NgbAccordionConfig() {
    this.closeOthers = false;
  }

  NgbAccordionConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbAccordionConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbAccordionConfig_Factory() {
      return new NgbAccordionConfig();
    },
    token: NgbAccordionConfig,
    providedIn: "root"
  });
  return NgbAccordionConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var nextId = 0;
/**
 * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.
 */

var NgbPanelTitle =
/** @class */
function () {
  function NgbPanelTitle(templateRef) {
    this.templateRef = templateRef;
  }

  NgbPanelTitle.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'ng-template[ngbPanelTitle]'
    }]
  }];
  /** @nocollapse */

  NgbPanelTitle.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]
    }];
  };

  return NgbPanelTitle;
}();
/**
 * This directive must be used to wrap accordion panel content.
 */


var NgbPanelContent =
/** @class */
function () {
  function NgbPanelContent(templateRef) {
    this.templateRef = templateRef;
  }

  NgbPanelContent.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'ng-template[ngbPanelContent]'
    }]
  }];
  /** @nocollapse */

  NgbPanelContent.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]
    }];
  };

  return NgbPanelContent;
}();
/**
 * The NgbPanel directive represents an individual panel with the title and collapsible
 * content
 */


var NgbPanel =
/** @class */
function () {
  function NgbPanel() {
    /**
     *  A flag determining whether the panel is disabled or not.
     *  When disabled, the panel cannot be toggled.
     */
    this.disabled = false;
    /**
     *  An optional id for the panel. The id should be unique.
     *  If not provided, it will be auto-generated.
     */

    this.id = "ngb-panel-" + nextId++;
    /**
     * A flag telling if the panel is currently open
     */

    this.isOpen = false;
  }
  /**
   * @return {?}
   */


  NgbPanel.prototype.ngAfterContentChecked =
  /**
  * @return {?}
  */
  function () {
    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used
    // only @ContentChildren allows us to specify the {descendants: false} option.
    // Without {descendants: false} we are hitting bugs described in:
    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240
    this.titleTpl = this.titleTpls.first;
    this.contentTpl = this.contentTpls.first;
  };

  NgbPanel.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'ngb-panel'
    }]
  }];
  NgbPanel.propDecorators = {
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    titleTpls: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"],
      args: [NgbPanelTitle, {
        descendants: false
      }]
    }],
    contentTpls: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"],
      args: [NgbPanelContent, {
        descendants: false
      }]
    }]
  };
  return NgbPanel;
}();
/**
 * The NgbAccordion directive is a collection of panels.
 * It can assure that only one panel can be opened at a time.
 */


var NgbAccordion =
/** @class */
function () {
  function NgbAccordion(config) {
    /**
     * An array or comma separated strings of panel identifiers that should be opened
     */
    this.activeIds = [];
    /**
     * Whether the closed panels should be hidden without destroying them
     */

    this.destroyOnHide = true;
    /**
     * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details
     */

    this.panelChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.type = config.type;
    this.closeOtherPanels = config.closeOthers;
  }
  /**
   * Checks if a panel with a given id is expanded or not.
   */

  /**
   * Checks if a panel with a given id is expanded or not.
   * @param {?} panelId
   * @return {?}
   */


  NgbAccordion.prototype.isExpanded =
  /**
  * Checks if a panel with a given id is expanded or not.
  * @param {?} panelId
  * @return {?}
  */
  function (panelId) {
    return this.activeIds.indexOf(panelId) > -1;
  };
  /**
   * Expands a panel with a given id. Has no effect if the panel is already expanded or disabled.
   */

  /**
   * Expands a panel with a given id. Has no effect if the panel is already expanded or disabled.
   * @param {?} panelId
   * @return {?}
   */


  NgbAccordion.prototype.expand =
  /**
  * Expands a panel with a given id. Has no effect if the panel is already expanded or disabled.
  * @param {?} panelId
  * @return {?}
  */
  function (panelId) {
    this._changeOpenState(this._findPanelById(panelId), true);
  };
  /**
   * Expands all panels if [closeOthers]="false". For the [closeOthers]="true" case will have no effect if there is an
   * open panel, otherwise the first panel will be expanded.
   */

  /**
   * Expands all panels if [closeOthers]="false". For the [closeOthers]="true" case will have no effect if there is an
   * open panel, otherwise the first panel will be expanded.
   * @return {?}
   */


  NgbAccordion.prototype.expandAll =
  /**
  * Expands all panels if [closeOthers]="false". For the [closeOthers]="true" case will have no effect if there is an
  * open panel, otherwise the first panel will be expanded.
  * @return {?}
  */
  function () {
    var _this = this;

    if (this.closeOtherPanels) {
      if (this.activeIds.length === 0 && this.panels.length) {
        this._changeOpenState(this.panels.first, true);
      }
    } else {
      this.panels.forEach(function (panel) {
        return _this._changeOpenState(panel, true);
      });
    }
  };
  /**
   * Collapses a panel with a given id. Has no effect if the panel is already collapsed or disabled.
   */

  /**
   * Collapses a panel with a given id. Has no effect if the panel is already collapsed or disabled.
   * @param {?} panelId
   * @return {?}
   */


  NgbAccordion.prototype.collapse =
  /**
  * Collapses a panel with a given id. Has no effect if the panel is already collapsed or disabled.
  * @param {?} panelId
  * @return {?}
  */
  function (panelId) {
    this._changeOpenState(this._findPanelById(panelId), false);
  };
  /**
   * Collapses all open panels.
   */

  /**
   * Collapses all open panels.
   * @return {?}
   */


  NgbAccordion.prototype.collapseAll =
  /**
  * Collapses all open panels.
  * @return {?}
  */
  function () {
    var _this = this;

    this.panels.forEach(function (panel) {
      _this._changeOpenState(panel, false);
    });
  };
  /**
   * Programmatically toggle a panel with a given id. Has no effect if the panel is disabled.
   */

  /**
   * Programmatically toggle a panel with a given id. Has no effect if the panel is disabled.
   * @param {?} panelId
   * @return {?}
   */


  NgbAccordion.prototype.toggle =
  /**
  * Programmatically toggle a panel with a given id. Has no effect if the panel is disabled.
  * @param {?} panelId
  * @return {?}
  */
  function (panelId) {
    /** @type {?} */
    var panel = this._findPanelById(panelId);

    if (panel) {
      this._changeOpenState(panel, !panel.isOpen);
    }
  };
  /**
   * @return {?}
   */


  NgbAccordion.prototype.ngAfterContentChecked =
  /**
  * @return {?}
  */
  function () {
    var _this = this; // active id updates


    if (isString(this.activeIds)) {
      this.activeIds = this.activeIds.split(/\s*,\s*/);
    } // update panels open states


    this.panels.forEach(function (panel) {
      return panel.isOpen = !panel.disabled && _this.activeIds.indexOf(panel.id) > -1;
    }); // closeOthers updates

    if (this.activeIds.length > 1 && this.closeOtherPanels) {
      this._closeOthers(this.activeIds[0]);

      this._updateActiveIds();
    }
  };
  /**
   * @param {?} panel
   * @param {?} nextState
   * @return {?}
   */


  NgbAccordion.prototype._changeOpenState =
  /**
  * @param {?} panel
  * @param {?} nextState
  * @return {?}
  */
  function (panel, nextState) {
    if (panel && !panel.disabled && panel.isOpen !== nextState) {
      /** @type {?} */
      var defaultPrevented_1 = false;
      this.panelChange.emit({
        panelId: panel.id,
        nextState: nextState,
        preventDefault: function preventDefault() {
          defaultPrevented_1 = true;
        }
      });

      if (!defaultPrevented_1) {
        panel.isOpen = nextState;

        if (nextState && this.closeOtherPanels) {
          this._closeOthers(panel.id);
        }

        this._updateActiveIds();
      }
    }
  };
  /**
   * @param {?} panelId
   * @return {?}
   */


  NgbAccordion.prototype._closeOthers =
  /**
  * @param {?} panelId
  * @return {?}
  */
  function (panelId) {
    this.panels.forEach(function (panel) {
      if (panel.id !== panelId) {
        panel.isOpen = false;
      }
    });
  };
  /**
   * @param {?} panelId
   * @return {?}
   */


  NgbAccordion.prototype._findPanelById =
  /**
  * @param {?} panelId
  * @return {?}
  */
  function (panelId) {
    return this.panels.find(function (p) {
      return p.id === panelId;
    });
  };
  /**
   * @return {?}
   */


  NgbAccordion.prototype._updateActiveIds =
  /**
  * @return {?}
  */
  function () {
    this.activeIds = this.panels.filter(function (panel) {
      return panel.isOpen && !panel.disabled;
    }).map(function (panel) {
      return panel.id;
    });
  };

  NgbAccordion.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-accordion',
      exportAs: 'ngbAccordion',
      host: {
        'class': 'accordion',
        'role': 'tablist',
        '[attr.aria-multiselectable]': '!closeOtherPanels'
      },
      template: "\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button type=\"button\" class=\"btn btn-link\"\n              (click)=\"toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"!panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  "
    }]
  }];
  /** @nocollapse */

  NgbAccordion.ctorParameters = function () {
    return [{
      type: NgbAccordionConfig
    }];
  };

  NgbAccordion.propDecorators = {
    panels: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"],
      args: [NgbPanel]
    }],
    activeIds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    closeOtherPanels: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
      args: ['closeOthers']
    }],
    destroyOnHide: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    panelChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbAccordion;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];

var NgbAccordionModule =
/** @class */
function () {
  function NgbAccordionModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbAccordionModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbAccordionModule
    };
  };

  NgbAccordionModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: NGB_ACCORDION_DIRECTIVES,
      exports: NGB_ACCORDION_DIRECTIVES,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]
    }]
  }];
  return NgbAccordionModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbAlert component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the alerts used in the application.
 */


var NgbAlertConfig =
/** @class */
function () {
  function NgbAlertConfig() {
    this.dismissible = true;
    this.type = 'warning';
  }

  NgbAlertConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbAlertConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbAlertConfig_Factory() {
      return new NgbAlertConfig();
    },
    token: NgbAlertConfig,
    providedIn: "root"
  });
  return NgbAlertConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Alerts can be used to provide feedback messages.
 */


var NgbAlert =
/** @class */
function () {
  function NgbAlert(config, _renderer, _element) {
    this._renderer = _renderer;
    this._element = _element;
    /**
     * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.
     */

    this.close = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.dismissible = config.dismissible;
    this.type = config.type;
  }
  /**
   * @return {?}
   */


  NgbAlert.prototype.closeHandler =
  /**
  * @return {?}
  */
  function () {
    this.close.emit(null);
  };
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbAlert.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    /** @type {?} */
    var typeChange = changes['type'];

    if (typeChange && !typeChange.firstChange) {
      this._renderer.removeClass(this._element.nativeElement, "alert-" + typeChange.previousValue);

      this._renderer.addClass(this._element.nativeElement, "alert-" + typeChange.currentValue);
    }
  };
  /**
   * @return {?}
   */


  NgbAlert.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    this._renderer.addClass(this._element.nativeElement, "alert-" + this.type);
  };

  NgbAlert.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-alert',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      host: {
        'role': 'alert',
        'class': 'alert',
        '[class.alert-dismissible]': 'dismissible'
      },
      template: "\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <ng-content></ng-content>\n    ",
      styles: ["ngb-alert{display:block}"]
    }]
  }];
  /** @nocollapse */

  NgbAlert.ctorParameters = function () {
    return [{
      type: NgbAlertConfig
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }];
  };

  NgbAlert.propDecorators = {
    dismissible: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    close: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbAlert;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbAlertModule =
/** @class */
function () {
  function NgbAlertModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbAlertModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbAlertModule
    };
  };

  NgbAlertModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbAlert],
      exports: [NgbAlert],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      entryComponents: [NgbAlert]
    }]
  }];
  return NgbAlertModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbButtonLabel =
/** @class */
function () {
  function NgbButtonLabel() {}

  NgbButtonLabel.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbButtonLabel]',
      host: {
        '[class.btn]': 'true',
        '[class.active]': 'active',
        '[class.disabled]': 'disabled',
        '[class.focus]': 'focused'
      }
    }]
  }];
  return NgbButtonLabel;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_CHECKBOX_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbCheckBox;
  }),
  multi: true
};
/**
 * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable
 * specified via ngModel.
 */

var NgbCheckBox =
/** @class */
function () {
  function NgbCheckBox(_label) {
    this._label = _label;
    /**
     * A flag indicating if a given checkbox button is disabled.
     */

    this.disabled = false;
    /**
     * Value to be propagated as model when the checkbox is checked.
     */

    this.valueChecked = true;
    /**
     * Value to be propagated as model when the checkbox is unchecked.
     */

    this.valueUnChecked = false;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  Object.defineProperty(NgbCheckBox.prototype, "focused", {
    set:
    /**
    * @param {?} isFocused
    * @return {?}
    */
    function set(isFocused) {
      this._label.focused = isFocused;

      if (!isFocused) {
        this.onTouched();
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @param {?} $event
   * @return {?}
   */

  NgbCheckBox.prototype.onInputChange =
  /**
  * @param {?} $event
  * @return {?}
  */
  function ($event) {
    /** @type {?} */
    var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;
    this.onChange(modelToPropagate);
    this.onTouched();
    this.writeValue(modelToPropagate);
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbCheckBox.prototype.registerOnChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onChange = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbCheckBox.prototype.registerOnTouched =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onTouched = fn;
  };
  /**
   * @param {?} isDisabled
   * @return {?}
   */


  NgbCheckBox.prototype.setDisabledState =
  /**
  * @param {?} isDisabled
  * @return {?}
  */
  function (isDisabled) {
    this.disabled = isDisabled;
    this._label.disabled = isDisabled;
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbCheckBox.prototype.writeValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this.checked = value === this.valueChecked;
    this._label.active = this.checked;
  };

  NgbCheckBox.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbButton][type=checkbox]',
      host: {
        'autocomplete': 'off',
        '[checked]': 'checked',
        '[disabled]': 'disabled',
        '(change)': 'onInputChange($event)',
        '(focus)': 'focused = true',
        '(blur)': 'focused = false'
      },
      providers: [NGB_CHECKBOX_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbCheckBox.ctorParameters = function () {
    return [{
      type: NgbButtonLabel
    }];
  };

  NgbCheckBox.propDecorators = {
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    valueChecked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    valueUnChecked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbCheckBox;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_RADIO_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbRadioGroup;
  }),
  multi: true
};
/** @type {?} */

var nextId$1 = 0;
/**
 * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable
 * specified via ngModel.
 */

var NgbRadioGroup =
/** @class */
function () {
  function NgbRadioGroup() {
    this._radios = new Set();
    this._value = null;
    /**
     * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the
     * enclosed inputs. If not specified, a name is generated automatically.
     */

    this.name = "ngb-radio-" + nextId$1++;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  Object.defineProperty(NgbRadioGroup.prototype, "disabled", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._disabled;
    },
    set:
    /**
    * @param {?} isDisabled
    * @return {?}
    */
    function set(isDisabled) {
      this.setDisabledState(isDisabled);
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @param {?} radio
   * @return {?}
   */

  NgbRadioGroup.prototype.onRadioChange =
  /**
  * @param {?} radio
  * @return {?}
  */
  function (radio) {
    this.writeValue(radio.value);
    this.onChange(radio.value);
  };
  /**
   * @return {?}
   */


  NgbRadioGroup.prototype.onRadioValueUpdate =
  /**
  * @return {?}
  */
  function () {
    this._updateRadiosValue();
  };
  /**
   * @param {?} radio
   * @return {?}
   */


  NgbRadioGroup.prototype.register =
  /**
  * @param {?} radio
  * @return {?}
  */
  function (radio) {
    this._radios.add(radio);
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbRadioGroup.prototype.registerOnChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onChange = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbRadioGroup.prototype.registerOnTouched =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onTouched = fn;
  };
  /**
   * @param {?} isDisabled
   * @return {?}
   */


  NgbRadioGroup.prototype.setDisabledState =
  /**
  * @param {?} isDisabled
  * @return {?}
  */
  function (isDisabled) {
    this._disabled = isDisabled;

    this._updateRadiosDisabled();
  };
  /**
   * @param {?} radio
   * @return {?}
   */


  NgbRadioGroup.prototype.unregister =
  /**
  * @param {?} radio
  * @return {?}
  */
  function (radio) {
    this._radios.delete(radio);
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbRadioGroup.prototype.writeValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this._value = value;

    this._updateRadiosValue();
  };
  /**
   * @return {?}
   */


  NgbRadioGroup.prototype._updateRadiosValue =
  /**
  * @return {?}
  */
  function () {
    var _this = this;

    this._radios.forEach(function (radio) {
      return radio.updateValue(_this._value);
    });
  };
  /**
   * @return {?}
   */


  NgbRadioGroup.prototype._updateRadiosDisabled =
  /**
  * @return {?}
  */
  function () {
    this._radios.forEach(function (radio) {
      return radio.updateDisabled();
    });
  };

  NgbRadioGroup.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbRadioGroup]',
      host: {
        'role': 'group'
      },
      providers: [NGB_RADIO_VALUE_ACCESSOR]
    }]
  }];
  NgbRadioGroup.propDecorators = {
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbRadioGroup;
}();
/**
 * Marks an input of type "radio" as part of the NgbRadioGroup.
 */


var NgbRadio =
/** @class */
function () {
  function NgbRadio(_group, _label, _renderer, _element) {
    this._group = _group;
    this._label = _label;
    this._renderer = _renderer;
    this._element = _element;
    this._value = null;

    this._group.register(this);

    this.updateDisabled();
  }

  Object.defineProperty(NgbRadio.prototype, "value", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._value;
    },

    /**
     * You can specify model value of a given radio by binding to the value property.
     */
    set:
    /**
    * You can specify model value of a given radio by binding to the value property.
    * @param {?} value
    * @return {?}
    */
    function set(value) {
      this._value = value;
      /** @type {?} */

      var stringValue = value ? value.toString() : '';

      this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);

      this._group.onRadioValueUpdate();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "disabled", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._group.disabled || this._disabled;
    },

    /**
     * A flag indicating if a given radio button is disabled.
     */
    set:
    /**
    * A flag indicating if a given radio button is disabled.
    * @param {?} isDisabled
    * @return {?}
    */
    function set(isDisabled) {
      this._disabled = isDisabled !== false;
      this.updateDisabled();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "focused", {
    set:
    /**
    * @param {?} isFocused
    * @return {?}
    */
    function set(isFocused) {
      if (this._label) {
        this._label.focused = isFocused;
      }

      if (!isFocused) {
        this._group.onTouched();
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "checked", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._checked;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "nameAttr", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this.name || this._group.name;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @return {?}
   */

  NgbRadio.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this._group.unregister(this);
  };
  /**
   * @return {?}
   */


  NgbRadio.prototype.onChange =
  /**
  * @return {?}
  */
  function () {
    this._group.onRadioChange(this);
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbRadio.prototype.updateValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this._checked = this.value === value;
    this._label.active = this._checked;
  };
  /**
   * @return {?}
   */


  NgbRadio.prototype.updateDisabled =
  /**
  * @return {?}
  */
  function () {
    this._label.disabled = this.disabled;
  };

  NgbRadio.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbButton][type=radio]',
      host: {
        '[checked]': 'checked',
        '[disabled]': 'disabled',
        '[name]': 'nameAttr',
        '(change)': 'onChange()',
        '(focus)': 'focused = true',
        '(blur)': 'focused = false'
      }
    }]
  }];
  /** @nocollapse */

  NgbRadio.ctorParameters = function () {
    return [{
      type: NgbRadioGroup
    }, {
      type: NgbButtonLabel
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }];
  };

  NgbRadio.propDecorators = {
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
      args: ['value']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
      args: ['disabled']
    }]
  };
  return NgbRadio;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];

var NgbButtonsModule =
/** @class */
function () {
  function NgbButtonsModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbButtonsModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbButtonsModule
    };
  };

  NgbButtonsModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: NGB_BUTTON_DIRECTIVES,
      exports: NGB_BUTTON_DIRECTIVES
    }]
  }];
  return NgbButtonsModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbCarousel component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the carousels used in the application.
 */


var NgbCarouselConfig =
/** @class */
function () {
  function NgbCarouselConfig() {
    this.interval = 5000;
    this.wrap = true;
    this.keyboard = true;
    this.pauseOnHover = true;
    this.showNavigationArrows = true;
    this.showNavigationIndicators = true;
  }

  NgbCarouselConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbCarouselConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbCarouselConfig_Factory() {
      return new NgbCarouselConfig();
    },
    token: NgbCarouselConfig,
    providedIn: "root"
  });
  return NgbCarouselConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var nextId$2 = 0;
/**
 * Represents an individual slide to be used within a carousel.
 */

var NgbSlide =
/** @class */
function () {
  function NgbSlide(tplRef) {
    this.tplRef = tplRef;
    /**
     * Unique slide identifier. Must be unique for the entire document for proper accessibility support.
     * Will be auto-generated if not provided.
     */

    this.id = "ngb-slide-" + nextId$2++;
  }

  NgbSlide.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'ng-template[ngbSlide]'
    }]
  }];
  /** @nocollapse */

  NgbSlide.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]
    }];
  };

  NgbSlide.propDecorators = {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbSlide;
}();
/**
 * Directive to easily create carousels based on Bootstrap's markup.
 */


var NgbCarousel =
/** @class */
function () {
  function NgbCarousel(config, _platformId, _ngZone, _cd) {
    this._platformId = _platformId;
    this._ngZone = _ngZone;
    this._cd = _cd;
    this._start$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    this._stop$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    /**
     * A carousel slide event fired when the slide transition is completed.
     * See NgbSlideEvent for payload details
     */

    this.slide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.interval = config.interval;
    this.wrap = config.wrap;
    this.keyboard = config.keyboard;
    this.pauseOnHover = config.pauseOnHover;
    this.showNavigationArrows = config.showNavigationArrows;
    this.showNavigationIndicators = config.showNavigationIndicators;
  }
  /**
   * @return {?}
   */


  NgbCarousel.prototype.ngAfterContentInit =
  /**
  * @return {?}
  */
  function () {
    var _this = this; // setInterval() doesn't play well with SSR and protractor,
    // so we should run it in the browser and outside Angular


    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["isPlatformBrowser"])(this._platformId)) {
      this._ngZone.runOutsideAngular(function () {
        _this._start$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function () {
          return _this.interval;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (interval) {
          return interval > 0 && _this.slides.length > 0;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function (interval) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["timer"])(interval).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this._stop$));
        })).subscribe(function () {
          return _this._ngZone.run(function () {
            return _this.next();
          });
        });

        _this._start$.next();
      });
    }
  };
  /**
   * @return {?}
   */


  NgbCarousel.prototype.ngAfterContentChecked =
  /**
  * @return {?}
  */
  function () {
    /** @type {?} */
    var activeSlide = this._getSlideById(this.activeId);

    this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : null;
  };
  /**
   * @return {?}
   */


  NgbCarousel.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this._stop$.next();
  };
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbCarousel.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    if ('interval' in changes && !changes['interval'].isFirstChange()) {
      this._start$.next();
    }
  };
  /**
   * Navigate to a slide with the specified identifier.
   */

  /**
   * Navigate to a slide with the specified identifier.
   * @param {?} slideId
   * @return {?}
   */


  NgbCarousel.prototype.select =
  /**
  * Navigate to a slide with the specified identifier.
  * @param {?} slideId
  * @return {?}
  */
  function (slideId) {
    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId));
  };
  /**
   * Navigate to the next slide.
   */

  /**
   * Navigate to the next slide.
   * @return {?}
   */


  NgbCarousel.prototype.prev =
  /**
  * Navigate to the next slide.
  * @return {?}
  */
  function () {
    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT);
  };
  /**
   * Navigate to the next slide.
   */

  /**
   * Navigate to the next slide.
   * @return {?}
   */


  NgbCarousel.prototype.next =
  /**
  * Navigate to the next slide.
  * @return {?}
  */
  function () {
    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT);
  };
  /**
   * Stops the carousel from cycling through items.
   */

  /**
   * Stops the carousel from cycling through items.
   * @return {?}
   */


  NgbCarousel.prototype.pause =
  /**
  * Stops the carousel from cycling through items.
  * @return {?}
  */
  function () {
    this._stop$.next();
  };
  /**
   * Restarts cycling through the carousel slides from left to right.
   */

  /**
   * Restarts cycling through the carousel slides from left to right.
   * @return {?}
   */


  NgbCarousel.prototype.cycle =
  /**
  * Restarts cycling through the carousel slides from left to right.
  * @return {?}
  */
  function () {
    this._start$.next();
  };
  /**
   * @param {?} slideIdx
   * @param {?} direction
   * @return {?}
   */


  NgbCarousel.prototype._cycleToSelected =
  /**
  * @param {?} slideIdx
  * @param {?} direction
  * @return {?}
  */
  function (slideIdx, direction) {
    /** @type {?} */
    var selectedSlide = this._getSlideById(slideIdx);

    if (selectedSlide && selectedSlide.id !== this.activeId) {
      this.slide.emit({
        prev: this.activeId,
        current: selectedSlide.id,
        direction: direction
      });

      this._start$.next();

      this.activeId = selectedSlide.id;
    } // we get here after the interval fires or any external API call like next(), prev() or select()


    this._cd.markForCheck();
  };
  /**
   * @param {?} currentActiveSlideId
   * @param {?} nextActiveSlideId
   * @return {?}
   */


  NgbCarousel.prototype._getSlideEventDirection =
  /**
  * @param {?} currentActiveSlideId
  * @param {?} nextActiveSlideId
  * @return {?}
  */
  function (currentActiveSlideId, nextActiveSlideId) {
    /** @type {?} */
    var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);
    /** @type {?} */


    var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);

    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;
  };
  /**
   * @param {?} slideId
   * @return {?}
   */


  NgbCarousel.prototype._getSlideById =
  /**
  * @param {?} slideId
  * @return {?}
  */
  function (slideId) {
    return this.slides.find(function (slide) {
      return slide.id === slideId;
    });
  };
  /**
   * @param {?} slideId
   * @return {?}
   */


  NgbCarousel.prototype._getSlideIdxById =
  /**
  * @param {?} slideId
  * @return {?}
  */
  function (slideId) {
    return this.slides.toArray().indexOf(this._getSlideById(slideId));
  };
  /**
   * @param {?} currentSlideId
   * @return {?}
   */


  NgbCarousel.prototype._getNextSlide =
  /**
  * @param {?} currentSlideId
  * @return {?}
  */
  function (currentSlideId) {
    /** @type {?} */
    var slideArr = this.slides.toArray();
    /** @type {?} */

    var currentSlideIdx = this._getSlideIdxById(currentSlideId);
    /** @type {?} */


    var isLastSlide = currentSlideIdx === slideArr.length - 1;
    return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;
  };
  /**
   * @param {?} currentSlideId
   * @return {?}
   */


  NgbCarousel.prototype._getPrevSlide =
  /**
  * @param {?} currentSlideId
  * @return {?}
  */
  function (currentSlideId) {
    /** @type {?} */
    var slideArr = this.slides.toArray();
    /** @type {?} */

    var currentSlideIdx = this._getSlideIdxById(currentSlideId);
    /** @type {?} */


    var isFirstSlide = currentSlideIdx === 0;
    return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;
  };

  NgbCarousel.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-carousel',
      exportAs: 'ngbCarousel',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      host: {
        'class': 'carousel slide',
        '[style.display]': '"block"',
        'tabIndex': '0',
        '(mouseenter)': 'pauseOnHover && pause()',
        '(mouseleave)': 'pauseOnHover && cycle()',
        '(keydown.arrowLeft)': 'keyboard && prev()',
        '(keydown.arrowRight)': 'keyboard && next()'
      },
      template: "\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  "
    }]
  }];
  /** @nocollapse */

  NgbCarousel.ctorParameters = function () {
    return [{
      type: NgbCarouselConfig
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"]]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
    }];
  };

  NgbCarousel.propDecorators = {
    slides: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"],
      args: [NgbSlide]
    }],
    activeId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    interval: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    wrap: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    keyboard: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    pauseOnHover: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showNavigationArrows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showNavigationIndicators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    slide: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbCarousel;
}();
/** @enum {string} */


var NgbSlideEventDirection = {
  LEFT:
  /** @type {?} */
  'left',
  RIGHT:
  /** @type {?} */
  'right'
};
/** @type {?} */

var NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

var NgbCarouselModule =
/** @class */
function () {
  function NgbCarouselModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbCarouselModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbCarouselModule
    };
  };

  NgbCarouselModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: NGB_CAROUSEL_DIRECTIVES,
      exports: NGB_CAROUSEL_DIRECTIVES,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]
    }]
  }];
  return NgbCarouselModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * The NgbCollapse directive provides a simple way to hide and show an element with animations.
 */


var NgbCollapse =
/** @class */
function () {
  function NgbCollapse() {
    /**
     * A flag indicating collapsed (true) or open (false) state.
     */
    this.collapsed = false;
  }

  NgbCollapse.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbCollapse]',
      exportAs: 'ngbCollapse',
      host: {
        '[class.collapse]': 'true',
        '[class.show]': '!collapsed'
      }
    }]
  }];
  NgbCollapse.propDecorators = {
    collapsed: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
      args: ['ngbCollapse']
    }]
  };
  return NgbCollapse;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbCollapseModule =
/** @class */
function () {
  function NgbCollapseModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbCollapseModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbCollapseModule
    };
  };

  NgbCollapseModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbCollapse],
      exports: [NgbCollapse]
    }]
  }];
  return NgbCollapseModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Simple class used for a date representation that datepicker also uses internally
 *
 * \@since 3.0.0
 */


var
/**
* Simple class used for a date representation that datepicker also uses internally
*
* \@since 3.0.0
*/
NgbDate =
/** @class */
function () {
  function NgbDate(year, month, day) {
    this.year = isInteger(year) ? year : null;
    this.month = isInteger(month) ? month : null;
    this.day = isInteger(day) ? day : null;
  }
  /**
   * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,
   * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object
   */

  /**
   * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,
   * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object
   * @param {?} date
   * @return {?}
   */


  NgbDate.from =
  /**
  * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,
  * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object
  * @param {?} date
  * @return {?}
  */
  function (date) {
    if (date instanceof NgbDate) {
      return date;
    }

    return date ? new NgbDate(date.year, date.month, date.day) : null;
  };
  /**
   * Checks if current date is equal to another date
   */

  /**
   * Checks if current date is equal to another date
   * @param {?} other
   * @return {?}
   */


  NgbDate.prototype.equals =
  /**
  * Checks if current date is equal to another date
  * @param {?} other
  * @return {?}
  */
  function (other) {
    return other && this.year === other.year && this.month === other.month && this.day === other.day;
  };
  /**
   * Checks if current date is before another date
   */

  /**
   * Checks if current date is before another date
   * @param {?} other
   * @return {?}
   */


  NgbDate.prototype.before =
  /**
  * Checks if current date is before another date
  * @param {?} other
  * @return {?}
  */
  function (other) {
    if (!other) {
      return false;
    }

    if (this.year === other.year) {
      if (this.month === other.month) {
        return this.day === other.day ? false : this.day < other.day;
      } else {
        return this.month < other.month;
      }
    } else {
      return this.year < other.year;
    }
  };
  /**
   * Checks if current date is after another date
   */

  /**
   * Checks if current date is after another date
   * @param {?} other
   * @return {?}
   */


  NgbDate.prototype.after =
  /**
  * Checks if current date is after another date
  * @param {?} other
  * @return {?}
  */
  function (other) {
    if (!other) {
      return false;
    }

    if (this.year === other.year) {
      if (this.month === other.month) {
        return this.day === other.day ? false : this.day > other.day;
      } else {
        return this.month > other.month;
      }
    } else {
      return this.year > other.year;
    }
  };

  return NgbDate;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @param {?} jsDate
 * @return {?}
 */


function fromJSDate(jsDate) {
  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());
}
/**
 * @param {?} date
 * @return {?}
 */


function toJSDate(date) {
  /** @type {?} */
  var jsDate = new Date(date.year, date.month - 1, date.day, 12); // this is done avoid 30 -> 1930 conversion

  if (!isNaN(jsDate.getTime())) {
    jsDate.setFullYear(date.year);
  }

  return jsDate;
}
/**
 * @return {?}
 */


function NGB_DATEPICKER_CALENDAR_FACTORY() {
  return new NgbCalendarGregorian();
}
/**
 * Calendar used by the datepicker.
 * Default implementation uses Gregorian calendar.
 * @abstract
 */


var NgbCalendar =
/** @class */
function () {
  function NgbCalendar() {}

  NgbCalendar.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root',
      useFactory: NGB_DATEPICKER_CALENDAR_FACTORY
    }]
  }];
  /** @nocollapse */

  NgbCalendar.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: NGB_DATEPICKER_CALENDAR_FACTORY,
    token: NgbCalendar,
    providedIn: "root"
  });
  return NgbCalendar;
}();

var NgbCalendarGregorian =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbCalendarGregorian, _super);

  function NgbCalendarGregorian() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getDaysPerWeek =
  /**
  * @return {?}
  */
  function () {
    return 7;
  };
  /**
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getMonths =
  /**
  * @return {?}
  */
  function () {
    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
  };
  /**
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getWeeksPerMonth =
  /**
  * @return {?}
  */
  function () {
    return 6;
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getNext =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }
    /** @type {?} */


    var jsDate = toJSDate(date);

    switch (period) {
      case 'y':
        return new NgbDate(date.year + number, 1, 1);

      case 'm':
        jsDate = new Date(date.year, date.month + number - 1, 1, 12);
        break;

      case 'd':
        jsDate.setDate(jsDate.getDate() + number);
        break;

      default:
        return date;
    }

    return fromJSDate(jsDate);
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getPrev =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    return this.getNext(date, period, -number);
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getWeekday =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var jsDate = toJSDate(date);
    /** @type {?} */

    var day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7

    return day === 0 ? 7 : day;
  };
  /**
   * @param {?} week
   * @param {?} firstDayOfWeek
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getWeekNumber =
  /**
  * @param {?} week
  * @param {?} firstDayOfWeek
  * @return {?}
  */
  function (week, firstDayOfWeek) {
    // in JS Date Sun=0, in ISO 8601 Sun=7
    if (firstDayOfWeek === 7) {
      firstDayOfWeek = 0;
    }
    /** @type {?} */


    var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;
    /** @type {?} */

    var date = week[thursdayIndex];
    /** @type {?} */

    var jsDate = toJSDate(date);
    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday
    // Thursday

    /** @type {?} */

    var time = jsDate.getTime();
    jsDate.setMonth(0); // Compare with Jan 1

    jsDate.setDate(1);
    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;
  };
  /**
   * @return {?}
   */


  NgbCalendarGregorian.prototype.getToday =
  /**
  * @return {?}
  */
  function () {
    return fromJSDate(new Date());
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarGregorian.prototype.isValid =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {
      return false;
    } // year 0 doesn't exist in Gregorian calendar


    if (date.year === 0) {
      return false;
    }
    /** @type {?} */


    var jsDate = toJSDate(date);
    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;
  };

  NgbCalendarGregorian.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbCalendarGregorian;
}(NgbCalendar);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @param {?} prev
 * @param {?} next
 * @return {?}
 */


function isChangedDate(prev, next) {
  return !dateComparator(prev, next);
}
/**
 * @param {?} prev
 * @param {?} next
 * @return {?}
 */


function dateComparator(prev, next) {
  return !prev && !next || !!prev && !!next && prev.equals(next);
}
/**
 * @param {?} minDate
 * @param {?} maxDate
 * @return {?}
 */


function checkMinBeforeMax(minDate, maxDate) {
  if (maxDate && minDate && maxDate.before(minDate)) {
    throw new Error("'maxDate' " + maxDate + " should be greater than 'minDate' " + minDate);
  }
}
/**
 * @param {?} date
 * @param {?} minDate
 * @param {?} maxDate
 * @return {?}
 */


function checkDateInRange(date, minDate, maxDate) {
  if (date && minDate && date.before(minDate)) {
    return minDate;
  }

  if (date && maxDate && date.after(maxDate)) {
    return maxDate;
  }

  return date;
}
/**
 * @param {?} date
 * @param {?} state
 * @return {?}
 */


function isDateSelectable(date, state) {
  var minDate = state.minDate,
      maxDate = state.maxDate,
      disabled = state.disabled,
      markDisabled = state.markDisabled; // clang-format off

  return !(!isDefined(date) || disabled || markDisabled && markDisabled(date, {
    year: date.year,
    month: date.month
  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate)); // clang-format on
}
/**
 * @param {?} calendar
 * @param {?} date
 * @param {?} minDate
 * @param {?} maxDate
 * @return {?}
 */


function generateSelectBoxMonths(calendar, date, minDate, maxDate) {
  if (!date) {
    return [];
  }
  /** @type {?} */


  var months = calendar.getMonths(date.year);

  if (minDate && date.year === minDate.year) {
    /** @type {?} */
    var index = months.findIndex(function (month) {
      return month === minDate.month;
    });
    months = months.slice(index);
  }

  if (maxDate && date.year === maxDate.year) {
    /** @type {?} */
    var index = months.findIndex(function (month) {
      return month === maxDate.month;
    });
    months = months.slice(0, index + 1);
  }

  return months;
}
/**
 * @param {?} date
 * @param {?} minDate
 * @param {?} maxDate
 * @return {?}
 */


function generateSelectBoxYears(date, minDate, maxDate) {
  if (!date) {
    return [];
  }
  /** @type {?} */


  var start = minDate && minDate.year || date.year - 10;
  /** @type {?} */

  var end = maxDate && maxDate.year || date.year + 10;
  return Array.from({
    length: end - start + 1
  }, function (e, i) {
    return start + i;
  });
}
/**
 * @param {?} calendar
 * @param {?} date
 * @param {?} maxDate
 * @return {?}
 */


function nextMonthDisabled(calendar, date, maxDate) {
  return maxDate && calendar.getNext(date, 'm').after(maxDate);
}
/**
 * @param {?} calendar
 * @param {?} date
 * @param {?} minDate
 * @return {?}
 */


function prevMonthDisabled(calendar, date, minDate) {
  /** @type {?} */
  var prevDate = calendar.getPrev(date, 'm');
  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);
}
/**
 * @param {?} calendar
 * @param {?} date
 * @param {?} state
 * @param {?} i18n
 * @param {?} force
 * @return {?}
 */


function buildMonths(calendar, date, state, i18n, force) {
  var displayMonths = state.displayMonths,
      months = state.months; // move old months to a temporary array

  /** @type {?} */

  var monthsToReuse = months.splice(0, months.length); // generate new first dates, nullify or reuse months

  /** @type {?} */

  var firstDates = Array.from({
    length: displayMonths
  }, function (_, i) {
    /** @type {?} */
    var firstDate = calendar.getNext(date, 'm', i);
    months[i] = null;

    if (!force) {
      /** @type {?} */
      var reusedIndex = monthsToReuse.findIndex(function (month) {
        return month.firstDate.equals(firstDate);
      }); // move reused month back to months

      if (reusedIndex !== -1) {
        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];
      }
    }

    return firstDate;
  }); // rebuild nullified months

  firstDates.forEach(function (firstDate, i) {
    if (months[i] === null) {
      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() ||
      /** @type {?} */
      {});
    }
  });
  return months;
}
/**
 * @param {?} calendar
 * @param {?} date
 * @param {?} state
 * @param {?} i18n
 * @param {?=} month
 * @return {?}
 */


function buildMonth(calendar, date, state, i18n, month) {
  if (month === void 0) {
    month =
    /** @type {?} */
    {};
  }

  var dayTemplateData = state.dayTemplateData,
      minDate = state.minDate,
      maxDate = state.maxDate,
      firstDayOfWeek = state.firstDayOfWeek,
      markDisabled = state.markDisabled,
      outsideDays = state.outsideDays;
  month.firstDate = null;
  month.lastDate = null;
  month.number = date.month;
  month.year = date.year;
  month.weeks = month.weeks || [];
  month.weekdays = month.weekdays || [];
  date = getFirstViewDate(calendar, date, firstDayOfWeek); // month has weeks

  for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {
    /** @type {?} */
    var weekObject = month.weeks[week];

    if (!weekObject) {
      weekObject = month.weeks[week] = {
        number: 0,
        days: [],
        collapsed: true
      };
    }
    /** @type {?} */


    var days = weekObject.days; // week has days

    for (var day = 0; day < calendar.getDaysPerWeek(); day++) {
      if (week === 0) {
        month.weekdays[day] = calendar.getWeekday(date);
      }
      /** @type {?} */


      var newDate = new NgbDate(date.year, date.month, date.day);
      /** @type {?} */

      var nextDate = calendar.getNext(newDate);
      /** @type {?} */

      var ariaLabel = i18n.getDayAriaLabel(newDate); // marking date as disabled

      /** @type {?} */

      var disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));

      if (!disabled && markDisabled) {
        disabled = markDisabled(newDate, {
          month: month.number,
          year: month.year
        });
      } // adding user-provided data to the context

      /** @type {?} */


      var contextUserData = dayTemplateData ? dayTemplateData(newDate, {
        month: month.number,
        year: month.year
      }) : undefined; // saving first date of the month

      if (month.firstDate === null && newDate.month === month.number) {
        month.firstDate = newDate;
      } // saving last date of the month


      if (newDate.month === month.number && nextDate.month !== month.number) {
        month.lastDate = newDate;
      }
      /** @type {?} */


      var dayObject = days[day];

      if (!dayObject) {
        dayObject = days[day] =
        /** @type {?} */
        {};
      }

      dayObject.date = newDate;
      dayObject.context = Object.assign(dayObject.context || {}, {
        $implicit: newDate,
        date: newDate,
        data: contextUserData,
        currentMonth: month.number,
        disabled: disabled,
        focused: false,
        selected: false
      });
      dayObject.tabindex = -1;
      dayObject.ariaLabel = ariaLabel;
      dayObject.hidden = false;
      date = nextDate;
    }

    weekObject.number = calendar.getWeekNumber(days.map(function (day) {
      return day.date;
    }), firstDayOfWeek); // marking week as collapsed

    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;
  }

  return month;
}
/**
 * @param {?} calendar
 * @param {?} date
 * @param {?} firstDayOfWeek
 * @return {?}
 */


function getFirstViewDate(calendar, date, firstDayOfWeek) {
  /** @type {?} */
  var daysPerWeek = calendar.getDaysPerWeek();
  /** @type {?} */

  var firstMonthDate = new NgbDate(date.year, date.month, 1);
  /** @type {?} */

  var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;
  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);
}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @param {?} locale
 * @return {?}
 */


function NGB_DATEPICKER_18N_FACTORY(locale) {
  return new NgbDatepickerI18nDefault(locale);
}
/**
 * Type of the service supplying month and weekday names to to NgbDatepicker component.
 * The default implementation of this service honors the Angular locale, and uses the registered locale data,
 * as explained in the Angular i18n guide.
 * See the i18n demo for how to extend this class and define a custom provider for i18n.
 * @abstract
 */


var NgbDatepickerI18n =
/** @class */
function () {
  function NgbDatepickerI18n() {}
  /**
   * Returns the textual representation of a day that is rendered in a day cell
   *
   * @since 3.0.0
   */

  /**
   * Returns the textual representation of a day that is rendered in a day cell
   *
   * \@since 3.0.0
   * @param {?} date
   * @return {?}
   */


  NgbDatepickerI18n.prototype.getDayNumerals =
  /**
  * Returns the textual representation of a day that is rendered in a day cell
  *
  * \@since 3.0.0
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return "" + date.day;
  };
  /**
   * Returns the textual representation of a week number rendered by date picker
   *
   * @since 3.0.0
   */

  /**
   * Returns the textual representation of a week number rendered by date picker
   *
   * \@since 3.0.0
   * @param {?} weekNumber
   * @return {?}
   */


  NgbDatepickerI18n.prototype.getWeekNumerals =
  /**
  * Returns the textual representation of a week number rendered by date picker
  *
  * \@since 3.0.0
  * @param {?} weekNumber
  * @return {?}
  */
  function (weekNumber) {
    return "" + weekNumber;
  };
  /**
   * Returns the textual representation of a year that is rendered
   * in date picker year select box
   *
   * @since 3.0.0
   */

  /**
   * Returns the textual representation of a year that is rendered
   * in date picker year select box
   *
   * \@since 3.0.0
   * @param {?} year
   * @return {?}
   */


  NgbDatepickerI18n.prototype.getYearNumerals =
  /**
  * Returns the textual representation of a year that is rendered
  * in date picker year select box
  *
  * \@since 3.0.0
  * @param {?} year
  * @return {?}
  */
  function (year) {
    return "" + year;
  };

  NgbDatepickerI18n.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root',
      useFactory: NGB_DATEPICKER_18N_FACTORY,
      deps: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]
    }]
  }];
  /** @nocollapse */

  NgbDatepickerI18n.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbDatepickerI18n_Factory() {
      return NGB_DATEPICKER_18N_FACTORY(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]));
    },
    token: NgbDatepickerI18n,
    providedIn: "root"
  });
  return NgbDatepickerI18n;
}();

var NgbDatepickerI18nDefault =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbDatepickerI18nDefault, _super);

  function NgbDatepickerI18nDefault(_locale) {
    var _this = _super.call(this) || this;

    _this._locale = _locale;
    /** @type {?} */

    var weekdaysStartingOnSunday = Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["getLocaleDayNames"])(_locale, _angular_common__WEBPACK_IMPORTED_MODULE_1__["FormStyle"].Standalone, _angular_common__WEBPACK_IMPORTED_MODULE_1__["TranslationWidth"].Short);
    _this._weekdaysShort = weekdaysStartingOnSunday.map(function (day, index) {
      return weekdaysStartingOnSunday[(index + 1) % 7];
    });
    _this._monthsShort = Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["getLocaleMonthNames"])(_locale, _angular_common__WEBPACK_IMPORTED_MODULE_1__["FormStyle"].Standalone, _angular_common__WEBPACK_IMPORTED_MODULE_1__["TranslationWidth"].Abbreviated);
    _this._monthsFull = Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["getLocaleMonthNames"])(_locale, _angular_common__WEBPACK_IMPORTED_MODULE_1__["FormStyle"].Standalone, _angular_common__WEBPACK_IMPORTED_MODULE_1__["TranslationWidth"].Wide);
    return _this;
  }
  /**
   * @param {?} weekday
   * @return {?}
   */


  NgbDatepickerI18nDefault.prototype.getWeekdayShortName =
  /**
  * @param {?} weekday
  * @return {?}
  */
  function (weekday) {
    return this._weekdaysShort[weekday - 1];
  };
  /**
   * @param {?} month
   * @return {?}
   */


  NgbDatepickerI18nDefault.prototype.getMonthShortName =
  /**
  * @param {?} month
  * @return {?}
  */
  function (month) {
    return this._monthsShort[month - 1];
  };
  /**
   * @param {?} month
   * @return {?}
   */


  NgbDatepickerI18nDefault.prototype.getMonthFullName =
  /**
  * @param {?} month
  * @return {?}
  */
  function (month) {
    return this._monthsFull[month - 1];
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDatepickerI18nDefault.prototype.getDayAriaLabel =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var jsDate = new Date(date.year, date.month - 1, date.day);
    return Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["formatDate"])(jsDate, 'fullDate', this._locale);
  };

  NgbDatepickerI18nDefault.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  /** @nocollapse */

  NgbDatepickerI18nDefault.ctorParameters = function () {
    return [{
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]
      }]
    }];
  };

  return NgbDatepickerI18nDefault;
}(NgbDatepickerI18n);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbDatepickerService =
/** @class */
function () {
  function NgbDatepickerService(_calendar, _i18n) {
    this._calendar = _calendar;
    this._i18n = _i18n;
    this._model$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    this._select$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    this._state = {
      disabled: false,
      displayMonths: 1,
      firstDayOfWeek: 1,
      focusVisible: false,
      months: [],
      navigation: 'select',
      outsideDays: 'visible',
      prevDisabled: false,
      nextDisabled: false,
      selectBoxes: {
        years: [],
        months: []
      },
      selectedDate: null
    };
  }

  Object.defineProperty(NgbDatepickerService.prototype, "model$", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._model$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (model) {
        return model.months.length > 0;
      }));
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "select$", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._select$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (date) {
        return date !== null;
      }));
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "dayTemplateData", {
    set:
    /**
    * @param {?} dayTemplateData
    * @return {?}
    */
    function set(dayTemplateData) {
      if (this._state.dayTemplateData !== dayTemplateData) {
        this._nextState({
          dayTemplateData: dayTemplateData
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "disabled", {
    set:
    /**
    * @param {?} disabled
    * @return {?}
    */
    function set(disabled) {
      if (this._state.disabled !== disabled) {
        this._nextState({
          disabled: disabled
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "displayMonths", {
    set:
    /**
    * @param {?} displayMonths
    * @return {?}
    */
    function set(displayMonths) {
      displayMonths = toInteger(displayMonths);

      if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {
        this._nextState({
          displayMonths: displayMonths
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "firstDayOfWeek", {
    set:
    /**
    * @param {?} firstDayOfWeek
    * @return {?}
    */
    function set(firstDayOfWeek) {
      firstDayOfWeek = toInteger(firstDayOfWeek);

      if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {
        this._nextState({
          firstDayOfWeek: firstDayOfWeek
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "focusVisible", {
    set:
    /**
    * @param {?} focusVisible
    * @return {?}
    */
    function set(focusVisible) {
      if (this._state.focusVisible !== focusVisible && !this._state.disabled) {
        this._nextState({
          focusVisible: focusVisible
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "maxDate", {
    set:
    /**
    * @param {?} date
    * @return {?}
    */
    function set(date) {
      /** @type {?} */
      var maxDate = this.toValidDate(date, null);

      if (isChangedDate(this._state.maxDate, maxDate)) {
        this._nextState({
          maxDate: maxDate
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "markDisabled", {
    set:
    /**
    * @param {?} markDisabled
    * @return {?}
    */
    function set(markDisabled) {
      if (this._state.markDisabled !== markDisabled) {
        this._nextState({
          markDisabled: markDisabled
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "minDate", {
    set:
    /**
    * @param {?} date
    * @return {?}
    */
    function set(date) {
      /** @type {?} */
      var minDate = this.toValidDate(date, null);

      if (isChangedDate(this._state.minDate, minDate)) {
        this._nextState({
          minDate: minDate
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "navigation", {
    set:
    /**
    * @param {?} navigation
    * @return {?}
    */
    function set(navigation) {
      if (this._state.navigation !== navigation) {
        this._nextState({
          navigation: navigation
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "outsideDays", {
    set:
    /**
    * @param {?} outsideDays
    * @return {?}
    */
    function set(outsideDays) {
      if (this._state.outsideDays !== outsideDays) {
        this._nextState({
          outsideDays: outsideDays
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @param {?} date
   * @return {?}
   */

  NgbDatepickerService.prototype.focus =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {
      this._nextState({
        focusDate: date
      });
    }
  };
  /**
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbDatepickerService.prototype.focusMove =
  /**
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (period, number) {
    this.focus(this._calendar.getNext(this._state.focusDate, period, number));
  };
  /**
   * @return {?}
   */


  NgbDatepickerService.prototype.focusSelect =
  /**
  * @return {?}
  */
  function () {
    if (isDateSelectable(this._state.focusDate, this._state)) {
      this.select(this._state.focusDate, {
        emitEvent: true
      });
    }
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDatepickerService.prototype.open =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var firstDate = this.toValidDate(date, this._calendar.getToday());

    if (!this._state.disabled) {
      this._nextState({
        firstDate: firstDate
      });
    }
  };
  /**
   * @param {?} date
   * @param {?=} options
   * @return {?}
   */


  NgbDatepickerService.prototype.select =
  /**
  * @param {?} date
  * @param {?=} options
  * @return {?}
  */
  function (date, options) {
    if (options === void 0) {
      options = {};
    }
    /** @type {?} */


    var selectedDate = this.toValidDate(date, null);

    if (!this._state.disabled) {
      if (isChangedDate(this._state.selectedDate, selectedDate)) {
        this._nextState({
          selectedDate: selectedDate
        });
      }

      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {
        this._select$.next(selectedDate);
      }
    }
  };
  /**
   * @param {?} date
   * @param {?=} defaultValue
   * @return {?}
   */


  NgbDatepickerService.prototype.toValidDate =
  /**
  * @param {?} date
  * @param {?=} defaultValue
  * @return {?}
  */
  function (date, defaultValue) {
    /** @type {?} */
    var ngbDate = NgbDate.from(date);

    if (defaultValue === undefined) {
      defaultValue = this._calendar.getToday();
    }

    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;
  };
  /**
   * @param {?} patch
   * @return {?}
   */


  NgbDatepickerService.prototype._nextState =
  /**
  * @param {?} patch
  * @return {?}
  */
  function (patch) {
    /** @type {?} */
    var newState = this._updateState(patch);

    this._patchContexts(newState);

    this._state = newState;

    this._model$.next(this._state);
  };
  /**
   * @param {?} state
   * @return {?}
   */


  NgbDatepickerService.prototype._patchContexts =
  /**
  * @param {?} state
  * @return {?}
  */
  function (state) {
    var months = state.months,
        displayMonths = state.displayMonths,
        selectedDate = state.selectedDate,
        focusDate = state.focusDate,
        focusVisible = state.focusVisible,
        disabled = state.disabled,
        outsideDays = state.outsideDays;
    state.months.forEach(function (month) {
      month.weeks.forEach(function (week) {
        week.days.forEach(function (day) {
          // patch focus flag
          if (focusDate) {
            day.context.focused = focusDate.equals(day.date) && focusVisible;
          } // calculating tabindex


          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1; // override context disabled

          if (disabled === true) {
            day.context.disabled = true;
          } // patch selection flag


          if (selectedDate !== undefined) {
            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);
          } // visibility


          if (month.number !== day.date.month) {
            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);
          }
        });
      });
    });
  };
  /**
   * @param {?} patch
   * @return {?}
   */


  NgbDatepickerService.prototype._updateState =
  /**
  * @param {?} patch
  * @return {?}
  */
  function (patch) {
    // patching fields

    /** @type {?} */
    var state = Object.assign({}, this._state, patch);
    /** @type {?} */

    var startDate = state.firstDate; // min/max dates changed

    if ('minDate' in patch || 'maxDate' in patch) {
      checkMinBeforeMax(state.minDate, state.maxDate);
      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);
      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);
      startDate = state.focusDate;
    } // disabled


    if ('disabled' in patch) {
      state.focusVisible = false;
    } // initial rebuild via 'select()'


    if ('selectedDate' in patch && this._state.months.length === 0) {
      startDate = state.selectedDate;
    } // focus date changed


    if ('focusDate' in patch) {
      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);
      startDate = state.focusDate; // nothing to rebuild if only focus changed and it is still visible

      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {
        return state;
      }
    } // first date changed


    if ('firstDate' in patch) {
      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);
      startDate = state.firstDate;
    } // rebuilding months


    if (startDate) {
      /** @type {?} */
      var forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;
      /** @type {?} */

      var months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild); // updating months and boundary dates

      state.months = months;
      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;
      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined; // reset selected date if 'markDisabled' returns true

      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {
        state.selectedDate = null;
      } // adjusting focus after months were built


      if ('firstDate' in patch) {
        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {
          state.focusDate = startDate;
        }
      } // adjusting months/years for the select box navigation

      /** @type {?} */


      var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;
      /** @type {?} */

      var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;

      if (state.navigation === 'select') {
        // years ->  boundaries (min/max were changed)
        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {
          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);
        } // months -> when current year or boundaries change


        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {
          state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);
        }
      } else {
        state.selectBoxes = {
          years: [],
          months: []
        };
      } // updating navigation arrows -> boundaries change (min/max) or month/year changes


      if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {
        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);
        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);
      }
    }

    return state;
  };

  NgbDatepickerService.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  /** @nocollapse */

  NgbDatepickerService.ctorParameters = function () {
    return [{
      type: NgbCalendar
    }, {
      type: NgbDatepickerI18n
    }];
  };

  return NgbDatepickerService;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @enum {number} */


var Key = {
  Tab: 9,
  Enter: 13,
  Escape: 27,
  Space: 32,
  PageUp: 33,
  PageDown: 34,
  End: 35,
  Home: 36,
  ArrowLeft: 37,
  ArrowUp: 38,
  ArrowRight: 39,
  ArrowDown: 40
};
Key[Key.Tab] = 'Tab';
Key[Key.Enter] = 'Enter';
Key[Key.Escape] = 'Escape';
Key[Key.Space] = 'Space';
Key[Key.PageUp] = 'PageUp';
Key[Key.PageDown] = 'PageDown';
Key[Key.End] = 'End';
Key[Key.Home] = 'Home';
Key[Key.ArrowLeft] = 'ArrowLeft';
Key[Key.ArrowUp] = 'ArrowUp';
Key[Key.ArrowRight] = 'ArrowRight';
Key[Key.ArrowDown] = 'ArrowDown';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

var NgbDatepickerKeyMapService =
/** @class */
function () {
  function NgbDatepickerKeyMapService(_service, _calendar) {
    var _this = this;

    this._service = _service;
    this._calendar = _calendar;

    _service.model$.subscribe(function (model) {
      _this._minDate = model.minDate;
      _this._maxDate = model.maxDate;
      _this._firstViewDate = model.firstDate;
      _this._lastViewDate = model.lastDate;
    });
  }
  /**
   * @param {?} event
   * @return {?}
   */


  NgbDatepickerKeyMapService.prototype.processKey =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    // tslint:disable-next-line:deprecation
    var which = event.which;

    if (Key[toString(which)]) {
      switch (which) {
        case Key.PageUp:
          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);

          break;

        case Key.PageDown:
          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);

          break;

        case Key.End:
          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);

          break;

        case Key.Home:
          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);

          break;

        case Key.ArrowLeft:
          this._service.focusMove('d', -1);

          break;

        case Key.ArrowUp:
          this._service.focusMove('d', -this._calendar.getDaysPerWeek());

          break;

        case Key.ArrowRight:
          this._service.focusMove('d', 1);

          break;

        case Key.ArrowDown:
          this._service.focusMove('d', this._calendar.getDaysPerWeek());

          break;

        case Key.Enter:
        case Key.Space:
          this._service.focusSelect();

          break;

        default:
          return;
      }

      event.preventDefault();
      event.stopPropagation();
    }
  };

  NgbDatepickerKeyMapService.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  /** @nocollapse */

  NgbDatepickerKeyMapService.ctorParameters = function () {
    return [{
      type: NgbDatepickerService
    }, {
      type: NgbCalendar
    }];
  };

  return NgbDatepickerKeyMapService;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @enum {number} */


var NavigationEvent = {
  PREV: 0,
  NEXT: 1
};
NavigationEvent[NavigationEvent.PREV] = 'PREV';
NavigationEvent[NavigationEvent.NEXT] = 'NEXT';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbDatepicker component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the datepickers used in the application.
 */

var NgbDatepickerConfig =
/** @class */
function () {
  function NgbDatepickerConfig() {
    this.displayMonths = 1;
    this.firstDayOfWeek = 1;
    this.navigation = 'select';
    this.outsideDays = 'visible';
    this.showWeekdays = true;
    this.showWeekNumbers = false;
  }

  NgbDatepickerConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbDatepickerConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbDatepickerConfig_Factory() {
      return new NgbDatepickerConfig();
    },
    token: NgbDatepickerConfig,
    providedIn: "root"
  });
  return NgbDatepickerConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @return {?}
 */


function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {
  return new NgbDateStructAdapter();
}
/**
 * An abstract class used as the DI token that does conversion between the internal
 * datepicker NgbDateStruct model and any provided user date model, ex. string, native date, etc.
 *
 * Adapter is used for conversion when binding datepicker to a model with forms, ex. [(ngModel)]="userDateModel"
 *
 * Default implementation assumes NgbDateStruct for user model as well.
 * @abstract
 * @template D
 */


var NgbDateAdapter =
/** @class */
function () {
  function NgbDateAdapter() {}

  NgbDateAdapter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root',
      useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY
    }]
  }];
  /** @nocollapse */

  NgbDateAdapter.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY,
    token: NgbDateAdapter,
    providedIn: "root"
  });
  return NgbDateAdapter;
}();

var NgbDateStructAdapter =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbDateStructAdapter, _super);

  function NgbDateStructAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * Converts a NgbDateStruct value into NgbDateStruct value
   */

  /**
   * Converts a NgbDateStruct value into NgbDateStruct value
   * @param {?} date
   * @return {?}
   */


  NgbDateStructAdapter.prototype.fromModel =
  /**
  * Converts a NgbDateStruct value into NgbDateStruct value
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {
      year: date.year,
      month: date.month,
      day: date.day
    } : null;
  };
  /**
   * Converts a NgbDateStruct value into NgbDateStruct value
   */

  /**
   * Converts a NgbDateStruct value into NgbDateStruct value
   * @param {?} date
   * @return {?}
   */


  NgbDateStructAdapter.prototype.toModel =
  /**
  * Converts a NgbDateStruct value into NgbDateStruct value
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {
      year: date.year,
      month: date.month,
      day: date.day
    } : null;
  };

  NgbDateStructAdapter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbDateStructAdapter;
}(NgbDateAdapter);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_DATEPICKER_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbDatepicker;
  }),
  multi: true
};
/**
 * A lightweight and highly configurable datepicker directive
 */

var NgbDatepicker =
/** @class */
function () {
  function NgbDatepicker(_keyMapService, _service, _calendar, i18n, config, _cd, _elementRef, _ngbDateAdapter, _ngZone) {
    var _this = this;

    this._keyMapService = _keyMapService;
    this._service = _service;
    this._calendar = _calendar;
    this.i18n = i18n;
    this._cd = _cd;
    this._elementRef = _elementRef;
    this._ngbDateAdapter = _ngbDateAdapter;
    this._ngZone = _ngZone;
    /**
     * An event fired when navigation happens and currently displayed month changes.
     * See NgbDatepickerNavigateEvent for the payload info.
     */

    this.navigate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    /**
     * An event fired when user selects a date using keyboard or mouse.
     * The payload of the event is currently selected NgbDate.
     */

    this.select = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

    this.onChange = function (_) {};

    this.onTouched = function () {};

    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate'].forEach(function (input) {
      return _this[input] = config[input];
    });
    this._selectSubscription = _service.select$.subscribe(function (date) {
      _this.select.emit(date);
    });
    this._subscription = _service.model$.subscribe(function (model) {
      /** @type {?} */
      var newDate = model.firstDate;
      /** @type {?} */

      var oldDate = _this.model ? _this.model.firstDate : null;
      /** @type {?} */

      var newSelectedDate = model.selectedDate;
      /** @type {?} */

      var newFocusedDate = model.focusDate;
      /** @type {?} */

      var oldFocusedDate = _this.model ? _this.model.focusDate : null;
      _this.model = model; // handling selection change

      if (isChangedDate(newSelectedDate, _this._controlValue)) {
        _this._controlValue = newSelectedDate;

        _this.onTouched();

        _this.onChange(_this._ngbDateAdapter.toModel(newSelectedDate));
      } // handling focus change


      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {
        _this.focus();
      } // emitting navigation event if the first month changes


      if (!newDate.equals(oldDate)) {
        _this.navigate.emit({
          current: oldDate ? {
            year: oldDate.year,
            month: oldDate.month
          } : null,
          next: {
            year: newDate.year,
            month: newDate.month
          }
        });
      }

      _cd.markForCheck();
    });
  }
  /**
   * Manually focus the focusable day in the datepicker
   */

  /**
   * Manually focus the focusable day in the datepicker
   * @return {?}
   */


  NgbDatepicker.prototype.focus =
  /**
  * Manually focus the focusable day in the datepicker
  * @return {?}
  */
  function () {
    var _this = this;

    this._ngZone.onStable.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1)).subscribe(function () {
      /** @type {?} */
      var elementToFocus = _this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex="0"]');

      if (elementToFocus) {
        elementToFocus.focus();
      }
    });
  };
  /**
   * Navigates current view to provided date.
   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
   * If nothing or invalid date provided calendar will open current month.
   * Use 'startDate' input as an alternative
   */

  /**
   * Navigates current view to provided date.
   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
   * If nothing or invalid date provided calendar will open current month.
   * Use 'startDate' input as an alternative
   * @param {?=} date
   * @return {?}
   */


  NgbDatepicker.prototype.navigateTo =
  /**
  * Navigates current view to provided date.
  * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
  * If nothing or invalid date provided calendar will open current month.
  * Use 'startDate' input as an alternative
  * @param {?=} date
  * @return {?}
  */
  function (date) {
    this._service.open(NgbDate.from(date ? date.day ?
    /** @type {?} */
    date : Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__assign"])({}, date, {
      day: 1
    }) : null));
  };
  /**
   * @return {?}
   */


  NgbDatepicker.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this._subscription.unsubscribe();

    this._selectSubscription.unsubscribe();
  };
  /**
   * @return {?}
   */


  NgbDatepicker.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    var _this = this;

    if (this.model === undefined) {
      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(function (input) {
        return _this._service[input] = _this[input];
      });
      this.navigateTo(this.startDate);
    }
  };
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbDatepicker.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    var _this = this;

    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].filter(function (input) {
      return input in changes;
    }).forEach(function (input) {
      return _this._service[input] = _this[input];
    });

    if ('startDate' in changes) {
      this.navigateTo(this.startDate);
    }
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDatepicker.prototype.onDateSelect =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    this._service.focus(date);

    this._service.select(date, {
      emitEvent: true
    });
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbDatepicker.prototype.onKeyDown =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    this._keyMapService.processKey(event);
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDatepicker.prototype.onNavigateDateSelect =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    this._service.open(date);
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbDatepicker.prototype.onNavigateEvent =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    switch (event) {
      case NavigationEvent.PREV:
        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));

        break;

      case NavigationEvent.NEXT:
        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));

        break;
    }
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbDatepicker.prototype.registerOnChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onChange = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbDatepicker.prototype.registerOnTouched =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onTouched = fn;
  };
  /**
   * @param {?} isDisabled
   * @return {?}
   */


  NgbDatepicker.prototype.setDisabledState =
  /**
  * @param {?} isDisabled
  * @return {?}
  */
  function (isDisabled) {
    this._service.disabled = isDisabled;
  };
  /**
   * @param {?} focusVisible
   * @return {?}
   */


  NgbDatepicker.prototype.showFocus =
  /**
  * @param {?} focusVisible
  * @return {?}
  */
  function (focusVisible) {
    this._service.focusVisible = focusVisible;
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbDatepicker.prototype.writeValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));

    this._service.select(this._controlValue);
  };

  NgbDatepicker.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      exportAs: 'ngbDatepicker',
      selector: 'ngb-datepicker',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      template: "\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  ",
      providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService],
      styles: ["ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}.ngb-dp-month{pointer-events:none}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}ngb-datepicker-month-view{pointer-events:auto}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month>.ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week:last-child{padding-bottom:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}"]
    }]
  }];
  /** @nocollapse */

  NgbDatepicker.ctorParameters = function () {
    return [{
      type: NgbDatepickerKeyMapService
    }, {
      type: NgbDatepickerService
    }, {
      type: NgbCalendar
    }, {
      type: NgbDatepickerI18n
    }, {
      type: NgbDatepickerConfig
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: NgbDateAdapter
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
    }];
  };

  NgbDatepicker.propDecorators = {
    dayTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    dayTemplateData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    displayMonths: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    firstDayOfWeek: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    footerTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    markDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    maxDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    minDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    navigation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    outsideDays: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showWeekdays: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showWeekNumbers: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    startDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    navigate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    select: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbDatepicker;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbDatepickerMonthView =
/** @class */
function () {
  function NgbDatepickerMonthView(i18n) {
    this.i18n = i18n;
    this.select = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
  }
  /**
   * @param {?} day
   * @return {?}
   */


  NgbDatepickerMonthView.prototype.doSelect =
  /**
  * @param {?} day
  * @return {?}
  */
  function (day) {
    if (!day.context.disabled && !day.hidden) {
      this.select.emit(day.date);
    }
  };

  NgbDatepickerMonthView.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-datepicker-month-view',
      host: {
        'role': 'grid'
      },
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      template: "\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  ",
      styles: ["ngb-datepicker-month-view{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}"]
    }]
  }];
  /** @nocollapse */

  NgbDatepickerMonthView.ctorParameters = function () {
    return [{
      type: NgbDatepickerI18n
    }];
  };

  NgbDatepickerMonthView.propDecorators = {
    dayTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    month: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showWeekdays: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showWeekNumbers: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    select: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbDatepickerMonthView;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbDatepickerNavigation =
/** @class */
function () {
  function NgbDatepickerNavigation(i18n) {
    this.i18n = i18n;
    this.navigation = NavigationEvent;
    this.months = [];
    this.navigate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.select = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
  }

  NgbDatepickerNavigation.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-datepicker-navigation',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      template: "\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    ",
      styles: ["ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline:auto 1px}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}"]
    }]
  }];
  /** @nocollapse */

  NgbDatepickerNavigation.ctorParameters = function () {
    return [{
      type: NgbDatepickerI18n
    }];
  };

  NgbDatepickerNavigation.propDecorators = {
    date: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    months: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showSelect: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    prevDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    nextDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    selectBoxes: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    navigate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    select: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbDatepickerNavigation;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type="hidden"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex="-1"])'].join(', ');
/**
 * Returns first and last focusable elements inside of a given element based on specific CSS selector
 * @param {?} element
 * @return {?}
 */

function getFocusableBoundaryElements(element) {
  /** @type {?} */
  var list = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);
  return [list[0], list[list.length - 1]];
}
/**
 * Function that enforces browser focus to be trapped inside a DOM element.
 *
 * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element
 *
 * \@param element The element around which focus will be trapped inside
 * \@param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners
 * and free internal resources
 * \@param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to
 * false)
 * @type {?}
 */


var ngbFocusTrap = function ngbFocusTrap(element, stopFocusTrap$, refocusOnClick) {
  if (refocusOnClick === void 0) {
    refocusOnClick = false;
  } // last focused element

  /** @type {?} */


  var lastFocusedElement$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(element, 'focusin').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(stopFocusTrap$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (e) {
    return e.target;
  })); // 'tab' / 'shift+tab' stream

  Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(element, 'keydown').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(stopFocusTrap$), // tslint:disable:deprecation
  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (e) {
    return e.which === Key.Tab;
  }), // tslint:enable:deprecation
  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["withLatestFrom"])(lastFocusedElement$)).subscribe(function (_a) {
    var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__read"])(_a, 2),
        tabEvent = _b[0],
        focusedElement = _b[1];

    var _c = Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__read"])(getFocusableBoundaryElements(element), 2),
        first = _c[0],
        last = _c[1];

    if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {
      last.focus();
      tabEvent.preventDefault();
    }

    if (focusedElement === last && !tabEvent.shiftKey) {
      first.focus();
      tabEvent.preventDefault();
    }
  }); // inside click

  if (refocusOnClick) {
    Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(element, 'click').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(stopFocusTrap$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["withLatestFrom"])(lastFocusedElement$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (arr) {
      return (
        /** @type {?} */
        arr[1]
      );
    })).subscribe(function (lastFocusedElement) {
      return lastFocusedElement.focus();
    });
  }
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
// previous version:
// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js


var // previous version:
// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js
Positioning =
/** @class */
function () {
  function Positioning() {}
  /**
   * @param {?} element
   * @return {?}
   */


  Positioning.prototype.getAllStyles =
  /**
  * @param {?} element
  * @return {?}
  */
  function (element) {
    return window.getComputedStyle(element);
  };
  /**
   * @param {?} element
   * @param {?} prop
   * @return {?}
   */


  Positioning.prototype.getStyle =
  /**
  * @param {?} element
  * @param {?} prop
  * @return {?}
  */
  function (element, prop) {
    return this.getAllStyles(element)[prop];
  };
  /**
   * @param {?} element
   * @return {?}
   */


  Positioning.prototype.isStaticPositioned =
  /**
  * @param {?} element
  * @return {?}
  */
  function (element) {
    return (this.getStyle(element, 'position') || 'static') === 'static';
  };
  /**
   * @param {?} element
   * @return {?}
   */


  Positioning.prototype.offsetParent =
  /**
  * @param {?} element
  * @return {?}
  */
  function (element) {
    /** @type {?} */
    var offsetParentEl =
    /** @type {?} */
    element.offsetParent || document.documentElement;

    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {
      offsetParentEl =
      /** @type {?} */
      offsetParentEl.offsetParent;
    }

    return offsetParentEl || document.documentElement;
  };
  /**
   * @param {?} element
   * @param {?=} round
   * @return {?}
   */


  Positioning.prototype.position =
  /**
  * @param {?} element
  * @param {?=} round
  * @return {?}
  */
  function (element, round) {
    if (round === void 0) {
      round = true;
    }
    /** @type {?} */


    var elPosition;
    /** @type {?} */

    var parentOffset = {
      width: 0,
      height: 0,
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    };

    if (this.getStyle(element, 'position') === 'fixed') {
      elPosition = element.getBoundingClientRect();
    } else {
      /** @type {?} */
      var offsetParentEl = this.offsetParent(element);
      elPosition = this.offset(element, false);

      if (offsetParentEl !== document.documentElement) {
        parentOffset = this.offset(offsetParentEl, false);
      }

      parentOffset.top += offsetParentEl.clientTop;
      parentOffset.left += offsetParentEl.clientLeft;
    }

    elPosition.top -= parentOffset.top;
    elPosition.bottom -= parentOffset.top;
    elPosition.left -= parentOffset.left;
    elPosition.right -= parentOffset.left;

    if (round) {
      elPosition.top = Math.round(elPosition.top);
      elPosition.bottom = Math.round(elPosition.bottom);
      elPosition.left = Math.round(elPosition.left);
      elPosition.right = Math.round(elPosition.right);
    }

    return elPosition;
  };
  /**
   * @param {?} element
   * @param {?=} round
   * @return {?}
   */


  Positioning.prototype.offset =
  /**
  * @param {?} element
  * @param {?=} round
  * @return {?}
  */
  function (element, round) {
    if (round === void 0) {
      round = true;
    }
    /** @type {?} */


    var elBcr = element.getBoundingClientRect();
    /** @type {?} */

    var viewportOffset = {
      top: window.pageYOffset - document.documentElement.clientTop,
      left: window.pageXOffset - document.documentElement.clientLeft
    };
    /** @type {?} */

    var elOffset = {
      height: elBcr.height || element.offsetHeight,
      width: elBcr.width || element.offsetWidth,
      top: elBcr.top + viewportOffset.top,
      bottom: elBcr.bottom + viewportOffset.top,
      left: elBcr.left + viewportOffset.left,
      right: elBcr.right + viewportOffset.left
    };

    if (round) {
      elOffset.height = Math.round(elOffset.height);
      elOffset.width = Math.round(elOffset.width);
      elOffset.top = Math.round(elOffset.top);
      elOffset.bottom = Math.round(elOffset.bottom);
      elOffset.left = Math.round(elOffset.left);
      elOffset.right = Math.round(elOffset.right);
    }

    return elOffset;
  };
  /**
   * @param {?} hostElement
   * @param {?} targetElement
   * @param {?} placement
   * @param {?=} appendToBody
   * @return {?}
   */


  Positioning.prototype.positionElements =
  /**
  * @param {?} hostElement
  * @param {?} targetElement
  * @param {?} placement
  * @param {?=} appendToBody
  * @return {?}
  */
  function (hostElement, targetElement, placement, appendToBody) {
    /** @type {?} */
    var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);
    /** @type {?} */

    var targetElStyles = this.getAllStyles(targetElement);
    /** @type {?} */

    var targetElBCR = targetElement.getBoundingClientRect();
    /** @type {?} */

    var placementPrimary = placement.split('-')[0] || 'top';
    /** @type {?} */

    var placementSecondary = placement.split('-')[1] || 'center';
    /** @type {?} */

    var targetElPosition = {
      'height': targetElBCR.height || targetElement.offsetHeight,
      'width': targetElBCR.width || targetElement.offsetWidth,
      'top': 0,
      'bottom': targetElBCR.height || targetElement.offsetHeight,
      'left': 0,
      'right': targetElBCR.width || targetElement.offsetWidth
    };

    switch (placementPrimary) {
      case 'top':
        targetElPosition.top = hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));
        break;

      case 'bottom':
        targetElPosition.top = hostElPosition.top + hostElPosition.height;
        break;

      case 'left':
        targetElPosition.left = hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));
        break;

      case 'right':
        targetElPosition.left = hostElPosition.left + hostElPosition.width;
        break;
    }

    switch (placementSecondary) {
      case 'top':
        targetElPosition.top = hostElPosition.top;
        break;

      case 'bottom':
        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;
        break;

      case 'left':
        targetElPosition.left = hostElPosition.left;
        break;

      case 'right':
        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;
        break;

      case 'center':
        if (placementPrimary === 'top' || placementPrimary === 'bottom') {
          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;
        } else {
          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;
        }

        break;
    }

    targetElPosition.top = Math.round(targetElPosition.top);
    targetElPosition.bottom = Math.round(targetElPosition.bottom);
    targetElPosition.left = Math.round(targetElPosition.left);
    targetElPosition.right = Math.round(targetElPosition.right);
    return targetElPosition;
  }; // get the available placements of the target element in the viewport depending on the host element
  // get the available placements of the target element in the viewport depending on the host element

  /**
   * @param {?} hostElement
   * @param {?} targetElement
   * @return {?}
   */


  Positioning.prototype.getAvailablePlacements = // get the available placements of the target element in the viewport depending on the host element

  /**
   * @param {?} hostElement
   * @param {?} targetElement
   * @return {?}
   */
  function (hostElement, targetElement) {
    /** @type {?} */
    var availablePlacements = [];
    /** @type {?} */

    var hostElemClientRect = hostElement.getBoundingClientRect();
    /** @type {?} */

    var targetElemClientRect = targetElement.getBoundingClientRect();
    /** @type {?} */

    var html = document.documentElement;
    /** @type {?} */

    var windowHeight = window.innerHeight || html.clientHeight;
    /** @type {?} */

    var windowWidth = window.innerWidth || html.clientWidth;
    /** @type {?} */

    var hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;
    /** @type {?} */

    var hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2; // left: check if target width can be placed between host left and viewport start and also height of target is
    // inside viewport

    if (targetElemClientRect.width < hostElemClientRect.left) {
      // check for left only
      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 && windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'left');
      } // check for left-top and left-bottom


      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);
    } // top: target height is less than host top


    if (targetElemClientRect.height < hostElemClientRect.top) {
      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 && windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'top');
      }

      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);
    } // right: check if target width can be placed between host right and viewport end and also height of target is
    // inside viewport


    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {
      // check for right only
      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 && windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'right');
      } // check for right-top and right-bottom


      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);
    } // bottom: check if there is enough space between host bottom and viewport end for target height


    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {
      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 && windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'bottom');
      }

      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);
    }

    return availablePlacements;
  };
  /**
   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom
   * primaryplacement: left|right
   * availablePlacementArr: array in which available placements to be set
   */

  /**
   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom
   * primaryplacement: left|right
   * availablePlacementArr: array in which available placements to be set
   * @param {?} hostElemClientRect
   * @param {?} targetElemClientRect
   * @param {?} primaryPlacement
   * @param {?} availablePlacementArr
   * @return {?}
   */


  Positioning.prototype.setSecondaryPlacementForLeftRight =
  /**
  * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom
  * primaryplacement: left|right
  * availablePlacementArr: array in which available placements to be set
  * @param {?} hostElemClientRect
  * @param {?} targetElemClientRect
  * @param {?} primaryPlacement
  * @param {?} availablePlacementArr
  * @return {?}
  */
  function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {
    /** @type {?} */
    var html = document.documentElement; // check for left-bottom

    if (targetElemClientRect.height <= hostElemClientRect.bottom) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');
    }

    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');
    }
  };
  /**
   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right
   * primaryplacement: top|bottom
   * availablePlacementArr: array in which available placements to be set
   */

  /**
   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right
   * primaryplacement: top|bottom
   * availablePlacementArr: array in which available placements to be set
   * @param {?} hostElemClientRect
   * @param {?} targetElemClientRect
   * @param {?} primaryPlacement
   * @param {?} availablePlacementArr
   * @return {?}
   */


  Positioning.prototype.setSecondaryPlacementForTopBottom =
  /**
  * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right
  * primaryplacement: top|bottom
  * availablePlacementArr: array in which available placements to be set
  * @param {?} hostElemClientRect
  * @param {?} targetElemClientRect
  * @param {?} primaryPlacement
  * @param {?} availablePlacementArr
  * @return {?}
  */
  function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {
    /** @type {?} */
    var html = document.documentElement; // check for left-bottom

    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');
    }

    if (targetElemClientRect.width <= hostElemClientRect.right) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');
    }
  };

  return Positioning;
}();
/** @type {?} */


var positionService = new Positioning();
/*
 * Accept the placement array and applies the appropriate placement dependent on the viewport.
 * Returns the applied placement.
 * In case of auto placement, placements are selected in order
 *   'top', 'bottom', 'left', 'right',
 *   'top-left', 'top-right',
 *   'bottom-left', 'bottom-right',
 *   'left-top', 'left-bottom',
 *   'right-top', 'right-bottom'.
 * */

/**
 * @param {?} hostElement
 * @param {?} targetElement
 * @param {?} placement
 * @param {?=} appendToBody
 * @return {?}
 */

function positionElements(hostElement, targetElement, placement, appendToBody) {
  var e_1, _a;
  /** @type {?} */


  var placementVals = Array.isArray(placement) ? placement : [
  /** @type {?} */
  placement]; // replace auto placement with other placements

  /** @type {?} */

  var hasAuto = placementVals.findIndex(function (val) {
    return val === 'auto';
  });

  if (hasAuto >= 0) {
    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'].forEach(function (obj) {
      if (placementVals.find(function (val) {
        return val.search('^' + obj) !== -1;
      }) == null) {
        placementVals.splice(hasAuto++, 1,
        /** @type {?} */
        obj);
      }
    });
  } // coordinates where to position

  /** @type {?} */


  var topVal = 0;
  /** @type {?} */

  var leftVal = 0;
  /** @type {?} */

  var appliedPlacement; // get available placements

  /** @type {?} */

  var availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);

  var _loop_1 = function _loop_1(item, index) {
    // check if passed placement is present in the available placement or otherwise apply the last placement in the
    // passed placement list
    if (availablePlacements.find(function (val) {
      return val === item;
    }) != null || placementVals.length === index + 1) {
      appliedPlacement =
      /** @type {?} */
      item;
      /** @type {?} */

      var pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);
      topVal = pos.top;
      leftVal = pos.left;
      return "break";
    }
  };

  try {
    // iterate over all the passed placements
    for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__values"])(toItemIndexes(placementVals)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var _d = _c.value,
          item = _d.item,
          index = _d.index;

      var state_1 = _loop_1(item, index);

      if (state_1 === "break") break;
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  targetElement.style.top = topVal + "px";
  targetElement.style.left = leftVal + "px";
  return appliedPlacement;
} // function to get index and item of an array

/**
 * @template T
 * @param {?} a
 * @return {?}
 */


function toItemIndexes(a) {
  return a.map(function (item, index) {
    return {
      item: item,
      index: index
    };
  });
}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @return {?}
 */


function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {
  return new NgbDateISOParserFormatter();
}
/**
 * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker
 * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation
 * to use an alternative format.
 * @abstract
 */


var NgbDateParserFormatter =
/** @class */
function () {
  function NgbDateParserFormatter() {}

  NgbDateParserFormatter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root',
      useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY
    }]
  }];
  /** @nocollapse */

  NgbDateParserFormatter.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY,
    token: NgbDateParserFormatter,
    providedIn: "root"
  });
  return NgbDateParserFormatter;
}();

var NgbDateISOParserFormatter =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbDateISOParserFormatter, _super);

  function NgbDateISOParserFormatter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @param {?} value
   * @return {?}
   */


  NgbDateISOParserFormatter.prototype.parse =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    if (value) {
      /** @type {?} */
      var dateParts = value.trim().split('-');

      if (dateParts.length === 1 && isNumber(dateParts[0])) {
        return {
          year: toInteger(dateParts[0]),
          month: null,
          day: null
        };
      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {
        return {
          year: toInteger(dateParts[0]),
          month: toInteger(dateParts[1]),
          day: null
        };
      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {
        return {
          year: toInteger(dateParts[0]),
          month: toInteger(dateParts[1]),
          day: toInteger(dateParts[2])
        };
      }
    }

    return null;
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDateISOParserFormatter.prototype.format =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return date ? date.year + "-" + (isNumber(date.month) ? padNumber(date.month) : '') + "-" + (isNumber(date.day) ? padNumber(date.day) : '') : '';
  };

  NgbDateISOParserFormatter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbDateISOParserFormatter;
}(NgbDateParserFormatter);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_DATEPICKER_VALUE_ACCESSOR$1 = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbInputDatepicker;
  }),
  multi: true
};
/** @type {?} */

var NGB_DATEPICKER_VALIDATOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALIDATORS"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbInputDatepicker;
  }),
  multi: true
};
/**
 * A directive that makes it possible to have datepickers on input fields.
 * Manages integration with the input field itself (data entry) and ngModel (validation etc.).
 */

var NgbInputDatepicker =
/** @class */
function () {
  function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _service, _calendar, _dateAdapter, _document) {
    var _this = this;

    this._parserFormatter = _parserFormatter;
    this._elRef = _elRef;
    this._vcRef = _vcRef;
    this._renderer = _renderer;
    this._cfr = _cfr;
    this._ngZone = _ngZone;
    this._service = _service;
    this._calendar = _calendar;
    this._dateAdapter = _dateAdapter;
    this._document = _document;
    this._closed$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    this._cRef = null;
    this._disabled = false;
    /**
     * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.
     *
     * By default the popup will close on both date selection and outside click. If the value is 'false' the popup has to
     * be closed manually via '.close()' or '.toggle()' methods. If the value is set to 'inside' the popup will close on
     * date selection only. For the 'outside' the popup will close only on the outside click.
     *
     * \@since 3.0.0
     */

    this.autoClose = true;
    /**
     * Placement of a datepicker popup accepts:
     *    "top", "top-left", "top-right", "bottom", "bottom-left", "bottom-right",
     *    "left", "left-top", "left-bottom", "right", "right-top", "right-bottom"
     * and array of above values.
     */

    this.placement = 'bottom-left';
    /**
     * An event fired when user selects a date using keyboard or mouse.
     * The payload of the event is currently selected NgbDate.
     *
     * \@since 1.1.1
     */

    this.dateSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    /**
     * An event fired when navigation happens and currently displayed month changes.
     * See NgbDatepickerNavigateEvent for the payload info.
     */

    this.navigate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

    this._onChange = function (_) {};

    this._onTouched = function () {};

    this._validatorChange = function () {};

    this._zoneSubscription = _ngZone.onStable.subscribe(function () {
      if (_this._cRef) {
        positionElements(_this._elRef.nativeElement, _this._cRef.location.nativeElement, _this.placement, _this.container === 'body');
      }
    });
  }

  Object.defineProperty(NgbInputDatepicker.prototype, "disabled", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._disabled;
    },
    set:
    /**
    * @param {?} value
    * @return {?}
    */
    function set(value) {
      this._disabled = value === '' || value && value !== 'false';

      if (this.isOpen()) {
        this._cRef.instance.setDisabledState(this._disabled);
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @param {?} fn
   * @return {?}
   */

  NgbInputDatepicker.prototype.registerOnChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this._onChange = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbInputDatepicker.prototype.registerOnTouched =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this._onTouched = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbInputDatepicker.prototype.registerOnValidatorChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this._validatorChange = fn;
  };
  /**
   * @param {?} isDisabled
   * @return {?}
   */


  NgbInputDatepicker.prototype.setDisabledState =
  /**
  * @param {?} isDisabled
  * @return {?}
  */
  function (isDisabled) {
    this.disabled = isDisabled;
  };
  /**
   * @param {?} c
   * @return {?}
   */


  NgbInputDatepicker.prototype.validate =
  /**
  * @param {?} c
  * @return {?}
  */
  function (c) {
    /** @type {?} */
    var value = c.value;

    if (value === null || value === undefined) {
      return null;
    }
    /** @type {?} */


    var ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));

    if (!this._calendar.isValid(ngbDate)) {
      return {
        'ngbDate': {
          invalid: c.value
        }
      };
    }

    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {
      return {
        'ngbDate': {
          requiredBefore: this.minDate
        }
      };
    }

    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {
      return {
        'ngbDate': {
          requiredAfter: this.maxDate
        }
      };
    }
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbInputDatepicker.prototype.writeValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));

    this._writeModelValue(this._model);
  };
  /**
   * @param {?} value
   * @param {?=} updateView
   * @return {?}
   */


  NgbInputDatepicker.prototype.manualDateChange =
  /**
  * @param {?} value
  * @param {?=} updateView
  * @return {?}
  */
  function (value, updateView) {
    if (updateView === void 0) {
      updateView = false;
    }
    /** @type {?} */


    var inputValueChanged = value !== this._inputValue;

    if (inputValueChanged) {
      this._inputValue = value;
      this._model = this._fromDateStruct(this._parserFormatter.parse(value));
    }

    if (inputValueChanged || !updateView) {
      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);
    }

    if (updateView && this._model) {
      this._writeModelValue(this._model);
    }
  };
  /**
   * @return {?}
   */


  NgbInputDatepicker.prototype.isOpen =
  /**
  * @return {?}
  */
  function () {
    return !!this._cRef;
  };
  /**
   * Opens the datepicker with the selected date indicated by the ngModel value.
   */

  /**
   * Opens the datepicker with the selected date indicated by the ngModel value.
   * @return {?}
   */


  NgbInputDatepicker.prototype.open =
  /**
  * Opens the datepicker with the selected date indicated by the ngModel value.
  * @return {?}
  */
  function () {
    var _this = this;

    if (!this.isOpen()) {
      /** @type {?} */
      var cf = this._cfr.resolveComponentFactory(NgbDatepicker);

      this._cRef = this._vcRef.createComponent(cf);

      this._applyPopupStyling(this._cRef.location.nativeElement);

      this._applyDatepickerInputs(this._cRef.instance);

      this._subscribeForDatepickerOutputs(this._cRef.instance);

      this._cRef.instance.ngOnInit();

      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model)); // date selection event handling


      this._cRef.instance.registerOnChange(function (selectedDate) {
        _this.writeValue(selectedDate);

        _this._onChange(selectedDate);
      });

      this._cRef.changeDetectorRef.detectChanges();

      this._cRef.instance.setDisabledState(this.disabled);

      if (this.container === 'body') {
        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);
      } // focus handling


      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$, true);

      this._cRef.instance.focus(); // closing on ESC and outside clicks


      if (this.autoClose) {
        this._ngZone.runOutsideAngular(function () {
          /** @type {?} */
          var escapes$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'keyup').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this._closed$), // tslint:disable-next-line:deprecation
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (e) {
            return e.which === Key.Escape;
          }));
          /** @type {?} */

          var outsideClicks$;

          if (_this.autoClose === true || _this.autoClose === 'outside') {
            // we don't know how the popup was opened, so if it was opened with a click,
            // we have to skip the first one to avoid closing it immediately

            /** @type {?} */
            var isOpening_1 = true;
            requestAnimationFrame(function () {
              return isOpening_1 = false;
            });
            outsideClicks$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'click').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this._closed$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) {
              return !isOpening_1 && _this._shouldCloseOnOutsideClick(event);
            }));
          } else {
            outsideClicks$ = rxjs__WEBPACK_IMPORTED_MODULE_3__["NEVER"];
          }

          Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["race"])([escapes$, outsideClicks$]).subscribe(function () {
            return _this._ngZone.run(function () {
              return _this.close();
            });
          });
        });
      }
    }
  };
  /**
   * Closes the datepicker popup.
   */

  /**
   * Closes the datepicker popup.
   * @return {?}
   */


  NgbInputDatepicker.prototype.close =
  /**
  * Closes the datepicker popup.
  * @return {?}
  */
  function () {
    if (this.isOpen()) {
      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));

      this._cRef = null;

      this._closed$.next();
    }
  };
  /**
   * Toggles the datepicker popup (opens when closed and closes when opened).
   */

  /**
   * Toggles the datepicker popup (opens when closed and closes when opened).
   * @return {?}
   */


  NgbInputDatepicker.prototype.toggle =
  /**
  * Toggles the datepicker popup (opens when closed and closes when opened).
  * @return {?}
  */
  function () {
    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  };
  /**
   * Navigates current view to provided date.
   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
   * If nothing or invalid date provided calendar will open current month.
   * Use 'startDate' input as an alternative
   */

  /**
   * Navigates current view to provided date.
   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
   * If nothing or invalid date provided calendar will open current month.
   * Use 'startDate' input as an alternative
   * @param {?=} date
   * @return {?}
   */


  NgbInputDatepicker.prototype.navigateTo =
  /**
  * Navigates current view to provided date.
  * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
  * If nothing or invalid date provided calendar will open current month.
  * Use 'startDate' input as an alternative
  * @param {?=} date
  * @return {?}
  */
  function (date) {
    if (this.isOpen()) {
      this._cRef.instance.navigateTo(date);
    }
  };
  /**
   * @return {?}
   */


  NgbInputDatepicker.prototype.onBlur =
  /**
  * @return {?}
  */
  function () {
    this._onTouched();
  };
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbInputDatepicker.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    if (changes['minDate'] || changes['maxDate']) {
      this._validatorChange();
    }
  };
  /**
   * @return {?}
   */


  NgbInputDatepicker.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this.close();

    this._zoneSubscription.unsubscribe();
  };
  /**
   * @param {?} datepickerInstance
   * @return {?}
   */


  NgbInputDatepicker.prototype._applyDatepickerInputs =
  /**
  * @param {?} datepickerInstance
  * @return {?}
  */
  function (datepickerInstance) {
    var _this = this;

    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers'].forEach(function (optionName) {
      if (_this[optionName] !== undefined) {
        datepickerInstance[optionName] = _this[optionName];
      }
    });
    datepickerInstance.startDate = this.startDate || this._model;
  };
  /**
   * @param {?} nativeElement
   * @return {?}
   */


  NgbInputDatepicker.prototype._applyPopupStyling =
  /**
  * @param {?} nativeElement
  * @return {?}
  */
  function (nativeElement) {
    this._renderer.addClass(nativeElement, 'dropdown-menu');

    this._renderer.setStyle(nativeElement, 'padding', '0');

    this._renderer.addClass(nativeElement, 'show');
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbInputDatepicker.prototype._shouldCloseOnOutsideClick =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    return ![this._elRef.nativeElement, this._cRef.location.nativeElement].some(function (el) {
      return el.contains(event.target);
    });
  };
  /**
   * @param {?} datepickerInstance
   * @return {?}
   */


  NgbInputDatepicker.prototype._subscribeForDatepickerOutputs =
  /**
  * @param {?} datepickerInstance
  * @return {?}
  */
  function (datepickerInstance) {
    var _this = this;

    datepickerInstance.navigate.subscribe(function (date) {
      return _this.navigate.emit(date);
    });
    datepickerInstance.select.subscribe(function (date) {
      _this.dateSelect.emit(date);

      if (_this.autoClose === true || _this.autoClose === 'inside') {
        _this.close();
      }
    });
  };
  /**
   * @param {?} model
   * @return {?}
   */


  NgbInputDatepicker.prototype._writeModelValue =
  /**
  * @param {?} model
  * @return {?}
  */
  function (model) {
    /** @type {?} */
    var value = this._parserFormatter.format(model);

    this._inputValue = value;

    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);

    if (this.isOpen()) {
      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));

      this._onTouched();
    }
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbInputDatepicker.prototype._fromDateStruct =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;
    return this._calendar.isValid(ngbDate) ? ngbDate : null;
  };

  NgbInputDatepicker.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'input[ngbDatepicker]',
      exportAs: 'ngbDatepicker',
      host: {
        '(input)': 'manualDateChange($event.target.value)',
        '(change)': 'manualDateChange($event.target.value, true)',
        '(blur)': 'onBlur()',
        '[disabled]': 'disabled'
      },
      providers: [NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]
    }]
  }];
  /** @nocollapse */

  NgbInputDatepicker.ctorParameters = function () {
    return [{
      type: NgbDateParserFormatter
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
    }, {
      type: NgbDatepickerService
    }, {
      type: NgbCalendar
    }, {
      type: NgbDateAdapter
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }];
  };

  NgbInputDatepicker.propDecorators = {
    autoClose: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    dayTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    dayTemplateData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    displayMonths: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    firstDayOfWeek: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    footerTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    markDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    minDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    maxDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    navigation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    outsideDays: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    placement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showWeekdays: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showWeekNumbers: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    startDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    dateSelect: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    navigate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbInputDatepicker;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbDatepickerDayView =
/** @class */
function () {
  function NgbDatepickerDayView(i18n) {
    this.i18n = i18n;
  }
  /**
   * @return {?}
   */


  NgbDatepickerDayView.prototype.isMuted =
  /**
  * @return {?}
  */
  function () {
    return !this.selected && (this.date.month !== this.currentMonth || this.disabled);
  };

  NgbDatepickerDayView.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: '[ngbDatepickerDayView]',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      host: {
        'class': 'btn-light',
        '[class.bg-primary]': 'selected',
        '[class.text-white]': 'selected',
        '[class.text-muted]': 'isMuted()',
        '[class.outside]': 'isMuted()',
        '[class.active]': 'focused'
      },
      template: "{{ i18n.getDayNumerals(date) }}",
      styles: ["[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}"]
    }]
  }];
  /** @nocollapse */

  NgbDatepickerDayView.ctorParameters = function () {
    return [{
      type: NgbDatepickerI18n
    }];
  };

  NgbDatepickerDayView.propDecorators = {
    currentMonth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    date: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    focused: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbDatepickerDayView;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbDatepickerNavigationSelect =
/** @class */
function () {
  function NgbDatepickerNavigationSelect(i18n) {
    this.i18n = i18n;
    this.select = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
  }
  /**
   * @param {?} month
   * @return {?}
   */


  NgbDatepickerNavigationSelect.prototype.changeMonth =
  /**
  * @param {?} month
  * @return {?}
  */
  function (month) {
    this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));
  };
  /**
   * @param {?} year
   * @return {?}
   */


  NgbDatepickerNavigationSelect.prototype.changeYear =
  /**
  * @param {?} year
  * @return {?}
  */
  function (year) {
    this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));
  };

  NgbDatepickerNavigationSelect.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-datepicker-navigation-select',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      template: "\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  ",
      styles: ["ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}"]
    }]
  }];
  /** @nocollapse */

  NgbDatepickerNavigationSelect.ctorParameters = function () {
    return [{
      type: NgbDatepickerI18n
    }];
  };

  NgbDatepickerNavigationSelect.propDecorators = {
    date: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    months: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    years: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    select: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbDatepickerNavigationSelect;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @abstract
 */


var NgbCalendarHijri =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbCalendarHijri, _super);

  function NgbCalendarHijri() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @return {?}
   */


  NgbCalendarHijri.prototype.getDaysPerWeek =
  /**
  * @return {?}
  */
  function () {
    return 7;
  };
  /**
   * @return {?}
   */


  NgbCalendarHijri.prototype.getMonths =
  /**
  * @return {?}
  */
  function () {
    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
  };
  /**
   * @return {?}
   */


  NgbCalendarHijri.prototype.getWeeksPerMonth =
  /**
  * @return {?}
  */
  function () {
    return 6;
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarHijri.prototype.getNext =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    date = new NgbDate(date.year, date.month, date.day);

    switch (period) {
      case 'y':
        date = this._setYear(date, date.year + number);
        date.month = 1;
        date.day = 1;
        return date;

      case 'm':
        date = this._setMonth(date, date.month + number);
        date.day = 1;
        return date;

      case 'd':
        return this._setDay(date, date.day + number);

      default:
        return date;
    }
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarHijri.prototype.getPrev =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    return this.getNext(date, period, -number);
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarHijri.prototype.getWeekday =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7

    return day === 0 ? 7 : day;
  };
  /**
   * @param {?} week
   * @param {?} firstDayOfWeek
   * @return {?}
   */


  NgbCalendarHijri.prototype.getWeekNumber =
  /**
  * @param {?} week
  * @param {?} firstDayOfWeek
  * @return {?}
  */
  function (week, firstDayOfWeek) {
    // in JS Date Sun=0, in ISO 8601 Sun=7
    if (firstDayOfWeek === 7) {
      firstDayOfWeek = 0;
    }
    /** @type {?} */


    var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;
    /** @type {?} */

    var date = week[thursdayIndex];
    /** @type {?} */

    var jsDate = this.toGregorian(date);
    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday
    // Thursday

    /** @type {?} */

    var time = jsDate.getTime();
    /** @type {?} */

    var MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));
    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;
  };
  /**
   * @return {?}
   */


  NgbCalendarHijri.prototype.getToday =
  /**
  * @return {?}
  */
  function () {
    return this.fromGregorian(new Date());
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarHijri.prototype.isValid =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());
  };
  /**
   * @param {?} date
   * @param {?} day
   * @return {?}
   */


  NgbCalendarHijri.prototype._setDay =
  /**
  * @param {?} date
  * @param {?} day
  * @return {?}
  */
  function (date, day) {
    day = +day;
    /** @type {?} */

    var mDays = this.getDaysPerMonth(date.month, date.year);

    if (day <= 0) {
      while (day <= 0) {
        date = this._setMonth(date, date.month - 1);
        mDays = this.getDaysPerMonth(date.month, date.year);
        day += mDays;
      }
    } else if (day > mDays) {
      while (day > mDays) {
        day -= mDays;
        date = this._setMonth(date, date.month + 1);
        mDays = this.getDaysPerMonth(date.month, date.year);
      }
    }

    date.day = day;
    return date;
  };
  /**
   * @param {?} date
   * @param {?} month
   * @return {?}
   */


  NgbCalendarHijri.prototype._setMonth =
  /**
  * @param {?} date
  * @param {?} month
  * @return {?}
  */
  function (date, month) {
    month = +month;
    date.year = date.year + Math.floor((month - 1) / 12);
    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;
    return date;
  };
  /**
   * @param {?} date
   * @param {?} year
   * @return {?}
   */


  NgbCalendarHijri.prototype._setYear =
  /**
  * @param {?} date
  * @param {?} year
  * @return {?}
  */
  function (date, year) {
    date.year = +year;
    return date;
  };

  NgbCalendarHijri.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbCalendarHijri;
}(NgbCalendar);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Checks if islamic year is a leap year
 * @param {?} hYear
 * @return {?}
 */


function isIslamicLeapYear(hYear) {
  return (14 + 11 * hYear) % 30 < 11;
}
/**
 * Checks if gregorian years is a leap year
 * @param {?} gDate
 * @return {?}
 */


function isGregorianLeapYear(gDate) {
  /** @type {?} */
  var year = gDate.getFullYear();
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
/**
 * Returns the start of Hijri Month.
 * `hMonth` is 0 for Muharram, 1 for Safar, etc.
 * `hYear` is any Hijri hYear.
 * @param {?} hYear
 * @param {?} hMonth
 * @return {?}
 */


function getIslamicMonthStart(hYear, hMonth) {
  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);
}
/**
 * Returns the start of Hijri year.
 * `year` is any Hijri year.
 * @param {?} year
 * @return {?}
 */


function getIslamicYearStart(year) {
  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);
}
/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */


function mod(a, b) {
  return a - b * Math.floor(a / b);
}
/**
 * The civil calendar is one type of Hijri calendars used in islamic countries.
 * Uses a fixed cycle of alternating 29- and 30-day months,
 * with a leap day added to the last month of 11 out of every 30 years.
 * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types
 * All the calculations here are based on the equations from "Calendrical Calculations" By Edward M. Reingold, Nachum
 * Dershowitz.
 * @type {?}
 */


var GREGORIAN_EPOCH = 1721425.5;
/** @type {?} */

var ISLAMIC_EPOCH = 1948439.5;

var NgbCalendarIslamicCivil =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbCalendarIslamicCivil, _super);

  function NgbCalendarIslamicCivil() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.
   * `gDate` is a JS Date to be converted to Hijri.
   */

  /**
   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.
   * `gDate` is a JS Date to be converted to Hijri.
   * @param {?} gDate
   * @return {?}
   */


  NgbCalendarIslamicCivil.prototype.fromGregorian =
  /**
  * Returns the equivalent islamic(civil) date value for a give input Gregorian date.
  * `gDate` is a JS Date to be converted to Hijri.
  * @param {?} gDate
  * @return {?}
  */
  function (gDate) {
    /** @type {?} */
    var gYear = gDate.getFullYear();
    /** @type {?} */

    var gMonth = gDate.getMonth();
    /** @type {?} */

    var gDay = gDate.getDate();
    /** @type {?} */

    var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);
    julianDay = Math.floor(julianDay) + 0.5;
    /** @type {?} */

    var days = julianDay - ISLAMIC_EPOCH;
    /** @type {?} */

    var hYear = Math.floor((30 * days + 10646) / 10631.0);
    /** @type {?} */

    var hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);
    hMonth = Math.min(hMonth, 11);
    /** @type {?} */

    var hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;
    return new NgbDate(hYear, hMonth + 1, hDay);
  };
  /**
   * Returns the equivalent JS date value for a give input islamic(civil) date.
   * `hDate` is an islamic(civil) date to be converted to Gregorian.
   */

  /**
   * Returns the equivalent JS date value for a give input islamic(civil) date.
   * `hDate` is an islamic(civil) date to be converted to Gregorian.
   * @param {?} hDate
   * @return {?}
   */


  NgbCalendarIslamicCivil.prototype.toGregorian =
  /**
  * Returns the equivalent JS date value for a give input islamic(civil) date.
  * `hDate` is an islamic(civil) date to be converted to Gregorian.
  * @param {?} hDate
  * @return {?}
  */
  function (hDate) {
    /** @type {?} */
    var hYear = hDate.year;
    /** @type {?} */

    var hMonth = hDate.month - 1;
    /** @type {?} */

    var hDay = hDate.day;
    /** @type {?} */

    var julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;
    /** @type {?} */

    var wjd = Math.floor(julianDay - 0.5) + 0.5;
    /** @type {?} */

    var depoch = wjd - GREGORIAN_EPOCH;
    /** @type {?} */

    var quadricent = Math.floor(depoch / 146097);
    /** @type {?} */

    var dqc = mod(depoch, 146097);
    /** @type {?} */

    var cent = Math.floor(dqc / 36524);
    /** @type {?} */

    var dcent = mod(dqc, 36524);
    /** @type {?} */

    var quad = Math.floor(dcent / 1461);
    /** @type {?} */

    var dquad = mod(dcent, 1461);
    /** @type {?} */

    var yindex = Math.floor(dquad / 365);
    /** @type {?} */

    var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;

    if (!(cent === 4 || yindex === 4)) {
      year++;
    }
    /** @type {?} */


    var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);
    /** @type {?} */

    var yearday = wjd - gYearStart;
    /** @type {?} */

    var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);
    /** @type {?} */

    var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;
    /** @type {?} */

    var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);
    /** @type {?} */

    var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) + 1);
    /** @type {?} */

    var day = wjd - tjd2 + 1;
    return new Date(year, month - 1, day);
  };
  /**
   * Returns the number of days in a specific Hijri month.
   * `month` is 1 for Muharram, 2 for Safar, etc.
   * `year` is any Hijri year.
   */

  /**
   * Returns the number of days in a specific Hijri month.
   * `month` is 1 for Muharram, 2 for Safar, etc.
   * `year` is any Hijri year.
   * @param {?} month
   * @param {?} year
   * @return {?}
   */


  NgbCalendarIslamicCivil.prototype.getDaysPerMonth =
  /**
  * Returns the number of days in a specific Hijri month.
  * `month` is 1 for Muharram, 2 for Safar, etc.
  * `year` is any Hijri year.
  * @param {?} month
  * @param {?} year
  * @return {?}
  */
  function (month, year) {
    year = year + Math.floor(month / 13);
    month = (month - 1) % 12 + 1;
    /** @type {?} */

    var length = 29 + month % 2;

    if (month === 12 && isIslamicLeapYear(year)) {
      length++;
    }

    return length;
  };

  NgbCalendarIslamicCivil.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbCalendarIslamicCivil;
}(NgbCalendarHijri);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Umalqura calendar is one type of Hijri calendars used in islamic countries.
 * This Calendar is used by Saudi Arabia for administrative purpose.
 * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.
 * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types
 * @type {?}
 */


var GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);
/** @type {?} */

var GREGORIAN_LAST_DATE = new Date(2174, 10, 25);
/** @type {?} */

var HIJRI_BEGIN = 1300;
/** @type {?} */

var HIJRI_END = 1600;
/** @type {?} */

var ONE_DAY = 1000 * 60 * 60 * 24;
/** @type {?} */

var MONTH_LENGTH = [// 1300-1304
'101010101010', '110101010100', '111011001001', '011011010100', '011011101010', // 1305-1309
'001101101100', '101010101101', '010101010101', '011010101001', '011110010010', // 1310-1314
'101110101001', '010111010100', '101011011010', '010101011100', '110100101101', // 1315-1319
'011010010101', '011101001010', '101101010100', '101101101010', '010110101101', // 1320-1324
'010010101110', '101001001111', '010100010111', '011010001011', '011010100101', // 1325-1329
'101011010101', '001011010110', '100101011011', '010010011101', '101001001101', // 1330-1334
'110100100110', '110110010101', '010110101100', '100110110110', '001010111010', // 1335-1339
'101001011011', '010100101011', '101010010101', '011011001010', '101011101001', // 1340-1344
'001011110100', '100101110110', '001010110110', '100101010110', '101011001010', // 1345-1349
'101110100100', '101111010010', '010111011001', '001011011100', '100101101101', // 1350-1354
'010101001101', '101010100101', '101101010010', '101110100101', '010110110100', // 1355-1359
'100110110110', '010101010111', '001010010111', '010101001011', '011010100011', // 1360-1364
'011101010010', '101101100101', '010101101010', '101010101011', '010100101011', // 1365-1369
'110010010101', '110101001010', '110110100101', '010111001010', '101011010110', // 1370-1374
'100101010111', '010010101011', '100101001011', '101010100101', '101101010010', // 1375-1379
'101101101010', '010101110101', '001001110110', '100010110111', '010001011011', // 1380-1384
'010101010101', '010110101001', '010110110100', '100111011010', '010011011101', // 1385-1389
'001001101110', '100100110110', '101010101010', '110101010100', '110110110010', // 1390-1394
'010111010101', '001011011010', '100101011011', '010010101011', '101001010101', // 1395-1399
'101101001001', '101101100100', '101101110001', '010110110100', '101010110101', // 1400-1404
'101001010101', '110100100101', '111010010010', '111011001001', '011011010100', // 1405-1409
'101011101001', '100101101011', '010010101011', '101010010011', '110101001001', // 1410-1414
'110110100100', '110110110010', '101010111001', '010010111010', '101001011011', // 1415-1419
'010100101011', '101010010101', '101100101010', '101101010101', '010101011100', // 1420-1424
'010010111101', '001000111101', '100100011101', '101010010101', '101101001010', // 1425-1429
'101101011010', '010101101101', '001010110110', '100100111011', '010010011011', // 1430-1434
'011001010101', '011010101001', '011101010100', '101101101010', '010101101100', // 1435-1439
'101010101101', '010101010101', '101100101001', '101110010010', '101110101001', // 1440-1444
'010111010100', '101011011010', '010101011010', '101010101011', '010110010101', // 1445-1449
'011101001001', '011101100100', '101110101010', '010110110101', '001010110110', // 1450-1454
'101001010110', '111001001101', '101100100101', '101101010010', '101101101010', // 1455-1459
'010110101101', '001010101110', '100100101111', '010010010111', '011001001011', // 1460-1464
'011010100101', '011010101100', '101011010110', '010101011101', '010010011101', // 1465-1469
'101001001101', '110100010110', '110110010101', '010110101010', '010110110101', // 1470-1474
'001011011010', '100101011011', '010010101101', '010110010101', '011011001010', // 1475-1479
'011011100100', '101011101010', '010011110101', '001010110110', '100101010110', // 1480-1484
'101010101010', '101101010100', '101111010010', '010111011001', '001011101010', // 1485-1489
'100101101101', '010010101101', '101010010101', '101101001010', '101110100101', // 1490-1494
'010110110010', '100110110101', '010011010110', '101010010111', '010101000111', // 1495-1499
'011010010011', '011101001001', '101101010101', '010101101010', '101001101011', // 1500-1504
'010100101011', '101010001011', '110101000110', '110110100011', '010111001010', // 1505-1509
'101011010110', '010011011011', '001001101011', '100101001011', '101010100101', // 1510-1514
'101101010010', '101101101001', '010101110101', '000101110110', '100010110111', // 1515-1519
'001001011011', '010100101011', '010101100101', '010110110100', '100111011010', // 1520-1524
'010011101101', '000101101101', '100010110110', '101010100110', '110101010010', // 1525-1529
'110110101001', '010111010100', '101011011010', '100101011011', '010010101011', // 1530-1534
'011001010011', '011100101001', '011101100010', '101110101001', '010110110010', // 1535-1539
'101010110101', '010101010101', '101100100101', '110110010010', '111011001001', // 1540-1544
'011011010010', '101011101001', '010101101011', '010010101011', '101001010101', // 1545-1549
'110100101001', '110101010100', '110110101010', '100110110101', '010010111010', // 1550-1554
'101000111011', '010010011011', '101001001101', '101010101010', '101011010101', // 1555-1559
'001011011010', '100101011101', '010001011110', '101000101110', '110010011010', // 1560-1564
'110101010101', '011010110010', '011010111001', '010010111010', '101001011101', // 1565-1569
'010100101101', '101010010101', '101101010010', '101110101000', '101110110100', // 1570-1574
'010110111001', '001011011010', '100101011010', '101101001010', '110110100100', // 1575-1579
'111011010001', '011011101000', '101101101010', '010101101101', '010100110101', // 1580-1584
'011010010101', '110101001010', '110110101000', '110111010100', '011011011010', // 1585-1589
'010101011011', '001010011101', '011000101011', '101100010101', '101101001010', // 1590-1594
'101110010101', '010110101010', '101010101110', '100100101110', '110010001111', // 1595-1599
'010100100111', '011010010101', '011010101010', '101011010110', '010101011101', // 1600
'001010011101'];
/**
 * @param {?} date1
 * @param {?} date2
 * @return {?}
 */

function getDaysDiff(date1, date2) {
  /** @type {?} */
  var diff = Math.abs(date1.getTime() - date2.getTime());
  return Math.round(diff / ONE_DAY);
}

var NgbCalendarIslamicUmalqura =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbCalendarIslamicUmalqura, _super);

  function NgbCalendarIslamicUmalqura() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.
  * `gdate` is s JS Date to be converted to Hijri.
  */

  /**
   * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.
   * `gdate` is s JS Date to be converted to Hijri.
   * @param {?} gDate
   * @return {?}
   */


  NgbCalendarIslamicUmalqura.prototype.fromGregorian =
  /**
  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.
  * `gdate` is s JS Date to be converted to Hijri.
  * @param {?} gDate
  * @return {?}
  */
  function (gDate) {
    /** @type {?} */
    var hDay = 1;
    /** @type {?} */

    var hMonth = 0;
    /** @type {?} */

    var hYear = 1300;
    /** @type {?} */

    var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);

    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {
      /** @type {?} */
      var year = 1300;

      for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {
        for (var j = 0; j < 12; j++) {
          /** @type {?} */
          var numOfDays = +MONTH_LENGTH[i][j] + 29;

          if (daysDiff <= numOfDays) {
            hDay = daysDiff + 1;

            if (hDay > numOfDays) {
              hDay = 1;
              j++;
            }

            if (j > 11) {
              j = 0;
              year++;
            }

            hMonth = j;
            hYear = year;
            return new NgbDate(hYear, hMonth + 1, hDay);
          }

          daysDiff = daysDiff - numOfDays;
        }
      }
    } else {
      return _super.prototype.fromGregorian.call(this, gDate);
    }
  };
  /**
  * Converts the current Hijri date to Gregorian.
  */

  /**
   * Converts the current Hijri date to Gregorian.
   * @param {?} hDate
   * @return {?}
   */


  NgbCalendarIslamicUmalqura.prototype.toGregorian =
  /**
  * Converts the current Hijri date to Gregorian.
  * @param {?} hDate
  * @return {?}
  */
  function (hDate) {
    /** @type {?} */
    var hYear = hDate.year;
    /** @type {?} */

    var hMonth = hDate.month - 1;
    /** @type {?} */

    var hDay = hDate.day;
    /** @type {?} */

    var gDate = new Date(GREGORIAN_FIRST_DATE);
    /** @type {?} */

    var dayDiff = hDay - 1;

    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {
      for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {
        for (var m = 0; m < 12; m++) {
          dayDiff += +MONTH_LENGTH[y][m] + 29;
        }
      }

      for (var m = 0; m < hMonth; m++) {
        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;
      }

      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);
    } else {
      gDate = _super.prototype.toGregorian.call(this, hDate);
    }

    return gDate;
  };
  /**
  * Returns the number of days in a specific Hijri hMonth.
  * `hMonth` is 1 for Muharram, 2 for Safar, etc.
  * `hYear` is any Hijri hYear.
  */

  /**
   * Returns the number of days in a specific Hijri hMonth.
   * `hMonth` is 1 for Muharram, 2 for Safar, etc.
   * `hYear` is any Hijri hYear.
   * @param {?} hMonth
   * @param {?} hYear
   * @return {?}
   */


  NgbCalendarIslamicUmalqura.prototype.getDaysPerMonth =
  /**
  * Returns the number of days in a specific Hijri hMonth.
  * `hMonth` is 1 for Muharram, 2 for Safar, etc.
  * `hYear` is any Hijri hYear.
  * @param {?} hMonth
  * @param {?} hYear
  * @return {?}
  */
  function (hMonth, hYear) {
    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {
      /** @type {?} */
      var pos = hYear - HIJRI_BEGIN;
      return +MONTH_LENGTH[pos][hMonth - 1] + 29;
    }

    return _super.prototype.getDaysPerMonth.call(this, hMonth, hYear);
  };

  NgbCalendarIslamicUmalqura.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbCalendarIslamicUmalqura;
}(NgbCalendarIslamicCivil);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Returns the equivalent JS date value for a give input Jalali date.
 * `jalaliDate` is an Jalali date to be converted to Gregorian.
 * @param {?} jalaliDate
 * @return {?}
 */


function toGregorian(jalaliDate) {
  /** @type {?} */
  var jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);
  /** @type {?} */

  var date = julianToGregorian(jdn);
  date.setHours(6, 30, 3, 200);
  return date;
}
/**
 * Returns the equivalent jalali date value for a give input Gregorian date.
 * `gdate` is a JS Date to be converted to jalali.
 * utc to local
 * @param {?} gdate
 * @return {?}
 */


function fromGregorian(gdate) {
  /** @type {?} */
  var g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());
  return julianToJalali(g2d);
}
/**
 * @param {?} date
 * @param {?} yearValue
 * @return {?}
 */


function setJalaliYear(date, yearValue) {
  date.year = +yearValue;
  return date;
}
/**
 * @param {?} date
 * @param {?} month
 * @return {?}
 */


function setJalaliMonth(date, month) {
  month = +month;
  date.year = date.year + Math.floor((month - 1) / 12);
  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;
  return date;
}
/**
 * @param {?} date
 * @param {?} day
 * @return {?}
 */


function setJalaliDay(date, day) {
  /** @type {?} */
  var mDays = getDaysPerMonth(date.month, date.year);

  if (day <= 0) {
    while (day <= 0) {
      date = setJalaliMonth(date, date.month - 1);
      mDays = getDaysPerMonth(date.month, date.year);
      day += mDays;
    }
  } else if (day > mDays) {
    while (day > mDays) {
      day -= mDays;
      date = setJalaliMonth(date, date.month + 1);
      mDays = getDaysPerMonth(date.month, date.year);
    }
  }

  date.day = day;
  return date;
}
/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */


function mod$1(a, b) {
  return a - b * Math.floor(a / b);
}
/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */


function div(a, b) {
  return Math.trunc(a / b);
}
/*
 This function determines if the Jalali (Persian) year is
 leap (366-day long) or is the common year (365 days), and
 finds the day in March (Gregorian calendar) of the first
 day of the Jalali year (jalaliYear).
 @param jalaliYear Jalali calendar year (-61 to 3177)
 @return
 leap: number of years since the last leap year (0 to 4)
 gYear: Gregorian year of the beginning of Jalali year
 march: the March day of Farvardin the 1st (1st day of jalaliYear)
 @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm
 @see: http://www.fourmilab.ch/documents/calendar/
 */

/**
 * @param {?} jalaliYear
 * @return {?}
 */


function jalCal(jalaliYear) {
  // Jalali years starting the 33-year rule.

  /** @type {?} */
  var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];
  /** @type {?} */

  var breaksLength = breaks.length;
  /** @type {?} */

  var gYear = jalaliYear + 621;
  /** @type {?} */

  var leapJ = -14;
  /** @type {?} */

  var jp = breaks[0];

  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {
    throw new Error('Invalid Jalali year ' + jalaliYear);
  } // Find the limiting years for the Jalali year jalaliYear.

  /** @type {?} */


  var jump;

  for (var i = 1; i < breaksLength; i += 1) {
    /** @type {?} */
    var jm = breaks[i];
    jump = jm - jp;

    if (jalaliYear < jm) {
      break;
    }

    leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);
    jp = jm;
  }
  /** @type {?} */


  var n = jalaliYear - jp; // Find the number of leap years from AD 621 to the beginning
  // of the current Jalali year in the Persian calendar.

  leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);

  if (mod$1(jump, 33) === 4 && jump - n === 4) {
    leapJ += 1;
  } // And the same in the Gregorian calendar (until the year gYear).

  /** @type {?} */


  var leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150; // Determine the Gregorian date of Farvardin the 1st.

  /** @type {?} */

  var march = 20 + leapJ - leapG; // Find how many years have passed since the last leap year.

  if (jump - n < 6) {
    n = n - jump + div(jump + 4, 33) * 33;
  }
  /** @type {?} */


  var leap = mod$1(mod$1(n + 1, 33) - 1, 4);

  if (leap === -1) {
    leap = 4;
  }

  return {
    leap: leap,
    gy: gYear,
    march: march
  };
}
/*
 Calculates Gregorian and Julian calendar dates from the Julian Day number
 (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both
 calendars) to some millions years ahead of the present.
 @param jdn Julian Day number
 @return
 gYear: Calendar year (years BC numbered 0, -1, -2, ...)
 gMonth: Calendar month (1 to 12)
 gDay: Calendar day of the month M (1 to 28/29/30/31)
 */

/**
 * @param {?} julianDayNumber
 * @return {?}
 */


function julianToGregorian(julianDayNumber) {
  /** @type {?} */
  var j = 4 * julianDayNumber + 139361631;
  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;
  /** @type {?} */

  var i = div(mod$1(j, 1461), 4) * 5 + 308;
  /** @type {?} */

  var gDay = div(mod$1(i, 153), 5) + 1;
  /** @type {?} */

  var gMonth = mod$1(div(i, 153), 12) + 1;
  /** @type {?} */

  var gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);
  return new Date(gYear, gMonth - 1, gDay);
}
/*
 Converts a date of the Jalali calendar to the Julian Day number.
 @param jy Jalali year (1 to 3100)
 @param jm Jalali month (1 to 12)
 @param jd Jalali day (1 to 29/31)
 @return Julian Day number
 */

/**
 * @param {?} gy
 * @param {?} gm
 * @param {?} gd
 * @return {?}
 */


function gregorianToJulian(gy, gm, gd) {
  /** @type {?} */
  var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;
  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;
  return d;
}
/*
 Converts the Julian Day number to a date in the Jalali calendar.
 @param julianDayNumber Julian Day number
 @return
 jalaliYear: Jalali year (1 to 3100)
 jalaliMonth: Jalali month (1 to 12)
 jalaliDay: Jalali day (1 to 29/31)
 */

/**
 * @param {?} julianDayNumber
 * @return {?}
 */


function julianToJalali(julianDayNumber) {
  /** @type {?} */
  var gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).
  ;
  /** @type {?} */

  var jalaliYear = gy - 621;
  /** @type {?} */

  var r = jalCal(jalaliYear);
  /** @type {?} */

  var gregorianDay = gregorianToJulian(gy, 3, r.march);
  /** @type {?} */

  var jalaliDay;
  /** @type {?} */

  var jalaliMonth;
  /** @type {?} */

  var numberOfDays; // Find number of days that passed since 1 Farvardin.

  numberOfDays = julianDayNumber - gregorianDay;

  if (numberOfDays >= 0) {
    if (numberOfDays <= 185) {
      // The first 6 months.
      jalaliMonth = 1 + div(numberOfDays, 31);
      jalaliDay = mod$1(numberOfDays, 31) + 1;
      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);
    } else {
      // The remaining months.
      numberOfDays -= 186;
    }
  } else {
    // Previous Jalali year.
    jalaliYear -= 1;
    numberOfDays += 179;

    if (r.leap === 1) {
      numberOfDays += 1;
    }
  }

  jalaliMonth = 7 + div(numberOfDays, 30);
  jalaliDay = mod$1(numberOfDays, 30) + 1;
  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);
}
/*
 Converts a date of the Jalali calendar to the Julian Day number.
 @param jYear Jalali year (1 to 3100)
 @param jMonth Jalali month (1 to 12)
 @param jDay Jalali day (1 to 29/31)
 @return Julian Day number
 */

/**
 * @param {?} jYear
 * @param {?} jMonth
 * @param {?} jDay
 * @return {?}
 */


function jalaliToJulian(jYear, jMonth, jDay) {
  /** @type {?} */
  var r = jalCal(jYear);
  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;
}
/**
 * Returns the number of days in a specific jalali month.
 * @param {?} month
 * @param {?} year
 * @return {?}
 */


function getDaysPerMonth(month, year) {
  if (month <= 6) {
    return 31;
  }

  if (month <= 11) {
    return 30;
  }

  if (jalCal(year).leap === 0) {
    return 30;
  }

  return 29;
}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbCalendarPersian =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbCalendarPersian, _super);

  function NgbCalendarPersian() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @return {?}
   */


  NgbCalendarPersian.prototype.getDaysPerWeek =
  /**
  * @return {?}
  */
  function () {
    return 7;
  };
  /**
   * @return {?}
   */


  NgbCalendarPersian.prototype.getMonths =
  /**
  * @return {?}
  */
  function () {
    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
  };
  /**
   * @return {?}
   */


  NgbCalendarPersian.prototype.getWeeksPerMonth =
  /**
  * @return {?}
  */
  function () {
    return 6;
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarPersian.prototype.getNext =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    date = new NgbDate(date.year, date.month, date.day);

    switch (period) {
      case 'y':
        date = setJalaliYear(date, date.year + number);
        date.month = 1;
        date.day = 1;
        return date;

      case 'm':
        date = setJalaliMonth(date, date.month + number);
        date.day = 1;
        return date;

      case 'd':
        return setJalaliDay(date, date.day + number);

      default:
        return date;
    }
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarPersian.prototype.getPrev =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    return this.getNext(date, period, -number);
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarPersian.prototype.getWeekday =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var day = toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7

    return day === 0 ? 7 : day;
  };
  /**
   * @param {?} week
   * @param {?} firstDayOfWeek
   * @return {?}
   */


  NgbCalendarPersian.prototype.getWeekNumber =
  /**
  * @param {?} week
  * @param {?} firstDayOfWeek
  * @return {?}
  */
  function (week, firstDayOfWeek) {
    // in JS Date Sun=0, in ISO 8601 Sun=7
    if (firstDayOfWeek === 7) {
      firstDayOfWeek = 0;
    }
    /** @type {?} */


    var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;
    /** @type {?} */

    var date = week[thursdayIndex];
    /** @type {?} */

    var jsDate = toGregorian(date);
    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday
    // Thursday

    /** @type {?} */

    var time = jsDate.getTime();
    /** @type {?} */

    var startDate = toGregorian(new NgbDate(date.year, 1, 1));
    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;
  };
  /**
   * @return {?}
   */


  NgbCalendarPersian.prototype.getToday =
  /**
  * @return {?}
  */
  function () {
    return fromGregorian(new Date());
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarPersian.prototype.isValid =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian(date).getTime());
  };

  NgbCalendarPersian.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbCalendarPersian;
}(NgbCalendar);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var PARTS_PER_HOUR = 1080;
/** @type {?} */

var PARTS_PER_DAY = 24 * PARTS_PER_HOUR;
/** @type {?} */

var PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;
/** @type {?} */

var PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;
/** @type {?} */

var BAHARAD = 11 * PARTS_PER_HOUR + 204;
/** @type {?} */

var HEBREW_DAY_ON_JAN_1_1970 = 2092591;
/** @type {?} */

var GREGORIAN_EPOCH$1 = 1721425.5;
/**
 * @param {?} year
 * @return {?}
 */

function isGregorianLeapYear$1(year) {
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
/**
 * @param {?} year
 * @return {?}
 */


function numberOfFirstDayInYear(year) {
  /** @type {?} */
  var monthsBeforeYear = Math.floor((235 * year - 234) / 19);
  /** @type {?} */

  var fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;
  /** @type {?} */

  var dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);
  /** @type {?} */

  var timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;
  /** @type {?} */

  var dayOfWeek = dayNumber % 7;

  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {
    dayNumber++;
    dayOfWeek = dayNumber % 7;
  }

  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {
    dayNumber += 2;
  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {
    dayNumber++;
  }

  return dayNumber;
}
/**
 * @param {?} month
 * @param {?} year
 * @return {?}
 */


function getDaysInGregorianMonth(month, year) {
  /** @type {?} */
  var days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

  if (isGregorianLeapYear$1(year)) {
    days[1]++;
  }

  return days[month - 1];
}
/**
 * @param {?} year
 * @return {?}
 */


function getHebrewMonths(year) {
  return isHebrewLeapYear(year) ? 13 : 12;
}
/**
 * Returns the number of days in a specific Hebrew year.
 * `year` is any Hebrew year.
 * @param {?} year
 * @return {?}
 */


function getDaysInHebrewYear(year) {
  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);
}
/**
 * @param {?} year
 * @return {?}
 */


function isHebrewLeapYear(year) {
  /** @type {?} */
  var b = (year * 12 + 17) % 19;
  return b >= (b < 0 ? -7 : 12);
}
/**
 * Returns the number of days in a specific Hebrew month.
 * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.
 * `year` is any Hebrew year.
 * @param {?} month
 * @param {?} year
 * @return {?}
 */


function getDaysInHebrewMonth(month, year) {
  /** @type {?} */
  var yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);
  /** @type {?} */

  var yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;
  /** @type {?} */

  var leapYear = isHebrewLeapYear(year);
  /** @type {?} */

  var daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];

  if (yearType > 0) {
    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.
  }

  if (yearType > 1) {
    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.
  }

  return daysInMonth[month - 1];
}
/**
 * @param {?} date
 * @return {?}
 */


function getDayNumberInHebrewYear(date) {
  /** @type {?} */
  var numberOfDay = 0;

  for (var i = 1; i < date.month; i++) {
    numberOfDay += getDaysInHebrewMonth(i, date.year);
  }

  return numberOfDay + date.day;
}
/**
 * @param {?} date
 * @param {?} val
 * @return {?}
 */


function setHebrewMonth(date, val) {
  /** @type {?} */
  var after = val >= 0;

  if (!after) {
    val = -val;
  }

  while (val > 0) {
    if (after) {
      if (val > getHebrewMonths(date.year) - date.month) {
        val -= getHebrewMonths(date.year) - date.month + 1;
        date.year++;
        date.month = 1;
      } else {
        date.month += val;
        val = 0;
      }
    } else {
      if (val >= date.month) {
        date.year--;
        val -= date.month;
        date.month = getHebrewMonths(date.year);
      } else {
        date.month -= val;
        val = 0;
      }
    }
  }

  return date;
}
/**
 * @param {?} date
 * @param {?} val
 * @return {?}
 */


function setHebrewDay(date, val) {
  /** @type {?} */
  var after = val >= 0;

  if (!after) {
    val = -val;
  }

  while (val > 0) {
    if (after) {
      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {
        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;
        date.year++;
        date.month = 1;
        date.day = 1;
      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {
        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;
        date.month++;
        date.day = 1;
      } else {
        date.day += val;
        val = 0;
      }
    } else {
      if (val >= date.day) {
        val -= date.day;
        date.month--;

        if (date.month === 0) {
          date.year--;
          date.month = getHebrewMonths(date.year);
        }

        date.day = getDaysInHebrewMonth(date.month, date.year);
      } else {
        date.day -= val;
        val = 0;
      }
    }
  }

  return date;
}
/**
 * Returns the equivalent Hebrew date value for a give input Gregorian date.
 * `gdate` is a JS Date to be converted to Hebrew date.
 * @param {?} gdate
 * @return {?}
 */


function fromGregorian$1(gdate) {
  /** @type {?} */
  var date = new Date(gdate);
  /** @type {?} */

  var gYear = date.getFullYear();
  /** @type {?} */

  var gMonth = date.getMonth();
  /** @type {?} */

  var gDay = date.getDate();
  /** @type {?} */

  var julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);
  julianDay = Math.floor(julianDay + 0.5);
  /** @type {?} */

  var daysSinceHebEpoch = julianDay - 347997;
  /** @type {?} */

  var monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);
  /** @type {?} */

  var hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;
  /** @type {?} */

  var firstDayOfThisYear = numberOfFirstDayInYear(hYear);
  /** @type {?} */

  var dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;

  while (dayOfYear < 1) {
    hYear--;
    firstDayOfThisYear = numberOfFirstDayInYear(hYear);
    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;
  }
  /** @type {?} */


  var hMonth = 1;
  /** @type {?} */

  var hDay = dayOfYear;

  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {
    hDay -= getDaysInHebrewMonth(hMonth, hYear);
    hMonth++;
  }

  return new NgbDate(hYear, hMonth, hDay);
}
/**
 * Returns the equivalent JS date value for a given Hebrew date.
 * `hebrewDate` is an Hebrew date to be converted to Gregorian.
 * @param {?} hebrewDate
 * @return {?}
 */


function toGregorian$1(hebrewDate) {
  /** @type {?} */
  var hYear = hebrewDate.year;
  /** @type {?} */

  var hMonth = hebrewDate.month;
  /** @type {?} */

  var hDay = hebrewDate.day;
  /** @type {?} */

  var days = numberOfFirstDayInYear(hYear);

  for (var i = 1; i < hMonth; i++) {
    days += getDaysInHebrewMonth(i, hYear);
  }

  days += hDay;
  /** @type {?} */

  var diffDays = days - HEBREW_DAY_ON_JAN_1_1970;
  /** @type {?} */

  var after = diffDays >= 0;

  if (!after) {
    diffDays = -diffDays;
  }
  /** @type {?} */


  var gYear = 1970;
  /** @type {?} */

  var gMonth = 1;
  /** @type {?} */

  var gDay = 1;

  while (diffDays > 0) {
    if (after) {
      if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {
        diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;
        gYear++;
      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {
        diffDays -= getDaysInGregorianMonth(gMonth, gYear);
        gMonth++;
      } else {
        gDay += diffDays;
        diffDays = 0;
      }
    } else {
      if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {
        diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;
        gYear--;
      } else {
        if (gMonth > 1) {
          gMonth--;
        } else {
          gMonth = 12;
          gYear--;
        }

        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {
          diffDays -= getDaysInGregorianMonth(gMonth, gYear);
        } else {
          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;
          diffDays = 0;
        }
      }
    }
  }

  return new Date(gYear, gMonth - 1, gDay);
}
/**
 * @param {?} numerals
 * @return {?}
 */


function hebrewNumerals(numerals) {
  if (!numerals) {
    return '';
  }
  /** @type {?} */


  var hArray0_9 = ['', "\u05D0", "\u05D1", "\u05D2", "\u05D3", "\u05D4", "\u05D5", "\u05D6", "\u05D7", "\u05D8"];
  /** @type {?} */

  var hArray10_19 = ["\u05D9", "\u05D9\u05D0", "\u05D9\u05D1", "\u05D9\u05D2", "\u05D9\u05D3", "\u05D8\u05D5", "\u05D8\u05D6", "\u05D9\u05D6", "\u05D9\u05D7", "\u05D9\u05D8"];
  /** @type {?} */

  var hArray20_90 = ['', '', "\u05DB", "\u05DC", "\u05DE", "\u05E0", "\u05E1", "\u05E2", "\u05E4", "\u05E6"];
  /** @type {?} */

  var hArray100_900 = ['', "\u05E7", "\u05E8", "\u05E9", "\u05EA", "\u05EA\u05E7", "\u05EA\u05E8", "\u05EA\u05E9", "\u05EA\u05EA", "\u05EA\u05EA\u05E7"];
  /** @type {?} */

  var hArray1000_9000 = ['', "\u05D0", "\u05D1", "\u05D1\u05D0", "\u05D1\u05D1", "\u05D4", "\u05D4\u05D0", "\u05D4\u05D1", "\u05D4\u05D1\u05D0", "\u05D4\u05D1\u05D1"];
  /** @type {?} */

  var geresh = "\u05F3";
  /** @type {?} */

  var gershaim = "\u05F4";
  /** @type {?} */

  var mem = 0;
  /** @type {?} */

  var result = [];
  /** @type {?} */

  var step = 0;

  while (numerals > 0) {
    /** @type {?} */
    var m = numerals % 10;

    if (step === 0) {
      mem = m;
    } else if (step === 1) {
      if (m !== 1) {
        result.unshift(hArray20_90[m], hArray0_9[mem]);
      } else {
        result.unshift(hArray10_19[mem]);
      }
    } else if (step === 2) {
      result.unshift(hArray100_900[m]);
    } else {
      if (m !== 5) {
        result.unshift(hArray1000_9000[m], geresh, ' ');
      }

      break;
    }

    numerals = Math.floor(numerals / 10);

    if (step === 0 && numerals === 0) {
      result.unshift(hArray0_9[m]);
    }

    step++;
  }

  result = result.join('').split('');

  if (result.length === 1) {
    result.push(geresh);
  } else if (result.length > 1) {
    result.splice(result.length - 1, 0, gershaim);
  }

  return result.join('');
}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * \@since 3.2.0
 */


var NgbCalendarHebrew =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbCalendarHebrew, _super);

  function NgbCalendarHebrew() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getDaysPerWeek =
  /**
  * @return {?}
  */
  function () {
    return 7;
  };
  /**
   * @param {?=} year
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getMonths =
  /**
  * @param {?=} year
  * @return {?}
  */
  function (year) {
    if (year && isHebrewLeapYear(year)) {
      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];
    } else {
      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
    }
  };
  /**
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getWeeksPerMonth =
  /**
  * @return {?}
  */
  function () {
    return 6;
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarHebrew.prototype.isValid =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);
    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);
    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);
    return b && !isNaN(toGregorian$1(date).getTime());
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getNext =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    date = new NgbDate(date.year, date.month, date.day);

    switch (period) {
      case 'y':
        date.year += number;
        date.month = 1;
        date.day = 1;
        return date;

      case 'm':
        date = setHebrewMonth(date, number);
        date.day = 1;
        return date;

      case 'd':
        return setHebrewDay(date, number);

      default:
        return date;
    }
  };
  /**
   * @param {?} date
   * @param {?=} period
   * @param {?=} number
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getPrev =
  /**
  * @param {?} date
  * @param {?=} period
  * @param {?=} number
  * @return {?}
  */
  function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    return this.getNext(date, period, -number);
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getWeekday =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var day = toGregorian$1(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7

    return day === 0 ? 7 : day;
  };
  /**
   * @param {?} week
   * @param {?} firstDayOfWeek
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getWeekNumber =
  /**
  * @param {?} week
  * @param {?} firstDayOfWeek
  * @return {?}
  */
  function (week, firstDayOfWeek) {
    /** @type {?} */
    var date = week[week.length - 1];
    return Math.ceil(getDayNumberInHebrewYear(date) / 7);
  };
  /**
   * @return {?}
   */


  NgbCalendarHebrew.prototype.getToday =
  /**
  * @return {?}
  */
  function () {
    return fromGregorian$1(new Date());
  };
  /**
   * @since 3.4.0
   */

  /**
   * \@since 3.4.0
   * @param {?} date
   * @return {?}
   */


  NgbCalendarHebrew.prototype.toGregorian =
  /**
  * \@since 3.4.0
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return fromJSDate(toGregorian$1(date));
  };
  /**
   * @since 3.4.0
   */

  /**
   * \@since 3.4.0
   * @param {?} date
   * @return {?}
   */


  NgbCalendarHebrew.prototype.fromGregorian =
  /**
  * \@since 3.4.0
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return fromGregorian$1(toJSDate(date));
  };

  NgbCalendarHebrew.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbCalendarHebrew;
}(NgbCalendar);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];
/** @type {?} */

var MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];
/** @type {?} */

var MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];
/**
 * \@since 3.2.0
 */

var NgbDatepickerI18nHebrew =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbDatepickerI18nHebrew, _super);

  function NgbDatepickerI18nHebrew() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @param {?} month
   * @param {?=} year
   * @return {?}
   */


  NgbDatepickerI18nHebrew.prototype.getMonthShortName =
  /**
  * @param {?} month
  * @param {?=} year
  * @return {?}
  */
  function (month, year) {
    return this.getMonthFullName(month, year);
  };
  /**
   * @param {?} month
   * @param {?=} year
   * @return {?}
   */


  NgbDatepickerI18nHebrew.prototype.getMonthFullName =
  /**
  * @param {?} month
  * @param {?=} year
  * @return {?}
  */
  function (month, year) {
    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];
  };
  /**
   * @param {?} weekday
   * @return {?}
   */


  NgbDatepickerI18nHebrew.prototype.getWeekdayShortName =
  /**
  * @param {?} weekday
  * @return {?}
  */
  function (weekday) {
    return WEEKDAYS[weekday - 1];
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDatepickerI18nHebrew.prototype.getDayAriaLabel =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return hebrewNumerals(date.day) + " " + this.getMonthFullName(date.month, date.year) + " " + hebrewNumerals(date.year);
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDatepickerI18nHebrew.prototype.getDayNumerals =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return hebrewNumerals(date.day);
  };
  /**
   * @param {?} weekNumber
   * @return {?}
   */


  NgbDatepickerI18nHebrew.prototype.getWeekNumerals =
  /**
  * @param {?} weekNumber
  * @return {?}
  */
  function (weekNumber) {
    return hebrewNumerals(weekNumber);
  };
  /**
   * @param {?} year
   * @return {?}
   */


  NgbDatepickerI18nHebrew.prototype.getYearNumerals =
  /**
  * @param {?} year
  * @return {?}
  */
  function (year) {
    return hebrewNumerals(year);
  };

  NgbDatepickerI18nHebrew.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbDatepickerI18nHebrew;
}(NgbDatepickerI18n);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * NgbDateAdapter implementation that allows using native javascript date as a user date model.
 */


var NgbDateNativeAdapter =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbDateNativeAdapter, _super);

  function NgbDateNativeAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * Converts native date to a NgbDateStruct
   */

  /**
   * Converts native date to a NgbDateStruct
   * @param {?} date
   * @return {?}
   */


  NgbDateNativeAdapter.prototype.fromModel =
  /**
  * Converts native date to a NgbDateStruct
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;
  };
  /**
   * Converts a NgbDateStruct to a native date
   */

  /**
   * Converts a NgbDateStruct to a native date
   * @param {?} date
   * @return {?}
   */


  NgbDateNativeAdapter.prototype.toModel =
  /**
  * Converts a NgbDateStruct to a native date
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDateNativeAdapter.prototype._fromNativeDate =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return {
      year: date.getFullYear(),
      month: date.getMonth() + 1,
      day: date.getDate()
    };
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDateNativeAdapter.prototype._toNativeDate =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var jsDate = new Date(date.year, date.month - 1, date.day, 12); // avoid 30 -> 1930 conversion

    jsDate.setFullYear(date.year);
    return jsDate;
  };

  NgbDateNativeAdapter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbDateNativeAdapter;
}(NgbDateAdapter);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * NgbDateAdapter implementation that allows using native javascript UTC date as a user date model.
 * Same as NgbDateNativeAdapter, but uses UTC dates.
 *
 * \@since 3.2.0
 */


var NgbDateNativeUTCAdapter =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbDateNativeUTCAdapter, _super);

  function NgbDateNativeUTCAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDateNativeUTCAdapter.prototype._fromNativeDate =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    return {
      year: date.getUTCFullYear(),
      month: date.getUTCMonth() + 1,
      day: date.getUTCDate()
    };
  };
  /**
   * @param {?} date
   * @return {?}
   */


  NgbDateNativeUTCAdapter.prototype._toNativeDate =
  /**
  * @param {?} date
  * @return {?}
  */
  function (date) {
    /** @type {?} */
    var jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day)); // avoid 30 -> 1930 conversion

    jsDate.setUTCFullYear(date.year);
    return jsDate;
  };

  NgbDateNativeUTCAdapter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbDateNativeUTCAdapter;
}(NgbDateNativeAdapter);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbDatepickerModule =
/** @class */
function () {
  function NgbDatepickerModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbDatepickerModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbDatepickerModule
    };
  };

  NgbDatepickerModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker],
      exports: [NgbDatepicker, NgbInputDatepicker],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"]],
      entryComponents: [NgbDatepicker]
    }]
  }];
  return NgbDatepickerModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbDropdown directive.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the dropdowns used in the application.
 */


var NgbDropdownConfig =
/** @class */
function () {
  function NgbDropdownConfig() {
    this.autoClose = true;
    this.placement = 'bottom-left';
  }

  NgbDropdownConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbDropdownConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbDropdownConfig_Factory() {
      return new NgbDropdownConfig();
    },
    token: NgbDropdownConfig,
    providedIn: "root"
  });
  return NgbDropdownConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 *
 */


var NgbDropdownMenu =
/** @class */
function () {
  function NgbDropdownMenu(dropdown, _elementRef, _renderer) {
    this.dropdown = dropdown;
    this._elementRef = _elementRef;
    this._renderer = _renderer;
    this.placement = 'bottom';
    this.isOpen = false;
  }
  /**
   * @param {?} $event
   * @return {?}
   */


  NgbDropdownMenu.prototype.isEventFrom =
  /**
  * @param {?} $event
  * @return {?}
  */
  function ($event) {
    return this._elementRef.nativeElement.contains($event.target);
  };
  /**
   * @param {?} triggerEl
   * @param {?} placement
   * @return {?}
   */


  NgbDropdownMenu.prototype.position =
  /**
  * @param {?} triggerEl
  * @param {?} placement
  * @return {?}
  */
  function (triggerEl, placement) {
    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));
  };
  /**
   * @param {?} _placement
   * @return {?}
   */


  NgbDropdownMenu.prototype.applyPlacement =
  /**
  * @param {?} _placement
  * @return {?}
  */
  function (_placement) {
    // remove the current placement classes
    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');

    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');

    this.placement = _placement;
    /**
     * apply the new placement
     * in case of top use up-arrow or down-arrow otherwise
     */

    if (_placement.search('^top') !== -1) {
      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');
    } else {
      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');
    }
  };

  NgbDropdownMenu.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbDropdownMenu]',
      host: {
        '[class.dropdown-menu]': 'true',
        '[class.show]': 'dropdown.isOpen()',
        '[attr.x-placement]': 'placement'
      }
    }]
  }];
  /** @nocollapse */

  NgbDropdownMenu.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return NgbDropdown;
        })]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }];
  };

  return NgbDropdownMenu;
}();
/**
 * Marks an element to which dropdown menu will be anchored. This is a simple version
 * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but
 * doesn't listen to click events to toggle dropdown menu thus enabling support for
 * events other than click.
 *
 * \@since 1.1.0
 */


var NgbDropdownAnchor =
/** @class */
function () {
  function NgbDropdownAnchor(dropdown, _elementRef) {
    this.dropdown = dropdown;
    this._elementRef = _elementRef;
    this.anchorEl = _elementRef.nativeElement;
  }
  /**
   * @param {?} $event
   * @return {?}
   */


  NgbDropdownAnchor.prototype.isEventFrom =
  /**
  * @param {?} $event
  * @return {?}
  */
  function ($event) {
    return this._elementRef.nativeElement.contains($event.target);
  };

  NgbDropdownAnchor.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbDropdownAnchor]',
      host: {
        'class': 'dropdown-toggle',
        'aria-haspopup': 'true',
        '[attr.aria-expanded]': 'dropdown.isOpen()'
      }
    }]
  }];
  /** @nocollapse */

  NgbDropdownAnchor.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return NgbDropdown;
        })]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }];
  };

  return NgbDropdownAnchor;
}();
/**
 * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an
 * alternative.
 */


var NgbDropdownToggle =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbDropdownToggle, _super);

  function NgbDropdownToggle(dropdown, elementRef) {
    return _super.call(this, dropdown, elementRef) || this;
  }
  /**
   * @return {?}
   */


  NgbDropdownToggle.prototype.toggleOpen =
  /**
  * @return {?}
  */
  function () {
    this.dropdown.toggle();
  };

  NgbDropdownToggle.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbDropdownToggle]',
      host: {
        'class': 'dropdown-toggle',
        'aria-haspopup': 'true',
        '[attr.aria-expanded]': 'dropdown.isOpen()',
        '(click)': 'toggleOpen()'
      },
      providers: [{
        provide: NgbDropdownAnchor,
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return NgbDropdownToggle;
        })
      }]
    }]
  }];
  /** @nocollapse */

  NgbDropdownToggle.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return NgbDropdown;
        })]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }];
  };

  return NgbDropdownToggle;
}(NgbDropdownAnchor);
/**
 * Transforms a node into a dropdown.
 */


var NgbDropdown =
/** @class */
function () {
  function NgbDropdown(_changeDetector, config, _document, _ngZone) {
    var _this = this;

    this._changeDetector = _changeDetector;
    this._document = _document;
    this._ngZone = _ngZone;
    this._closed$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    /**
     *  Defines whether or not the dropdown-menu is open initially.
     */

    this._open = false;
    /**
     *  An event fired when the dropdown is opened or closed.
     *  Event's payload equals whether dropdown is open.
     */

    this.openChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.placement = config.placement;
    this.autoClose = config.autoClose;
    this._zoneSubscription = _ngZone.onStable.subscribe(function () {
      _this._positionMenu();
    });
  }
  /**
   * @return {?}
   */


  NgbDropdown.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    if (this._menu) {
      this._menu.applyPlacement(Array.isArray(this.placement) ? this.placement[0] :
      /** @type {?} */
      this.placement);
    }

    if (this._open) {
      this._setCloseHandlers();
    }
  };
  /**
   * Checks if the dropdown menu is open or not.
   */

  /**
   * Checks if the dropdown menu is open or not.
   * @return {?}
   */


  NgbDropdown.prototype.isOpen =
  /**
  * Checks if the dropdown menu is open or not.
  * @return {?}
  */
  function () {
    return this._open;
  };
  /**
   * Opens the dropdown menu of a given navbar or tabbed navigation.
   */

  /**
   * Opens the dropdown menu of a given navbar or tabbed navigation.
   * @return {?}
   */


  NgbDropdown.prototype.open =
  /**
  * Opens the dropdown menu of a given navbar or tabbed navigation.
  * @return {?}
  */
  function () {
    if (!this._open) {
      this._open = true;

      this._positionMenu();

      this.openChange.emit(true);

      this._setCloseHandlers();
    }
  };
  /**
   * @return {?}
   */


  NgbDropdown.prototype._setCloseHandlers =
  /**
  * @return {?}
  */
  function () {
    var _this = this;

    if (this.autoClose) {
      this._ngZone.runOutsideAngular(function () {
        /** @type {?} */
        var escapes$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'keyup').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this._closed$), // tslint:disable-next-line:deprecation
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) {
          return event.which === Key.Escape;
        }));
        /** @type {?} */

        var clicks$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'click').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this._closed$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) {
          return _this._shouldCloseFromClick(event);
        }));
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["race"])([escapes$, clicks$]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this._closed$)).subscribe(function () {
          return _this._ngZone.run(function () {
            _this.close();

            _this._changeDetector.markForCheck();
          });
        });
      });
    }
  };
  /**
   * Closes the dropdown menu of a given navbar or tabbed navigation.
   */

  /**
   * Closes the dropdown menu of a given navbar or tabbed navigation.
   * @return {?}
   */


  NgbDropdown.prototype.close =
  /**
  * Closes the dropdown menu of a given navbar or tabbed navigation.
  * @return {?}
  */
  function () {
    if (this._open) {
      this._open = false;

      this._closed$.next();

      this.openChange.emit(false);
    }
  };
  /**
   * Toggles the dropdown menu of a given navbar or tabbed navigation.
   */

  /**
   * Toggles the dropdown menu of a given navbar or tabbed navigation.
   * @return {?}
   */


  NgbDropdown.prototype.toggle =
  /**
  * Toggles the dropdown menu of a given navbar or tabbed navigation.
  * @return {?}
  */
  function () {
    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbDropdown.prototype._shouldCloseFromClick =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    if (event.button !== 2 && !this._isEventFromToggle(event)) {
      if (this.autoClose === true) {
        return true;
      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {
        return true;
      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {
        return true;
      }
    }

    return false;
  };
  /**
   * @return {?}
   */


  NgbDropdown.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this._closed$.next();

    this._zoneSubscription.unsubscribe();
  };
  /**
   * @param {?} $event
   * @return {?}
   */


  NgbDropdown.prototype._isEventFromToggle =
  /**
  * @param {?} $event
  * @return {?}
  */
  function ($event) {
    return this._anchor.isEventFrom($event);
  };
  /**
   * @param {?} $event
   * @return {?}
   */


  NgbDropdown.prototype._isEventFromMenu =
  /**
  * @param {?} $event
  * @return {?}
  */
  function ($event) {
    return this._menu ? this._menu.isEventFrom($event) : false;
  };
  /**
   * @return {?}
   */


  NgbDropdown.prototype._positionMenu =
  /**
  * @return {?}
  */
  function () {
    if (this.isOpen() && this._menu) {
      this._menu.position(this._anchor.anchorEl, this.placement);
    }
  };

  NgbDropdown.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbDropdown]',
      exportAs: 'ngbDropdown',
      host: {
        '[class.show]': 'isOpen()'
      }
    }]
  }];
  /** @nocollapse */

  NgbDropdown.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
    }, {
      type: NgbDropdownConfig
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
    }];
  };

  NgbDropdown.propDecorators = {
    _menu: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"],
      args: [NgbDropdownMenu]
    }],
    _anchor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"],
      args: [NgbDropdownAnchor]
    }],
    autoClose: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    _open: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
      args: ['open']
    }],
    placement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    openChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbDropdown;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];

var NgbDropdownModule =
/** @class */
function () {
  function NgbDropdownModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbDropdownModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbDropdownModule
    };
  };

  NgbDropdownModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: NGB_DROPDOWN_DIRECTIVES,
      exports: NGB_DROPDOWN_DIRECTIVES
    }]
  }];
  return NgbDropdownModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration object token for the NgbModal service.
 * You can provide this configuration, typically in your root module in order to provide default option values for every
 * modal.
 *
 * \@since 3.1.0
 */


var NgbModalConfig =
/** @class */
function () {
  function NgbModalConfig() {
    this.backdrop = true;
    this.keyboard = true;
  }

  NgbModalConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbModalConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbModalConfig_Factory() {
      return new NgbModalConfig();
    },
    token: NgbModalConfig,
    providedIn: "root"
  });
  return NgbModalConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var ContentRef =
/** @class */
function () {
  function ContentRef(nodes, viewRef, componentRef) {
    this.nodes = nodes;
    this.viewRef = viewRef;
    this.componentRef = componentRef;
  }

  return ContentRef;
}();
/**
 * @template T
 */


var
/**
* @template T
*/
PopupService =
/** @class */
function () {
  function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver) {
    this._type = _type;
    this._injector = _injector;
    this._viewContainerRef = _viewContainerRef;
    this._renderer = _renderer;
    this._componentFactoryResolver = _componentFactoryResolver;
  }
  /**
   * @param {?=} content
   * @param {?=} context
   * @return {?}
   */


  PopupService.prototype.open =
  /**
  * @param {?=} content
  * @param {?=} context
  * @return {?}
  */
  function (content, context) {
    if (!this._windowRef) {
      this._contentRef = this._getContentRef(content, context);
      this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);
    }

    return this._windowRef;
  };
  /**
   * @return {?}
   */


  PopupService.prototype.close =
  /**
  * @return {?}
  */
  function () {
    if (this._windowRef) {
      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));

      this._windowRef = null;

      if (this._contentRef.viewRef) {
        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));

        this._contentRef = null;
      }
    }
  };
  /**
   * @param {?} content
   * @param {?=} context
   * @return {?}
   */


  PopupService.prototype._getContentRef =
  /**
  * @param {?} content
  * @param {?=} context
  * @return {?}
  */
  function (content, context) {
    if (!content) {
      return new ContentRef([]);
    } else if (content instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]) {
      /** @type {?} */
      var viewRef = this._viewContainerRef.createEmbeddedView(
      /** @type {?} */
      content, context);

      return new ContentRef([viewRef.rootNodes], viewRef);
    } else {
      return new ContentRef([[this._renderer.createText("" + content)]]);
    }
  };

  return PopupService;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var noop = function noop() {};
/**
 * Utility to handle the scrollbar.
 *
 * It allows to compensate the lack of a vertical scrollbar by adding an
 * equivalent padding on the right of the body, and to remove this compensation.
 */


var ScrollBar =
/** @class */
function () {
  function ScrollBar(_document) {
    this._document = _document;
  }
  /**
   * Detects if a scrollbar is present and if yes, already compensates for its
   * removal by adding an equivalent padding on the right of the body.
   *
   * @return a callback used to revert the compensation (noop if there was none,
   * otherwise a function removing the padding)
   */

  /**
   * Detects if a scrollbar is present and if yes, already compensates for its
   * removal by adding an equivalent padding on the right of the body.
   *
   * @return {?} a callback used to revert the compensation (noop if there was none,
   * otherwise a function removing the padding)
   */


  ScrollBar.prototype.compensate =
  /**
  * Detects if a scrollbar is present and if yes, already compensates for its
  * removal by adding an equivalent padding on the right of the body.
  *
  * @return {?} a callback used to revert the compensation (noop if there was none,
  * otherwise a function removing the padding)
  */
  function () {
    return !this._isPresent() ? noop : this._adjustBody(this._getWidth());
  };
  /**
   * Adds a padding of the given width on the right of the body.
   *
   * @return a callback used to revert the padding to its previous value
   */

  /**
   * Adds a padding of the given width on the right of the body.
   *
   * @param {?} width
   * @return {?} a callback used to revert the padding to its previous value
   */


  ScrollBar.prototype._adjustBody =
  /**
  * Adds a padding of the given width on the right of the body.
  *
  * @param {?} width
  * @return {?} a callback used to revert the padding to its previous value
  */
  function (width) {
    /** @type {?} */
    var body = this._document.body;
    /** @type {?} */

    var userSetPadding = body.style.paddingRight;
    /** @type {?} */

    var paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);
    body.style['padding-right'] = paddingAmount + width + "px";
    return function () {
      return body.style['padding-right'] = userSetPadding;
    };
  };
  /**
   * Tells whether a scrollbar is currently present on the body.
   *
   * @return true if scrollbar is present, false otherwise
   */

  /**
   * Tells whether a scrollbar is currently present on the body.
   *
   * @return {?} true if scrollbar is present, false otherwise
   */


  ScrollBar.prototype._isPresent =
  /**
  * Tells whether a scrollbar is currently present on the body.
  *
  * @return {?} true if scrollbar is present, false otherwise
  */
  function () {
    /** @type {?} */
    var rect = this._document.body.getBoundingClientRect();

    return rect.left + rect.right < window.innerWidth;
  };
  /**
   * Calculates and returns the width of a scrollbar.
   *
   * @return the width of a scrollbar on this page
   */

  /**
   * Calculates and returns the width of a scrollbar.
   *
   * @return {?} the width of a scrollbar on this page
   */


  ScrollBar.prototype._getWidth =
  /**
  * Calculates and returns the width of a scrollbar.
  *
  * @return {?} the width of a scrollbar on this page
  */
  function () {
    /** @type {?} */
    var measurer = this._document.createElement('div');

    measurer.className = 'modal-scrollbar-measure';
    /** @type {?} */

    var body = this._document.body;
    body.appendChild(measurer);
    /** @type {?} */

    var width = measurer.getBoundingClientRect().width - measurer.clientWidth;
    body.removeChild(measurer);
    return width;
  };

  ScrollBar.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  ScrollBar.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }];
  };
  /** @nocollapse */


  ScrollBar.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function ScrollBar_Factory() {
      return new ScrollBar(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]));
    },
    token: ScrollBar,
    providedIn: "root"
  });
  return ScrollBar;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbModalBackdrop =
/** @class */
function () {
  function NgbModalBackdrop() {}

  NgbModalBackdrop.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-modal-backdrop',
      template: '',
      host: {
        '[class]': '"modal-backdrop fade show" + (backdropClass ? " " + backdropClass : "")',
        'style': 'z-index: 1050'
      }
    }]
  }];
  NgbModalBackdrop.propDecorators = {
    backdropClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbModalBackdrop;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * A reference to an active (currently opened) modal. Instances of this class
 * can be injected into components passed as modal content.
 */


var
/**
* A reference to an active (currently opened) modal. Instances of this class
* can be injected into components passed as modal content.
*/
NgbActiveModal =
/** @class */
function () {
  function NgbActiveModal() {}
  /**
   * Can be used to close a modal, passing an optional result.
   */

  /**
   * Can be used to close a modal, passing an optional result.
   * @param {?=} result
   * @return {?}
   */


  NgbActiveModal.prototype.close =
  /**
  * Can be used to close a modal, passing an optional result.
  * @param {?=} result
  * @return {?}
  */
  function (result) {};
  /**
   * Can be used to dismiss a modal, passing an optional reason.
   */

  /**
   * Can be used to dismiss a modal, passing an optional reason.
   * @param {?=} reason
   * @return {?}
   */


  NgbActiveModal.prototype.dismiss =
  /**
  * Can be used to dismiss a modal, passing an optional reason.
  * @param {?=} reason
  * @return {?}
  */
  function (reason) {};

  return NgbActiveModal;
}();
/**
 * A reference to a newly opened modal.
 */


var
/**
* A reference to a newly opened modal.
*/
NgbModalRef =
/** @class */
function () {
  function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {
    var _this = this;

    this._windowCmptRef = _windowCmptRef;
    this._contentRef = _contentRef;
    this._backdropCmptRef = _backdropCmptRef;
    this._beforeDismiss = _beforeDismiss;

    _windowCmptRef.instance.dismissEvent.subscribe(function (reason) {
      _this.dismiss(reason);
    });

    this.result = new Promise(function (resolve, reject) {
      _this._resolve = resolve;
      _this._reject = reject;
    });
    this.result.then(null, function () {});
  }

  Object.defineProperty(NgbModalRef.prototype, "componentInstance", {
    /**
     * The instance of component used as modal's content.
     * Undefined when a TemplateRef is used as modal's content.
     */
    get:
    /**
    * The instance of component used as modal's content.
    * Undefined when a TemplateRef is used as modal's content.
    * @return {?}
    */
    function get() {
      if (this._contentRef.componentRef) {
        return this._contentRef.componentRef.instance;
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Can be used to close a modal, passing an optional result.
   */

  /**
   * Can be used to close a modal, passing an optional result.
   * @param {?=} result
   * @return {?}
   */

  NgbModalRef.prototype.close =
  /**
  * Can be used to close a modal, passing an optional result.
  * @param {?=} result
  * @return {?}
  */
  function (result) {
    if (this._windowCmptRef) {
      this._resolve(result);

      this._removeModalElements();
    }
  };
  /**
   * @param {?=} reason
   * @return {?}
   */


  NgbModalRef.prototype._dismiss =
  /**
  * @param {?=} reason
  * @return {?}
  */
  function (reason) {
    this._reject(reason);

    this._removeModalElements();
  };
  /**
   * Can be used to dismiss a modal, passing an optional reason.
   */

  /**
   * Can be used to dismiss a modal, passing an optional reason.
   * @param {?=} reason
   * @return {?}
   */


  NgbModalRef.prototype.dismiss =
  /**
  * Can be used to dismiss a modal, passing an optional reason.
  * @param {?=} reason
  * @return {?}
  */
  function (reason) {
    var _this = this;

    if (this._windowCmptRef) {
      if (!this._beforeDismiss) {
        this._dismiss(reason);
      } else {
        /** @type {?} */
        var dismiss = this._beforeDismiss();

        if (dismiss && dismiss.then) {
          dismiss.then(function (result) {
            if (result !== false) {
              _this._dismiss(reason);
            }
          }, function () {});
        } else if (dismiss !== false) {
          this._dismiss(reason);
        }
      }
    }
  };
  /**
   * @return {?}
   */


  NgbModalRef.prototype._removeModalElements =
  /**
  * @return {?}
  */
  function () {
    /** @type {?} */
    var windowNativeEl = this._windowCmptRef.location.nativeElement;
    windowNativeEl.parentNode.removeChild(windowNativeEl);

    this._windowCmptRef.destroy();

    if (this._backdropCmptRef) {
      /** @type {?} */
      var backdropNativeEl = this._backdropCmptRef.location.nativeElement;
      backdropNativeEl.parentNode.removeChild(backdropNativeEl);

      this._backdropCmptRef.destroy();
    }

    if (this._contentRef && this._contentRef.viewRef) {
      this._contentRef.viewRef.destroy();
    }

    this._windowCmptRef = null;
    this._backdropCmptRef = null;
    this._contentRef = null;
  };

  return NgbModalRef;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @enum {number} */


var ModalDismissReasons = {
  BACKDROP_CLICK: 0,
  ESC: 1
};
ModalDismissReasons[ModalDismissReasons.BACKDROP_CLICK] = 'BACKDROP_CLICK';
ModalDismissReasons[ModalDismissReasons.ESC] = 'ESC';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

var NgbModalWindow =
/** @class */
function () {
  function NgbModalWindow(_document, _elRef) {
    this._document = _document;
    this._elRef = _elRef;
    this.backdrop = true;
    this.keyboard = true;
    this.dismissEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
  }
  /**
   * @param {?} $event
   * @return {?}
   */


  NgbModalWindow.prototype.backdropClick =
  /**
  * @param {?} $event
  * @return {?}
  */
  function ($event) {
    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {
      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);
    }
  };
  /**
   * @param {?} $event
   * @return {?}
   */


  NgbModalWindow.prototype.escKey =
  /**
  * @param {?} $event
  * @return {?}
  */
  function ($event) {
    if (this.keyboard && !$event.defaultPrevented) {
      this.dismiss(ModalDismissReasons.ESC);
    }
  };
  /**
   * @param {?} reason
   * @return {?}
   */


  NgbModalWindow.prototype.dismiss =
  /**
  * @param {?} reason
  * @return {?}
  */
  function (reason) {
    this.dismissEvent.emit(reason);
  };
  /**
   * @return {?}
   */


  NgbModalWindow.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    this._elWithFocus = this._document.activeElement;
  };
  /**
   * @return {?}
   */


  NgbModalWindow.prototype.ngAfterViewInit =
  /**
  * @return {?}
  */
  function () {
    if (!this._elRef.nativeElement.contains(document.activeElement)) {
      /** @type {?} */
      var autoFocusable =
      /** @type {?} */
      this._elRef.nativeElement.querySelector("[ngbAutofocus]");
      /** @type {?} */


      var firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];
      /** @type {?} */

      var elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;
      elementToFocus.focus();
    }
  };
  /**
   * @return {?}
   */


  NgbModalWindow.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    /** @type {?} */
    var body = this._document.body;
    /** @type {?} */

    var elWithFocus = this._elWithFocus;
    /** @type {?} */

    var elementToFocus;

    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {
      elementToFocus = elWithFocus;
    } else {
      elementToFocus = body;
    }

    elementToFocus.focus();
    this._elWithFocus = null;
  };

  NgbModalWindow.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-modal-window',
      host: {
        '[class]': '"modal fade show d-block" + (windowClass ? " " + windowClass : "")',
        'role': 'dialog',
        'tabindex': '-1',
        '(keyup.esc)': 'escKey($event)',
        '(click)': 'backdropClick($event)',
        '[attr.aria-labelledby]': 'ariaLabelledBy'
      },
      template: "\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    "
    }]
  }];
  /** @nocollapse */

  NgbModalWindow.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }];
  };

  NgbModalWindow.propDecorators = {
    ariaLabelledBy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    backdrop: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    centered: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    keyboard: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    size: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    windowClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    dismissEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"],
      args: ['dismiss']
    }]
  };
  return NgbModalWindow;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbModalStack =
/** @class */
function () {
  function NgbModalStack(_applicationRef, _injector, _document, _scrollBar, _rendererFactory) {
    var _this = this;

    this._applicationRef = _applicationRef;
    this._injector = _injector;
    this._document = _document;
    this._scrollBar = _scrollBar;
    this._rendererFactory = _rendererFactory;
    this._windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];
    this._backdropAttributes = ['backdropClass'];
    this._modalRefs = [];
    this._windowCmpts = [];
    this._activeWindowCmptHasChanged = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"](); // Trap focus on active WindowCmpt

    this._activeWindowCmptHasChanged.subscribe(function () {
      if (_this._windowCmpts.length) {
        /** @type {?} */
        var activeWindowCmpt = _this._windowCmpts[_this._windowCmpts.length - 1];
        ngbFocusTrap(activeWindowCmpt.location.nativeElement, _this._activeWindowCmptHasChanged);
      }
    });
  }
  /**
   * @param {?} moduleCFR
   * @param {?} contentInjector
   * @param {?} content
   * @param {?} options
   * @return {?}
   */


  NgbModalStack.prototype.open =
  /**
  * @param {?} moduleCFR
  * @param {?} contentInjector
  * @param {?} content
  * @param {?} options
  * @return {?}
  */
  function (moduleCFR, contentInjector, content, options) {
    var _this = this;
    /** @type {?} */


    var containerEl = isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;
    /** @type {?} */

    var renderer = this._rendererFactory.createRenderer(null, null);
    /** @type {?} */


    var revertPaddingForScrollBar = this._scrollBar.compensate();
    /** @type {?} */


    var removeBodyClass = function removeBodyClass() {
      if (!_this._modalRefs.length) {
        renderer.removeClass(_this._document.body, 'modal-open');
      }
    };

    if (!containerEl) {
      throw new Error("The specified modal container \"" + (options.container || 'body') + "\" was not found in the DOM.");
    }
    /** @type {?} */


    var activeModal = new NgbActiveModal();
    /** @type {?} */

    var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);
    /** @type {?} */


    var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;
    /** @type {?} */

    var windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);
    /** @type {?} */


    var ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);

    this._registerModalRef(ngbModalRef);

    this._registerWindowCmpt(windowCmptRef);

    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);
    ngbModalRef.result.then(removeBodyClass, removeBodyClass);

    activeModal.close = function (result) {
      ngbModalRef.close(result);
    };

    activeModal.dismiss = function (reason) {
      ngbModalRef.dismiss(reason);
    };

    this._applyWindowOptions(windowCmptRef.instance, options);

    if (this._modalRefs.length === 1) {
      renderer.addClass(this._document.body, 'modal-open');
    }

    if (backdropCmptRef && backdropCmptRef.instance) {
      this._applyBackdropOptions(backdropCmptRef.instance, options);
    }

    return ngbModalRef;
  };
  /**
   * @param {?=} reason
   * @return {?}
   */


  NgbModalStack.prototype.dismissAll =
  /**
  * @param {?=} reason
  * @return {?}
  */
  function (reason) {
    this._modalRefs.forEach(function (ngbModalRef) {
      return ngbModalRef.dismiss(reason);
    });
  };
  /**
   * @return {?}
   */


  NgbModalStack.prototype.hasOpenModals =
  /**
  * @return {?}
  */
  function () {
    return this._modalRefs.length > 0;
  };
  /**
   * @param {?} moduleCFR
   * @param {?} containerEl
   * @return {?}
   */


  NgbModalStack.prototype._attachBackdrop =
  /**
  * @param {?} moduleCFR
  * @param {?} containerEl
  * @return {?}
  */
  function (moduleCFR, containerEl) {
    /** @type {?} */
    var backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);
    /** @type {?} */

    var backdropCmptRef = backdropFactory.create(this._injector);

    this._applicationRef.attachView(backdropCmptRef.hostView);

    containerEl.appendChild(backdropCmptRef.location.nativeElement);
    return backdropCmptRef;
  };
  /**
   * @param {?} moduleCFR
   * @param {?} containerEl
   * @param {?} contentRef
   * @return {?}
   */


  NgbModalStack.prototype._attachWindowComponent =
  /**
  * @param {?} moduleCFR
  * @param {?} containerEl
  * @param {?} contentRef
  * @return {?}
  */
  function (moduleCFR, containerEl, contentRef) {
    /** @type {?} */
    var windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);
    /** @type {?} */

    var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);

    this._applicationRef.attachView(windowCmptRef.hostView);

    containerEl.appendChild(windowCmptRef.location.nativeElement);
    return windowCmptRef;
  };
  /**
   * @param {?} windowInstance
   * @param {?} options
   * @return {?}
   */


  NgbModalStack.prototype._applyWindowOptions =
  /**
  * @param {?} windowInstance
  * @param {?} options
  * @return {?}
  */
  function (windowInstance, options) {
    this._windowAttributes.forEach(function (optionName) {
      if (isDefined(options[optionName])) {
        windowInstance[optionName] = options[optionName];
      }
    });
  };
  /**
   * @param {?} backdropInstance
   * @param {?} options
   * @return {?}
   */


  NgbModalStack.prototype._applyBackdropOptions =
  /**
  * @param {?} backdropInstance
  * @param {?} options
  * @return {?}
  */
  function (backdropInstance, options) {
    this._backdropAttributes.forEach(function (optionName) {
      if (isDefined(options[optionName])) {
        backdropInstance[optionName] = options[optionName];
      }
    });
  };
  /**
   * @param {?} moduleCFR
   * @param {?} contentInjector
   * @param {?} content
   * @param {?} activeModal
   * @return {?}
   */


  NgbModalStack.prototype._getContentRef =
  /**
  * @param {?} moduleCFR
  * @param {?} contentInjector
  * @param {?} content
  * @param {?} activeModal
  * @return {?}
  */
  function (moduleCFR, contentInjector, content, activeModal) {
    if (!content) {
      return new ContentRef([]);
    } else if (content instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]) {
      return this._createFromTemplateRef(content, activeModal);
    } else if (isString(content)) {
      return this._createFromString(content);
    } else {
      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);
    }
  };
  /**
   * @param {?} content
   * @param {?} activeModal
   * @return {?}
   */


  NgbModalStack.prototype._createFromTemplateRef =
  /**
  * @param {?} content
  * @param {?} activeModal
  * @return {?}
  */
  function (content, activeModal) {
    /** @type {?} */
    var context = {
      $implicit: activeModal,
      close:
      /**
      * @param {?} result
      * @return {?}
      */
      function close(result) {
        activeModal.close(result);
      },
      dismiss:
      /**
      * @param {?} reason
      * @return {?}
      */
      function dismiss(reason) {
        activeModal.dismiss(reason);
      }
    };
    /** @type {?} */

    var viewRef = content.createEmbeddedView(context);

    this._applicationRef.attachView(viewRef);

    return new ContentRef([viewRef.rootNodes], viewRef);
  };
  /**
   * @param {?} content
   * @return {?}
   */


  NgbModalStack.prototype._createFromString =
  /**
  * @param {?} content
  * @return {?}
  */
  function (content) {
    /** @type {?} */
    var component = this._document.createTextNode("" + content);

    return new ContentRef([[component]]);
  };
  /**
   * @param {?} moduleCFR
   * @param {?} contentInjector
   * @param {?} content
   * @param {?} context
   * @return {?}
   */


  NgbModalStack.prototype._createFromComponent =
  /**
  * @param {?} moduleCFR
  * @param {?} contentInjector
  * @param {?} content
  * @param {?} context
  * @return {?}
  */
  function (moduleCFR, contentInjector, content, context) {
    /** @type {?} */
    var contentCmptFactory = moduleCFR.resolveComponentFactory(content);
    /** @type {?} */

    var modalContentInjector = _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"].create({
      providers: [{
        provide: NgbActiveModal,
        useValue: context
      }],
      parent: contentInjector
    });
    /** @type {?} */

    var componentRef = contentCmptFactory.create(modalContentInjector);

    this._applicationRef.attachView(componentRef.hostView);

    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);
  };
  /**
   * @param {?} ngbModalRef
   * @return {?}
   */


  NgbModalStack.prototype._registerModalRef =
  /**
  * @param {?} ngbModalRef
  * @return {?}
  */
  function (ngbModalRef) {
    var _this = this;
    /** @type {?} */


    var unregisterModalRef = function unregisterModalRef() {
      /** @type {?} */
      var index = _this._modalRefs.indexOf(ngbModalRef);

      if (index > -1) {
        _this._modalRefs.splice(index, 1);
      }
    };

    this._modalRefs.push(ngbModalRef);

    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);
  };
  /**
   * @param {?} ngbWindowCmpt
   * @return {?}
   */


  NgbModalStack.prototype._registerWindowCmpt =
  /**
  * @param {?} ngbWindowCmpt
  * @return {?}
  */
  function (ngbWindowCmpt) {
    var _this = this;

    this._windowCmpts.push(ngbWindowCmpt);

    this._activeWindowCmptHasChanged.next();

    ngbWindowCmpt.onDestroy(function () {
      /** @type {?} */
      var index = _this._windowCmpts.indexOf(ngbWindowCmpt);

      if (index > -1) {
        _this._windowCmpts.splice(index, 1);

        _this._activeWindowCmptHasChanged.next();
      }
    });
  };

  NgbModalStack.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbModalStack.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }, {
      type: ScrollBar
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["RendererFactory2"]
    }];
  };
  /** @nocollapse */


  NgbModalStack.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbModalStack_Factory() {
      return new NgbModalStack(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["INJECTOR"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(ScrollBar), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["RendererFactory2"]));
    },
    token: NgbModalStack,
    providedIn: "root"
  });
  return NgbModalStack;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to
 * the "open" method!
 */


var NgbModal =
/** @class */
function () {
  function NgbModal(_moduleCFR, _injector, _modalStack, _config) {
    this._moduleCFR = _moduleCFR;
    this._injector = _injector;
    this._modalStack = _modalStack;
    this._config = _config;
  }
  /**
   * Opens a new modal window with the specified content and using supplied options. Content can be provided
   * as a TemplateRef or a component type. If you pass a component type as content than instances of those
   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the
   * NgbActiveModal class to close / dismiss modals from "inside" of a component.
   */

  /**
   * Opens a new modal window with the specified content and using supplied options. Content can be provided
   * as a TemplateRef or a component type. If you pass a component type as content than instances of those
   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the
   * NgbActiveModal class to close / dismiss modals from "inside" of a component.
   * @param {?} content
   * @param {?=} options
   * @return {?}
   */


  NgbModal.prototype.open =
  /**
  * Opens a new modal window with the specified content and using supplied options. Content can be provided
  * as a TemplateRef or a component type. If you pass a component type as content than instances of those
  * components can be injected with an instance of the NgbActiveModal class. You can use methods on the
  * NgbActiveModal class to close / dismiss modals from "inside" of a component.
  * @param {?} content
  * @param {?=} options
  * @return {?}
  */
  function (content, options) {
    if (options === void 0) {
      options = {};
    }
    /** @type {?} */


    var combinedOptions = Object.assign({}, this._config, options);
    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);
  };
  /**
   * Dismiss all currently displayed modal windows with the supplied reason.
   *
   * @since 3.1.0
   */

  /**
   * Dismiss all currently displayed modal windows with the supplied reason.
   *
   * \@since 3.1.0
   * @param {?=} reason
   * @return {?}
   */


  NgbModal.prototype.dismissAll =
  /**
  * Dismiss all currently displayed modal windows with the supplied reason.
  *
  * \@since 3.1.0
  * @param {?=} reason
  * @return {?}
  */
  function (reason) {
    this._modalStack.dismissAll(reason);
  };
  /**
   * Indicates if there are currently any open modal windows in the application.
   *
   * @since 3.3.0
   */

  /**
   * Indicates if there are currently any open modal windows in the application.
   *
   * \@since 3.3.0
   * @return {?}
   */


  NgbModal.prototype.hasOpenModals =
  /**
  * Indicates if there are currently any open modal windows in the application.
  *
  * \@since 3.3.0
  * @return {?}
  */
  function () {
    return this._modalStack.hasOpenModals();
  };

  NgbModal.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbModal.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]
    }, {
      type: NgbModalStack
    }, {
      type: NgbModalConfig
    }];
  };
  /** @nocollapse */


  NgbModal.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbModal_Factory() {
      return new NgbModal(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["INJECTOR"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(NgbModalStack), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(NgbModalConfig));
    },
    token: NgbModal,
    providedIn: "root"
  });
  return NgbModal;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbModalModule =
/** @class */
function () {
  function NgbModalModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbModalModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbModalModule
    };
  };

  NgbModalModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbModalBackdrop, NgbModalWindow],
      entryComponents: [NgbModalBackdrop, NgbModalWindow],
      providers: [NgbModal]
    }]
  }];
  return NgbModalModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbPagination component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the paginations used in the application.
 */


var NgbPaginationConfig =
/** @class */
function () {
  function NgbPaginationConfig() {
    this.disabled = false;
    this.boundaryLinks = false;
    this.directionLinks = true;
    this.ellipses = true;
    this.maxSize = 0;
    this.pageSize = 10;
    this.rotate = false;
  }

  NgbPaginationConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbPaginationConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbPaginationConfig_Factory() {
      return new NgbPaginationConfig();
    },
    token: NgbPaginationConfig,
    providedIn: "root"
  });
  return NgbPaginationConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!
 */


var NgbPagination =
/** @class */
function () {
  function NgbPagination(config) {
    this.pageCount = 0;
    this.pages = [];
    /**
     *  Current page. Page numbers start with 1
     */

    this.page = 1;
    /**
     *  An event fired when the page is changed.
     *  Event's payload equals to the newly selected page.
     *  Will fire only if collection size is set and all values are valid.
     *  Page numbers start with 1
     */

    this.pageChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"](true);
    this.disabled = config.disabled;
    this.boundaryLinks = config.boundaryLinks;
    this.directionLinks = config.directionLinks;
    this.ellipses = config.ellipses;
    this.maxSize = config.maxSize;
    this.pageSize = config.pageSize;
    this.rotate = config.rotate;
    this.size = config.size;
  }
  /**
   * @return {?}
   */


  NgbPagination.prototype.hasPrevious =
  /**
  * @return {?}
  */
  function () {
    return this.page > 1;
  };
  /**
   * @return {?}
   */


  NgbPagination.prototype.hasNext =
  /**
  * @return {?}
  */
  function () {
    return this.page < this.pageCount;
  };
  /**
   * @param {?} pageNumber
   * @return {?}
   */


  NgbPagination.prototype.selectPage =
  /**
  * @param {?} pageNumber
  * @return {?}
  */
  function (pageNumber) {
    this._updatePages(pageNumber);
  };
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbPagination.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    this._updatePages(this.page);
  };
  /**
   * @param {?} pageNumber
   * @return {?}
   */


  NgbPagination.prototype.isEllipsis =
  /**
  * @param {?} pageNumber
  * @return {?}
  */
  function (pageNumber) {
    return pageNumber === -1;
  };
  /**
   * Appends ellipses and first/last page number to the displayed pages
   */

  /**
   * Appends ellipses and first/last page number to the displayed pages
   * @param {?} start
   * @param {?} end
   * @return {?}
   */


  NgbPagination.prototype._applyEllipses =
  /**
  * Appends ellipses and first/last page number to the displayed pages
  * @param {?} start
  * @param {?} end
  * @return {?}
  */
  function (start, end) {
    if (this.ellipses) {
      if (start > 0) {
        if (start > 1) {
          this.pages.unshift(-1);
        }

        this.pages.unshift(1);
      }

      if (end < this.pageCount) {
        if (end < this.pageCount - 1) {
          this.pages.push(-1);
        }

        this.pages.push(this.pageCount);
      }
    }
  };
  /**
   * Rotates page numbers based on maxSize items visible.
   * Currently selected page stays in the middle:
   *
   * Ex. for selected page = 6:
   * [5,*6*,7] for maxSize = 3
   * [4,5,*6*,7] for maxSize = 4
   */

  /**
   * Rotates page numbers based on maxSize items visible.
   * Currently selected page stays in the middle:
   *
   * Ex. for selected page = 6:
   * [5,*6*,7] for maxSize = 3
   * [4,5,*6*,7] for maxSize = 4
   * @return {?}
   */


  NgbPagination.prototype._applyRotation =
  /**
  * Rotates page numbers based on maxSize items visible.
  * Currently selected page stays in the middle:
  *
  * Ex. for selected page = 6:
  * [5,*6*,7] for maxSize = 3
  * [4,5,*6*,7] for maxSize = 4
  * @return {?}
  */
  function () {
    /** @type {?} */
    var start = 0;
    /** @type {?} */

    var end = this.pageCount;
    /** @type {?} */

    var leftOffset = Math.floor(this.maxSize / 2);
    /** @type {?} */

    var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;

    if (this.page <= leftOffset) {
      // very beginning, no rotation -> [0..maxSize]
      end = this.maxSize;
    } else if (this.pageCount - this.page < leftOffset) {
      // very end, no rotation -> [len-maxSize..len]
      start = this.pageCount - this.maxSize;
    } else {
      // rotate
      start = this.page - leftOffset - 1;
      end = this.page + rightOffset;
    }

    return [start, end];
  };
  /**
   * Paginates page numbers based on maxSize items per page
   */

  /**
   * Paginates page numbers based on maxSize items per page
   * @return {?}
   */


  NgbPagination.prototype._applyPagination =
  /**
  * Paginates page numbers based on maxSize items per page
  * @return {?}
  */
  function () {
    /** @type {?} */
    var page = Math.ceil(this.page / this.maxSize) - 1;
    /** @type {?} */

    var start = page * this.maxSize;
    /** @type {?} */

    var end = start + this.maxSize;
    return [start, end];
  };
  /**
   * @param {?} newPageNo
   * @return {?}
   */


  NgbPagination.prototype._setPageInRange =
  /**
  * @param {?} newPageNo
  * @return {?}
  */
  function (newPageNo) {
    /** @type {?} */
    var prevPageNo = this.page;
    this.page = getValueInRange(newPageNo, this.pageCount, 1);

    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {
      this.pageChange.emit(this.page);
    }
  };
  /**
   * @param {?} newPage
   * @return {?}
   */


  NgbPagination.prototype._updatePages =
  /**
  * @param {?} newPage
  * @return {?}
  */
  function (newPage) {
    var _a, _b;

    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);

    if (!isNumber(this.pageCount)) {
      this.pageCount = 0;
    } // fill-in model needed to render pages


    this.pages.length = 0;

    for (var i = 1; i <= this.pageCount; i++) {
      this.pages.push(i);
    } // set page within 1..max range


    this._setPageInRange(newPage); // apply maxSize if necessary


    if (this.maxSize > 0 && this.pageCount > this.maxSize) {
      /** @type {?} */
      var start = 0;
      /** @type {?} */

      var end = this.pageCount; // either paginating or rotating page numbers

      if (this.rotate) {
        _a = Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__read"])(this._applyRotation(), 2), start = _a[0], end = _a[1];
      } else {
        _b = Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__read"])(this._applyPagination(), 2), start = _b[0], end = _b[1];
      }

      this.pages = this.pages.slice(start, end); // adding ellipses

      this._applyEllipses(start, end);
    }
  };

  NgbPagination.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-pagination',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      host: {
        'role': 'navigation'
      },
      template: "\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  "
    }]
  }];
  /** @nocollapse */

  NgbPagination.ctorParameters = function () {
    return [{
      type: NgbPaginationConfig
    }];
  };

  NgbPagination.propDecorators = {
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    boundaryLinks: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    directionLinks: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    ellipses: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    rotate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    collectionSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    maxSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    page: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    pageSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    pageChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    size: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbPagination;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbPaginationModule =
/** @class */
function () {
  function NgbPaginationModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbPaginationModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbPaginationModule
    };
  };

  NgbPaginationModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbPagination],
      exports: [NgbPagination],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]
    }]
  }];
  return NgbPaginationModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var Trigger =
/** @class */
function () {
  function Trigger(open, close) {
    this.open = open;
    this.close = close;

    if (!close) {
      this.close = open;
    }
  }
  /**
   * @return {?}
   */


  Trigger.prototype.isManual =
  /**
  * @return {?}
  */
  function () {
    return this.open === 'manual' || this.close === 'manual';
  };

  return Trigger;
}();
/** @type {?} */


var DEFAULT_ALIASES = {
  'hover': ['mouseenter', 'mouseleave']
};
/**
 * @param {?} triggers
 * @param {?=} aliases
 * @return {?}
 */

function parseTriggers(triggers, aliases) {
  if (aliases === void 0) {
    aliases = DEFAULT_ALIASES;
  }
  /** @type {?} */


  var trimmedTriggers = (triggers || '').trim();

  if (trimmedTriggers.length === 0) {
    return [];
  }
  /** @type {?} */


  var parsedTriggers = trimmedTriggers.split(/\s+/).map(function (trigger) {
    return trigger.split(':');
  }).map(function (triggerPair) {
    /** @type {?} */
    var alias = aliases[triggerPair[0]] || triggerPair;
    return new Trigger(alias[0], alias[1]);
  });
  /** @type {?} */

  var manualTriggers = parsedTriggers.filter(function (triggerPair) {
    return triggerPair.isManual();
  });

  if (manualTriggers.length > 1) {
    throw 'Triggers parse error: only one manual trigger is allowed';
  }

  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {
    throw 'Triggers parse error: manual trigger can\'t be mixed with other triggers';
  }

  return parsedTriggers;
}
/** @type {?} */


var noopFn = function noopFn() {};
/**
 * @param {?} renderer
 * @param {?} nativeElement
 * @param {?} triggers
 * @param {?} openFn
 * @param {?} closeFn
 * @param {?} toggleFn
 * @return {?}
 */


function listenToTriggers(renderer, nativeElement, triggers, openFn, closeFn, toggleFn) {
  /** @type {?} */
  var parsedTriggers = parseTriggers(triggers);
  /** @type {?} */

  var listeners = [];

  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {
    return noopFn;
  }

  parsedTriggers.forEach(function (trigger) {
    if (trigger.open === trigger.close) {
      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));
    } else {
      listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));
    }
  });
  return function () {
    listeners.forEach(function (unsubscribeFn) {
      return unsubscribeFn();
    });
  };
}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbPopover directive.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the popovers used in the application.
 */


var NgbPopoverConfig =
/** @class */
function () {
  function NgbPopoverConfig() {
    this.autoClose = true;
    this.placement = 'top';
    this.triggers = 'click';
    this.disablePopover = false;
  }

  NgbPopoverConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbPopoverConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbPopoverConfig_Factory() {
      return new NgbPopoverConfig();
    },
    token: NgbPopoverConfig,
    providedIn: "root"
  });
  return NgbPopoverConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var nextId$3 = 0;

var NgbPopoverWindow =
/** @class */
function () {
  function NgbPopoverWindow(_element, _renderer) {
    this._element = _element;
    this._renderer = _renderer;
    this.placement = 'top';
  }
  /**
   * @return {?}
   */


  NgbPopoverWindow.prototype.isTitleTemplate =
  /**
  * @return {?}
  */
  function () {
    return this.title instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"];
  };
  /**
   * @param {?} _placement
   * @return {?}
   */


  NgbPopoverWindow.prototype.applyPlacement =
  /**
  * @param {?} _placement
  * @return {?}
  */
  function (_placement) {
    // remove the current placement classes
    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);

    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString()); // set the new placement classes


    this.placement = _placement; // apply the new placement

    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);

    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());
  };
  /**
   * Tells whether the event has been triggered from this component's subtree or not.
   *
   * @param event the event to check
   *
   * @return whether the event has been triggered from this component's subtree or not.
   */

  /**
   * Tells whether the event has been triggered from this component's subtree or not.
   *
   * @param {?} event the event to check
   *
   * @return {?} whether the event has been triggered from this component's subtree or not.
   */


  NgbPopoverWindow.prototype.isEventFrom =
  /**
  * Tells whether the event has been triggered from this component's subtree or not.
  *
  * @param {?} event the event to check
  *
  * @return {?} whether the event has been triggered from this component's subtree or not.
  */
  function (event) {
    return this._element.nativeElement.contains(
    /** @type {?} */
    event.target);
  };

  NgbPopoverWindow.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-popover-window',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      host: {
        '[class]': '"popover bs-popover-" + placement.split("-")[0]+" bs-popover-" + placement + (popoverClass ? " " + popoverClass : "")',
        'role': 'tooltip',
        '[id]': 'id'
      },
      template: "\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>",
      styles: ["ngb-popover-window.bs-popover-bottom .arrow,ngb-popover-window.bs-popover-top .arrow{left:50%;margin-left:-5px}ngb-popover-window.bs-popover-bottom-left .arrow,ngb-popover-window.bs-popover-top-left .arrow{left:2em}ngb-popover-window.bs-popover-bottom-right .arrow,ngb-popover-window.bs-popover-top-right .arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left .arrow,ngb-popover-window.bs-popover-right .arrow{top:50%;margin-top:-5px}ngb-popover-window.bs-popover-left-top .arrow,ngb-popover-window.bs-popover-right-top .arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom .arrow,ngb-popover-window.bs-popover-right-bottom .arrow{top:auto;bottom:.7em}"]
    }]
  }];
  /** @nocollapse */

  NgbPopoverWindow.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }];
  };

  NgbPopoverWindow.propDecorators = {
    placement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    popoverClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    context: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbPopoverWindow;
}();
/**
 * A lightweight, extensible directive for fancy popover creation.
 */


var NgbPopover =
/** @class */
function () {
  function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document) {
    var _this = this;

    this._elementRef = _elementRef;
    this._renderer = _renderer;
    this._ngZone = _ngZone;
    this._document = _document;
    /**
     * Emits an event when the popover is shown
     */

    this.shown = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    /**
     * Emits an event when the popover is hidden
     */

    this.hidden = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this._ngbPopoverWindowId = "ngb-popover-" + nextId$3++;
    this.autoClose = config.autoClose;
    this.placement = config.placement;
    this.triggers = config.triggers;
    this.container = config.container;
    this.disablePopover = config.disablePopover;
    this.popoverClass = config.popoverClass;
    this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);
    this._zoneSubscription = _ngZone.onStable.subscribe(function () {
      if (_this._windowRef) {
        _this._windowRef.instance.applyPlacement(positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));
      }
    });
  }
  /**
   * @return {?}
   */


  NgbPopover.prototype._isDisabled =
  /**
  * @return {?}
  */
  function () {
    if (this.disablePopover) {
      return true;
    }

    if (!this.ngbPopover && !this.popoverTitle) {
      return true;
    }

    return false;
  };
  /**
   * Opens an element’s popover. This is considered a “manual” triggering of the popover.
   * The context is an optional value to be injected into the popover template when it is created.
   */

  /**
   * Opens an element’s popover. This is considered a “manual” triggering of the popover.
   * The context is an optional value to be injected into the popover template when it is created.
   * @param {?=} context
   * @return {?}
   */


  NgbPopover.prototype.open =
  /**
  * Opens an element’s popover. This is considered a “manual” triggering of the popover.
  * The context is an optional value to be injected into the popover template when it is created.
  * @param {?=} context
  * @return {?}
  */
  function (context) {
    var _this = this;

    if (!this._windowRef && !this._isDisabled()) {
      this._windowRef = this._popupService.open(this.ngbPopover, context);
      this._windowRef.instance.title = this.popoverTitle;
      this._windowRef.instance.context = context;
      this._windowRef.instance.popoverClass = this.popoverClass;
      this._windowRef.instance.id = this._ngbPopoverWindowId;

      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);

      if (this.container === 'body') {
        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);
      } // apply styling to set basic css-classes on target element, before going for positioning


      this._windowRef.changeDetectorRef.detectChanges();

      this._windowRef.changeDetectorRef.markForCheck(); // position popover along the element


      this._windowRef.instance.applyPlacement(positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));

      if (this.autoClose) {
        this._ngZone.runOutsideAngular(function () {
          // prevents automatic closing right after an opening by putting a guard for the time of one event handling
          // pass
          // use case: click event would reach an element opening the popover first, then reach the autoClose handler
          // which would close it

          /** @type {?} */
          var justOpened = true;
          requestAnimationFrame(function () {
            return justOpened = false;
          });
          /** @type {?} */

          var escapes$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'keyup').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this.hidden), // tslint:disable-next-line:deprecation
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) {
            return event.which === Key.Escape;
          }));
          /** @type {?} */

          var clicks$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'click').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this.hidden), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function () {
            return !justOpened;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) {
            return _this._shouldCloseFromClick(event);
          }));
          Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["race"])([escapes$, clicks$]).subscribe(function () {
            return _this._ngZone.run(function () {
              return _this.close();
            });
          });
        });
      }

      this.shown.emit();
    }
  };
  /**
   * Closes an element’s popover. This is considered a “manual” triggering of the popover.
   */

  /**
   * Closes an element’s popover. This is considered a “manual” triggering of the popover.
   * @return {?}
   */


  NgbPopover.prototype.close =
  /**
  * Closes an element’s popover. This is considered a “manual” triggering of the popover.
  * @return {?}
  */
  function () {
    if (this._windowRef) {
      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');

      this._popupService.close();

      this._windowRef = null;
      this.hidden.emit();
    }
  };
  /**
   * Toggles an element’s popover. This is considered a “manual” triggering of the popover.
   */

  /**
   * Toggles an element’s popover. This is considered a “manual” triggering of the popover.
   * @return {?}
   */


  NgbPopover.prototype.toggle =
  /**
  * Toggles an element’s popover. This is considered a “manual” triggering of the popover.
  * @return {?}
  */
  function () {
    if (this._windowRef) {
      this.close();
    } else {
      this.open();
    }
  };
  /**
   * Returns whether or not the popover is currently being shown
   */

  /**
   * Returns whether or not the popover is currently being shown
   * @return {?}
   */


  NgbPopover.prototype.isOpen =
  /**
  * Returns whether or not the popover is currently being shown
  * @return {?}
  */
  function () {
    return this._windowRef != null;
  };
  /**
   * @return {?}
   */


  NgbPopover.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));
  };
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbPopover.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    // close popover if title and content become empty, or disablePopover set to true
    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {
      this.close();
    }
  };
  /**
   * @return {?}
   */


  NgbPopover.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit
    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199

    if (this._unregisterListenersFn) {
      this._unregisterListenersFn();
    }

    this._zoneSubscription.unsubscribe();
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbPopover.prototype._shouldCloseFromClick =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    if (event.button !== 2) {
      if (this.autoClose === true) {
        return true;
      } else if (this.autoClose === 'inside' && this._isEventFromPopover(event)) {
        return true;
      } else if (this.autoClose === 'outside' && !this._isEventFromPopover(event)) {
        return true;
      }
    }

    return false;
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbPopover.prototype._isEventFromPopover =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    /** @type {?} */
    var popup = this._windowRef.instance;
    return popup ? popup.isEventFrom(event) : false;
  };

  NgbPopover.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbPopover]',
      exportAs: 'ngbPopover'
    }]
  }];
  /** @nocollapse */

  NgbPopover.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]
    }, {
      type: NgbPopoverConfig
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }];
  };

  NgbPopover.propDecorators = {
    autoClose: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    ngbPopover: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    popoverTitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    placement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    triggers: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    disablePopover: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    popoverClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    shown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    hidden: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbPopover;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbPopoverModule =
/** @class */
function () {
  function NgbPopoverModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbPopoverModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbPopoverModule
    };
  };

  NgbPopoverModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbPopover, NgbPopoverWindow],
      exports: [NgbPopover],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      entryComponents: [NgbPopoverWindow]
    }]
  }];
  return NgbPopoverModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbProgressbar component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the progress bars used in the application.
 */


var NgbProgressbarConfig =
/** @class */
function () {
  function NgbProgressbarConfig() {
    this.max = 100;
    this.animated = false;
    this.striped = false;
    this.showValue = false;
  }

  NgbProgressbarConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbProgressbarConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbProgressbarConfig_Factory() {
      return new NgbProgressbarConfig();
    },
    token: NgbProgressbarConfig,
    providedIn: "root"
  });
  return NgbProgressbarConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Directive that can be used to provide feedback on the progress of a workflow or an action.
 */


var NgbProgressbar =
/** @class */
function () {
  function NgbProgressbar(config) {
    /**
     * Current value to be displayed in the progressbar. Should be smaller or equal to "max" value.
     */
    this.value = 0;
    this.max = config.max;
    this.animated = config.animated;
    this.striped = config.striped;
    this.type = config.type;
    this.showValue = config.showValue;
    this.height = config.height;
  }
  /**
   * @return {?}
   */


  NgbProgressbar.prototype.getValue =
  /**
  * @return {?}
  */
  function () {
    return getValueInRange(this.value, this.max);
  };
  /**
   * @return {?}
   */


  NgbProgressbar.prototype.getPercentValue =
  /**
  * @return {?}
  */
  function () {
    return 100 * this.getValue() / this.max;
  };

  NgbProgressbar.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-progressbar',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      template: "\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  "
    }]
  }];
  /** @nocollapse */

  NgbProgressbar.ctorParameters = function () {
    return [{
      type: NgbProgressbarConfig
    }];
  };

  NgbProgressbar.propDecorators = {
    max: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    animated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    striped: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    height: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbProgressbar;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbProgressbarModule =
/** @class */
function () {
  function NgbProgressbarModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbProgressbarModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbProgressbarModule
    };
  };

  NgbProgressbarModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbProgressbar],
      exports: [NgbProgressbar],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]
    }]
  }];
  return NgbProgressbarModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbRating component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the ratings used in the application.
 */


var NgbRatingConfig =
/** @class */
function () {
  function NgbRatingConfig() {
    this.max = 10;
    this.readonly = false;
    this.resettable = false;
  }

  NgbRatingConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbRatingConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbRatingConfig_Factory() {
      return new NgbRatingConfig();
    },
    token: NgbRatingConfig,
    providedIn: "root"
  });
  return NgbRatingConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_RATING_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbRating;
  }),
  multi: true
};
/**
 * Rating directive that will take care of visualising a star rating bar.
 */

var NgbRating =
/** @class */
function () {
  function NgbRating(config, _changeDetectorRef) {
    this._changeDetectorRef = _changeDetectorRef;
    this.contexts = [];
    this.disabled = false;
    /**
     * An event fired when a user is hovering over a given rating.
     * Event's payload equals to the rating being hovered over.
     */

    this.hover = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    /**
     * An event fired when a user stops hovering over a given rating.
     * Event's payload equals to the rating of the last item being hovered over.
     */

    this.leave = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    /**
     * An event fired when a user selects a new rating.
     * Event's payload equals to the newly selected rating.
     */

    this.rateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"](true);

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this.max = config.max;
    this.readonly = config.readonly;
  }
  /**
   * @return {?}
   */


  NgbRating.prototype.ariaValueText =
  /**
  * @return {?}
  */
  function () {
    return this.nextRate + " out of " + this.max;
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbRating.prototype.enter =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    if (!this.readonly && !this.disabled) {
      this._updateState(value);
    }

    this.hover.emit(value);
  };
  /**
   * @return {?}
   */


  NgbRating.prototype.handleBlur =
  /**
  * @return {?}
  */
  function () {
    this.onTouched();
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbRating.prototype.handleClick =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this.update(this.resettable && this.rate === value ? 0 : value);
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbRating.prototype.handleKeyDown =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    // tslint:disable-next-line:deprecation
    var which = event.which;

    if (Key[toString(which)]) {
      event.preventDefault();

      switch (which) {
        case Key.ArrowDown:
        case Key.ArrowLeft:
          this.update(this.rate - 1);
          break;

        case Key.ArrowUp:
        case Key.ArrowRight:
          this.update(this.rate + 1);
          break;

        case Key.Home:
          this.update(0);
          break;

        case Key.End:
          this.update(this.max);
          break;
      }
    }
  };
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbRating.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    if (changes['rate']) {
      this.update(this.rate);
    }
  };
  /**
   * @return {?}
   */


  NgbRating.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    this.contexts = Array.from({
      length: this.max
    }, function (v, k) {
      return {
        fill: 0,
        index: k
      };
    });

    this._updateState(this.rate);
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbRating.prototype.registerOnChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onChange = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbRating.prototype.registerOnTouched =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onTouched = fn;
  };
  /**
   * @return {?}
   */


  NgbRating.prototype.reset =
  /**
  * @return {?}
  */
  function () {
    this.leave.emit(this.nextRate);

    this._updateState(this.rate);
  };
  /**
   * @param {?} isDisabled
   * @return {?}
   */


  NgbRating.prototype.setDisabledState =
  /**
  * @param {?} isDisabled
  * @return {?}
  */
  function (isDisabled) {
    this.disabled = isDisabled;
  };
  /**
   * @param {?} value
   * @param {?=} internalChange
   * @return {?}
   */


  NgbRating.prototype.update =
  /**
  * @param {?} value
  * @param {?=} internalChange
  * @return {?}
  */
  function (value, internalChange) {
    if (internalChange === void 0) {
      internalChange = true;
    }
    /** @type {?} */


    var newRate = getValueInRange(value, this.max, 0);

    if (!this.readonly && !this.disabled && this.rate !== newRate) {
      this.rate = newRate;
      this.rateChange.emit(this.rate);
    }

    if (internalChange) {
      this.onChange(this.rate);
      this.onTouched();
    }

    this._updateState(this.rate);
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbRating.prototype.writeValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this.update(value, false);

    this._changeDetectorRef.markForCheck();
  };
  /**
   * @param {?} index
   * @return {?}
   */


  NgbRating.prototype._getFillValue =
  /**
  * @param {?} index
  * @return {?}
  */
  function (index) {
    /** @type {?} */
    var diff = this.nextRate - index;

    if (diff >= 1) {
      return 100;
    }

    if (diff < 1 && diff > 0) {
      return parseInt((diff * 100).toFixed(2), 10);
    }

    return 0;
  };
  /**
   * @param {?} nextValue
   * @return {?}
   */


  NgbRating.prototype._updateState =
  /**
  * @param {?} nextValue
  * @return {?}
  */
  function (nextValue) {
    var _this = this;

    this.nextRate = nextValue;
    this.contexts.forEach(function (context, index) {
      return context.fill = _this._getFillValue(index);
    });
  };

  NgbRating.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-rating',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      host: {
        'class': 'd-inline-flex',
        'tabindex': '0',
        'role': 'slider',
        'aria-valuemin': '0',
        '[attr.aria-valuemax]': 'max',
        '[attr.aria-valuenow]': 'nextRate',
        '[attr.aria-valuetext]': 'ariaValueText()',
        '[attr.aria-disabled]': 'readonly ? true : null',
        '(blur)': 'handleBlur()',
        '(keydown)': 'handleKeyDown($event)',
        '(mouseleave)': 'reset()'
      },
      template: "\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  ",
      providers: [NGB_RATING_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbRating.ctorParameters = function () {
    return [{
      type: NgbRatingConfig
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
    }];
  };

  NgbRating.propDecorators = {
    max: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    rate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    readonly: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    resettable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    starTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"],
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]]
    }],
    hover: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    leave: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    rateChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbRating;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbRatingModule =
/** @class */
function () {
  function NgbRatingModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbRatingModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbRatingModule
    };
  };

  NgbRatingModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbRating],
      exports: [NgbRating],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]
    }]
  }];
  return NgbRatingModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbTabset component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the tabsets used in the application.
 */


var NgbTabsetConfig =
/** @class */
function () {
  function NgbTabsetConfig() {
    this.justify = 'start';
    this.orientation = 'horizontal';
    this.type = 'tabs';
  }

  NgbTabsetConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbTabsetConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbTabsetConfig_Factory() {
      return new NgbTabsetConfig();
    },
    token: NgbTabsetConfig,
    providedIn: "root"
  });
  return NgbTabsetConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var nextId$4 = 0;
/**
 * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.
 */

var NgbTabTitle =
/** @class */
function () {
  function NgbTabTitle(templateRef) {
    this.templateRef = templateRef;
  }

  NgbTabTitle.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'ng-template[ngbTabTitle]'
    }]
  }];
  /** @nocollapse */

  NgbTabTitle.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]
    }];
  };

  return NgbTabTitle;
}();
/**
 * This directive must be used to wrap content to be displayed in a tab.
 */


var NgbTabContent =
/** @class */
function () {
  function NgbTabContent(templateRef) {
    this.templateRef = templateRef;
  }

  NgbTabContent.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'ng-template[ngbTabContent]'
    }]
  }];
  /** @nocollapse */

  NgbTabContent.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]
    }];
  };

  return NgbTabContent;
}();
/**
 * A directive representing an individual tab.
 */


var NgbTab =
/** @class */
function () {
  function NgbTab() {
    /**
     * Unique tab identifier. Must be unique for the entire document for proper accessibility support.
     */
    this.id = "ngb-tab-" + nextId$4++;
    /**
     * Allows toggling disabled state of a given state. Disabled tabs can't be selected.
     */

    this.disabled = false;
  }
  /**
   * @return {?}
   */


  NgbTab.prototype.ngAfterContentChecked =
  /**
  * @return {?}
  */
  function () {
    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used
    // only @ContentChildren allows us to specify the {descendants: false} option.
    // Without {descendants: false} we are hitting bugs described in:
    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240
    this.titleTpl = this.titleTpls.first;
    this.contentTpl = this.contentTpls.first;
  };

  NgbTab.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'ngb-tab'
    }]
  }];
  NgbTab.propDecorators = {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    titleTpls: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"],
      args: [NgbTabTitle, {
        descendants: false
      }]
    }],
    contentTpls: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"],
      args: [NgbTabContent, {
        descendants: false
      }]
    }]
  };
  return NgbTab;
}();
/**
 * A component that makes it easy to create tabbed interface.
 */


var NgbTabset =
/** @class */
function () {
  function NgbTabset(config) {
    /**
     * Whether the closed tabs should be hidden without destroying them
     */
    this.destroyOnHide = true;
    /**
     * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details
     */

    this.tabChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.type = config.type;
    this.justify = config.justify;
    this.orientation = config.orientation;
  }

  Object.defineProperty(NgbTabset.prototype, "justify", {
    /**
     * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or
     * 'justified'
     * The default value is 'start'.
     */
    set:
    /**
    * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or
    * 'justified'
    * The default value is 'start'.
    * @param {?} className
    * @return {?}
    */
    function set(className) {
      if (className === 'fill' || className === 'justified') {
        this.justifyClass = "nav-" + className;
      } else {
        this.justifyClass = "justify-content-" + className;
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Selects the tab with the given id and shows its associated pane.
   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.
   */

  /**
   * Selects the tab with the given id and shows its associated pane.
   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.
   * @param {?} tabId
   * @return {?}
   */

  NgbTabset.prototype.select =
  /**
  * Selects the tab with the given id and shows its associated pane.
  * Any other tab that was previously selected becomes unselected and its associated pane is hidden.
  * @param {?} tabId
  * @return {?}
  */
  function (tabId) {
    /** @type {?} */
    var selectedTab = this._getTabById(tabId);

    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {
      /** @type {?} */
      var defaultPrevented_1 = false;
      this.tabChange.emit({
        activeId: this.activeId,
        nextId: selectedTab.id,
        preventDefault: function preventDefault() {
          defaultPrevented_1 = true;
        }
      });

      if (!defaultPrevented_1) {
        this.activeId = selectedTab.id;
      }
    }
  };
  /**
   * @return {?}
   */


  NgbTabset.prototype.ngAfterContentChecked =
  /**
  * @return {?}
  */
  function () {
    // auto-correct activeId that might have been set incorrectly as input

    /** @type {?} */
    var activeTab = this._getTabById(this.activeId);

    this.activeId = activeTab ? activeTab.id : this.tabs.length ? this.tabs.first.id : null;
  };
  /**
   * @param {?} id
   * @return {?}
   */


  NgbTabset.prototype._getTabById =
  /**
  * @param {?} id
  * @return {?}
  */
  function (id) {
    /** @type {?} */
    var tabsWithId = this.tabs.filter(function (tab) {
      return tab.id === id;
    });
    return tabsWithId.length ? tabsWithId[0] : null;
  };

  NgbTabset.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-tabset',
      exportAs: 'ngbTabset',
      template: "\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  "
    }]
  }];
  /** @nocollapse */

  NgbTabset.ctorParameters = function () {
    return [{
      type: NgbTabsetConfig
    }];
  };

  NgbTabset.propDecorators = {
    tabs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"],
      args: [NgbTab]
    }],
    activeId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    destroyOnHide: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    justify: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    orientation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    tabChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbTabset;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];

var NgbTabsetModule =
/** @class */
function () {
  function NgbTabsetModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbTabsetModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbTabsetModule
    };
  };

  NgbTabsetModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: NGB_TABSET_DIRECTIVES,
      exports: NGB_TABSET_DIRECTIVES,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]
    }]
  }];
  return NgbTabsetModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbTime =
/** @class */
function () {
  function NgbTime(hour, minute, second) {
    this.hour = toInteger(hour);
    this.minute = toInteger(minute);
    this.second = toInteger(second);
  }
  /**
   * @param {?=} step
   * @return {?}
   */


  NgbTime.prototype.changeHour =
  /**
  * @param {?=} step
  * @return {?}
  */
  function (step) {
    if (step === void 0) {
      step = 1;
    }

    this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);
  };
  /**
   * @param {?} hour
   * @return {?}
   */


  NgbTime.prototype.updateHour =
  /**
  * @param {?} hour
  * @return {?}
  */
  function (hour) {
    if (isNumber(hour)) {
      this.hour = (hour < 0 ? 24 + hour : hour) % 24;
    } else {
      this.hour = NaN;
    }
  };
  /**
   * @param {?=} step
   * @return {?}
   */


  NgbTime.prototype.changeMinute =
  /**
  * @param {?=} step
  * @return {?}
  */
  function (step) {
    if (step === void 0) {
      step = 1;
    }

    this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);
  };
  /**
   * @param {?} minute
   * @return {?}
   */


  NgbTime.prototype.updateMinute =
  /**
  * @param {?} minute
  * @return {?}
  */
  function (minute) {
    if (isNumber(minute)) {
      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;
      this.changeHour(Math.floor(minute / 60));
    } else {
      this.minute = NaN;
    }
  };
  /**
   * @param {?=} step
   * @return {?}
   */


  NgbTime.prototype.changeSecond =
  /**
  * @param {?=} step
  * @return {?}
  */
  function (step) {
    if (step === void 0) {
      step = 1;
    }

    this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);
  };
  /**
   * @param {?} second
   * @return {?}
   */


  NgbTime.prototype.updateSecond =
  /**
  * @param {?} second
  * @return {?}
  */
  function (second) {
    if (isNumber(second)) {
      this.second = second < 0 ? 60 + second % 60 : second % 60;
      this.changeMinute(Math.floor(second / 60));
    } else {
      this.second = NaN;
    }
  };
  /**
   * @param {?=} checkSecs
   * @return {?}
   */


  NgbTime.prototype.isValid =
  /**
  * @param {?=} checkSecs
  * @return {?}
  */
  function (checkSecs) {
    if (checkSecs === void 0) {
      checkSecs = true;
    }

    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);
  };
  /**
   * @return {?}
   */


  NgbTime.prototype.toString =
  /**
  * @return {?}
  */
  function () {
    return (this.hour || 0) + ":" + (this.minute || 0) + ":" + (this.second || 0);
  };

  return NgbTime;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbTimepicker component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the timepickers used in the application.
 */


var NgbTimepickerConfig =
/** @class */
function () {
  function NgbTimepickerConfig() {
    this.meridian = false;
    this.spinners = true;
    this.seconds = false;
    this.hourStep = 1;
    this.minuteStep = 1;
    this.secondStep = 1;
    this.disabled = false;
    this.readonlyInputs = false;
    this.size = 'medium';
  }

  NgbTimepickerConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbTimepickerConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbTimepickerConfig_Factory() {
      return new NgbTimepickerConfig();
    },
    token: NgbTimepickerConfig,
    providedIn: "root"
  });
  return NgbTimepickerConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @return {?}
 */


function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {
  return new NgbTimeStructAdapter();
}
/**
 * Abstract type serving as a DI token for the service converting from your application Time model to internal
 * NgbTimeStruct model.
 * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,
 * but you can provide another implementation to use an alternative format, ie for using with native Date Object.
 *
 * \@since 2.2.0
 * @abstract
 * @template T
 */


var NgbTimeAdapter =
/** @class */
function () {
  function NgbTimeAdapter() {}

  NgbTimeAdapter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root',
      useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY
    }]
  }];
  /** @nocollapse */

  NgbTimeAdapter.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY,
    token: NgbTimeAdapter,
    providedIn: "root"
  });
  return NgbTimeAdapter;
}();

var NgbTimeStructAdapter =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_5__["__extends"])(NgbTimeStructAdapter, _super);

  function NgbTimeStructAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * Converts a NgbTimeStruct value into NgbTimeStruct value
   */

  /**
   * Converts a NgbTimeStruct value into NgbTimeStruct value
   * @param {?} time
   * @return {?}
   */


  NgbTimeStructAdapter.prototype.fromModel =
  /**
  * Converts a NgbTimeStruct value into NgbTimeStruct value
  * @param {?} time
  * @return {?}
  */
  function (time) {
    return time && isInteger(time.hour) && isInteger(time.minute) ? {
      hour: time.hour,
      minute: time.minute,
      second: isInteger(time.second) ? time.second : null
    } : null;
  };
  /**
   * Converts a NgbTimeStruct value into NgbTimeStruct value
   */

  /**
   * Converts a NgbTimeStruct value into NgbTimeStruct value
   * @param {?} time
   * @return {?}
   */


  NgbTimeStructAdapter.prototype.toModel =
  /**
  * Converts a NgbTimeStruct value into NgbTimeStruct value
  * @param {?} time
  * @return {?}
  */
  function (time) {
    return time && isInteger(time.hour) && isInteger(time.minute) ? {
      hour: time.hour,
      minute: time.minute,
      second: isInteger(time.second) ? time.second : null
    } : null;
  };

  NgbTimeStructAdapter.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
  }];
  return NgbTimeStructAdapter;
}(NgbTimeAdapter);
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_TIMEPICKER_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbTimepicker;
  }),
  multi: true
};
/**
 * A lightweight & configurable timepicker directive.
 */

var NgbTimepicker =
/** @class */
function () {
  function NgbTimepicker(config, _ngbTimeAdapter) {
    this._ngbTimeAdapter = _ngbTimeAdapter;

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this.meridian = config.meridian;
    this.spinners = config.spinners;
    this.seconds = config.seconds;
    this.hourStep = config.hourStep;
    this.minuteStep = config.minuteStep;
    this.secondStep = config.secondStep;
    this.disabled = config.disabled;
    this.readonlyInputs = config.readonlyInputs;
    this.size = config.size;
  }
  /**
   * @param {?} value
   * @return {?}
   */


  NgbTimepicker.prototype.writeValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    /** @type {?} */
    var structValue = this._ngbTimeAdapter.fromModel(value);

    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();

    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {
      this.model.second = 0;
    }
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbTimepicker.prototype.registerOnChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onChange = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbTimepicker.prototype.registerOnTouched =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this.onTouched = fn;
  };
  /**
   * @param {?} isDisabled
   * @return {?}
   */


  NgbTimepicker.prototype.setDisabledState =
  /**
  * @param {?} isDisabled
  * @return {?}
  */
  function (isDisabled) {
    this.disabled = isDisabled;
  };
  /**
   * @param {?} step
   * @return {?}
   */


  NgbTimepicker.prototype.changeHour =
  /**
  * @param {?} step
  * @return {?}
  */
  function (step) {
    this.model.changeHour(step);
    this.propagateModelChange();
  };
  /**
   * @param {?} step
   * @return {?}
   */


  NgbTimepicker.prototype.changeMinute =
  /**
  * @param {?} step
  * @return {?}
  */
  function (step) {
    this.model.changeMinute(step);
    this.propagateModelChange();
  };
  /**
   * @param {?} step
   * @return {?}
   */


  NgbTimepicker.prototype.changeSecond =
  /**
  * @param {?} step
  * @return {?}
  */
  function (step) {
    this.model.changeSecond(step);
    this.propagateModelChange();
  };
  /**
   * @param {?} newVal
   * @return {?}
   */


  NgbTimepicker.prototype.updateHour =
  /**
  * @param {?} newVal
  * @return {?}
  */
  function (newVal) {
    /** @type {?} */
    var isPM = this.model.hour >= 12;
    /** @type {?} */

    var enteredHour = toInteger(newVal);

    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {
      this.model.updateHour(enteredHour + 12);
    } else {
      this.model.updateHour(enteredHour);
    }

    this.propagateModelChange();
  };
  /**
   * @param {?} newVal
   * @return {?}
   */


  NgbTimepicker.prototype.updateMinute =
  /**
  * @param {?} newVal
  * @return {?}
  */
  function (newVal) {
    this.model.updateMinute(toInteger(newVal));
    this.propagateModelChange();
  };
  /**
   * @param {?} newVal
   * @return {?}
   */


  NgbTimepicker.prototype.updateSecond =
  /**
  * @param {?} newVal
  * @return {?}
  */
  function (newVal) {
    this.model.updateSecond(toInteger(newVal));
    this.propagateModelChange();
  };
  /**
   * @return {?}
   */


  NgbTimepicker.prototype.toggleMeridian =
  /**
  * @return {?}
  */
  function () {
    if (this.meridian) {
      this.changeHour(12);
    }
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbTimepicker.prototype.formatHour =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    if (isNumber(value)) {
      if (this.meridian) {
        return padNumber(value % 12 === 0 ? 12 : value % 12);
      } else {
        return padNumber(value % 24);
      }
    } else {
      return padNumber(NaN);
    }
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbTimepicker.prototype.formatMinSec =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    return padNumber(value);
  };

  Object.defineProperty(NgbTimepicker.prototype, "isSmallSize", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this.size === 'small';
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbTimepicker.prototype, "isLargeSize", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this.size === 'large';
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @param {?} changes
   * @return {?}
   */

  NgbTimepicker.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {
      this.model.second = 0;
      this.propagateModelChange(false);
    }
  };
  /**
   * @param {?=} touched
   * @return {?}
   */


  NgbTimepicker.prototype.propagateModelChange =
  /**
  * @param {?=} touched
  * @return {?}
  */
  function (touched) {
    if (touched === void 0) {
      touched = true;
    }

    if (touched) {
      this.onTouched();
    }

    if (this.model.isValid(this.seconds)) {
      this.onChange(this._ngbTimeAdapter.toModel({
        hour: this.model.hour,
        minute: this.model.minute,
        second: this.model.second
      }));
    } else {
      this.onChange(this._ngbTimeAdapter.toModel(null));
    }
  };

  NgbTimepicker.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-timepicker',
      template: "\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  ",
      providers: [NGB_TIMEPICKER_VALUE_ACCESSOR],
      styles: [":host{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}.chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:'';display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}input{text-align:center}"]
    }]
  }];
  /** @nocollapse */

  NgbTimepicker.ctorParameters = function () {
    return [{
      type: NgbTimepickerConfig
    }, {
      type: NgbTimeAdapter
    }];
  };

  NgbTimepicker.propDecorators = {
    meridian: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    spinners: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    seconds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    hourStep: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    minuteStep: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    secondStep: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    readonlyInputs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    size: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbTimepicker;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbTimepickerModule =
/** @class */
function () {
  function NgbTimepickerModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbTimepickerModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbTimepickerModule
    };
  };

  NgbTimepickerModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbTimepicker],
      exports: [NgbTimepicker],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]
    }]
  }];
  return NgbTimepickerModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbTooltip directive.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the tooltips used in the application.
 */


var NgbTooltipConfig =
/** @class */
function () {
  function NgbTooltipConfig() {
    this.autoClose = true;
    this.placement = 'top';
    this.triggers = 'hover';
    this.disableTooltip = false;
  }

  NgbTooltipConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbTooltipConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbTooltipConfig_Factory() {
      return new NgbTooltipConfig();
    },
    token: NgbTooltipConfig,
    providedIn: "root"
  });
  return NgbTooltipConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var nextId$5 = 0;

var NgbTooltipWindow =
/** @class */
function () {
  function NgbTooltipWindow(_element, _renderer) {
    this._element = _element;
    this._renderer = _renderer;
    this.placement = 'top';
  }
  /**
   * @param {?} _placement
   * @return {?}
   */


  NgbTooltipWindow.prototype.applyPlacement =
  /**
  * @param {?} _placement
  * @return {?}
  */
  function (_placement) {
    // remove the current placement classes
    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);

    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString()); // set the new placement classes


    this.placement = _placement; // apply the new placement

    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);

    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());
  };
  /**
   * Tells whether the event has been triggered from this component's subtree or not.
   *
   * @param event the event to check
   *
   * @return whether the event has been triggered from this component's subtree or not.
   */

  /**
   * Tells whether the event has been triggered from this component's subtree or not.
   *
   * @param {?} event the event to check
   *
   * @return {?} whether the event has been triggered from this component's subtree or not.
   */


  NgbTooltipWindow.prototype.isEventFrom =
  /**
  * Tells whether the event has been triggered from this component's subtree or not.
  *
  * @param {?} event the event to check
  *
  * @return {?} whether the event has been triggered from this component's subtree or not.
  */
  function (event) {
    return this._element.nativeElement.contains(
    /** @type {?} */
    event.target);
  };

  NgbTooltipWindow.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-tooltip-window',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      host: {
        '[class]': '"tooltip show bs-tooltip-" + placement.split("-")[0]+" bs-tooltip-" + placement + (tooltipClass ? " " + tooltipClass : "")',
        'role': 'tooltip',
        '[id]': 'id'
      },
      template: "<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>",
      styles: ["ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}"]
    }]
  }];
  /** @nocollapse */

  NgbTooltipWindow.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }];
  };

  NgbTooltipWindow.propDecorators = {
    placement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    tooltipClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbTooltipWindow;
}();
/**
 * A lightweight, extensible directive for fancy tooltip creation.
 */


var NgbTooltip =
/** @class */
function () {
  function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document) {
    var _this = this;

    this._elementRef = _elementRef;
    this._renderer = _renderer;
    this._ngZone = _ngZone;
    this._document = _document;
    /**
     * Emits an event when the tooltip is shown
     */

    this.shown = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    /**
     * Emits an event when the tooltip is hidden
     */

    this.hidden = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this._ngbTooltipWindowId = "ngb-tooltip-" + nextId$5++;
    this.autoClose = config.autoClose;
    this.placement = config.placement;
    this.triggers = config.triggers;
    this.container = config.container;
    this.disableTooltip = config.disableTooltip;
    this.tooltipClass = config.tooltipClass;
    this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);
    this._zoneSubscription = _ngZone.onStable.subscribe(function () {
      if (_this._windowRef) {
        _this._windowRef.instance.applyPlacement(positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));
      }
    });
  }

  Object.defineProperty(NgbTooltip.prototype, "ngbTooltip", {
    get:
    /**
    * @return {?}
    */
    function get() {
      return this._ngbTooltip;
    },

    /**
     * Content to be displayed as tooltip. If falsy, the tooltip won't open.
     */
    set:
    /**
    * Content to be displayed as tooltip. If falsy, the tooltip won't open.
    * @param {?} value
    * @return {?}
    */
    function set(value) {
      this._ngbTooltip = value;

      if (!value && this._windowRef) {
        this.close();
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   * The context is an optional value to be injected into the tooltip template when it is created.
   */

  /**
   * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   * The context is an optional value to be injected into the tooltip template when it is created.
   * @param {?=} context
   * @return {?}
   */

  NgbTooltip.prototype.open =
  /**
  * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.
  * The context is an optional value to be injected into the tooltip template when it is created.
  * @param {?=} context
  * @return {?}
  */
  function (context) {
    var _this = this;

    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {
      this._windowRef = this._popupService.open(this._ngbTooltip, context);
      this._windowRef.instance.tooltipClass = this.tooltipClass;
      this._windowRef.instance.id = this._ngbTooltipWindowId;

      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);

      if (this.container === 'body') {
        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);
      }

      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement; // apply styling to set basic css-classes on target element, before going for positioning

      this._windowRef.changeDetectorRef.detectChanges();

      this._windowRef.changeDetectorRef.markForCheck(); // position tooltip along the element


      this._windowRef.instance.applyPlacement(positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));

      if (this.autoClose) {
        this._ngZone.runOutsideAngular(function () {
          // prevents automatic closing right after an opening by putting a guard for the time of one event handling
          // pass
          // use case: click event would reach an element opening the tooltip first, then reach the autoClose handler
          // which would close it

          /** @type {?} */
          var justOpened = true;
          requestAnimationFrame(function () {
            return justOpened = false;
          });
          /** @type {?} */

          var escapes$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'keyup').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this.hidden), // tslint:disable-next-line:deprecation
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) {
            return event.which === Key.Escape;
          }));
          /** @type {?} */

          var clicks$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_this._document, 'click').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this.hidden), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function () {
            return !justOpened;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) {
            return _this._shouldCloseFromClick(event);
          }));
          Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["race"])([escapes$, clicks$]).subscribe(function () {
            return _this._ngZone.run(function () {
              return _this.close();
            });
          });
        });
      }

      this.shown.emit();
    }
  };
  /**
   * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   */

  /**
   * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   * @return {?}
   */


  NgbTooltip.prototype.close =
  /**
  * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.
  * @return {?}
  */
  function () {
    if (this._windowRef != null) {
      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');

      this._popupService.close();

      this._windowRef = null;
      this.hidden.emit();
    }
  };
  /**
   * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   */

  /**
   * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   * @return {?}
   */


  NgbTooltip.prototype.toggle =
  /**
  * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.
  * @return {?}
  */
  function () {
    if (this._windowRef) {
      this.close();
    } else {
      this.open();
    }
  };
  /**
   * Returns whether or not the tooltip is currently being shown
   */

  /**
   * Returns whether or not the tooltip is currently being shown
   * @return {?}
   */


  NgbTooltip.prototype.isOpen =
  /**
  * Returns whether or not the tooltip is currently being shown
  * @return {?}
  */
  function () {
    return this._windowRef != null;
  };
  /**
   * @return {?}
   */


  NgbTooltip.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));
  };
  /**
   * @return {?}
   */


  NgbTooltip.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit
    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199

    if (this._unregisterListenersFn) {
      this._unregisterListenersFn();
    }

    this._zoneSubscription.unsubscribe();
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbTooltip.prototype._shouldCloseFromClick =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    if (event.button !== 2) {
      if (this.autoClose === true) {
        return true;
      } else if (this.autoClose === 'inside' && this._isEventFromTooltip(event)) {
        return true;
      } else if (this.autoClose === 'outside' && !this._isEventFromTooltip(event)) {
        return true;
      }
    }

    return false;
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbTooltip.prototype._isEventFromTooltip =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    /** @type {?} */
    var popup = this._windowRef.instance;
    return popup ? popup.isEventFrom(event) : false;
  };

  NgbTooltip.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: '[ngbTooltip]',
      exportAs: 'ngbTooltip'
    }]
  }];
  /** @nocollapse */

  NgbTooltip.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]
    }, {
      type: NgbTooltipConfig
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }];
  };

  NgbTooltip.propDecorators = {
    autoClose: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    placement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    triggers: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    disableTooltip: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    tooltipClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    shown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    hidden: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }],
    ngbTooltip: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbTooltip;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbTooltipModule =
/** @class */
function () {
  function NgbTooltipModule() {}
  /**
   * No need in forRoot anymore with tree-shakeable services
   *
   * @deprecated 3.0.0
   */

  /**
   * No need in forRoot anymore with tree-shakeable services
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbTooltipModule.forRoot =
  /**
  * No need in forRoot anymore with tree-shakeable services
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbTooltipModule
    };
  };

  NgbTooltipModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbTooltip, NgbTooltipWindow],
      exports: [NgbTooltip],
      entryComponents: [NgbTooltipWindow]
    }]
  }];
  return NgbTooltipModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * A component that can be used inside a custom result template in order to highlight the term inside the text of the
 * result
 */


var NgbHighlight =
/** @class */
function () {
  function NgbHighlight() {
    /**
     * The CSS class of the span elements wrapping the term inside the result
     */
    this.highlightClass = 'ngb-highlight';
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  NgbHighlight.prototype.ngOnChanges =
  /**
  * @param {?} changes
  * @return {?}
  */
  function (changes) {
    /** @type {?} */
    var resultStr = toString(this.result);
    /** @type {?} */

    var resultLC = resultStr.toLowerCase();
    /** @type {?} */

    var termLC = toString(this.term).toLowerCase();
    /** @type {?} */

    var currentIdx = 0;

    if (termLC.length > 0) {
      this.parts = resultLC.split(new RegExp("(" + regExpEscape(termLC) + ")")).map(function (part) {
        /** @type {?} */
        var originalPart = resultStr.substr(currentIdx, part.length);
        currentIdx += part.length;
        return originalPart;
      });
    } else {
      this.parts = [resultStr];
    }
  };

  NgbHighlight.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-highlight',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
      template: "<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">" + "<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>" + "</ng-template>",
      styles: [".ngb-highlight{font-weight:700}"]
    }]
  }];
  NgbHighlight.propDecorators = {
    highlightClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    result: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    term: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }]
  };
  return NgbHighlight;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbTypeaheadWindow =
/** @class */
function () {
  function NgbTypeaheadWindow() {
    this.activeIdx = 0;
    /**
     * Flag indicating if the first row should be active initially
     */

    this.focusFirst = true;
    /**
     * A function used to format a given result before display. This function should return a formatted string without any
     * HTML markup
     */

    this.formatter = toString;
    /**
     * Event raised when user selects a particular result row
     */

    this.selectEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.activeChangeEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
  }
  /**
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.hasActive =
  /**
  * @return {?}
  */
  function () {
    return this.activeIdx > -1 && this.activeIdx < this.results.length;
  };
  /**
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.getActive =
  /**
  * @return {?}
  */
  function () {
    return this.results[this.activeIdx];
  };
  /**
   * @param {?} activeIdx
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.markActive =
  /**
  * @param {?} activeIdx
  * @return {?}
  */
  function (activeIdx) {
    this.activeIdx = activeIdx;

    this._activeChanged();
  };
  /**
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.next =
  /**
  * @return {?}
  */
  function () {
    if (this.activeIdx === this.results.length - 1) {
      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;
    } else {
      this.activeIdx++;
    }

    this._activeChanged();
  };
  /**
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.prev =
  /**
  * @return {?}
  */
  function () {
    if (this.activeIdx < 0) {
      this.activeIdx = this.results.length - 1;
    } else if (this.activeIdx === 0) {
      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;
    } else {
      this.activeIdx--;
    }

    this._activeChanged();
  };
  /**
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.resetActive =
  /**
  * @return {?}
  */
  function () {
    this.activeIdx = this.focusFirst ? 0 : -1;

    this._activeChanged();
  };
  /**
   * @param {?} item
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.select =
  /**
  * @param {?} item
  * @return {?}
  */
  function (item) {
    this.selectEvent.emit(item);
  };
  /**
   * @return {?}
   */


  NgbTypeaheadWindow.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    this.resetActive();
  };
  /**
   * @return {?}
   */


  NgbTypeaheadWindow.prototype._activeChanged =
  /**
  * @return {?}
  */
  function () {
    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);
  };

  NgbTypeaheadWindow.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
    args: [{
      selector: 'ngb-typeahead-window',
      exportAs: 'ngbTypeaheadWindow',
      host: {
        'class': 'dropdown-menu show',
        'role': 'listbox',
        '[id]': 'id'
      },
      template: "\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  "
    }]
  }];
  NgbTypeaheadWindow.propDecorators = {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    focusFirst: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    results: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    term: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    formatter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    resultTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    selectEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"],
      args: ['select']
    }],
    activeChangeEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"],
      args: ['activeChange']
    }]
  };
  return NgbTypeaheadWindow;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var ARIA_LIVE_DELAY = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('live announcer delay', {
  providedIn: 'root',
  factory: ARIA_LIVE_DELAY_FACTORY
});
/**
 * @return {?}
 */

function ARIA_LIVE_DELAY_FACTORY() {
  return 100;
}
/**
 * @param {?} document
 * @param {?=} lazyCreate
 * @return {?}
 */


function getLiveElement(document, lazyCreate) {
  if (lazyCreate === void 0) {
    lazyCreate = false;
  }
  /** @type {?} */


  var element =
  /** @type {?} */
  document.body.querySelector('#ngb-live');

  if (element == null && lazyCreate) {
    element = document.createElement('div');
    element.setAttribute('id', 'ngb-live');
    element.setAttribute('aria-live', 'polite');
    element.setAttribute('aria-atomic', 'true');
    element.classList.add('sr-only');
    document.body.appendChild(element);
  }

  return element;
}

var Live =
/** @class */
function () {
  function Live(_document, _delay) {
    this._document = _document;
    this._delay = _delay;
  }
  /**
   * @return {?}
   */


  Live.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    /** @type {?} */
    var element = getLiveElement(this._document);

    if (element) {
      element.parentElement.removeChild(element);
    }
  };
  /**
   * @param {?} message
   * @return {?}
   */


  Live.prototype.say =
  /**
  * @param {?} message
  * @return {?}
  */
  function (message) {
    /** @type {?} */
    var element = getLiveElement(this._document, true);
    /** @type {?} */

    var delay = this._delay;
    element.textContent = '';
    /** @type {?} */

    var setText = function setText() {
      return element.textContent = message;
    };

    if (delay === null) {
      setText();
    } else {
      setTimeout(setText, delay);
    }
  };

  Live.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  Live.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
        args: [ARIA_LIVE_DELAY]
      }]
    }];
  };
  /** @nocollapse */


  Live.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function Live_Factory() {
      return new Live(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(ARIA_LIVE_DELAY));
    },
    token: Live,
    providedIn: "root"
  });
  return Live;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * Configuration service for the NgbTypeahead component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the typeaheads used in the application.
 */


var NgbTypeaheadConfig =
/** @class */
function () {
  function NgbTypeaheadConfig() {
    this.editable = true;
    this.focusFirst = true;
    this.showHint = false;
    this.placement = 'bottom-left';
  }

  NgbTypeaheadConfig.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }];
  /** @nocollapse */

  NgbTypeaheadConfig.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({
    factory: function NgbTypeaheadConfig_Factory() {
      return new NgbTypeaheadConfig();
    },
    token: NgbTypeaheadConfig,
    providedIn: "root"
  });
  return NgbTypeaheadConfig;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_TYPEAHEAD_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
    return NgbTypeahead;
  }),
  multi: true
};
/** @type {?} */

var nextWindowId = 0;
/**
 * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input
 */

var NgbTypeahead =
/** @class */
function () {
  function NgbTypeahead(_elementRef, _viewContainerRef, _renderer, _injector, componentFactoryResolver, config, ngZone, _live) {
    var _this = this;

    this._elementRef = _elementRef;
    this._viewContainerRef = _viewContainerRef;
    this._renderer = _renderer;
    this._injector = _injector;
    this._live = _live;
    /**
     * Value for the configurable autocomplete attribute.
     * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem
     * to be always correctly taken into account.
     *
     * \@since 2.1.0
     */

    this.autocomplete = 'off';
    /**
     * Placement of a typeahead accepts:
     *    "top", "top-left", "top-right", "bottom", "bottom-left", "bottom-right",
     *    "left", "left-top", "left-bottom", "right", "right-top", "right-bottom"
     * and array of above values.
     */

    this.placement = 'bottom-left';
    /**
     * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.
     */

    this.selectItem = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    this.popupId = "ngb-typeahead-" + nextWindowId++;

    this._onTouched = function () {};

    this._onChange = function (_) {};

    this.container = config.container;
    this.editable = config.editable;
    this.focusFirst = config.focusFirst;
    this.showHint = config.showHint;
    this.placement = config.placement;
    this._valueChanges = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(_elementRef.nativeElement, 'input').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function ($event) {
      return (
        /** @type {?} */
        $event.target.value
      );
    }));
    this._resubscribeTypeahead = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
    this._popupService = new PopupService(NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);
    this._zoneSubscription = ngZone.onStable.subscribe(function () {
      if (_this.isPopupOpen()) {
        positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body');
      }
    });
  }
  /**
   * @return {?}
   */


  NgbTypeahead.prototype.ngOnInit =
  /**
  * @return {?}
  */
  function () {
    var _this = this;
    /** @type {?} */


    var inputValues$ = this._valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["tap"])(function (value) {
      _this._inputValueBackup = value;

      if (_this.editable) {
        _this._onChange(value);
      }
    }));
    /** @type {?} */


    var results$ = inputValues$.pipe(this.ngbTypeahead);
    /** @type {?} */

    var processedResults$ = results$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["tap"])(function () {
      if (!_this.editable) {
        _this._onChange(undefined);
      }
    }));
    /** @type {?} */

    var userInput$ = this._resubscribeTypeahead.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () {
      return processedResults$;
    }));

    this._subscription = this._subscribeToUserInput(userInput$);
  };
  /**
   * @return {?}
   */


  NgbTypeahead.prototype.ngOnDestroy =
  /**
  * @return {?}
  */
  function () {
    this._closePopup();

    this._unsubscribeFromUserInput();

    this._zoneSubscription.unsubscribe();
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbTypeahead.prototype.registerOnChange =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this._onChange = fn;
  };
  /**
   * @param {?} fn
   * @return {?}
   */


  NgbTypeahead.prototype.registerOnTouched =
  /**
  * @param {?} fn
  * @return {?}
  */
  function (fn) {
    this._onTouched = fn;
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbTypeahead.prototype.writeValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this._writeInputValue(this._formatItemForInput(value));
  };
  /**
   * @param {?} isDisabled
   * @return {?}
   */


  NgbTypeahead.prototype.setDisabledState =
  /**
  * @param {?} isDisabled
  * @return {?}
  */
  function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbTypeahead.prototype.onDocumentClick =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    if (event.target !== this._elementRef.nativeElement) {
      this.dismissPopup();
    }
  };
  /**
   * Dismisses typeahead popup window
   */

  /**
   * Dismisses typeahead popup window
   * @return {?}
   */


  NgbTypeahead.prototype.dismissPopup =
  /**
  * Dismisses typeahead popup window
  * @return {?}
  */
  function () {
    if (this.isPopupOpen()) {
      this._closePopup();

      this._writeInputValue(this._inputValueBackup);
    }
  };
  /**
   * Returns true if the typeahead popup window is displayed
   */

  /**
   * Returns true if the typeahead popup window is displayed
   * @return {?}
   */


  NgbTypeahead.prototype.isPopupOpen =
  /**
  * Returns true if the typeahead popup window is displayed
  * @return {?}
  */
  function () {
    return this._windowRef != null;
  };
  /**
   * @return {?}
   */


  NgbTypeahead.prototype.handleBlur =
  /**
  * @return {?}
  */
  function () {
    this._resubscribeTypeahead.next(null);

    this._onTouched();
  };
  /**
   * @param {?} event
   * @return {?}
   */


  NgbTypeahead.prototype.handleKeyDown =
  /**
  * @param {?} event
  * @return {?}
  */
  function (event) {
    if (!this.isPopupOpen()) {
      return;
    } // tslint:disable-next-line:deprecation


    var which = event.which;

    if (Key[toString(which)]) {
      switch (which) {
        case Key.ArrowDown:
          event.preventDefault();

          this._windowRef.instance.next();

          this._showHint();

          break;

        case Key.ArrowUp:
          event.preventDefault();

          this._windowRef.instance.prev();

          this._showHint();

          break;

        case Key.Enter:
        case Key.Tab:
          /** @type {?} */
          var result = this._windowRef.instance.getActive();

          if (isDefined(result)) {
            event.preventDefault();
            event.stopPropagation();

            this._selectResult(result);
          }

          this._closePopup();

          break;

        case Key.Escape:
          event.preventDefault();

          this._resubscribeTypeahead.next(null);

          this.dismissPopup();
          break;
      }
    }
  };
  /**
   * @return {?}
   */


  NgbTypeahead.prototype._openPopup =
  /**
  * @return {?}
  */
  function () {
    var _this = this;

    if (!this.isPopupOpen()) {
      this._inputValueBackup = this._elementRef.nativeElement.value;
      this._windowRef = this._popupService.open();
      this._windowRef.instance.id = this.popupId;

      this._windowRef.instance.selectEvent.subscribe(function (result) {
        return _this._selectResultClosePopup(result);
      });

      this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) {
        return _this.activeDescendant = activeId;
      });

      if (this.container === 'body') {
        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);
      }
    }
  };
  /**
   * @return {?}
   */


  NgbTypeahead.prototype._closePopup =
  /**
  * @return {?}
  */
  function () {
    this._popupService.close();

    this._windowRef = null;
    this.activeDescendant = undefined;
  };
  /**
   * @param {?} result
   * @return {?}
   */


  NgbTypeahead.prototype._selectResult =
  /**
  * @param {?} result
  * @return {?}
  */
  function (result) {
    /** @type {?} */
    var defaultPrevented = false;
    this.selectItem.emit({
      item: result,
      preventDefault: function preventDefault() {
        defaultPrevented = true;
      }
    });

    this._resubscribeTypeahead.next(null);

    if (!defaultPrevented) {
      this.writeValue(result);

      this._onChange(result);
    }
  };
  /**
   * @param {?} result
   * @return {?}
   */


  NgbTypeahead.prototype._selectResultClosePopup =
  /**
  * @param {?} result
  * @return {?}
  */
  function (result) {
    this._selectResult(result);

    this._closePopup();

    this._elementRef.nativeElement.focus();
  };
  /**
   * @return {?}
   */


  NgbTypeahead.prototype._showHint =
  /**
  * @return {?}
  */
  function () {
    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {
      /** @type {?} */
      var userInputLowerCase = this._inputValueBackup.toLowerCase();
      /** @type {?} */


      var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());

      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {
        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));

        this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);
      } else {
        this.writeValue(this._windowRef.instance.getActive());
      }
    }
  };
  /**
   * @param {?} item
   * @return {?}
   */


  NgbTypeahead.prototype._formatItemForInput =
  /**
  * @param {?} item
  * @return {?}
  */
  function (item) {
    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);
  };
  /**
   * @param {?} value
   * @return {?}
   */


  NgbTypeahead.prototype._writeInputValue =
  /**
  * @param {?} value
  * @return {?}
  */
  function (value) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));
  };
  /**
   * @param {?} userInput$
   * @return {?}
   */


  NgbTypeahead.prototype._subscribeToUserInput =
  /**
  * @param {?} userInput$
  * @return {?}
  */
  function (userInput$) {
    var _this = this;

    return userInput$.subscribe(function (results) {
      if (!results || results.length === 0) {
        _this._closePopup();
      } else {
        _this._openPopup();

        _this._windowRef.instance.focusFirst = _this.focusFirst;
        _this._windowRef.instance.results = results;
        _this._windowRef.instance.term = _this._elementRef.nativeElement.value;

        if (_this.resultFormatter) {
          _this._windowRef.instance.formatter = _this.resultFormatter;
        }

        if (_this.resultTemplate) {
          _this._windowRef.instance.resultTemplate = _this.resultTemplate;
        }

        _this._windowRef.instance.resetActive(); // The observable stream we are subscribing to might have async steps
        // and if a component containing typeahead is using the OnPush strategy
        // the change detection turn wouldn't be invoked automatically.


        _this._windowRef.changeDetectorRef.detectChanges();

        _this._showHint();
      } // live announcer

      /** @type {?} */


      var count = results ? results.length : 0;

      _this._live.say(count === 0 ? 'No results available' : count + " result" + (count === 1 ? '' : 's') + " available");
    });
  };
  /**
   * @return {?}
   */


  NgbTypeahead.prototype._unsubscribeFromUserInput =
  /**
  * @return {?}
  */
  function () {
    if (this._subscription) {
      this._subscription.unsubscribe();
    }

    this._subscription = null;
  };

  NgbTypeahead.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
    args: [{
      selector: 'input[ngbTypeahead]',
      exportAs: 'ngbTypeahead',
      host: {
        '(blur)': 'handleBlur()',
        '[class.open]': 'isPopupOpen()',
        '(document:click)': 'onDocumentClick($event)',
        '(keydown)': 'handleKeyDown($event)',
        '[autocomplete]': 'autocomplete',
        'autocapitalize': 'off',
        'autocorrect': 'off',
        'role': 'combobox',
        'aria-multiline': 'false',
        '[attr.aria-autocomplete]': 'showHint ? "both" : "list"',
        '[attr.aria-activedescendant]': 'activeDescendant',
        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',
        '[attr.aria-expanded]': 'isPopupOpen()'
      },
      providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbTypeahead.ctorParameters = function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]
    }, {
      type: NgbTypeaheadConfig
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
    }, {
      type: Live
    }];
  };

  NgbTypeahead.propDecorators = {
    autocomplete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    editable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    focusFirst: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    inputFormatter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    ngbTypeahead: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    resultFormatter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    resultTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    showHint: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    placement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
    }],
    selectItem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
    }]
  };
  return NgbTypeahead;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */


var NgbTypeaheadModule =
/** @class */
function () {
  function NgbTypeaheadModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbTypeaheadModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbTypeaheadModule
    };
  };

  NgbTypeaheadModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],
      exports: [NgbTypeahead, NgbHighlight],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      entryComponents: [NgbTypeaheadWindow]
    }]
  }];
  return NgbTypeaheadModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/** @type {?} */


var NGB_MODULES = [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule];

var NgbModule =
/** @class */
function () {
  function NgbModule() {}
  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   */

  /**
   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
   * Will be removed in 4.0.0.
   *
   * @deprecated 3.0.0
   * @return {?}
   */


  NgbModule.forRoot =
  /**
  * Importing with '.forRoot()' is no longer necessary, you can simply import the module.
  * Will be removed in 4.0.0.
  *
  * @deprecated 3.0.0
  * @return {?}
  */
  function () {
    return {
      ngModule: NgbModule
    };
  };

  NgbModule.decorators = [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
    args: [{
      imports: NGB_MODULES,
      exports: NGB_MODULES
    }]
  }];
  return NgbModule;
}();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */




/***/ }),
/* 478 */,
/* 479 */,
/* 480 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function () {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    var result = [];

    for (var i = 0; i < this.length; i++) {
      var item = this[i];

      if (item[2]) {
        result.push("@media " + item[2] + "{" + item[1] + "}");
      } else {
        result.push(item[1]);
      }
    }

    return result.join("");
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === "string") modules = [[null, modules, ""]];
    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];
      if (typeof id === "number") alreadyImportedModules[id] = true;
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      //  when a module is imported multiple times with different media queries.
      //  I hope this will never occur (Hey this way we have smaller bundles)

      if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
        }

        list.push(item);
      }
    }
  };

  return list;
};

/***/ }),
/* 481 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
	}),
	getHeadElement = memoize(function () {
		return document.head || document.getElementsByTagName("head")[0];
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [];

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the bottom of <head>.
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
}

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var head = getHeadElement();
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			head.insertBefore(styleElement, head.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			head.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		head.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	styleElement.type = "text/css";
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	linkElement.rel = "stylesheet";
	insertStyleElement(options, linkElement);
	return linkElement;
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(498);
var core_1 = __webpack_require__(266);
var platform_browser_dynamic_1 = __webpack_require__(465);
var app_module_1 = __webpack_require__(500);
// depending on the env mode, enable prod mode or add debugging modules
if (process.env.ENV === 'build:docs') {
    core_1.enableProdMode();
}
function main() {
    return platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule).then(function (MODULE_REF) { if (false) {} return MODULE_REF; });
}
exports.main = main;
if (document.readyState === 'complete') {
    main();
}
else {
    document.addEventListener('DOMContentLoaded', main);
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1)))

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(499);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(481)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {}

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(480)();
// imports


// module
exports.push([module.i, ".navbar-nav-svg{width:1.4rem}.ng-banner{margin-bottom:3.75rem}.head h1{margin-top:3.75rem;font-size:3.755rem;letter-spacing:-1px}.head .lead{font-size:1rem;margin-top:1.25rem}.head .lead a{text-decoration:underline}.head svg{margin-top:2.5rem}.head img{height:14.75rem;margin-top:3.75rem}.version{margin-left:1.875rem}.only-in-ng{background-color:#eee}.only-in-ng .col-md-5{display:flex}.only-in-ng .inner{align-self:center}.only-in-ng h2{font-size:1.5rem}.only-in-ng img{width:100%;margin:3.755rem 0}.only-in-ng .o-square-list li:before{color:#000}h2{margin-top:1.25rem}.bd-sidebar{list-style:none}.bd-sidebar li{line-height:1.375}.bd-sidebar a{font-size:1rem;padding:.25rem .75rem}.doc-link{margin-left:.625rem;font-size:1.5rem}article{overflow:hidden;margin-bottom:1rem}#component_nav{border-right:1px solid #eee}.o-nav-local{border:0;flex-direction:column}.o-nav-local>.container{flex-direction:column;align-items:flex-start}.o-nav-local .nav-item,.o-nav-local .nav-item+.nav-item,.o-nav-local .nav-item:first-child{margin-left:0}.o-nav-local .nav .nav-link{font-weight:400;padding-top:.5rem;padding-left:0;padding-bottom:.5rem}.o-nav-local .nav .nav-link.active{color:#f16e00}.o-nav-local .nav-item:first-child{margin:24px 0}.doc-ext-link{margin-top:33px}.token.tag{font-size:.7875rem}.o-footer{margin-top:0}.o-footer .o-footer-top{padding:1.25rem 0}.o-footer .nav-link{display:inline-block}.o-footer .nav-link+.nav-link{margin-left:-.625rem}@media (max-width:767px){.head h1{font-size:2.5rem}.head .col-md-7{order:1}.head .col-md-5{text-align:center}.only-in-ng{padding-bottom:3.75rem}#component_nav{border:0}.o-nav-local{margin-top:12px;margin-bottom:0}.o-nav-local .nav{flex-direction:column;width:100%}.o-nav-local .nav-item+.nav-item,.o-nav-local .nav-item:first-child{margin-left:0}.o-nav-local .nav-link{font-weight:400;width:100%}}@media (min-width:768px){.o-nav-local{position:sticky;top:0;display:flex!important}.o-nav-local hr{display:none}.o-nav-local .nav-link{font-weight:400;padding:.5rem 0}.o-nav-local .nav{display:flex;flex-direction:column;flex-wrap:nowrap}}", ""]);

// exports


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var platform_browser_1 = __webpack_require__(263);
var router_1 = __webpack_require__(468);
var forms_1 = __webpack_require__(466);
var common_1 = __webpack_require__(265);
var ng_bootstrap_1 = __webpack_require__(477);
var dist_1 = __webpack_require__(501);
var app_component_1 = __webpack_require__(511);
var home_component_1 = __webpack_require__(514);
var start_component_1 = __webpack_require__(516);
var docs_component_1 = __webpack_require__(518);
var boostwatch_component_1 = __webpack_require__(520);
var accordion_component_1 = __webpack_require__(522);
var modal_component_1 = __webpack_require__(524);
var tabs_component_1 = __webpack_require__(526);
var pagination_component_1 = __webpack_require__(528);
var tooltip_component_1 = __webpack_require__(530);
var popover_component_1 = __webpack_require__(532);
var alert_component_1 = __webpack_require__(534);
var carousel_component_1 = __webpack_require__(536);
var collapse_component_1 = __webpack_require__(538);
var progress_bar_component_1 = __webpack_require__(540);
var dropdown_component_1 = __webpack_require__(542);
var o_switch_component_1 = __webpack_require__(544);
var o_toggle_component_1 = __webpack_require__(546);
var swiper_component_1 = __webpack_require__(548);
var o_navbar_component_1 = __webpack_require__(550);
var accordion_component_2 = __webpack_require__(552);
var modal_component_2 = __webpack_require__(555);
var dropdown_component_2 = __webpack_require__(558);
var tabs_component_2 = __webpack_require__(561);
var pagination_component_2 = __webpack_require__(564);
var tooltip_component_2 = __webpack_require__(567);
var popover_component_2 = __webpack_require__(570);
var alert_component_2 = __webpack_require__(574);
var carousel_component_2 = __webpack_require__(577);
var swiper_component_2 = __webpack_require__(580);
var collapse_component_2 = __webpack_require__(584);
var progress_bar_component_2 = __webpack_require__(587);
var o_navbar_component_2 = __webpack_require__(590);
var o_scroll_top_component_1 = __webpack_require__(594);
var o_switch_component_2 = __webpack_require__(597);
var o_toggle_component_2 = __webpack_require__(601);
var code_box_component_1 = __webpack_require__(605);
var global_1 = __webpack_require__(512);
var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        core_1.NgModule({
            imports: [
                platform_browser_1.BrowserModule,
                forms_1.FormsModule,
                router_1.RouterModule.forRoot([
                    {
                        path: 'home',
                        component: home_component_1.HomeComponent
                    },
                    {
                        path: 'start',
                        component: start_component_1.StartComponent
                    },
                    {
                        path: 'documentation',
                        redirectTo: 'documentation/collapse',
                        pathMatch: 'full'
                    },
                    {
                        path: 'documentation/collapse',
                        component: collapse_component_2.DocCollapse
                    },
                    {
                        path: 'documentation/accordion',
                        component: accordion_component_2.DocAccordion
                    },
                    {
                        path: 'documentation/modal',
                        component: modal_component_2.DocModal
                    },
                    {
                        path: 'documentation/dropdown',
                        component: dropdown_component_2.DocDropdown
                    },
                    {
                        path: 'documentation/tabs',
                        component: tabs_component_2.DocTabs
                    },
                    {
                        path: 'documentation/pagination',
                        component: pagination_component_2.DocPagination
                    },
                    {
                        path: 'documentation/tooltip',
                        component: tooltip_component_2.DocTooltip
                    },
                    {
                        path: 'documentation/popover',
                        component: popover_component_2.DocPopover
                    },
                    {
                        path: 'documentation/alert',
                        component: alert_component_2.DocAlert
                    },
                    {
                        path: 'documentation/carousel',
                        component: carousel_component_2.DocCarousel
                    },
                    {
                        path: 'documentation/swiper',
                        component: swiper_component_2.DocSwiper
                    },
                    {
                        path: 'documentation/progress',
                        component: progress_bar_component_2.DocProgressBar
                    },
                    {
                        path: 'documentation/o-navbar',
                        component: o_navbar_component_2.DocONavbar
                    },
                    {
                        path: 'documentation/o-scroll-top',
                        component: o_scroll_top_component_1.DocOScrollTop
                    },
                    {
                        path: 'documentation/o-switch',
                        component: o_switch_component_2.DocOSwitch
                    },
                    {
                        path: 'documentation/o-toggle',
                        component: o_toggle_component_2.DocOToggle
                    },
                    {
                        path: 'boostwatch',
                        component: boostwatch_component_1.BoostwatchComponent
                    },
                    {
                        path: '',
                        redirectTo: '/home',
                        pathMatch: 'full'
                    }
                ]),
                ng_bootstrap_1.NgbModule.forRoot(),
                dist_1.NgBoostedModule
            ],
            declarations: [
                app_component_1.AppComponent,
                home_component_1.HomeComponent,
                start_component_1.StartComponent,
                docs_component_1.DocsComponent,
                boostwatch_component_1.BoostwatchComponent,
                accordion_component_1.DemoAccordion,
                modal_component_1.DemoModal,
                tabs_component_1.DemoTabs,
                pagination_component_1.DemoPagination,
                tooltip_component_1.DemoTooltip,
                popover_component_1.DemoPopover,
                alert_component_1.DemoAlert,
                carousel_component_1.DemoCarousel,
                swiper_component_1.DemoSwiper,
                collapse_component_1.DemoCollapse,
                progress_bar_component_1.DemoProgressBar,
                dropdown_component_1.DemoDropdown,
                o_switch_component_1.DemoOSwitch,
                o_toggle_component_1.DemoOToggle,
                o_navbar_component_1.DemoONavbar,
                accordion_component_2.DocAccordion,
                modal_component_2.DocModal,
                dropdown_component_2.DocDropdown,
                tabs_component_2.DocTabs,
                pagination_component_2.DocPagination,
                alert_component_2.DocAlert,
                tooltip_component_2.DocTooltip,
                popover_component_2.DocPopover,
                carousel_component_2.DocCarousel,
                swiper_component_2.DocSwiper,
                collapse_component_2.DocCollapse,
                progress_bar_component_2.DocProgressBar,
                o_navbar_component_2.DocONavbar,
                o_scroll_top_component_1.DocOScrollTop,
                o_switch_component_2.DocOSwitch,
                o_toggle_component_2.DocOToggle,
                code_box_component_1.CodeBox
            ],
            providers: [{ provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy }, global_1.Globals],
            bootstrap: [app_component_1.AppComponent]
        })
    ], AppModule);
    return AppModule;
}());
exports.AppModule = AppModule;


/***/ }),
/* 501 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgBoostedModule", function() { return NgBoostedModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(265);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(468);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(477);
/* harmony import */ var _scroll_top_scroll_top_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(502);
/* harmony import */ var _o_navbar_o_navbar_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(503);
/* harmony import */ var _o_switch_o_switch_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(504);
/* harmony import */ var _o_carousel_o_carousel_container_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(505);
/* harmony import */ var _o_carousel_o_carousel_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(509);
/* harmony import */ var _o_dropdown_o_dropdown_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(510);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScrollTopComponent", function() { return _scroll_top_scroll_top_component__WEBPACK_IMPORTED_MODULE_4__["ScrollTopComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ONavbarComponent", function() { return _o_navbar_o_navbar_component__WEBPACK_IMPORTED_MODULE_5__["ONavbarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ONavLink", function() { return _o_navbar_o_navbar_component__WEBPACK_IMPORTED_MODULE_5__["ONavLink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OSwitchComponent", function() { return _o_switch_o_switch_component__WEBPACK_IMPORTED_MODULE_6__["OSwitchComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OCarouselContainerComponent", function() { return _o_carousel_o_carousel_container_component__WEBPACK_IMPORTED_MODULE_7__["OCarouselContainerComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OCarouselComponent", function() { return _o_carousel_o_carousel_component__WEBPACK_IMPORTED_MODULE_8__["OCarouselComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ODropdownComponent", function() { return _o_dropdown_o_dropdown_component__WEBPACK_IMPORTED_MODULE_9__["ODropdownComponent"]; });

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * --------------------------------------------------------------------------
 * Ng-boosted - index.ts
 * copyright 2018 Orange SA
 * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

















var NG_BOOSTED_DECLARATIONS = [_scroll_top_scroll_top_component__WEBPACK_IMPORTED_MODULE_4__["ScrollTopComponent"], _o_navbar_o_navbar_component__WEBPACK_IMPORTED_MODULE_5__["ONavbarComponent"], _o_navbar_o_navbar_component__WEBPACK_IMPORTED_MODULE_5__["ONavLink"], _o_navbar_o_navbar_component__WEBPACK_IMPORTED_MODULE_5__["ONavMenu"], _o_switch_o_switch_component__WEBPACK_IMPORTED_MODULE_6__["OSwitchComponent"], _o_carousel_o_carousel_container_component__WEBPACK_IMPORTED_MODULE_7__["OCarouselContainerComponent"], _o_carousel_o_carousel_component__WEBPACK_IMPORTED_MODULE_8__["OCarouselComponent"], _o_dropdown_o_dropdown_component__WEBPACK_IMPORTED_MODULE_9__["ODropdownComponent"]];

var NgBoostedModule =
/** @class */
function () {
  function NgBoostedModule() {}

  NgBoostedModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__["NgbModule"]],
    declarations: NG_BOOSTED_DECLARATIONS,
    exports: NG_BOOSTED_DECLARATIONS
  })], NgBoostedModule);
  return NgBoostedModule;
}();



/***/ }),
/* 502 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollTopComponent", function() { return ScrollTopComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * --------------------------------------------------------------------------
 * Ng-boosted - scroll-top.component.ts
 * copyright 2018 Orange SA
 * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ScrollTopComponent =
/** @class */
function () {
  function ScrollTopComponent() {
    this.showMe = false;
  }

  ScrollTopComponent.prototype.onWindowScroll = function () {
    if (document.documentElement.scrollTop > window.innerHeight) {
      this.showMe = true;
    } else {
      this.showMe = false;
    }
  };

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ScrollTopComponent.prototype, "label", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:scroll', []), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], ScrollTopComponent.prototype, "onWindowScroll", null);

  ScrollTopComponent = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
    selector: 'scroll-top',
    styles: ['a { display: inline;}'],
    template: "\n    <a href=\"javascript:void(0)\" class=\"o-scroll-up\" title=\"{{label}}\"\n    onclick=\"window.scrollTo(0, 0);\" *ngIf=\"showMe\">\n      <span class=\"o-scroll-up-text hidden-sm-down\">{{label}}</span>\n      <span class=\"o-scroll-up-icon\" aria-hidden=\"true\"></span>\n    </a>\n  "
  })], ScrollTopComponent);
  return ScrollTopComponent;
}();



/***/ }),
/* 503 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ONavLink", function() { return ONavLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ONavMenu", function() { return ONavMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ONavbarComponent", function() { return ONavbarComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * --------------------------------------------------------------------------
 * Ng-boosted - o-navbar.component.ts
 * copyright 2018 Orange SA
 * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var TEST_PATTERN = /xs|sm|md|lg|xl|xxl/;

var ONavLink =
/** @class */
function () {
  function ONavLink() {
    this.isActive = false;
  }

  ONavLink.prototype.ngDoCheck = function () {
    this.isActive = this.link.nativeElement.classList.contains('active');
  };

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"])('class.nav-item'), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavLink.prototype, "route", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavLink.prototype, "title", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('link'), __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])], ONavLink.prototype, "link", void 0);

  ONavLink = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
    selector: 'li[o-nav-link]',
    template: "\n    <a #link [routerLink]=\"route\" class=\"nav-link\" routerLinkActive=\"active\"\n     [attr.title]=\"title === 'undefined' ? null : title\"\n     [attr.aria-current]=\"isActive\"><ng-content></ng-content></a>\n  "
  })], ONavLink);
  return ONavLink;
}();



var ONavMenu =
/** @class */
function () {
  function ONavMenu() {
    this.dropdownClass = 'nav-item dropdown';
  }

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"])('class'), __metadata("design:type", Object)], ONavMenu.prototype, "dropdownClass", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavMenu.prototype, "menuTitle", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavMenu.prototype, "title", void 0);

  ONavMenu = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
    selector: 'li[o-nav-menu]',
    styles: ["\n    button {\n      border: 0;\n      background-color: #000;\n    }\n\n    button:hover {\n      cursor: pointer;\n    }\n  "],
    template: "\n    <button class=\"nav-link\" ngbDropdownToggle [attr.title]=\"title === 'undefined' ? null : title\"\n    (click)=\"$event.stopPropagation();\">{{menuTitle}}</button>\n    <ng-content></ng-content>\n  "
  })], ONavMenu);
  return ONavMenu;
}();



var ONavbarComponent =
/** @class */
function () {
  function ONavbarComponent() {
    this.pattern = TEST_PATTERN;
    this.isCollapsed = true;
  }

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavbarComponent.prototype, "homeRoute", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavbarComponent.prototype, "breakpoint", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavbarComponent.prototype, "brandPath", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], ONavbarComponent.prototype, "brandLabel", void 0);

  ONavbarComponent = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
    selector: 'o-navbar',
    styles: ["\n    .navbar-nav { width: 100%;}\n\n    >>> a:hover {\n      cursor: pointer;\n    }\n  "],
    template: "\n    <nav [class]=\"'navbar navbar-dark bg-dark ' +\n     (pattern.test(breakpoint) ? 'navbar-expand-'+breakpoint : 'navbar-toggleable-sm')\" role=\"navigation\">\n        <div class=\"container\">\n            <a class=\"navbar-brand logo\" [routerLink]=\"homeRoute\">\n                <img [attr.src]=\"brandPath\" [attr.alt]=\"brandLabel\" [attr.title]=\"brandLabel\">\n            </a>\n            <button class=\"navbar-toggler\" type=\"button\" (click)=\"isCollapsed = !isCollapsed\"\n              [attr.aria-expanded]=\"!isCollapsed\" aria-controls=\"collapsingNavbarHead\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"navbar-collapse collapse\" id=\"collapsingNavbarHead\" [ngbCollapse]=\"isCollapsed\">\n              <ul class=\"navbar-nav\">\n                <ng-content></ng-content>\n              </ul>\n            </div>\n        </div>\n    </nav>\n  "
  })], ONavbarComponent);
  return ONavbarComponent;
}();



/***/ }),
/* 504 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OSwitchComponent", function() { return OSwitchComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * --------------------------------------------------------------------------
 * Ng-boosted - o-switch.component.ts
 * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var OSwitchComponent =
/** @class */
function () {
  function OSwitchComponent() {
    this.toggled = false;
    this.rounded = false;
    this.successColor = false;
    this.customWidth = 'auto';
    this.onLabel = 'on';
    this.offLabel = 'off';
  }

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"])('class.o-switch'), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", String)], OSwitchComponent.prototype, "inputId", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OSwitchComponent.prototype, "toggled", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OSwitchComponent.prototype, "rounded", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OSwitchComponent.prototype, "successColor", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OSwitchComponent.prototype, "customWidth", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OSwitchComponent.prototype, "onLabel", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OSwitchComponent.prototype, "offLabel", void 0);

  OSwitchComponent = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
    selector: 'o-switch',
    template: "\n      <input class=\"checkbox sr-only\" [class.success]=\"successColor\" [id]=\"inputId\" type=\"checkbox\" [name]=\"inputId\" [checked]=\"toggled\"/>\n      <label [for]=\"inputId\" class=\"toggle col-form-label\" [class.toggle-rounded]=\"rounded\" aria-hidden=\"true\"\n      [ngStyle]=\"{'width': customWidth}\">\n        <span class=\"on\" [class.svg-checkbox-tick]=\"onLabel === 'on'\" role=\"presentation\">\n          <span [class.sr-only]=\"onLabel === 'on'\">{{onLabel}}</span>\n        </span>\n        <span class=\"off\" [class.svg-delete]=\"offLabel === 'off'\" role=\"presentation\">\n          <span [class.sr-only]=\"offLabel === 'off'\">{{offLabel}}</span>\n        </span>\n      </label>\n  "
  })], OSwitchComponent);
  return OSwitchComponent;
}();



/***/ }),
/* 505 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OCarouselContainerComponent", function() { return OCarouselContainerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
/* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(506);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * --------------------------------------------------------------------------
 * Ng-boosted - o-carousel.component.ts
 * copyright 2018 Orange SA
 * src: https://github.com/ksachdeva/angular2-swiper/blob/master/src/ks-swiper.ts
 * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var __param = undefined && undefined.__param || function (paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
};




var OCarouselContainerComponent =
/** @class */
function () {
  function OCarouselContainerComponent(elementRef) {
    this.elementRef = elementRef;
  }

  OCarouselContainerComponent.prototype.ngOnInit = function () {
    var _this = this;

    var nativeElement = this.elementRef.nativeElement;
    setTimeout(function () {
      _this.swiper = new swiper__WEBPACK_IMPORTED_MODULE_1__["default"](nativeElement.children[0], _this.options);
    });
  };

  OCarouselContainerComponent.prototype.update = function () {
    var _this = this;

    setTimeout(function () {
      _this.swiper.update();
    });
  };

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OCarouselContainerComponent.prototype, "pager", void 0);

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), __metadata("design:type", Object)], OCarouselContainerComponent.prototype, "options", void 0);

  OCarouselContainerComponent = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
    selector: 'o-carousel-container',
    template: "<div class=\"swiper-container\">\n    <div class=\"swiper-wrapper\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"swiper-pagination\"></div>\n    <div class=\"swiper-button-prev\"></div>\n    <div class=\"swiper-button-next\"></div>\n  </div>"
  }), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])), __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])], OCarouselContainerComponent);
  return OCarouselContainerComponent;
}();



/***/ }),
/* 506 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(507);
/* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(508);
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Swiper 4.4.1
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://www.idangero.us/swiper/
 *
 * Copyright 2014-2018 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: September 14, 2018
 */


var Methods = {
  addClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["addClass"],
  removeClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["removeClass"],
  hasClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["hasClass"],
  toggleClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["toggleClass"],
  attr: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["attr"],
  removeAttr: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["removeAttr"],
  data: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["data"],
  transform: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["transform"],
  transition: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["transition"],
  on: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["on"],
  off: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["off"],
  trigger: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["trigger"],
  transitionEnd: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["transitionEnd"],
  outerWidth: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["outerWidth"],
  outerHeight: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["outerHeight"],
  offset: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["offset"],
  css: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["css"],
  each: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["each"],
  html: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["html"],
  text: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["text"],
  is: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["is"],
  index: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["index"],
  eq: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["eq"],
  append: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["append"],
  prepend: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["prepend"],
  next: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["next"],
  nextAll: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["nextAll"],
  prev: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["prev"],
  prevAll: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["prevAll"],
  parent: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["parent"],
  parents: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["parents"],
  closest: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["closest"],
  find: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["find"],
  children: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["children"],
  remove: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["remove"],
  add: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["add"],
  styles: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["styles"]
};
Object.keys(Methods).forEach(function (methodName) {
  dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"].fn[methodName] = Methods[methodName];
});
var Utils = {
  deleteProps: function deleteProps(obj) {
    var object = obj;
    Object.keys(object).forEach(function (key) {
      try {
        object[key] = null;
      } catch (e) {// no getter for object
      }

      try {
        delete object[key];
      } catch (e) {// something got wrong
      }
    });
  },
  nextTick: function nextTick(callback) {
    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return setTimeout(callback, delay);
  },
  now: function now() {
    return Date.now();
  },
  getTranslate: function getTranslate(el) {
    var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';
    var matrix;
    var curTransform;
    var transformMatrix;
    var curStyle = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].getComputedStyle(el, null);

    if (ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].WebKitCSSMatrix) {
      curTransform = curStyle.transform || curStyle.webkitTransform;

      if (curTransform.split(',').length > 6) {
        curTransform = curTransform.split(', ').map(function (a) {
          return a.replace(',', '.');
        }).join(', ');
      } // Some old versions of Webkit choke when 'none' is passed; pass
      // empty string instead in this case


      transformMatrix = new ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
    } else {
      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
      matrix = transformMatrix.toString().split(',');
    }

    if (axis === 'x') {
      // Latest Chrome and webkits Fix
      if (ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix
      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers
        else curTransform = parseFloat(matrix[4]);
    }

    if (axis === 'y') {
      // Latest Chrome and webkits Fix
      if (ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix
      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers
        else curTransform = parseFloat(matrix[5]);
    }

    return curTransform || 0;
  },
  parseUrlQuery: function parseUrlQuery(url) {
    var query = {};
    var urlToParse = url || ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].location.href;
    var i;
    var params;
    var param;
    var length;

    if (typeof urlToParse === 'string' && urlToParse.length) {
      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\S*\?/, '') : '';
      params = urlToParse.split('&').filter(function (paramsPart) {
        return paramsPart !== '';
      });
      length = params.length;

      for (i = 0; i < length; i += 1) {
        param = params[i].replace(/#\S+/g, '').split('=');
        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';
      }
    }

    return query;
  },
  isObject: function isObject(o) {
    return _typeof(o) === 'object' && o !== null && o.constructor && o.constructor === Object;
  },
  extend: function extend() {
    var to = Object(arguments.length <= 0 ? undefined : arguments[0]);

    for (var i = 1; i < arguments.length; i += 1) {
      var nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];

      if (nextSource !== undefined && nextSource !== null) {
        var keysArray = Object.keys(Object(nextSource));

        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
          var nextKey = keysArray[nextIndex];
          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);

          if (desc !== undefined && desc.enumerable) {
            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
              Utils.extend(to[nextKey], nextSource[nextKey]);
            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
              to[nextKey] = {};
              Utils.extend(to[nextKey], nextSource[nextKey]);
            } else {
              to[nextKey] = nextSource[nextKey];
            }
          }
        }
      }
    }

    return to;
  }
};

var Support = function Support() {
  var testDiv = ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].createElement('div');
  return {
    touch: ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].Modernizr && ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].Modernizr.touch === true || function checkTouch() {
      return !!('ontouchstart' in ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"] || ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].DocumentTouch && ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"] instanceof ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].DocumentTouch);
    }(),
    pointerEvents: !!(ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.pointerEnabled || ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].PointerEvent),
    prefixedPointerEvents: !!ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.msPointerEnabled,
    transition: function checkTransition() {
      var style = testDiv.style;
      return 'transition' in style || 'webkitTransition' in style || 'MozTransition' in style;
    }(),
    transforms3d: ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].Modernizr && ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].Modernizr.csstransforms3d === true || function checkTransforms3d() {
      var style = testDiv.style;
      return 'webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style;
    }(),
    flexbox: function checkFlexbox() {
      var style = testDiv.style;
      var styles$$1 = 'alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient'.split(' ');

      for (var i = 0; i < styles$$1.length; i += 1) {
        if (styles$$1[i] in style) return true;
      }

      return false;
    }(),
    observer: function checkObserver() {
      return 'MutationObserver' in ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"] || 'WebkitMutationObserver' in ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"];
    }(),
    passiveListener: function checkPassiveListener() {
      var supportsPassive = false;

      try {
        var opts = Object.defineProperty({}, 'passive', {
          // eslint-disable-next-line
          get: function get() {
            supportsPassive = true;
          }
        });
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].addEventListener('testPassiveListener', null, opts);
      } catch (e) {// No support
      }

      return supportsPassive;
    }(),
    gestures: function checkGestures() {
      return 'ongesturestart' in ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"];
    }()
  };
}();

var SwiperClass =
/*#__PURE__*/
function () {
  function SwiperClass() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, SwiperClass);

    var self = this;
    self.params = params; // Events

    self.eventsListeners = {};

    if (self.params && self.params.on) {
      Object.keys(self.params.on).forEach(function (eventName) {
        self.on(eventName, self.params.on[eventName]);
      });
    }
  }

  _createClass(SwiperClass, [{
    key: "on",
    value: function on(events, handler, priority) {
      var self = this;
      if (typeof handler !== 'function') return self;
      var method = priority ? 'unshift' : 'push';
      events.split(' ').forEach(function (event) {
        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];
        self.eventsListeners[event][method](handler);
      });
      return self;
    }
  }, {
    key: "once",
    value: function once(events, handler, priority) {
      var self = this;
      if (typeof handler !== 'function') return self;

      function onceHandler() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        handler.apply(self, args);
        self.off(events, onceHandler);
      }

      return self.on(events, onceHandler, priority);
    }
  }, {
    key: "off",
    value: function off(events, handler) {
      var self = this;
      if (!self.eventsListeners) return self;
      events.split(' ').forEach(function (event) {
        if (typeof handler === 'undefined') {
          self.eventsListeners[event] = [];
        } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {
          self.eventsListeners[event].forEach(function (eventHandler, index$$1) {
            if (eventHandler === handler) {
              self.eventsListeners[event].splice(index$$1, 1);
            }
          });
        }
      });
      return self;
    }
  }, {
    key: "emit",
    value: function emit() {
      var self = this;
      if (!self.eventsListeners) return self;
      var events;
      var data$$1;
      var context;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      if (typeof args[0] === 'string' || Array.isArray(args[0])) {
        events = args[0];
        data$$1 = args.slice(1, args.length);
        context = self;
      } else {
        events = args[0].events;
        data$$1 = args[0].data;
        context = args[0].context || self;
      }

      var eventsArray = Array.isArray(events) ? events : events.split(' ');
      eventsArray.forEach(function (event) {
        if (self.eventsListeners && self.eventsListeners[event]) {
          var handlers = [];
          self.eventsListeners[event].forEach(function (eventHandler) {
            handlers.push(eventHandler);
          });
          handlers.forEach(function (eventHandler) {
            eventHandler.apply(context, data$$1);
          });
        }
      });
      return self;
    }
  }, {
    key: "useModulesParams",
    value: function useModulesParams(instanceParams) {
      var instance = this;
      if (!instance.modules) return;
      Object.keys(instance.modules).forEach(function (moduleName) {
        var module = instance.modules[moduleName]; // Extend params

        if (module.params) {
          Utils.extend(instanceParams, module.params);
        }
      });
    }
  }, {
    key: "useModules",
    value: function useModules() {
      var modulesParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var instance = this;
      if (!instance.modules) return;
      Object.keys(instance.modules).forEach(function (moduleName) {
        var module = instance.modules[moduleName];
        var moduleParams = modulesParams[moduleName] || {}; // Extend instance methods and props

        if (module.instance) {
          Object.keys(module.instance).forEach(function (modulePropName) {
            var moduleProp = module.instance[modulePropName];

            if (typeof moduleProp === 'function') {
              instance[modulePropName] = moduleProp.bind(instance);
            } else {
              instance[modulePropName] = moduleProp;
            }
          });
        } // Add event listeners


        if (module.on && instance.on) {
          Object.keys(module.on).forEach(function (moduleEventName) {
            instance.on(moduleEventName, module.on[moduleEventName]);
          });
        } // Module create callback


        if (module.create) {
          module.create.bind(instance)(moduleParams);
        }
      });
    }
  }], [{
    key: "installModule",
    value: function installModule(module) {
      var Class = this;
      if (!Class.prototype.modules) Class.prototype.modules = {};
      var name = module.name || "".concat(Object.keys(Class.prototype.modules).length, "_").concat(Utils.now());
      Class.prototype.modules[name] = module; // Prototype

      if (module.proto) {
        Object.keys(module.proto).forEach(function (key) {
          Class.prototype[key] = module.proto[key];
        });
      } // Class


      if (module.static) {
        Object.keys(module.static).forEach(function (key) {
          Class[key] = module.static[key];
        });
      } // Callback


      if (module.install) {
        for (var _len3 = arguments.length, params = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          params[_key3 - 1] = arguments[_key3];
        }

        module.install.apply(Class, params);
      }

      return Class;
    }
  }, {
    key: "use",
    value: function use(module) {
      var Class = this;

      if (Array.isArray(module)) {
        module.forEach(function (m) {
          return Class.installModule(m);
        });
        return Class;
      }

      for (var _len4 = arguments.length, params = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        params[_key4 - 1] = arguments[_key4];
      }

      return Class.installModule.apply(Class, [module].concat(params));
    }
  }, {
    key: "components",
    set: function set(components) {
      var Class = this;
      if (!Class.use) return;
      Class.use(components);
    }
  }]);

  return SwiperClass;
}();

function updateSize() {
  var swiper = this;
  var width;
  var height;
  var $el = swiper.$el;

  if (typeof swiper.params.width !== 'undefined') {
    width = swiper.params.width;
  } else {
    width = $el[0].clientWidth;
  }

  if (typeof swiper.params.height !== 'undefined') {
    height = swiper.params.height;
  } else {
    height = $el[0].clientHeight;
  }

  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {
    return;
  } // Subtract paddings


  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);
  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);
  Utils.extend(swiper, {
    width: width,
    height: height,
    size: swiper.isHorizontal() ? width : height
  });
}

function updateSlides() {
  var swiper = this;
  var params = swiper.params;
  var $wrapperEl = swiper.$wrapperEl,
      swiperSize = swiper.size,
      rtl = swiper.rtlTranslate,
      wrongRTL = swiper.wrongRTL;
  var isVirtual = swiper.virtual && params.virtual.enabled;
  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;
  var slides = $wrapperEl.children(".".concat(swiper.params.slideClass));
  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
  var snapGrid = [];
  var slidesGrid = [];
  var slidesSizesGrid = [];
  var offsetBefore = params.slidesOffsetBefore;

  if (typeof offsetBefore === 'function') {
    offsetBefore = params.slidesOffsetBefore.call(swiper);
  }

  var offsetAfter = params.slidesOffsetAfter;

  if (typeof offsetAfter === 'function') {
    offsetAfter = params.slidesOffsetAfter.call(swiper);
  }

  var previousSnapGridLength = swiper.snapGrid.length;
  var previousSlidesGridLength = swiper.snapGrid.length;
  var spaceBetween = params.spaceBetween;
  var slidePosition = -offsetBefore;
  var prevSlideSize = 0;
  var index$$1 = 0;

  if (typeof swiperSize === 'undefined') {
    return;
  }

  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;
  }

  swiper.virtualSize = -spaceBetween; // reset margins

  if (rtl) slides.css({
    marginLeft: '',
    marginTop: ''
  });else slides.css({
    marginRight: '',
    marginBottom: ''
  });
  var slidesNumberEvenToRows;

  if (params.slidesPerColumn > 1) {
    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {
      slidesNumberEvenToRows = slidesLength;
    } else {
      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;
    }

    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {
      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);
    }
  } // Calc slides


  var slideSize;
  var slidesPerColumn = params.slidesPerColumn;
  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
  var numFullColumns = slidesPerRow - (params.slidesPerColumn * slidesPerRow - slidesLength);

  for (var i = 0; i < slidesLength; i += 1) {
    slideSize = 0;

    var _slide = slides.eq(i);

    if (params.slidesPerColumn > 1) {
      // Set slides order
      var newSlideOrderIndex = void 0;
      var column = void 0;
      var row = void 0;

      if (params.slidesPerColumnFill === 'column') {
        column = Math.floor(i / slidesPerColumn);
        row = i - column * slidesPerColumn;

        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {
          row += 1;

          if (row >= slidesPerColumn) {
            row = 0;
            column += 1;
          }
        }

        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;

        _slide.css({
          '-webkit-box-ordinal-group': newSlideOrderIndex,
          '-moz-box-ordinal-group': newSlideOrderIndex,
          '-ms-flex-order': newSlideOrderIndex,
          '-webkit-order': newSlideOrderIndex,
          order: newSlideOrderIndex
        });
      } else {
        row = Math.floor(i / slidesPerRow);
        column = i - row * slidesPerRow;
      }

      _slide.css("margin-".concat(swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && "".concat(params.spaceBetween, "px")).attr('data-swiper-column', column).attr('data-swiper-row', row);
    }

    if (_slide.css('display') === 'none') continue; // eslint-disable-line

    if (params.slidesPerView === 'auto') {
      var slideStyles = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].getComputedStyle(_slide[0], null);
      var currentTransform = _slide[0].style.transform;
      var currentWebKitTransform = _slide[0].style.webkitTransform;

      if (currentTransform) {
        _slide[0].style.transform = 'none';
      }

      if (currentWebKitTransform) {
        _slide[0].style.webkitTransform = 'none';
      }

      if (params.roundLengths) {
        slideSize = swiper.isHorizontal() ? _slide.outerWidth(true) : _slide.outerHeight(true);
      } else {
        // eslint-disable-next-line
        if (swiper.isHorizontal()) {
          slideSize = _slide[0].getBoundingClientRect().width + parseFloat(slideStyles.getPropertyValue('margin-left')) + parseFloat(slideStyles.getPropertyValue('margin-right'));
        } else {
          slideSize = _slide[0].getBoundingClientRect().height + parseFloat(slideStyles.getPropertyValue('margin-top')) + parseFloat(slideStyles.getPropertyValue('margin-bottom'));
        }
      }

      if (currentTransform) {
        _slide[0].style.transform = currentTransform;
      }

      if (currentWebKitTransform) {
        _slide[0].style.webkitTransform = currentWebKitTransform;
      }

      if (params.roundLengths) slideSize = Math.floor(slideSize);
    } else {
      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;
      if (params.roundLengths) slideSize = Math.floor(slideSize);

      if (slides[i]) {
        if (swiper.isHorizontal()) {
          slides[i].style.width = "".concat(slideSize, "px");
        } else {
          slides[i].style.height = "".concat(slideSize, "px");
        }
      }
    }

    if (slides[i]) {
      slides[i].swiperSlideSize = slideSize;
    }

    slidesSizesGrid.push(slideSize);

    if (params.centeredSlides) {
      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;
      if (params.roundLengths) slidePosition = Math.floor(slidePosition);
      if (index$$1 % params.slidesPerGroup === 0) snapGrid.push(slidePosition);
      slidesGrid.push(slidePosition);
    } else {
      if (params.roundLengths) slidePosition = Math.floor(slidePosition);
      if (index$$1 % params.slidesPerGroup === 0) snapGrid.push(slidePosition);
      slidesGrid.push(slidePosition);
      slidePosition = slidePosition + slideSize + spaceBetween;
    }

    swiper.virtualSize += slideSize + spaceBetween;
    prevSlideSize = slideSize;
    index$$1 += 1;
  }

  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
  var newSlidesGrid;

  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {
    $wrapperEl.css({
      width: "".concat(swiper.virtualSize + params.spaceBetween, "px")
    });
  }

  if (!Support.flexbox || params.setWrapperSize) {
    if (swiper.isHorizontal()) $wrapperEl.css({
      width: "".concat(swiper.virtualSize + params.spaceBetween, "px")
    });else $wrapperEl.css({
      height: "".concat(swiper.virtualSize + params.spaceBetween, "px")
    });
  }

  if (params.slidesPerColumn > 1) {
    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;
    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;
    if (swiper.isHorizontal()) $wrapperEl.css({
      width: "".concat(swiper.virtualSize + params.spaceBetween, "px")
    });else $wrapperEl.css({
      height: "".concat(swiper.virtualSize + params.spaceBetween, "px")
    });

    if (params.centeredSlides) {
      newSlidesGrid = [];

      for (var _i = 0; _i < snapGrid.length; _i += 1) {
        var slidesGridItem = snapGrid[_i];
        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);
        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);
      }

      snapGrid = newSlidesGrid;
    }
  } // Remove last grid elements depending on width


  if (!params.centeredSlides) {
    newSlidesGrid = [];

    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {
      var _slidesGridItem = snapGrid[_i2];
      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);

      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {
        newSlidesGrid.push(_slidesGridItem);
      }
    }

    snapGrid = newSlidesGrid;

    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {
      snapGrid.push(swiper.virtualSize - swiperSize);
    }
  }

  if (snapGrid.length === 0) snapGrid = [0];

  if (params.spaceBetween !== 0) {
    if (swiper.isHorizontal()) {
      if (rtl) slides.css({
        marginLeft: "".concat(spaceBetween, "px")
      });else slides.css({
        marginRight: "".concat(spaceBetween, "px")
      });
    } else slides.css({
      marginBottom: "".concat(spaceBetween, "px")
    });
  }

  if (params.centerInsufficientSlides) {
    var allSlidesSize = 0;
    slidesSizesGrid.forEach(function (slideSizeValue) {
      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
    });
    allSlidesSize -= params.spaceBetween;

    if (allSlidesSize < swiperSize) {
      var allSlidesOffset = (swiperSize - allSlidesSize) / 2;
      snapGrid.forEach(function (snap, snapIndex) {
        snapGrid[snapIndex] = snap - allSlidesOffset;
      });
      slidesGrid.forEach(function (snap, snapIndex) {
        slidesGrid[snapIndex] = snap + allSlidesOffset;
      });
    }
  }

  Utils.extend(swiper, {
    slides: slides,
    snapGrid: snapGrid,
    slidesGrid: slidesGrid,
    slidesSizesGrid: slidesSizesGrid
  });

  if (slidesLength !== previousSlidesLength) {
    swiper.emit('slidesLengthChange');
  }

  if (snapGrid.length !== previousSnapGridLength) {
    if (swiper.params.watchOverflow) swiper.checkOverflow();
    swiper.emit('snapGridLengthChange');
  }

  if (slidesGrid.length !== previousSlidesGridLength) {
    swiper.emit('slidesGridLengthChange');
  }

  if (params.watchSlidesProgress || params.watchSlidesVisibility) {
    swiper.updateSlidesOffset();
  }
}

function updateAutoHeight(speed) {
  var swiper = this;
  var activeSlides = [];
  var newHeight = 0;
  var i;

  if (typeof speed === 'number') {
    swiper.setTransition(speed);
  } else if (speed === true) {
    swiper.setTransition(swiper.params.speed);
  } // Find slides currently in view


  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {
    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
      var index$$1 = swiper.activeIndex + i;
      if (index$$1 > swiper.slides.length) break;
      activeSlides.push(swiper.slides.eq(index$$1)[0]);
    }
  } else {
    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);
  } // Find new height from highest slide in view


  for (i = 0; i < activeSlides.length; i += 1) {
    if (typeof activeSlides[i] !== 'undefined') {
      var height = activeSlides[i].offsetHeight;
      newHeight = height > newHeight ? height : newHeight;
    }
  } // Update Height


  if (newHeight) swiper.$wrapperEl.css('height', "".concat(newHeight, "px"));
}

function updateSlidesOffset() {
  var swiper = this;
  var slides = swiper.slides;

  for (var i = 0; i < slides.length; i += 1) {
    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
  }
}

function updateSlidesProgress() {
  var translate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this && this.translate || 0;
  var swiper = this;
  var params = swiper.params;
  var slides = swiper.slides,
      rtl = swiper.rtlTranslate;
  if (slides.length === 0) return;
  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();
  var offsetCenter = -translate;
  if (rtl) offsetCenter = translate; // Visible Slides

  slides.removeClass(params.slideVisibleClass);
  swiper.visibleSlidesIndexes = [];
  swiper.visibleSlides = [];

  for (var i = 0; i < slides.length; i += 1) {
    var _slide2 = slides[i];
    var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - _slide2.swiperSlideOffset) / (_slide2.swiperSlideSize + params.spaceBetween);

    if (params.watchSlidesVisibility) {
      var slideBefore = -(offsetCenter - _slide2.swiperSlideOffset);
      var slideAfter = slideBefore + swiper.slidesSizesGrid[i];
      var isVisible = slideBefore >= 0 && slideBefore < swiper.size || slideAfter > 0 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;

      if (isVisible) {
        swiper.visibleSlides.push(_slide2);
        swiper.visibleSlidesIndexes.push(i);
        slides.eq(i).addClass(params.slideVisibleClass);
      }
    }

    _slide2.progress = rtl ? -slideProgress : slideProgress;
  }

  swiper.visibleSlides = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(swiper.visibleSlides);
}

function updateProgress() {
  var translate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this && this.translate || 0;
  var swiper = this;
  var params = swiper.params;
  var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
  var progress = swiper.progress,
      isBeginning = swiper.isBeginning,
      isEnd = swiper.isEnd;
  var wasBeginning = isBeginning;
  var wasEnd = isEnd;

  if (translatesDiff === 0) {
    progress = 0;
    isBeginning = true;
    isEnd = true;
  } else {
    progress = (translate - swiper.minTranslate()) / translatesDiff;
    isBeginning = progress <= 0;
    isEnd = progress >= 1;
  }

  Utils.extend(swiper, {
    progress: progress,
    isBeginning: isBeginning,
    isEnd: isEnd
  });
  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);

  if (isBeginning && !wasBeginning) {
    swiper.emit('reachBeginning toEdge');
  }

  if (isEnd && !wasEnd) {
    swiper.emit('reachEnd toEdge');
  }

  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {
    swiper.emit('fromEdge');
  }

  swiper.emit('progress', progress);
}

function updateSlidesClasses() {
  var swiper = this;
  var slides = swiper.slides,
      params = swiper.params,
      $wrapperEl = swiper.$wrapperEl,
      activeIndex = swiper.activeIndex,
      realIndex = swiper.realIndex;
  var isVirtual = swiper.virtual && params.virtual.enabled;
  slides.removeClass("".concat(params.slideActiveClass, " ").concat(params.slideNextClass, " ").concat(params.slidePrevClass, " ").concat(params.slideDuplicateActiveClass, " ").concat(params.slideDuplicateNextClass, " ").concat(params.slideDuplicatePrevClass));
  var activeSlide;

  if (isVirtual) {
    activeSlide = swiper.$wrapperEl.find(".".concat(params.slideClass, "[data-swiper-slide-index=\"").concat(activeIndex, "\"]"));
  } else {
    activeSlide = slides.eq(activeIndex);
  } // Active classes


  activeSlide.addClass(params.slideActiveClass);

  if (params.loop) {
    // Duplicate to all looped slides
    if (activeSlide.hasClass(params.slideDuplicateClass)) {
      $wrapperEl.children(".".concat(params.slideClass, ":not(.").concat(params.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(realIndex, "\"]")).addClass(params.slideDuplicateActiveClass);
    } else {
      $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(realIndex, "\"]")).addClass(params.slideDuplicateActiveClass);
    }
  } // Next Slide


  var nextSlide = activeSlide.nextAll(".".concat(params.slideClass)).eq(0).addClass(params.slideNextClass);

  if (params.loop && nextSlide.length === 0) {
    nextSlide = slides.eq(0);
    nextSlide.addClass(params.slideNextClass);
  } // Prev Slide


  var prevSlide = activeSlide.prevAll(".".concat(params.slideClass)).eq(0).addClass(params.slidePrevClass);

  if (params.loop && prevSlide.length === 0) {
    prevSlide = slides.eq(-1);
    prevSlide.addClass(params.slidePrevClass);
  }

  if (params.loop) {
    // Duplicate to all looped slides
    if (nextSlide.hasClass(params.slideDuplicateClass)) {
      $wrapperEl.children(".".concat(params.slideClass, ":not(.").concat(params.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(nextSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicateNextClass);
    } else {
      $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(nextSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicateNextClass);
    }

    if (prevSlide.hasClass(params.slideDuplicateClass)) {
      $wrapperEl.children(".".concat(params.slideClass, ":not(.").concat(params.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(prevSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicatePrevClass);
    } else {
      $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(prevSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicatePrevClass);
    }
  }
}

function updateActiveIndex(newActiveIndex) {
  var swiper = this;
  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
  var slidesGrid = swiper.slidesGrid,
      snapGrid = swiper.snapGrid,
      params = swiper.params,
      previousIndex = swiper.activeIndex,
      previousRealIndex = swiper.realIndex,
      previousSnapIndex = swiper.snapIndex;
  var activeIndex = newActiveIndex;
  var snapIndex;

  if (typeof activeIndex === 'undefined') {
    for (var i = 0; i < slidesGrid.length; i += 1) {
      if (typeof slidesGrid[i + 1] !== 'undefined') {
        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {
          activeIndex = i;
        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {
          activeIndex = i + 1;
        }
      } else if (translate >= slidesGrid[i]) {
        activeIndex = i;
      }
    } // Normalize slideIndex


    if (params.normalizeSlideIndex) {
      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;
    }
  }

  if (snapGrid.indexOf(translate) >= 0) {
    snapIndex = snapGrid.indexOf(translate);
  } else {
    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);
  }

  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;

  if (activeIndex === previousIndex) {
    if (snapIndex !== previousSnapIndex) {
      swiper.snapIndex = snapIndex;
      swiper.emit('snapIndexChange');
    }

    return;
  } // Get real index


  var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);
  Utils.extend(swiper, {
    snapIndex: snapIndex,
    realIndex: realIndex,
    previousIndex: previousIndex,
    activeIndex: activeIndex
  });
  swiper.emit('activeIndexChange');
  swiper.emit('snapIndexChange');

  if (previousRealIndex !== realIndex) {
    swiper.emit('realIndexChange');
  }

  swiper.emit('slideChange');
}

function updateClickedSlide(e) {
  var swiper = this;
  var params = swiper.params;
  var slide = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).closest(".".concat(params.slideClass))[0];
  var slideFound = false;

  if (slide) {
    for (var i = 0; i < swiper.slides.length; i += 1) {
      if (swiper.slides[i] === slide) slideFound = true;
    }
  }

  if (slide && slideFound) {
    swiper.clickedSlide = slide;

    if (swiper.virtual && swiper.params.virtual.enabled) {
      swiper.clickedIndex = parseInt(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(slide).attr('data-swiper-slide-index'), 10);
    } else {
      swiper.clickedIndex = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(slide).index();
    }
  } else {
    swiper.clickedSlide = undefined;
    swiper.clickedIndex = undefined;
    return;
  }

  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {
    swiper.slideToClickedSlide();
  }
}

var update = {
  updateSize: updateSize,
  updateSlides: updateSlides,
  updateAutoHeight: updateAutoHeight,
  updateSlidesOffset: updateSlidesOffset,
  updateSlidesProgress: updateSlidesProgress,
  updateProgress: updateProgress,
  updateSlidesClasses: updateSlidesClasses,
  updateActiveIndex: updateActiveIndex,
  updateClickedSlide: updateClickedSlide
};

function getTranslate() {
  var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.isHorizontal() ? 'x' : 'y';
  var swiper = this;
  var params = swiper.params,
      rtl = swiper.rtlTranslate,
      translate = swiper.translate,
      $wrapperEl = swiper.$wrapperEl;

  if (params.virtualTranslate) {
    return rtl ? -translate : translate;
  }

  var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);
  if (rtl) currentTranslate = -currentTranslate;
  return currentTranslate || 0;
}

function setTranslate(translate, byController) {
  var swiper = this;
  var rtl = swiper.rtlTranslate,
      params = swiper.params,
      $wrapperEl = swiper.$wrapperEl,
      progress = swiper.progress;
  var x = 0;
  var y = 0;
  var z = 0;

  if (swiper.isHorizontal()) {
    x = rtl ? -translate : translate;
  } else {
    y = translate;
  }

  if (params.roundLengths) {
    x = Math.floor(x);
    y = Math.floor(y);
  }

  if (!params.virtualTranslate) {
    if (Support.transforms3d) $wrapperEl.transform("translate3d(".concat(x, "px, ").concat(y, "px, ").concat(z, "px)"));else $wrapperEl.transform("translate(".concat(x, "px, ").concat(y, "px)"));
  }

  swiper.previousTranslate = swiper.translate;
  swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress

  var newProgress;
  var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();

  if (translatesDiff === 0) {
    newProgress = 0;
  } else {
    newProgress = (translate - swiper.minTranslate()) / translatesDiff;
  }

  if (newProgress !== progress) {
    swiper.updateProgress(translate);
  }

  swiper.emit('setTranslate', swiper.translate, byController);
}

function minTranslate() {
  return -this.snapGrid[0];
}

function maxTranslate() {
  return -this.snapGrid[this.snapGrid.length - 1];
}

var translate = {
  getTranslate: getTranslate,
  setTranslate: setTranslate,
  minTranslate: minTranslate,
  maxTranslate: maxTranslate
};

function setTransition(duration, byController) {
  var swiper = this;
  swiper.$wrapperEl.transition(duration);
  swiper.emit('setTransition', duration, byController);
}

function transitionStart() {
  var runCallbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var direction = arguments.length > 1 ? arguments[1] : undefined;
  var swiper = this;
  var activeIndex = swiper.activeIndex,
      params = swiper.params,
      previousIndex = swiper.previousIndex;

  if (params.autoHeight) {
    swiper.updateAutoHeight();
  }

  var dir = direction;

  if (!dir) {
    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';
  }

  swiper.emit('transitionStart');

  if (runCallbacks && activeIndex !== previousIndex) {
    if (dir === 'reset') {
      swiper.emit('slideResetTransitionStart');
      return;
    }

    swiper.emit('slideChangeTransitionStart');

    if (dir === 'next') {
      swiper.emit('slideNextTransitionStart');
    } else {
      swiper.emit('slidePrevTransitionStart');
    }
  }
}

function transitionEnd$1() {
  var runCallbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var direction = arguments.length > 1 ? arguments[1] : undefined;
  var swiper = this;
  var activeIndex = swiper.activeIndex,
      previousIndex = swiper.previousIndex;
  swiper.animating = false;
  swiper.setTransition(0);
  var dir = direction;

  if (!dir) {
    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';
  }

  swiper.emit('transitionEnd');

  if (runCallbacks && activeIndex !== previousIndex) {
    if (dir === 'reset') {
      swiper.emit('slideResetTransitionEnd');
      return;
    }

    swiper.emit('slideChangeTransitionEnd');

    if (dir === 'next') {
      swiper.emit('slideNextTransitionEnd');
    } else {
      swiper.emit('slidePrevTransitionEnd');
    }
  }
}

var transition$1 = {
  setTransition: setTransition,
  transitionStart: transitionStart,
  transitionEnd: transitionEnd$1
};

function slideTo() {
  var index$$1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
  var runCallbacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var internal = arguments.length > 3 ? arguments[3] : undefined;
  var swiper = this;
  var slideIndex = index$$1;
  if (slideIndex < 0) slideIndex = 0;
  var params = swiper.params,
      snapGrid = swiper.snapGrid,
      slidesGrid = swiper.slidesGrid,
      previousIndex = swiper.previousIndex,
      activeIndex = swiper.activeIndex,
      rtl = swiper.rtlTranslate;

  if (swiper.animating && params.preventInteractionOnTransition) {
    return false;
  }

  var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);
  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;

  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {
    swiper.emit('beforeSlideChangeStart');
  }

  var translate = -snapGrid[snapIndex]; // Update progress

  swiper.updateProgress(translate); // Normalize slideIndex

  if (params.normalizeSlideIndex) {
    for (var i = 0; i < slidesGrid.length; i += 1) {
      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {
        slideIndex = i;
      }
    }
  } // Directions locks


  if (swiper.initialized && slideIndex !== activeIndex) {
    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {
      return false;
    }

    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {
      if ((activeIndex || 0) !== slideIndex) return false;
    }
  }

  var direction;
  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index

  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {
    swiper.updateActiveIndex(slideIndex); // Update Height

    if (params.autoHeight) {
      swiper.updateAutoHeight();
    }

    swiper.updateSlidesClasses();

    if (params.effect !== 'slide') {
      swiper.setTranslate(translate);
    }

    if (direction !== 'reset') {
      swiper.transitionStart(runCallbacks, direction);
      swiper.transitionEnd(runCallbacks, direction);
    }

    return false;
  }

  if (speed === 0 || !Support.transition) {
    swiper.setTransition(0);
    swiper.setTranslate(translate);
    swiper.updateActiveIndex(slideIndex);
    swiper.updateSlidesClasses();
    swiper.emit('beforeTransitionStart', speed, internal);
    swiper.transitionStart(runCallbacks, direction);
    swiper.transitionEnd(runCallbacks, direction);
  } else {
    swiper.setTransition(speed);
    swiper.setTranslate(translate);
    swiper.updateActiveIndex(slideIndex);
    swiper.updateSlidesClasses();
    swiper.emit('beforeTransitionStart', speed, internal);
    swiper.transitionStart(runCallbacks, direction);

    if (!swiper.animating) {
      swiper.animating = true;

      if (!swiper.onSlideToWrapperTransitionEnd) {
        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {
          if (!swiper || swiper.destroyed) return;
          if (e.target !== this) return;
          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
          swiper.onSlideToWrapperTransitionEnd = null;
          delete swiper.onSlideToWrapperTransitionEnd;
          swiper.transitionEnd(runCallbacks, direction);
        };
      }

      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
    }
  }

  return true;
}

function slideToLoop() {
  var index$$1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
  var runCallbacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var internal = arguments.length > 3 ? arguments[3] : undefined;
  var swiper = this;
  var newIndex = index$$1;

  if (swiper.params.loop) {
    newIndex += swiper.loopedSlides;
  }

  return swiper.slideTo(newIndex, speed, runCallbacks, internal);
}
/* eslint no-unused-vars: "off" */


function slideNext() {
  var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var internal = arguments.length > 2 ? arguments[2] : undefined;
  var swiper = this;
  var params = swiper.params,
      animating = swiper.animating;

  if (params.loop) {
    if (animating) return false;
    swiper.loopFix(); // eslint-disable-next-line

    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
  }

  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
}
/* eslint no-unused-vars: "off" */


function slidePrev() {
  var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var internal = arguments.length > 2 ? arguments[2] : undefined;
  var swiper = this;
  var params = swiper.params,
      animating = swiper.animating,
      snapGrid = swiper.snapGrid,
      slidesGrid = swiper.slidesGrid,
      rtlTranslate = swiper.rtlTranslate;

  if (params.loop) {
    if (animating) return false;
    swiper.loopFix(); // eslint-disable-next-line

    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
  }

  var translate = rtlTranslate ? swiper.translate : -swiper.translate;

  function normalize(val) {
    if (val < 0) return -Math.floor(Math.abs(val));
    return Math.floor(val);
  }

  var normalizedTranslate = normalize(translate);
  var normalizedSnapGrid = snapGrid.map(function (val) {
    return normalize(val);
  });
  var normalizedSlidesGrid = slidesGrid.map(function (val) {
    return normalize(val);
  });
  var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];
  var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];
  var prevIndex;

  if (typeof prevSnap !== 'undefined') {
    prevIndex = slidesGrid.indexOf(prevSnap);
    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;
  }

  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
}
/* eslint no-unused-vars: "off" */


function slideReset() {
  var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var internal = arguments.length > 2 ? arguments[2] : undefined;
  var swiper = this;
  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
}
/* eslint no-unused-vars: "off" */


function slideToClosest() {
  var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
  var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var internal = arguments.length > 2 ? arguments[2] : undefined;
  var swiper = this;
  var index$$1 = swiper.activeIndex;
  var snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);

  if (snapIndex < swiper.snapGrid.length - 1) {
    var _translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;

    var currentSnap = swiper.snapGrid[snapIndex];
    var nextSnap = swiper.snapGrid[snapIndex + 1];

    if (_translate - currentSnap > (nextSnap - currentSnap) / 2) {
      index$$1 = swiper.params.slidesPerGroup;
    }
  }

  return swiper.slideTo(index$$1, speed, runCallbacks, internal);
}

function slideToClickedSlide() {
  var swiper = this;
  var params = swiper.params,
      $wrapperEl = swiper.$wrapperEl;
  var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;
  var slideToIndex = swiper.clickedIndex;
  var realIndex;

  if (params.loop) {
    if (swiper.animating) return;
    realIndex = parseInt(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);

    if (params.centeredSlides) {
      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
        swiper.loopFix();
        slideToIndex = $wrapperEl.children(".".concat(params.slideClass, "[data-swiper-slide-index=\"").concat(realIndex, "\"]:not(.").concat(params.slideDuplicateClass, ")")).eq(0).index();
        Utils.nextTick(function () {
          swiper.slideTo(slideToIndex);
        });
      } else {
        swiper.slideTo(slideToIndex);
      }
    } else if (slideToIndex > swiper.slides.length - slidesPerView) {
      swiper.loopFix();
      slideToIndex = $wrapperEl.children(".".concat(params.slideClass, "[data-swiper-slide-index=\"").concat(realIndex, "\"]:not(.").concat(params.slideDuplicateClass, ")")).eq(0).index();
      Utils.nextTick(function () {
        swiper.slideTo(slideToIndex);
      });
    } else {
      swiper.slideTo(slideToIndex);
    }
  } else {
    swiper.slideTo(slideToIndex);
  }
}

var slide = {
  slideTo: slideTo,
  slideToLoop: slideToLoop,
  slideNext: slideNext,
  slidePrev: slidePrev,
  slideReset: slideReset,
  slideToClosest: slideToClosest,
  slideToClickedSlide: slideToClickedSlide
};

function loopCreate() {
  var swiper = this;
  var params = swiper.params,
      $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides

  $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass)).remove();
  var slides = $wrapperEl.children(".".concat(params.slideClass));

  if (params.loopFillGroupWithBlank) {
    var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;

    if (blankSlidesNum !== params.slidesPerGroup) {
      for (var i = 0; i < blankSlidesNum; i += 1) {
        var blankNode = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].createElement('div')).addClass("".concat(params.slideClass, " ").concat(params.slideBlankClass));
        $wrapperEl.append(blankNode);
      }

      slides = $wrapperEl.children(".".concat(params.slideClass));
    }
  }

  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;
  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);
  swiper.loopedSlides += params.loopAdditionalSlides;

  if (swiper.loopedSlides > slides.length) {
    swiper.loopedSlides = slides.length;
  }

  var prependSlides = [];
  var appendSlides = [];
  slides.each(function (index$$1, el) {
    var slide = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(el);
    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);
    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);
    slide.attr('data-swiper-slide-index', index$$1);
  });

  for (var _i3 = 0; _i3 < appendSlides.length; _i3 += 1) {
    $wrapperEl.append(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(appendSlides[_i3].cloneNode(true)).addClass(params.slideDuplicateClass));
  }

  for (var _i4 = prependSlides.length - 1; _i4 >= 0; _i4 -= 1) {
    $wrapperEl.prepend(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(prependSlides[_i4].cloneNode(true)).addClass(params.slideDuplicateClass));
  }
}

function loopFix() {
  var swiper = this;
  var params = swiper.params,
      activeIndex = swiper.activeIndex,
      slides = swiper.slides,
      loopedSlides = swiper.loopedSlides,
      allowSlidePrev = swiper.allowSlidePrev,
      allowSlideNext = swiper.allowSlideNext,
      snapGrid = swiper.snapGrid,
      rtl = swiper.rtlTranslate;
  var newIndex;
  swiper.allowSlidePrev = true;
  swiper.allowSlideNext = true;
  var snapTranslate = -snapGrid[activeIndex];
  var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding

  if (activeIndex < loopedSlides) {
    newIndex = slides.length - loopedSlides * 3 + activeIndex;
    newIndex += loopedSlides;
    var slideChanged = swiper.slideTo(newIndex, 0, false, true);

    if (slideChanged && diff !== 0) {
      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
    }
  } else if (params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2 || activeIndex >= slides.length - loopedSlides) {
    // Fix For Positive Oversliding
    newIndex = -slides.length + activeIndex + loopedSlides;
    newIndex += loopedSlides;

    var _slideChanged = swiper.slideTo(newIndex, 0, false, true);

    if (_slideChanged && diff !== 0) {
      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
    }
  }

  swiper.allowSlidePrev = allowSlidePrev;
  swiper.allowSlideNext = allowSlideNext;
}

function loopDestroy() {
  var swiper = this;
  var $wrapperEl = swiper.$wrapperEl,
      params = swiper.params,
      slides = swiper.slides;
  $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass)).remove();
  slides.removeAttr('data-swiper-slide-index');
}

var loop = {
  loopCreate: loopCreate,
  loopFix: loopFix,
  loopDestroy: loopDestroy
};

function setGrabCursor(moving) {
  var swiper = this;
  if (Support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked) return;
  var el = swiper.el;
  el.style.cursor = 'move';
  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';
  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';
  el.style.cursor = moving ? 'grabbing' : 'grab';
}

function unsetGrabCursor() {
  var swiper = this;
  if (Support.touch || swiper.params.watchOverflow && swiper.isLocked) return;
  swiper.el.style.cursor = '';
}

var grabCursor = {
  setGrabCursor: setGrabCursor,
  unsetGrabCursor: unsetGrabCursor
};

function appendSlide(slides) {
  var swiper = this;
  var $wrapperEl = swiper.$wrapperEl,
      params = swiper.params;

  if (params.loop) {
    swiper.loopDestroy();
  }

  if (_typeof(slides) === 'object' && 'length' in slides) {
    for (var i = 0; i < slides.length; i += 1) {
      if (slides[i]) $wrapperEl.append(slides[i]);
    }
  } else {
    $wrapperEl.append(slides);
  }

  if (params.loop) {
    swiper.loopCreate();
  }

  if (!(params.observer && Support.observer)) {
    swiper.update();
  }
}

function prependSlide(slides) {
  var swiper = this;
  var params = swiper.params,
      $wrapperEl = swiper.$wrapperEl,
      activeIndex = swiper.activeIndex;

  if (params.loop) {
    swiper.loopDestroy();
  }

  var newActiveIndex = activeIndex + 1;

  if (_typeof(slides) === 'object' && 'length' in slides) {
    for (var i = 0; i < slides.length; i += 1) {
      if (slides[i]) $wrapperEl.prepend(slides[i]);
    }

    newActiveIndex = activeIndex + slides.length;
  } else {
    $wrapperEl.prepend(slides);
  }

  if (params.loop) {
    swiper.loopCreate();
  }

  if (!(params.observer && Support.observer)) {
    swiper.update();
  }

  swiper.slideTo(newActiveIndex, 0, false);
}

function addSlide(index$$1, slides) {
  var swiper = this;
  var $wrapperEl = swiper.$wrapperEl,
      params = swiper.params,
      activeIndex = swiper.activeIndex;
  var activeIndexBuffer = activeIndex;

  if (params.loop) {
    activeIndexBuffer -= swiper.loopedSlides;
    swiper.loopDestroy();
    swiper.slides = $wrapperEl.children(".".concat(params.slideClass));
  }

  var baseLength = swiper.slides.length;

  if (index$$1 <= 0) {
    swiper.prependSlide(slides);
    return;
  }

  if (index$$1 >= baseLength) {
    swiper.appendSlide(slides);
    return;
  }

  var newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;
  var slidesBuffer = [];

  for (var i = baseLength - 1; i >= index$$1; i -= 1) {
    var currentSlide = swiper.slides.eq(i);
    currentSlide.remove();
    slidesBuffer.unshift(currentSlide);
  }

  if (_typeof(slides) === 'object' && 'length' in slides) {
    for (var _i5 = 0; _i5 < slides.length; _i5 += 1) {
      if (slides[_i5]) $wrapperEl.append(slides[_i5]);
    }

    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;
  } else {
    $wrapperEl.append(slides);
  }

  for (var _i6 = 0; _i6 < slidesBuffer.length; _i6 += 1) {
    $wrapperEl.append(slidesBuffer[_i6]);
  }

  if (params.loop) {
    swiper.loopCreate();
  }

  if (!(params.observer && Support.observer)) {
    swiper.update();
  }

  if (params.loop) {
    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
  } else {
    swiper.slideTo(newActiveIndex, 0, false);
  }
}

function removeSlide(slidesIndexes) {
  var swiper = this;
  var params = swiper.params,
      $wrapperEl = swiper.$wrapperEl,
      activeIndex = swiper.activeIndex;
  var activeIndexBuffer = activeIndex;

  if (params.loop) {
    activeIndexBuffer -= swiper.loopedSlides;
    swiper.loopDestroy();
    swiper.slides = $wrapperEl.children(".".concat(params.slideClass));
  }

  var newActiveIndex = activeIndexBuffer;
  var indexToRemove;

  if (_typeof(slidesIndexes) === 'object' && 'length' in slidesIndexes) {
    for (var i = 0; i < slidesIndexes.length; i += 1) {
      indexToRemove = slidesIndexes[i];
      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
    }

    newActiveIndex = Math.max(newActiveIndex, 0);
  } else {
    indexToRemove = slidesIndexes;
    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
    newActiveIndex = Math.max(newActiveIndex, 0);
  }

  if (params.loop) {
    swiper.loopCreate();
  }

  if (!(params.observer && Support.observer)) {
    swiper.update();
  }

  if (params.loop) {
    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
  } else {
    swiper.slideTo(newActiveIndex, 0, false);
  }
}

function removeAllSlides() {
  var swiper = this;
  var slidesIndexes = [];

  for (var i = 0; i < swiper.slides.length; i += 1) {
    slidesIndexes.push(i);
  }

  swiper.removeSlide(slidesIndexes);
}

var manipulation = {
  appendSlide: appendSlide,
  prependSlide: prependSlide,
  addSlide: addSlide,
  removeSlide: removeSlide,
  removeAllSlides: removeAllSlides
};

var Device = function Device() {
  var ua = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.userAgent;
  var device = {
    ios: false,
    android: false,
    androidChrome: false,
    desktop: false,
    windows: false,
    iphone: false,
    ipod: false,
    ipad: false,
    cordova: ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].cordova || ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].phonegap,
    phonegap: ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].cordova || ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].phonegap
  };
  var windows = ua.match(/(Windows Phone);?[\s\/]+([\d.]+)?/); // eslint-disable-line

  var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/); // eslint-disable-line

  var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
  var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
  var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/); // Windows

  if (windows) {
    device.os = 'windows';
    device.osVersion = windows[2];
    device.windows = true;
  } // Android


  if (android && !windows) {
    device.os = 'android';
    device.osVersion = android[2];
    device.android = true;
    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;
  }

  if (ipad || iphone || ipod) {
    device.os = 'ios';
    device.ios = true;
  } // iOS


  if (iphone && !ipod) {
    device.osVersion = iphone[2].replace(/_/g, '.');
    device.iphone = true;
  }

  if (ipad) {
    device.osVersion = ipad[2].replace(/_/g, '.');
    device.ipad = true;
  }

  if (ipod) {
    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
    device.iphone = true;
  } // iOS 8+ changed UA


  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {
    if (device.osVersion.split('.')[0] === '10') {
      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];
    }
  } // Desktop


  device.desktop = !(device.os || device.android || device.webView); // Webview

  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i); // Minimal UI

  if (device.os && device.os === 'ios') {
    var osVersionArr = device.osVersion.split('.');
    var metaViewport = ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].querySelector('meta[name="viewport"]');
    device.minimalUi = !device.webView && (ipod || iphone) && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;
  } // Pixel Ratio


  device.pixelRatio = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].devicePixelRatio || 1; // Export object

  return device;
}();

function onTouchStart(event) {
  var swiper = this;
  var data$$1 = swiper.touchEventsData;
  var params = swiper.params,
      touches = swiper.touches;

  if (swiper.animating && params.preventInteractionOnTransition) {
    return;
  }

  var e = event;
  if (e.originalEvent) e = e.originalEvent;
  data$$1.isTouchEvent = e.type === 'touchstart';
  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;
  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;
  if (data$$1.isTouched && data$$1.isMoved) return;

  if (params.noSwiping && Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : ".".concat(params.noSwipingClass))[0]) {
    swiper.allowClick = true;
    return;
  }

  if (params.swipeHandler) {
    if (!Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e).closest(params.swipeHandler)[0]) return;
  }

  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
  var startX = touches.currentX;
  var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore

  var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;
  var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;

  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].screen.width - edgeSwipeThreshold)) {
    return;
  }

  Utils.extend(data$$1, {
    isTouched: true,
    isMoved: false,
    allowTouchCallbacks: true,
    isScrolling: undefined,
    startMoving: undefined
  });
  touches.startX = startX;
  touches.startY = startY;
  data$$1.touchStartTime = Utils.now();
  swiper.allowClick = true;
  swiper.updateSize();
  swiper.swipeDirection = undefined;
  if (params.threshold > 0) data$$1.allowThresholdMove = false;

  if (e.type !== 'touchstart') {
    var preventDefault = true;
    if (Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).is(data$$1.formElements)) preventDefault = false;

    if (ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement && Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement).is(data$$1.formElements) && ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement !== e.target) {
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement.blur();
    }

    if (preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault) {
      e.preventDefault();
    }
  }

  swiper.emit('touchStart', e);
}

function onTouchMove(event) {
  var swiper = this;
  var data$$1 = swiper.touchEventsData;
  var params = swiper.params,
      touches = swiper.touches,
      rtl = swiper.rtlTranslate;
  var e = event;
  if (e.originalEvent) e = e.originalEvent;

  if (!data$$1.isTouched) {
    if (data$$1.startMoving && data$$1.isScrolling) {
      swiper.emit('touchMoveOpposite', e);
    }

    return;
  }

  if (data$$1.isTouchEvent && e.type === 'mousemove') return;
  var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
  var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

  if (e.preventedByNestedSwiper) {
    touches.startX = pageX;
    touches.startY = pageY;
    return;
  }

  if (!swiper.allowTouchMove) {
    // isMoved = true;
    swiper.allowClick = false;

    if (data$$1.isTouched) {
      Utils.extend(touches, {
        startX: pageX,
        startY: pageY,
        currentX: pageX,
        currentY: pageY
      });
      data$$1.touchStartTime = Utils.now();
    }

    return;
  }

  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
    if (swiper.isVertical()) {
      // Vertical
      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {
        data$$1.isTouched = false;
        data$$1.isMoved = false;
        return;
      }
    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {
      return;
    }
  }

  if (data$$1.isTouchEvent && ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement) {
    if (e.target === ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement && Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).is(data$$1.formElements)) {
      data$$1.isMoved = true;
      swiper.allowClick = false;
      return;
    }
  }

  if (data$$1.allowTouchCallbacks) {
    swiper.emit('touchMove', e);
  }

  if (e.targetTouches && e.targetTouches.length > 1) return;
  touches.currentX = pageX;
  touches.currentY = pageY;
  var diffX = touches.currentX - touches.startX;
  var diffY = touches.currentY - touches.startY;
  if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;

  if (typeof data$$1.isScrolling === 'undefined') {
    var touchAngle;

    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {
      data$$1.isScrolling = false;
    } else {
      // eslint-disable-next-line
      if (diffX * diffX + diffY * diffY >= 25) {
        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;
        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
      }
    }
  }

  if (data$$1.isScrolling) {
    swiper.emit('touchMoveOpposite', e);
  }

  if (typeof data$$1.startMoving === 'undefined') {
    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {
      data$$1.startMoving = true;
    }
  }

  if (data$$1.isScrolling) {
    data$$1.isTouched = false;
    return;
  }

  if (!data$$1.startMoving) {
    return;
  }

  swiper.allowClick = false;
  e.preventDefault();

  if (params.touchMoveStopPropagation && !params.nested) {
    e.stopPropagation();
  }

  if (!data$$1.isMoved) {
    if (params.loop) {
      swiper.loopFix();
    }

    data$$1.startTranslate = swiper.getTranslate();
    swiper.setTransition(0);

    if (swiper.animating) {
      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');
    }

    data$$1.allowMomentumBounce = false; // Grab Cursor

    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
      swiper.setGrabCursor(true);
    }

    swiper.emit('sliderFirstMove', e);
  }

  swiper.emit('sliderMove', e);
  data$$1.isMoved = true;
  var diff = swiper.isHorizontal() ? diffX : diffY;
  touches.diff = diff;
  diff *= params.touchRatio;
  if (rtl) diff = -diff;
  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';
  data$$1.currentTranslate = diff + data$$1.startTranslate;
  var disableParentSwiper = true;
  var resistanceRatio = params.resistanceRatio;

  if (params.touchReleaseOnEdges) {
    resistanceRatio = 0;
  }

  if (diff > 0 && data$$1.currentTranslate > swiper.minTranslate()) {
    disableParentSwiper = false;
    if (params.resistance) data$$1.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data$$1.startTranslate + diff, resistanceRatio);
  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {
    disableParentSwiper = false;
    if (params.resistance) data$$1.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data$$1.startTranslate - diff, resistanceRatio);
  }

  if (disableParentSwiper) {
    e.preventedByNestedSwiper = true;
  } // Directions locks


  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {
    data$$1.currentTranslate = data$$1.startTranslate;
  }

  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {
    data$$1.currentTranslate = data$$1.startTranslate;
  } // Threshold


  if (params.threshold > 0) {
    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {
      if (!data$$1.allowThresholdMove) {
        data$$1.allowThresholdMove = true;
        touches.startX = touches.currentX;
        touches.startY = touches.currentY;
        data$$1.currentTranslate = data$$1.startTranslate;
        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
        return;
      }
    } else {
      data$$1.currentTranslate = data$$1.startTranslate;
      return;
    }
  }

  if (!params.followFinger) return; // Update active index in free mode

  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {
    swiper.updateActiveIndex();
    swiper.updateSlidesClasses();
  }

  if (params.freeMode) {
    // Velocity
    if (data$$1.velocities.length === 0) {
      data$$1.velocities.push({
        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],
        time: data$$1.touchStartTime
      });
    }

    data$$1.velocities.push({
      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],
      time: Utils.now()
    });
  } // Update progress


  swiper.updateProgress(data$$1.currentTranslate); // Update translate

  swiper.setTranslate(data$$1.currentTranslate);
}

function onTouchEnd(event) {
  var swiper = this;
  var data$$1 = swiper.touchEventsData;
  var params = swiper.params,
      touches = swiper.touches,
      rtl = swiper.rtlTranslate,
      $wrapperEl = swiper.$wrapperEl,
      slidesGrid = swiper.slidesGrid,
      snapGrid = swiper.snapGrid;
  var e = event;
  if (e.originalEvent) e = e.originalEvent;

  if (data$$1.allowTouchCallbacks) {
    swiper.emit('touchEnd', e);
  }

  data$$1.allowTouchCallbacks = false;

  if (!data$$1.isTouched) {
    if (data$$1.isMoved && params.grabCursor) {
      swiper.setGrabCursor(false);
    }

    data$$1.isMoved = false;
    data$$1.startMoving = false;
    return;
  } // Return Grab Cursor


  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
    swiper.setGrabCursor(false);
  } // Time diff


  var touchEndTime = Utils.now();
  var timeDiff = touchEndTime - data$$1.touchStartTime; // Tap, doubleTap, Click

  if (swiper.allowClick) {
    swiper.updateClickedSlide(e);
    swiper.emit('tap', e);

    if (timeDiff < 300 && touchEndTime - data$$1.lastClickTime > 300) {
      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);
      data$$1.clickTimeout = Utils.nextTick(function () {
        if (!swiper || swiper.destroyed) return;
        swiper.emit('click', e);
      }, 300);
    }

    if (timeDiff < 300 && touchEndTime - data$$1.lastClickTime < 300) {
      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);
      swiper.emit('doubleTap', e);
    }
  }

  data$$1.lastClickTime = Utils.now();
  Utils.nextTick(function () {
    if (!swiper.destroyed) swiper.allowClick = true;
  });

  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {
    data$$1.isTouched = false;
    data$$1.isMoved = false;
    data$$1.startMoving = false;
    return;
  }

  data$$1.isTouched = false;
  data$$1.isMoved = false;
  data$$1.startMoving = false;
  var currentPos;

  if (params.followFinger) {
    currentPos = rtl ? swiper.translate : -swiper.translate;
  } else {
    currentPos = -data$$1.currentTranslate;
  }

  if (params.freeMode) {
    if (currentPos < -swiper.minTranslate()) {
      swiper.slideTo(swiper.activeIndex);
      return;
    }

    if (currentPos > -swiper.maxTranslate()) {
      if (swiper.slides.length < snapGrid.length) {
        swiper.slideTo(snapGrid.length - 1);
      } else {
        swiper.slideTo(swiper.slides.length - 1);
      }

      return;
    }

    if (params.freeModeMomentum) {
      if (data$$1.velocities.length > 1) {
        var lastMoveEvent = data$$1.velocities.pop();
        var velocityEvent = data$$1.velocities.pop();
        var distance = lastMoveEvent.position - velocityEvent.position;
        var time = lastMoveEvent.time - velocityEvent.time;
        swiper.velocity = distance / time;
        swiper.velocity /= 2;

        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {
          swiper.velocity = 0;
        } // this implies that the user stopped moving a finger then released.
        // There would be no events with distance zero, so the last event is stale.


        if (time > 150 || Utils.now() - lastMoveEvent.time > 300) {
          swiper.velocity = 0;
        }
      } else {
        swiper.velocity = 0;
      }

      swiper.velocity *= params.freeModeMomentumVelocityRatio;
      data$$1.velocities.length = 0;
      var momentumDuration = 1000 * params.freeModeMomentumRatio;
      var momentumDistance = swiper.velocity * momentumDuration;
      var newPosition = swiper.translate + momentumDistance;
      if (rtl) newPosition = -newPosition;
      var doBounce = false;
      var afterBouncePosition;
      var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;
      var needsLoopFix;

      if (newPosition < swiper.maxTranslate()) {
        if (params.freeModeMomentumBounce) {
          if (newPosition + swiper.maxTranslate() < -bounceAmount) {
            newPosition = swiper.maxTranslate() - bounceAmount;
          }

          afterBouncePosition = swiper.maxTranslate();
          doBounce = true;
          data$$1.allowMomentumBounce = true;
        } else {
          newPosition = swiper.maxTranslate();
        }

        if (params.loop && params.centeredSlides) needsLoopFix = true;
      } else if (newPosition > swiper.minTranslate()) {
        if (params.freeModeMomentumBounce) {
          if (newPosition - swiper.minTranslate() > bounceAmount) {
            newPosition = swiper.minTranslate() + bounceAmount;
          }

          afterBouncePosition = swiper.minTranslate();
          doBounce = true;
          data$$1.allowMomentumBounce = true;
        } else {
          newPosition = swiper.minTranslate();
        }

        if (params.loop && params.centeredSlides) needsLoopFix = true;
      } else if (params.freeModeSticky) {
        var nextSlide;

        for (var j = 0; j < snapGrid.length; j += 1) {
          if (snapGrid[j] > -newPosition) {
            nextSlide = j;
            break;
          }
        }

        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {
          newPosition = snapGrid[nextSlide];
        } else {
          newPosition = snapGrid[nextSlide - 1];
        }

        newPosition = -newPosition;
      }

      if (needsLoopFix) {
        swiper.once('transitionEnd', function () {
          swiper.loopFix();
        });
      } // Fix duration


      if (swiper.velocity !== 0) {
        if (rtl) {
          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);
        } else {
          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
        }
      } else if (params.freeModeSticky) {
        swiper.slideToClosest();
        return;
      }

      if (params.freeModeMomentumBounce && doBounce) {
        swiper.updateProgress(afterBouncePosition);
        swiper.setTransition(momentumDuration);
        swiper.setTranslate(newPosition);
        swiper.transitionStart(true, swiper.swipeDirection);
        swiper.animating = true;
        $wrapperEl.transitionEnd(function () {
          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;
          swiper.emit('momentumBounce');
          swiper.setTransition(params.speed);
          swiper.setTranslate(afterBouncePosition);
          $wrapperEl.transitionEnd(function () {
            if (!swiper || swiper.destroyed) return;
            swiper.transitionEnd();
          });
        });
      } else if (swiper.velocity) {
        swiper.updateProgress(newPosition);
        swiper.setTransition(momentumDuration);
        swiper.setTranslate(newPosition);
        swiper.transitionStart(true, swiper.swipeDirection);

        if (!swiper.animating) {
          swiper.animating = true;
          $wrapperEl.transitionEnd(function () {
            if (!swiper || swiper.destroyed) return;
            swiper.transitionEnd();
          });
        }
      } else {
        swiper.updateProgress(newPosition);
      }

      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    } else if (params.freeModeSticky) {
      swiper.slideToClosest();
      return;
    }

    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {
      swiper.updateProgress();
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }

    return;
  } // Find current slide


  var stopIndex = 0;
  var groupSize = swiper.slidesSizesGrid[0];

  for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {
    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {
      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {
        stopIndex = i;
        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];
      }
    } else if (currentPos >= slidesGrid[i]) {
      stopIndex = i;
      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
    }
  } // Find current slide size


  var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;

  if (timeDiff > params.longSwipesMs) {
    // Long touches
    if (!params.longSwipes) {
      swiper.slideTo(swiper.activeIndex);
      return;
    }

    if (swiper.swipeDirection === 'next') {
      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);else swiper.slideTo(stopIndex);
    }

    if (swiper.swipeDirection === 'prev') {
      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);else swiper.slideTo(stopIndex);
    }
  } else {
    // Short swipes
    if (!params.shortSwipes) {
      swiper.slideTo(swiper.activeIndex);
      return;
    }

    if (swiper.swipeDirection === 'next') {
      swiper.slideTo(stopIndex + params.slidesPerGroup);
    }

    if (swiper.swipeDirection === 'prev') {
      swiper.slideTo(stopIndex);
    }
  }
}

function onResize() {
  var swiper = this;
  var params = swiper.params,
      el = swiper.el;
  if (el && el.offsetWidth === 0) return; // Breakpoints

  if (params.breakpoints) {
    swiper.setBreakpoint();
  } // Save locks


  var allowSlideNext = swiper.allowSlideNext,
      allowSlidePrev = swiper.allowSlidePrev,
      snapGrid = swiper.snapGrid; // Disable locks on resize

  swiper.allowSlideNext = true;
  swiper.allowSlidePrev = true;
  swiper.updateSize();
  swiper.updateSlides();

  if (params.freeMode) {
    var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());
    swiper.setTranslate(newTranslate);
    swiper.updateActiveIndex();
    swiper.updateSlidesClasses();

    if (params.autoHeight) {
      swiper.updateAutoHeight();
    }
  } else {
    swiper.updateSlidesClasses();

    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
      swiper.slideTo(swiper.slides.length - 1, 0, false, true);
    } else {
      swiper.slideTo(swiper.activeIndex, 0, false, true);
    }
  } // Return locks after resize


  swiper.allowSlidePrev = allowSlidePrev;
  swiper.allowSlideNext = allowSlideNext;

  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
    swiper.checkOverflow();
  }
}

function onClick(e) {
  var swiper = this;

  if (!swiper.allowClick) {
    if (swiper.params.preventClicks) e.preventDefault();

    if (swiper.params.preventClicksPropagation && swiper.animating) {
      e.stopPropagation();
      e.stopImmediatePropagation();
    }
  }
}

function attachEvents() {
  var swiper = this;
  var params = swiper.params,
      touchEvents = swiper.touchEvents,
      el = swiper.el,
      wrapperEl = swiper.wrapperEl;
  {
    swiper.onTouchStart = onTouchStart.bind(swiper);
    swiper.onTouchMove = onTouchMove.bind(swiper);
    swiper.onTouchEnd = onTouchEnd.bind(swiper);
  }
  swiper.onClick = onClick.bind(swiper);
  var target = params.touchEventsTarget === 'container' ? el : wrapperEl;
  var capture = !!params.nested; // Touch Events

  {
    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener(touchEvents.move, swiper.onTouchMove, capture);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener(touchEvents.end, swiper.onTouchEnd, false);
    } else {
      if (Support.touch) {
        var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? {
          passive: true,
          capture: false
        } : false;
        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? {
          passive: false,
          capture: capture
        } : capture);
        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
      }

      if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
        target.addEventListener('mousedown', swiper.onTouchStart, false);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener('mousemove', swiper.onTouchMove, capture);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener('mouseup', swiper.onTouchEnd, false);
      }
    } // Prevent Links Clicks


    if (params.preventClicks || params.preventClicksPropagation) {
      target.addEventListener('click', swiper.onClick, true);
    }
  } // Resize handler

  swiper.on(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);
}

function detachEvents() {
  var swiper = this;
  var params = swiper.params,
      touchEvents = swiper.touchEvents,
      el = swiper.el,
      wrapperEl = swiper.wrapperEl;
  var target = params.touchEventsTarget === 'container' ? el : wrapperEl;
  var capture = !!params.nested; // Touch Events

  {
    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener(touchEvents.end, swiper.onTouchEnd, false);
    } else {
      if (Support.touch) {
        var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? {
          passive: true,
          capture: false
        } : false;
        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
      }

      if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
        target.removeEventListener('mousedown', swiper.onTouchStart, false);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener('mousemove', swiper.onTouchMove, capture);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener('mouseup', swiper.onTouchEnd, false);
      }
    } // Prevent Links Clicks


    if (params.preventClicks || params.preventClicksPropagation) {
      target.removeEventListener('click', swiper.onClick, true);
    }
  } // Resize handler

  swiper.off(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);
}

var events = {
  attachEvents: attachEvents,
  detachEvents: detachEvents
};

function setBreakpoint() {
  var swiper = this;
  var activeIndex = swiper.activeIndex,
      initialized = swiper.initialized,
      _swiper$loopedSlides = swiper.loopedSlides,
      loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,
      params = swiper.params;
  var breakpoints = params.breakpoints;
  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Set breakpoint for window width and update parameters

  var breakpoint = swiper.getBreakpoint(breakpoints);

  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {
    var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;
    var needsReLoop = params.loop && breakPointsParams.slidesPerView !== params.slidesPerView;
    Utils.extend(swiper.params, breakPointsParams);
    Utils.extend(swiper, {
      allowTouchMove: swiper.params.allowTouchMove,
      allowSlideNext: swiper.params.allowSlideNext,
      allowSlidePrev: swiper.params.allowSlidePrev
    });
    swiper.currentBreakpoint = breakpoint;

    if (needsReLoop && initialized) {
      swiper.loopDestroy();
      swiper.loopCreate();
      swiper.updateSlides();
      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);
    }

    swiper.emit('breakpoint', breakPointsParams);
  }
}

function getBreakpoint(breakpoints) {
  var swiper = this; // Get breakpoint for window width

  if (!breakpoints) return undefined;
  var breakpoint = false;
  var points = [];
  Object.keys(breakpoints).forEach(function (point) {
    points.push(point);
  });
  points.sort(function (a, b) {
    return parseInt(a, 10) - parseInt(b, 10);
  });

  for (var i = 0; i < points.length; i += 1) {
    var point = points[i];

    if (swiper.params.breakpointsInverse) {
      if (point <= ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].innerWidth) {
        breakpoint = point;
      }
    } else if (point >= ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].innerWidth && !breakpoint) {
      breakpoint = point;
    }
  }

  return breakpoint || 'max';
}

var breakpoints = {
  setBreakpoint: setBreakpoint,
  getBreakpoint: getBreakpoint
};

var Browser = function Browser() {
  function isSafari() {
    var ua = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.userAgent.toLowerCase();
    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;
  }

  return {
    isIE: !!ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.userAgent.match(/Trident/g) || !!ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.userAgent.match(/MSIE/g),
    isEdge: !!ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.userAgent.match(/Edge/g),
    isSafari: isSafari(),
    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.userAgent)
  };
}();

function addClasses() {
  var swiper = this;
  var classNames = swiper.classNames,
      params = swiper.params,
      rtl = swiper.rtl,
      $el = swiper.$el;
  var suffixes = [];
  suffixes.push(params.direction);

  if (params.freeMode) {
    suffixes.push('free-mode');
  }

  if (!Support.flexbox) {
    suffixes.push('no-flexbox');
  }

  if (params.autoHeight) {
    suffixes.push('autoheight');
  }

  if (rtl) {
    suffixes.push('rtl');
  }

  if (params.slidesPerColumn > 1) {
    suffixes.push('multirow');
  }

  if (Device.android) {
    suffixes.push('android');
  }

  if (Device.ios) {
    suffixes.push('ios');
  } // WP8 Touch Events Fix


  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {
    suffixes.push("wp8-".concat(params.direction));
  }

  suffixes.forEach(function (suffix) {
    classNames.push(params.containerModifierClass + suffix);
  });
  $el.addClass(classNames.join(' '));
}

function removeClasses() {
  var swiper = this;
  var $el = swiper.$el,
      classNames = swiper.classNames;
  $el.removeClass(classNames.join(' '));
}

var classes = {
  addClasses: addClasses,
  removeClasses: removeClasses
};

function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {
  var image;

  function onReady() {
    if (callback) callback();
  }

  if (!imageEl.complete || !checkForComplete) {
    if (src) {
      image = new ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].Image();
      image.onload = onReady;
      image.onerror = onReady;

      if (sizes) {
        image.sizes = sizes;
      }

      if (srcset) {
        image.srcset = srcset;
      }

      if (src) {
        image.src = src;
      }
    } else {
      onReady();
    }
  } else {
    // image already loaded...
    onReady();
  }
}

function preloadImages() {
  var swiper = this;
  swiper.imagesToLoad = swiper.$el.find('img');

  function onReady() {
    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;
    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;

    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
      if (swiper.params.updateOnImagesReady) swiper.update();
      swiper.emit('imagesReady');
    }
  }

  for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {
    var imageEl = swiper.imagesToLoad[i];
    swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);
  }
}

var images = {
  loadImage: loadImage,
  preloadImages: preloadImages
};

function checkOverflow() {
  var swiper = this;
  var wasLocked = swiper.isLocked;
  swiper.isLocked = swiper.snapGrid.length === 1;
  swiper.allowSlideNext = !swiper.isLocked;
  swiper.allowSlidePrev = !swiper.isLocked; // events

  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');

  if (wasLocked && wasLocked !== swiper.isLocked) {
    swiper.isEnd = false;
    swiper.navigation.update();
  }
}

var checkOverflow$1 = {
  checkOverflow: checkOverflow
};
var defaults = {
  init: true,
  direction: 'horizontal',
  touchEventsTarget: 'container',
  initialSlide: 0,
  speed: 300,
  //
  preventInteractionOnTransition: false,
  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).
  edgeSwipeDetection: false,
  edgeSwipeThreshold: 20,
  // Free mode
  freeMode: false,
  freeModeMomentum: true,
  freeModeMomentumRatio: 1,
  freeModeMomentumBounce: true,
  freeModeMomentumBounceRatio: 1,
  freeModeMomentumVelocityRatio: 1,
  freeModeSticky: false,
  freeModeMinimumVelocity: 0.02,
  // Autoheight
  autoHeight: false,
  // Set wrapper width
  setWrapperSize: false,
  // Virtual Translate
  virtualTranslate: false,
  // Effects
  effect: 'slide',
  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
  // Breakpoints
  breakpoints: undefined,
  breakpointsInverse: false,
  // Slides grid
  spaceBetween: 0,
  slidesPerView: 1,
  slidesPerColumn: 1,
  slidesPerColumnFill: 'column',
  slidesPerGroup: 1,
  centeredSlides: false,
  slidesOffsetBefore: 0,
  // in px
  slidesOffsetAfter: 0,
  // in px
  normalizeSlideIndex: true,
  centerInsufficientSlides: false,
  // Disable swiper and hide navigation when container not overflow
  watchOverflow: false,
  // Round length
  roundLengths: false,
  // Touches
  touchRatio: 1,
  touchAngle: 45,
  simulateTouch: true,
  shortSwipes: true,
  longSwipes: true,
  longSwipesRatio: 0.5,
  longSwipesMs: 300,
  followFinger: true,
  allowTouchMove: true,
  threshold: 0,
  touchMoveStopPropagation: true,
  touchStartPreventDefault: true,
  touchReleaseOnEdges: false,
  // Unique Navigation Elements
  uniqueNavElements: true,
  // Resistance
  resistance: true,
  resistanceRatio: 0.85,
  // Progress
  watchSlidesProgress: false,
  watchSlidesVisibility: false,
  // Cursor
  grabCursor: false,
  // Clicks
  preventClicks: true,
  preventClicksPropagation: true,
  slideToClickedSlide: false,
  // Images
  preloadImages: true,
  updateOnImagesReady: true,
  // loop
  loop: false,
  loopAdditionalSlides: 0,
  loopedSlides: null,
  loopFillGroupWithBlank: false,
  // Swiping/no swiping
  allowSlidePrev: true,
  allowSlideNext: true,
  swipeHandler: null,
  // '.swipe-handler',
  noSwiping: true,
  noSwipingClass: 'swiper-no-swiping',
  noSwipingSelector: null,
  // Passive Listeners
  passiveListeners: true,
  // NS
  containerModifierClass: 'swiper-container-',
  // NEW
  slideClass: 'swiper-slide',
  slideBlankClass: 'swiper-slide-invisible-blank',
  slideActiveClass: 'swiper-slide-active',
  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
  slideVisibleClass: 'swiper-slide-visible',
  slideDuplicateClass: 'swiper-slide-duplicate',
  slideNextClass: 'swiper-slide-next',
  slideDuplicateNextClass: 'swiper-slide-duplicate-next',
  slidePrevClass: 'swiper-slide-prev',
  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
  wrapperClass: 'swiper-wrapper',
  // Callbacks
  runCallbacksOnInit: true
};
var prototypes = {
  update: update,
  translate: translate,
  transition: transition$1,
  slide: slide,
  loop: loop,
  grabCursor: grabCursor,
  manipulation: manipulation,
  events: events,
  breakpoints: breakpoints,
  checkOverflow: checkOverflow$1,
  classes: classes,
  images: images
};
var extendedDefaults = {};

var Swiper =
/*#__PURE__*/
function (_SwiperClass) {
  _inherits(Swiper, _SwiperClass);

  function Swiper() {
    var _this;

    _classCallCheck(this, Swiper);

    var el;
    var params;

    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }

    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {
      params = args[0];
    } else {
      el = args[0];
      params = args[1];
    }

    if (!params) params = {};
    params = Utils.extend({}, params);
    if (el && !params.el) params.el = el;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Swiper).call(this, params));
    Object.keys(prototypes).forEach(function (prototypeGroup) {
      Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {
        if (!Swiper.prototype[protoMethod]) {
          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
        }
      });
    }); // Swiper Instance

    var swiper = _assertThisInitialized(_assertThisInitialized(_this));

    if (typeof swiper.modules === 'undefined') {
      swiper.modules = {};
    }

    Object.keys(swiper.modules).forEach(function (moduleName) {
      var module = swiper.modules[moduleName];

      if (module.params) {
        var moduleParamName = Object.keys(module.params)[0];
        var moduleParams = module.params[moduleParamName];
        if (_typeof(moduleParams) !== 'object' || moduleParams === null) return;
        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;

        if (params[moduleParamName] === true) {
          params[moduleParamName] = {
            enabled: true
          };
        }

        if (_typeof(params[moduleParamName]) === 'object' && !('enabled' in params[moduleParamName])) {
          params[moduleParamName].enabled = true;
        }

        if (!params[moduleParamName]) params[moduleParamName] = {
          enabled: false
        };
      }
    }); // Extend defaults with modules params

    var swiperParams = Utils.extend({}, defaults);
    swiper.useModulesParams(swiperParams); // Extend defaults with passed params

    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);
    swiper.originalParams = Utils.extend({}, swiper.params);
    swiper.passedParams = Utils.extend({}, params); // Save Dom lib

    swiper.$ = dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"]; // Find el

    var $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(swiper.params.el);
    el = $el[0];

    if (!el) {
      return _possibleConstructorReturn(_this, undefined);
    }

    if ($el.length > 1) {
      var swipers = [];
      $el.each(function (index$$1, containerEl) {
        var newParams = Utils.extend({}, params, {
          el: containerEl
        });
        swipers.push(new Swiper(newParams));
      });
      return _possibleConstructorReturn(_this, swipers);
    }

    el.swiper = swiper;
    $el.data('swiper', swiper); // Find Wrapper

    var $wrapperEl = $el.children(".".concat(swiper.params.wrapperClass)); // Extend Swiper

    Utils.extend(swiper, {
      $el: $el,
      el: el,
      $wrapperEl: $wrapperEl,
      wrapperEl: $wrapperEl[0],
      // Classes
      classNames: [],
      // Slides
      slides: Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(),
      slidesGrid: [],
      snapGrid: [],
      slidesSizesGrid: [],
      // isDirection
      isHorizontal: function isHorizontal() {
        return swiper.params.direction === 'horizontal';
      },
      isVertical: function isVertical() {
        return swiper.params.direction === 'vertical';
      },
      // RTL
      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',
      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),
      wrongRTL: $wrapperEl.css('display') === '-webkit-box',
      // Indexes
      activeIndex: 0,
      realIndex: 0,
      //
      isBeginning: true,
      isEnd: false,
      // Props
      translate: 0,
      previousTranslate: 0,
      progress: 0,
      velocity: 0,
      animating: false,
      // Locks
      allowSlideNext: swiper.params.allowSlideNext,
      allowSlidePrev: swiper.params.allowSlidePrev,
      // Touch Events
      touchEvents: function touchEvents() {
        var touch = ['touchstart', 'touchmove', 'touchend'];
        var desktop = ['mousedown', 'mousemove', 'mouseup'];

        if (Support.pointerEvents) {
          desktop = ['pointerdown', 'pointermove', 'pointerup'];
        } else if (Support.prefixedPointerEvents) {
          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];
        }

        swiper.touchEventsTouch = {
          start: touch[0],
          move: touch[1],
          end: touch[2]
        };
        swiper.touchEventsDesktop = {
          start: desktop[0],
          move: desktop[1],
          end: desktop[2]
        };
        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;
      }(),
      touchEventsData: {
        isTouched: undefined,
        isMoved: undefined,
        allowTouchCallbacks: undefined,
        touchStartTime: undefined,
        isScrolling: undefined,
        currentTranslate: undefined,
        startTranslate: undefined,
        allowThresholdMove: undefined,
        // Form elements to match
        formElements: 'input, select, option, textarea, button, video',
        // Last click time
        lastClickTime: Utils.now(),
        clickTimeout: undefined,
        // Velocities
        velocities: [],
        allowMomentumBounce: undefined,
        isTouchEvent: undefined,
        startMoving: undefined
      },
      // Clicks
      allowClick: true,
      // Touches
      allowTouchMove: swiper.params.allowTouchMove,
      touches: {
        startX: 0,
        startY: 0,
        currentX: 0,
        currentY: 0,
        diff: 0
      },
      // Images
      imagesToLoad: [],
      imagesLoaded: 0
    }); // Install Modules

    swiper.useModules(); // Init

    if (swiper.params.init) {
      swiper.init();
    } // Return app instance


    return _possibleConstructorReturn(_this, swiper);
  }

  _createClass(Swiper, [{
    key: "slidesPerViewDynamic",
    value: function slidesPerViewDynamic() {
      var swiper = this;
      var params = swiper.params,
          slides = swiper.slides,
          slidesGrid = swiper.slidesGrid,
          swiperSize = swiper.size,
          activeIndex = swiper.activeIndex;
      var spv = 1;

      if (params.centeredSlides) {
        var slideSize = slides[activeIndex].swiperSlideSize;
        var breakLoop;

        for (var i = activeIndex + 1; i < slides.length; i += 1) {
          if (slides[i] && !breakLoop) {
            slideSize += slides[i].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize) breakLoop = true;
          }
        }

        for (var _i7 = activeIndex - 1; _i7 >= 0; _i7 -= 1) {
          if (slides[_i7] && !breakLoop) {
            slideSize += slides[_i7].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize) breakLoop = true;
          }
        }
      } else {
        for (var _i8 = activeIndex + 1; _i8 < slides.length; _i8 += 1) {
          if (slidesGrid[_i8] - slidesGrid[activeIndex] < swiperSize) {
            spv += 1;
          }
        }
      }

      return spv;
    }
  }, {
    key: "update",
    value: function update() {
      var swiper = this;
      if (!swiper || swiper.destroyed) return;
      var snapGrid = swiper.snapGrid,
          params = swiper.params; // Breakpoints

      if (params.breakpoints) {
        swiper.setBreakpoint();
      }

      swiper.updateSize();
      swiper.updateSlides();
      swiper.updateProgress();
      swiper.updateSlidesClasses();

      function setTranslate() {
        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;
        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
        swiper.setTranslate(newTranslate);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }

      var translated;

      if (swiper.params.freeMode) {
        setTranslate();

        if (swiper.params.autoHeight) {
          swiper.updateAutoHeight();
        }
      } else {
        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);
        } else {
          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
        }

        if (!translated) {
          setTranslate();
        }
      }

      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
        swiper.checkOverflow();
      }

      swiper.emit('update');
    }
  }, {
    key: "init",
    value: function init() {
      var swiper = this;
      if (swiper.initialized) return;
      swiper.emit('beforeInit'); // Set breakpoint

      if (swiper.params.breakpoints) {
        swiper.setBreakpoint();
      } // Add Classes


      swiper.addClasses(); // Create loop

      if (swiper.params.loop) {
        swiper.loopCreate();
      } // Update size


      swiper.updateSize(); // Update slides

      swiper.updateSlides();

      if (swiper.params.watchOverflow) {
        swiper.checkOverflow();
      } // Set Grab Cursor


      if (swiper.params.grabCursor) {
        swiper.setGrabCursor();
      }

      if (swiper.params.preloadImages) {
        swiper.preloadImages();
      } // Slide To Initial Slide


      if (swiper.params.loop) {
        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);
      } else {
        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);
      } // Attach events


      swiper.attachEvents(); // Init Flag

      swiper.initialized = true; // Emit

      swiper.emit('init');
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var deleteInstance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var cleanStyles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var swiper = this;
      var params = swiper.params,
          $el = swiper.$el,
          $wrapperEl = swiper.$wrapperEl,
          slides = swiper.slides;

      if (typeof swiper.params === 'undefined' || swiper.destroyed) {
        return null;
      }

      swiper.emit('beforeDestroy'); // Init Flag

      swiper.initialized = false; // Detach events

      swiper.detachEvents(); // Destroy loop

      if (params.loop) {
        swiper.loopDestroy();
      } // Cleanup styles


      if (cleanStyles) {
        swiper.removeClasses();
        $el.removeAttr('style');
        $wrapperEl.removeAttr('style');

        if (slides && slides.length) {
          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index').removeAttr('data-swiper-column').removeAttr('data-swiper-row');
        }
      }

      swiper.emit('destroy'); // Detach emitter events

      Object.keys(swiper.eventsListeners).forEach(function (eventName) {
        swiper.off(eventName);
      });

      if (deleteInstance !== false) {
        swiper.$el[0].swiper = null;
        swiper.$el.data('swiper', null);
        Utils.deleteProps(swiper);
      }

      swiper.destroyed = true;
      return null;
    }
  }], [{
    key: "extendDefaults",
    value: function extendDefaults(newDefaults) {
      Utils.extend(extendedDefaults, newDefaults);
    }
  }, {
    key: "extendedDefaults",
    get: function get() {
      return extendedDefaults;
    }
  }, {
    key: "defaults",
    get: function get() {
      return defaults;
    }
  }, {
    key: "Class",
    get: function get() {
      return SwiperClass;
    }
  }, {
    key: "$",
    get: function get() {
      return dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"];
    }
  }]);

  return Swiper;
}(SwiperClass);

var Device$1 = {
  name: 'device',
  proto: {
    device: Device
  },
  static: {
    device: Device
  }
};
var Support$1 = {
  name: 'support',
  proto: {
    support: Support
  },
  static: {
    support: Support
  }
};
var Browser$1 = {
  name: 'browser',
  proto: {
    browser: Browser
  },
  static: {
    browser: Browser
  }
};
var Resize = {
  name: 'resize',
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      resize: {
        resizeHandler: function resizeHandler() {
          if (!swiper || swiper.destroyed || !swiper.initialized) return;
          swiper.emit('beforeResize');
          swiper.emit('resize');
        },
        orientationChangeHandler: function orientationChangeHandler() {
          if (!swiper || swiper.destroyed || !swiper.initialized) return;
          swiper.emit('orientationchange');
        }
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this; // Emit resize

      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange

      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].addEventListener('orientationchange', swiper.resize.orientationChangeHandler);
    },
    destroy: function destroy() {
      var swiper = this;
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].removeEventListener('resize', swiper.resize.resizeHandler);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);
    }
  }
};
var Observer = {
  func: ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].MutationObserver || ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].WebkitMutationObserver,
  attach: function attach(target) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var swiper = this;
    var ObserverFunc = Observer.func;
    var observer = new ObserverFunc(function (mutations) {
      // The observerUpdate event should only be triggered
      // once despite the number of mutations.  Additional
      // triggers are redundant and are very costly
      if (mutations.length === 1) {
        swiper.emit('observerUpdate', mutations[0]);
        return;
      }

      var observerUpdate = function observerUpdate() {
        swiper.emit('observerUpdate', mutations[0]);
      };

      if (ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].requestAnimationFrame) {
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].requestAnimationFrame(observerUpdate);
      } else {
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].setTimeout(observerUpdate, 0);
      }
    });
    observer.observe(target, {
      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
      childList: typeof options.childList === 'undefined' ? true : options.childList,
      characterData: typeof options.characterData === 'undefined' ? true : options.characterData
    });
    swiper.observer.observers.push(observer);
  },
  init: function init() {
    var swiper = this;
    if (!Support.observer || !swiper.params.observer) return;

    if (swiper.params.observeParents) {
      var containerParents = swiper.$el.parents();

      for (var i = 0; i < containerParents.length; i += 1) {
        swiper.observer.attach(containerParents[i]);
      }
    } // Observe container


    swiper.observer.attach(swiper.$el[0], {
      childList: false
    }); // Observe wrapper

    swiper.observer.attach(swiper.$wrapperEl[0], {
      attributes: false
    });
  },
  destroy: function destroy() {
    var swiper = this;
    swiper.observer.observers.forEach(function (observer) {
      observer.disconnect();
    });
    swiper.observer.observers = [];
  }
};
var Observer$1 = {
  name: 'observer',
  params: {
    observer: false,
    observeParents: false
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      observer: {
        init: Observer.init.bind(swiper),
        attach: Observer.attach.bind(swiper),
        destroy: Observer.destroy.bind(swiper),
        observers: []
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;
      swiper.observer.init();
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.observer.destroy();
    }
  }
};
var Virtual = {
  update: function update(force) {
    var swiper = this;
    var _swiper$params = swiper.params,
        slidesPerView = _swiper$params.slidesPerView,
        slidesPerGroup = _swiper$params.slidesPerGroup,
        centeredSlides = _swiper$params.centeredSlides;
    var _swiper$params$virtua = swiper.params.virtual,
        addSlidesBefore = _swiper$params$virtua.addSlidesBefore,
        addSlidesAfter = _swiper$params$virtua.addSlidesAfter;
    var _swiper$virtual = swiper.virtual,
        previousFrom = _swiper$virtual.from,
        previousTo = _swiper$virtual.to,
        slides = _swiper$virtual.slides,
        previousSlidesGrid = _swiper$virtual.slidesGrid,
        renderSlide = _swiper$virtual.renderSlide,
        previousOffset = _swiper$virtual.offset;
    swiper.updateActiveIndex();
    var activeIndex = swiper.activeIndex || 0;
    var offsetProp;
    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';
    var slidesAfter;
    var slidesBefore;

    if (centeredSlides) {
      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;
      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;
    } else {
      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;
      slidesBefore = slidesPerGroup + addSlidesAfter;
    }

    var from = Math.max((activeIndex || 0) - slidesBefore, 0);
    var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);
    var offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);
    Utils.extend(swiper.virtual, {
      from: from,
      to: to,
      offset: offset$$1,
      slidesGrid: swiper.slidesGrid
    });

    function onRendered() {
      swiper.updateSlides();
      swiper.updateProgress();
      swiper.updateSlidesClasses();

      if (swiper.lazy && swiper.params.lazy.enabled) {
        swiper.lazy.load();
      }
    }

    if (previousFrom === from && previousTo === to && !force) {
      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {
        swiper.slides.css(offsetProp, "".concat(offset$$1, "px"));
      }

      swiper.updateProgress();
      return;
    }

    if (swiper.params.virtual.renderExternal) {
      swiper.params.virtual.renderExternal.call(swiper, {
        offset: offset$$1,
        from: from,
        to: to,
        slides: function getSlides() {
          var slidesToRender = [];

          for (var i = from; i <= to; i += 1) {
            slidesToRender.push(slides[i]);
          }

          return slidesToRender;
        }()
      });
      onRendered();
      return;
    }

    var prependIndexes = [];
    var appendIndexes = [];

    if (force) {
      swiper.$wrapperEl.find(".".concat(swiper.params.slideClass)).remove();
    } else {
      for (var i = previousFrom; i <= previousTo; i += 1) {
        if (i < from || i > to) {
          swiper.$wrapperEl.find(".".concat(swiper.params.slideClass, "[data-swiper-slide-index=\"").concat(i, "\"]")).remove();
        }
      }
    }

    for (var _i9 = 0; _i9 < slides.length; _i9 += 1) {
      if (_i9 >= from && _i9 <= to) {
        if (typeof previousTo === 'undefined' || force) {
          appendIndexes.push(_i9);
        } else {
          if (_i9 > previousTo) appendIndexes.push(_i9);
          if (_i9 < previousFrom) prependIndexes.push(_i9);
        }
      }
    }

    appendIndexes.forEach(function (index$$1) {
      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));
    });
    prependIndexes.sort(function (a, b) {
      return a < b;
    }).forEach(function (index$$1) {
      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));
    });
    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, "".concat(offset$$1, "px"));
    onRendered();
  },
  renderSlide: function renderSlide(slide, index$$1) {
    var swiper = this;
    var params = swiper.params.virtual;

    if (params.cache && swiper.virtual.cache[index$$1]) {
      return swiper.virtual.cache[index$$1];
    }

    var $slideEl = params.renderSlide ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(params.renderSlide.call(swiper, slide, index$$1)) : Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"".concat(swiper.params.slideClass, "\" data-swiper-slide-index=\"").concat(index$$1, "\">").concat(slide, "</div>"));
    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);
    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;
    return $slideEl;
  },
  appendSlide: function appendSlide(slide) {
    var swiper = this;
    swiper.virtual.slides.push(slide);
    swiper.virtual.update(true);
  },
  prependSlide: function prependSlide(slide) {
    var swiper = this;
    swiper.virtual.slides.unshift(slide);

    if (swiper.params.virtual.cache) {
      var cache = swiper.virtual.cache;
      var newCache = {};
      Object.keys(cache).forEach(function (cachedIndex) {
        newCache[cachedIndex + 1] = cache[cachedIndex];
      });
      swiper.virtual.cache = newCache;
    }

    swiper.virtual.update(true);
    swiper.slideNext(0);
  }
};
var Virtual$1 = {
  name: 'virtual',
  params: {
    virtual: {
      enabled: false,
      slides: [],
      cache: true,
      renderSlide: null,
      renderExternal: null,
      addSlidesBefore: 0,
      addSlidesAfter: 0
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      virtual: {
        update: Virtual.update.bind(swiper),
        appendSlide: Virtual.appendSlide.bind(swiper),
        prependSlide: Virtual.prependSlide.bind(swiper),
        renderSlide: Virtual.renderSlide.bind(swiper),
        slides: swiper.params.virtual.slides,
        cache: {}
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;
      if (!swiper.params.virtual.enabled) return;
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "virtual"));
      var overwriteParams = {
        watchSlidesProgress: true
      };
      Utils.extend(swiper.params, overwriteParams);
      Utils.extend(swiper.originalParams, overwriteParams);
      swiper.virtual.update();
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      if (!swiper.params.virtual.enabled) return;
      swiper.virtual.update();
    }
  }
};
var Keyboard = {
  handle: function handle(event) {
    var swiper = this;
    var rtl = swiper.rtlTranslate;
    var e = event;
    if (e.originalEvent) e = e.originalEvent; // jquery fix

    var kc = e.keyCode || e.charCode; // Directions locks

    if (!swiper.allowSlideNext && (swiper.isHorizontal() && kc === 39 || swiper.isVertical() && kc === 40)) {
      return false;
    }

    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && kc === 37 || swiper.isVertical() && kc === 38)) {
      return false;
    }

    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
      return undefined;
    }

    if (ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement && ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement.nodeName && (ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement.nodeName.toLowerCase() === 'input' || ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].activeElement.nodeName.toLowerCase() === 'textarea')) {
      return undefined;
    }

    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {
      var inView = false; // Check that swiper should be inside of visible area of window

      if (swiper.$el.parents(".".concat(swiper.params.slideClass)).length > 0 && swiper.$el.parents(".".concat(swiper.params.slideActiveClass)).length === 0) {
        return undefined;
      }

      var windowWidth = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].innerWidth;
      var windowHeight = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].innerHeight;
      var swiperOffset = swiper.$el.offset();
      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;
      var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];

      for (var i = 0; i < swiperCoord.length; i += 1) {
        var point = swiperCoord[i];

        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {
          inView = true;
        }
      }

      if (!inView) return undefined;
    }

    if (swiper.isHorizontal()) {
      if (kc === 37 || kc === 39) {
        if (e.preventDefault) e.preventDefault();else e.returnValue = false;
      }

      if (kc === 39 && !rtl || kc === 37 && rtl) swiper.slideNext();
      if (kc === 37 && !rtl || kc === 39 && rtl) swiper.slidePrev();
    } else {
      if (kc === 38 || kc === 40) {
        if (e.preventDefault) e.preventDefault();else e.returnValue = false;
      }

      if (kc === 40) swiper.slideNext();
      if (kc === 38) swiper.slidePrev();
    }

    swiper.emit('keyPress', kc);
    return undefined;
  },
  enable: function enable() {
    var swiper = this;
    if (swiper.keyboard.enabled) return;
    Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"]).on('keydown', swiper.keyboard.handle);
    swiper.keyboard.enabled = true;
  },
  disable: function disable() {
    var swiper = this;
    if (!swiper.keyboard.enabled) return;
    Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"]).off('keydown', swiper.keyboard.handle);
    swiper.keyboard.enabled = false;
  }
};
var Keyboard$1 = {
  name: 'keyboard',
  params: {
    keyboard: {
      enabled: false,
      onlyInViewport: true
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      keyboard: {
        enabled: false,
        enable: Keyboard.enable.bind(swiper),
        disable: Keyboard.disable.bind(swiper),
        handle: Keyboard.handle.bind(swiper)
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;

      if (swiper.params.keyboard.enabled) {
        swiper.keyboard.enable();
      }
    },
    destroy: function destroy() {
      var swiper = this;

      if (swiper.keyboard.enabled) {
        swiper.keyboard.disable();
      }
    }
  }
};

function isEventSupported() {
  var eventName = 'onwheel';
  var isSupported = eventName in ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"];

  if (!isSupported) {
    var element = ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].implementation && ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].implementation.hasFeature // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  && ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].implementation.hasFeature('', '') !== true) {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

var Mousewheel = {
  lastScrollTime: Utils.now(),
  event: function getEvent() {
    if (ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';
    return isEventSupported() ? 'wheel' : 'mousewheel';
  }(),
  normalize: function normalize(e) {
    // Reasonable defaults
    var PIXEL_STEP = 10;
    var LINE_HEIGHT = 40;
    var PAGE_HEIGHT = 800;
    var sX = 0;
    var sY = 0; // spinX, spinY

    var pX = 0;
    var pY = 0; // pixelX, pixelY
    // Legacy

    if ('detail' in e) {
      sY = e.detail;
    }

    if ('wheelDelta' in e) {
      sY = -e.wheelDelta / 120;
    }

    if ('wheelDeltaY' in e) {
      sY = -e.wheelDeltaY / 120;
    }

    if ('wheelDeltaX' in e) {
      sX = -e.wheelDeltaX / 120;
    } // side scrolling on FF with DOMMouseScroll


    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {
      sX = sY;
      sY = 0;
    }

    pX = sX * PIXEL_STEP;
    pY = sY * PIXEL_STEP;

    if ('deltaY' in e) {
      pY = e.deltaY;
    }

    if ('deltaX' in e) {
      pX = e.deltaX;
    }

    if ((pX || pY) && e.deltaMode) {
      if (e.deltaMode === 1) {
        // delta in LINE units
        pX *= LINE_HEIGHT;
        pY *= LINE_HEIGHT;
      } else {
        // delta in PAGE units
        pX *= PAGE_HEIGHT;
        pY *= PAGE_HEIGHT;
      }
    } // Fall-back if spin cannot be determined


    if (pX && !sX) {
      sX = pX < 1 ? -1 : 1;
    }

    if (pY && !sY) {
      sY = pY < 1 ? -1 : 1;
    }

    return {
      spinX: sX,
      spinY: sY,
      pixelX: pX,
      pixelY: pY
    };
  },
  handleMouseEnter: function handleMouseEnter() {
    var swiper = this;
    swiper.mouseEntered = true;
  },
  handleMouseLeave: function handleMouseLeave() {
    var swiper = this;
    swiper.mouseEntered = false;
  },
  handle: function handle(event) {
    var e = event;
    var swiper = this;
    var params = swiper.params.mousewheel;
    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;
    if (e.originalEvent) e = e.originalEvent; // jquery fix

    var delta = 0;
    var rtlFactor = swiper.rtlTranslate ? -1 : 1;
    var data$$1 = Mousewheel.normalize(e);

    if (params.forceToAxis) {
      if (swiper.isHorizontal()) {
        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;else return true;
      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;else return true;
    } else {
      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;
    }

    if (delta === 0) return true;
    if (params.invert) delta = -delta;

    if (!swiper.params.freeMode) {
      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {
        if (delta < 0) {
          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
            swiper.slideNext();
            swiper.emit('scroll', e);
          } else if (params.releaseOnEdges) return true;
        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {
          swiper.slidePrev();
          swiper.emit('scroll', e);
        } else if (params.releaseOnEdges) return true;
      }

      swiper.mousewheel.lastScrollTime = new ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].Date().getTime();
    } else {
      // Freemode or scrollContainer:
      if (swiper.params.loop) {
        swiper.loopFix();
      }

      var position = swiper.getTranslate() + delta * params.sensitivity;
      var wasBeginning = swiper.isBeginning;
      var wasEnd = swiper.isEnd;
      if (position >= swiper.minTranslate()) position = swiper.minTranslate();
      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();
      swiper.setTransition(0);
      swiper.setTranslate(position);
      swiper.updateProgress();
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();

      if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {
        swiper.updateSlidesClasses();
      }

      if (swiper.params.freeModeSticky) {
        clearTimeout(swiper.mousewheel.timeout);
        swiper.mousewheel.timeout = Utils.nextTick(function () {
          swiper.slideToClosest();
        }, 300);
      } // Emit event


      swiper.emit('scroll', e); // Stop autoplay

      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions

      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;
    }

    if (e.preventDefault) e.preventDefault();else e.returnValue = false;
    return false;
  },
  enable: function enable() {
    var swiper = this;
    if (!Mousewheel.event) return false;
    if (swiper.mousewheel.enabled) return false;
    var target = swiper.$el;

    if (swiper.params.mousewheel.eventsTarged !== 'container') {
      target = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(swiper.params.mousewheel.eventsTarged);
    }

    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);
    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);
    target.on(Mousewheel.event, swiper.mousewheel.handle);
    swiper.mousewheel.enabled = true;
    return true;
  },
  disable: function disable() {
    var swiper = this;
    if (!Mousewheel.event) return false;
    if (!swiper.mousewheel.enabled) return false;
    var target = swiper.$el;

    if (swiper.params.mousewheel.eventsTarged !== 'container') {
      target = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(swiper.params.mousewheel.eventsTarged);
    }

    target.off(Mousewheel.event, swiper.mousewheel.handle);
    swiper.mousewheel.enabled = false;
    return true;
  }
};
var Mousewheel$1 = {
  name: 'mousewheel',
  params: {
    mousewheel: {
      enabled: false,
      releaseOnEdges: false,
      invert: false,
      forceToAxis: false,
      sensitivity: 1,
      eventsTarged: 'container'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      mousewheel: {
        enabled: false,
        enable: Mousewheel.enable.bind(swiper),
        disable: Mousewheel.disable.bind(swiper),
        handle: Mousewheel.handle.bind(swiper),
        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),
        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),
        lastScrollTime: Utils.now()
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;
      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();
    },
    destroy: function destroy() {
      var swiper = this;
      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();
    }
  }
};
var Navigation = {
  update: function update() {
    // Update Navigation Buttons
    var swiper = this;
    var params = swiper.params.navigation;
    if (swiper.params.loop) return;
    var _swiper$navigation = swiper.navigation,
        $nextEl = _swiper$navigation.$nextEl,
        $prevEl = _swiper$navigation.$prevEl;

    if ($prevEl && $prevEl.length > 0) {
      if (swiper.isBeginning) {
        $prevEl.addClass(params.disabledClass);
      } else {
        $prevEl.removeClass(params.disabledClass);
      }

      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
    }

    if ($nextEl && $nextEl.length > 0) {
      if (swiper.isEnd) {
        $nextEl.addClass(params.disabledClass);
      } else {
        $nextEl.removeClass(params.disabledClass);
      }

      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
    }
  },
  init: function init() {
    var swiper = this;
    var params = swiper.params.navigation;
    if (!(params.nextEl || params.prevEl)) return;
    var $nextEl;
    var $prevEl;

    if (params.nextEl) {
      $nextEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(params.nextEl);

      if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {
        $nextEl = swiper.$el.find(params.nextEl);
      }
    }

    if (params.prevEl) {
      $prevEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(params.prevEl);

      if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {
        $prevEl = swiper.$el.find(params.prevEl);
      }
    }

    if ($nextEl && $nextEl.length > 0) {
      $nextEl.on('click', function (e) {
        e.preventDefault();
        if (swiper.isEnd && !swiper.params.loop) return;
        swiper.slideNext();
      });
    }

    if ($prevEl && $prevEl.length > 0) {
      $prevEl.on('click', function (e) {
        e.preventDefault();
        if (swiper.isBeginning && !swiper.params.loop) return;
        swiper.slidePrev();
      });
    }

    Utils.extend(swiper.navigation, {
      $nextEl: $nextEl,
      nextEl: $nextEl && $nextEl[0],
      $prevEl: $prevEl,
      prevEl: $prevEl && $prevEl[0]
    });
  },
  destroy: function destroy() {
    var swiper = this;
    var _swiper$navigation2 = swiper.navigation,
        $nextEl = _swiper$navigation2.$nextEl,
        $prevEl = _swiper$navigation2.$prevEl;

    if ($nextEl && $nextEl.length) {
      $nextEl.off('click');
      $nextEl.removeClass(swiper.params.navigation.disabledClass);
    }

    if ($prevEl && $prevEl.length) {
      $prevEl.off('click');
      $prevEl.removeClass(swiper.params.navigation.disabledClass);
    }
  }
};
var Navigation$1 = {
  name: 'navigation',
  params: {
    navigation: {
      nextEl: null,
      prevEl: null,
      hideOnClick: false,
      disabledClass: 'swiper-button-disabled',
      hiddenClass: 'swiper-button-hidden',
      lockClass: 'swiper-button-lock'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      navigation: {
        init: Navigation.init.bind(swiper),
        update: Navigation.update.bind(swiper),
        destroy: Navigation.destroy.bind(swiper)
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;
      swiper.navigation.init();
      swiper.navigation.update();
    },
    toEdge: function toEdge() {
      var swiper = this;
      swiper.navigation.update();
    },
    fromEdge: function fromEdge() {
      var swiper = this;
      swiper.navigation.update();
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.navigation.destroy();
    },
    click: function click(e) {
      var swiper = this;
      var _swiper$navigation3 = swiper.navigation,
          $nextEl = _swiper$navigation3.$nextEl,
          $prevEl = _swiper$navigation3.$prevEl;

      if (swiper.params.navigation.hideOnClick && !Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).is($prevEl) && !Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).is($nextEl)) {
        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
      }
    }
  }
};
var Pagination = {
  update: function update() {
    // Render || Update Pagination bullets/items
    var swiper = this;
    var rtl = swiper.rtl;
    var params = swiper.params.pagination;
    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;
    var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
    var $el = swiper.pagination.$el; // Current/Total

    var current;
    var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

    if (swiper.params.loop) {
      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);

      if (current > slidesLength - 1 - swiper.loopedSlides * 2) {
        current -= slidesLength - swiper.loopedSlides * 2;
      }

      if (current > total - 1) current -= total;
      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;
    } else if (typeof swiper.snapIndex !== 'undefined') {
      current = swiper.snapIndex;
    } else {
      current = swiper.activeIndex || 0;
    } // Types


    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
      var bullets = swiper.pagination.bullets;
      var firstIndex;
      var lastIndex;
      var midIndex;

      if (params.dynamicBullets) {
        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);
        $el.css(swiper.isHorizontal() ? 'width' : 'height', "".concat(swiper.pagination.bulletSize * (params.dynamicMainBullets + 4), "px"));

        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {
          swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;

          if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {
            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;
          } else if (swiper.pagination.dynamicBulletIndex < 0) {
            swiper.pagination.dynamicBulletIndex = 0;
          }
        }

        firstIndex = current - swiper.pagination.dynamicBulletIndex;
        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);
        midIndex = (lastIndex + firstIndex) / 2;
      }

      bullets.removeClass("".concat(params.bulletActiveClass, " ").concat(params.bulletActiveClass, "-next ").concat(params.bulletActiveClass, "-next-next ").concat(params.bulletActiveClass, "-prev ").concat(params.bulletActiveClass, "-prev-prev ").concat(params.bulletActiveClass, "-main"));

      if ($el.length > 1) {
        bullets.each(function (index$$1, bullet) {
          var $bullet = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(bullet);
          var bulletIndex = $bullet.index();

          if (bulletIndex === current) {
            $bullet.addClass(params.bulletActiveClass);
          }

          if (params.dynamicBullets) {
            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
              $bullet.addClass("".concat(params.bulletActiveClass, "-main"));
            }

            if (bulletIndex === firstIndex) {
              $bullet.prev().addClass("".concat(params.bulletActiveClass, "-prev")).prev().addClass("".concat(params.bulletActiveClass, "-prev-prev"));
            }

            if (bulletIndex === lastIndex) {
              $bullet.next().addClass("".concat(params.bulletActiveClass, "-next")).next().addClass("".concat(params.bulletActiveClass, "-next-next"));
            }
          }
        });
      } else {
        var $bullet = bullets.eq(current);
        $bullet.addClass(params.bulletActiveClass);

        if (params.dynamicBullets) {
          var $firstDisplayedBullet = bullets.eq(firstIndex);
          var $lastDisplayedBullet = bullets.eq(lastIndex);

          for (var i = firstIndex; i <= lastIndex; i += 1) {
            bullets.eq(i).addClass("".concat(params.bulletActiveClass, "-main"));
          }

          $firstDisplayedBullet.prev().addClass("".concat(params.bulletActiveClass, "-prev")).prev().addClass("".concat(params.bulletActiveClass, "-prev-prev"));
          $lastDisplayedBullet.next().addClass("".concat(params.bulletActiveClass, "-next")).next().addClass("".concat(params.bulletActiveClass, "-next-next"));
        }
      }

      if (params.dynamicBullets) {
        var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);
        var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;
        var offsetProp = rtl ? 'right' : 'left';
        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', "".concat(bulletsOffset, "px"));
      }
    }

    if (params.type === 'fraction') {
      $el.find(".".concat(params.currentClass)).text(params.formatFractionCurrent(current + 1));
      $el.find(".".concat(params.totalClass)).text(params.formatFractionTotal(total));
    }

    if (params.type === 'progressbar') {
      var progressbarDirection;

      if (params.progressbarOpposite) {
        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';
      } else {
        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';
      }

      var scale = (current + 1) / total;
      var scaleX = 1;
      var scaleY = 1;

      if (progressbarDirection === 'horizontal') {
        scaleX = scale;
      } else {
        scaleY = scale;
      }

      $el.find(".".concat(params.progressbarFillClass)).transform("translate3d(0,0,0) scaleX(".concat(scaleX, ") scaleY(").concat(scaleY, ")")).transition(swiper.params.speed);
    }

    if (params.type === 'custom' && params.renderCustom) {
      $el.html(params.renderCustom(swiper, current + 1, total));
      swiper.emit('paginationRender', swiper, $el[0]);
    } else {
      swiper.emit('paginationUpdate', swiper, $el[0]);
    }

    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
  },
  render: function render() {
    // Render Container
    var swiper = this;
    var params = swiper.params.pagination;
    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;
    var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
    var $el = swiper.pagination.$el;
    var paginationHTML = '';

    if (params.type === 'bullets') {
      var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

      for (var i = 0; i < numberOfBullets; i += 1) {
        if (params.renderBullet) {
          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);
        } else {
          paginationHTML += "<".concat(params.bulletElement, " class=\"").concat(params.bulletClass, "\"></").concat(params.bulletElement, ">");
        }
      }

      $el.html(paginationHTML);
      swiper.pagination.bullets = $el.find(".".concat(params.bulletClass));
    }

    if (params.type === 'fraction') {
      if (params.renderFraction) {
        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
      } else {
        paginationHTML = "<span class=\"".concat(params.currentClass, "\"></span>") + ' / ' + "<span class=\"".concat(params.totalClass, "\"></span>");
      }

      $el.html(paginationHTML);
    }

    if (params.type === 'progressbar') {
      if (params.renderProgressbar) {
        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
      } else {
        paginationHTML = "<span class=\"".concat(params.progressbarFillClass, "\"></span>");
      }

      $el.html(paginationHTML);
    }

    if (params.type !== 'custom') {
      swiper.emit('paginationRender', swiper.pagination.$el[0]);
    }
  },
  init: function init() {
    var swiper = this;
    var params = swiper.params.pagination;
    if (!params.el) return;
    var $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(params.el);
    if ($el.length === 0) return;

    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && swiper.$el.find(params.el).length === 1) {
      $el = swiper.$el.find(params.el);
    }

    if (params.type === 'bullets' && params.clickable) {
      $el.addClass(params.clickableClass);
    }

    $el.addClass(params.modifierClass + params.type);

    if (params.type === 'bullets' && params.dynamicBullets) {
      $el.addClass("".concat(params.modifierClass).concat(params.type, "-dynamic"));
      swiper.pagination.dynamicBulletIndex = 0;

      if (params.dynamicMainBullets < 1) {
        params.dynamicMainBullets = 1;
      }
    }

    if (params.type === 'progressbar' && params.progressbarOpposite) {
      $el.addClass(params.progressbarOppositeClass);
    }

    if (params.clickable) {
      $el.on('click', ".".concat(params.bulletClass), function onClick(e) {
        e.preventDefault();
        var index$$1 = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(this).index() * swiper.params.slidesPerGroup;
        if (swiper.params.loop) index$$1 += swiper.loopedSlides;
        swiper.slideTo(index$$1);
      });
    }

    Utils.extend(swiper.pagination, {
      $el: $el,
      el: $el[0]
    });
  },
  destroy: function destroy() {
    var swiper = this;
    var params = swiper.params.pagination;
    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;
    var $el = swiper.pagination.$el;
    $el.removeClass(params.hiddenClass);
    $el.removeClass(params.modifierClass + params.type);
    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);

    if (params.clickable) {
      $el.off('click', ".".concat(params.bulletClass));
    }
  }
};
var Pagination$1 = {
  name: 'pagination',
  params: {
    pagination: {
      el: null,
      bulletElement: 'span',
      clickable: false,
      hideOnClick: false,
      renderBullet: null,
      renderProgressbar: null,
      renderFraction: null,
      renderCustom: null,
      progressbarOpposite: false,
      type: 'bullets',
      // 'bullets' or 'progressbar' or 'fraction' or 'custom'
      dynamicBullets: false,
      dynamicMainBullets: 1,
      formatFractionCurrent: function formatFractionCurrent(number) {
        return number;
      },
      formatFractionTotal: function formatFractionTotal(number) {
        return number;
      },
      bulletClass: 'swiper-pagination-bullet',
      bulletActiveClass: 'swiper-pagination-bullet-active',
      modifierClass: 'swiper-pagination-',
      // NEW
      currentClass: 'swiper-pagination-current',
      totalClass: 'swiper-pagination-total',
      hiddenClass: 'swiper-pagination-hidden',
      progressbarFillClass: 'swiper-pagination-progressbar-fill',
      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',
      clickableClass: 'swiper-pagination-clickable',
      // NEW
      lockClass: 'swiper-pagination-lock'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      pagination: {
        init: Pagination.init.bind(swiper),
        render: Pagination.render.bind(swiper),
        update: Pagination.update.bind(swiper),
        destroy: Pagination.destroy.bind(swiper),
        dynamicBulletIndex: 0
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;
      swiper.pagination.init();
      swiper.pagination.render();
      swiper.pagination.update();
    },
    activeIndexChange: function activeIndexChange() {
      var swiper = this;

      if (swiper.params.loop) {
        swiper.pagination.update();
      } else if (typeof swiper.snapIndex === 'undefined') {
        swiper.pagination.update();
      }
    },
    snapIndexChange: function snapIndexChange() {
      var swiper = this;

      if (!swiper.params.loop) {
        swiper.pagination.update();
      }
    },
    slidesLengthChange: function slidesLengthChange() {
      var swiper = this;

      if (swiper.params.loop) {
        swiper.pagination.render();
        swiper.pagination.update();
      }
    },
    snapGridLengthChange: function snapGridLengthChange() {
      var swiper = this;

      if (!swiper.params.loop) {
        swiper.pagination.render();
        swiper.pagination.update();
      }
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.pagination.destroy();
    },
    click: function click(e) {
      var swiper = this;

      if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).hasClass(swiper.params.pagination.bulletClass)) {
        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);
      }
    }
  }
};
var Scrollbar = {
  setTranslate: function setTranslate() {
    var swiper = this;
    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
    var scrollbar = swiper.scrollbar,
        rtl = swiper.rtlTranslate,
        progress = swiper.progress;
    var dragSize = scrollbar.dragSize,
        trackSize = scrollbar.trackSize,
        $dragEl = scrollbar.$dragEl,
        $el = scrollbar.$el;
    var params = swiper.params.scrollbar;
    var newSize = dragSize;
    var newPos = (trackSize - dragSize) * progress;

    if (rtl) {
      newPos = -newPos;

      if (newPos > 0) {
        newSize = dragSize - newPos;
        newPos = 0;
      } else if (-newPos + dragSize > trackSize) {
        newSize = trackSize + newPos;
      }
    } else if (newPos < 0) {
      newSize = dragSize + newPos;
      newPos = 0;
    } else if (newPos + dragSize > trackSize) {
      newSize = trackSize - newPos;
    }

    if (swiper.isHorizontal()) {
      if (Support.transforms3d) {
        $dragEl.transform("translate3d(".concat(newPos, "px, 0, 0)"));
      } else {
        $dragEl.transform("translateX(".concat(newPos, "px)"));
      }

      $dragEl[0].style.width = "".concat(newSize, "px");
    } else {
      if (Support.transforms3d) {
        $dragEl.transform("translate3d(0px, ".concat(newPos, "px, 0)"));
      } else {
        $dragEl.transform("translateY(".concat(newPos, "px)"));
      }

      $dragEl[0].style.height = "".concat(newSize, "px");
    }

    if (params.hide) {
      clearTimeout(swiper.scrollbar.timeout);
      $el[0].style.opacity = 1;
      swiper.scrollbar.timeout = setTimeout(function () {
        $el[0].style.opacity = 0;
        $el.transition(400);
      }, 1000);
    }
  },
  setTransition: function setTransition(duration) {
    var swiper = this;
    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
    swiper.scrollbar.$dragEl.transition(duration);
  },
  updateSize: function updateSize() {
    var swiper = this;
    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
    var scrollbar = swiper.scrollbar;
    var $dragEl = scrollbar.$dragEl,
        $el = scrollbar.$el;
    $dragEl[0].style.width = '';
    $dragEl[0].style.height = '';
    var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;
    var divider = swiper.size / swiper.virtualSize;
    var moveDivider = divider * (trackSize / swiper.size);
    var dragSize;

    if (swiper.params.scrollbar.dragSize === 'auto') {
      dragSize = trackSize * divider;
    } else {
      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
    }

    if (swiper.isHorizontal()) {
      $dragEl[0].style.width = "".concat(dragSize, "px");
    } else {
      $dragEl[0].style.height = "".concat(dragSize, "px");
    }

    if (divider >= 1) {
      $el[0].style.display = 'none';
    } else {
      $el[0].style.display = '';
    }

    if (swiper.params.scrollbarHide) {
      $el[0].style.opacity = 0;
    }

    Utils.extend(scrollbar, {
      trackSize: trackSize,
      divider: divider,
      moveDivider: moveDivider,
      dragSize: dragSize
    });
    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);
  },
  setDragPosition: function setDragPosition(e) {
    var swiper = this;
    var scrollbar = swiper.scrollbar,
        rtl = swiper.rtlTranslate;
    var $el = scrollbar.$el,
        dragSize = scrollbar.dragSize,
        trackSize = scrollbar.trackSize;
    var pointerPosition;

    if (swiper.isHorizontal()) {
      pointerPosition = e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX || e.clientX;
    } else {
      pointerPosition = e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY || e.clientY;
    }

    var positionRatio;
    positionRatio = (pointerPosition - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - dragSize / 2) / (trackSize - dragSize);
    positionRatio = Math.max(Math.min(positionRatio, 1), 0);

    if (rtl) {
      positionRatio = 1 - positionRatio;
    }

    var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;
    swiper.updateProgress(position);
    swiper.setTranslate(position);
    swiper.updateActiveIndex();
    swiper.updateSlidesClasses();
  },
  onDragStart: function onDragStart(e) {
    var swiper = this;
    var params = swiper.params.scrollbar;
    var scrollbar = swiper.scrollbar,
        $wrapperEl = swiper.$wrapperEl;
    var $el = scrollbar.$el,
        $dragEl = scrollbar.$dragEl;
    swiper.scrollbar.isTouched = true;
    e.preventDefault();
    e.stopPropagation();
    $wrapperEl.transition(100);
    $dragEl.transition(100);
    scrollbar.setDragPosition(e);
    clearTimeout(swiper.scrollbar.dragTimeout);
    $el.transition(0);

    if (params.hide) {
      $el.css('opacity', 1);
    }

    swiper.emit('scrollbarDragStart', e);
  },
  onDragMove: function onDragMove(e) {
    var swiper = this;
    var scrollbar = swiper.scrollbar,
        $wrapperEl = swiper.$wrapperEl;
    var $el = scrollbar.$el,
        $dragEl = scrollbar.$dragEl;
    if (!swiper.scrollbar.isTouched) return;
    if (e.preventDefault) e.preventDefault();else e.returnValue = false;
    scrollbar.setDragPosition(e);
    $wrapperEl.transition(0);
    $el.transition(0);
    $dragEl.transition(0);
    swiper.emit('scrollbarDragMove', e);
  },
  onDragEnd: function onDragEnd(e) {
    var swiper = this;
    var params = swiper.params.scrollbar;
    var scrollbar = swiper.scrollbar;
    var $el = scrollbar.$el;
    if (!swiper.scrollbar.isTouched) return;
    swiper.scrollbar.isTouched = false;

    if (params.hide) {
      clearTimeout(swiper.scrollbar.dragTimeout);
      swiper.scrollbar.dragTimeout = Utils.nextTick(function () {
        $el.css('opacity', 0);
        $el.transition(400);
      }, 1000);
    }

    swiper.emit('scrollbarDragEnd', e);

    if (params.snapOnRelease) {
      swiper.slideToClosest();
    }
  },
  enableDraggable: function enableDraggable() {
    var swiper = this;
    if (!swiper.params.scrollbar.el) return;
    var scrollbar = swiper.scrollbar,
        touchEvents = swiper.touchEvents,
        touchEventsDesktop = swiper.touchEventsDesktop,
        params = swiper.params;
    var $el = scrollbar.$el;
    var target = $el[0];
    var activeListener = Support.passiveListener && params.passiveListeners ? {
      passive: false,
      capture: false
    } : false;
    var passiveListener = Support.passiveListener && params.passiveListeners ? {
      passive: true,
      capture: false
    } : false;

    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);
    } else {
      if (Support.touch) {
        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);
        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);
        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);
      }

      if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);
      }
    }
  },
  disableDraggable: function disableDraggable() {
    var swiper = this;
    if (!swiper.params.scrollbar.el) return;
    var scrollbar = swiper.scrollbar,
        touchEvents = swiper.touchEvents,
        touchEventsDesktop = swiper.touchEventsDesktop,
        params = swiper.params;
    var $el = scrollbar.$el;
    var target = $el[0];
    var activeListener = Support.passiveListener && params.passiveListeners ? {
      passive: false,
      capture: false
    } : false;
    var passiveListener = Support.passiveListener && params.passiveListeners ? {
      passive: true,
      capture: false
    } : false;

    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);
    } else {
      if (Support.touch) {
        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);
        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);
        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);
      }

      if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);
        ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);
      }
    }
  },
  init: function init() {
    var swiper = this;
    if (!swiper.params.scrollbar.el) return;
    var scrollbar = swiper.scrollbar,
        $swiperEl = swiper.$el;
    var params = swiper.params.scrollbar;
    var $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(params.el);

    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {
      $el = $swiperEl.find(params.el);
    }

    var $dragEl = $el.find(".".concat(swiper.params.scrollbar.dragClass));

    if ($dragEl.length === 0) {
      $dragEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"".concat(swiper.params.scrollbar.dragClass, "\"></div>"));
      $el.append($dragEl);
    }

    Utils.extend(scrollbar, {
      $el: $el,
      el: $el[0],
      $dragEl: $dragEl,
      dragEl: $dragEl[0]
    });

    if (params.draggable) {
      scrollbar.enableDraggable();
    }
  },
  destroy: function destroy() {
    var swiper = this;
    swiper.scrollbar.disableDraggable();
  }
};
var Scrollbar$1 = {
  name: 'scrollbar',
  params: {
    scrollbar: {
      el: null,
      dragSize: 'auto',
      hide: false,
      draggable: false,
      snapOnRelease: true,
      lockClass: 'swiper-scrollbar-lock',
      dragClass: 'swiper-scrollbar-drag'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      scrollbar: {
        init: Scrollbar.init.bind(swiper),
        destroy: Scrollbar.destroy.bind(swiper),
        updateSize: Scrollbar.updateSize.bind(swiper),
        setTranslate: Scrollbar.setTranslate.bind(swiper),
        setTransition: Scrollbar.setTransition.bind(swiper),
        enableDraggable: Scrollbar.enableDraggable.bind(swiper),
        disableDraggable: Scrollbar.disableDraggable.bind(swiper),
        setDragPosition: Scrollbar.setDragPosition.bind(swiper),
        onDragStart: Scrollbar.onDragStart.bind(swiper),
        onDragMove: Scrollbar.onDragMove.bind(swiper),
        onDragEnd: Scrollbar.onDragEnd.bind(swiper),
        isTouched: false,
        timeout: null,
        dragTimeout: null
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;
      swiper.scrollbar.init();
      swiper.scrollbar.updateSize();
      swiper.scrollbar.setTranslate();
    },
    update: function update() {
      var swiper = this;
      swiper.scrollbar.updateSize();
    },
    resize: function resize() {
      var swiper = this;
      swiper.scrollbar.updateSize();
    },
    observerUpdate: function observerUpdate() {
      var swiper = this;
      swiper.scrollbar.updateSize();
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      swiper.scrollbar.setTranslate();
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      swiper.scrollbar.setTransition(duration);
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.scrollbar.destroy();
    }
  }
};
var Parallax = {
  setTransform: function setTransform(el, progress) {
    var swiper = this;
    var rtl = swiper.rtl;
    var $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(el);
    var rtlFactor = rtl ? -1 : 1;
    var p = $el.attr('data-swiper-parallax') || '0';
    var x = $el.attr('data-swiper-parallax-x');
    var y = $el.attr('data-swiper-parallax-y');
    var scale = $el.attr('data-swiper-parallax-scale');
    var opacity = $el.attr('data-swiper-parallax-opacity');

    if (x || y) {
      x = x || '0';
      y = y || '0';
    } else if (swiper.isHorizontal()) {
      x = p;
      y = '0';
    } else {
      y = p;
      x = '0';
    }

    if (x.indexOf('%') >= 0) {
      x = "".concat(parseInt(x, 10) * progress * rtlFactor, "%");
    } else {
      x = "".concat(x * progress * rtlFactor, "px");
    }

    if (y.indexOf('%') >= 0) {
      y = "".concat(parseInt(y, 10) * progress, "%");
    } else {
      y = "".concat(y * progress, "px");
    }

    if (typeof opacity !== 'undefined' && opacity !== null) {
      var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));
      $el[0].style.opacity = currentOpacity;
    }

    if (typeof scale === 'undefined' || scale === null) {
      $el.transform("translate3d(".concat(x, ", ").concat(y, ", 0px)"));
    } else {
      var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));
      $el.transform("translate3d(".concat(x, ", ").concat(y, ", 0px) scale(").concat(currentScale, ")"));
    }
  },
  setTranslate: function setTranslate() {
    var swiper = this;
    var $el = swiper.$el,
        slides = swiper.slides,
        progress = swiper.progress,
        snapGrid = swiper.snapGrid;
    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function (index$$1, el) {
      swiper.parallax.setTransform(el, progress);
    });
    slides.each(function (slideIndex, slideEl) {
      var slideProgress = slideEl.progress;

      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {
        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);
      }

      slideProgress = Math.min(Math.max(slideProgress, -1), 1);
      Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function (index$$1, el) {
        swiper.parallax.setTransform(el, slideProgress);
      });
    });
  },
  setTransition: function setTransition() {
    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
    var swiper = this;
    var $el = swiper.$el;
    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function (index$$1, parallaxEl) {
      var $parallaxEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(parallaxEl);
      var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;
      if (duration === 0) parallaxDuration = 0;
      $parallaxEl.transition(parallaxDuration);
    });
  }
};
var Parallax$1 = {
  name: 'parallax',
  params: {
    parallax: {
      enabled: false
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      parallax: {
        setTransform: Parallax.setTransform.bind(swiper),
        setTranslate: Parallax.setTranslate.bind(swiper),
        setTransition: Parallax.setTransition.bind(swiper)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;
      if (!swiper.params.parallax.enabled) return;
      swiper.params.watchSlidesProgress = true;
      swiper.originalParams.watchSlidesProgress = true;
    },
    init: function init() {
      var swiper = this;
      if (!swiper.params.parallax) return;
      swiper.parallax.setTranslate();
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      if (!swiper.params.parallax) return;
      swiper.parallax.setTranslate();
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      if (!swiper.params.parallax) return;
      swiper.parallax.setTransition(duration);
    }
  }
};
var Zoom = {
  // Calc Scale From Multi-touches
  getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
    if (e.targetTouches.length < 2) return 1;
    var x1 = e.targetTouches[0].pageX;
    var y1 = e.targetTouches[0].pageY;
    var x2 = e.targetTouches[1].pageX;
    var y2 = e.targetTouches[1].pageY;
    var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
    return distance;
  },
  // Events
  onGestureStart: function onGestureStart(e) {
    var swiper = this;
    var params = swiper.params.zoom;
    var zoom = swiper.zoom;
    var gesture = zoom.gesture;
    zoom.fakeGestureTouched = false;
    zoom.fakeGestureMoved = false;

    if (!Support.gestures) {
      if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {
        return;
      }

      zoom.fakeGestureTouched = true;
      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);
    }

    if (!gesture.$slideEl || !gesture.$slideEl.length) {
      gesture.$slideEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target).closest('.swiper-slide');
      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
      gesture.$imageWrapEl = gesture.$imageEl.parent(".".concat(params.containerClass));
      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

      if (gesture.$imageWrapEl.length === 0) {
        gesture.$imageEl = undefined;
        return;
      }
    }

    gesture.$imageEl.transition(0);
    swiper.zoom.isScaling = true;
  },
  onGestureChange: function onGestureChange(e) {
    var swiper = this;
    var params = swiper.params.zoom;
    var zoom = swiper.zoom;
    var gesture = zoom.gesture;

    if (!Support.gestures) {
      if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {
        return;
      }

      zoom.fakeGestureMoved = true;
      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);
    }

    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;

    if (Support.gestures) {
      swiper.zoom.scale = e.scale * zoom.currentScale;
    } else {
      zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;
    }

    if (zoom.scale > gesture.maxRatio) {
      zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);
    }

    if (zoom.scale < params.minRatio) {
      zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);
    }

    gesture.$imageEl.transform("translate3d(0,0,0) scale(".concat(zoom.scale, ")"));
  },
  onGestureEnd: function onGestureEnd(e) {
    var swiper = this;
    var params = swiper.params.zoom;
    var zoom = swiper.zoom;
    var gesture = zoom.gesture;

    if (!Support.gestures) {
      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {
        return;
      }

      if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android) {
        return;
      }

      zoom.fakeGestureTouched = false;
      zoom.fakeGestureMoved = false;
    }

    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);
    gesture.$imageEl.transition(swiper.params.speed).transform("translate3d(0,0,0) scale(".concat(zoom.scale, ")"));
    zoom.currentScale = zoom.scale;
    zoom.isScaling = false;
    if (zoom.scale === 1) gesture.$slideEl = undefined;
  },
  onTouchStart: function onTouchStart(e) {
    var swiper = this;
    var zoom = swiper.zoom;
    var gesture = zoom.gesture,
        image = zoom.image;
    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
    if (image.isTouched) return;
    if (Device.android) e.preventDefault();
    image.isTouched = true;
    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
  },
  onTouchMove: function onTouchMove(e) {
    var swiper = this;
    var zoom = swiper.zoom;
    var gesture = zoom.gesture,
        image = zoom.image,
        velocity = zoom.velocity;
    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
    swiper.allowClick = false;
    if (!image.isTouched || !gesture.$slideEl) return;

    if (!image.isMoved) {
      image.width = gesture.$imageEl[0].offsetWidth;
      image.height = gesture.$imageEl[0].offsetHeight;
      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;
      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;
      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;
      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;
      gesture.$imageWrapEl.transition(0);

      if (swiper.rtl) {
        image.startX = -image.startX;
        image.startY = -image.startY;
      }
    } // Define if we need image drag


    var scaledWidth = image.width * zoom.scale;
    var scaledHeight = image.height * zoom.scale;
    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;
    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
    image.maxX = -image.minX;
    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
    image.maxY = -image.minY;
    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

    if (!image.isMoved && !zoom.isScaling) {
      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {
        image.isTouched = false;
        return;
      }

      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {
        image.isTouched = false;
        return;
      }
    }

    e.preventDefault();
    e.stopPropagation();
    image.isMoved = true;
    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;
    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;

    if (image.currentX < image.minX) {
      image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);
    }

    if (image.currentX > image.maxX) {
      image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);
    }

    if (image.currentY < image.minY) {
      image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);
    }

    if (image.currentY > image.maxY) {
      image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);
    } // Velocity


    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;
    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;
    if (!velocity.prevTime) velocity.prevTime = Date.now();
    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;
    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;
    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;
    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;
    velocity.prevPositionX = image.touchesCurrent.x;
    velocity.prevPositionY = image.touchesCurrent.y;
    velocity.prevTime = Date.now();
    gesture.$imageWrapEl.transform("translate3d(".concat(image.currentX, "px, ").concat(image.currentY, "px,0)"));
  },
  onTouchEnd: function onTouchEnd() {
    var swiper = this;
    var zoom = swiper.zoom;
    var gesture = zoom.gesture,
        image = zoom.image,
        velocity = zoom.velocity;
    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;

    if (!image.isTouched || !image.isMoved) {
      image.isTouched = false;
      image.isMoved = false;
      return;
    }

    image.isTouched = false;
    image.isMoved = false;
    var momentumDurationX = 300;
    var momentumDurationY = 300;
    var momentumDistanceX = velocity.x * momentumDurationX;
    var newPositionX = image.currentX + momentumDistanceX;
    var momentumDistanceY = velocity.y * momentumDurationY;
    var newPositionY = image.currentY + momentumDistanceY; // Fix duration

    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);
    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);
    var momentumDuration = Math.max(momentumDurationX, momentumDurationY);
    image.currentX = newPositionX;
    image.currentY = newPositionY; // Define if we need image drag

    var scaledWidth = image.width * zoom.scale;
    var scaledHeight = image.height * zoom.scale;
    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
    image.maxX = -image.minX;
    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
    image.maxY = -image.minY;
    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);
    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);
    gesture.$imageWrapEl.transition(momentumDuration).transform("translate3d(".concat(image.currentX, "px, ").concat(image.currentY, "px,0)"));
  },
  onTransitionEnd: function onTransitionEnd() {
    var swiper = this;
    var zoom = swiper.zoom;
    var gesture = zoom.gesture;

    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {
      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');
      gesture.$imageWrapEl.transform('translate3d(0,0,0)');
      gesture.$slideEl = undefined;
      gesture.$imageEl = undefined;
      gesture.$imageWrapEl = undefined;
      zoom.scale = 1;
      zoom.currentScale = 1;
    }
  },
  // Toggle Zoom
  toggle: function toggle(e) {
    var swiper = this;
    var zoom = swiper.zoom;

    if (zoom.scale && zoom.scale !== 1) {
      // Zoom Out
      zoom.out();
    } else {
      // Zoom In
      zoom.in(e);
    }
  },
  in: function _in(e) {
    var swiper = this;
    var zoom = swiper.zoom;
    var params = swiper.params.zoom;
    var gesture = zoom.gesture,
        image = zoom.image;

    if (!gesture.$slideEl) {
      gesture.$slideEl = swiper.clickedSlide ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
      gesture.$imageWrapEl = gesture.$imageEl.parent(".".concat(params.containerClass));
    }

    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
    gesture.$slideEl.addClass("".concat(params.zoomedSlideClass));
    var touchX;
    var touchY;
    var offsetX;
    var offsetY;
    var diffX;
    var diffY;
    var translateX;
    var translateY;
    var imageWidth;
    var imageHeight;
    var scaledWidth;
    var scaledHeight;
    var translateMinX;
    var translateMinY;
    var translateMaxX;
    var translateMaxY;
    var slideWidth;
    var slideHeight;

    if (typeof image.touchesStart.x === 'undefined' && e) {
      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;
      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;
    } else {
      touchX = image.touchesStart.x;
      touchY = image.touchesStart.y;
    }

    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;
    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

    if (e) {
      slideWidth = gesture.$slideEl[0].offsetWidth;
      slideHeight = gesture.$slideEl[0].offsetHeight;
      offsetX = gesture.$slideEl.offset().left;
      offsetY = gesture.$slideEl.offset().top;
      diffX = offsetX + slideWidth / 2 - touchX;
      diffY = offsetY + slideHeight / 2 - touchY;
      imageWidth = gesture.$imageEl[0].offsetWidth;
      imageHeight = gesture.$imageEl[0].offsetHeight;
      scaledWidth = imageWidth * zoom.scale;
      scaledHeight = imageHeight * zoom.scale;
      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
      translateMaxX = -translateMinX;
      translateMaxY = -translateMinY;
      translateX = diffX * zoom.scale;
      translateY = diffY * zoom.scale;

      if (translateX < translateMinX) {
        translateX = translateMinX;
      }

      if (translateX > translateMaxX) {
        translateX = translateMaxX;
      }

      if (translateY < translateMinY) {
        translateY = translateMinY;
      }

      if (translateY > translateMaxY) {
        translateY = translateMaxY;
      }
    } else {
      translateX = 0;
      translateY = 0;
    }

    gesture.$imageWrapEl.transition(300).transform("translate3d(".concat(translateX, "px, ").concat(translateY, "px,0)"));
    gesture.$imageEl.transition(300).transform("translate3d(0,0,0) scale(".concat(zoom.scale, ")"));
  },
  out: function out() {
    var swiper = this;
    var zoom = swiper.zoom;
    var params = swiper.params.zoom;
    var gesture = zoom.gesture;

    if (!gesture.$slideEl) {
      gesture.$slideEl = swiper.clickedSlide ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
      gesture.$imageWrapEl = gesture.$imageEl.parent(".".concat(params.containerClass));
    }

    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
    zoom.scale = 1;
    zoom.currentScale = 1;
    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');
    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');
    gesture.$slideEl.removeClass("".concat(params.zoomedSlideClass));
    gesture.$slideEl = undefined;
  },
  // Attach/Detach Events
  enable: function enable() {
    var swiper = this;
    var zoom = swiper.zoom;
    if (zoom.enabled) return;
    zoom.enabled = true;
    var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {
      passive: true,
      capture: false
    } : false; // Scale image

    if (Support.gestures) {
      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);
      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);
      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);
    } else if (swiper.touchEvents.start === 'touchstart') {
      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);
      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);
      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);
    } // Move image


    swiper.$wrapperEl.on(swiper.touchEvents.move, ".".concat(swiper.params.zoom.containerClass), zoom.onTouchMove);
  },
  disable: function disable() {
    var swiper = this;
    var zoom = swiper.zoom;
    if (!zoom.enabled) return;
    swiper.zoom.enabled = false;
    var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {
      passive: true,
      capture: false
    } : false; // Scale image

    if (Support.gestures) {
      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);
      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);
      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);
    } else if (swiper.touchEvents.start === 'touchstart') {
      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);
      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);
      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);
    } // Move image


    swiper.$wrapperEl.off(swiper.touchEvents.move, ".".concat(swiper.params.zoom.containerClass), zoom.onTouchMove);
  }
};
var Zoom$1 = {
  name: 'zoom',
  params: {
    zoom: {
      enabled: false,
      maxRatio: 3,
      minRatio: 1,
      toggle: true,
      containerClass: 'swiper-zoom-container',
      zoomedSlideClass: 'swiper-slide-zoomed'
    }
  },
  create: function create() {
    var swiper = this;
    var zoom = {
      enabled: false,
      scale: 1,
      currentScale: 1,
      isScaling: false,
      gesture: {
        $slideEl: undefined,
        slideWidth: undefined,
        slideHeight: undefined,
        $imageEl: undefined,
        $imageWrapEl: undefined,
        maxRatio: 3
      },
      image: {
        isTouched: undefined,
        isMoved: undefined,
        currentX: undefined,
        currentY: undefined,
        minX: undefined,
        minY: undefined,
        maxX: undefined,
        maxY: undefined,
        width: undefined,
        height: undefined,
        startX: undefined,
        startY: undefined,
        touchesStart: {},
        touchesCurrent: {}
      },
      velocity: {
        x: undefined,
        y: undefined,
        prevPositionX: undefined,
        prevPositionY: undefined,
        prevTime: undefined
      }
    };
    'onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out'.split(' ').forEach(function (methodName) {
      zoom[methodName] = Zoom[methodName].bind(swiper);
    });
    Utils.extend(swiper, {
      zoom: zoom
    });
  },
  on: {
    init: function init() {
      var swiper = this;

      if (swiper.params.zoom.enabled) {
        swiper.zoom.enable();
      }
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.zoom.disable();
    },
    touchStart: function touchStart(e) {
      var swiper = this;
      if (!swiper.zoom.enabled) return;
      swiper.zoom.onTouchStart(e);
    },
    touchEnd: function touchEnd(e) {
      var swiper = this;
      if (!swiper.zoom.enabled) return;
      swiper.zoom.onTouchEnd(e);
    },
    doubleTap: function doubleTap(e) {
      var swiper = this;

      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {
        swiper.zoom.toggle(e);
      }
    },
    transitionEnd: function transitionEnd() {
      var swiper = this;

      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
        swiper.zoom.onTransitionEnd();
      }
    }
  }
};
var Lazy = {
  loadInSlide: function loadInSlide(index$$1) {
    var loadInDuplicate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var swiper = this;
    var params = swiper.params.lazy;
    if (typeof index$$1 === 'undefined') return;
    if (swiper.slides.length === 0) return;
    var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
    var $slideEl = isVirtual ? swiper.$wrapperEl.children(".".concat(swiper.params.slideClass, "[data-swiper-slide-index=\"").concat(index$$1, "\"]")) : swiper.slides.eq(index$$1);
    var $images = $slideEl.find(".".concat(params.elementClass, ":not(.").concat(params.loadedClass, "):not(.").concat(params.loadingClass, ")"));

    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {
      $images = $images.add($slideEl[0]);
    }

    if ($images.length === 0) return;
    $images.each(function (imageIndex, imageEl) {
      var $imageEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(imageEl);
      $imageEl.addClass(params.loadingClass);
      var background = $imageEl.attr('data-background');
      var src = $imageEl.attr('data-src');
      var srcset = $imageEl.attr('data-srcset');
      var sizes = $imageEl.attr('data-sizes');
      swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {
        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;

        if (background) {
          $imageEl.css('background-image', "url(\"".concat(background, "\")"));
          $imageEl.removeAttr('data-background');
        } else {
          if (srcset) {
            $imageEl.attr('srcset', srcset);
            $imageEl.removeAttr('data-srcset');
          }

          if (sizes) {
            $imageEl.attr('sizes', sizes);
            $imageEl.removeAttr('data-sizes');
          }

          if (src) {
            $imageEl.attr('src', src);
            $imageEl.removeAttr('data-src');
          }
        }

        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
        $slideEl.find(".".concat(params.preloaderClass)).remove();

        if (swiper.params.loop && loadInDuplicate) {
          var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');

          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
            var originalSlide = swiper.$wrapperEl.children("[data-swiper-slide-index=\"".concat(slideOriginalIndex, "\"]:not(.").concat(swiper.params.slideDuplicateClass, ")"));
            swiper.lazy.loadInSlide(originalSlide.index(), false);
          } else {
            var duplicatedSlide = swiper.$wrapperEl.children(".".concat(swiper.params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(slideOriginalIndex, "\"]"));
            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);
          }
        }

        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);
      });
      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);
    });
  },
  load: function load() {
    var swiper = this;
    var $wrapperEl = swiper.$wrapperEl,
        swiperParams = swiper.params,
        slides = swiper.slides,
        activeIndex = swiper.activeIndex;
    var isVirtual = swiper.virtual && swiperParams.virtual.enabled;
    var params = swiperParams.lazy;
    var slidesPerView = swiperParams.slidesPerView;

    if (slidesPerView === 'auto') {
      slidesPerView = 0;
    }

    function slideExist(index$$1) {
      if (isVirtual) {
        if ($wrapperEl.children(".".concat(swiperParams.slideClass, "[data-swiper-slide-index=\"").concat(index$$1, "\"]")).length) {
          return true;
        }
      } else if (slides[index$$1]) return true;

      return false;
    }

    function slideIndex(slideEl) {
      if (isVirtual) {
        return Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(slideEl).attr('data-swiper-slide-index');
      }

      return Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(slideEl).index();
    }

    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;

    if (swiper.params.watchSlidesVisibility) {
      $wrapperEl.children(".".concat(swiperParams.slideVisibleClass)).each(function (elIndex, slideEl) {
        var index$$1 = isVirtual ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(slideEl).attr('data-swiper-slide-index') : Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(slideEl).index();
        swiper.lazy.loadInSlide(index$$1);
      });
    } else if (slidesPerView > 1) {
      for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {
        if (slideExist(i)) swiper.lazy.loadInSlide(i);
      }
    } else {
      swiper.lazy.loadInSlide(activeIndex);
    }

    if (params.loadPrevNext) {
      if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {
        var amount = params.loadPrevNextAmount;
        var spv = slidesPerView;
        var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
        var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides

        for (var _i10 = activeIndex + slidesPerView; _i10 < maxIndex; _i10 += 1) {
          if (slideExist(_i10)) swiper.lazy.loadInSlide(_i10);
        } // Prev Slides


        for (var _i11 = minIndex; _i11 < activeIndex; _i11 += 1) {
          if (slideExist(_i11)) swiper.lazy.loadInSlide(_i11);
        }
      } else {
        var nextSlide = $wrapperEl.children(".".concat(swiperParams.slideNextClass));
        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));
        var prevSlide = $wrapperEl.children(".".concat(swiperParams.slidePrevClass));
        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));
      }
    }
  }
};
var Lazy$1 = {
  name: 'lazy',
  params: {
    lazy: {
      enabled: false,
      loadPrevNext: false,
      loadPrevNextAmount: 1,
      loadOnTransitionStart: false,
      elementClass: 'swiper-lazy',
      loadingClass: 'swiper-lazy-loading',
      loadedClass: 'swiper-lazy-loaded',
      preloaderClass: 'swiper-lazy-preloader'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      lazy: {
        initialImageLoaded: false,
        load: Lazy.load.bind(swiper),
        loadInSlide: Lazy.loadInSlide.bind(swiper)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;

      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {
        swiper.params.preloadImages = false;
      }
    },
    init: function init() {
      var swiper = this;

      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {
        swiper.lazy.load();
      }
    },
    scroll: function scroll() {
      var swiper = this;

      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {
        swiper.lazy.load();
      }
    },
    resize: function resize() {
      var swiper = this;

      if (swiper.params.lazy.enabled) {
        swiper.lazy.load();
      }
    },
    scrollbarDragMove: function scrollbarDragMove() {
      var swiper = this;

      if (swiper.params.lazy.enabled) {
        swiper.lazy.load();
      }
    },
    transitionStart: function transitionStart() {
      var swiper = this;

      if (swiper.params.lazy.enabled) {
        if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {
          swiper.lazy.load();
        }
      }
    },
    transitionEnd: function transitionEnd() {
      var swiper = this;

      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {
        swiper.lazy.load();
      }
    }
  }
};
/* eslint no-bitwise: ["error", { "allow": [">>"] }] */

var Controller = {
  LinearSpline: function LinearSpline(x, y) {
    var binarySearch = function search() {
      var maxIndex;
      var minIndex;
      var guess;
      return function (array, val) {
        minIndex = -1;
        maxIndex = array.length;

        while (maxIndex - minIndex > 1) {
          guess = maxIndex + minIndex >> 1;

          if (array[guess] <= val) {
            minIndex = guess;
          } else {
            maxIndex = guess;
          }
        }

        return maxIndex;
      };
    }();

    this.x = x;
    this.y = y;
    this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:
    // (x1,y1) is the known point before given value,
    // (x3,y3) is the known point after given value.

    var i1;
    var i3;

    this.interpolate = function interpolate(x2) {
      if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):

      i3 = binarySearch(this.x, x2);
      i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:
      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1

      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];
    };

    return this;
  },
  // xxx: for now i will just save one spline function to to
  getInterpolateFunction: function getInterpolateFunction(c) {
    var swiper = this;

    if (!swiper.controller.spline) {
      swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);
    }
  },
  setTranslate: function setTranslate(_setTranslate, byController) {
    var swiper = this;
    var controlled = swiper.controller.control;
    var multiplier;
    var controlledTranslate;

    function setControlledTranslate(c) {
      // this will create an Interpolate function based on the snapGrids
      // x is the Grid of the scrolled scroller and y will be the controlled scroller
      // it makes sense to create this only once and recall it for the interpolation
      // the function does a lot of value caching for performance
      var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;

      if (swiper.params.controller.by === 'slide') {
        swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
        // but it did not work out

        controlledTranslate = -swiper.controller.spline.interpolate(-translate);
      }

      if (!controlledTranslate || swiper.params.controller.by === 'container') {
        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());
        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();
      }

      if (swiper.params.controller.inverse) {
        controlledTranslate = c.maxTranslate() - controlledTranslate;
      }

      c.updateProgress(controlledTranslate);
      c.setTranslate(controlledTranslate, swiper);
      c.updateActiveIndex();
      c.updateSlidesClasses();
    }

    if (Array.isArray(controlled)) {
      for (var i = 0; i < controlled.length; i += 1) {
        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
          setControlledTranslate(controlled[i]);
        }
      }
    } else if (controlled instanceof Swiper && byController !== controlled) {
      setControlledTranslate(controlled);
    }
  },
  setTransition: function setTransition(duration, byController) {
    var swiper = this;
    var controlled = swiper.controller.control;
    var i;

    function setControlledTransition(c) {
      c.setTransition(duration, swiper);

      if (duration !== 0) {
        c.transitionStart();

        if (c.params.autoHeight) {
          Utils.nextTick(function () {
            c.updateAutoHeight();
          });
        }

        c.$wrapperEl.transitionEnd(function () {
          if (!controlled) return;

          if (c.params.loop && swiper.params.controller.by === 'slide') {
            c.loopFix();
          }

          c.transitionEnd();
        });
      }
    }

    if (Array.isArray(controlled)) {
      for (i = 0; i < controlled.length; i += 1) {
        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
          setControlledTransition(controlled[i]);
        }
      }
    } else if (controlled instanceof Swiper && byController !== controlled) {
      setControlledTransition(controlled);
    }
  }
};
var Controller$1 = {
  name: 'controller',
  params: {
    controller: {
      control: undefined,
      inverse: false,
      by: 'slide' // or 'container'

    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      controller: {
        control: swiper.params.controller.control,
        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),
        setTranslate: Controller.setTranslate.bind(swiper),
        setTransition: Controller.setTransition.bind(swiper)
      }
    });
  },
  on: {
    update: function update() {
      var swiper = this;
      if (!swiper.controller.control) return;

      if (swiper.controller.spline) {
        swiper.controller.spline = undefined;
        delete swiper.controller.spline;
      }
    },
    resize: function resize() {
      var swiper = this;
      if (!swiper.controller.control) return;

      if (swiper.controller.spline) {
        swiper.controller.spline = undefined;
        delete swiper.controller.spline;
      }
    },
    observerUpdate: function observerUpdate() {
      var swiper = this;
      if (!swiper.controller.control) return;

      if (swiper.controller.spline) {
        swiper.controller.spline = undefined;
        delete swiper.controller.spline;
      }
    },
    setTranslate: function setTranslate(translate, byController) {
      var swiper = this;
      if (!swiper.controller.control) return;
      swiper.controller.setTranslate(translate, byController);
    },
    setTransition: function setTransition(duration, byController) {
      var swiper = this;
      if (!swiper.controller.control) return;
      swiper.controller.setTransition(duration, byController);
    }
  }
};
var a11y = {
  makeElFocusable: function makeElFocusable($el) {
    $el.attr('tabIndex', '0');
    return $el;
  },
  addElRole: function addElRole($el, role) {
    $el.attr('role', role);
    return $el;
  },
  addElLabel: function addElLabel($el, label) {
    $el.attr('aria-label', label);
    return $el;
  },
  disableEl: function disableEl($el) {
    $el.attr('aria-disabled', true);
    return $el;
  },
  enableEl: function enableEl($el) {
    $el.attr('aria-disabled', false);
    return $el;
  },
  onEnterKey: function onEnterKey(e) {
    var swiper = this;
    var params = swiper.params.a11y;
    if (e.keyCode !== 13) return;
    var $targetEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(e.target);

    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {
      if (!(swiper.isEnd && !swiper.params.loop)) {
        swiper.slideNext();
      }

      if (swiper.isEnd) {
        swiper.a11y.notify(params.lastSlideMessage);
      } else {
        swiper.a11y.notify(params.nextSlideMessage);
      }
    }

    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {
      if (!(swiper.isBeginning && !swiper.params.loop)) {
        swiper.slidePrev();
      }

      if (swiper.isBeginning) {
        swiper.a11y.notify(params.firstSlideMessage);
      } else {
        swiper.a11y.notify(params.prevSlideMessage);
      }
    }

    if (swiper.pagination && $targetEl.is(".".concat(swiper.params.pagination.bulletClass))) {
      $targetEl[0].click();
    }
  },
  notify: function notify(message) {
    var swiper = this;
    var notification = swiper.a11y.liveRegion;
    if (notification.length === 0) return;
    notification.html('');
    notification.html(message);
  },
  updateNavigation: function updateNavigation() {
    var swiper = this;
    if (swiper.params.loop) return;
    var _swiper$navigation4 = swiper.navigation,
        $nextEl = _swiper$navigation4.$nextEl,
        $prevEl = _swiper$navigation4.$prevEl;

    if ($prevEl && $prevEl.length > 0) {
      if (swiper.isBeginning) {
        swiper.a11y.disableEl($prevEl);
      } else {
        swiper.a11y.enableEl($prevEl);
      }
    }

    if ($nextEl && $nextEl.length > 0) {
      if (swiper.isEnd) {
        swiper.a11y.disableEl($nextEl);
      } else {
        swiper.a11y.enableEl($nextEl);
      }
    }
  },
  updatePagination: function updatePagination() {
    var swiper = this;
    var params = swiper.params.a11y;

    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
      swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {
        var $bulletEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(bulletEl);
        swiper.a11y.makeElFocusable($bulletEl);
        swiper.a11y.addElRole($bulletEl, 'button');
        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));
      });
    }
  },
  init: function init() {
    var swiper = this;
    swiper.$el.append(swiper.a11y.liveRegion); // Navigation

    var params = swiper.params.a11y;
    var $nextEl;
    var $prevEl;

    if (swiper.navigation && swiper.navigation.$nextEl) {
      $nextEl = swiper.navigation.$nextEl;
    }

    if (swiper.navigation && swiper.navigation.$prevEl) {
      $prevEl = swiper.navigation.$prevEl;
    }

    if ($nextEl) {
      swiper.a11y.makeElFocusable($nextEl);
      swiper.a11y.addElRole($nextEl, 'button');
      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);
      $nextEl.on('keydown', swiper.a11y.onEnterKey);
    }

    if ($prevEl) {
      swiper.a11y.makeElFocusable($prevEl);
      swiper.a11y.addElRole($prevEl, 'button');
      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);
      $prevEl.on('keydown', swiper.a11y.onEnterKey);
    } // Pagination


    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
      swiper.pagination.$el.on('keydown', ".".concat(swiper.params.pagination.bulletClass), swiper.a11y.onEnterKey);
    }
  },
  destroy: function destroy() {
    var swiper = this;
    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();
    var $nextEl;
    var $prevEl;

    if (swiper.navigation && swiper.navigation.$nextEl) {
      $nextEl = swiper.navigation.$nextEl;
    }

    if (swiper.navigation && swiper.navigation.$prevEl) {
      $prevEl = swiper.navigation.$prevEl;
    }

    if ($nextEl) {
      $nextEl.off('keydown', swiper.a11y.onEnterKey);
    }

    if ($prevEl) {
      $prevEl.off('keydown', swiper.a11y.onEnterKey);
    } // Pagination


    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
      swiper.pagination.$el.off('keydown', ".".concat(swiper.params.pagination.bulletClass), swiper.a11y.onEnterKey);
    }
  }
};
var A11y = {
  name: 'a11y',
  params: {
    a11y: {
      enabled: true,
      notificationClass: 'swiper-notification',
      prevSlideMessage: 'Previous slide',
      nextSlideMessage: 'Next slide',
      firstSlideMessage: 'This is the first slide',
      lastSlideMessage: 'This is the last slide',
      paginationBulletMessage: 'Go to slide {{index}}'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      a11y: {
        liveRegion: Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<span class=\"".concat(swiper.params.a11y.notificationClass, "\" aria-live=\"assertive\" aria-atomic=\"true\"></span>"))
      }
    });
    Object.keys(a11y).forEach(function (methodName) {
      swiper.a11y[methodName] = a11y[methodName].bind(swiper);
    });
  },
  on: {
    init: function init() {
      var swiper = this;
      if (!swiper.params.a11y.enabled) return;
      swiper.a11y.init();
      swiper.a11y.updateNavigation();
    },
    toEdge: function toEdge() {
      var swiper = this;
      if (!swiper.params.a11y.enabled) return;
      swiper.a11y.updateNavigation();
    },
    fromEdge: function fromEdge() {
      var swiper = this;
      if (!swiper.params.a11y.enabled) return;
      swiper.a11y.updateNavigation();
    },
    paginationUpdate: function paginationUpdate() {
      var swiper = this;
      if (!swiper.params.a11y.enabled) return;
      swiper.a11y.updatePagination();
    },
    destroy: function destroy() {
      var swiper = this;
      if (!swiper.params.a11y.enabled) return;
      swiper.a11y.destroy();
    }
  }
};
var History = {
  init: function init() {
    var swiper = this;
    if (!swiper.params.history) return;

    if (!ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history || !ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history.pushState) {
      swiper.params.history.enabled = false;
      swiper.params.hashNavigation.enabled = true;
      return;
    }

    var history = swiper.history;
    history.initialized = true;
    history.paths = History.getPathValues();
    if (!history.paths.key && !history.paths.value) return;
    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);

    if (!swiper.params.history.replaceState) {
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].addEventListener('popstate', swiper.history.setHistoryPopState);
    }
  },
  destroy: function destroy() {
    var swiper = this;

    if (!swiper.params.history.replaceState) {
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].removeEventListener('popstate', swiper.history.setHistoryPopState);
    }
  },
  setHistoryPopState: function setHistoryPopState() {
    var swiper = this;
    swiper.history.paths = History.getPathValues();
    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);
  },
  getPathValues: function getPathValues() {
    var pathArray = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].location.pathname.slice(1).split('/').filter(function (part) {
      return part !== '';
    });
    var total = pathArray.length;
    var key = pathArray[total - 2];
    var value = pathArray[total - 1];
    return {
      key: key,
      value: value
    };
  },
  setHistory: function setHistory(key, index$$1) {
    var swiper = this;
    if (!swiper.history.initialized || !swiper.params.history.enabled) return;
    var slide = swiper.slides.eq(index$$1);
    var value = History.slugify(slide.attr('data-history'));

    if (!ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].location.pathname.includes(key)) {
      value = "".concat(key, "/").concat(value);
    }

    var currentState = ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history.state;

    if (currentState && currentState.value === value) {
      return;
    }

    if (swiper.params.history.replaceState) {
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history.replaceState({
        value: value
      }, null, value);
    } else {
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history.pushState({
        value: value
      }, null, value);
    }
  },
  slugify: function slugify(text$$1) {
    return text$$1.toString().toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');
  },
  scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {
    var swiper = this;

    if (value) {
      for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
        var _slide3 = swiper.slides.eq(i);

        var slideHistory = History.slugify(_slide3.attr('data-history'));

        if (slideHistory === value && !_slide3.hasClass(swiper.params.slideDuplicateClass)) {
          var index$$1 = _slide3.index();

          swiper.slideTo(index$$1, speed, runCallbacks);
        }
      }
    } else {
      swiper.slideTo(0, speed, runCallbacks);
    }
  }
};
var History$1 = {
  name: 'history',
  params: {
    history: {
      enabled: false,
      replaceState: false,
      key: 'slides'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      history: {
        init: History.init.bind(swiper),
        setHistory: History.setHistory.bind(swiper),
        setHistoryPopState: History.setHistoryPopState.bind(swiper),
        scrollToSlide: History.scrollToSlide.bind(swiper),
        destroy: History.destroy.bind(swiper)
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;

      if (swiper.params.history.enabled) {
        swiper.history.init();
      }
    },
    destroy: function destroy() {
      var swiper = this;

      if (swiper.params.history.enabled) {
        swiper.history.destroy();
      }
    },
    transitionEnd: function transitionEnd() {
      var swiper = this;

      if (swiper.history.initialized) {
        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);
      }
    }
  }
};
var HashNavigation = {
  onHashCange: function onHashCange() {
    var swiper = this;
    var newHash = ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].location.hash.replace('#', '');
    var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');

    if (newHash !== activeSlideHash) {
      var newIndex = swiper.$wrapperEl.children(".".concat(swiper.params.slideClass, "[data-hash=\"").concat(newHash, "\"]")).index();
      if (typeof newIndex === 'undefined') return;
      swiper.slideTo(newIndex);
    }
  },
  setHash: function setHash() {
    var swiper = this;
    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;

    if (swiper.params.hashNavigation.replaceState && ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history && ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history.replaceState) {
      ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"].history.replaceState(null, null, "#".concat(swiper.slides.eq(swiper.activeIndex).attr('data-hash')) || '');
    } else {
      var _slide4 = swiper.slides.eq(swiper.activeIndex);

      var hash = _slide4.attr('data-hash') || _slide4.attr('data-history');

      ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].location.hash = hash || '';
    }
  },
  init: function init() {
    var swiper = this;
    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;
    swiper.hashNavigation.initialized = true;
    var hash = ssr_window__WEBPACK_IMPORTED_MODULE_1__["document"].location.hash.replace('#', '');

    if (hash) {
      var speed = 0;

      for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
        var _slide5 = swiper.slides.eq(i);

        var slideHash = _slide5.attr('data-hash') || _slide5.attr('data-history');

        if (slideHash === hash && !_slide5.hasClass(swiper.params.slideDuplicateClass)) {
          var index$$1 = _slide5.index();

          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);
        }
      }
    }

    if (swiper.params.hashNavigation.watchState) {
      Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"]).on('hashchange', swiper.hashNavigation.onHashCange);
    }
  },
  destroy: function destroy() {
    var swiper = this;

    if (swiper.params.hashNavigation.watchState) {
      Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__["window"]).off('hashchange', swiper.hashNavigation.onHashCange);
    }
  }
};
var HashNavigation$1 = {
  name: 'hash-navigation',
  params: {
    hashNavigation: {
      enabled: false,
      replaceState: false,
      watchState: false
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      hashNavigation: {
        initialized: false,
        init: HashNavigation.init.bind(swiper),
        destroy: HashNavigation.destroy.bind(swiper),
        setHash: HashNavigation.setHash.bind(swiper),
        onHashCange: HashNavigation.onHashCange.bind(swiper)
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;

      if (swiper.params.hashNavigation.enabled) {
        swiper.hashNavigation.init();
      }
    },
    destroy: function destroy() {
      var swiper = this;

      if (swiper.params.hashNavigation.enabled) {
        swiper.hashNavigation.destroy();
      }
    },
    transitionEnd: function transitionEnd() {
      var swiper = this;

      if (swiper.hashNavigation.initialized) {
        swiper.hashNavigation.setHash();
      }
    }
  }
};
/* eslint no-underscore-dangle: "off" */

var Autoplay = {
  run: function run() {
    var swiper = this;
    var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);
    var delay = swiper.params.autoplay.delay;

    if ($activeSlideEl.attr('data-swiper-autoplay')) {
      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;
    }

    swiper.autoplay.timeout = Utils.nextTick(function () {
      if (swiper.params.autoplay.reverseDirection) {
        if (swiper.params.loop) {
          swiper.loopFix();
          swiper.slidePrev(swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else if (!swiper.isBeginning) {
          swiper.slidePrev(swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else if (!swiper.params.autoplay.stopOnLastSlide) {
          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else {
          swiper.autoplay.stop();
        }
      } else if (swiper.params.loop) {
        swiper.loopFix();
        swiper.slideNext(swiper.params.speed, true, true);
        swiper.emit('autoplay');
      } else if (!swiper.isEnd) {
        swiper.slideNext(swiper.params.speed, true, true);
        swiper.emit('autoplay');
      } else if (!swiper.params.autoplay.stopOnLastSlide) {
        swiper.slideTo(0, swiper.params.speed, true, true);
        swiper.emit('autoplay');
      } else {
        swiper.autoplay.stop();
      }
    }, delay);
  },
  start: function start() {
    var swiper = this;
    if (typeof swiper.autoplay.timeout !== 'undefined') return false;
    if (swiper.autoplay.running) return false;
    swiper.autoplay.running = true;
    swiper.emit('autoplayStart');
    swiper.autoplay.run();
    return true;
  },
  stop: function stop() {
    var swiper = this;
    if (!swiper.autoplay.running) return false;
    if (typeof swiper.autoplay.timeout === 'undefined') return false;

    if (swiper.autoplay.timeout) {
      clearTimeout(swiper.autoplay.timeout);
      swiper.autoplay.timeout = undefined;
    }

    swiper.autoplay.running = false;
    swiper.emit('autoplayStop');
    return true;
  },
  pause: function pause(speed) {
    var swiper = this;
    if (!swiper.autoplay.running) return;
    if (swiper.autoplay.paused) return;
    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);
    swiper.autoplay.paused = true;

    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
      swiper.autoplay.paused = false;
      swiper.autoplay.run();
    } else {
      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);
      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);
    }
  }
};
var Autoplay$1 = {
  name: 'autoplay',
  params: {
    autoplay: {
      enabled: false,
      delay: 3000,
      waitForTransition: true,
      disableOnInteraction: true,
      stopOnLastSlide: false,
      reverseDirection: false
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      autoplay: {
        running: false,
        paused: false,
        run: Autoplay.run.bind(swiper),
        start: Autoplay.start.bind(swiper),
        stop: Autoplay.stop.bind(swiper),
        pause: Autoplay.pause.bind(swiper),
        onTransitionEnd: function onTransitionEnd(e) {
          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;
          if (e.target !== this) return;
          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);
          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);
          swiper.autoplay.paused = false;

          if (!swiper.autoplay.running) {
            swiper.autoplay.stop();
          } else {
            swiper.autoplay.run();
          }
        }
      }
    });
  },
  on: {
    init: function init() {
      var swiper = this;

      if (swiper.params.autoplay.enabled) {
        swiper.autoplay.start();
      }
    },
    beforeTransitionStart: function beforeTransitionStart(speed, internal) {
      var swiper = this;

      if (swiper.autoplay.running) {
        if (internal || !swiper.params.autoplay.disableOnInteraction) {
          swiper.autoplay.pause(speed);
        } else {
          swiper.autoplay.stop();
        }
      }
    },
    sliderFirstMove: function sliderFirstMove() {
      var swiper = this;

      if (swiper.autoplay.running) {
        if (swiper.params.autoplay.disableOnInteraction) {
          swiper.autoplay.stop();
        } else {
          swiper.autoplay.pause();
        }
      }
    },
    destroy: function destroy() {
      var swiper = this;

      if (swiper.autoplay.running) {
        swiper.autoplay.stop();
      }
    }
  }
};
var Fade = {
  setTranslate: function setTranslate() {
    var swiper = this;
    var slides = swiper.slides;

    for (var i = 0; i < slides.length; i += 1) {
      var $slideEl = swiper.slides.eq(i);
      var offset$$1 = $slideEl[0].swiperSlideOffset;
      var tx = -offset$$1;
      if (!swiper.params.virtualTranslate) tx -= swiper.translate;
      var ty = 0;

      if (!swiper.isHorizontal()) {
        ty = tx;
        tx = 0;
      }

      var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
      $slideEl.css({
        opacity: slideOpacity
      }).transform("translate3d(".concat(tx, "px, ").concat(ty, "px, 0px)"));
    }
  },
  setTransition: function setTransition(duration) {
    var swiper = this;
    var slides = swiper.slides,
        $wrapperEl = swiper.$wrapperEl;
    slides.transition(duration);

    if (swiper.params.virtualTranslate && duration !== 0) {
      var eventTriggered = false;
      slides.transitionEnd(function () {
        if (eventTriggered) return;
        if (!swiper || swiper.destroyed) return;
        eventTriggered = true;
        swiper.animating = false;
        var triggerEvents = ['webkitTransitionEnd', 'transitionend'];

        for (var i = 0; i < triggerEvents.length; i += 1) {
          $wrapperEl.trigger(triggerEvents[i]);
        }
      });
    }
  }
};
var EffectFade = {
  name: 'effect-fade',
  params: {
    fadeEffect: {
      crossFade: false
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      fadeEffect: {
        setTranslate: Fade.setTranslate.bind(swiper),
        setTransition: Fade.setTransition.bind(swiper)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;
      if (swiper.params.effect !== 'fade') return;
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "fade"));
      var overwriteParams = {
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: true,
        spaceBetween: 0,
        virtualTranslate: true
      };
      Utils.extend(swiper.params, overwriteParams);
      Utils.extend(swiper.originalParams, overwriteParams);
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      if (swiper.params.effect !== 'fade') return;
      swiper.fadeEffect.setTranslate();
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      if (swiper.params.effect !== 'fade') return;
      swiper.fadeEffect.setTransition(duration);
    }
  }
};
var Cube = {
  setTranslate: function setTranslate() {
    var swiper = this;
    var $el = swiper.$el,
        $wrapperEl = swiper.$wrapperEl,
        slides = swiper.slides,
        swiperWidth = swiper.width,
        swiperHeight = swiper.height,
        rtl = swiper.rtlTranslate,
        swiperSize = swiper.size;
    var params = swiper.params.cubeEffect;
    var isHorizontal = swiper.isHorizontal();
    var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
    var wrapperRotate = 0;
    var $cubeShadowEl;

    if (params.shadow) {
      if (isHorizontal) {
        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');

        if ($cubeShadowEl.length === 0) {
          $cubeShadowEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])('<div class="swiper-cube-shadow"></div>');
          $wrapperEl.append($cubeShadowEl);
        }

        $cubeShadowEl.css({
          height: "".concat(swiperWidth, "px")
        });
      } else {
        $cubeShadowEl = $el.find('.swiper-cube-shadow');

        if ($cubeShadowEl.length === 0) {
          $cubeShadowEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])('<div class="swiper-cube-shadow"></div>');
          $el.append($cubeShadowEl);
        }
      }
    }

    for (var i = 0; i < slides.length; i += 1) {
      var $slideEl = slides.eq(i);
      var slideIndex = i;

      if (isVirtual) {
        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);
      }

      var slideAngle = slideIndex * 90;
      var round = Math.floor(slideAngle / 360);

      if (rtl) {
        slideAngle = -slideAngle;
        round = Math.floor(-slideAngle / 360);
      }

      var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
      var tx = 0;
      var ty = 0;
      var tz = 0;

      if (slideIndex % 4 === 0) {
        tx = -round * 4 * swiperSize;
        tz = 0;
      } else if ((slideIndex - 1) % 4 === 0) {
        tx = 0;
        tz = -round * 4 * swiperSize;
      } else if ((slideIndex - 2) % 4 === 0) {
        tx = swiperSize + round * 4 * swiperSize;
        tz = swiperSize;
      } else if ((slideIndex - 3) % 4 === 0) {
        tx = -swiperSize;
        tz = 3 * swiperSize + swiperSize * 4 * round;
      }

      if (rtl) {
        tx = -tx;
      }

      if (!isHorizontal) {
        ty = tx;
        tx = 0;
      }

      var transform$$1 = "rotateX(".concat(isHorizontal ? 0 : -slideAngle, "deg) rotateY(").concat(isHorizontal ? slideAngle : 0, "deg) translate3d(").concat(tx, "px, ").concat(ty, "px, ").concat(tz, "px)");

      if (progress <= 1 && progress > -1) {
        wrapperRotate = slideIndex * 90 + progress * 90;
        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;
      }

      $slideEl.transform(transform$$1);

      if (params.slideShadows) {
        // Set shadows
        var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
        var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

        if (shadowBefore.length === 0) {
          shadowBefore = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"swiper-slide-shadow-".concat(isHorizontal ? 'left' : 'top', "\"></div>"));
          $slideEl.append(shadowBefore);
        }

        if (shadowAfter.length === 0) {
          shadowAfter = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"swiper-slide-shadow-".concat(isHorizontal ? 'right' : 'bottom', "\"></div>"));
          $slideEl.append(shadowAfter);
        }

        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
      }
    }

    $wrapperEl.css({
      '-webkit-transform-origin': "50% 50% -".concat(swiperSize / 2, "px"),
      '-moz-transform-origin': "50% 50% -".concat(swiperSize / 2, "px"),
      '-ms-transform-origin': "50% 50% -".concat(swiperSize / 2, "px"),
      'transform-origin': "50% 50% -".concat(swiperSize / 2, "px")
    });

    if (params.shadow) {
      if (isHorizontal) {
        $cubeShadowEl.transform("translate3d(0px, ".concat(swiperWidth / 2 + params.shadowOffset, "px, ").concat(-swiperWidth / 2, "px) rotateX(90deg) rotateZ(0deg) scale(").concat(params.shadowScale, ")"));
      } else {
        var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
        var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
        var scale1 = params.shadowScale;
        var scale2 = params.shadowScale / multiplier;
        var offset$$1 = params.shadowOffset;
        $cubeShadowEl.transform("scale3d(".concat(scale1, ", 1, ").concat(scale2, ") translate3d(0px, ").concat(swiperHeight / 2 + offset$$1, "px, ").concat(-swiperHeight / 2 / scale2, "px) rotateX(-90deg)"));
      }
    }

    var zFactor = Browser.isSafari || Browser.isUiWebView ? -swiperSize / 2 : 0;
    $wrapperEl.transform("translate3d(0px,0,".concat(zFactor, "px) rotateX(").concat(swiper.isHorizontal() ? 0 : wrapperRotate, "deg) rotateY(").concat(swiper.isHorizontal() ? -wrapperRotate : 0, "deg)"));
  },
  setTransition: function setTransition(duration) {
    var swiper = this;
    var $el = swiper.$el,
        slides = swiper.slides;
    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);

    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
      $el.find('.swiper-cube-shadow').transition(duration);
    }
  }
};
var EffectCube = {
  name: 'effect-cube',
  params: {
    cubeEffect: {
      slideShadows: true,
      shadow: true,
      shadowOffset: 20,
      shadowScale: 0.94
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      cubeEffect: {
        setTranslate: Cube.setTranslate.bind(swiper),
        setTransition: Cube.setTransition.bind(swiper)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;
      if (swiper.params.effect !== 'cube') return;
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "cube"));
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "3d"));
      var overwriteParams = {
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: true,
        resistanceRatio: 0,
        spaceBetween: 0,
        centeredSlides: false,
        virtualTranslate: true
      };
      Utils.extend(swiper.params, overwriteParams);
      Utils.extend(swiper.originalParams, overwriteParams);
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      if (swiper.params.effect !== 'cube') return;
      swiper.cubeEffect.setTranslate();
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      if (swiper.params.effect !== 'cube') return;
      swiper.cubeEffect.setTransition(duration);
    }
  }
};
var Flip = {
  setTranslate: function setTranslate() {
    var swiper = this;
    var slides = swiper.slides,
        rtl = swiper.rtlTranslate;

    for (var i = 0; i < slides.length; i += 1) {
      var $slideEl = slides.eq(i);
      var progress = $slideEl[0].progress;

      if (swiper.params.flipEffect.limitRotation) {
        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
      }

      var offset$$1 = $slideEl[0].swiperSlideOffset;
      var rotate = -180 * progress;
      var rotateY = rotate;
      var rotateX = 0;
      var tx = -offset$$1;
      var ty = 0;

      if (!swiper.isHorizontal()) {
        ty = tx;
        tx = 0;
        rotateX = -rotateY;
        rotateY = 0;
      } else if (rtl) {
        rotateY = -rotateY;
      }

      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;

      if (swiper.params.flipEffect.slideShadows) {
        // Set shadows
        var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
        var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

        if (shadowBefore.length === 0) {
          shadowBefore = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"swiper-slide-shadow-".concat(swiper.isHorizontal() ? 'left' : 'top', "\"></div>"));
          $slideEl.append(shadowBefore);
        }

        if (shadowAfter.length === 0) {
          shadowAfter = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"swiper-slide-shadow-".concat(swiper.isHorizontal() ? 'right' : 'bottom', "\"></div>"));
          $slideEl.append(shadowAfter);
        }

        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
      }

      $slideEl.transform("translate3d(".concat(tx, "px, ").concat(ty, "px, 0px) rotateX(").concat(rotateX, "deg) rotateY(").concat(rotateY, "deg)"));
    }
  },
  setTransition: function setTransition(duration) {
    var swiper = this;
    var slides = swiper.slides,
        activeIndex = swiper.activeIndex,
        $wrapperEl = swiper.$wrapperEl;
    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);

    if (swiper.params.virtualTranslate && duration !== 0) {
      var eventTriggered = false; // eslint-disable-next-line

      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {
        if (eventTriggered) return;
        if (!swiper || swiper.destroyed) return; // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;

        eventTriggered = true;
        swiper.animating = false;
        var triggerEvents = ['webkitTransitionEnd', 'transitionend'];

        for (var i = 0; i < triggerEvents.length; i += 1) {
          $wrapperEl.trigger(triggerEvents[i]);
        }
      });
    }
  }
};
var EffectFlip = {
  name: 'effect-flip',
  params: {
    flipEffect: {
      slideShadows: true,
      limitRotation: true
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      flipEffect: {
        setTranslate: Flip.setTranslate.bind(swiper),
        setTransition: Flip.setTransition.bind(swiper)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;
      if (swiper.params.effect !== 'flip') return;
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "flip"));
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "3d"));
      var overwriteParams = {
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: true,
        spaceBetween: 0,
        virtualTranslate: true
      };
      Utils.extend(swiper.params, overwriteParams);
      Utils.extend(swiper.originalParams, overwriteParams);
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      if (swiper.params.effect !== 'flip') return;
      swiper.flipEffect.setTranslate();
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      if (swiper.params.effect !== 'flip') return;
      swiper.flipEffect.setTransition(duration);
    }
  }
};
var Coverflow = {
  setTranslate: function setTranslate() {
    var swiper = this;
    var swiperWidth = swiper.width,
        swiperHeight = swiper.height,
        slides = swiper.slides,
        $wrapperEl = swiper.$wrapperEl,
        slidesSizesGrid = swiper.slidesSizesGrid;
    var params = swiper.params.coverflowEffect;
    var isHorizontal = swiper.isHorizontal();
    var transform$$1 = swiper.translate;
    var center = isHorizontal ? -transform$$1 + swiperWidth / 2 : -transform$$1 + swiperHeight / 2;
    var rotate = isHorizontal ? params.rotate : -params.rotate;
    var translate = params.depth; // Each slide offset from center

    for (var i = 0, length = slides.length; i < length; i += 1) {
      var $slideEl = slides.eq(i);
      var slideSize = slidesSizesGrid[i];
      var slideOffset = $slideEl[0].swiperSlideOffset;
      var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;
      var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
      var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0

      var translateZ = -translate * Math.abs(offsetMultiplier);
      var translateY = isHorizontal ? 0 : params.stretch * offsetMultiplier;
      var translateX = isHorizontal ? params.stretch * offsetMultiplier : 0; // Fix for ultra small values

      if (Math.abs(translateX) < 0.001) translateX = 0;
      if (Math.abs(translateY) < 0.001) translateY = 0;
      if (Math.abs(translateZ) < 0.001) translateZ = 0;
      if (Math.abs(rotateY) < 0.001) rotateY = 0;
      if (Math.abs(rotateX) < 0.001) rotateX = 0;
      var slideTransform = "translate3d(".concat(translateX, "px,").concat(translateY, "px,").concat(translateZ, "px)  rotateX(").concat(rotateX, "deg) rotateY(").concat(rotateY, "deg)");
      $slideEl.transform(slideTransform);
      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;

      if (params.slideShadows) {
        // Set shadows
        var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
        var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

        if ($shadowBeforeEl.length === 0) {
          $shadowBeforeEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"swiper-slide-shadow-".concat(isHorizontal ? 'left' : 'top', "\"></div>"));
          $slideEl.append($shadowBeforeEl);
        }

        if ($shadowAfterEl.length === 0) {
          $shadowAfterEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])("<div class=\"swiper-slide-shadow-".concat(isHorizontal ? 'right' : 'bottom', "\"></div>"));
          $slideEl.append($shadowAfterEl);
        }

        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
      }
    } // Set correct perspective for IE10


    if (Support.pointerEvents || Support.prefixedPointerEvents) {
      var ws = $wrapperEl[0].style;
      ws.perspectiveOrigin = "".concat(center, "px 50%");
    }
  },
  setTransition: function setTransition(duration) {
    var swiper = this;
    swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
  }
};
var EffectCoverflow = {
  name: 'effect-coverflow',
  params: {
    coverflowEffect: {
      rotate: 50,
      stretch: 0,
      depth: 100,
      modifier: 1,
      slideShadows: true
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      coverflowEffect: {
        setTranslate: Coverflow.setTranslate.bind(swiper),
        setTransition: Coverflow.setTransition.bind(swiper)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;
      if (swiper.params.effect !== 'coverflow') return;
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "coverflow"));
      swiper.classNames.push("".concat(swiper.params.containerModifierClass, "3d"));
      swiper.params.watchSlidesProgress = true;
      swiper.originalParams.watchSlidesProgress = true;
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      if (swiper.params.effect !== 'coverflow') return;
      swiper.coverflowEffect.setTranslate();
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      if (swiper.params.effect !== 'coverflow') return;
      swiper.coverflowEffect.setTransition(duration);
    }
  }
};
var Thumbs = {
  init: function init() {
    var swiper = this;
    var thumbsParams = swiper.params.thumbs;
    var SwiperClass = swiper.constructor;

    if (thumbsParams.swiper instanceof SwiperClass) {
      swiper.thumbs.swiper = thumbsParams.swiper;
      Utils.extend(swiper.thumbs.swiper.originalParams, {
        watchSlidesProgress: true,
        slideToClickedSlide: false
      });
      Utils.extend(swiper.thumbs.swiper.params, {
        watchSlidesProgress: true,
        slideToClickedSlide: false
      });
    } else if (Utils.isObject(thumbsParams.swiper)) {
      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {
        watchSlidesVisibility: true,
        watchSlidesProgress: true,
        slideToClickedSlide: false
      }));
      swiper.thumbs.swiperCreated = true;
    }

    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);
    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);
  },
  onThumbClick: function onThumbClick() {
    var swiper = this;
    var thumbsSwiper = swiper.thumbs.swiper;
    if (!thumbsSwiper) return;
    var clickedIndex = thumbsSwiper.clickedIndex;
    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;
    var slideToIndex;

    if (thumbsSwiper.params.loop) {
      slideToIndex = parseInt(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__["$"])(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);
    } else {
      slideToIndex = clickedIndex;
    }

    if (swiper.params.loop) {
      var currentIndex = swiper.activeIndex;

      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {
        swiper.loopFix(); // eslint-disable-next-line

        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
        currentIndex = swiper.activeIndex;
      }

      var prevIndex = swiper.slides.eq(currentIndex).prevAll("[data-swiper-slide-index=\"".concat(slideToIndex, "\"]")).eq(0).index();
      var nextIndex = swiper.slides.eq(currentIndex).nextAll("[data-swiper-slide-index=\"".concat(slideToIndex, "\"]")).eq(0).index();
      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;
    }

    swiper.slideTo(slideToIndex);
  },
  update: function update(initial) {
    var swiper = this;
    var thumbsSwiper = swiper.thumbs.swiper;
    if (!thumbsSwiper) return;
    var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;

    if (swiper.realIndex !== thumbsSwiper.realIndex) {
      var currentThumbsIndex = thumbsSwiper.activeIndex;
      var newThumbsIndex;

      if (thumbsSwiper.params.loop) {
        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {
          thumbsSwiper.loopFix(); // eslint-disable-next-line

          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;
          currentThumbsIndex = thumbsSwiper.activeIndex;
        } // Find actual thumbs index to slide to


        var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll("[data-swiper-slide-index=\"".concat(swiper.realIndex, "\"]")).eq(0).index();
        var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll("[data-swiper-slide-index=\"".concat(swiper.realIndex, "\"]")).eq(0).index();
        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;else newThumbsIndex = prevThumbsIndex;
      } else {
        newThumbsIndex = swiper.realIndex;
      }

      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {
        if (thumbsSwiper.params.centeredSlides) {
          if (newThumbsIndex > currentThumbsIndex) {
            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;
          } else {
            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;
          }
        } else if (newThumbsIndex > currentThumbsIndex) {
          newThumbsIndex = newThumbsIndex - slidesPerView + 1;
        }

        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);
      }
    } // Activate thumbs


    var thumbsToActivate = 1;
    var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;

    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {
      thumbsToActivate = swiper.params.slidesPerView;
    }

    thumbsSwiper.slides.removeClass(thumbActiveClass);

    if (thumbsSwiper.params.loop) {
      for (var i = 0; i < thumbsToActivate; i += 1) {
        thumbsSwiper.$wrapperEl.children("[data-swiper-slide-index=\"".concat(swiper.realIndex + i, "\"]")).addClass(thumbActiveClass);
      }
    } else {
      for (var _i12 = 0; _i12 < thumbsToActivate; _i12 += 1) {
        thumbsSwiper.slides.eq(swiper.realIndex + _i12).addClass(thumbActiveClass);
      }
    }
  }
};
var Thumbs$1 = {
  name: 'thumbs',
  params: {
    thumbs: {
      swiper: null,
      slideThumbActiveClass: 'swiper-slide-thumb-active',
      thumbsContainerClass: 'swiper-container-thumbs'
    }
  },
  create: function create() {
    var swiper = this;
    Utils.extend(swiper, {
      thumbs: {
        swiper: null,
        init: Thumbs.init.bind(swiper),
        update: Thumbs.update.bind(swiper),
        onThumbClick: Thumbs.onThumbClick.bind(swiper)
      }
    });
  },
  on: {
    beforeInit: function beforeInit() {
      var swiper = this;
      var thumbs = swiper.params.thumbs;
      if (!thumbs || !thumbs.swiper) return;
      swiper.thumbs.init();
      swiper.thumbs.update(true);
    },
    slideChange: function slideChange() {
      var swiper = this;
      if (!swiper.thumbs.swiper) return;
      swiper.thumbs.update();
    },
    update: function update() {
      var swiper = this;
      if (!swiper.thumbs.swiper) return;
      swiper.thumbs.update();
    },
    resize: function resize() {
      var swiper = this;
      if (!swiper.thumbs.swiper) return;
      swiper.thumbs.update();
    },
    observerUpdate: function observerUpdate() {
      var swiper = this;
      if (!swiper.thumbs.swiper) return;
      swiper.thumbs.update();
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      var thumbsSwiper = swiper.thumbs.swiper;
      if (!thumbsSwiper) return;
      thumbsSwiper.setTransition(duration);
    },
    beforeDestroy: function beforeDestroy() {
      var swiper = this;
      var thumbsSwiper = swiper.thumbs.swiper;
      if (!thumbsSwiper) return;

      if (swiper.thumbs.swiperCreated && thumbsSwiper) {
        thumbsSwiper.destroy();
      }
    }
  }
}; // Swiper Class

var components = [Device$1, Support$1, Browser$1, Resize, Observer$1, Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];

if (typeof Swiper.use === 'undefined') {
  Swiper.use = Swiper.Class.use;
  Swiper.installModule = Swiper.Class.installModule;
}

Swiper.use(components);
/* harmony default export */ __webpack_exports__["default"] = (Swiper);

/***/ }),
/* 507 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$", function() { return $; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return addClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return removeClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasClass", function() { return hasClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toggleClass", function() { return toggleClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attr", function() { return attr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAttr", function() { return removeAttr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prop", function() { return prop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "data", function() { return data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeData", function() { return removeData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataset", function() { return dataset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "val", function() { return val; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return transform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transition", function() { return transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "on", function() { return on; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "off", function() { return off; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "once", function() { return once; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trigger", function() { return trigger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transitionEnd", function() { return transitionEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationEnd", function() { return animationEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "width", function() { return width; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outerWidth", function() { return outerWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "height", function() { return height; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outerHeight", function() { return outerHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "offset", function() { return offset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hide", function() { return hide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "show", function() { return show; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styles", function() { return styles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "css", function() { return css; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "each", function() { return each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "html", function() { return html; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is", function() { return is; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexOf", function() { return indexOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "index", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eq", function() { return eq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "append", function() { return append; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "appendTo", function() { return appendTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prepend", function() { return prepend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prependTo", function() { return prependTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertBefore", function() { return insertBefore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertAfter", function() { return insertAfter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "next", function() { return next; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nextAll", function() { return nextAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prev", function() { return prev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prevAll", function() { return prevAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siblings", function() { return siblings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parent", function() { return parent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parents", function() { return parents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closest", function() { return closest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "children", function() { return children; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detach", function() { return detach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrollTo", function() { return scrollTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrollTop", function() { return scrollTop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrollLeft", function() { return scrollLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return animate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stop", function() { return stop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "click", function() { return click; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blur", function() { return blur; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "focus", function() { return focus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "focusin", function() { return focusin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "focusout", function() { return focusout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyup", function() { return keyup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keydown", function() { return keydown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keypress", function() { return keypress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "submit", function() { return submit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "change", function() { return change; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mousedown", function() { return mousedown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mousemove", function() { return mousemove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseup", function() { return mouseup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseenter", function() { return mouseenter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseleave", function() { return mouseleave; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseout", function() { return mouseout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mouseover", function() { return mouseover; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchstart", function() { return touchstart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchend", function() { return touchend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touchmove", function() { return touchmove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resize", function() { return resize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scroll", function() { return scroll; });
/* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(508);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Dom7 2.1.2
 * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
 * http://framework7.io/docs/dom.html
 *
 * Copyright 2018, Vladimir Kharlampidi
 * The iDangero.us
 * http://www.idangero.us/
 *
 * Licensed under MIT
 *
 * Released on: September 13, 2018
 */


var Dom7 = function Dom7(arr) {
  _classCallCheck(this, Dom7);

  var self = this; // Create array-like object

  for (var i = 0; i < arr.length; i += 1) {
    self[i] = arr[i];
  }

  self.length = arr.length; // Return collection with methods

  return this;
};

function $(selector, context) {
  var arr = [];
  var i = 0;

  if (selector && !context) {
    if (selector instanceof Dom7) {
      return selector;
    }
  }

  if (selector) {
    // String
    if (typeof selector === 'string') {
      var els;
      var tempParent;

      var _html = selector.trim();

      if (_html.indexOf('<') >= 0 && _html.indexOf('>') >= 0) {
        var toCreate = 'div';
        if (_html.indexOf('<li') === 0) toCreate = 'ul';
        if (_html.indexOf('<tr') === 0) toCreate = 'tbody';
        if (_html.indexOf('<td') === 0 || _html.indexOf('<th') === 0) toCreate = 'tr';
        if (_html.indexOf('<tbody') === 0) toCreate = 'table';
        if (_html.indexOf('<option') === 0) toCreate = 'select';
        tempParent = ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"].createElement(toCreate);
        tempParent.innerHTML = _html;

        for (i = 0; i < tempParent.childNodes.length; i += 1) {
          arr.push(tempParent.childNodes[i]);
        }
      } else {
        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {
          // Pure ID selector
          els = [ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"].getElementById(selector.trim().split('#')[1])];
        } else {
          // Other selectors
          els = (context || ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"]).querySelectorAll(selector.trim());
        }

        for (i = 0; i < els.length; i += 1) {
          if (els[i]) arr.push(els[i]);
        }
      }
    } else if (selector.nodeType || selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"] || selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"]) {
      // Node/element
      arr.push(selector);
    } else if (selector.length > 0 && selector[0].nodeType) {
      // Array of elements or instance of Dom
      for (i = 0; i < selector.length; i += 1) {
        arr.push(selector[i]);
      }
    }
  }

  return new Dom7(arr);
}

$.fn = Dom7.prototype;
$.Class = Dom7;
$.Dom7 = Dom7;

function unique(arr) {
  var uniqueArray = [];

  for (var i = 0; i < arr.length; i += 1) {
    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);
  }

  return uniqueArray;
}

function toCamelCase(string) {
  return string.toLowerCase().replace(/-(.)/g, function (match, group1) {
    return group1.toUpperCase();
  });
}

function requestAnimationFrame(callback) {
  if (ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].requestAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].requestAnimationFrame(callback);else if (ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].webkitRequestAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].webkitRequestAnimationFrame(callback);
  return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].setTimeout(callback, 1000 / 60);
}

function cancelAnimationFrame(id) {
  if (ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].cancelAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].cancelAnimationFrame(id);else if (ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].webkitCancelAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].webkitCancelAnimationFrame(id);
  return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].clearTimeout(id);
} // Classes and attributes


function addClass(className) {
  if (typeof className === 'undefined') {
    return this;
  }

  var classes = className.split(' ');

  for (var i = 0; i < classes.length; i += 1) {
    for (var j = 0; j < this.length; j += 1) {
      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);
    }
  }

  return this;
}

function removeClass(className) {
  var classes = className.split(' ');

  for (var i = 0; i < classes.length; i += 1) {
    for (var j = 0; j < this.length; j += 1) {
      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);
    }
  }

  return this;
}

function hasClass(className) {
  if (!this[0]) return false;
  return this[0].classList.contains(className);
}

function toggleClass(className) {
  var classes = className.split(' ');

  for (var i = 0; i < classes.length; i += 1) {
    for (var j = 0; j < this.length; j += 1) {
      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);
    }
  }

  return this;
}

function attr(attrs, value) {
  if (arguments.length === 1 && typeof attrs === 'string') {
    // Get attr
    if (this[0]) return this[0].getAttribute(attrs);
    return undefined;
  } // Set attrs


  for (var i = 0; i < this.length; i += 1) {
    if (arguments.length === 2) {
      // String
      this[i].setAttribute(attrs, value);
    } else {
      // Object
      // eslint-disable-next-line
      for (var attrName in attrs) {
        this[i][attrName] = attrs[attrName];
        this[i].setAttribute(attrName, attrs[attrName]);
      }
    }
  }

  return this;
} // eslint-disable-next-line


function removeAttr(attr) {
  for (var i = 0; i < this.length; i += 1) {
    this[i].removeAttribute(attr);
  }

  return this;
} // eslint-disable-next-line


function prop(props, value) {
  if (arguments.length === 1 && typeof props === 'string') {
    // Get prop
    if (this[0]) return this[0][props];
  } else {
    // Set props
    for (var i = 0; i < this.length; i += 1) {
      if (arguments.length === 2) {
        // String
        this[i][props] = value;
      } else {
        // Object
        // eslint-disable-next-line
        for (var propName in props) {
          this[i][propName] = props[propName];
        }
      }
    }

    return this;
  }
}

function data(key, value) {
  var el;

  if (typeof value === 'undefined') {
    el = this[0]; // Get value

    if (el) {
      if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {
        return el.dom7ElementDataStorage[key];
      }

      var dataKey = el.getAttribute("data-".concat(key));

      if (dataKey) {
        return dataKey;
      }

      return undefined;
    }

    return undefined;
  } // Set value


  for (var i = 0; i < this.length; i += 1) {
    el = this[i];
    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};
    el.dom7ElementDataStorage[key] = value;
  }

  return this;
}

function removeData(key) {
  for (var i = 0; i < this.length; i += 1) {
    var el = this[i];

    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {
      el.dom7ElementDataStorage[key] = null;
      delete el.dom7ElementDataStorage[key];
    }
  }
}

function dataset() {
  var el = this[0];
  if (!el) return undefined;
  var dataset = {}; // eslint-disable-line

  if (el.dataset) {
    // eslint-disable-next-line
    for (var dataKey in el.dataset) {
      dataset[dataKey] = el.dataset[dataKey];
    }
  } else {
    for (var i = 0; i < el.attributes.length; i += 1) {
      // eslint-disable-next-line
      var _attr = el.attributes[i];

      if (_attr.name.indexOf('data-') >= 0) {
        dataset[toCamelCase(_attr.name.split('data-')[1])] = _attr.value;
      }
    }
  } // eslint-disable-next-line


  for (var key in dataset) {
    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;
  }

  return dataset;
}

function val(value) {
  var dom = this;

  if (typeof value === 'undefined') {
    if (dom[0]) {
      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {
        var values = [];

        for (var i = 0; i < dom[0].selectedOptions.length; i += 1) {
          values.push(dom[0].selectedOptions[i].value);
        }

        return values;
      }

      return dom[0].value;
    }

    return undefined;
  }

  for (var _i = 0; _i < dom.length; _i += 1) {
    var el = dom[_i];

    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {
      for (var j = 0; j < el.options.length; j += 1) {
        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;
      }
    } else {
      el.value = value;
    }
  }

  return dom;
} // Transforms
// eslint-disable-next-line


function transform(transform) {
  for (var i = 0; i < this.length; i += 1) {
    var elStyle = this[i].style;
    elStyle.webkitTransform = transform;
    elStyle.transform = transform;
  }

  return this;
}

function transition(duration) {
  if (typeof duration !== 'string') {
    duration = "".concat(duration, "ms"); // eslint-disable-line
  }

  for (var i = 0; i < this.length; i += 1) {
    var elStyle = this[i].style;
    elStyle.webkitTransitionDuration = duration;
    elStyle.transitionDuration = duration;
  }

  return this;
} // Events


function on() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var eventType = args[0],
      targetSelector = args[1],
      listener = args[2],
      capture = args[3];

  if (typeof args[1] === 'function') {
    eventType = args[0];
    listener = args[1];
    capture = args[2];
    targetSelector = undefined;
  }

  if (!capture) capture = false;

  function handleLiveEvent(e) {
    var target = e.target;
    if (!target) return;
    var eventData = e.target.dom7EventData || [];

    if (eventData.indexOf(e) < 0) {
      eventData.unshift(e);
    }

    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {
      var _parents = $(target).parents(); // eslint-disable-line


      for (var k = 0; k < _parents.length; k += 1) {
        if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);
      }
    }
  }

  function handleEvent(e) {
    var eventData = e && e.target ? e.target.dom7EventData || [] : [];

    if (eventData.indexOf(e) < 0) {
      eventData.unshift(e);
    }

    listener.apply(this, eventData);
  }

  var events = eventType.split(' ');
  var j;

  for (var i = 0; i < this.length; i += 1) {
    var el = this[i];

    if (!targetSelector) {
      for (j = 0; j < events.length; j += 1) {
        var event = events[j];
        if (!el.dom7Listeners) el.dom7Listeners = {};
        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];
        el.dom7Listeners[event].push({
          listener: listener,
          proxyListener: handleEvent
        });
        el.addEventListener(event, handleEvent, capture);
      }
    } else {
      // Live events
      for (j = 0; j < events.length; j += 1) {
        var _event = events[j];
        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};
        if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];

        el.dom7LiveListeners[_event].push({
          listener: listener,
          proxyListener: handleLiveEvent
        });

        el.addEventListener(_event, handleLiveEvent, capture);
      }
    }
  }

  return this;
}

function off() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  var eventType = args[0],
      targetSelector = args[1],
      listener = args[2],
      capture = args[3];

  if (typeof args[1] === 'function') {
    eventType = args[0];
    listener = args[1];
    capture = args[2];
    targetSelector = undefined;
  }

  if (!capture) capture = false;
  var events = eventType.split(' ');

  for (var i = 0; i < events.length; i += 1) {
    var event = events[i];

    for (var j = 0; j < this.length; j += 1) {
      var el = this[j];
      var handlers = void 0;

      if (!targetSelector && el.dom7Listeners) {
        handlers = el.dom7Listeners[event];
      } else if (targetSelector && el.dom7LiveListeners) {
        handlers = el.dom7LiveListeners[event];
      }

      if (handlers && handlers.length) {
        for (var k = handlers.length - 1; k >= 0; k -= 1) {
          var handler = handlers[k];

          if (listener && handler.listener === listener) {
            el.removeEventListener(event, handler.proxyListener, capture);
            handlers.splice(k, 1);
          } else if (!listener) {
            el.removeEventListener(event, handler.proxyListener, capture);
            handlers.splice(k, 1);
          }
        }
      }
    }
  }

  return this;
}

function once() {
  var dom = this;

  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  var eventName = args[0],
      targetSelector = args[1],
      listener = args[2],
      capture = args[3];

  if (typeof args[1] === 'function') {
    eventName = args[0];
    listener = args[1];
    capture = args[2];
    targetSelector = undefined;
  }

  function proxy() {
    for (var _len4 = arguments.length, eventArgs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      eventArgs[_key4] = arguments[_key4];
    }

    listener.apply(this, eventArgs);
    dom.off(eventName, targetSelector, proxy, capture);
  }

  return dom.on(eventName, targetSelector, proxy, capture);
}

function trigger() {
  for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    args[_key5] = arguments[_key5];
  }

  var events = args[0].split(' ');
  var eventData = args[1];

  for (var i = 0; i < events.length; i += 1) {
    var event = events[i];

    for (var j = 0; j < this.length; j += 1) {
      var el = this[j];
      var evt = void 0;

      try {
        evt = new ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].CustomEvent(event, {
          detail: eventData,
          bubbles: true,
          cancelable: true
        });
      } catch (e) {
        evt = ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"].createEvent('Event');
        evt.initEvent(event, true, true);
        evt.detail = eventData;
      } // eslint-disable-next-line


      el.dom7EventData = args.filter(function (data, dataIndex) {
        return dataIndex > 0;
      });
      el.dispatchEvent(evt);
      el.dom7EventData = [];
      delete el.dom7EventData;
    }
  }

  return this;
}

function transitionEnd(callback) {
  var events = ['webkitTransitionEnd', 'transitionend'];
  var dom = this;
  var i;

  function fireCallBack(e) {
    /* jshint validthis:true */
    if (e.target !== this) return;
    callback.call(this, e);

    for (i = 0; i < events.length; i += 1) {
      dom.off(events[i], fireCallBack);
    }
  }

  if (callback) {
    for (i = 0; i < events.length; i += 1) {
      dom.on(events[i], fireCallBack);
    }
  }

  return this;
}

function animationEnd(callback) {
  var events = ['webkitAnimationEnd', 'animationend'];
  var dom = this;
  var i;

  function fireCallBack(e) {
    if (e.target !== this) return;
    callback.call(this, e);

    for (i = 0; i < events.length; i += 1) {
      dom.off(events[i], fireCallBack);
    }
  }

  if (callback) {
    for (i = 0; i < events.length; i += 1) {
      dom.on(events[i], fireCallBack);
    }
  }

  return this;
} // Sizing/Styles


function width() {
  if (this[0] === ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"]) {
    return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].innerWidth;
  }

  if (this.length > 0) {
    return parseFloat(this.css('width'));
  }

  return null;
}

function outerWidth(includeMargins) {
  if (this.length > 0) {
    if (includeMargins) {
      // eslint-disable-next-line
      var _styles = this.styles();

      return this[0].offsetWidth + parseFloat(_styles.getPropertyValue('margin-right')) + parseFloat(_styles.getPropertyValue('margin-left'));
    }

    return this[0].offsetWidth;
  }

  return null;
}

function height() {
  if (this[0] === ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"]) {
    return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].innerHeight;
  }

  if (this.length > 0) {
    return parseFloat(this.css('height'));
  }

  return null;
}

function outerHeight(includeMargins) {
  if (this.length > 0) {
    if (includeMargins) {
      // eslint-disable-next-line
      var _styles2 = this.styles();

      return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue('margin-top')) + parseFloat(_styles2.getPropertyValue('margin-bottom'));
    }

    return this[0].offsetHeight;
  }

  return null;
}

function offset() {
  if (this.length > 0) {
    var el = this[0];
    var box = el.getBoundingClientRect();
    var body = ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"].body;
    var clientTop = el.clientTop || body.clientTop || 0;
    var clientLeft = el.clientLeft || body.clientLeft || 0;

    var _scrollTop = el === ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"] ? ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].scrollY : el.scrollTop;

    var _scrollLeft = el === ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"] ? ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].scrollX : el.scrollLeft;

    return {
      top: box.top + _scrollTop - clientTop,
      left: box.left + _scrollLeft - clientLeft
    };
  }

  return null;
}

function hide() {
  for (var i = 0; i < this.length; i += 1) {
    this[i].style.display = 'none';
  }

  return this;
}

function show() {
  for (var i = 0; i < this.length; i += 1) {
    var el = this[i];

    if (el.style.display === 'none') {
      el.style.display = '';
    }

    if (ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].getComputedStyle(el, null).getPropertyValue('display') === 'none') {
      // Still not visible
      el.style.display = 'block';
    }
  }

  return this;
}

function styles() {
  if (this[0]) return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].getComputedStyle(this[0], null);
  return {};
}

function css(props, value) {
  var i;

  if (arguments.length === 1) {
    if (typeof props === 'string') {
      if (this[0]) return ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].getComputedStyle(this[0], null).getPropertyValue(props);
    } else {
      for (i = 0; i < this.length; i += 1) {
        // eslint-disable-next-line
        for (var _prop in props) {
          this[i].style[_prop] = props[_prop];
        }
      }

      return this;
    }
  }

  if (arguments.length === 2 && typeof props === 'string') {
    for (i = 0; i < this.length; i += 1) {
      this[i].style[props] = value;
    }

    return this;
  }

  return this;
} // Dom manipulation


function toArray() {
  var arr = [];

  for (var i = 0; i < this.length; i += 1) {
    arr.push(this[i]);
  }

  return arr;
} // Iterate over the collection passing elements to `callback`


function each(callback) {
  // Don't bother continuing without a callback
  if (!callback) return this; // Iterate over the current collection

  for (var i = 0; i < this.length; i += 1) {
    // If the callback returns false
    if (callback.call(this[i], i, this[i]) === false) {
      // End the loop early
      return this;
    }
  } // Return `this` to allow chained DOM operations


  return this;
}

function forEach(callback) {
  // Don't bother continuing without a callback
  if (!callback) return this; // Iterate over the current collection

  for (var i = 0; i < this.length; i += 1) {
    // If the callback returns false
    if (callback.call(this[i], this[i], i) === false) {
      // End the loop early
      return this;
    }
  } // Return `this` to allow chained DOM operations


  return this;
}

function filter(callback) {
  var matchedItems = [];
  var dom = this;

  for (var i = 0; i < dom.length; i += 1) {
    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);
  }

  return new Dom7(matchedItems);
}

function map(callback) {
  var modifiedItems = [];
  var dom = this;

  for (var i = 0; i < dom.length; i += 1) {
    modifiedItems.push(callback.call(dom[i], i, dom[i]));
  }

  return new Dom7(modifiedItems);
} // eslint-disable-next-line


function html(html) {
  if (typeof html === 'undefined') {
    return this[0] ? this[0].innerHTML : undefined;
  }

  for (var i = 0; i < this.length; i += 1) {
    this[i].innerHTML = html;
  }

  return this;
} // eslint-disable-next-line


function text(text) {
  if (typeof text === 'undefined') {
    if (this[0]) {
      return this[0].textContent.trim();
    }

    return null;
  }

  for (var i = 0; i < this.length; i += 1) {
    this[i].textContent = text;
  }

  return this;
}

function is(selector) {
  var el = this[0];
  var compareWith;
  var i;
  if (!el || typeof selector === 'undefined') return false;

  if (typeof selector === 'string') {
    if (el.matches) return el.matches(selector);else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);else if (el.msMatchesSelector) return el.msMatchesSelector(selector);
    compareWith = $(selector);

    for (i = 0; i < compareWith.length; i += 1) {
      if (compareWith[i] === el) return true;
    }

    return false;
  } else if (selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"]) return el === ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"];else if (selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"]) return el === ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"];

  if (selector.nodeType || selector instanceof Dom7) {
    compareWith = selector.nodeType ? [selector] : selector;

    for (i = 0; i < compareWith.length; i += 1) {
      if (compareWith[i] === el) return true;
    }

    return false;
  }

  return false;
}

function indexOf(el) {
  for (var i = 0; i < this.length; i += 1) {
    if (this[i] === el) return i;
  }

  return -1;
}

function index() {
  var child = this[0];
  var i;

  if (child) {
    i = 0; // eslint-disable-next-line

    while ((child = child.previousSibling) !== null) {
      if (child.nodeType === 1) i += 1;
    }

    return i;
  }

  return undefined;
} // eslint-disable-next-line


function eq(index) {
  if (typeof index === 'undefined') return this;
  var length = this.length;
  var returnIndex;

  if (index > length - 1) {
    return new Dom7([]);
  }

  if (index < 0) {
    returnIndex = length + index;
    if (returnIndex < 0) return new Dom7([]);
    return new Dom7([this[returnIndex]]);
  }

  return new Dom7([this[index]]);
}

function append() {
  var newChild;

  for (var k = 0; k < arguments.length; k += 1) {
    newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];

    for (var i = 0; i < this.length; i += 1) {
      if (typeof newChild === 'string') {
        var tempDiv = ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"].createElement('div');
        tempDiv.innerHTML = newChild;

        while (tempDiv.firstChild) {
          this[i].appendChild(tempDiv.firstChild);
        }
      } else if (newChild instanceof Dom7) {
        for (var j = 0; j < newChild.length; j += 1) {
          this[i].appendChild(newChild[j]);
        }
      } else {
        this[i].appendChild(newChild);
      }
    }
  }

  return this;
} // eslint-disable-next-line


function appendTo(parent) {
  $(parent).append(this);
  return this;
}

function prepend(newChild) {
  var i;
  var j;

  for (i = 0; i < this.length; i += 1) {
    if (typeof newChild === 'string') {
      var tempDiv = ssr_window__WEBPACK_IMPORTED_MODULE_0__["document"].createElement('div');
      tempDiv.innerHTML = newChild;

      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
      }
    } else if (newChild instanceof Dom7) {
      for (j = 0; j < newChild.length; j += 1) {
        this[i].insertBefore(newChild[j], this[i].childNodes[0]);
      }
    } else {
      this[i].insertBefore(newChild, this[i].childNodes[0]);
    }
  }

  return this;
} // eslint-disable-next-line


function prependTo(parent) {
  $(parent).prepend(this);
  return this;
}

function insertBefore(selector) {
  var before = $(selector);

  for (var i = 0; i < this.length; i += 1) {
    if (before.length === 1) {
      before[0].parentNode.insertBefore(this[i], before[0]);
    } else if (before.length > 1) {
      for (var j = 0; j < before.length; j += 1) {
        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);
      }
    }
  }
}

function insertAfter(selector) {
  var after = $(selector);

  for (var i = 0; i < this.length; i += 1) {
    if (after.length === 1) {
      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);
    } else if (after.length > 1) {
      for (var j = 0; j < after.length; j += 1) {
        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);
      }
    }
  }
}

function next(selector) {
  if (this.length > 0) {
    if (selector) {
      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {
        return new Dom7([this[0].nextElementSibling]);
      }

      return new Dom7([]);
    }

    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);
    return new Dom7([]);
  }

  return new Dom7([]);
}

function nextAll(selector) {
  var nextEls = [];
  var el = this[0];
  if (!el) return new Dom7([]);

  while (el.nextElementSibling) {
    var _next = el.nextElementSibling; // eslint-disable-line

    if (selector) {
      if ($(_next).is(selector)) nextEls.push(_next);
    } else nextEls.push(_next);

    el = _next;
  }

  return new Dom7(nextEls);
}

function prev(selector) {
  if (this.length > 0) {
    var el = this[0];

    if (selector) {
      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {
        return new Dom7([el.previousElementSibling]);
      }

      return new Dom7([]);
    }

    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);
    return new Dom7([]);
  }

  return new Dom7([]);
}

function prevAll(selector) {
  var prevEls = [];
  var el = this[0];
  if (!el) return new Dom7([]);

  while (el.previousElementSibling) {
    var _prev = el.previousElementSibling; // eslint-disable-line

    if (selector) {
      if ($(_prev).is(selector)) prevEls.push(_prev);
    } else prevEls.push(_prev);

    el = _prev;
  }

  return new Dom7(prevEls);
}

function siblings(selector) {
  return this.nextAll(selector).add(this.prevAll(selector));
}

function parent(selector) {
  var parents = []; // eslint-disable-line

  for (var i = 0; i < this.length; i += 1) {
    if (this[i].parentNode !== null) {
      if (selector) {
        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);
      } else {
        parents.push(this[i].parentNode);
      }
    }
  }

  return $(unique(parents));
}

function parents(selector) {
  var parents = []; // eslint-disable-line

  for (var i = 0; i < this.length; i += 1) {
    var _parent = this[i].parentNode; // eslint-disable-line

    while (_parent) {
      if (selector) {
        if ($(_parent).is(selector)) parents.push(_parent);
      } else {
        parents.push(_parent);
      }

      _parent = _parent.parentNode;
    }
  }

  return $(unique(parents));
}

function closest(selector) {
  var closest = this; // eslint-disable-line

  if (typeof selector === 'undefined') {
    return new Dom7([]);
  }

  if (!closest.is(selector)) {
    closest = closest.parents(selector).eq(0);
  }

  return closest;
}

function find(selector) {
  var foundElements = [];

  for (var i = 0; i < this.length; i += 1) {
    var found = this[i].querySelectorAll(selector);

    for (var j = 0; j < found.length; j += 1) {
      foundElements.push(found[j]);
    }
  }

  return new Dom7(foundElements);
}

function children(selector) {
  var children = []; // eslint-disable-line

  for (var i = 0; i < this.length; i += 1) {
    var childNodes = this[i].childNodes;

    for (var j = 0; j < childNodes.length; j += 1) {
      if (!selector) {
        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);
      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {
        children.push(childNodes[j]);
      }
    }
  }

  return new Dom7(unique(children));
}

function remove() {
  for (var i = 0; i < this.length; i += 1) {
    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);
  }

  return this;
}

function detach() {
  return this.remove();
}

function add() {
  var dom = this;
  var i;
  var j;

  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }

  for (i = 0; i < args.length; i += 1) {
    var toAdd = $(args[i]);

    for (j = 0; j < toAdd.length; j += 1) {
      dom[dom.length] = toAdd[j];
      dom.length += 1;
    }
  }

  return dom;
}

function empty() {
  for (var i = 0; i < this.length; i += 1) {
    var el = this[i];

    if (el.nodeType === 1) {
      for (var j = 0; j < el.childNodes.length; j += 1) {
        if (el.childNodes[j].parentNode) {
          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);
        }
      }

      el.textContent = '';
    }
  }

  return this;
}

function scrollTo() {
  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
    args[_key7] = arguments[_key7];
  }

  var left = args[0],
      top = args[1],
      duration = args[2],
      easing = args[3],
      callback = args[4];

  if (args.length === 4 && typeof easing === 'function') {
    callback = easing;
    left = args[0];
    top = args[1];
    duration = args[2];
    callback = args[3];
    easing = args[4];
  }

  if (typeof easing === 'undefined') easing = 'swing';
  return this.each(function animate() {
    var el = this;
    var currentTop;
    var currentLeft;
    var maxTop;
    var maxLeft;
    var newTop;
    var newLeft;
    var scrollTop; // eslint-disable-line

    var scrollLeft; // eslint-disable-line

    var animateTop = top > 0 || top === 0;
    var animateLeft = left > 0 || left === 0;

    if (typeof easing === 'undefined') {
      easing = 'swing';
    }

    if (animateTop) {
      currentTop = el.scrollTop;

      if (!duration) {
        el.scrollTop = top;
      }
    }

    if (animateLeft) {
      currentLeft = el.scrollLeft;

      if (!duration) {
        el.scrollLeft = left;
      }
    }

    if (!duration) return;

    if (animateTop) {
      maxTop = el.scrollHeight - el.offsetHeight;
      newTop = Math.max(Math.min(top, maxTop), 0);
    }

    if (animateLeft) {
      maxLeft = el.scrollWidth - el.offsetWidth;
      newLeft = Math.max(Math.min(left, maxLeft), 0);
    }

    var startTime = null;
    if (animateTop && newTop === currentTop) animateTop = false;
    if (animateLeft && newLeft === currentLeft) animateLeft = false;

    function render() {
      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date().getTime();

      if (startTime === null) {
        startTime = time;
      }

      var progress = Math.max(Math.min((time - startTime) / duration, 1), 0);
      var easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;
      var done;
      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);
      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);

      if (animateTop && newTop > currentTop && scrollTop >= newTop) {
        el.scrollTop = newTop;
        done = true;
      }

      if (animateTop && newTop < currentTop && scrollTop <= newTop) {
        el.scrollTop = newTop;
        done = true;
      }

      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {
        el.scrollLeft = newLeft;
        done = true;
      }

      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {
        el.scrollLeft = newLeft;
        done = true;
      }

      if (done) {
        if (callback) callback();
        return;
      }

      if (animateTop) el.scrollTop = scrollTop;
      if (animateLeft) el.scrollLeft = scrollLeft;
      requestAnimationFrame(render);
    }

    requestAnimationFrame(render);
  });
} // scrollTop(top, duration, easing, callback) {


function scrollTop() {
  for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
    args[_key8] = arguments[_key8];
  }

  var top = args[0],
      duration = args[1],
      easing = args[2],
      callback = args[3];

  if (args.length === 3 && typeof easing === 'function') {
    top = args[0];
    duration = args[1];
    callback = args[2];
    easing = args[3];
  }

  var dom = this;

  if (typeof top === 'undefined') {
    if (dom.length > 0) return dom[0].scrollTop;
    return null;
  }

  return dom.scrollTo(undefined, top, duration, easing, callback);
}

function scrollLeft() {
  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
    args[_key9] = arguments[_key9];
  }

  var left = args[0],
      duration = args[1],
      easing = args[2],
      callback = args[3];

  if (args.length === 3 && typeof easing === 'function') {
    left = args[0];
    duration = args[1];
    callback = args[2];
    easing = args[3];
  }

  var dom = this;

  if (typeof left === 'undefined') {
    if (dom.length > 0) return dom[0].scrollLeft;
    return null;
  }

  return dom.scrollTo(left, undefined, duration, easing, callback);
}

function animate(initialProps, initialParams) {
  var els = this;
  var a = {
    props: Object.assign({}, initialProps),
    params: Object.assign({
      duration: 300,
      easing: 'swing' // or 'linear'

      /* Callbacks
      begin(elements)
      complete(elements)
      progress(elements, complete, remaining, start, tweenValue)
      */

    }, initialParams),
    elements: els,
    animating: false,
    que: [],
    easingProgress: function easingProgress(easing, progress) {
      if (easing === 'swing') {
        return 0.5 - Math.cos(progress * Math.PI) / 2;
      }

      if (typeof easing === 'function') {
        return easing(progress);
      }

      return progress;
    },
    stop: function stop() {
      if (a.frameId) {
        cancelAnimationFrame(a.frameId);
      }

      a.animating = false;
      a.elements.each(function (index, el) {
        var element = el;
        delete element.dom7AnimateInstance;
      });
      a.que = [];
    },
    done: function done(complete) {
      a.animating = false;
      a.elements.each(function (index, el) {
        var element = el;
        delete element.dom7AnimateInstance;
      });
      if (complete) complete(els);

      if (a.que.length > 0) {
        var que = a.que.shift();
        a.animate(que[0], que[1]);
      }
    },
    animate: function animate(props, params) {
      if (a.animating) {
        a.que.push([props, params]);
        return a;
      }

      var elements = []; // Define & Cache Initials & Units

      a.elements.each(function (index, el) {
        var initialFullValue;
        var initialValue;
        var unit;
        var finalValue;
        var finalFullValue;
        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;
        elements[index] = {
          container: el
        };
        Object.keys(props).forEach(function (prop) {
          initialFullValue = ssr_window__WEBPACK_IMPORTED_MODULE_0__["window"].getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');
          initialValue = parseFloat(initialFullValue);
          unit = initialFullValue.replace(initialValue, '');
          finalValue = parseFloat(props[prop]);
          finalFullValue = props[prop] + unit;
          elements[index][prop] = {
            initialFullValue: initialFullValue,
            initialValue: initialValue,
            unit: unit,
            finalValue: finalValue,
            finalFullValue: finalFullValue,
            currentValue: initialValue
          };
        });
      });
      var startTime = null;
      var time;
      var elementsDone = 0;
      var propsDone = 0;
      var done;
      var began = false;
      a.animating = true;

      function render() {
        time = new Date().getTime();
        var progress;
        var easeProgress; // let el;

        if (!began) {
          began = true;
          if (params.begin) params.begin(els);
        }

        if (startTime === null) {
          startTime = time;
        }

        if (params.progress) {
          // eslint-disable-next-line
          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);
        }

        elements.forEach(function (element) {
          var el = element;
          if (done || el.done) return;
          Object.keys(props).forEach(function (prop) {
            if (done || el.done) return;
            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);
            easeProgress = a.easingProgress(params.easing, progress);
            var _el$prop = el[prop],
                initialValue = _el$prop.initialValue,
                finalValue = _el$prop.finalValue,
                unit = _el$prop.unit;
            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);
            var currentValue = el[prop].currentValue;

            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {
              el.container.style[prop] = finalValue + unit;
              propsDone += 1;

              if (propsDone === Object.keys(props).length) {
                el.done = true;
                elementsDone += 1;
              }

              if (elementsDone === elements.length) {
                done = true;
              }
            }

            if (done) {
              a.done(params.complete);
              return;
            }

            el.container.style[prop] = currentValue + unit;
          });
        });
        if (done) return; // Then call

        a.frameId = requestAnimationFrame(render);
      }

      a.frameId = requestAnimationFrame(render);
      return a;
    }
  };

  if (a.elements.length === 0) {
    return els;
  }

  var animateInstance;

  for (var i = 0; i < a.elements.length; i += 1) {
    if (a.elements[i].dom7AnimateInstance) {
      animateInstance = a.elements[i].dom7AnimateInstance;
    } else a.elements[i].dom7AnimateInstance = a;
  }

  if (!animateInstance) {
    animateInstance = a;
  }

  if (initialProps === 'stop') {
    animateInstance.stop();
  } else {
    animateInstance.animate(a.props, a.params);
  }

  return els;
}

function stop() {
  var els = this;

  for (var i = 0; i < els.length; i += 1) {
    if (els[i].dom7AnimateInstance) {
      els[i].dom7AnimateInstance.stop();
    }
  }
}

var noTrigger = 'resize scroll'.split(' ');

function eventShortcut(name) {
  for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {
    args[_key10 - 1] = arguments[_key10];
  }

  if (typeof args[0] === 'undefined') {
    for (var i = 0; i < this.length; i += 1) {
      if (noTrigger.indexOf(name) < 0) {
        if (name in this[i]) this[i][name]();else {
          $(this[i]).trigger(name);
        }
      }
    }

    return this;
  }

  return this.on.apply(this, [name].concat(args));
}

function click() {
  for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
    args[_key11] = arguments[_key11];
  }

  return eventShortcut.bind(this).apply(void 0, ['click'].concat(args));
}

function blur() {
  for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
    args[_key12] = arguments[_key12];
  }

  return eventShortcut.bind(this).apply(void 0, ['blur'].concat(args));
}

function focus() {
  for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
    args[_key13] = arguments[_key13];
  }

  return eventShortcut.bind(this).apply(void 0, ['focus'].concat(args));
}

function focusin() {
  for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
    args[_key14] = arguments[_key14];
  }

  return eventShortcut.bind(this).apply(void 0, ['focusin'].concat(args));
}

function focusout() {
  for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {
    args[_key15] = arguments[_key15];
  }

  return eventShortcut.bind(this).apply(void 0, ['focusout'].concat(args));
}

function keyup() {
  for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {
    args[_key16] = arguments[_key16];
  }

  return eventShortcut.bind(this).apply(void 0, ['keyup'].concat(args));
}

function keydown() {
  for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {
    args[_key17] = arguments[_key17];
  }

  return eventShortcut.bind(this).apply(void 0, ['keydown'].concat(args));
}

function keypress() {
  for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {
    args[_key18] = arguments[_key18];
  }

  return eventShortcut.bind(this).apply(void 0, ['keypress'].concat(args));
}

function submit() {
  for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {
    args[_key19] = arguments[_key19];
  }

  return eventShortcut.bind(this).apply(void 0, ['submit'].concat(args));
}

function change() {
  for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {
    args[_key20] = arguments[_key20];
  }

  return eventShortcut.bind(this).apply(void 0, ['change'].concat(args));
}

function mousedown() {
  for (var _len21 = arguments.length, args = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {
    args[_key21] = arguments[_key21];
  }

  return eventShortcut.bind(this).apply(void 0, ['mousedown'].concat(args));
}

function mousemove() {
  for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {
    args[_key22] = arguments[_key22];
  }

  return eventShortcut.bind(this).apply(void 0, ['mousemove'].concat(args));
}

function mouseup() {
  for (var _len23 = arguments.length, args = new Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {
    args[_key23] = arguments[_key23];
  }

  return eventShortcut.bind(this).apply(void 0, ['mouseup'].concat(args));
}

function mouseenter() {
  for (var _len24 = arguments.length, args = new Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {
    args[_key24] = arguments[_key24];
  }

  return eventShortcut.bind(this).apply(void 0, ['mouseenter'].concat(args));
}

function mouseleave() {
  for (var _len25 = arguments.length, args = new Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {
    args[_key25] = arguments[_key25];
  }

  return eventShortcut.bind(this).apply(void 0, ['mouseleave'].concat(args));
}

function mouseout() {
  for (var _len26 = arguments.length, args = new Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {
    args[_key26] = arguments[_key26];
  }

  return eventShortcut.bind(this).apply(void 0, ['mouseout'].concat(args));
}

function mouseover() {
  for (var _len27 = arguments.length, args = new Array(_len27), _key27 = 0; _key27 < _len27; _key27++) {
    args[_key27] = arguments[_key27];
  }

  return eventShortcut.bind(this).apply(void 0, ['mouseover'].concat(args));
}

function touchstart() {
  for (var _len28 = arguments.length, args = new Array(_len28), _key28 = 0; _key28 < _len28; _key28++) {
    args[_key28] = arguments[_key28];
  }

  return eventShortcut.bind(this).apply(void 0, ['touchstart'].concat(args));
}

function touchend() {
  for (var _len29 = arguments.length, args = new Array(_len29), _key29 = 0; _key29 < _len29; _key29++) {
    args[_key29] = arguments[_key29];
  }

  return eventShortcut.bind(this).apply(void 0, ['touchend'].concat(args));
}

function touchmove() {
  for (var _len30 = arguments.length, args = new Array(_len30), _key30 = 0; _key30 < _len30; _key30++) {
    args[_key30] = arguments[_key30];
  }

  return eventShortcut.bind(this).apply(void 0, ['touchmove'].concat(args));
}

function resize() {
  for (var _len31 = arguments.length, args = new Array(_len31), _key31 = 0; _key31 < _len31; _key31++) {
    args[_key31] = arguments[_key31];
  }

  return eventShortcut.bind(this).apply(void 0, ['resize'].concat(args));
}

function scroll() {
  for (var _len32 = arguments.length, args = new Array(_len32), _key32 = 0; _key32 < _len32; _key32++) {
    args[_key32] = arguments[_key32];
  }

  return eventShortcut.bind(this).apply(void 0, ['scroll'].concat(args));
}



/***/ }),
/* 508 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "window", function() { return win; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "document", function() { return doc; });
/**
 * SSR Window 1.0.1
 * Better handling for window object in SSR environment
 * https://github.com/nolimits4web/ssr-window
 *
 * Copyright 2018, Vladimir Kharlampidi
 *
 * Licensed under MIT
 *
 * Released on: July 18, 2018
 */
var doc = typeof document === 'undefined' ? {
  body: {},
  addEventListener: function addEventListener() {},
  removeEventListener: function removeEventListener() {},
  activeElement: {
    blur: function blur() {},
    nodeName: ''
  },
  querySelector: function querySelector() {
    return null;
  },
  querySelectorAll: function querySelectorAll() {
    return [];
  },
  getElementById: function getElementById() {
    return null;
  },
  createEvent: function createEvent() {
    return {
      initEvent: function initEvent() {}
    };
  },
  createElement: function createElement() {
    return {
      children: [],
      childNodes: [],
      style: {},
      setAttribute: function setAttribute() {},
      getElementsByTagName: function getElementsByTagName() {
        return [];
      }
    };
  },
  location: {
    hash: ''
  }
} : document; // eslint-disable-line

var win = typeof window === 'undefined' ? {
  document: doc,
  navigator: {
    userAgent: ''
  },
  location: {},
  history: {},
  CustomEvent: function CustomEvent() {
    return this;
  },
  addEventListener: function addEventListener() {},
  removeEventListener: function removeEventListener() {},
  getComputedStyle: function getComputedStyle() {
    return {
      getPropertyValue: function getPropertyValue() {
        return '';
      }
    };
  },
  Image: function Image() {},
  Date: function Date() {},
  screen: {},
  setTimeout: function setTimeout() {},
  clearTimeout: function clearTimeout() {}
} : window; // eslint-disable-line



/***/ }),
/* 509 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OCarouselComponent", function() { return OCarouselComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
/* harmony import */ var _o_carousel_container_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(505);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * --------------------------------------------------------------------------
 * Ng-boosted - o-carousel.component.ts
 * copyright 2018 Orange SA
 * src: https://github.com/ksachdeva/angular2-swiper/blob/master/src/ks-swiper.ts
 * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var __param = undefined && undefined.__param || function (paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
};




var OCarouselComponent =
/** @class */
function () {
  function OCarouselComponent(elementRef, swiper) {
    this.elm = elementRef.nativeElement;
    this.swiper = swiper;
  }

  OCarouselComponent.prototype.ngAfterViewInit = function () {
    this.elm.classList.add('swiper-slide');
    this.swiper.update();
  };

  OCarouselComponent = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
    selector: 'o-carousel-slide',
    template: '<div><ng-content></ng-content></div>'
  }), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])), __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Host"])()), __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_o_carousel_container_component__WEBPACK_IMPORTED_MODULE_1__["OCarouselContainerComponent"])), __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _o_carousel_container_component__WEBPACK_IMPORTED_MODULE_1__["OCarouselContainerComponent"]])], OCarouselComponent);
  return OCarouselComponent;
}();



/***/ }),
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ODropdownComponent", function() { return ODropdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(266);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * --------------------------------------------------------------------------
 * Ng-boosted - o-dropdown.component.ts
 * copyright 2018 Orange SA
 * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __metadata = undefined && undefined.__metadata || function (k, v) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ODropdownComponent =
/** @class */
function () {
  function ODropdownComponent(elRef) {
    this.elRef = elRef;
  }

  ODropdownComponent.prototype.ngAfterViewInit = function () {
    this.dropdownMenu = this.elRef.nativeElement.querySelectorAll('.dropdown-menu')[0];
  };

  ODropdownComponent.prototype.handleDropdownFocus = function (isOpenEvent) {
    var _this = this;

    if (isOpenEvent) {
      setTimeout(function () {
        _this.dropdownMenu.firstElementChild.focus();
      });
    }
  };

  __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('openChange', ['$event']), __metadata("design:type", Function), __metadata("design:paramtypes", [Object]), __metadata("design:returntype", void 0)], ODropdownComponent.prototype, "handleDropdownFocus", null);

  ODropdownComponent = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
    selector: '[ngbDropdown]' // using same selector as ng-bootsrap NgbDropdown directive

  }), __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])], ODropdownComponent);
  return ODropdownComponent;
}();



/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var global_1 = __webpack_require__(512);
var AppComponent = /** @class */ (function () {
    function AppComponent(globals) {
        this.globals = globals;
    }
    AppComponent = __decorate([
        core_1.Component({
            selector: 'app',
            template: __webpack_require__(513),
            providers: [global_1.Globals]
        }),
        __metadata("design:paramtypes", [global_1.Globals])
    ], AppComponent);
    return AppComponent;
}());
exports.AppComponent = AppComponent;


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var Globals = /** @class */ (function () {
    function Globals() {
        this.ngBoostedVersion = '4.0.0';
        this.boostedVersion = '4.1.3';
        this.angularVersion = '7.0.0';
        this.ngBootstrapVersion = '4.0.0';
    }
    Globals = __decorate([
        core_1.Injectable()
    ], Globals);
    return Globals;
}());
exports.Globals = Globals;


/***/ }),
/* 513 */
/***/ (function(module, exports) {

module.exports = "<header>\r\n    <o-navbar homeRoute=\"/home\" breakpoint=\"sm\" brandPath=\"assets/img/orange-logo.jpg\" brandLabel=\"Back to home page\">\r\n        <li o-nav-link route=\"/home\">Ng-boosted</li>\r\n        <li o-nav-link route=\"/start\">Getting started</li>\r\n        <li o-nav-link route=\"/documentation\">Components</li>\r\n        <li o-nav-link route=\"/boostwatch\">Boostwatch</li>\r\n        <li class=\"nav-item ml-md-auto\">\r\n          <a class=\"nav-link\" href=\"https://github.com/Orange-OpenSource/Orange-Boosted-Angular\" target=\"_blank\" rel=\"noopener\" aria-label=\"GitHub\">\r\n            <svg class=\"navbar-nav-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 499.36\" focusable=\"false\"><title>GitHub</title><path d=\"M256 0C114.64 0 0 114.61 0 256c0 113.09 73.34 209 175.08 242.9 12.8 2.35 17.47-5.56 17.47-12.34 0-6.08-.22-22.18-.35-43.54-71.2 15.49-86.2-34.34-86.2-34.34-11.64-29.57-28.42-37.45-28.42-37.45-23.27-15.84 1.73-15.55 1.73-15.55 25.69 1.81 39.21 26.38 39.21 26.38 22.84 39.12 59.92 27.82 74.5 21.27 2.33-16.54 8.94-27.82 16.25-34.22-56.84-6.43-116.6-28.43-116.6-126.49 0-27.95 10-50.8 26.35-68.69-2.63-6.48-11.42-32.5 2.51-67.75 0 0 21.49-6.88 70.4 26.24a242.65 242.65 0 0 1 128.18 0c48.87-33.13 70.33-26.24 70.33-26.24 14 35.25 5.18 61.27 2.55 67.75 16.41 17.9 26.31 40.75 26.31 68.69 0 98.35-59.85 120-116.88 126.32 9.19 7.9 17.38 23.53 17.38 47.41 0 34.22-.31 61.83-.31 70.23 0 6.85 4.61 14.81 17.6 12.31C438.72 464.97 512 369.08 512 256.02 512 114.62 397.37 0 256 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path></svg>\r\n          </a>\r\n        </li>\r\n    </o-navbar>\r\n</header>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<scroll-top label=\"Back to top\"></scroll-top>\r\n\r\n<footer role=\"contentinfo\" class=\"o-footer\">\r\n    <h1 class=\"sr-only\">footer - site map & informations</h1>\r\n    <div class=\"o-footer-top\">\r\n        <div class=\"container\">\r\n            <span>Designed and built by the Boosted team.</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"o-footer-bottom\">\r\n        <div class=\"container\">\r\n            <ul class=\"nav\">\r\n                <li class=\"nav-item\"><span class=\"nav-link\">© Orange 2018</span></li>\r\n                <li class=\"nav-item\"><span class=\"nav-link\">v{{globals.ngBoostedVersion}}</span></li>\r\n                <li class=\"nav-item\"><span class=\"nav-link\">Code licensed under</span><a class=\"nav-link\" href=\"https://github.com/Orange-OpenSource/Orange-Boosted-Angular/blob/master/LICENSE\">MIT license</a></li>\r\n                <li class=\"nav-item\"><span class=\"nav-link\">Documentation licensed under</span><a class=\"nav-link\" href=\"https://github.com/Orange-OpenSource/Orange-Boosted-Angular/blob/master/docs/LICENSE\">CC BY 3.0</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</footer>"

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var global_1 = __webpack_require__(512);
var HomeComponent = /** @class */ (function () {
    function HomeComponent(globals) {
        this.globals = globals;
    }
    HomeComponent = __decorate([
        core_1.Component({
            selector: 'home',
            template: __webpack_require__(515),
            providers: [global_1.Globals]
        }),
        __metadata("design:paramtypes", [global_1.Globals])
    ], HomeComponent);
    return HomeComponent;
}());
exports.HomeComponent = HomeComponent;


/***/ }),
/* 515 */
/***/ (function(module, exports) {

module.exports = "<section class=\"ng-banner\">\r\n    <div class=\"container\">\r\n        <div class=\"row head\">\r\n            <div class=\"col-md-7\">\r\n                <h1>Orange B<span class=\"text-primary\">oo</span>sted with Angular</h1>\r\n                <p class=\"lead\">This is Ng-boosted, built with Boosted (css only), Angular and ng-bootstrap.</p>\r\n                <a class=\"btn btn-secondary btn-lg\" href=\"\" routerLink=\"/start\">Get started</a>\r\n                <span class=\"version\">Currently v{{globals.ngBoostedVersion}}</span>\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                    <!-- <svg width=\"220\" height=\"236\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><use xlink:href=\"#path0_fill\" fill=\"#FF7900\"/><use xlink:href=\"#path1_fill\" transform=\"translate(110)\" fill=\"#F16E00\"/><g><use xlink:href=\"#path2_fill\" transform=\"translate(62 51.69)\" fill=\"#FFF\"/></g><defs><path id=\"path0_fill\" fill-rule=\"evenodd\" d=\"M110 0L0 39.176l16.778 145.258L110 236V0z\"/><path id=\"path1_fill\" fill-rule=\"evenodd\" d=\"M0 0l110 39.176-16.778 145.258L0 236V0z\"/><path id=\"path2_fill\" d=\"M25.2 63.482H52.65c5.672 0 10.112 1.336 13.323 4.008 3.21 2.565 4.815 6.68 4.815 12.344 0 5.45-1.712 9.35-5.136 11.702-3.317 2.244-7.812 3.366-13.483 3.366H25.2v-31.42zM0 114.46h55.538c5.35 0 10.434-.641 15.25-1.924 4.815-1.389 9.095-3.42 12.84-6.091 3.853-2.779 6.85-6.252 8.99-10.42 2.247-4.275 3.37-9.191 3.37-14.749 0-7.267-1.819-13.412-5.457-18.435-3.532-5.13-8.722-8.657-15.57-10.58 10.38-5.024 15.57-12.986 15.57-23.887 0-10.152-3.21-17.42-9.631-21.801C74.586 2.19 65.597 0 53.933 0H0v114.46zm25.2-94.902h23.597c5.243 0 9.417.961 12.52 2.885 3.21 1.817 4.815 5.237 4.815 10.26 0 4.595-1.39 8.015-4.173 10.26-2.782 2.244-6.528 3.366-11.236 3.366H25.2V19.558z\"/></defs></svg> -->\r\n                    <img alt=\"ng-boosted logo\" src=\"assets/img/ng-boosted_logo.png\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"only-in-ng\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-7\">\r\n                <img alt=\"components examles\" src=\"assets/img/only_in_boosted.png\">\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                <div class=\"inner\">\r\n                    <h2>Only in ng-boosted !</h2>\r\n                    <ul class=\"o-square-list\">\r\n                        <li>Navbar component</li>\r\n                        <li>Custom checkboxes</li>\r\n                        <li>Advanced carousel with touch support</li>\r\n                        <li>Back to top link</li>\r\n                    </ul>\r\n                    <a class=\"btn btn-secondary btn-lg\" href=\"\" routerLink=\"/boostwatch\">Discover</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n"

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var global_1 = __webpack_require__(512);
var StartComponent = /** @class */ (function () {
    function StartComponent(globals) {
        this.globals = globals;
    }
    StartComponent = __decorate([
        core_1.Component({
            selector: 'getting-started',
            template: __webpack_require__(517),
            providers: [global_1.Globals]
        }),
        __metadata("design:paramtypes", [global_1.Globals])
    ], StartComponent);
    return StartComponent;
}());
exports.StartComponent = StartComponent;


/***/ }),
/* 517 */
/***/ (function(module, exports) {

module.exports = "<!-- <div class=\"head\">\r\n    <div class=\"container\">\r\n        <h1>Orange B<span class=\"text-primary\">oo</span>sted with Angular</h1>\r\n        <p class=\"lead\">This is Ng-boosted, built with Boosted (css only), Angular and ng-bootstrap.</p>\r\n        <p class=\"version\">Currently v{{ngBoostedVersion}}</p>\r\n    </div>\r\n</div> -->\r\n\r\n<div class=\"container\">\r\n    <h2>Getting started</h2>\r\n\r\n    <h3>Dependencies</h3>\r\n    <p>Ng-boosted is a set of custom components and directives that allows you to run your Angular based projet with Boosted CSS.</p>\r\n    <p>Before your start using Ng-boosted you need the following dependencies :</p>\r\n        <ul class=\"o-square-list\">\r\n            <li><a href=\"http://boosted.orange.com\">Boosted {{globals.boostedVersion}}</a></li>\r\n            <li><a href=\"https://angular.io/\">Angular {{globals.angularVersion}}</a></li>\r\n            <li><a href=\"https://ng-bootstrap.github.io/\">ng-bootstrap {{globals.ngBootstrapVersion}}</a></li>\r\n        </ul>\r\n\r\n    <h3>Installation</h3>\r\n    <p>For <code>ng-bootstrap</code> installation please see the documentation <a href=\"https://ng-bootstrap.github.io/#/getting-started\">here</a></p>\r\n\r\n    <p>After installing the above dependencies, install <code>ng-boosted</code> via:</p>\r\n\r\n    <p><code>npm install --save ng-boosted</code></p>\r\n\r\n    <p>Once installed you need to import <code>ng-bootstrap</code> and <code>ng-boosted</code> modules.</p>\r\n\r\n    <p><code>\r\n        import {{ '{' }} NgbModule {{ '}' }} from '@ng-bootstrap/ng-bootstrap';<br>\r\n        import {{ '{' }} NgBoostedModule {{ '}' }} from 'ng-boosted';\r\n    </code></p>\r\n\r\n    <p><code>\r\n        @NgModule({{ '{' }}<br>\r\n        &emsp;declarations: [AppComponent, ...],<br>\r\n        &emsp;imports: [NgbModule.forRoot(), NgBoostedModule, ...],<br>\r\n        &emsp;bootstrap: [AppComponent]<br>\r\n        {{ '}' }})<br>\r\n        export class AppModule {{ '{' }}<br>\r\n        {{ '}' }}<br>\r\n    </code></p>\r\n\r\n    <h2>Building this documentation</h2>\r\n    <p>Simply <code>npm run build:docs</code> and the output goes to a <code>_gh_pages</code> folder.</p>\r\n\r\n    <p>You can also run this documentation with <code>npm start</code></p>\r\n\r\n    <p>The output is then served to <a href=\"http://localhost:3030\">http://localhost:3030</a>\r\n    </p>\r\n\r\n    <h2>Copyright and license</h2>\r\n\r\n    <p>Code and documentation copyright 2018 Orange SA. Code released under <a href=\"https://github.com/Orange-OpenSource/Orange-Boosted-Angular/blob/master/LICENSE\">the MIT license</a>. Docs released under <a href=\"https://github.com/Orange-OpenSource/Orange-Boosted-Angular/blob/master/docs/LICENSE\">Creative Commons Attribution</a>.\r\n    </p>\r\n</div>\r\n"

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocsComponent = /** @class */ (function () {
    function DocsComponent() {
        this.isCollapsed = true;
    }
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], DocsComponent.prototype, "component", void 0);
    DocsComponent = __decorate([
        core_1.Component({
            selector: 'docs-wrapper',
            template: __webpack_require__(519)
        })
    ], DocsComponent);
    return DocsComponent;
}());
exports.DocsComponent = DocsComponent;


/***/ }),
/* 519 */
/***/ (function(module, exports) {

module.exports = "<div class=\"container\">\r\n    <button type=\"button\" class=\"btn btn-outline-secondary mt-3 d-md-none\" (click)=\"isCollapsed = !isCollapsed\"\r\n    [attr.aria-expanded]=\"!isCollapsed\" aria-controls=\"collapseExample\">Menu</button>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\" id=\"component_nav\">\r\n            <div class=\"o-nav-local\" [ngbCollapse]=\"isCollapsed\" id=\"collapseExample\">\r\n                <nav>\r\n                    <ul class=\"nav\">\r\n                        <li class=\"nav-item d-none d-md-inline-block\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/home\">Home</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/accordion\">Accordion</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/alert\">Alert</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/carousel\">Carousel</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/collapse\">Collapse</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/dropdown\">Dropdown</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/modal\">Modal</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/o-navbar\">Navbar</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/pagination\">Pagination</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/popover\">Popover</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/progress\">Progress</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/o-scroll-top\">Scroll Top</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/swiper\">Swiper</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/o-switch\">Switch</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/tabs\">Tabs</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/o-toggle\">Toggle</a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/documentation/tooltip\">Tooltip</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-10 pl-md-5\">\r\n            <h2>{{ component }}</h2>\r\n            <p class=\"doc-ext-link\">Original component documentation can be found <a target=\"_blank\" href=\"https://ng-bootstrap.github.io/#/components/\">here.</a></p>\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var BoostwatchComponent = /** @class */ (function () {
    function BoostwatchComponent() {
    }
    BoostwatchComponent = __decorate([
        core_1.Component({
            selector: 'boostwatch',
            template: __webpack_require__(521)
        })
    ], BoostwatchComponent);
    return BoostwatchComponent;
}());
exports.BoostwatchComponent = BoostwatchComponent;


/***/ }),
/* 521 */
/***/ (function(module, exports) {

module.exports = "<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Collapse<a class=\"doc-link\" routerLink=\"/documentation/collapse\" title=\"go to collpase documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n            <demo-collapse></demo-collapse>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Accordions<a class=\"doc-link\" routerLink=\"/documentation/accordion\" title=\"go to accordion documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n            <demo-accordion></demo-accordion>\r\n        </div>\r\n    </div>\r\n\r\n    <h2>Modal<a class=\"doc-link\" routerLink=\"/documentation/modal\" title=\"go to modal documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n    <demo-modal></demo-modal>\r\n    <ng-template ngbModalContainer></ng-template>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Dropdown<a class=\"doc-link\" routerLink=\"/documentation/dropdown\" title=\"go to dropdown documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n            <demo-dropdown></demo-dropdown>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Tabs<a class=\"doc-link\" routerLink=\"/documentation/tabs\" title=\"go to tabs documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n            <demo-tabs></demo-tabs>\r\n\r\n            <h3>Without borders</h3>\r\n            <style>\r\n                :host /deep/ #no_borders .tab-content {\r\n                    border: none;\r\n                }\r\n            </style>\r\n            <demo-tabs id=\"no_borders\"></demo-tabs>\r\n        </div>\r\n    </div>\r\n\r\n    <h2>Pagination<a class=\"doc-link\" routerLink=\"/documentation/pagination\" title=\"go to pagination documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n    <demo-pagination></demo-pagination>\r\n\r\n    <h2>Tooltip<a class=\"doc-link\" routerLink=\"/documentation/tooltip\" title=\"go to tooltip documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n    <demo-tooltip></demo-tooltip>\r\n\r\n    <h2>Popover<a class=\"doc-link\" routerLink=\"/documentation/popover\" title=\"go to popover documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n    <demo-popover></demo-popover>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n        <h2>Alert<a class=\"doc-link\" routerLink=\"/documentation/alert\" title=\"go to alert documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n        <demo-alert></demo-alert>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Carousel<a class=\"doc-link\" routerLink=\"/documentation/carousel\" title=\"go to carousel documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n            <demo-carousel></demo-carousel>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Swiper<a class=\"doc-link\" routerLink=\"/documentation/swiper\" title=\"go to swiper documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n            <demo-swiper></demo-swiper>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Progress Bar<a class=\"doc-link\" routerLink=\"/documentation/progress\" title=\"go to progress documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n            <demo-progress-bar></demo-progress-bar>\r\n        </div>\r\n    </div>\r\n\r\n    <h2>Orange Switch<a class=\"doc-link\" routerLink=\"/documentation/o-switch\" title=\"go to orange switch documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n    <demo-o-switch></demo-o-switch>\r\n\r\n    <h2>Orange Toggle<a class=\"doc-link\" routerLink=\"/documentation/o-toggle\" title=\"go to orange toggle documentation page\"><span class=\"icon-Forward-curved-arrow\"></span></a></h2>\r\n    <demo-o-toggle></demo-o-toggle>\r\n</div>"

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoAccordion = /** @class */ (function () {
    function DemoAccordion() {
    }
    DemoAccordion = __decorate([
        core_1.Component({
            selector: 'demo-accordion',
            template: __webpack_require__(523)
        })
    ], DemoAccordion);
    return DemoAccordion;
}());
exports.DemoAccordion = DemoAccordion;


/***/ }),
/* 523 */
/***/ (function(module, exports) {

module.exports = "<ngb-accordion activeIds=\"ngb-panel-0\" [closeOthers]=\"true\">\r\n    <ngb-panel title=\"Panel 1\">\r\n        <ng-template ngbPanelContent>\r\n            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n            labore sustainable VHS.\r\n        </ng-template>\r\n    </ngb-panel>\r\n    <ngb-panel title=\"Panel 2\">\r\n        <ng-template ngbPanelContent>\r\n            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n            labore sustainable VHS.\r\n        </ng-template>\r\n    </ngb-panel>\r\n    <ngb-panel title=\"Panel 3\">\r\n        <ng-template ngbPanelContent>\r\n            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n            labore sustainable VHS.\r\n        </ng-template>\r\n    </ngb-panel>\r\n</ngb-accordion>"

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var ng_bootstrap_1 = __webpack_require__(477);
var DemoModal = /** @class */ (function () {
    function DemoModal(modalService) {
        this.modalService = modalService;
    }
    DemoModal.prototype.open = function (content) {
        this.modalService.open(content);
    };
    DemoModal = __decorate([
        core_1.Component({
            selector: 'demo-modal',
            template: __webpack_require__(525)
        }),
        __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal])
    ], DemoModal);
    return DemoModal;
}());
exports.DemoModal = DemoModal;


/***/ }),
/* 525 */
/***/ (function(module, exports) {

module.exports = "<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Modal title</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p>One fine body&hellip;</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"c('Close click')\">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<button class=\"btn btn btn-primary\" (click)=\"open(content)\">Open modal</button>"

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoTabs = /** @class */ (function () {
    function DemoTabs() {
    }
    DemoTabs = __decorate([
        core_1.Component({
            selector: 'demo-tabs',
            template: __webpack_require__(527)
        })
    ], DemoTabs);
    return DemoTabs;
}());
exports.DemoTabs = DemoTabs;


/***/ }),
/* 527 */
/***/ (function(module, exports) {

module.exports = "<ngb-tabset>\r\n    <ngb-tab title=\"Home\">\r\n        <ng-template ngbTabContent>\r\n        <p>Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth\r\n        master cleanse. Mustache cliche tempor, williamsburg carles vegan helvetica. Reprehenderit butcher retro keffiyeh\r\n        dreamcatcher synth. Cosby sweater eu banh mi, qui irure terry richardson ex squid. Aliquip placeat salvia cillum\r\n        iphone. Seitan aliquip quis cardigan american apparel, butcher voluptate nisi qui.</p>\r\n        </ng-template>\r\n    </ngb-tab>\r\n    <ngb-tab title=\"Profile\">\r\n        <ng-template ngbTabContent>\r\n        <p>Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid. Exercitation +1 labore velit,\r\n           blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress,\r\n           commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic,\r\n           assumenda labore aesthetic magna delectus mollit.</p>\r\n        </ng-template>\r\n    </ngb-tab>\r\n    <ngb-tab title=\"Messages\">\r\n        <ng-template ngbTabContent>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In iaculis volutpat quam, non suscipit arcu accumsan at. Aliquam pellentesque. </p>\r\n        </ng-template>\r\n    </ngb-tab>\r\n</ngb-tabset>"

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoPagination = /** @class */ (function () {
    function DemoPagination() {
    }
    DemoPagination = __decorate([
        core_1.Component({
            selector: 'demo-pagination',
            template: __webpack_require__(529)
        })
    ], DemoPagination);
    return DemoPagination;
}());
exports.DemoPagination = DemoPagination;


/***/ }),
/* 529 */
/***/ (function(module, exports) {

module.exports = "<ngb-pagination [collectionSize]=\"5\" [pageSize]=\"1\" [page]=\"1\" [(page)]=\"page\"></ngb-pagination>"

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoTooltip = /** @class */ (function () {
    function DemoTooltip() {
    }
    DemoTooltip = __decorate([
        core_1.Component({
            selector: 'demo-tooltip',
            styles: ["\n    button {\n        margin-right: 0.5rem;\n    }\n    "],
            template: __webpack_require__(531)
        })
    ], DemoTooltip);
    return DemoTooltip;
}());
exports.DemoTooltip = DemoTooltip;


/***/ }),
/* 531 */
/***/ (function(module, exports) {

module.exports = "<button type=\"button\" class=\"btn btn-secondary\" placement=\"left\" ngbTooltip=\"Tooltip on left\">\r\nTooltip on left\r\n</button>\r\n<button type=\"button\" class=\"btn btn-secondary\" placement=\"top\" ngbTooltip=\"Tooltip on top\">\r\nTooltip on top\r\n</button>\r\n<button type=\"button\" class=\"btn btn-secondary\" placement=\"bottom\" ngbTooltip=\"Tooltip on bottom\">\r\nTooltip on bottom\r\n</button>\r\n<button type=\"button\" class=\"btn btn-secondary\" placement=\"right\" ngbTooltip=\"Tooltip on right\">\r\nTooltip on right\r\n</button>"

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoPopover = /** @class */ (function () {
    function DemoPopover() {
    }
    DemoPopover = __decorate([
        core_1.Component({
            selector: 'demo-popover',
            styles: ["\n    button {\n        margin-right: 0.5rem;\n    }\n    "],
            template: __webpack_require__(533)
        })
    ], DemoPopover);
    return DemoPopover;
}());
exports.DemoPopover = DemoPopover;


/***/ }),
/* 533 */
/***/ (function(module, exports) {

module.exports = "<button type=\"button\" class=\"btn btn-secondary\" placement=\"top\" #p=\"ngbPopover\" (document:click)=\"p.close()\" (click)=\"$event.stopPropagation()\" ngbPopover=\"Now click outside to close me !\" popoverTitle=\"Popover on top\">\r\nPopover on top\r\n</button>\r\n\r\n<button type=\"button\" class=\"btn btn-secondary\" placement=\"bottom\" ngbPopover=\"You can't close me by clicking outside, sorry.\" popoverTitle=\"Popover on bottom\">\r\nPopover on bottom\r\n</button>\r\n\r\n<button type=\"button\" class=\"btn btn-secondary\" placement=\"left\" ngbPopover=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" popoverTitle=\"Popover on left\">\r\nPopover on left\r\n</button>\r\n\r\n<button type=\"button\" class=\"btn btn-secondary\" placement=\"right\" ngbPopover=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" popoverTitle=\"Popover on right\">\r\nPopover on right\r\n</button>"

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoAlert = /** @class */ (function () {
    function DemoAlert() {
        this.alerts = [];
        this.backup = [];
        this.alerts.push({
            id: 1,
            type: 'success',
            message: 'This is an success alert',
        }, {
            id: 2,
            type: 'info',
            message: 'This is an info alert',
        }, {
            id: 3,
            type: 'warning',
            message: 'This is a warning alert',
        }, {
            id: 4,
            type: 'danger',
            message: 'This is a danger alert',
        });
        this.backup = this.alerts.map(function (alert) { return Object.assign({}, alert); });
    }
    DemoAlert.prototype.closeAlert = function (alert) {
        var index = this.alerts.indexOf(alert);
        this.alerts.splice(index, 1);
    };
    DemoAlert.prototype.reset = function () {
        this.alerts = this.backup.map(function (alert) { return Object.assign({}, alert); });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], DemoAlert.prototype, "alerts", void 0);
    DemoAlert = __decorate([
        core_1.Component({
            selector: 'demo-alert',
            template: __webpack_require__(535)
        }),
        __metadata("design:paramtypes", [])
    ], DemoAlert);
    return DemoAlert;
}());
exports.DemoAlert = DemoAlert;


/***/ }),
/* 535 */
/***/ (function(module, exports) {

module.exports = "<p *ngFor=\"let alert of alerts\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlert(alert)\">{{ alert.message }}</ngb-alert>\r\n</p>\r\n<p>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"reset()\">Reset</button>\r\n</p>"

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoCarousel = /** @class */ (function () {
    function DemoCarousel() {
    }
    DemoCarousel = __decorate([
        core_1.Component({
            selector: 'demo-carousel',
            template: __webpack_require__(537)
        })
    ], DemoCarousel);
    return DemoCarousel;
}());
exports.DemoCarousel = DemoCarousel;


/***/ }),
/* 537 */
/***/ (function(module, exports) {

module.exports = "<ngb-carousel [interval]=\"false\" [wrap]=\"false\">\r\n    <ng-template ngbSlide>\r\n        <img src=\"https://dummyimage.com/600x400/cccccc/000000\" alt=\"Random first slide\">\r\n        <div class=\"carousel-caption\">\r\n        <h3>First slide label</h3>\r\n        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template ngbSlide>\r\n        <img src=\"https://dummyimage.com/600x400/cccccc/000000\" alt=\"Random second slide\">\r\n        <div class=\"carousel-caption\">\r\n        <h3>Second slide label</h3>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template ngbSlide>\r\n        <img src=\"https://dummyimage.com/600x400/cccccc/000000\" alt=\"Random third slide\">\r\n        <div class=\"carousel-caption\">\r\n        <h3>Third slide label</h3>\r\n        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n        </div>\r\n    </ng-template>\r\n</ngb-carousel>"

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoCollapse = /** @class */ (function () {
    function DemoCollapse() {
    }
    DemoCollapse = __decorate([
        core_1.Component({
            selector: 'demo-collapse',
            template: __webpack_require__(539)
        })
    ], DemoCollapse);
    return DemoCollapse;
}());
exports.DemoCollapse = DemoCollapse;


/***/ }),
/* 539 */
/***/ (function(module, exports) {

module.exports = "<p>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"isCollapsed = !isCollapsed\" [attr.aria-expanded]=\"!isCollapsed\" [attr.aria-controls]=\"'collapse1'\">Toggle</button>\r\n</p>\r\n<div [ngbCollapse]=\"isCollapsed\" id=\"collapse1\">\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      You can collapse this card by clicking Toggle\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoProgressBar = /** @class */ (function () {
    function DemoProgressBar() {
    }
    DemoProgressBar = __decorate([
        core_1.Component({
            selector: 'demo-progress-bar',
            styles: ["\n    >>> .progress {\n      margin-top: 1rem;\n    }\n  "],
            template: __webpack_require__(541)
        })
    ], DemoProgressBar);
    return DemoProgressBar;
}());
exports.DemoProgressBar = DemoProgressBar;


/***/ }),
/* 541 */
/***/ (function(module, exports) {

module.exports = "<ngb-progressbar type=\"default\" [value]=\"90\"></ngb-progressbar>\r\n<ngb-progressbar type=\"success\" [value]=\"25\"></ngb-progressbar>\r\n<ngb-progressbar type=\"info\" [value]=\"50\"></ngb-progressbar>\r\n<ngb-progressbar type=\"warning\" [value]=\"75\"></ngb-progressbar>\r\n<ngb-progressbar type=\"danger\" [value]=\"100\"></ngb-progressbar>\r\n"

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoDropdown = /** @class */ (function () {
    function DemoDropdown() {
    }
    DemoDropdown = __decorate([
        core_1.Component({
            selector: 'demo-dropdown',
            template: __webpack_require__(543)
        })
    ], DemoDropdown);
    return DemoDropdown;
}());
exports.DemoDropdown = DemoDropdown;


/***/ }),
/* 543 */
/***/ (function(module, exports) {

module.exports = "<div ngbDropdown class=\"d-inline-block\">\r\n    <button class=\"btn btn-info\" id=\"dropdownMenu1\" ngbDropdownToggle>Toggle dropdown</button>\r\n    <div ngbDropdownMenu aria-labelledby=\"dropdownMenu1\">\r\n        <a class=\"dropdown-item\" href=\"#\">Action 1</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Another Action</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Something else is here</a>\r\n    </div>\r\n</div>"

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoOSwitch = /** @class */ (function () {
    function DemoOSwitch() {
    }
    DemoOSwitch = __decorate([
        core_1.Component({
            selector: 'demo-o-switch',
            styles: ["\n        label {\n            font-weight: bold;\n        }\n    "],
            template: __webpack_require__(545)
        })
    ], DemoOSwitch);
    return DemoOSwitch;
}());
exports.DemoOSwitch = DemoOSwitch;


/***/ }),
/* 545 */
/***/ (function(module, exports) {

module.exports = "<div class=\"container\">\r\n    <div class=\"form-group row\">\r\n        <label for=\"checkbox1\" class=\"col-form-label col-md-3 col-8\">Default</label>\r\n        <o-switch inputId=\"checkbox1\"></o-switch>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <label for=\"checkbox2\" class=\"col-form-label col-md-3 col-8\">Toggled on init</label>\r\n        <o-switch inputId=\"checkbox2\" toggled=\"true\"></o-switch>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <label for=\"checkbox3\" class=\"col-form-label col-md-3 col-8\">Rounded success variant</label>\r\n        <o-switch inputId=\"checkbox3\" toggled=\"true\" rounded=\"true\" successColor=\"true\" onLabel=\"On\" offLabel=\"Off\" customWidth=\"76px\"></o-switch>\r\n    </div>\r\n</div>"

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoOToggle = /** @class */ (function () {
    function DemoOToggle() {
        // define which radio is toggled on init
        this.model = 2;
        this.model2 = 1;
    }
    DemoOToggle = __decorate([
        core_1.Component({
            selector: 'demo-o-toggle',
            styles: ["\n        h4 {\n            margin-top: 2.5rem;\n        }\n    "],
            template: __webpack_require__(547)
        })
    ], DemoOToggle);
    return DemoOToggle;
}());
exports.DemoOToggle = DemoOToggle;


/***/ }),
/* 547 */
/***/ (function(module, exports) {

module.exports = "<div class=\"btn-group btn-group-toggle o-switch\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"model\">\r\n  <label ngbButtonLabel class=\"btn-secondary\">\r\n    <input ngbButton type=\"radio\" [value]=\"1\"> 1\r\n  </label>\r\n  <label ngbButtonLabel class=\"btn-secondary\">\r\n    <input ngbButton type=\"radio\" [value]=\"2\"> 2\r\n  </label>\r\n  <label ngbButtonLabel class=\"btn-secondary\">\r\n    <input ngbButton type=\"radio\" [value]=\"3\"> 3\r\n  </label>\r\n</div>\r\n\r\n<h4>Without Outline</h4>\r\n<div class=\"btn-group btn-group-toggle o-switch no-outline\" ngbRadioGroup name=\"radioBasic2\" [(ngModel)]=\"model2\">\r\n  <label ngbButtonLabel class=\"btn-secondary\">\r\n    <input ngbButton type=\"radio\" [value]=\"1\"> 1\r\n  </label>\r\n  <label ngbButtonLabel class=\"btn-secondary\">\r\n    <input ngbButton type=\"radio\" [value]=\"2\"> 2\r\n  </label>\r\n  <label ngbButtonLabel class=\"btn-secondary\">\r\n    <input ngbButton type=\"radio\" [value]=\"3\"> 3\r\n  </label>\r\n</div>"

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoSwiper = /** @class */ (function () {
    function DemoSwiper() {
        this.example1SwipeOptions = {
            slidesPerView: 1,
            loop: false,
            a11y: true,
            keyboard: {
                enabled: true,
                onlyInViewport: false
            },
            pagination: {
                el: '.swiper-pagination',
                type: 'bullets',
                clickable: true
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            }
        };
    }
    DemoSwiper = __decorate([
        core_1.Component({
            selector: 'demo-swiper',
            styles: ["\n        >>> .swiper-container {\n            width: 37.5rem;\n            margin-left: 0;\n        }\n    "],
            template: __webpack_require__(549)
        }),
        __metadata("design:paramtypes", [])
    ], DemoSwiper);
    return DemoSwiper;
}());
exports.DemoSwiper = DemoSwiper;


/***/ }),
/* 549 */
/***/ (function(module, exports) {

module.exports = "<o-carousel-container [options]=\"example1SwipeOptions\">\r\n  <o-carousel-slide>\r\n    <img alt=\"Random first slide\" src=\"https://dummyimage.com/600x400/cccccc/000000&text=slide+1\">\r\n  </o-carousel-slide>\r\n  <o-carousel-slide>\r\n    <img alt=\"Random first slide\" src=\"https://dummyimage.com/600x400/cccccc/000000&text=slide+2\">\r\n    </o-carousel-slide>\r\n  <o-carousel-slide>\r\n    <img alt=\"Random first slide\" src=\"https://dummyimage.com/600x400/cccccc/000000&text=slide+3\">\r\n  </o-carousel-slide>\r\n  <o-carousel-slide>\r\n    <img alt=\"Random first slide\" src=\"https://dummyimage.com/600x400/cccccc/000000&text=slide+4\">\r\n  </o-carousel-slide>\r\n  <o-carousel-slide>\r\n    <img alt=\"Random first slide\" src=\"https://dummyimage.com/600x400/cccccc/000000&text=slide+5\">\r\n  </o-carousel-slide>\r\n</o-carousel-container>\r\n\r\n"

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DemoONavbar = /** @class */ (function () {
    function DemoONavbar() {
    }
    DemoONavbar = __decorate([
        core_1.Component({
            selector: 'demo-o-navbar',
            template: __webpack_require__(551)
        })
    ], DemoONavbar);
    return DemoONavbar;
}());
exports.DemoONavbar = DemoONavbar;


/***/ }),
/* 551 */
/***/ (function(module, exports) {

module.exports = "<o-navbar homeRoute=\"/start\" breakpoint=\"sm\" brandPath=\"assets/img/orange-logo.jpg\" brandLabel=\"Back to home page\">\r\n     <li o-nav-link route=\"/documentation\">Getting started</li>\r\n\r\n     <li o-nav-link route=\"/start\" title=\"Shop\">\r\n        <span class=\"sr-only\">basket</span>\r\n        <span class=\"icon-buy\" aria-hidden=\"true\"></span>\r\n    </li>\r\n    <li ngbDropdown class=\"nav-item dropdown\">\r\n        <a class=\"nav-link\" id=\"dropdownBasic1\" ngbDropdownToggle>Contribute</a>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n            <a class=\"dropdown-item\" href=\"#\">Github</a>\r\n            <a class=\"dropdown-item\" href=\"#\">About Markdown</a>\r\n        </div>\r\n    </li>\r\n\r\n    <li class=\"nav-item\"><a href=\"http://orange.com\" class=\"nav-link\">External link</a></li>\r\n</o-navbar>"

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocAccordion = /** @class */ (function () {
    function DocAccordion() {
        this.demoSnippets = {
            markup: __webpack_require__(553),
            typescript: __webpack_require__(554)
        };
    }
    DocAccordion = __decorate([
        core_1.Component({
            selector: 'doc-accordion',
            template: "\n    <docs-wrapper component=\"Accordion\">\n      <h3>Demo</h3>\n      <demo-accordion></demo-accordion>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocAccordion);
    return DocAccordion;
}());
exports.DocAccordion = DocAccordion;


/***/ }),
/* 553 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-accordion</span> <span class=\"token attr-name\" >activeIds</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>ngb-panel-0<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[closeOthers]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>true<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-panel</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Panel 1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbPanelContent</span><span class=\"token punctuation\" >></span></span>\r\n            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n            labore sustainable VHS.\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-panel</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-panel</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Panel 2<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbPanelContent</span><span class=\"token punctuation\" >></span></span>\r\n            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n            labore sustainable VHS.\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-panel</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-panel</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Panel 3<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbPanelContent</span><span class=\"token punctuation\" >></span></span>\r\n            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\r\n            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\r\n            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica,\r\n            craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings\r\n            occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus\r\n            labore sustainable VHS.\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-panel</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-accordion</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 554 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n  selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-accordion'</span><span class=\"token punctuation\" >,</span>\r\n  template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./accordion.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoAccordion</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocModal = /** @class */ (function () {
    function DocModal() {
        this.demoSnippets = {
            markup: __webpack_require__(556),
            typescript: __webpack_require__(557)
        };
    }
    DocModal = __decorate([
        core_1.Component({
            selector: 'doc-modal',
            template: "\n    <docs-wrapper component=\"Modal\">\n      <h3>Demo</h3>\n      <demo-modal></demo-modal>\n      <ng-template ngbModalContainer></ng-template>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocModal);
    return DocModal;
}());
exports.DocModal = DocModal;


/***/ }),
/* 556 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >#content</span> <span class=\"token attr-name\" >let-c</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>close<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >let-d</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dismiss<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>modal-header<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>h4</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>modal-title<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Modal title<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>h4</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>close<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >aria-label</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Close<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >(click)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>d(<span class=\"token punctuation\" >'</span>Cross click<span class=\"token punctuation\" >'</span>)<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n            <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>span</span> <span class=\"token attr-name\" >aria-hidden</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>true<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token entity\" title=\"&times;\">&amp;times;</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>span</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>modal-body<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>One fine body<span class=\"token entity\" title=\"&hellip;\">&amp;hellip;</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>modal-footer<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >(click)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>c(<span class=\"token punctuation\" >'</span>Close click<span class=\"token punctuation\" >'</span>)<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Close<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn btn-primary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >(click)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>open(content)<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Open modal<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 557 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> NgbModal <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@ng-bootstrap/ng-bootstrap'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n  selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-modal'</span><span class=\"token punctuation\" >,</span>\r\n  template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./modal.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoModal</span> <span class=\"token punctuation\" >{</span>\r\n\r\n    <span class=\"token keyword\" >constructor</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >private</span> modalService<span class=\"token punctuation\" >:</span> NgbModal<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span>\r\n\r\n    <span class=\"token keyword\" >public</span> <span class=\"token function\" >open</span><span class=\"token punctuation\" >(</span>content<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\r\n        <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>modalService<span class=\"token punctuation\" >.</span><span class=\"token function\" >open</span><span class=\"token punctuation\" >(</span>content<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\r\n    <span class=\"token punctuation\" >}</span>\r\n\r\n<span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocDropdown = /** @class */ (function () {
    function DocDropdown() {
        this.demoSnippets = {
            markup: __webpack_require__(559),
            typescript: __webpack_require__(560)
        };
    }
    DocDropdown = __decorate([
        core_1.Component({
            selector: 'doc-dropdown',
            template: "\n    <docs-wrapper component=\"Dropdown\">\n      <h3>Demo</h3>\n      <demo-dropdown></demo-dropdown>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocDropdown);
    return DocDropdown;
}());
exports.DocDropdown = DocDropdown;


/***/ }),
/* 559 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >ngbDropdown</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>d-inline-block<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-info<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >id</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdownMenu1<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbDropdownToggle</span><span class=\"token punctuation\" >></span></span>Toggle dropdown<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >ngbDropdownMenu</span> <span class=\"token attr-name\" >aria-labelledby</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdownMenu1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>a</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdown-item<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >href</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>#<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Action 1<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>a</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>a</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdown-item<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >href</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>#<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Another Action<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>a</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>a</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdown-item<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >href</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>#<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Something else is here<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>a</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 560 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n  selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-dropdown'</span><span class=\"token punctuation\" >,</span>\r\n  template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./dropdown.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoDropdown</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocTabs = /** @class */ (function () {
    function DocTabs() {
        this.demoSnippets = {
            markup: __webpack_require__(562),
            typescript: __webpack_require__(563)
        };
    }
    DocTabs = __decorate([
        core_1.Component({
            selector: 'doc-tabs',
            template: "\n    <docs-wrapper component=\"Tabs\">\n        <h3>Demo</h3>\n        <demo-tabs></demo-tabs>\n        <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocTabs);
    return DocTabs;
}());
exports.DocTabs = DocTabs;


/***/ }),
/* 562 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-tabset</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-tab</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Home<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbTabContent</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth\r\n        master cleanse. Mustache cliche tempor, williamsburg carles vegan helvetica. Reprehenderit butcher retro keffiyeh\r\n        dreamcatcher synth. Cosby sweater eu banh mi, qui irure terry richardson ex squid. Aliquip placeat salvia cillum\r\n        iphone. Seitan aliquip quis cardigan american apparel, butcher voluptate nisi qui.<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-tab</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-tab</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Profile<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbTabContent</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid. Exercitation +1 labore velit,\r\n           blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress,\r\n           commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic,\r\n           assumenda labore aesthetic magna delectus mollit.<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-tab</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-tab</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Messages<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbTabContent</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In iaculis volutpat quam, non suscipit arcu accumsan at. Aliquam pellentesque. <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-tab</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-tabset</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 563 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n  selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-tabs'</span><span class=\"token punctuation\" >,</span>\r\n  template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./tabs.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoTabs</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocPagination = /** @class */ (function () {
    function DocPagination() {
        this.demoSnippets = {
            markup: __webpack_require__(565),
            typescript: __webpack_require__(566)
        };
    }
    DocPagination = __decorate([
        core_1.Component({
            selector: 'doc-pagination',
            template: "\n    <docs-wrapper component=\"Pagination\">\n        <h3>Demo</h3>\n        <demo-pagination></demo-pagination>\n        <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocPagination);
    return DocPagination;
}());
exports.DocPagination = DocPagination;


/***/ }),
/* 565 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-pagination</span> <span class=\"token attr-name\" >[collectionSize]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>5<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[pageSize]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>1<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[page]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>1<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[(page)]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>page<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-pagination</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 566 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-pagination'</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./pagination.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoPagination</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocTooltip = /** @class */ (function () {
    function DocTooltip() {
        this.demoSnippets = {
            markup: __webpack_require__(568),
            typescript: __webpack_require__(569)
        };
    }
    DocTooltip = __decorate([
        core_1.Component({
            selector: 'doc-tooltip',
            template: "\n    <docs-wrapper component=\"Tooltip\">\n        <h3>Demo</h3>\n        <demo-tooltip></demo-tooltip>\n        <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocTooltip);
    return DocTooltip;
}());
exports.DocTooltip = DocTooltip;


/***/ }),
/* 568 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>left<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbTooltip</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Tooltip on left<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nTooltip on left\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>top<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbTooltip</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Tooltip on top<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nTooltip on top\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>bottom<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbTooltip</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Tooltip on bottom<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nTooltip on bottom\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>right<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbTooltip</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Tooltip on right<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nTooltip on right\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 569 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-tooltip'</span><span class=\"token punctuation\" >,</span>\r\n    styles<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token template-string\" ><span class=\"token string\" >`\r\n    button {\r\n        margin-right: 0.5rem;\r\n    }\r\n    `</span></span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./tooltip.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoTooltip</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocPopover = /** @class */ (function () {
    function DocPopover() {
        this.docContent = __webpack_require__(571);
        this.demoSnippets = {
            markup: __webpack_require__(572),
            typescript: __webpack_require__(573)
        };
    }
    DocPopover = __decorate([
        core_1.Component({
            selector: 'doc-popover',
            styles: ["\n    p {\n      margin-top: 1rem;\n    }\n\n    demo-popover + h3 {\n      margin-top: 1.25rem;\n    }\n\n    code span {\n      font-weight: bold;\n    }\n  "],
            template: "\n    <docs-wrapper component=\"Popover\">\n        <h3>Demo</h3>\n        <demo-popover></demo-popover>\n        <h3>Usage</h3>\n        <div [innerHtml]=docContent></div>\n        <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocPopover);
    return DocPopover;
}());
exports.DocPopover = DocPopover;


/***/ }),
/* 571 */
/***/ (function(module, exports) {

module.exports = "<p>By default a popover is closed by clicking on its trigger element.\nTo close by clicking outside you&#39;ll have to use custom directives on the trigger element :</p>\n<pre><code class=\"lang-html\">&lt;span #p=&quot;ngbPopover&quot; (document:click)=&quot;p.close()&quot; (click)=&quot;$event.stopPropagation()&quot;&gt;&lt;/span&gt;\n</code></pre>\n";

/***/ }),
/* 572 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>top<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >#p</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>ngbPopover<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" ><span class=\"token namespace\" >(document:</span>click)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>p.close()<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >(click)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>$event.stopPropagation()<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbPopover</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Now click outside to close me !<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >popoverTitle</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Popover on top<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nPopover on top\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>bottom<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbPopover</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>You can<span class=\"token punctuation\" >'</span>t close me by clicking outside, sorry.<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >popoverTitle</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Popover on bottom<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nPopover on bottom\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>left<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbPopover</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >popoverTitle</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Popover on left<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nPopover on left\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-secondary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >placement</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>right<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbPopover</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >popoverTitle</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Popover on right<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\nPopover on right\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 573 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@Component <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-popover'</span><span class=\"token punctuation\" >,</span>\r\n    styles<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token template-string\" ><span class=\"token string\" >`\r\n    button {\r\n        margin-right: 0.5rem;\r\n    }\r\n    `</span></span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./popover.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoPopover</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocAlert = /** @class */ (function () {
    function DocAlert() {
        this.demoSnippets = {
            markup: __webpack_require__(575),
            typescript: __webpack_require__(576)
        };
    }
    DocAlert = __decorate([
        core_1.Component({
            selector: 'doc-alert',
            template: "\n    <docs-wrapper component=\"Alert\">\n        <h3>Demo</h3>\n        <demo-alert></demo-alert>\n        <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocAlert);
    return DocAlert;
}());
exports.DocAlert = DocAlert;


/***/ }),
/* 575 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span> <span class=\"token attr-name\" >*ngFor</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>let alert of alerts<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-alert</span> <span class=\"token attr-name\" >[type]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>alert.type<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >(close)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>closeAlert(alert)<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>{{ alert.message }}<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-alert</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-primary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >(click)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>reset()<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Reset<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 576 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component<span class=\"token punctuation\" >,</span> Input <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-alert'</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./alert.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoAlert</span> <span class=\"token punctuation\" >{</span>\r\n  @<span class=\"token function\" >Input</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\r\n  <span class=\"token keyword\" >public</span> alerts<span class=\"token punctuation\" >:</span> IAlert<span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span> <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\r\n  <span class=\"token keyword\" >private</span> backup<span class=\"token punctuation\" >:</span> IAlert<span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span> <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\r\n\r\n  <span class=\"token keyword\" >constructor</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\r\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>alerts<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n      id<span class=\"token punctuation\" >:</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >,</span>\r\n      type<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'success'</span><span class=\"token punctuation\" >,</span>\r\n      message<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'This is an success alert'</span><span class=\"token punctuation\" >,</span>\r\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >{</span>\r\n      id<span class=\"token punctuation\" >:</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >,</span>\r\n      type<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'info'</span><span class=\"token punctuation\" >,</span>\r\n      message<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'This is an info alert'</span><span class=\"token punctuation\" >,</span>\r\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >{</span>\r\n      id<span class=\"token punctuation\" >:</span> <span class=\"token number\" >3</span><span class=\"token punctuation\" >,</span>\r\n      type<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'warning'</span><span class=\"token punctuation\" >,</span>\r\n      message<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'This is a warning alert'</span><span class=\"token punctuation\" >,</span>\r\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >{</span>\r\n      id<span class=\"token punctuation\" >:</span> <span class=\"token number\" >4</span><span class=\"token punctuation\" >,</span>\r\n      type<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'danger'</span><span class=\"token punctuation\" >,</span>\r\n      message<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'This is a danger alert'</span><span class=\"token punctuation\" >,</span>\r\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\r\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>backup <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>alerts<span class=\"token punctuation\" >.</span><span class=\"token function\" >map</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>alert<span class=\"token punctuation\" >:</span> IAlert<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> Object<span class=\"token punctuation\" >.</span><span class=\"token function\" >assign</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> alert<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\r\n  <span class=\"token punctuation\" >}</span>\r\n\r\n  <span class=\"token keyword\" >public</span> <span class=\"token function\" >closeAlert</span><span class=\"token punctuation\" >(</span>alert<span class=\"token punctuation\" >:</span> IAlert<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\r\n    <span class=\"token keyword\" >const</span> index<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >number</span> <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>alerts<span class=\"token punctuation\" >.</span><span class=\"token function\" >indexOf</span><span class=\"token punctuation\" >(</span>alert<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\r\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>alerts<span class=\"token punctuation\" >.</span><span class=\"token function\" >splice</span><span class=\"token punctuation\" >(</span>index<span class=\"token punctuation\" >,</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\r\n  <span class=\"token punctuation\" >}</span>\r\n\r\n  <span class=\"token keyword\" >public</span> <span class=\"token function\" >reset</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\r\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>alerts <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>backup<span class=\"token punctuation\" >.</span><span class=\"token function\" >map</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>alert<span class=\"token punctuation\" >:</span> IAlert<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> Object<span class=\"token punctuation\" >.</span><span class=\"token function\" >assign</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> alert<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\r\n  <span class=\"token punctuation\" >}</span>\r\n<span class=\"token punctuation\" >}</span>\r\n\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >interface</span> <span class=\"token class-name\" >IAlert</span> <span class=\"token punctuation\" >{</span>\r\n  id<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >number</span><span class=\"token punctuation\" >;</span>\r\n  type<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >string</span><span class=\"token punctuation\" >;</span>\r\n  message<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >string</span><span class=\"token punctuation\" >;</span>\r\n<span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocCarousel = /** @class */ (function () {
    function DocCarousel() {
        this.demoSnippets = {
            markup: __webpack_require__(578),
            typescript: __webpack_require__(579)
        };
    }
    DocCarousel = __decorate([
        core_1.Component({
            selector: 'doc-carousel',
            template: "\n    <docs-wrapper component=\"Carousel\">\n        <div class=\"row\">\n            <div class=\"col-md-9\">\n                <h3>Demo</h3>\n                <demo-carousel></demo-carousel>\n                <code-box [snippets]=\"demoSnippets\"></code-box>\n            </div>\n        </div>\n    </docs-wrapper>\n  "
        })
    ], DocCarousel);
    return DocCarousel;
}());
exports.DocCarousel = DocCarousel;


/***/ }),
/* 578 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-carousel</span> <span class=\"token attr-name\" >[interval]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>false<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[wrap]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>false<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbSlide</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random first slide<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>carousel-caption<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>h3</span><span class=\"token punctuation\" >></span></span>First slide label<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>h3</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>Nulla vitae elit libero, a pharetra augue mollis interdum.<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbSlide</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random second slide<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>carousel-caption<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>h3</span><span class=\"token punctuation\" >></span></span>Second slide label<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>h3</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ng-template</span> <span class=\"token attr-name\" >ngbSlide</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random third slide<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>carousel-caption<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>h3</span><span class=\"token punctuation\" >></span></span>Third slide label<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>h3</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>Praesent commodo cursus magna, vel scelerisque nisl consectetur.<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ng-template</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-carousel</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 579 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component<span class=\"token punctuation\" >,</span> Input <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-carousel'</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./carousel.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoCarousel</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocSwiper = /** @class */ (function () {
    function DocSwiper() {
        this.docContent = __webpack_require__(581);
        this.demoSnippets = {
            markup: __webpack_require__(582),
            typescript: __webpack_require__(583)
        };
    }
    DocSwiper = __decorate([
        core_1.Component({
            selector: 'doc-swiper',
            styles: ["\n    demo-swiper + h3 {\n      margin-top: 1.25rem;\n    }\n  "],
            template: "\n    <docs-wrapper component=\"Swiper\">\n        <div class=\"row\">\n            <div class=\"col-md-9\">\n                <h3>Demo</h3>\n                <demo-swiper></demo-swiper>\n                <h3>Usage</h3>\n                <div [innerHtml]=docContent></div>\n                <code-box [snippets]=\"demoSnippets\"></code-box>\n            </div>\n        </div>\n    </docs-wrapper>\n  "
        })
    ], DocSwiper);
    return DocSwiper;
}());
exports.DocSwiper = DocSwiper;


/***/ }),
/* 581 */
/***/ (function(module, exports) {

module.exports = "<h4 id=\"third-party-dependency\">Third party dependency</h4>\n<p>Swiper component is an Angular based wrapper for the native javascript plugin <a href=\"http://idangero.us/swiper\">Swiper</a>.</p>\n<p>In order to use the wrapper correctly, please add the following dependencies into your projet.</p>\n<ul>\n<li><a href=\"https://github.com/nolimits4web/Swiper/blob/master/dist/css/swiper.css\">swiper.css</a> (make sure to add this before boosted css)</li>\n<li><a href=\"https://github.com/nolimits4web/Swiper/blob/master/dist/js/swiper.js\">swiper.js</a></li>\n</ul>\n";

/***/ }),
/* 582 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-carousel-container</span> <span class=\"token attr-name\" >[options]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>example1SwipeOptions<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random first slide<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000&amp;text<span class=\"token punctuation\" >=</span>slide+1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random first slide<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000&amp;text<span class=\"token punctuation\" >=</span>slide+2<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random first slide<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000&amp;text<span class=\"token punctuation\" >=</span>slide+3<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random first slide<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000&amp;text<span class=\"token punctuation\" >=</span>slide+4<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>img</span> <span class=\"token attr-name\" >alt</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Random first slide<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >src</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>https://dummyimage.com/600x400/cccccc/000000&amp;text<span class=\"token punctuation\" >=</span>slide+5<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-carousel-slide</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-carousel-container</span><span class=\"token punctuation\" >></span></span>\r\n\r\n"

/***/ }),
/* 583 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component<span class=\"token punctuation\" >,</span> ViewChild <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-swiper'</span><span class=\"token punctuation\" >,</span>\r\n    styles<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token template-string\" ><span class=\"token string\" >`\r\n        >>> .swiper-container {\r\n            width: 37.5rem;\r\n            margin-left: 0;\r\n        }\r\n    `</span></span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./swiper.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoSwiper</span> <span class=\"token punctuation\" >{</span>\r\n    example1SwipeOptions<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >any</span><span class=\"token punctuation\" >;</span>\r\n\r\n    <span class=\"token keyword\" >constructor</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\r\n        <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>example1SwipeOptions <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >{</span>\r\n        slidesPerView<span class=\"token punctuation\" >:</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >,</span>\r\n        loop<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >false</span><span class=\"token punctuation\" >,</span>\r\n        a11y<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >true</span><span class=\"token punctuation\" >,</span>\r\n        keyboard<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >{</span>\r\n            enabled<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >true</span><span class=\"token punctuation\" >,</span>\r\n            onlyInViewport<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >false</span>\r\n        <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\r\n        pagination<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >{</span>\r\n            el<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'.swiper-pagination'</span><span class=\"token punctuation\" >,</span>\r\n            type<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'bullets'</span><span class=\"token punctuation\" >,</span>\r\n            clickable<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >true</span>\r\n        <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\r\n        navigation<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >{</span>\r\n            nextEl<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'.swiper-button-next'</span><span class=\"token punctuation\" >,</span>\r\n            prevEl<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'.swiper-button-prev'</span><span class=\"token punctuation\" >,</span>\r\n        <span class=\"token punctuation\" >}</span>\r\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\r\n    <span class=\"token punctuation\" >}</span>\r\n<span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocCollapse = /** @class */ (function () {
    function DocCollapse() {
        this.demoSnippets = {
            markup: __webpack_require__(585),
            typescript: __webpack_require__(586)
        };
    }
    DocCollapse = __decorate([
        core_1.Component({
            selector: 'doc-collapse',
            template: "\n    <docs-wrapper component=\"Collapse\">\n      <h3>Demo</h3>\n      <demo-collapse></demo-collapse>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocCollapse);
    return DocCollapse;
}());
exports.DocCollapse = DocCollapse;


/***/ }),
/* 585 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>p</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>button</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>button<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn btn-primary<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >(click)</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>isCollapsed <span class=\"token punctuation\" >=</span> !isCollapsed<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[attr.aria-expanded]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>!isCollapsed<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[attr.aria-controls]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span><span class=\"token punctuation\" >'</span>collapse1<span class=\"token punctuation\" >'</span><span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Toggle<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>button</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>p</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >[ngbCollapse]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>isCollapsed<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >id</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>collapse1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>card<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>card-body<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n      You can collapse this card by clicking Toggle\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n"

/***/ }),
/* 586 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n  selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-collapse'</span><span class=\"token punctuation\" >,</span>\r\n  template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./collapse.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoCollapse</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocProgressBar = /** @class */ (function () {
    function DocProgressBar() {
        this.demoSnippets = {
            markup: __webpack_require__(588),
            typescript: __webpack_require__(589)
        };
    }
    DocProgressBar = __decorate([
        core_1.Component({
            selector: 'doc-progress-bar',
            template: "\n    <docs-wrapper component=\"Progress Bar\">\n      <h3>Demo</h3>\n      <demo-progress-bar></demo-progress-bar>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocProgressBar);
    return DocProgressBar;
}());
exports.DocProgressBar = DocProgressBar;


/***/ }),
/* 588 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-progressbar</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>default<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>90<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-progressbar</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-progressbar</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>success<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>25<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-progressbar</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-progressbar</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>info<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>50<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-progressbar</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-progressbar</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>warning<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>75<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-progressbar</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>ngb-progressbar</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>danger<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>100<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>ngb-progressbar</span><span class=\"token punctuation\" >></span></span>\r\n"

/***/ }),
/* 589 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n  selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-progress-bar'</span><span class=\"token punctuation\" >,</span>\r\n  styles<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token template-string\" ><span class=\"token string\" >`\r\n    >>> .progress {\r\n      margin-top: 1rem;\r\n    }\r\n  `</span></span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\r\n  template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./progress-bar.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoProgressBar</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>\r\n"

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocONavbar = /** @class */ (function () {
    function DocONavbar() {
        this.docContent = __webpack_require__(591);
        this.demoSnippets = {
            markup: __webpack_require__(592),
            typescript: __webpack_require__(593)
        };
    }
    DocONavbar = __decorate([
        core_1.Component({
            selector: 'doc-o-navbar',
            styles: ["\n    demo-o-navbar + h3 {\n      margin-top: 1.25rem;\n    }\n  "],
            template: "\n    <docs-wrapper component=\"Navbar\">\n      <h3>Demo</h3>\n      <demo-o-navbar></demo-o-navbar>\n      <h3>Usage</h3>\n      <div [innerHtml]=docContent></div>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocONavbar);
    return DocONavbar;
}());
exports.DocONavbar = DocONavbar;


/***/ }),
/* 591 */
/***/ (function(module, exports) {

module.exports = "<h4 id=\"onavbar\">ONavbar</h4>\n<p>Orange navbar component is designed to work with Angular <a href=\"https://angular.io/docs/ts/latest/guide/router.html\">router</a> module.</p>\n<p>Main element <code>&lt;o-navbar&gt;</code> accepts the following parameters :</p>\n<ul>\n<li><code>homeRoute</code> which is the default route of your application when user clicks the logo link.</li>\n<li><code>breakpoint</code> which is the bootstrap suffix for when the navbar must collapse to mobile view. Default value is <code>&quot;sm&quot;</code>.\nCheckout Boosted <a href=\"http://boosted.orange.com/v4-alpha/layout/responsive-utilities/#available-classes\">documentation</a> for supported values.</li>\n<li><code>brandPath</code> to specify path and file of the brand logo</li>\n<li><code>brandLabel</code> to specify alt text for image and link title at the same time</li>\n</ul>\n<p>There is three supported types of child elements to <code>&lt;o-navbar&gt;</code>. Each of them must use native <code>&lt;li&gt;</code> html element.</p>\n<ul>\n<li><code>o-nav-link</code> for application navigation using Angular router module.</li>\n<li><code>o-nav-menu</code> for dropdown menu in navbar.</li>\n<li>classic <code>&lt;a href class=&quot;nav-link&quot;&gt;&lt;/a&gt;</code> for external links.</li>\n</ul>\n<h5 id=\"onavlink\">ONavLink</h5>\n<p>This component has two parameters :</p>\n<ul>\n<li><code>route</code> which the targeted app route, same value as you would use in <code>[routerLink]</code>attribute.</li>\n<li><code>title</code> which acts as <code>&lt;a&gt;</code> tag attribute <code>title</code>. Can be handy when using icon nav links with no text in it. No provided value will not set the <code>title</code>attribute.</li>\n</ul>\n<h5 id=\"onavmenu\">ONavMenu</h5>\n<p>This component has one parameter :</p>\n<ul>\n<li><code>menuTitle</code> which is the dropdown title.</li>\n</ul>\n<p>The host tag <code>&lt;li&gt;</code> must include the <code>ngbDropdown</code> directive in order to allow dropdown behaviour. Dropdown menu content must be included inside <code>&lt;li&gt;</code> element. See Dropdown <a href=\"https://ng-bootstrap.github.io/#/components/dropdown\">documentation</a> for more information.</p>\n";

/***/ }),
/* 592 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-navbar</span> <span class=\"token attr-name\" >homeRoute</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>/start<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >breakpoint</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>sm<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >brandPath</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>assets/img/orange-logo.jpg<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >brandLabel</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Back to home page<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n     <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>li</span> <span class=\"token attr-name\" >o-nav-link</span> <span class=\"token attr-name\" >route</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>/documentation<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Getting started<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>li</span><span class=\"token punctuation\" >></span></span>\r\n\r\n     <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>li</span> <span class=\"token attr-name\" >o-nav-link</span> <span class=\"token attr-name\" >route</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>/start<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Shop<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>span</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>sr-only<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>basket<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>span</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>span</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>icon-buy<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >aria-hidden</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>true<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>span</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>li</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>li</span> <span class=\"token attr-name\" >ngbDropdown</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>nav-item dropdown<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>a</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>nav-link<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >id</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdownBasic1<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbDropdownToggle</span><span class=\"token punctuation\" >></span></span>Contribute<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>a</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >ngbDropdownMenu</span> <span class=\"token attr-name\" >aria-labelledby</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdownBasic1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n            <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>a</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdown-item<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >href</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>#<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Github<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>a</span><span class=\"token punctuation\" >></span></span>\r\n            <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>a</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>dropdown-item<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >href</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>#<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>About Markdown<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>a</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>li</span><span class=\"token punctuation\" >></span></span>\r\n\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>li</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>nav-item<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>a</span> <span class=\"token attr-name\" >href</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>http://orange.com<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>nav-link<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>External link<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>a</span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>li</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-navbar</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 593 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-o-navbar'</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./o-navbar.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoONavbar</span> <span class=\"token punctuation\" >{</span>\r\n<span class=\"token punctuation\" >}</span>"

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocOScrollTop = /** @class */ (function () {
    function DocOScrollTop() {
        this.docContent = __webpack_require__(595);
        this.demoSnippets = {
            markup: __webpack_require__(596)
        };
    }
    DocOScrollTop = __decorate([
        core_1.Component({
            selector: 'doc-o-scroll-top',
            styles: ["\n    .fake-block { height: 400rem; }\n  "],
            template: "\n    <docs-wrapper component=\"Scroll Top\">\n      <h3>Demo</h3>\n      <p>Scroll down this page to see a nice example.</p>\n      <h3>Usage</h3>\n      <div [innerHtml]=docContent></div>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n      <div class=\"fake-block\"></div>\n    </docs-wrapper>\n  "
        })
    ], DocOScrollTop);
    return DocOScrollTop;
}());
exports.DocOScrollTop = DocOScrollTop;


/***/ }),
/* 595 */
/***/ (function(module, exports) {

module.exports = "<p>The Orange Scroll Top component accepts one parameter :</p>\n<ul>\n<li><code>label</code> which is the text being displayed next to the top button and by screen reader as well.</li>\n</ul>\n";

/***/ }),
/* 596 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>scroll-top</span> <span class=\"token attr-name\" >label</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Back to top<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>scroll-top</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocOSwitch = /** @class */ (function () {
    function DocOSwitch() {
        this.docContent = __webpack_require__(598);
        this.demoSnippets = {
            markup: __webpack_require__(599),
            typescript: __webpack_require__(600)
        };
    }
    DocOSwitch = __decorate([
        core_1.Component({
            selector: 'doc-o-switch',
            template: "\n    <docs-wrapper component=\"Switch\">\n      <h3>Demo</h3>\n      <demo-o-switch></demo-o-switch>\n      <h3>Usage</h3>\n      <div [innerHtml]=docContent></div>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocOSwitch);
    return DocOSwitch;
}());
exports.DocOSwitch = DocOSwitch;


/***/ }),
/* 598 */
/***/ (function(module, exports) {

module.exports = "<p>Element <code>&lt;o-switch&gt;</code> accepts the following parameters :</p>\n<ul>\n<li><code>inputId</code> represents the element&#39;s <code>id</code> to be used with a <code>&lt;label&gt;</code> tag <code>for</code> attribute.</li>\n<li><code>toggled</code> represents the state of the switch. Can be set to <code>true</code> at initialisation.</li>\n<li><code>rounded</code> set to <code>true</code> to get the rounded variant of the switch.</li>\n<li><code>successColor</code>set to <code>true</code> to get the success color variant of the switch.</li>\n<li><code>onLabel</code> and <code>offLabel</code> can be set to custom labels.</li>\n<li><code>customWidth</code> be sure to set a correct width according to the lenghiest custom labels used. String format is same as you would use in CSS, i.e <code>4.75rem</code>, <code>auto</code>.</li>\n</ul>\n";

/***/ }),
/* 599 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>container<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>form-group row<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >for</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>checkbox1<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>col-form-label col-md-3 col-8<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Default<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-switch</span> <span class=\"token attr-name\" >inputId</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>checkbox1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-switch</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>form-group row<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >for</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>checkbox2<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>col-form-label col-md-3 col-8<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Toggled on init<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-switch</span> <span class=\"token attr-name\" >inputId</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>checkbox2<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >toggled</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>true<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-switch</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>form-group row<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >for</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>checkbox3<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>col-form-label col-md-3 col-8<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>Rounded success variant<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>o-switch</span> <span class=\"token attr-name\" >inputId</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>checkbox3<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >toggled</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>true<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >rounded</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>true<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >successColor</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>true<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >onLabel</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>On<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >offLabel</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Off<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >customWidth</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>76px<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>o-switch</span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 600 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-o-switch'</span><span class=\"token punctuation\" >,</span>\r\n    styles<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token template-string\" ><span class=\"token string\" >`\r\n        label {\r\n            font-weight: bold;\r\n        }\r\n    `</span></span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./o-switch.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoOSwitch</span> <span class=\"token punctuation\" >{</span> <span class=\"token punctuation\" >}</span>"

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var DocOToggle = /** @class */ (function () {
    function DocOToggle() {
        this.docContent = __webpack_require__(602);
        this.demoSnippets = {
            markup: __webpack_require__(603),
            typescript: __webpack_require__(604)
        };
    }
    DocOToggle = __decorate([
        core_1.Component({
            selector: 'doc-o-toggle',
            styles: ["\n    demo-o-toggle + h3 {\n      margin-top: 1.25rem;\n    }\n  "],
            template: "\n    <docs-wrapper component=\"Toggle\">\n      <h3>Demo</h3>\n      <demo-o-toggle></demo-o-toggle>\n      <h3>Usage</h3>\n      <div [innerHtml]=docContent></div>\n      <code-box [snippets]=\"demoSnippets\"></code-box>\n    </docs-wrapper>\n  "
        })
    ], DocOToggle);
    return DocOToggle;
}());
exports.DocOToggle = DocOToggle;


/***/ }),
/* 602 */
/***/ (function(module, exports) {

module.exports = "<p>This 3-way toggle example uses <code>ngbRadioGroup</code> directive. Check out ng-bootstrap <a href=\"https://ng-bootstrap.github.io/#/components/buttons\">documentation</a> for more information.</p>\n";

/***/ }),
/* 603 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-group btn-group-toggle o-switch<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbRadioGroup</span> <span class=\"token attr-name\" >name</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radioBasic<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[(ngModel)]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>model<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >ngbButtonLabel</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-secondary<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>input</span> <span class=\"token attr-name\" >ngbButton</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radio<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span> 1\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >ngbButtonLabel</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-secondary<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>input</span> <span class=\"token attr-name\" >ngbButton</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radio<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>2<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span> 2\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >ngbButtonLabel</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-secondary<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>input</span> <span class=\"token attr-name\" >ngbButton</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radio<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>3<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span> 3\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\r\n\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>h4</span><span class=\"token punctuation\" >></span></span>Without Outline<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>h4</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-group btn-group-toggle o-switch no-outline<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >ngbRadioGroup</span> <span class=\"token attr-name\" >name</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radioBasic2<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[(ngModel)]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>model2<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >ngbButtonLabel</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-secondary<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>input</span> <span class=\"token attr-name\" >ngbButton</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radio<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span> 1\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >ngbButtonLabel</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-secondary<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>input</span> <span class=\"token attr-name\" >ngbButton</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radio<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>2<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span> 2\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>label</span> <span class=\"token attr-name\" >ngbButtonLabel</span> <span class=\"token attr-name\" >class</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>btn-secondary<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\r\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>input</span> <span class=\"token attr-name\" >ngbButton</span> <span class=\"token attr-name\" >type</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>radio<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >[value]</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>3<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span> 3\r\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>label</span><span class=\"token punctuation\" >></span></span>\r\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>"

/***/ }),
/* 604 */
/***/ (function(module, exports) {

module.exports = "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Component <span class=\"token punctuation\" >}</span> from <span class=\"token string\" >'@angular/core'</span><span class=\"token punctuation\" >;</span>\r\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> FormsModule <span class=\"token punctuation\" >}</span>   from <span class=\"token string\" >'@angular/forms'</span><span class=\"token punctuation\" >;</span>\r\n\r\n@<span class=\"token function\" >Component</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\r\n    selector<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'demo-o-toggle'</span><span class=\"token punctuation\" >,</span>\r\n    styles<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token template-string\" ><span class=\"token string\" >`\r\n        h4 {\r\n            margin-top: 2.5rem;\r\n        }\r\n    `</span></span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\r\n    template<span class=\"token punctuation\" >:</span> <span class=\"token function\" >require</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'./o-toggle.component.html'</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\r\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >class</span> <span class=\"token class-name\" >DemoOToggle</span> <span class=\"token punctuation\" >{</span>\r\n    <span class=\"token comment\" spellcheck=\"true\">// define which radio is toggled on init</span>\r\n    model <span class=\"token operator\" >=</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >;</span>\r\n    model2 <span class=\"token operator\" >=</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\r\n<span class=\"token punctuation\" >}</span>"

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(266);
var CodeBox = /** @class */ (function () {
    function CodeBox() {
    }
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], CodeBox.prototype, "snippets", void 0);
    CodeBox = __decorate([
        core_1.Component({
            selector: 'code-box',
            styles: ["\n        h3 {\n            margin-top: 1.25rem;\n        }\n        .tab-content {\n            border: 0;\n            padding: 0;\n        }\n        :host {\n            display: block;\n            margin-bottom: 30px;\n        }\n    "],
            template: "\n        <h3 >Source</h3>\n        <ngb-tabset class=\"code-box\">\n        <ngb-tab title=\"HTML\" *ngIf=\"snippets.markup\">\n            <ng-template ngbTabContent>\n                <pre class=\"language-html\"><code class=\"language-html\" [innerHTML]=\"snippets.markup\"></code></pre>\n            </ng-template>\n        </ngb-tab>\n        <ngb-tab title=\"TypeScript\" *ngIf=\"snippets.typescript\">\n            <ng-template ngbTabContent>\n                <pre class=\"language-typescript\"><code class=\"language-typescript\" [innerHTML]=\"snippets.typescript\"></code></pre>\n            </ng-template>\n        </ngb-tab>\n    </ngb-tabset>\n    "
        })
    ], CodeBox);
    return CodeBox;
}());
exports.CodeBox = CodeBox;


/***/ })
/******/ ]);
//# sourceMappingURL=app.685c068f14989981d404.js.map