webpackJsonp([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports,"__esModule",{value:true});exports.ɵangular_packages_core_core_j=_iterableDiffersFactory;exports.ɵangular_packages_core_core_k=_keyValueDiffersFactory;exports.ɵangular_packages_core_core_l=_localeFactory;exports.ɵangular_packages_core_core_f=_appIdRandomProviderFactory;exports.ɵangular_packages_core_core_e=resolveReflectiveProviders;exports.ɵangular_packages_core_core_o=createScope;exports.ɵangular_packages_core_core_n=detectWTF;exports.ɵangular_packages_core_core_r=endTimeRange;exports.ɵangular_packages_core_core_p=leave;exports.ɵangular_packages_core_core_q=startTimeRange;exports.ɵangular_packages_core_core_v=getOrCreateChangeDetectorRef;exports.ɵangular_packages_core_core_x=getOrCreateContainerRef;exports.ɵangular_packages_core_core_w=getOrCreateInjectable;exports.ɵangular_packages_core_core_u=getOrCreateNodeInjector;exports.ɵangular_packages_core_core_y=getOrCreateTemplateRef;exports.ɵangular_packages_core_core_bb=bindingUpdated;exports.ɵangular_packages_core_core_bd=bindingUpdated2;exports.ɵangular_packages_core_core_be=bindingUpdated4;exports.ɵangular_packages_core_core_bc=checkAndUpdateBinding$1;exports.ɵangular_packages_core_core_ba=consumeBinding;exports.ɵangular_packages_core_core_z=getCreationMode;exports.ɵangular_packages_core_core_a=makeParamDecorator;exports.ɵangular_packages_core_core_b=makePropDecorator;exports.ɵangular_packages_core_core_s=_def;exports.createPlatform=createPlatform;exports.assertPlatform=assertPlatform;exports.destroyPlatform=destroyPlatform;exports.getPlatform=getPlatform;exports.enableProdMode=enableProdMode;exports.isDevMode=isDevMode;exports.createPlatformFactory=createPlatformFactory;exports.asNativeElements=asNativeElements;exports.getDebugNode=getDebugNode;exports.setTestabilityGetter=setTestabilityGetter;exports.defineInjectable=defineInjectable;exports.defineInjector=defineInjector;exports.forwardRef=forwardRef;exports.resolveForwardRef=resolveForwardRef;exports.ɵinject=exports.inject=inject;exports.createInjector=createInjector;exports.getModuleFactory=getModuleFactory;exports.ɵdevModeEqual=devModeEqual;exports.ɵisListLikeIterable=isListLikeIterable;exports.ɵisDefaultChangeDetectionStrategy=isDefaultChangeDetectionStrategy;exports.ɵsetCurrentInjector=setCurrentInjector;exports.ɵ_sanitizeHtml=_sanitizeHtml;exports.ɵ_sanitizeStyle=_sanitizeStyle;exports.ɵ_sanitizeUrl=_sanitizeUrl;exports.ɵlooseIdentical=looseIdentical;exports.ɵstringify=stringify;exports.ɵmakeDecorator=makeDecorator;exports.ɵisObservable=isObservable;exports.ɵisPromise=isPromise;exports.ɵclearOverrides=clearOverrides;exports.ɵoverrideComponentView=overrideComponentView;exports.ɵoverrideProvider=overrideProvider;exports.ɵdefineComponent=defineComponent;exports.ɵdefinePipe=definePipe;exports.ɵdetectChanges=detectChanges;exports.ɵrenderComponent=renderComponent;exports.ɵdirectiveInject=directiveInject;exports.ɵinjectTemplateRef=injectTemplateRef;exports.ɵinjectViewContainerRef=injectViewContainerRef;exports.ɵinjectChangeDetectorRef=injectChangeDetectorRef;exports.ɵinjectAttribute=injectAttribute;exports.ɵPublicFeature=PublicFeature;exports.ɵNgOnChangesFeature=NgOnChangesFeature;exports.ɵmarkDirty=markDirty;exports.ɵC=container;exports.ɵE=elementStart;exports.ɵL=listener;exports.ɵT=text;exports.ɵV=embeddedViewStart;exports.ɵQ=query;exports.ɵd=loadDirective;exports.ɵP=projection;exports.ɵb=bind;exports.ɵi1=interpolation1;exports.ɵi2=interpolation2;exports.ɵi3=interpolation3;exports.ɵi4=interpolation4;exports.ɵi5=interpolation5;exports.ɵi6=interpolation6;exports.ɵi7=interpolation7;exports.ɵi8=interpolation8;exports.ɵiV=interpolationV;exports.ɵpb1=pipeBind1;exports.ɵpb2=pipeBind2;exports.ɵpb3=pipeBind3;exports.ɵpb4=pipeBind4;exports.ɵpbV=pipeBindV;exports.ɵf0=pureFunction0;exports.ɵf1=pureFunction1;exports.ɵf2=pureFunction2;exports.ɵf3=pureFunction3;exports.ɵf4=pureFunction4;exports.ɵf5=pureFunction5;exports.ɵf6=pureFunction6;exports.ɵf7=pureFunction7;exports.ɵf8=pureFunction8;exports.ɵfV=pureFunctionV;exports.ɵcR=containerRefreshStart;exports.ɵcr=containerRefreshEnd;exports.ɵqR=queryRefresh;exports.ɵe=elementEnd;exports.ɵp=elementProperty;exports.ɵpD=projectionDef;exports.ɵa=elementAttribute;exports.ɵs=elementStyle;exports.ɵsn=elementStyleNamed;exports.ɵk=elementClass;exports.ɵkn=elementClassNamed;exports.ɵt=textBinding;exports.ɵv=embeddedViewEnd;exports.ɵst=store;exports.ɵld=load;exports.ɵPp=pipe;exports.ɵwhenRendered=whenRendered;exports.ɵbypassSanitizationTrustHtml=bypassSanitizationTrustHtml;exports.ɵbypassSanitizationTrustStyle=bypassSanitizationTrustStyle;exports.ɵbypassSanitizationTrustScript=bypassSanitizationTrustScript;exports.ɵbypassSanitizationTrustUrl=bypassSanitizationTrustUrl;exports.ɵbypassSanitizationTrustResourceUrl=bypassSanitizationTrustResourceUrl;exports.ɵsanitizeHtml=sanitizeHtml;exports.ɵsanitizeStyle=sanitizeStyle;exports.ɵsanitizeUrl=sanitizeUrl;exports.ɵsanitizeResourceUrl=sanitizeResourceUrl;exports.ɵregisterModuleFactory=registerModuleFactory;exports.ɵand=anchorDef;exports.ɵccf=createComponentFactory;exports.ɵcmf=createNgModuleFactory;exports.ɵcrt=createRendererType2;exports.ɵdid=directiveDef;exports.ɵeld=elementDef;exports.ɵelementEventFullName=elementEventFullName;exports.ɵgetComponentViewDefinitionFactory=getComponentViewDefinitionFactory;exports.ɵinlineInterpolate=inlineInterpolate;exports.ɵinterpolate=interpolate;exports.ɵmod=moduleDef;exports.ɵmpd=moduleProvideDef;exports.ɵncd=ngContentDef;exports.ɵnov=nodeValue;exports.ɵpid=pipeDef;exports.ɵprd=providerDef;exports.ɵpad=pureArrayDef;exports.ɵpod=pureObjectDef;exports.ɵppd=purePipeDef;exports.ɵqud=queryDef;exports.ɵted=textDef;exports.ɵunv=unwrapValue;exports.ɵvid=viewDef;exports.WrappedValue=exports.SimpleChange=exports.KeyValueDiffers=exports.IterableDiffers=exports.DefaultIterableDiffer=exports.ChangeDetectorRef=exports.ChangeDetectionStrategy=exports.ViewRef=exports.EmbeddedViewRef=exports.ViewContainerRef=exports.TemplateRef=exports.SystemJsNgModuleLoaderConfig=exports.SystemJsNgModuleLoader=exports.QueryList=exports.NgModuleFactoryLoader=exports.NgModuleRef=exports.NgModuleFactory=exports.ElementRef=exports.ComponentFactoryResolver=exports.ComponentRef=exports.ɵComponentFactory=exports.ComponentFactory=exports.ModuleWithComponentFactories=exports.CompilerFactory=exports.Compiler=exports.COMPILER_OPTIONS=exports.RootRenderer=exports.RendererStyleFlags2=exports.RendererFactory2=exports.Renderer2=exports.Renderer=exports.RenderComponentType=exports.NgZone=exports.Host=exports.SkipSelf=exports.Self=exports.Optional=exports.Inject=exports.InjectionToken=exports.ReflectiveKey=exports.ResolvedReflectiveFactory=exports.ReflectiveInjector=exports.Injector=exports.INJECTOR=exports.Injectable=exports.VERSION=exports.Version=exports.ViewEncapsulation=exports.NgModule=exports.NO_ERRORS_SCHEMA=exports.CUSTOM_ELEMENTS_SCHEMA=exports.Pipe=exports.Output=exports.Input=exports.HostListener=exports.HostBinding=exports.Directive=exports.Component=exports.ViewChildren=exports.ViewChild=exports.Query=exports.ContentChildren=exports.ContentChild=exports.Attribute=exports.ANALYZE_FOR_ENTRY_COMPONENTS=exports.SecurityContext=exports.Sanitizer=exports.ErrorHandler=exports.EventEmitter=exports.Type=exports.wtfEndTimeRange=exports.wtfStartTimeRange=exports.wtfLeave=exports.wtfCreateScope=exports.ApplicationModule=exports.MissingTranslationStrategy=exports.LOCALE_ID=exports.TRANSLATIONS_FORMAT=exports.TRANSLATIONS=exports.TestabilityRegistry=exports.Testability=exports.DebugNode=exports.DebugElement=exports.ApplicationInitStatus=exports.APP_INITIALIZER=exports.APP_BOOTSTRAP_LISTENER=exports.PLATFORM_ID=exports.PLATFORM_INITIALIZER=exports.PACKAGE_ROOT_URL=exports.APP_ID=exports.NgProbeToken=exports.ApplicationRef=exports.PlatformRef=exports.ɵangular_packages_core_core_t=exports.ɵangular_packages_core_core_m=exports.ɵangular_packages_core_core_d=exports.ɵangular_packages_core_core_c=exports.ɵangular_packages_core_core_i=exports.ɵangular_packages_core_core_h=exports.ɵangular_packages_core_core_g=void 0;exports.ɵEMPTY_MAP=exports.ɵEMPTY_ARRAY=exports.ɵNC=exports.ɵdefineDirective=exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR=exports.ɵglobal=exports.ɵRenderDebugInfo=exports.ɵReflectionCapabilities=exports.ɵCodegenComponentFactoryResolver=exports.ɵAPP_ROOT=exports.ɵConsole=exports.ɵChangeDetectorStatus=exports.ɵdefaultIterableDiffers=exports.ɵAPP_ID_RANDOM_PROVIDER=exports.ɵALLOW_MULTIPLE_PLATFORMS=exports.platformCore=void 0;var _tslib=__webpack_require__(1);var _rxjs=__webpack_require__(31);var _operators=__webpack_require__(33);function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and
 * in which injectors (if any) it will be available.
 *
 * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an
 * `InjectableType`.
 *
 * Options:
 * * `providedIn` determines which injectors will include the injectable, by either associating it
 *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be
 *   provided in the `'root'` injector, which will be the application-level injector in most apps.
 * * `factory` gives the zero argument function which will create an instance of the injectable.
 *   The factory can call `inject` to access the `Injector` and request injection of dependencies.
 *
 * @experimental
 */function defineInjectable(opts){return{providedIn:opts.providedIn||null,factory:opts.factory,value:undefined};}/**
 * Construct an `InjectorDef` which configures an injector.
 *
 * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an
 * `InjectorType`.
 *
 * Options:
 *
 * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to
 *   create the type must be provided. If that factory function needs to inject arguments, it can
 *   use the `inject` function.
 * * `providers`: an optional array of providers to add to the injector. Each provider must
 *   either have a factory or point to a type which has an `ngInjectableDef` static property (the
 *   type must be an `InjectableType`).
 * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s
 *   whose providers will also be added to the injector. Locally provided types will override
 *   providers from imports.
 *
 * @experimental
 */function defineInjector(options){return{factory:options.factory,providers:options.providers||[],imports:options.imports||[]};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Creates a token that can be used in a DI Provider.
 *
 * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a
 * runtime representation) such as when injecting an interface, callable type, array or
 * parametrized type.
 *
 * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by
 * the `Injector`. This provides additional level of type safety.
 *
 * ```
 * interface MyInterface {...}
 * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));
 * // myInterface is inferred to be MyInterface.
 * ```
 *
 * When creating an `InjectionToken`, you can optionally specify a factory function which returns
 * (possibly by creating) a default value of the parameterized type `T`. This sets up the
 * `InjectionToken` using this factory as a provider as if it was defined explicitly in the
 * application's root injector. If the factory function, which takes zero arguments, needs to inject
 * dependencies, it can do so using the `inject` function. See below for an example.
 *
 * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which
 * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As
 * mentioned above, `'root'` is the default value for `providedIn`.
 *
 * ### Example
 *
 * #### Tree-shakeable InjectionToken
 *
 * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}
 *
 * #### Plain InjectionToken
 *
 * {@example core/di/ts/injector_spec.ts region='InjectionToken'}
 *
 *
 */var InjectionToken=/** @class */function(){function InjectionToken(_desc,options){this._desc=_desc;/** @internal */this.ngMetadataName='InjectionToken';if(options!==undefined){this.ngInjectableDef=defineInjectable({providedIn:options.providedIn||'root',factory:options.factory});}else{this.ngInjectableDef=undefined;}}InjectionToken.prototype.toString=function(){return"InjectionToken "+this._desc;};return InjectionToken;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.InjectionToken=InjectionToken;var ANNOTATIONS='__annotations__';var PARAMETERS='__parameters__';var PROP_METADATA='__prop__metadata__';/**
 * @suppress {globalThis}
 */function makeDecorator(name,props,parentClass,chainFn,typeFn){var metaCtor=makeMetadataCtor(props);function DecoratorFactory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(this instanceof DecoratorFactory){metaCtor.call.apply(metaCtor,(0,_tslib.__spread)([this],args));return this;}var annotationInstance=new((_a=DecoratorFactory).bind.apply(_a,(0,_tslib.__spread)([void 0],args)))();var TypeDecorator=function TypeDecorator(cls){typeFn&&typeFn.apply(void 0,(0,_tslib.__spread)([cls],args));// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var annotations=cls.hasOwnProperty(ANNOTATIONS)?cls[ANNOTATIONS]:Object.defineProperty(cls,ANNOTATIONS,{value:[]})[ANNOTATIONS];annotations.push(annotationInstance);return cls;};if(chainFn)chainFn(TypeDecorator);return TypeDecorator;var _a;}if(parentClass){DecoratorFactory.prototype=Object.create(parentClass.prototype);}DecoratorFactory.prototype.ngMetadataName=name;DecoratorFactory.annotationCls=DecoratorFactory;return DecoratorFactory;}function makeMetadataCtor(props){return function ctor(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(props){var values=props.apply(void 0,(0,_tslib.__spread)(args));for(var propName in values){this[propName]=values[propName];}}};}function makeParamDecorator(name,props,parentClass){var metaCtor=makeMetadataCtor(props);function ParamDecoratorFactory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(this instanceof ParamDecoratorFactory){metaCtor.apply(this,args);return this;}var annotationInstance=new((_a=ParamDecoratorFactory).bind.apply(_a,(0,_tslib.__spread)([void 0],args)))();ParamDecorator.annotation=annotationInstance;return ParamDecorator;function ParamDecorator(cls,unusedKey,index){// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var parameters=cls.hasOwnProperty(PARAMETERS)?cls[PARAMETERS]:Object.defineProperty(cls,PARAMETERS,{value:[]})[PARAMETERS];// there might be gaps if some in between parameters do not have annotations.
// we pad with nulls.
while(parameters.length<=index){parameters.push(null);}(parameters[index]=parameters[index]||[]).push(annotationInstance);return cls;}var _a;}if(parentClass){ParamDecoratorFactory.prototype=Object.create(parentClass.prototype);}ParamDecoratorFactory.prototype.ngMetadataName=name;ParamDecoratorFactory.annotationCls=ParamDecoratorFactory;return ParamDecoratorFactory;}function makePropDecorator(name,props,parentClass){var metaCtor=makeMetadataCtor(props);function PropDecoratorFactory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(this instanceof PropDecoratorFactory){metaCtor.apply(this,args);return this;}var decoratorInstance=new((_a=PropDecoratorFactory).bind.apply(_a,(0,_tslib.__spread)([void 0],args)))();return function PropDecorator(target,name){var constructor=target.constructor;// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var meta=constructor.hasOwnProperty(PROP_METADATA)?constructor[PROP_METADATA]:Object.defineProperty(constructor,PROP_METADATA,{value:{}})[PROP_METADATA];meta[name]=meta.hasOwnProperty(name)&&meta[name]||[];meta[name].unshift(decoratorInstance);};var _a;}if(parentClass){PropDecoratorFactory.prototype=Object.create(parentClass.prototype);}PropDecoratorFactory.prototype.ngMetadataName=name;PropDecoratorFactory.annotationCls=PropDecoratorFactory;return PropDecoratorFactory;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This token can be used to create a virtual provider that will populate the
 * `entryComponents` fields of components and ng modules based on its `useValue`.
 * All components that are referenced in the `useValue` value (either directly
 * or in a nested array or map) will be added to the `entryComponents` property.
 *
 * ### Example
 * The following example shows how the router can populate the `entryComponents`
 * field of an NgModule based on the router configuration which refers
 * to components.
 *
 * ```typescript
 * // helper function inside the router
 * function provideRoutes(routes) {
 *   return [
 *     {provide: ROUTES, useValue: routes},
 *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}
 *   ];
 * }
 *
 * // user code
 * let routes = [
 *   {path: '/root', component: RootComp},
 *   {path: '/teams', component: TeamsComp}
 * ];
 *
 * @NgModule({
 *   providers: [provideRoutes(routes)]
 * })
 * class ModuleWithRoutes {}
 * ```
 *
 * @experimental
 */var ANALYZE_FOR_ENTRY_COMPONENTS=new InjectionToken('AnalyzeForEntryComponents');/**
 * Attribute decorator and metadata.
 *
 *
 * @Annotation
 */exports.ANALYZE_FOR_ENTRY_COMPONENTS=ANALYZE_FOR_ENTRY_COMPONENTS;var Attribute=makeParamDecorator('Attribute',function(attributeName){return{attributeName:attributeName};});/**
 * Base class for query metadata.
 *
 * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for
 * more information.
 *
 *
 */exports.Attribute=Attribute;var Query=/** @class */function(){function Query(){}return Query;}();/**
 * ContentChildren decorator and metadata.
 *
 *
 *  @Annotation
 */exports.Query=Query;var ContentChildren=makePropDecorator('ContentChildren',function(selector,data){if(data===void 0){data={};}return(0,_tslib.__assign)({selector:selector,first:false,isViewQuery:false,descendants:false},data);},Query);/**
 * ContentChild decorator and metadata.
 *
 *
 * @Annotation
 */exports.ContentChildren=ContentChildren;var ContentChild=makePropDecorator('ContentChild',function(selector,data){if(data===void 0){data={};}return(0,_tslib.__assign)({selector:selector,first:true,isViewQuery:false,descendants:true},data);},Query);/**
 * ViewChildren decorator and metadata.
 *
 *
 * @Annotation
 */exports.ContentChild=ContentChild;var ViewChildren=makePropDecorator('ViewChildren',function(selector,data){if(data===void 0){data={};}return(0,_tslib.__assign)({selector:selector,first:false,isViewQuery:true,descendants:true},data);},Query);/**
 * ViewChild decorator and metadata.
 *
 *
 * @Annotation
 */exports.ViewChildren=ViewChildren;var ViewChild=makePropDecorator('ViewChild',function(selector,data){return(0,_tslib.__assign)({selector:selector,first:true,isViewQuery:true,descendants:true},data);},Query);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Describes within the change detector which strategy will be used the next time change
 * detection is triggered.
 *
 */ /**
 * Describes within the change detector which strategy will be used the next time change
 * detection is triggered.
 *
 */exports.ViewChild=ViewChild;var ChangeDetectionStrategy;/**
 * Describes within the change detector which strategy will be used the next time change
 * detection is triggered.
 *
 */exports.ChangeDetectionStrategy=ChangeDetectionStrategy;(function(ChangeDetectionStrategy){/**
     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.
     */ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"]=0]="OnPush";/**
     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.
     */ChangeDetectionStrategy[ChangeDetectionStrategy["Default"]=1]="Default";})(ChangeDetectionStrategy||(exports.ChangeDetectionStrategy=ChangeDetectionStrategy={}));/**
 * Describes the status of the detector.
 */ /**
 * Describes the status of the detector.
 */var ChangeDetectorStatus;/**
 * Describes the status of the detector.
 */exports.ɵChangeDetectorStatus=ChangeDetectorStatus;(function(ChangeDetectorStatus){/**
     * `CheckOnce` means that after calling detectChanges the mode of the change detector
     * will become `Checked`.
     */ChangeDetectorStatus[ChangeDetectorStatus["CheckOnce"]=0]="CheckOnce";/**
     * `Checked` means that the change detector should be skipped until its mode changes to
     * `CheckOnce`.
     */ChangeDetectorStatus[ChangeDetectorStatus["Checked"]=1]="Checked";/**
     * `CheckAlways` means that after calling detectChanges the mode of the change detector
     * will remain `CheckAlways`.
     */ChangeDetectorStatus[ChangeDetectorStatus["CheckAlways"]=2]="CheckAlways";/**
     * `Detached` means that the change detector sub tree is not a part of the main tree and
     * should be skipped.
     */ChangeDetectorStatus[ChangeDetectorStatus["Detached"]=3]="Detached";/**
     * `Errored` means that the change detector encountered an error checking a binding
     * or calling a directive lifecycle method and is now in an inconsistent state. Change
     * detectors in this state will no longer detect changes.
     */ChangeDetectorStatus[ChangeDetectorStatus["Errored"]=4]="Errored";/**
     * `Destroyed` means that the change detector is destroyed.
     */ChangeDetectorStatus[ChangeDetectorStatus["Destroyed"]=5]="Destroyed";})(ChangeDetectorStatus||(exports.ɵChangeDetectorStatus=ChangeDetectorStatus={}));function isDefaultChangeDetectionStrategy(changeDetectionStrategy){return changeDetectionStrategy==null||changeDetectionStrategy===ChangeDetectionStrategy.Default;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Directive decorator and metadata.
 *
 *
 * @Annotation
 */var Directive=makeDecorator('Directive',function(dir){if(dir===void 0){dir={};}return dir;});/**
 * Component decorator and metadata.
 *
 *
 * @Annotation
 */exports.Directive=Directive;var Component=makeDecorator('Component',function(c){if(c===void 0){c={};}return(0,_tslib.__assign)({changeDetection:ChangeDetectionStrategy.Default},c);},Directive);/**
 * Pipe decorator and metadata.
 *
 * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe
 * class must also implement {@link PipeTransform} interface.
 *
 * To use the pipe include a reference to the pipe class in
 * {@link NgModule#declarations}.
 *
 *
 * @Annotation
 */exports.Component=Component;var Pipe=makeDecorator('Pipe',function(p){return(0,_tslib.__assign)({pure:true},p);});/**
 * Input decorator and metadata.
 *
 *
 * @Annotation
 */exports.Pipe=Pipe;var Input=makePropDecorator('Input',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});/**
 * Output decorator and metadata.
 *
 *
 * @Annotation
 */exports.Input=Input;var Output=makePropDecorator('Output',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});/**
 * HostBinding decorator and metadata.
 *
 *
 * @Annotation
 */exports.Output=Output;var HostBinding=makePropDecorator('HostBinding',function(hostPropertyName){return{hostPropertyName:hostPropertyName};});/**
 * HostListener decorator and metadata.
 *
 *
 * @Annotation
 */exports.HostBinding=HostBinding;var HostListener=makePropDecorator('HostListener',function(eventName,args){return{eventName:eventName,args:args};});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @description
 *
 * Represents a type that a Component or other object is instances of.
 *
 * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by
 * the `MyCustomComponent` constructor function.
 *
 *
 */exports.HostListener=HostListener;var Type=Function;exports.Type=Type;function isType(v){return typeof v==='function';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var __window=typeof window!=='undefined'&&window;var __self=typeof self!=='undefined'&&typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope&&self;var __global=typeof global!=='undefined'&&global;var _global=__window||__global||__self;exports.ɵglobal=_global;var promise=Promise.resolve(0);var _symbolIterator=null;function getSymbolIterator(){if(!_symbolIterator){var Symbol_1=_global['Symbol'];if(Symbol_1&&Symbol_1.iterator){_symbolIterator=Symbol_1.iterator;}else{// es6-shim specific logic
var keys=Object.getOwnPropertyNames(Map.prototype);for(var i=0;i<keys.length;++i){var key=keys[i];if(key!=='entries'&&key!=='size'&&Map.prototype[key]===Map.prototype['entries']){_symbolIterator=key;}}}}return _symbolIterator;}function scheduleMicroTask(fn){if(typeof Zone==='undefined'){// use promise to schedule microTask instead of use Zone
promise.then(function(){fn&&fn.apply(null,null);});}else{Zone.current.scheduleMicroTask('scheduleMicrotask',fn);}}// JS has NaN !== NaN
function looseIdentical(a,b){return a===b||typeof a==='number'&&typeof b==='number'&&isNaN(a)&&isNaN(b);}function stringify(token){if(typeof token==='string'){return token;}if(token instanceof Array){return'['+token.map(stringify).join(', ')+']';}if(token==null){return''+token;}if(token.overriddenName){return""+token.overriddenName;}if(token.name){return""+token.name;}var res=token.toString();if(res==null){return''+res;}var newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Attention: These regex has to hold even if the code is minified!
 */var DELEGATE_CTOR=/^function\s+\S+\(\)\s*{[\s\S]+\.apply\(this,\s*arguments\)/;var INHERITED_CLASS=/^class\s+[A-Za-z\d$_]*\s*extends\s+[A-Za-z\d$_]+\s*{/;var INHERITED_CLASS_WITH_CTOR=/^class\s+[A-Za-z\d$_]*\s*extends\s+[A-Za-z\d$_]+\s*{[\s\S]*constructor\s*\(/;var ReflectionCapabilities=/** @class */function(){function ReflectionCapabilities(reflect){this._reflect=reflect||_global['Reflect'];}ReflectionCapabilities.prototype.isReflectionEnabled=function(){return true;};ReflectionCapabilities.prototype.factory=function(t){return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return new(t.bind.apply(t,(0,_tslib.__spread)([void 0],args)))();};};/** @internal */ /** @internal */ReflectionCapabilities.prototype._zipTypesAndAnnotations=/** @internal */function(paramTypes,paramAnnotations){var result;if(typeof paramTypes==='undefined'){result=new Array(paramAnnotations.length);}else{result=new Array(paramTypes.length);}for(var i=0;i<result.length;i++){// TS outputs Object for parameters without types, while Traceur omits
// the annotations. For now we preserve the Traceur behavior to aid
// migration, but this can be revisited.
if(typeof paramTypes==='undefined'){result[i]=[];}else if(paramTypes[i]!=Object){result[i]=[paramTypes[i]];}else{result[i]=[];}if(paramAnnotations&&paramAnnotations[i]!=null){result[i]=result[i].concat(paramAnnotations[i]);}}return result;};ReflectionCapabilities.prototype._ownParameters=function(type,parentCtor){var typeStr=type.toString();// If we have no decorators, we only have function.length as metadata.
// In that case, to detect whether a child class declared an own constructor or not,
// we need to look inside of that constructor to check whether it is
// just calling the parent.
// This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439
// that sets 'design:paramtypes' to []
// if a class inherits from another class but has no ctor declared itself.
if(DELEGATE_CTOR.exec(typeStr)||INHERITED_CLASS.exec(typeStr)&&!INHERITED_CLASS_WITH_CTOR.exec(typeStr)){return null;}// Prefer the direct API.
if(type.parameters&&type.parameters!==parentCtor.parameters){return type.parameters;}// API of tsickle for lowering decorators to properties on the class.
var tsickleCtorParams=type.ctorParameters;if(tsickleCtorParams&&tsickleCtorParams!==parentCtor.ctorParameters){// Newer tsickle uses a function closure
// Retain the non-function case for compatibility with older tsickle
var ctorParameters=typeof tsickleCtorParams==='function'?tsickleCtorParams():tsickleCtorParams;var paramTypes_1=ctorParameters.map(function(ctorParam){return ctorParam&&ctorParam.type;});var paramAnnotations_1=ctorParameters.map(function(ctorParam){return ctorParam&&convertTsickleDecoratorIntoMetadata(ctorParam.decorators);});return this._zipTypesAndAnnotations(paramTypes_1,paramAnnotations_1);}// API for metadata created by invoking the decorators.
var paramAnnotations=type.hasOwnProperty(PARAMETERS)&&type[PARAMETERS];var paramTypes=this._reflect&&this._reflect.getOwnMetadata&&this._reflect.getOwnMetadata('design:paramtypes',type);if(paramTypes||paramAnnotations){return this._zipTypesAndAnnotations(paramTypes,paramAnnotations);}// If a class has no decorators, at least create metadata
// based on function.length.
// Note: We know that this is a real constructor as we checked
// the content of the constructor above.
return new Array(type.length).fill(undefined);};ReflectionCapabilities.prototype.parameters=function(type){// Note: only report metadata if we have at least one class decorator
// to stay in sync with the static reflector.
if(!isType(type)){return[];}var parentCtor=getParentCtor(type);var parameters=this._ownParameters(type,parentCtor);if(!parameters&&parentCtor!==Object){parameters=this.parameters(parentCtor);}return parameters||[];};ReflectionCapabilities.prototype._ownAnnotations=function(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.annotations&&typeOrFunc.annotations!==parentCtor.annotations){var annotations=typeOrFunc.annotations;if(typeof annotations==='function'&&annotations.annotations){annotations=annotations.annotations;}return annotations;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.decorators&&typeOrFunc.decorators!==parentCtor.decorators){return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);}// API for metadata created by invoking the decorators.
if(typeOrFunc.hasOwnProperty(ANNOTATIONS)){return typeOrFunc[ANNOTATIONS];}return null;};ReflectionCapabilities.prototype.annotations=function(typeOrFunc){if(!isType(typeOrFunc)){return[];}var parentCtor=getParentCtor(typeOrFunc);var ownAnnotations=this._ownAnnotations(typeOrFunc,parentCtor)||[];var parentAnnotations=parentCtor!==Object?this.annotations(parentCtor):[];return parentAnnotations.concat(ownAnnotations);};ReflectionCapabilities.prototype._ownPropMetadata=function(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.propMetadata&&typeOrFunc.propMetadata!==parentCtor.propMetadata){var propMetadata=typeOrFunc.propMetadata;if(typeof propMetadata==='function'&&propMetadata.propMetadata){propMetadata=propMetadata.propMetadata;}return propMetadata;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.propDecorators&&typeOrFunc.propDecorators!==parentCtor.propDecorators){var propDecorators_1=typeOrFunc.propDecorators;var propMetadata_1={};Object.keys(propDecorators_1).forEach(function(prop){propMetadata_1[prop]=convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);});return propMetadata_1;}// API for metadata created by invoking the decorators.
if(typeOrFunc.hasOwnProperty(PROP_METADATA)){return typeOrFunc[PROP_METADATA];}return null;};ReflectionCapabilities.prototype.propMetadata=function(typeOrFunc){if(!isType(typeOrFunc)){return{};}var parentCtor=getParentCtor(typeOrFunc);var propMetadata={};if(parentCtor!==Object){var parentPropMetadata_1=this.propMetadata(parentCtor);Object.keys(parentPropMetadata_1).forEach(function(propName){propMetadata[propName]=parentPropMetadata_1[propName];});}var ownPropMetadata=this._ownPropMetadata(typeOrFunc,parentCtor);if(ownPropMetadata){Object.keys(ownPropMetadata).forEach(function(propName){var decorators=[];if(propMetadata.hasOwnProperty(propName)){decorators.push.apply(decorators,(0,_tslib.__spread)(propMetadata[propName]));}decorators.push.apply(decorators,(0,_tslib.__spread)(ownPropMetadata[propName]));propMetadata[propName]=decorators;});}return propMetadata;};ReflectionCapabilities.prototype.hasLifecycleHook=function(type,lcProperty){return type instanceof Type&&lcProperty in type.prototype;};ReflectionCapabilities.prototype.guards=function(type){return{};};ReflectionCapabilities.prototype.getter=function(name){return new Function('o','return o.'+name+';');};ReflectionCapabilities.prototype.setter=function(name){return new Function('o','v','return o.'+name+' = v;');};ReflectionCapabilities.prototype.method=function(name){var functionBody="if (!o."+name+") throw new Error('\""+name+"\" is undefined');\n        return o."+name+".apply(o, args);";return new Function('o','args',functionBody);};// There is not a concept of import uri in Js, but this is useful in developing Dart applications.
// There is not a concept of import uri in Js, but this is useful in developing Dart applications.
ReflectionCapabilities.prototype.importUri=// There is not a concept of import uri in Js, but this is useful in developing Dart applications.
function(type){// StaticSymbol
if(_typeof(type)==='object'&&type['filePath']){return type['filePath'];}// Runtime type
return"./"+stringify(type);};ReflectionCapabilities.prototype.resourceUri=function(type){return"./"+stringify(type);};ReflectionCapabilities.prototype.resolveIdentifier=function(name,moduleUrl,members,runtime){return runtime;};ReflectionCapabilities.prototype.resolveEnum=function(enumIdentifier,name){return enumIdentifier[name];};return ReflectionCapabilities;}();exports.ɵReflectionCapabilities=ReflectionCapabilities;function convertTsickleDecoratorIntoMetadata(decoratorInvocations){if(!decoratorInvocations){return[];}return decoratorInvocations.map(function(decoratorInvocation){var decoratorType=decoratorInvocation.type;var annotationCls=decoratorType.annotationCls;var annotationArgs=decoratorInvocation.args?decoratorInvocation.args:[];return new(annotationCls.bind.apply(annotationCls,(0,_tslib.__spread)([void 0],annotationArgs)))();});}function getParentCtor(ctor){var parentProto=ctor.prototype?Object.getPrototypeOf(ctor.prototype):null;var parentCtor=parentProto?parentProto.constructor:null;// Note: We always use `Object` as the null value
// to simplify checking later on.
return parentCtor||Object;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function getClosureSafeProperty(objWithPropertyToExtract,target){for(var key in objWithPropertyToExtract){if(objWithPropertyToExtract[key]===target){return key;}}throw Error('Could not find renamed property on target object.');}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Allows to refer to references which are not yet defined.
 *
 * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of
 * DI is declared,
 * but not yet defined. It is also used when the `token` which we use when creating a query is not
 * yet defined.
 *
 * ### Example
 * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}
 * @experimental
 */function forwardRef(forwardRefFn){forwardRefFn.__forward_ref__=forwardRef;forwardRefFn.toString=function(){return stringify(this());};return forwardRefFn;}/**
 * Lazily retrieves the reference value from a forwardRef.
 *
 * Acts as the identity function when given a non-forward-ref value.
 *
 * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))
 *
 * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}
 *
 * See: {@link forwardRef}
 * @experimental
 */function resolveForwardRef(type){if(typeof type==='function'&&type.hasOwnProperty('__forward_ref__')&&type.__forward_ref__===forwardRef){return type();}else{return type;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Inject decorator and metadata.
 *
 *
 * @Annotation
 */var Inject=makeParamDecorator('Inject',function(token){return{token:token};});/**
 * Optional decorator and metadata.
 *
 *
 * @Annotation
 */exports.Inject=Inject;var Optional=makeParamDecorator('Optional');/**
 * Self decorator and metadata.
 *
 *
 * @Annotation
 */exports.Optional=Optional;var Self=makeParamDecorator('Self');/**
 * SkipSelf decorator and metadata.
 *
 *
 * @Annotation
 */exports.Self=Self;var SkipSelf=makeParamDecorator('SkipSelf');/**
 * Host decorator and metadata.
 *
 *
 * @Annotation
 */exports.SkipSelf=SkipSelf;var Host=makeParamDecorator('Host');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.Host=Host;var SOURCE='__source';var _THROW_IF_NOT_FOUND=new Object();var THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;/**
 * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.
 *
 * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a
 * project.
 *
 * @experimental
 */var INJECTOR=new InjectionToken('INJECTOR');exports.INJECTOR=INJECTOR;var NullInjector=/** @class */function(){function NullInjector(){}NullInjector.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=_THROW_IF_NOT_FOUND;}if(notFoundValue===_THROW_IF_NOT_FOUND){throw new Error("NullInjectorError: No provider for "+stringify(token)+"!");}return notFoundValue;};return NullInjector;}();/**
 * @usageNotes
 * ```
 * const injector: Injector = ...;
 * injector.get(...);
 * ```
 *
 * @description
 *
 * Concrete injectors implement this interface.
 *
 * For more details, see the {@linkDocs guide/dependency-injection "Dependency Injection Guide"}.
 *
 * ### Example
 *
 * {@example core/di/ts/injector_spec.ts region='Injector'}
 *
 * `Injector` returns itself when given `Injector` as a token:
 * {@example core/di/ts/injector_spec.ts region='injectInjector'}
 *
 *
 */var Injector=/** @class */function(){function Injector(){}/**
     * Create a new Injector which is configure using `StaticProvider`s.
     *
     * ### Example
     *
     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}
     */ /**
       * Create a new Injector which is configure using `StaticProvider`s.
       *
       * ### Example
       *
       * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}
       */Injector.create=/**
       * Create a new Injector which is configure using `StaticProvider`s.
       *
       * ### Example
       *
       * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}
       */function(options,parent){if(Array.isArray(options)){return new StaticInjector(options,parent);}else{return new StaticInjector(options.providers,options.parent,options.name||null);}};Injector.THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;Injector.NULL=new NullInjector();Injector.ngInjectableDef=defineInjectable({providedIn:'any',factory:function factory(){return inject(INJECTOR);}});return Injector;}();exports.Injector=Injector;var IDENT=function IDENT(value){return value;};var EMPTY=[];var CIRCULAR=IDENT;var MULTI_PROVIDER_FN=function MULTI_PROVIDER_FN(){return Array.prototype.slice.call(arguments);};var GET_PROPERTY_NAME$1={};var USE_VALUE$1=getClosureSafeProperty$1({provide:String,useValue:GET_PROPERTY_NAME$1});var NG_TOKEN_PATH='ngTokenPath';var NG_TEMP_TOKEN_PATH='ngTempTokenPath';var NULL_INJECTOR=Injector.NULL;var NEW_LINE=/\n/gm;var NO_NEW_LINE='ɵ';var StaticInjector=/** @class */function(){function StaticInjector(providers,parent,source){if(parent===void 0){parent=NULL_INJECTOR;}if(source===void 0){source=null;}this.parent=parent;this.source=source;var records=this._records=new Map();records.set(Injector,{token:Injector,fn:IDENT,deps:EMPTY,value:this,useNew:false});records.set(INJECTOR,{token:INJECTOR,fn:IDENT,deps:EMPTY,value:this,useNew:false});recursivelyProcessProviders(records,providers);}StaticInjector.prototype.get=function(token,notFoundValue,flags){if(flags===void 0){flags=0/* Default */;}var record=this._records.get(token);try{return tryResolveToken(token,record,this._records,this.parent,notFoundValue,flags);}catch(e){var tokenPath=e[NG_TEMP_TOKEN_PATH];if(token[SOURCE]){tokenPath.unshift(token[SOURCE]);}e.message=formatError('\n'+e.message,tokenPath,this.source);e[NG_TOKEN_PATH]=tokenPath;e[NG_TEMP_TOKEN_PATH]=null;throw e;}};StaticInjector.prototype.toString=function(){var tokens=[],records=this._records;records.forEach(function(v,token){return tokens.push(stringify(token));});return"StaticInjector["+tokens.join(', ')+"]";};return StaticInjector;}();function resolveProvider(provider){var deps=computeDeps(provider);var fn=IDENT;var value=EMPTY;var useNew=false;var provide=resolveForwardRef(provider.provide);if(USE_VALUE$1 in provider){// We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.
value=provider.useValue;}else if(provider.useFactory){fn=provider.useFactory;}else if(provider.useExisting){// Just use IDENT
}else if(provider.useClass){useNew=true;fn=resolveForwardRef(provider.useClass);}else if(typeof provide=='function'){useNew=true;fn=provide;}else{throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',provider);}return{deps:deps,fn:fn,useNew:useNew,value:value};}function multiProviderMixError(token){return staticError('Cannot mix multi providers and regular providers',token);}function recursivelyProcessProviders(records,provider){if(provider){provider=resolveForwardRef(provider);if(provider instanceof Array){// if we have an array recurse into the array
for(var i=0;i<provider.length;i++){recursivelyProcessProviders(records,provider[i]);}}else if(typeof provider==='function'){// Functions were supported in ReflectiveInjector, but are not here. For safety give useful
// error messages
throw staticError('Function/Class not supported',provider);}else if(provider&&_typeof(provider)==='object'&&provider.provide){// At this point we have what looks like a provider: {provide: ?, ....}
var token=resolveForwardRef(provider.provide);var resolvedProvider=resolveProvider(provider);if(provider.multi===true){// This is a multi provider.
var multiProvider=records.get(token);if(multiProvider){if(multiProvider.fn!==MULTI_PROVIDER_FN){throw multiProviderMixError(token);}}else{// Create a placeholder factory which will look up the constituents of the multi provider.
records.set(token,multiProvider={token:provider.provide,deps:[],useNew:false,fn:MULTI_PROVIDER_FN,value:EMPTY});}// Treat the provider as the token.
token=provider;multiProvider.deps.push({token:token,options:6/* Default */});}var record=records.get(token);if(record&&record.fn==MULTI_PROVIDER_FN){throw multiProviderMixError(token);}records.set(token,resolvedProvider);}else{throw staticError('Unexpected provider',provider);}}}function tryResolveToken(token,record,records,parent,notFoundValue,flags){try{return resolveToken(token,record,records,parent,notFoundValue,flags);}catch(e){// ensure that 'e' is of type Error.
if(!(e instanceof Error)){e=new Error(e);}var path=e[NG_TEMP_TOKEN_PATH]=e[NG_TEMP_TOKEN_PATH]||[];path.unshift(token);if(record&&record.value==CIRCULAR){// Reset the Circular flag.
record.value=EMPTY;}throw e;}}function resolveToken(token,record,records,parent,notFoundValue,flags){var value;if(record&&!(flags&4/* SkipSelf */)){// If we don't have a record, this implies that we don't own the provider hence don't know how
// to resolve it.
value=record.value;if(value==CIRCULAR){throw Error(NO_NEW_LINE+'Circular dependency');}else if(value===EMPTY){record.value=CIRCULAR;var obj=undefined;var useNew=record.useNew;var fn=record.fn;var depRecords=record.deps;var deps=EMPTY;if(depRecords.length){deps=[];for(var i=0;i<depRecords.length;i++){var depRecord=depRecords[i];var options=depRecord.options;var childRecord=options&2/* CheckSelf */?records.get(depRecord.token):undefined;deps.push(tryResolveToken(// Current Token to resolve
depRecord.token,childRecord,records,// If we don't know how to resolve dependency and we should not check parent for it,
// than pass in Null injector.
!childRecord&&!(options&4/* CheckParent */)?NULL_INJECTOR:parent,options&1/* Optional */?null:Injector.THROW_IF_NOT_FOUND,0/* Default */));}}record.value=value=useNew?new((_a=fn).bind.apply(_a,(0,_tslib.__spread)([void 0],deps)))():fn.apply(obj,deps);}}else if(!(flags&2/* Self */)){value=parent.get(token,notFoundValue,0/* Default */);}return value;var _a;}function computeDeps(provider){var deps=EMPTY;var providerDeps=provider.deps;if(providerDeps&&providerDeps.length){deps=[];for(var i=0;i<providerDeps.length;i++){var options=6;var token=resolveForwardRef(providerDeps[i]);if(token instanceof Array){for(var j=0,annotations=token;j<annotations.length;j++){var annotation=annotations[j];if(annotation instanceof Optional||annotation==Optional){options=options|1/* Optional */;}else if(annotation instanceof SkipSelf||annotation==SkipSelf){options=options&~2/* CheckSelf */;}else if(annotation instanceof Self||annotation==Self){options=options&~4/* CheckParent */;}else if(annotation instanceof Inject){token=annotation.token;}else{token=resolveForwardRef(annotation);}}}deps.push({token:token,options:options});}}else if(provider.useExisting){var token=resolveForwardRef(provider.useExisting);deps=[{token:token,options:6/* Default */}];}else if(!providerDeps&&!(USE_VALUE$1 in provider)){// useValue & useExisting are the only ones which are exempt from deps all others need it.
throw staticError('\'deps\' required',provider);}return deps;}function formatError(text,obj,source){if(source===void 0){source=null;}text=text&&text.charAt(0)==='\n'&&text.charAt(1)==NO_NEW_LINE?text.substr(2):text;var context=stringify(obj);if(obj instanceof Array){context=obj.map(stringify).join(' -> ');}else if(_typeof(obj)==='object'){var parts=[];for(var key in obj){if(obj.hasOwnProperty(key)){var value=obj[key];parts.push(key+':'+(typeof value==='string'?JSON.stringify(value):stringify(value)));}}context="{"+parts.join(', ')+"}";}return"StaticInjectorError"+(source?'('+source+')':'')+"["+context+"]: "+text.replace(NEW_LINE,'\n  ');}function staticError(text,obj){return new Error(formatError(text,obj));}function getClosureSafeProperty$1(objWithPropertyToExtract){for(var key in objWithPropertyToExtract){if(objWithPropertyToExtract[key]===GET_PROPERTY_NAME$1){return key;}}throw Error('!prop');}/**
 * Current injector value used by `inject`.
 * - `undefined`: it is an error to call `inject`
 * - `null`: `inject` can be called but there is no injector (limp-mode).
 * - Injector instance: Use the injector for resolution.
 */var _currentInjector=undefined;function setCurrentInjector(injector){var former=_currentInjector;_currentInjector=injector;return former;}function inject(token,flags){if(flags===void 0){flags=0/* Default */;}if(_currentInjector===undefined){throw new Error("inject() must be called from an injection context");}else if(_currentInjector===null){var injectableDef=token.ngInjectableDef;if(injectableDef&&injectableDef.providedIn=='root'){return injectableDef.value===undefined?injectableDef.value=injectableDef.factory():injectableDef.value;}throw new Error("Injector: NOT_FOUND ["+stringify(token)+"]");}else{return _currentInjector.get(token,flags&8/* Optional */?null:undefined,flags);}}function injectArgs(types){var args=[];for(var i=0;i<types.length;i++){var arg=types[i];if(Array.isArray(arg)){if(arg.length===0){throw new Error('Arguments array must have arguments.');}var type=undefined;var flags=0;for(var j=0;j<arg.length;j++){var meta=arg[j];if(meta instanceof Optional||meta.__proto__.ngMetadataName==='Optional'){flags|=8/* Optional */;}else if(meta instanceof SkipSelf||meta.__proto__.ngMetadataName==='SkipSelf'){flags|=4/* SkipSelf */;}else if(meta instanceof Self||meta.__proto__.ngMetadataName==='Self'){flags|=2/* Self */;}else if(meta instanceof Inject){type=meta.token;}else{type=meta;}}args.push(inject(type,flags));}else{args.push(inject(arg));}}return args;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var GET_PROPERTY_NAME={};var ɵ0=GET_PROPERTY_NAME;var USE_VALUE=getClosureSafeProperty({provide:String,useValue:ɵ0},GET_PROPERTY_NAME);var EMPTY_ARRAY=[];function convertInjectableProviderToFactory(type,provider){if(!provider){var reflectionCapabilities=new ReflectionCapabilities();var deps_1=reflectionCapabilities.parameters(type);// TODO - convert to flags.
return function(){return new(type.bind.apply(type,(0,_tslib.__spread)([void 0],injectArgs(deps_1))))();};}if(USE_VALUE in provider){var valueProvider_1=provider;return function(){return valueProvider_1.useValue;};}else if(provider.useExisting){var existingProvider_1=provider;return function(){return inject(existingProvider_1.useExisting);};}else if(provider.useFactory){var factoryProvider_1=provider;return function(){return factoryProvider_1.useFactory.apply(factoryProvider_1,(0,_tslib.__spread)(injectArgs(factoryProvider_1.deps||EMPTY_ARRAY)));};}else if(provider.useClass){var classProvider_1=provider;var deps_2=provider.deps;if(!deps_2){var reflectionCapabilities=new ReflectionCapabilities();deps_2=reflectionCapabilities.parameters(type);}return function(){return new((_a=classProvider_1.useClass).bind.apply(_a,(0,_tslib.__spread)([void 0],injectArgs(deps_2))))();var _a;};}else{var deps_3=provider.deps;if(!deps_3){var reflectionCapabilities=new ReflectionCapabilities();deps_3=reflectionCapabilities.parameters(type);}return function(){return new(type.bind.apply(type,(0,_tslib.__spread)([void 0],injectArgs(deps_3))))();};}}/**
* Injectable decorator and metadata.
*
*
* @Annotation
*/var Injectable=makeDecorator('Injectable',undefined,undefined,undefined,function(injectableType,options){if(options&&options.providedIn!==undefined&&injectableType.ngInjectableDef===undefined){injectableType.ngInjectableDef=defineInjectable({providedIn:options.providedIn,factory:convertInjectableProviderToFactory(injectableType,options)});}});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Defines a schema that will allow:
 * - any non-Angular elements with a `-` in their name,
 * - any properties on elements with a `-` in their name which is the common rule for custom
 * elements.
 *
 *
 */exports.Injectable=Injectable;var CUSTOM_ELEMENTS_SCHEMA={name:'custom-elements'};/**
 * Defines a schema that will allow any property on any element.
 *
 * @experimental
 */exports.CUSTOM_ELEMENTS_SCHEMA=CUSTOM_ELEMENTS_SCHEMA;var NO_ERRORS_SCHEMA={name:'no-errors-schema'};/**
 * NgModule decorator and metadata.
 *
 *
 * @Annotation
 */exports.NO_ERRORS_SCHEMA=NO_ERRORS_SCHEMA;var NgModule=makeDecorator('NgModule',function(ngModule){return ngModule;},undefined,undefined,function(moduleType,metadata){var imports=metadata&&metadata.imports||[];if(metadata&&metadata.exports){imports=(0,_tslib.__spread)(imports,[metadata.exports]);}moduleType.ngInjectorDef=defineInjector({factory:convertInjectableProviderToFactory(moduleType,{useClass:moduleType}),providers:metadata&&metadata.providers,imports:imports});});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Defines template and style encapsulation options available for Component's {@link Component}.
 *
 * See {@link Component#encapsulation encapsulation}.
 *
 */ /**
 * Defines template and style encapsulation options available for Component's {@link Component}.
 *
 * See {@link Component#encapsulation encapsulation}.
 *
 */exports.NgModule=NgModule;var ViewEncapsulation;/**
 * Defines template and style encapsulation options available for Component's {@link Component}.
 *
 * See {@link Component#encapsulation encapsulation}.
 *
 */exports.ViewEncapsulation=ViewEncapsulation;(function(ViewEncapsulation){/**
     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host
     * Element and pre-processing the style rules provided via {@link Component#styles styles} or
     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all
     * selectors.
     *
     * This is the default option.
     */ViewEncapsulation[ViewEncapsulation["Emulated"]=0]="Emulated";/**
     * Use the native encapsulation mechanism of the renderer.
     *
     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and
     * creating a ShadowRoot for Component's Host Element.
     */ViewEncapsulation[ViewEncapsulation["Native"]=1]="Native";/**
     * Don't provide any template or style encapsulation.
     */ViewEncapsulation[ViewEncapsulation["None"]=2]="None";})(ViewEncapsulation||(exports.ViewEncapsulation=ViewEncapsulation={}));/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @description Represents the version of Angular
 *
 *
 */var Version=/** @class */function(){function Version(full){this.full=full;this.major=full.split('.')[0];this.minor=full.split('.')[1];this.patch=full.split('.').slice(2).join('.');}return Version;}();/**
 *
 */exports.Version=Version;var VERSION=new Version('6.0.0');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.VERSION=VERSION;var ERROR_DEBUG_CONTEXT='ngDebugContext';var ERROR_ORIGINAL_ERROR='ngOriginalError';var ERROR_LOGGER='ngErrorLogger';function getDebugContext(error){return error[ERROR_DEBUG_CONTEXT];}function getOriginalError(error){return error[ERROR_ORIGINAL_ERROR];}function getErrorLogger(error){return error[ERROR_LOGGER]||defaultErrorLogger;}function defaultErrorLogger(console){var values=[];for(var _i=1;_i<arguments.length;_i++){values[_i-1]=arguments[_i];}console.error.apply(console,(0,_tslib.__spread)(values));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 *
 * @description
 * Provides a hook for centralized exception handling.
 *
 * The default implementation of `ErrorHandler` prints error messages to the `console`. To
 * intercept error handling, write a custom exception handler that replaces this default as
 * appropriate for your app.
 *
 * ### Example
 *
 * ```
 * class MyErrorHandler implements ErrorHandler {
 *   handleError(error) {
 *     // do something with the exception
 *   }
 * }
 *
 * @NgModule({
 *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]
 * })
 * class MyModule {}
 * ```
 *
 *
 */var ErrorHandler=/** @class */function(){function ErrorHandler(){/**
           * @internal
           */this._console=console;}ErrorHandler.prototype.handleError=function(error){var originalError=this._findOriginalError(error);var context=this._findContext(error);// Note: Browser consoles show the place from where console.error was called.
// We can use this to give users additional information about the error.
var errorLogger=getErrorLogger(error);errorLogger(this._console,"ERROR",error);if(originalError){errorLogger(this._console,"ORIGINAL ERROR",originalError);}if(context){errorLogger(this._console,'ERROR CONTEXT',context);}};/** @internal */ /** @internal */ErrorHandler.prototype._findContext=/** @internal */function(error){if(error){return getDebugContext(error)?getDebugContext(error):this._findContext(getOriginalError(error));}return null;};/** @internal */ /** @internal */ErrorHandler.prototype._findOriginalError=/** @internal */function(error){var e=getOriginalError(error);while(e&&getOriginalError(e)){e=getOriginalError(e);}return e;};return ErrorHandler;}();exports.ErrorHandler=ErrorHandler;function wrappedError(message,originalError){var msg=message+" caused by: "+(originalError instanceof Error?originalError.message:originalError);var error=Error(msg);error[ERROR_ORIGINAL_ERROR]=originalError;return error;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function findFirstClosedCycle(keys){var res=[];for(var i=0;i<keys.length;++i){if(res.indexOf(keys[i])>-1){res.push(keys[i]);return res;}res.push(keys[i]);}return res;}function constructResolvingPath(keys){if(keys.length>1){var reversed=findFirstClosedCycle(keys.slice().reverse());var tokenStrs=reversed.map(function(k){return stringify(k.token);});return' ('+tokenStrs.join(' -> ')+')';}return'';}function injectionError(injector,key,constructResolvingMessage,originalError){var keys=[key];var errMsg=constructResolvingMessage(keys);var error=originalError?wrappedError(errMsg,originalError):Error(errMsg);error.addKey=addKey;error.keys=keys;error.injectors=[injector];error.constructResolvingMessage=constructResolvingMessage;error[ERROR_ORIGINAL_ERROR]=originalError;return error;}function addKey(injector,key){this.injectors.push(injector);this.keys.push(key);// Note: This updated message won't be reflected in the `.stack` property
this.message=this.constructResolvingMessage(this.keys);}/**
 * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the
 * {@link Injector} does not have a {@link Provider} for the given key.
 *
 * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor(b:B) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 */function noProviderError(injector,key){return injectionError(injector,key,function(keys){var first=stringify(keys[0].token);return"No provider for "+first+"!"+constructResolvingPath(keys);});}/**
 * Thrown when dependencies form a cycle.
 *
 * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))
 *
 * ```typescript
 * var injector = Injector.resolveAndCreate([
 *   {provide: "one", useFactory: (two) => "two", deps: [[new Inject("two")]]},
 *   {provide: "two", useFactory: (one) => "one", deps: [[new Inject("one")]]}
 * ]);
 *
 * expect(() => injector.get("one")).toThrowError();
 * ```
 *
 * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.
 */function cyclicDependencyError(injector,key){return injectionError(injector,key,function(keys){return"Cannot instantiate cyclic dependency!"+constructResolvingPath(keys);});}/**
 * Thrown when a constructing type returns with an Error.
 *
 * The `InstantiationError` class contains the original error plus the dependency graph which caused
 * this object to be instantiated.
 *
 * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor() {
 *     throw new Error('message');
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([A]);

 * try {
 *   injector.get(A);
 * } catch (e) {
 *   expect(e instanceof InstantiationError).toBe(true);
 *   expect(e.originalException.message).toEqual("message");
 *   expect(e.originalStack).toBeDefined();
 * }
 * ```
 */function instantiationError(injector,originalException,originalStack,key){return injectionError(injector,key,function(keys){var first=stringify(keys[0].token);return originalException.message+": Error during instantiation of "+first+"!"+constructResolvingPath(keys)+".";},originalException);}/**
 * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}
 * creation.
 *
 * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate(["not a type"])).toThrowError();
 * ```
 */function invalidProviderError(provider){return Error("Invalid provider - only instances of Provider and Type are allowed, got: "+provider);}/**
 * Thrown when the class has no annotation information.
 *
 * Lack of annotation information prevents the {@link Injector} from determining which dependencies
 * need to be injected into the constructor.
 *
 * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor(b) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 *
 * This error is also thrown when the class not marked with {@link Injectable} has parameter types.
 *
 * ```typescript
 * class B {}
 *
 * class A {
 *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.
 * }
 *
 * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();
 * ```
 *
 */function noAnnotationError(typeOrFunc,params){var signature=[];for(var i=0,ii=params.length;i<ii;i++){var parameter=params[i];if(!parameter||parameter.length==0){signature.push('?');}else{signature.push(parameter.map(stringify).join(' '));}}return Error('Cannot resolve all parameters for \''+stringify(typeOrFunc)+'\'('+signature.join(', ')+'). '+'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \''+stringify(typeOrFunc)+'\' is decorated with Injectable.');}/**
 * Thrown when getting an object by index.
 *
 * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))
 *
 * ```typescript
 * class A {}
 *
 * var injector = Injector.resolveAndCreate([A]);
 *
 * expect(() => injector.getAt(100)).toThrowError();
 * ```
 *
 */function outOfBoundsError(index){return Error("Index "+index+" is out-of-bounds.");}// TODO: add a working example after alpha38 is released
/**
 * Thrown when a multi provider and a regular provider are bound to the same token.
 *
 * ### Example
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate([
 *   { provide: "Strings", useValue: "string1", multi: true},
 *   { provide: "Strings", useValue: "string2", multi: false}
 * ])).toThrowError();
 * ```
 */function mixingMultiProvidersWithRegularProvidersError(provider1,provider2){return Error("Cannot mix multi providers and regular providers, got: "+provider1+" "+provider2);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A unique object used for retrieving items from the {@link ReflectiveInjector}.
 *
 * Keys have:
 * - a system-wide unique `id`.
 * - a `token`.
 *
 * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows
 * the
 * injector to store created objects in a more efficient way.
 *
 * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when
 * resolving
 * providers.
 * @deprecated No replacement
 */var ReflectiveKey=/** @class */function(){/**
     * Private
     */function ReflectiveKey(token,id){this.token=token;this.id=id;if(!token){throw new Error('Token must be defined!');}this.displayName=stringify(this.token);}/**
     * Retrieves a `Key` for a token.
     */ /**
       * Retrieves a `Key` for a token.
       */ReflectiveKey.get=/**
       * Retrieves a `Key` for a token.
       */function(token){return _globalKeyRegistry.get(resolveForwardRef(token));};Object.defineProperty(ReflectiveKey,"numberOfKeys",{/**
         * @returns the number of keys registered in the system.
         */get:/**
           * @returns the number of keys registered in the system.
           */function get(){return _globalKeyRegistry.numberOfKeys;},enumerable:true,configurable:true});return ReflectiveKey;}();exports.ReflectiveKey=ReflectiveKey;var KeyRegistry=/** @class */function(){function KeyRegistry(){this._allKeys=new Map();}KeyRegistry.prototype.get=function(token){if(token instanceof ReflectiveKey)return token;if(this._allKeys.has(token)){return this._allKeys.get(token);}var newKey=new ReflectiveKey(token,ReflectiveKey.numberOfKeys);this._allKeys.set(token,newKey);return newKey;};Object.defineProperty(KeyRegistry.prototype,"numberOfKeys",{get:function get(){return this._allKeys.size;},enumerable:true,configurable:true});return KeyRegistry;}();var _globalKeyRegistry=new KeyRegistry();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Provides access to reflection data about symbols. Used internally by Angular
 * to power dependency injection and compilation.
 */var Reflector=/** @class */function(){function Reflector(reflectionCapabilities){this.reflectionCapabilities=reflectionCapabilities;}Reflector.prototype.updateCapabilities=function(caps){this.reflectionCapabilities=caps;};Reflector.prototype.factory=function(type){return this.reflectionCapabilities.factory(type);};Reflector.prototype.parameters=function(typeOrFunc){return this.reflectionCapabilities.parameters(typeOrFunc);};Reflector.prototype.annotations=function(typeOrFunc){return this.reflectionCapabilities.annotations(typeOrFunc);};Reflector.prototype.propMetadata=function(typeOrFunc){return this.reflectionCapabilities.propMetadata(typeOrFunc);};Reflector.prototype.hasLifecycleHook=function(type,lcProperty){return this.reflectionCapabilities.hasLifecycleHook(type,lcProperty);};Reflector.prototype.getter=function(name){return this.reflectionCapabilities.getter(name);};Reflector.prototype.setter=function(name){return this.reflectionCapabilities.setter(name);};Reflector.prototype.method=function(name){return this.reflectionCapabilities.method(name);};Reflector.prototype.importUri=function(type){return this.reflectionCapabilities.importUri(type);};Reflector.prototype.resourceUri=function(type){return this.reflectionCapabilities.resourceUri(type);};Reflector.prototype.resolveIdentifier=function(name,moduleUrl,members,runtime){return this.reflectionCapabilities.resolveIdentifier(name,moduleUrl,members,runtime);};Reflector.prototype.resolveEnum=function(identifier,name){return this.reflectionCapabilities.resolveEnum(identifier,name);};return Reflector;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * The {@link Reflector} used internally in Angular to access metadata
 * about symbols.
 */var reflector=new Reflector(new ReflectionCapabilities());/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * `Dependency` is used by the framework to extend DI.
 * This is internal to Angular and should not be used directly.
 */var ReflectiveDependency=/** @class */function(){function ReflectiveDependency(key,optional,visibility){this.key=key;this.optional=optional;this.visibility=visibility;}ReflectiveDependency.fromKey=function(key){return new ReflectiveDependency(key,false,null);};return ReflectiveDependency;}();exports.ɵangular_packages_core_core_d=ReflectiveDependency;var _EMPTY_LIST=[];var ResolvedReflectiveProvider_=/** @class */function(){function ResolvedReflectiveProvider_(key,resolvedFactories,multiProvider){this.key=key;this.resolvedFactories=resolvedFactories;this.multiProvider=multiProvider;this.resolvedFactory=this.resolvedFactories[0];}return ResolvedReflectiveProvider_;}();/**
 * An internal resolved representation of a factory function created by resolving {@link
 * Provider}.
 * @experimental
 */var ResolvedReflectiveFactory=/** @class */function(){function ResolvedReflectiveFactory(/**
           * Factory function which can return an instance of an object represented by a key.
           */factory,/**
           * Arguments (dependencies) to the `factory` function.
           */dependencies){this.factory=factory;this.dependencies=dependencies;}return ResolvedReflectiveFactory;}();/**
 * Resolve a single provider.
 */exports.ResolvedReflectiveFactory=ResolvedReflectiveFactory;function resolveReflectiveFactory(provider){var factoryFn;var resolvedDeps;if(provider.useClass){var useClass=resolveForwardRef(provider.useClass);factoryFn=reflector.factory(useClass);resolvedDeps=_dependenciesFor(useClass);}else if(provider.useExisting){factoryFn=function factoryFn(aliasInstance){return aliasInstance;};resolvedDeps=[ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];}else if(provider.useFactory){factoryFn=provider.useFactory;resolvedDeps=constructDependencies(provider.useFactory,provider.deps);}else{factoryFn=function factoryFn(){return provider.useValue;};resolvedDeps=_EMPTY_LIST;}return new ResolvedReflectiveFactory(factoryFn,resolvedDeps);}/**
 * Converts the {@link Provider} into {@link ResolvedProvider}.
 *
 * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains
 * convenience provider syntax.
 */function resolveReflectiveProvider(provider){return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide),[resolveReflectiveFactory(provider)],provider.multi||false);}/**
 * Resolve a list of Providers.
 */function resolveReflectiveProviders(providers){var normalized=_normalizeProviders(providers,[]);var resolved=normalized.map(resolveReflectiveProvider);var resolvedProviderMap=mergeResolvedReflectiveProviders(resolved,new Map());return Array.from(resolvedProviderMap.values());}/**
 * Merges a list of ResolvedProviders into a list where
 * each key is contained exactly once and multi providers
 * have been merged.
 */function mergeResolvedReflectiveProviders(providers,normalizedProvidersMap){for(var i=0;i<providers.length;i++){var provider=providers[i];var existing=normalizedProvidersMap.get(provider.key.id);if(existing){if(provider.multiProvider!==existing.multiProvider){throw mixingMultiProvidersWithRegularProvidersError(existing,provider);}if(provider.multiProvider){for(var j=0;j<provider.resolvedFactories.length;j++){existing.resolvedFactories.push(provider.resolvedFactories[j]);}}else{normalizedProvidersMap.set(provider.key.id,provider);}}else{var resolvedProvider=void 0;if(provider.multiProvider){resolvedProvider=new ResolvedReflectiveProvider_(provider.key,provider.resolvedFactories.slice(),provider.multiProvider);}else{resolvedProvider=provider;}normalizedProvidersMap.set(provider.key.id,resolvedProvider);}}return normalizedProvidersMap;}function _normalizeProviders(providers,res){providers.forEach(function(b){if(b instanceof Type){res.push({provide:b,useClass:b});}else if(b&&_typeof(b)=='object'&&b.provide!==undefined){res.push(b);}else if(b instanceof Array){_normalizeProviders(b,res);}else{throw invalidProviderError(b);}});return res;}function constructDependencies(typeOrFunc,dependencies){if(!dependencies){return _dependenciesFor(typeOrFunc);}else{var params_1=dependencies.map(function(t){return[t];});return dependencies.map(function(t){return _extractToken(typeOrFunc,t,params_1);});}}function _dependenciesFor(typeOrFunc){var params=reflector.parameters(typeOrFunc);if(!params)return[];if(params.some(function(p){return p==null;})){throw noAnnotationError(typeOrFunc,params);}return params.map(function(p){return _extractToken(typeOrFunc,p,params);});}function _extractToken(typeOrFunc,metadata,params){var token=null;var optional=false;if(!Array.isArray(metadata)){if(metadata instanceof Inject){return _createDependency(metadata.token,optional,null);}else{return _createDependency(metadata,optional,null);}}var visibility=null;for(var i=0;i<metadata.length;++i){var paramMetadata=metadata[i];if(paramMetadata instanceof Type){token=paramMetadata;}else if(paramMetadata instanceof Inject){token=paramMetadata.token;}else if(paramMetadata instanceof Optional){optional=true;}else if(paramMetadata instanceof Self||paramMetadata instanceof SkipSelf){visibility=paramMetadata;}else if(paramMetadata instanceof InjectionToken){token=paramMetadata;}}token=resolveForwardRef(token);if(token!=null){return _createDependency(token,optional,visibility);}else{throw noAnnotationError(typeOrFunc,params);}}function _createDependency(token,optional,visibility){return new ReflectiveDependency(ReflectiveKey.get(token),optional,visibility);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Threshold for the dynamic version
var UNDEFINED=new Object();/**
 * A ReflectiveDependency injection container used for instantiating objects and resolving
 * dependencies.
 *
 * An `Injector` is a replacement for a `new` operator, which can automatically resolve the
 * constructor dependencies.
 *
 * In typical use, application code asks for the dependencies in the constructor and they are
 * resolved by the `Injector`.
 *
 * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))
 *
 * The following example creates an `Injector` configured to create `Engine` and `Car`.
 *
 * ```typescript
 * @Injectable()
 * class Engine {
 * }
 *
 * @Injectable()
 * class Car {
 *   constructor(public engine:Engine) {}
 * }
 *
 * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
 * var car = injector.get(Car);
 * expect(car instanceof Car).toBe(true);
 * expect(car.engine instanceof Engine).toBe(true);
 * ```
 *
 * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`
 * resolve all of the object's dependencies automatically.
 *
 * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.
 */var ReflectiveInjector=/** @class */function(){function ReflectiveInjector(){}/**
     * Turns an array of provider definitions into an array of resolved providers.
     *
     * A resolution is a process of flattening multiple nested arrays and converting individual
     * providers into an array of {@link ResolvedReflectiveProvider}s.
     *
     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
     *
     * expect(providers.length).toEqual(2);
     *
     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
     * expect(providers[0].key.displayName).toBe("Car");
     * expect(providers[0].dependencies.length).toEqual(1);
     * expect(providers[0].factory).toBeDefined();
     *
     * expect(providers[1].key.displayName).toBe("Engine");
     * });
     * ```
     *
     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.
     */ /**
       * Turns an array of provider definitions into an array of resolved providers.
       *
       * A resolution is a process of flattening multiple nested arrays and converting individual
       * providers into an array of {@link ResolvedReflectiveProvider}s.
       *
       * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))
       *
       * ```typescript
       * @Injectable()
       * class Engine {
       * }
       *
       * @Injectable()
       * class Car {
       *   constructor(public engine:Engine) {}
       * }
       *
       * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
       *
       * expect(providers.length).toEqual(2);
       *
       * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
       * expect(providers[0].key.displayName).toBe("Car");
       * expect(providers[0].dependencies.length).toEqual(1);
       * expect(providers[0].factory).toBeDefined();
       *
       * expect(providers[1].key.displayName).toBe("Engine");
       * });
       * ```
       *
       * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.
       */ReflectiveInjector.resolve=/**
       * Turns an array of provider definitions into an array of resolved providers.
       *
       * A resolution is a process of flattening multiple nested arrays and converting individual
       * providers into an array of {@link ResolvedReflectiveProvider}s.
       *
       * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))
       *
       * ```typescript
       * @Injectable()
       * class Engine {
       * }
       *
       * @Injectable()
       * class Car {
       *   constructor(public engine:Engine) {}
       * }
       *
       * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
       *
       * expect(providers.length).toEqual(2);
       *
       * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
       * expect(providers[0].key.displayName).toBe("Car");
       * expect(providers[0].dependencies.length).toEqual(1);
       * expect(providers[0].factory).toBeDefined();
       *
       * expect(providers[1].key.displayName).toBe("Engine");
       * });
       * ```
       *
       * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.
       */function(providers){return resolveReflectiveProviders(providers);};/**
     * Resolves an array of providers and creates an injector from those providers.
     *
     * The passed-in providers can be an array of `Type`, {@link Provider},
     * or a recursive array of more providers.
     *
     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     *
     * This function is slower than the corresponding `fromResolvedProviders`
     * because it needs to resolve the passed-in providers first.
     * See {@link ReflectiveInjector#resolve resolve} and
     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.
     */ /**
       * Resolves an array of providers and creates an injector from those providers.
       *
       * The passed-in providers can be an array of `Type`, {@link Provider},
       * or a recursive array of more providers.
       *
       * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))
       *
       * ```typescript
       * @Injectable()
       * class Engine {
       * }
       *
       * @Injectable()
       * class Car {
       *   constructor(public engine:Engine) {}
       * }
       *
       * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
       * expect(injector.get(Car) instanceof Car).toBe(true);
       * ```
       *
       * This function is slower than the corresponding `fromResolvedProviders`
       * because it needs to resolve the passed-in providers first.
       * See {@link ReflectiveInjector#resolve resolve} and
       * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.
       */ReflectiveInjector.resolveAndCreate=/**
       * Resolves an array of providers and creates an injector from those providers.
       *
       * The passed-in providers can be an array of `Type`, {@link Provider},
       * or a recursive array of more providers.
       *
       * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))
       *
       * ```typescript
       * @Injectable()
       * class Engine {
       * }
       *
       * @Injectable()
       * class Car {
       *   constructor(public engine:Engine) {}
       * }
       *
       * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
       * expect(injector.get(Car) instanceof Car).toBe(true);
       * ```
       *
       * This function is slower than the corresponding `fromResolvedProviders`
       * because it needs to resolve the passed-in providers first.
       * See {@link ReflectiveInjector#resolve resolve} and
       * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.
       */function(providers,parent){var ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders,parent);};/**
     * Creates an injector from previously resolved providers.
     *
     * This API is the recommended way to construct injectors in performance-sensitive parts.
     *
     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, Engine]);
     * var injector = ReflectiveInjector.fromResolvedProviders(providers);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     * @experimental
     */ /**
       * Creates an injector from previously resolved providers.
       *
       * This API is the recommended way to construct injectors in performance-sensitive parts.
       *
       * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))
       *
       * ```typescript
       * @Injectable()
       * class Engine {
       * }
       *
       * @Injectable()
       * class Car {
       *   constructor(public engine:Engine) {}
       * }
       *
       * var providers = ReflectiveInjector.resolve([Car, Engine]);
       * var injector = ReflectiveInjector.fromResolvedProviders(providers);
       * expect(injector.get(Car) instanceof Car).toBe(true);
       * ```
       * @experimental
       */ReflectiveInjector.fromResolvedProviders=/**
       * Creates an injector from previously resolved providers.
       *
       * This API is the recommended way to construct injectors in performance-sensitive parts.
       *
       * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))
       *
       * ```typescript
       * @Injectable()
       * class Engine {
       * }
       *
       * @Injectable()
       * class Car {
       *   constructor(public engine:Engine) {}
       * }
       *
       * var providers = ReflectiveInjector.resolve([Car, Engine]);
       * var injector = ReflectiveInjector.fromResolvedProviders(providers);
       * expect(injector.get(Car) instanceof Car).toBe(true);
       * ```
       * @experimental
       */function(providers,parent){return new ReflectiveInjector_(providers,parent);};return ReflectiveInjector;}();exports.ReflectiveInjector=ReflectiveInjector;var ReflectiveInjector_=/** @class */function(){/**
     * Private
     */function ReflectiveInjector_(_providers,_parent){/** @internal */this._constructionCounter=0;this._providers=_providers;this.parent=_parent||null;var len=_providers.length;this.keyIds=new Array(len);this.objs=new Array(len);for(var i=0;i<len;i++){this.keyIds[i]=_providers[i].key.id;this.objs[i]=UNDEFINED;}}ReflectiveInjector_.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=THROW_IF_NOT_FOUND;}return this._getByKey(ReflectiveKey.get(token),null,notFoundValue);};ReflectiveInjector_.prototype.resolveAndCreateChild=function(providers){var ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return this.createChildFromResolved(ResolvedReflectiveProviders);};ReflectiveInjector_.prototype.createChildFromResolved=function(providers){var inj=new ReflectiveInjector_(providers);inj.parent=this;return inj;};ReflectiveInjector_.prototype.resolveAndInstantiate=function(provider){return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);};ReflectiveInjector_.prototype.instantiateResolved=function(provider){return this._instantiateProvider(provider);};ReflectiveInjector_.prototype.getProviderAtIndex=function(index){if(index<0||index>=this._providers.length){throw outOfBoundsError(index);}return this._providers[index];};/** @internal */ /** @internal */ReflectiveInjector_.prototype._new=/** @internal */function(provider){if(this._constructionCounter++>this._getMaxNumberOfObjects()){throw cyclicDependencyError(this,provider.key);}return this._instantiateProvider(provider);};ReflectiveInjector_.prototype._getMaxNumberOfObjects=function(){return this.objs.length;};ReflectiveInjector_.prototype._instantiateProvider=function(provider){if(provider.multiProvider){var res=new Array(provider.resolvedFactories.length);for(var i=0;i<provider.resolvedFactories.length;++i){res[i]=this._instantiate(provider,provider.resolvedFactories[i]);}return res;}else{return this._instantiate(provider,provider.resolvedFactories[0]);}};ReflectiveInjector_.prototype._instantiate=function(provider,ResolvedReflectiveFactory$$1){var _this=this;var factory=ResolvedReflectiveFactory$$1.factory;var deps;try{deps=ResolvedReflectiveFactory$$1.dependencies.map(function(dep){return _this._getByReflectiveDependency(dep);});}catch(e){if(e.addKey){e.addKey(this,provider.key);}throw e;}var obj;try{obj=factory.apply(void 0,(0,_tslib.__spread)(deps));}catch(e){throw instantiationError(this,e,e.stack,provider.key);}return obj;};ReflectiveInjector_.prototype._getByReflectiveDependency=function(dep){return this._getByKey(dep.key,dep.visibility,dep.optional?null:THROW_IF_NOT_FOUND);};ReflectiveInjector_.prototype._getByKey=function(key,visibility,notFoundValue){if(key===ReflectiveInjector_.INJECTOR_KEY){return this;}if(visibility instanceof Self){return this._getByKeySelf(key,notFoundValue);}else{return this._getByKeyDefault(key,notFoundValue,visibility);}};ReflectiveInjector_.prototype._getObjByKeyId=function(keyId){for(var i=0;i<this.keyIds.length;i++){if(this.keyIds[i]===keyId){if(this.objs[i]===UNDEFINED){this.objs[i]=this._new(this._providers[i]);}return this.objs[i];}}return UNDEFINED;};/** @internal */ /** @internal */ReflectiveInjector_.prototype._throwOrNull=/** @internal */function(key,notFoundValue){if(notFoundValue!==THROW_IF_NOT_FOUND){return notFoundValue;}else{throw noProviderError(this,key);}};/** @internal */ /** @internal */ReflectiveInjector_.prototype._getByKeySelf=/** @internal */function(key,notFoundValue){var obj=this._getObjByKeyId(key.id);return obj!==UNDEFINED?obj:this._throwOrNull(key,notFoundValue);};/** @internal */ /** @internal */ReflectiveInjector_.prototype._getByKeyDefault=/** @internal */function(key,notFoundValue,visibility){var inj;if(visibility instanceof SkipSelf){inj=this.parent;}else{inj=this;}while(inj instanceof ReflectiveInjector_){var inj_=inj;var obj=inj_._getObjByKeyId(key.id);if(obj!==UNDEFINED)return obj;inj=inj_.parent;}if(inj!==null){return inj.get(key.token,notFoundValue);}else{return this._throwOrNull(key,notFoundValue);}};Object.defineProperty(ReflectiveInjector_.prototype,"displayName",{get:function get(){var providers=_mapProviders(this,function(b){return' "'+b.key.displayName+'" ';}).join(', ');return"ReflectiveInjector(providers: ["+providers+"])";},enumerable:true,configurable:true});ReflectiveInjector_.prototype.toString=function(){return this.displayName;};ReflectiveInjector_.INJECTOR_KEY=ReflectiveKey.get(Injector);return ReflectiveInjector_;}();exports.ɵangular_packages_core_core_c=ReflectiveInjector_;function _mapProviders(injector,fn){var res=new Array(injector._providers.length);for(var i=0;i<injector._providers.length;++i){res[i]=fn(injector.getProviderAtIndex(i));}return res;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An internal token whose presence in an injector indicates that the injector should treat itself
 * as a root scoped injector when processing requests for unknown tokens which may indicate
 * they are provided in the root scope.
 */var APP_ROOT=new InjectionToken('The presence of this token marks an injector as being the root injector.');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Marker which indicates that a value has not yet been created from the factory function.
 */exports.ɵAPP_ROOT=APP_ROOT;var NOT_YET={};/**
 * Marker which indicates that the factory function for a token is in the process of being called.
 *
 * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates
 * injection of a dependency has recursively attempted to inject the original token, and there is
 * a circular dependency among the providers.
 */var CIRCULAR$1={};var EMPTY_ARRAY$1=[];/**
 * A lazily initialized NullInjector.
 */var NULL_INJECTOR$1=undefined;function getNullInjector(){if(NULL_INJECTOR$1===undefined){NULL_INJECTOR$1=new NullInjector();}return NULL_INJECTOR$1;}/**
 * Create a new `Injector` which is configured using `InjectorType`s.
 *
 * @experimental
 */function createInjector(defType,parent){if(parent===void 0){parent=null;}parent=parent||getNullInjector();return new R3Injector(defType,parent);}var R3Injector=/** @class */function(){function R3Injector(def,parent){var _this=this;this.parent=parent;/**
           * Map of tokens to records which contain the instances of those tokens.
           */this.records=new Map();/**
           * The transitive set of `InjectorType`s which define this injector.
           */this.injectorDefTypes=new Set();/**
           * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.
           */this.onDestroy=new Set();/**
           * Flag indicating that this injector was previously destroyed.
           */this.destroyed=false;// Start off by creating Records for every provider declared in every InjectorType
// included transitively in `def`.
deepForEach([def],function(injectorDef){return _this.processInjectorType(injectorDef,new Set());});// Make sure the INJECTOR token provides this injector.
this.records.set(INJECTOR,makeRecord(undefined,this));// Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide
// any injectable scoped to APP_ROOT_SCOPE.
this.isRootInjector=this.records.has(APP_ROOT);// Eagerly instantiate the InjectorType classes themselves.
this.injectorDefTypes.forEach(function(defType){return _this.get(defType);});}/**
     * Destroy the injector and release references to every instance or provider associated with it.
     *
     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a
     * hook was found.
     */ /**
       * Destroy the injector and release references to every instance or provider associated with it.
       *
       * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a
       * hook was found.
       */R3Injector.prototype.destroy=/**
       * Destroy the injector and release references to every instance or provider associated with it.
       *
       * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a
       * hook was found.
       */function(){this.assertNotDestroyed();// Set destroyed = true first, in case lifecycle hooks re-enter destroy().
this.destroyed=true;try{// Call all the lifecycle hooks.
this.onDestroy.forEach(function(service){return service.ngOnDestroy();});}finally{// Release all references.
this.records.clear();this.onDestroy.clear();this.injectorDefTypes.clear();}};R3Injector.prototype.get=function(token,notFoundValue,flags){if(notFoundValue===void 0){notFoundValue=THROW_IF_NOT_FOUND;}if(flags===void 0){flags=0/* Default */;}this.assertNotDestroyed();// Set the injection context.
var previousInjector=setCurrentInjector(this);try{// Check for the SkipSelf flag.
if(!(flags&4/* SkipSelf */)){// SkipSelf isn't set, check if the record belongs to this injector.
var record=this.records.get(token);if(record===undefined){// No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef
// with a scope matching this injector.
var def=couldBeInjectableType(token)&&token.ngInjectableDef||undefined;if(def!==undefined&&this.injectableDefInScope(def)){// Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here
// all along.
record=injectableDefRecord(token);this.records.set(token,record);}}// If a record was found, get the instance for it and return it.
if(record!==undefined){return this.hydrate(token,record);}}// Select the next injector based on the Self flag - if self is set, the next injector is
// the NullInjector, otherwise it's the parent.
var next=!(flags&2/* Self */)?this.parent:getNullInjector();return this.parent.get(token,notFoundValue);}finally{// Lastly, clean up the state by restoring the previous injector.
setCurrentInjector(previousInjector);}};R3Injector.prototype.assertNotDestroyed=function(){if(this.destroyed){throw new Error('Injector has already been destroyed.');}};/**
     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers
     * to this injector.
     */ /**
       * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers
       * to this injector.
       */R3Injector.prototype.processInjectorType=/**
       * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers
       * to this injector.
       */function(defOrWrappedDef,parents){var _this=this;defOrWrappedDef=resolveForwardRef(defOrWrappedDef);// Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an
// InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic
// read, so care is taken to only do the read once.
// First attempt to read the ngInjectorDef.
var def=defOrWrappedDef.ngInjectorDef;// If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.
var ngModule=def==null&&defOrWrappedDef.ngModule||undefined;// Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,
// then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type
// is the `ngModule`.
var defType=ngModule===undefined?defOrWrappedDef:ngModule;// If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some
// extra providers.
var providers=ngModule!==undefined&&defOrWrappedDef.providers||EMPTY_ARRAY$1;// Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual
// `InjectorDef` is on its `ngModule`.
if(ngModule!==undefined){def=ngModule.ngInjectorDef;}// If no definition was found, throw.
if(def==null){throw new Error("Type "+stringify(defType)+" is missing an ngInjectorDef definition.");}// Check for circular dependencies.
if(parents.has(defType)){throw new Error("Circular dependency: type "+stringify(defType)+" ends up importing itself.");}// Track the InjectorType and add a provider for it.
this.injectorDefTypes.add(defType);this.records.set(defType,makeRecord(def.factory));// Add providers in the same way that @NgModule resolution did:
// First, include providers from any imports.
if(def.imports!=null){// Before processing defType's imports, add it to the set of parents. This way, if it ends
// up deeply importing itself, this can be detected.
parents.add(defType);try{deepForEach(def.imports,function(imported){return _this.processInjectorType(imported,parents);});}finally{// Remove it from the parents set when finished.
parents.delete(defType);}}// Next, include providers listed on the definition itself.
if(def.providers!=null){deepForEach(def.providers,function(provider){return _this.processProvider(provider);});}// Finally, include providers from an InjectorDefTypeWithProviders if there was one.
deepForEach(providers,function(provider){return _this.processProvider(provider);});};/**
     * Process a `SingleProvider` and add it.
     */ /**
       * Process a `SingleProvider` and add it.
       */R3Injector.prototype.processProvider=/**
       * Process a `SingleProvider` and add it.
       */function(provider){// Determine the token from the provider. Either it's its own token, or has a {provide: ...}
// property.
provider=resolveForwardRef(provider);var token=isTypeProvider(provider)?provider:resolveForwardRef(provider.provide);// Construct a `Record` for the provider.
var record=providerToRecord(provider);if(!isTypeProvider(provider)&&provider.multi===true){// If the provider indicates that it's a multi-provider, process it specially.
// First check whether it's been defined already.
var multiRecord_1=this.records.get(token);if(multiRecord_1){// It has. Throw a nice error if
if(multiRecord_1.multi===undefined){throw new Error("Mixed multi-provider for "+token+".");}}else{token=provider;multiRecord_1=makeRecord(undefined,NOT_YET,true);multiRecord_1.factory=function(){return injectArgs(multiRecord_1.multi);};this.records.set(token,multiRecord_1);}token=provider;multiRecord_1.multi.push(provider);}var existing=this.records.get(token);if(existing&&existing.multi!==undefined){throw new Error("Mixed multi-provider for "+token);}this.records.set(token,record);};R3Injector.prototype.hydrate=function(token,record){if(record.value===CIRCULAR$1){throw new Error("Circular dep for "+stringify(token));}else if(record.value===NOT_YET){record.value=CIRCULAR$1;record.value=record.factory();}if(_typeof(record.value)==='object'&&record.value&&hasOnDestroy(record.value)){this.onDestroy.add(record.value);}return record.value;};R3Injector.prototype.injectableDefInScope=function(def){if(!def.providedIn){return false;}else if(typeof def.providedIn==='string'){return def.providedIn==='any'||def.providedIn==='root'&&this.isRootInjector;}else{return this.injectorDefTypes.has(def.providedIn);}};return R3Injector;}();function injectableDefRecord(token){var def=token.ngInjectableDef;if(def===undefined){throw new Error("Type "+stringify(token)+" is missing an ngInjectableDef definition.");}return makeRecord(def.factory);}function providerToRecord(provider){var token=resolveForwardRef(provider);var value=NOT_YET;var factory=undefined;if(isTypeProvider(provider)){return injectableDefRecord(provider);}else{token=resolveForwardRef(provider.provide);if(isValueProvider(provider)){value=provider.useValue;}else if(isExistingProvider(provider)){factory=function factory(){return inject(provider.useExisting);};}else if(isFactoryProvider(provider)){factory=function factory(){return provider.useFactory.apply(provider,(0,_tslib.__spread)(injectArgs(provider.deps||[])));};}else{var classRef_1=provider.useClass||token;if(hasDeps(provider)){factory=function factory(){return new(classRef_1.bind.apply(classRef_1,(0,_tslib.__spread)([void 0],injectArgs(provider.deps))))();};}else{return injectableDefRecord(classRef_1);}}}return makeRecord(factory,value);}function makeRecord(factory,value,multi){if(value===void 0){value=NOT_YET;}if(multi===void 0){multi=false;}return{factory:factory,value:value,multi:multi?[]:undefined};}function deepForEach(input,fn){input.forEach(function(value){return Array.isArray(value)?deepForEach(value,fn):fn(value);});}function isValueProvider(value){return USE_VALUE$1 in value;}function isExistingProvider(value){return!!value.useExisting;}function isFactoryProvider(value){return!!value.useFactory;}function isTypeProvider(value){return typeof value==='function';}function hasDeps(value){return!!value.deps;}function hasOnDestroy(value){return _typeof(value)==='object'&&value!=null&&value.ngOnDestroy&&typeof value.ngOnDestroy==='function';}function couldBeInjectableType(value){return typeof value==='function'||_typeof(value)==='object'&&value instanceof InjectionToken;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Determine if the argument is shaped like a Promise
 */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}/**
 * Determine if the argument is an Observable
 */function isObservable(obj){// TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved
return!!obj&&typeof obj.subscribe==='function';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A function that will be executed when an application is initialized.
 * @experimental
 */var APP_INITIALIZER=new InjectionToken('Application Initializer');/**
 * A class that reflects the state of running {@link APP_INITIALIZER}s.
 *
 * @experimental
 */exports.APP_INITIALIZER=APP_INITIALIZER;var ApplicationInitStatus=/** @class */function(){function ApplicationInitStatus(appInits){var _this=this;this.appInits=appInits;this.initialized=false;this.done=false;this.donePromise=new Promise(function(res,rej){_this.resolve=res;_this.reject=rej;});}/** @internal */ /** @internal */ApplicationInitStatus.prototype.runInitializers=/** @internal */function(){var _this=this;if(this.initialized){return;}var asyncInitPromises=[];var complete=function complete(){_this.done=true;_this.resolve();};if(this.appInits){for(var i=0;i<this.appInits.length;i++){var initResult=this.appInits[i]();if(isPromise(initResult)){asyncInitPromises.push(initResult);}}}Promise.all(asyncInitPromises).then(function(){complete();}).catch(function(e){_this.reject(e);});if(asyncInitPromises.length===0){complete();}this.initialized=true;};ApplicationInitStatus.decorators=[{type:Injectable}];/** @nocollapse */ApplicationInitStatus.ctorParameters=function(){return[{type:Array,decorators:[{type:Inject,args:[APP_INITIALIZER]},{type:Optional}]}];};return ApplicationInitStatus;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A DI Token representing a unique string id assigned to the application by Angular and used
 * primarily for prefixing application attributes and CSS styles when
 * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.
 *
 * If you need to avoid randomly generated value to be used as an application id, you can provide
 * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}
 * using this token.
 * @experimental
 */exports.ApplicationInitStatus=ApplicationInitStatus;var APP_ID=new InjectionToken('AppId');exports.APP_ID=APP_ID;function _appIdRandomProviderFactory(){return""+_randomChar()+_randomChar()+_randomChar();}/**
 * Providers that will generate a random APP_ID_TOKEN.
 * @experimental
 */var APP_ID_RANDOM_PROVIDER={provide:APP_ID,useFactory:_appIdRandomProviderFactory,deps:[]};exports.ɵAPP_ID_RANDOM_PROVIDER=APP_ID_RANDOM_PROVIDER;function _randomChar(){return String.fromCharCode(97+Math.floor(Math.random()*25));}/**
 * A function that will be executed when a platform is initialized.
 * @experimental
 */var PLATFORM_INITIALIZER=new InjectionToken('Platform Initializer');/**
 * A token that indicates an opaque platform id.
 * @experimental
 */exports.PLATFORM_INITIALIZER=PLATFORM_INITIALIZER;var PLATFORM_ID=new InjectionToken('Platform ID');/**
 * All callbacks provided via this token will be called for every component that is bootstrapped.
 * Signature of the callback:
 *
 * `(componentRef: ComponentRef) => void`.
 *
 * @experimental
 */exports.PLATFORM_ID=PLATFORM_ID;var APP_BOOTSTRAP_LISTENER=new InjectionToken('appBootstrapListener');/**
 * A token which indicates the root directory of the application
 * @experimental
 */exports.APP_BOOTSTRAP_LISTENER=APP_BOOTSTRAP_LISTENER;var PACKAGE_ROOT_URL=new InjectionToken('Application Packages Root URL');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.PACKAGE_ROOT_URL=PACKAGE_ROOT_URL;var Console=/** @class */function(){function Console(){}Console.prototype.log=function(message){// tslint:disable-next-line:no-console
console.log(message);};// Note: for reporting errors use `DOM.logError()` as it is platform specific
// Note: for reporting errors use `DOM.logError()` as it is platform specific
Console.prototype.warn=// Note: for reporting errors use `DOM.logError()` as it is platform specific
function(message){// tslint:disable-next-line:no-console
console.warn(message);};Console.decorators=[{type:Injectable}];/** @nocollapse */Console.ctorParameters=function(){return[];};return Console;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Combination of NgModuleFactory and ComponentFactorys.
 *
 * @experimental
 */exports.ɵConsole=Console;var ModuleWithComponentFactories=/** @class */function(){function ModuleWithComponentFactories(ngModuleFactory,componentFactories){this.ngModuleFactory=ngModuleFactory;this.componentFactories=componentFactories;}return ModuleWithComponentFactories;}();exports.ModuleWithComponentFactories=ModuleWithComponentFactories;function _throwError(){throw new Error("Runtime compiler is not loaded");}/**
 * Low-level service for running the angular compiler during runtime
 * to create {@link ComponentFactory}s, which
 * can later be used to create and render a Component instance.
 *
 * Each `@NgModule` provides an own `Compiler` to its injector,
 * that will use the directives/pipes of the ng module for compilation
 * of components.
 *
 */var Compiler=/** @class */function(){function Compiler(){}/**
     * Compiles the given NgModule and all of its components. All templates of the components listed
     * in `entryComponents` have to be inlined.
     */ /**
       * Compiles the given NgModule and all of its components. All templates of the components listed
       * in `entryComponents` have to be inlined.
       */Compiler.prototype.compileModuleSync=/**
       * Compiles the given NgModule and all of its components. All templates of the components listed
       * in `entryComponents` have to be inlined.
       */function(moduleType){throw _throwError();};/**
     * Compiles the given NgModule and all of its components
     */ /**
       * Compiles the given NgModule and all of its components
       */Compiler.prototype.compileModuleAsync=/**
       * Compiles the given NgModule and all of its components
       */function(moduleType){throw _throwError();};/**
     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.
     */ /**
       * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.
       */Compiler.prototype.compileModuleAndAllComponentsSync=/**
       * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.
       */function(moduleType){throw _throwError();};/**
     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.
     */ /**
       * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.
       */Compiler.prototype.compileModuleAndAllComponentsAsync=/**
       * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.
       */function(moduleType){throw _throwError();};/**
     * Clears all caches.
     */ /**
       * Clears all caches.
       */Compiler.prototype.clearCache=/**
       * Clears all caches.
       */function(){};/**
     * Clears the cache for the given component/ngModule.
     */ /**
       * Clears the cache for the given component/ngModule.
       */Compiler.prototype.clearCacheFor=/**
       * Clears the cache for the given component/ngModule.
       */function(type){};Compiler.decorators=[{type:Injectable}];/** @nocollapse */Compiler.ctorParameters=function(){return[];};return Compiler;}();/**
 * Token to provide CompilerOptions in the platform injector.
 *
 * @experimental
 */exports.Compiler=Compiler;var COMPILER_OPTIONS=new InjectionToken('compilerOptions');/**
 * A factory for creating a Compiler
 *
 * @experimental
 */exports.COMPILER_OPTIONS=COMPILER_OPTIONS;var CompilerFactory=/** @class */function(){function CompilerFactory(){}return CompilerFactory;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents an instance of a Component created via a {@link ComponentFactory}.
 *
 * `ComponentRef` provides access to the Component Instance as well other objects related to this
 * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}
 * method.
 *
 */exports.CompilerFactory=CompilerFactory;var ComponentRef=/** @class */function(){function ComponentRef(){}return ComponentRef;}();/**
 *
 */exports.ComponentRef=ComponentRef;var ComponentFactory=/** @class */function(){function ComponentFactory(){}return ComponentFactory;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.ɵComponentFactory=exports.ComponentFactory=ComponentFactory;function noComponentFactoryError(component){var error=Error("No component factory found for "+stringify(component)+". Did you add it to @NgModule.entryComponents?");error[ERROR_COMPONENT]=component;return error;}var ERROR_COMPONENT='ngComponent';var _NullComponentFactoryResolver=/** @class */function(){function _NullComponentFactoryResolver(){}_NullComponentFactoryResolver.prototype.resolveComponentFactory=function(component){throw noComponentFactoryError(component);};return _NullComponentFactoryResolver;}();/**
 *
 */var ComponentFactoryResolver=/** @class */function(){function ComponentFactoryResolver(){}ComponentFactoryResolver.NULL=new _NullComponentFactoryResolver();return ComponentFactoryResolver;}();exports.ComponentFactoryResolver=ComponentFactoryResolver;var CodegenComponentFactoryResolver=/** @class */function(){function CodegenComponentFactoryResolver(factories,_parent,_ngModule){this._parent=_parent;this._ngModule=_ngModule;this._factories=new Map();for(var i=0;i<factories.length;i++){var factory=factories[i];this._factories.set(factory.componentType,factory);}}CodegenComponentFactoryResolver.prototype.resolveComponentFactory=function(component){var factory=this._factories.get(component);if(!factory&&this._parent){factory=this._parent.resolveComponentFactory(component);}if(!factory){throw noComponentFactoryError(component);}return new ComponentFactoryBoundToModule(factory,this._ngModule);};return CodegenComponentFactoryResolver;}();exports.ɵCodegenComponentFactoryResolver=CodegenComponentFactoryResolver;var ComponentFactoryBoundToModule=/** @class */function(_super){(0,_tslib.__extends)(ComponentFactoryBoundToModule,_super);function ComponentFactoryBoundToModule(factory,ngModule){var _this=_super.call(this)||this;_this.factory=factory;_this.ngModule=ngModule;_this.selector=factory.selector;_this.componentType=factory.componentType;_this.ngContentSelectors=factory.ngContentSelectors;_this.inputs=factory.inputs;_this.outputs=factory.outputs;return _this;}ComponentFactoryBoundToModule.prototype.create=function(injector,projectableNodes,rootSelectorOrNode,ngModule){return this.factory.create(injector,projectableNodes,rootSelectorOrNode,ngModule||this.ngModule);};return ComponentFactoryBoundToModule;}(ComponentFactory);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents an instance of an NgModule created via a {@link NgModuleFactory}.
 *
 * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this
 * NgModule Instance.
 *
 *
 */var NgModuleRef=/** @class */function(){function NgModuleRef(){}return NgModuleRef;}();/**
 * @experimental
 */exports.NgModuleRef=NgModuleRef;var NgModuleFactory=/** @class */function(){function NgModuleFactory(){}return NgModuleFactory;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.NgModuleFactory=NgModuleFactory;var trace;var events;function detectWTF(){var wtf=_global/** TODO #9100 */['wtf'];if(wtf){trace=wtf['trace'];if(trace){events=trace['events'];return true;}}return false;}function createScope(signature,flags){if(flags===void 0){flags=null;}return events.createScope(signature,flags);}function leave(scope,returnValue){trace.leaveScope(scope,returnValue);return returnValue;}function startTimeRange(rangeType,action){return trace.beginTimeRange(rangeType,action);}function endTimeRange(range){trace.endTimeRange(range);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * True if WTF is enabled.
 */var wtfEnabled=detectWTF();exports.ɵangular_packages_core_core_m=wtfEnabled;function noopScope(arg0,arg1){return null;}/**
 * Create trace scope.
 *
 * Scopes must be strictly nested and are analogous to stack frames, but
 * do not have to follow the stack frames. Instead it is recommended that they follow logical
 * nesting. You may want to use
 * [Event
 * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)
 * as they are defined in WTF.
 *
 * Used to mark scope entry. The return value is used to leave the scope.
 *
 *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');
 *
 *     someMethod() {
 *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI
 *        // DO SOME WORK HERE
 *        return wtfLeave(s, 123); // Return value 123
 *     }
 *
 * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can
 * negatively impact the performance of your application. For this reason we recommend that
 * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and
 * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to
 * exception, will produce incorrect trace, but presence of exception signifies logic error which
 * needs to be fixed before the app should be profiled. Add try-finally only when you expect that
 * an exception is expected during normal execution while profiling.
 *
 * @experimental
 */var wtfCreateScope=wtfEnabled?createScope:function(signature,flags){return noopScope;};/**
 * Used to mark end of Scope.
 *
 * - `scope` to end.
 * - `returnValue` (optional) to be passed to the WTF.
 *
 * Returns the `returnValue for easy chaining.
 * @experimental
 */exports.wtfCreateScope=wtfCreateScope;var wtfLeave=wtfEnabled?leave:function(s,r){return r;};/**
 * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.
 * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been
 * enabled.
 *
 *     someMethod() {
 *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');
 *        var future = new Future.delay(5).then((_) {
 *          wtfEndTimeRange(s);
 *        });
 *     }
 * @experimental
 */exports.wtfLeave=wtfLeave;var wtfStartTimeRange=wtfEnabled?startTimeRange:function(rangeType,action){return null;};/**
 * Ends a async time range operation.
 * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been
 * enabled.
 * @experimental
 */exports.wtfStartTimeRange=wtfStartTimeRange;var wtfEndTimeRange=wtfEnabled?endTimeRange:function(r){return null;};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Use by directives and components to emit custom Events.
 *
 * ### Examples
 *
 * In the following example, `Zippy` alternatively emits `open` and `close` events when its
 * title gets clicked:
 *
 * ```
 * @Component({
 *   selector: 'zippy',
 *   template: `
 *   <div class="zippy">
 *     <div (click)="toggle()">Toggle</div>
 *     <div [hidden]="!visible">
 *       <ng-content></ng-content>
 *     </div>
 *  </div>`})
 * export class Zippy {
 *   visible: boolean = true;
 *   @Output() open: EventEmitter<any> = new EventEmitter();
 *   @Output() close: EventEmitter<any> = new EventEmitter();
 *
 *   toggle() {
 *     this.visible = !this.visible;
 *     if (this.visible) {
 *       this.open.emit(null);
 *     } else {
 *       this.close.emit(null);
 *     }
 *   }
 * }
 * ```
 *
 * The events payload can be accessed by the parameter `$event` on the components output event
 * handler:
 *
 * ```
 * <zippy (open)="onOpen($event)" (close)="onClose($event)"></zippy>
 * ```
 *
 * Uses Rx.Observable but provides an adapter to make it work as specified here:
 * https://github.com/jhusain/observable-spec
 *
 * Once a reference implementation of the spec is available, switch to it.
 *
 */exports.wtfEndTimeRange=wtfEndTimeRange;var EventEmitter=/** @class */function(_super){(0,_tslib.__extends)(EventEmitter,_super);/**
     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,
     * delivers events synchronously or asynchronously.
     *
     * @param isAsync By default, events are delivered synchronously (default value: `false`).
     * Set to `true` for asynchronous event delivery.
     */function EventEmitter(isAsync){if(isAsync===void 0){isAsync=false;}var _this=_super.call(this)||this;_this.__isAsync=isAsync;return _this;}EventEmitter.prototype.emit=function(value){_super.prototype.next.call(this,value);};EventEmitter.prototype.subscribe=function(generatorOrNext,error,complete){var schedulerFn;var errorFn=function errorFn(err){return null;};var completeFn=function completeFn(){return null;};if(generatorOrNext&&_typeof(generatorOrNext)==='object'){schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext.next(value);});}:function(value){generatorOrNext.next(value);};if(generatorOrNext.error){errorFn=this.__isAsync?function(err){setTimeout(function(){return generatorOrNext.error(err);});}:function(err){generatorOrNext.error(err);};}if(generatorOrNext.complete){completeFn=this.__isAsync?function(){setTimeout(function(){return generatorOrNext.complete();});}:function(){generatorOrNext.complete();};}}else{schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext(value);});}:function(value){generatorOrNext(value);};if(error){errorFn=this.__isAsync?function(err){setTimeout(function(){return error(err);});}:function(err){error(err);};}if(complete){completeFn=this.__isAsync?function(){setTimeout(function(){return complete();});}:function(){complete();};}}var sink=_super.prototype.subscribe.call(this,schedulerFn,errorFn,completeFn);if(generatorOrNext instanceof _rxjs.Subscription){generatorOrNext.add(sink);}return sink;};return EventEmitter;}(_rxjs.Subject);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An injectable service for executing work inside or outside of the Angular zone.
 *
 * The most common use of this service is to optimize performance when starting a work consisting of
 * one or more asynchronous tasks that don't require UI updates or error handling to be handled by
 * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks
 * can reenter the Angular zone via {@link #run}.
 *
 * <!-- TODO: add/fix links to:
 *   - docs explaining zones and the use of zones in Angular and change-detection
 *   - link to runOutsideAngular/run (throughout this file!)
 *   -->
 *
 * ### Example
 *
 * ```
 * import {Component, NgZone} from '@angular/core';
 * import {NgIf} from '@angular/common';
 *
 * @Component({
 *   selector: 'ng-zone-demo',
 *   template: `
 *     <h2>Demo: NgZone</h2>
 *
 *     <p>Progress: {{progress}}%</p>
 *     <p *ngIf="progress >= 100">Done processing {{label}} of Angular zone!</p>
 *
 *     <button (click)="processWithinAngularZone()">Process within Angular zone</button>
 *     <button (click)="processOutsideOfAngularZone()">Process outside of Angular zone</button>
 *   `,
 * })
 * export class NgZoneDemo {
 *   progress: number = 0;
 *   label: string;
 *
 *   constructor(private _ngZone: NgZone) {}
 *
 *   // Loop inside the Angular zone
 *   // so the UI DOES refresh after each setTimeout cycle
 *   processWithinAngularZone() {
 *     this.label = 'inside';
 *     this.progress = 0;
 *     this._increaseProgress(() => console.log('Inside Done!'));
 *   }
 *
 *   // Loop outside of the Angular zone
 *   // so the UI DOES NOT refresh after each setTimeout cycle
 *   processOutsideOfAngularZone() {
 *     this.label = 'outside';
 *     this.progress = 0;
 *     this._ngZone.runOutsideAngular(() => {
 *       this._increaseProgress(() => {
 *         // reenter the Angular zone and display done
 *         this._ngZone.run(() => { console.log('Outside Done!'); });
 *       });
 *     });
 *   }
 *
 *   _increaseProgress(doneCallback: () => void) {
 *     this.progress += 1;
 *     console.log(`Current progress: ${this.progress}%`);
 *
 *     if (this.progress < 100) {
 *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);
 *     } else {
 *       doneCallback();
 *     }
 *   }
 * }
 * ```
 *
 * @experimental
 */exports.EventEmitter=EventEmitter;var NgZone=/** @class */function(){function NgZone(_a){var _b=_a.enableLongStackTrace,enableLongStackTrace=_b===void 0?false:_b;this.hasPendingMicrotasks=false;this.hasPendingMacrotasks=false;/**
           * Whether there are no outstanding microtasks or macrotasks.
           */this.isStable=true;/**
           * Notifies when code enters Angular Zone. This gets fired first on VM Turn.
           */this.onUnstable=new EventEmitter(false);/**
           * Notifies when there is no more microtasks enqueued in the current VM Turn.
           * This is a hint for Angular to do change detection, which may enqueue more microtasks.
           * For this reason this event can fire multiple times per VM Turn.
           */this.onMicrotaskEmpty=new EventEmitter(false);/**
           * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which
           * implies we are about to relinquish VM turn.
           * This event gets called just once.
           */this.onStable=new EventEmitter(false);/**
           * Notifies that an error has been delivered.
           */this.onError=new EventEmitter(false);if(typeof Zone=='undefined'){throw new Error("In this configuration Angular requires Zone.js");}Zone.assertZonePatched();var self=this;self._nesting=0;self._outer=self._inner=Zone.current;if(Zone['wtfZoneSpec']){self._inner=self._inner.fork(Zone['wtfZoneSpec']);}if(Zone['TaskTrackingZoneSpec']){self._inner=self._inner.fork(new Zone['TaskTrackingZoneSpec']());}if(enableLongStackTrace&&Zone['longStackTraceZoneSpec']){self._inner=self._inner.fork(Zone['longStackTraceZoneSpec']);}forkInnerZoneWithAngularBehavior(self);}NgZone.isInAngularZone=function(){return Zone.current.get('isAngularZone')===true;};NgZone.assertInAngularZone=function(){if(!NgZone.isInAngularZone()){throw new Error('Expected to be in Angular Zone, but it is not!');}};NgZone.assertNotInAngularZone=function(){if(NgZone.isInAngularZone()){throw new Error('Expected to not be in Angular Zone, but it is!');}};/**
     * Executes the `fn` function synchronously within the Angular zone and returns value returned by
     * the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     */ /**
       * Executes the `fn` function synchronously within the Angular zone and returns value returned by
       * the function.
       *
       * Running functions via `run` allows you to reenter Angular zone from a task that was executed
       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
       *
       * Any future tasks or microtasks scheduled from within this function will continue executing from
       * within the Angular zone.
       *
       * If a synchronous error happens it will be rethrown and not reported via `onError`.
       */NgZone.prototype.run=/**
       * Executes the `fn` function synchronously within the Angular zone and returns value returned by
       * the function.
       *
       * Running functions via `run` allows you to reenter Angular zone from a task that was executed
       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
       *
       * Any future tasks or microtasks scheduled from within this function will continue executing from
       * within the Angular zone.
       *
       * If a synchronous error happens it will be rethrown and not reported via `onError`.
       */function(fn,applyThis,applyArgs){return this._inner.run(fn,applyThis,applyArgs);};/**
     * Executes the `fn` function synchronously within the Angular zone as a task and returns value
     * returned by the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     */ /**
       * Executes the `fn` function synchronously within the Angular zone as a task and returns value
       * returned by the function.
       *
       * Running functions via `run` allows you to reenter Angular zone from a task that was executed
       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
       *
       * Any future tasks or microtasks scheduled from within this function will continue executing from
       * within the Angular zone.
       *
       * If a synchronous error happens it will be rethrown and not reported via `onError`.
       */NgZone.prototype.runTask=/**
       * Executes the `fn` function synchronously within the Angular zone as a task and returns value
       * returned by the function.
       *
       * Running functions via `run` allows you to reenter Angular zone from a task that was executed
       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
       *
       * Any future tasks or microtasks scheduled from within this function will continue executing from
       * within the Angular zone.
       *
       * If a synchronous error happens it will be rethrown and not reported via `onError`.
       */function(fn,applyThis,applyArgs,name){var zone=this._inner;var task=zone.scheduleEventTask('NgZoneEvent: '+name,fn,EMPTY_PAYLOAD,noop,noop);try{return zone.runTask(task,applyThis,applyArgs);}finally{zone.cancelTask(task);}};/**
     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
     * rethrown.
     */ /**
       * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
       * rethrown.
       */NgZone.prototype.runGuarded=/**
       * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
       * rethrown.
       */function(fn,applyThis,applyArgs){return this._inner.runGuarded(fn,applyThis,applyArgs);};/**
     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
     * the function.
     *
     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do
     * work that
     * doesn't trigger Angular change-detection or is subject to Angular's error handling.
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * outside of the Angular zone.
     *
     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.
     */ /**
       * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
       * the function.
       *
       * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do
       * work that
       * doesn't trigger Angular change-detection or is subject to Angular's error handling.
       *
       * Any future tasks or microtasks scheduled from within this function will continue executing from
       * outside of the Angular zone.
       *
       * Use {@link #run} to reenter the Angular zone and do work that updates the application model.
       */NgZone.prototype.runOutsideAngular=/**
       * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
       * the function.
       *
       * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do
       * work that
       * doesn't trigger Angular change-detection or is subject to Angular's error handling.
       *
       * Any future tasks or microtasks scheduled from within this function will continue executing from
       * outside of the Angular zone.
       *
       * Use {@link #run} to reenter the Angular zone and do work that updates the application model.
       */function(fn){return this._outer.run(fn);};return NgZone;}();exports.NgZone=NgZone;function noop(){}var EMPTY_PAYLOAD={};function checkStable(zone){if(zone._nesting==0&&!zone.hasPendingMicrotasks&&!zone.isStable){try{zone._nesting++;zone.onMicrotaskEmpty.emit(null);}finally{zone._nesting--;if(!zone.hasPendingMicrotasks){try{zone.runOutsideAngular(function(){return zone.onStable.emit(null);});}finally{zone.isStable=true;}}}}}function forkInnerZoneWithAngularBehavior(zone){zone._inner=zone._inner.fork({name:'angular',properties:{'isAngularZone':true},onInvokeTask:function onInvokeTask(delegate,current,target,task,applyThis,applyArgs){try{onEnter(zone);return delegate.invokeTask(target,task,applyThis,applyArgs);}finally{onLeave(zone);}},onInvoke:function onInvoke(delegate,current,target,callback,applyThis,applyArgs,source){try{onEnter(zone);return delegate.invoke(target,callback,applyThis,applyArgs,source);}finally{onLeave(zone);}},onHasTask:function onHasTask(delegate,current,target,hasTaskState){delegate.hasTask(target,hasTaskState);if(current===target){// We are only interested in hasTask events which originate from our zone
// (A child hasTask event is not interesting to us)
if(hasTaskState.change=='microTask'){zone.hasPendingMicrotasks=hasTaskState.microTask;checkStable(zone);}else if(hasTaskState.change=='macroTask'){zone.hasPendingMacrotasks=hasTaskState.macroTask;}}},onHandleError:function onHandleError(delegate,current,target,error){delegate.handleError(target,error);zone.runOutsideAngular(function(){return zone.onError.emit(error);});return false;}});}function onEnter(zone){zone._nesting++;if(zone.isStable){zone.isStable=false;zone.onUnstable.emit(null);}}function onLeave(zone){zone._nesting--;checkStable(zone);}/**
 * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls
 * to framework to perform rendering.
 */var NoopNgZone=/** @class */function(){function NoopNgZone(){this.hasPendingMicrotasks=false;this.hasPendingMacrotasks=false;this.isStable=true;this.onUnstable=new EventEmitter();this.onMicrotaskEmpty=new EventEmitter();this.onStable=new EventEmitter();this.onError=new EventEmitter();}NoopNgZone.prototype.run=function(fn){return fn();};NoopNgZone.prototype.runGuarded=function(fn){return fn();};NoopNgZone.prototype.runOutsideAngular=function(fn){return fn();};NoopNgZone.prototype.runTask=function(fn){return fn();};return NoopNgZone;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * The Testability service provides testing hooks that can be accessed from
 * the browser and by services such as Protractor. Each bootstrapped Angular
 * application on the page will have an instance of Testability.
 * @experimental
 */var Testability=/** @class */function(){function Testability(_ngZone){var _this=this;this._ngZone=_ngZone;this._pendingCount=0;this._isZoneStable=true;/**
           * Whether any work was done since the last 'whenStable' callback. This is
           * useful to detect if this could have potentially destabilized another
           * component while it is stabilizing.
           * @internal
           */this._didWork=false;this._callbacks=[];this._watchAngularEvents();_ngZone.run(function(){_this.taskTrackingZone=Zone.current.get('TaskTrackingZone');});}Testability.prototype._watchAngularEvents=function(){var _this=this;this._ngZone.onUnstable.subscribe({next:function next(){_this._didWork=true;_this._isZoneStable=false;}});this._ngZone.runOutsideAngular(function(){_this._ngZone.onStable.subscribe({next:function next(){NgZone.assertNotInAngularZone();scheduleMicroTask(function(){_this._isZoneStable=true;_this._runCallbacksIfReady();});}});});};/**
     * Increases the number of pending request
     * @deprecated pending requests are now tracked with zones.
     */ /**
       * Increases the number of pending request
       * @deprecated pending requests are now tracked with zones.
       */Testability.prototype.increasePendingRequestCount=/**
       * Increases the number of pending request
       * @deprecated pending requests are now tracked with zones.
       */function(){this._pendingCount+=1;this._didWork=true;return this._pendingCount;};/**
     * Decreases the number of pending request
     * @deprecated pending requests are now tracked with zones
     */ /**
       * Decreases the number of pending request
       * @deprecated pending requests are now tracked with zones
       */Testability.prototype.decreasePendingRequestCount=/**
       * Decreases the number of pending request
       * @deprecated pending requests are now tracked with zones
       */function(){this._pendingCount-=1;if(this._pendingCount<0){throw new Error('pending async requests below zero');}this._runCallbacksIfReady();return this._pendingCount;};/**
     * Whether an associated application is stable
     */ /**
       * Whether an associated application is stable
       */Testability.prototype.isStable=/**
       * Whether an associated application is stable
       */function(){return this._isZoneStable&&this._pendingCount===0&&!this._ngZone.hasPendingMacrotasks;};Testability.prototype._runCallbacksIfReady=function(){var _this=this;if(this.isStable()){// Schedules the call backs in a new frame so that it is always async.
scheduleMicroTask(function(){while(_this._callbacks.length!==0){var cb=_this._callbacks.pop();clearTimeout(cb.timeoutId);cb.doneCb(_this._didWork);}_this._didWork=false;});}else{// Still not stable, send updates.
var pending_1=this.getPendingTasks();this._callbacks=this._callbacks.filter(function(cb){if(cb.updateCb&&cb.updateCb(pending_1)){clearTimeout(cb.timeoutId);return false;}return true;});this._didWork=true;}};Testability.prototype.getPendingTasks=function(){if(!this.taskTrackingZone){return[];}return this.taskTrackingZone.macroTasks.map(function(t){return{source:t.source,isPeriodic:t.data.isPeriodic,delay:t.data.delay,// From TaskTrackingZone:
// https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40
creationLocation:t.creationLocation,// Added by Zones for XHRs
// https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133
xhr:t.data.target};});};Testability.prototype.addCallback=function(cb,timeout,updateCb){var _this=this;var timeoutId=-1;if(timeout&&timeout>0){timeoutId=setTimeout(function(){_this._callbacks=_this._callbacks.filter(function(cb){return cb.timeoutId!==timeoutId;});cb(_this._didWork,_this.getPendingTasks());},timeout);}this._callbacks.push({doneCb:cb,timeoutId:timeoutId,updateCb:updateCb});};/**
     * Wait for the application to be stable with a timeout. If the timeout is reached before that
     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.
     *
     * @param doneCb The callback to invoke when Angular is stable or the timeout expires
     *    whichever comes first.
     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not
     *    specified, whenStable() will wait forever.
     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of
     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked
     *    and no further updates will be issued.
     */ /**
       * Wait for the application to be stable with a timeout. If the timeout is reached before that
       * happens, the callback receives a list of the macro tasks that were pending, otherwise null.
       *
       * @param doneCb The callback to invoke when Angular is stable or the timeout expires
       *    whichever comes first.
       * @param timeout Optional. The maximum time to wait for Angular to become stable. If not
       *    specified, whenStable() will wait forever.
       * @param updateCb Optional. If specified, this callback will be invoked whenever the set of
       *    pending macrotasks changes. If this callback returns true doneCb will not be invoked
       *    and no further updates will be issued.
       */Testability.prototype.whenStable=/**
       * Wait for the application to be stable with a timeout. If the timeout is reached before that
       * happens, the callback receives a list of the macro tasks that were pending, otherwise null.
       *
       * @param doneCb The callback to invoke when Angular is stable or the timeout expires
       *    whichever comes first.
       * @param timeout Optional. The maximum time to wait for Angular to become stable. If not
       *    specified, whenStable() will wait forever.
       * @param updateCb Optional. If specified, this callback will be invoked whenever the set of
       *    pending macrotasks changes. If this callback returns true doneCb will not be invoked
       *    and no further updates will be issued.
       */function(doneCb,timeout,updateCb){if(updateCb&&!this.taskTrackingZone){throw new Error('Task tracking zone is required when passing an update callback to '+'whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');}// These arguments are 'Function' above to keep the public API simple.
this.addCallback(doneCb,timeout,updateCb);this._runCallbacksIfReady();};/**
     * Get the number of pending requests
     * @deprecated pending requests are now tracked with zones
     */ /**
       * Get the number of pending requests
       * @deprecated pending requests are now tracked with zones
       */Testability.prototype.getPendingRequestCount=/**
       * Get the number of pending requests
       * @deprecated pending requests are now tracked with zones
       */function(){return this._pendingCount;};/**
     * Find providers by name
     * @param using The root element to search from
     * @param provider The name of binding variable
     * @param exactMatch Whether using exactMatch
     */ /**
       * Find providers by name
       * @param using The root element to search from
       * @param provider The name of binding variable
       * @param exactMatch Whether using exactMatch
       */Testability.prototype.findProviders=/**
       * Find providers by name
       * @param using The root element to search from
       * @param provider The name of binding variable
       * @param exactMatch Whether using exactMatch
       */function(using,provider,exactMatch){// TODO(juliemr): implement.
return[];};Testability.decorators=[{type:Injectable}];/** @nocollapse */Testability.ctorParameters=function(){return[{type:NgZone}];};return Testability;}();/**
 * A global registry of {@link Testability} instances for specific elements.
 * @experimental
 */exports.Testability=Testability;var TestabilityRegistry=/** @class */function(){function TestabilityRegistry(){/** @internal */this._applications=new Map();_testabilityGetter.addToWindow(this);}/**
     * Registers an application with a testability hook so that it can be tracked
     * @param token token of application, root element
     * @param testability Testability hook
     */ /**
       * Registers an application with a testability hook so that it can be tracked
       * @param token token of application, root element
       * @param testability Testability hook
       */TestabilityRegistry.prototype.registerApplication=/**
       * Registers an application with a testability hook so that it can be tracked
       * @param token token of application, root element
       * @param testability Testability hook
       */function(token,testability){this._applications.set(token,testability);};/**
     * Unregisters an application.
     * @param token token of application, root element
     */ /**
       * Unregisters an application.
       * @param token token of application, root element
       */TestabilityRegistry.prototype.unregisterApplication=/**
       * Unregisters an application.
       * @param token token of application, root element
       */function(token){this._applications.delete(token);};/**
     * Unregisters all applications
     */ /**
       * Unregisters all applications
       */TestabilityRegistry.prototype.unregisterAllApplications=/**
       * Unregisters all applications
       */function(){this._applications.clear();};/**
     * Get a testability hook associated with the application
     * @param elem root element
     */ /**
       * Get a testability hook associated with the application
       * @param elem root element
       */TestabilityRegistry.prototype.getTestability=/**
       * Get a testability hook associated with the application
       * @param elem root element
       */function(elem){return this._applications.get(elem)||null;};/**
     * Get all registered testabilities
     */ /**
       * Get all registered testabilities
       */TestabilityRegistry.prototype.getAllTestabilities=/**
       * Get all registered testabilities
       */function(){return Array.from(this._applications.values());};/**
     * Get all registered applications(root elements)
     */ /**
       * Get all registered applications(root elements)
       */TestabilityRegistry.prototype.getAllRootElements=/**
       * Get all registered applications(root elements)
       */function(){return Array.from(this._applications.keys());};/**
     * Find testability of a node in the Tree
     * @param elem node
     * @param findInAncestors whether finding testability in ancestors if testability was not found in
     * current node
     */ /**
       * Find testability of a node in the Tree
       * @param elem node
       * @param findInAncestors whether finding testability in ancestors if testability was not found in
       * current node
       */TestabilityRegistry.prototype.findTestabilityInTree=/**
       * Find testability of a node in the Tree
       * @param elem node
       * @param findInAncestors whether finding testability in ancestors if testability was not found in
       * current node
       */function(elem,findInAncestors){if(findInAncestors===void 0){findInAncestors=true;}return _testabilityGetter.findTestabilityInTree(this,elem,findInAncestors);};TestabilityRegistry.decorators=[{type:Injectable}];/** @nocollapse */TestabilityRegistry.ctorParameters=function(){return[];};return TestabilityRegistry;}();exports.TestabilityRegistry=TestabilityRegistry;var _NoopGetTestability=/** @class */function(){function _NoopGetTestability(){}_NoopGetTestability.prototype.addToWindow=function(registry){};_NoopGetTestability.prototype.findTestabilityInTree=function(registry,elem,findInAncestors){return null;};return _NoopGetTestability;}();/**
 * Set the {@link GetTestability} implementation used by the Angular testing framework.
 * @experimental
 */function setTestabilityGetter(getter){_testabilityGetter=getter;}var _testabilityGetter=new _NoopGetTestability();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _devMode=true;var _runModeLocked=false;var _platform;var ALLOW_MULTIPLE_PLATFORMS=new InjectionToken('AllowMultipleToken');/**
 * Disable Angular's development mode, which turns off assertions and other
 * checks within the framework.
 *
 * One important assertion this disables verifies that a change detection pass
 * does not result in additional changes to any bindings (also known as
 * unidirectional data flow).
 *
 *
 */exports.ɵALLOW_MULTIPLE_PLATFORMS=ALLOW_MULTIPLE_PLATFORMS;function enableProdMode(){if(_runModeLocked){throw new Error('Cannot enable prod mode after platform setup.');}_devMode=false;}/**
 * Returns whether Angular is in development mode. After called once,
 * the value is locked and won't change any more.
 *
 * By default, this is true, unless a user calls `enableProdMode` before calling this.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function isDevMode(){_runModeLocked=true;return _devMode;}/**
 * A token for third-party components that can register themselves with NgProbe.
 *
 * @experimental
 */var NgProbeToken=/** @class */function(){function NgProbeToken(name,token){this.name=name;this.token=token;}return NgProbeToken;}();/**
 * Creates a platform.
 * Platforms have to be eagerly created via this function.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */exports.NgProbeToken=NgProbeToken;function createPlatform(injector){if(_platform&&!_platform.destroyed&&!_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){throw new Error('There can be only one platform. Destroy the previous one to create a new one.');}_platform=injector.get(PlatformRef);var inits=injector.get(PLATFORM_INITIALIZER,null);if(inits)inits.forEach(function(init){return init();});return _platform;}/**
 * Creates a factory for a platform
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function createPlatformFactory(parentPlatformFactory,name,providers){if(providers===void 0){providers=[];}var desc="Platform: "+name;var marker=new InjectionToken(desc);return function(extraProviders){if(extraProviders===void 0){extraProviders=[];}var platform=getPlatform();if(!platform||platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){if(parentPlatformFactory){parentPlatformFactory(providers.concat(extraProviders).concat({provide:marker,useValue:true}));}else{var injectedProviders=providers.concat(extraProviders).concat({provide:marker,useValue:true});createPlatform(Injector.create({providers:injectedProviders,name:desc}));}}return assertPlatform(marker);};}/**
 * Checks that there currently is a platform which contains the given token as a provider.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function assertPlatform(requiredToken){var platform=getPlatform();if(!platform){throw new Error('No platform exists!');}if(!platform.injector.get(requiredToken,null)){throw new Error('A platform with a different configuration has been created. Please destroy it first.');}return platform;}/**
 * Destroy the existing platform.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function destroyPlatform(){if(_platform&&!_platform.destroyed){_platform.destroy();}}/**
 * Returns the current platform.
 *
 * @experimental APIs related to application bootstrap are currently under review.
 */function getPlatform(){return _platform&&!_platform.destroyed?_platform:null;}/**
 * The Angular platform is the entry point for Angular on a web page. Each page
 * has exactly one platform, and services (such as reflection) which are common
 * to every Angular application running on the page are bound in its scope.
 *
 * A page's platform is initialized implicitly when a platform is created via a platform factory
 * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.
 *
 *
 */var PlatformRef=/** @class */function(){/** @internal */function PlatformRef(_injector){this._injector=_injector;this._modules=[];this._destroyListeners=[];this._destroyed=false;}/**
     * Creates an instance of an `@NgModule` for the given platform
     * for offline compilation.
     *
     * ## Simple Example
     *
     * ```typescript
     * my_module.ts:
     *
     * @NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * main.ts:
     * import {MyModuleNgFactory} from './my_module.ngfactory';
     * import {platformBrowser} from '@angular/platform-browser';
     *
     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
     * ```
     *
     * @experimental APIs related to application bootstrap are currently under review.
     */ /**
       * Creates an instance of an `@NgModule` for the given platform
       * for offline compilation.
       *
       * ## Simple Example
       *
       * ```typescript
       * my_module.ts:
       *
       * @NgModule({
       *   imports: [BrowserModule]
       * })
       * class MyModule {}
       *
       * main.ts:
       * import {MyModuleNgFactory} from './my_module.ngfactory';
       * import {platformBrowser} from '@angular/platform-browser';
       *
       * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
       * ```
       *
       * @experimental APIs related to application bootstrap are currently under review.
       */PlatformRef.prototype.bootstrapModuleFactory=/**
       * Creates an instance of an `@NgModule` for the given platform
       * for offline compilation.
       *
       * ## Simple Example
       *
       * ```typescript
       * my_module.ts:
       *
       * @NgModule({
       *   imports: [BrowserModule]
       * })
       * class MyModule {}
       *
       * main.ts:
       * import {MyModuleNgFactory} from './my_module.ngfactory';
       * import {platformBrowser} from '@angular/platform-browser';
       *
       * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
       * ```
       *
       * @experimental APIs related to application bootstrap are currently under review.
       */function(moduleFactory,options){var _this=this;// Note: We need to create the NgZone _before_ we instantiate the module,
// as instantiating the module creates some providers eagerly.
// So we create a mini parent injector that just contains the new NgZone and
// pass that as parent to the NgModuleFactory.
var ngZoneOption=options?options.ngZone:undefined;var ngZone=getNgZone(ngZoneOption);var providers=[{provide:NgZone,useValue:ngZone}];// Attention: Don't use ApplicationRef.run here,
// as we want to be sure that all possible constructor calls are inside `ngZone.run`!
return ngZone.run(function(){var ngZoneInjector=Injector.create({providers:providers,parent:_this.injector,name:moduleFactory.moduleType.name});var moduleRef=moduleFactory.create(ngZoneInjector);var exceptionHandler=moduleRef.injector.get(ErrorHandler,null);if(!exceptionHandler){throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');}moduleRef.onDestroy(function(){return remove(_this._modules,moduleRef);});ngZone.runOutsideAngular(function(){return ngZone.onError.subscribe({next:function next(error){exceptionHandler.handleError(error);}});});return _callAndReportToErrorHandler(exceptionHandler,ngZone,function(){var initStatus=moduleRef.injector.get(ApplicationInitStatus);initStatus.runInitializers();return initStatus.donePromise.then(function(){_this._moduleDoBootstrap(moduleRef);return moduleRef;});});});};/**
     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.
     *
     * ## Simple Example
     *
     * ```typescript
     * @NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * let moduleRef = platformBrowser().bootstrapModule(MyModule);
     * ```
     *
     */ /**
       * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.
       *
       * ## Simple Example
       *
       * ```typescript
       * @NgModule({
       *   imports: [BrowserModule]
       * })
       * class MyModule {}
       *
       * let moduleRef = platformBrowser().bootstrapModule(MyModule);
       * ```
       *
       */PlatformRef.prototype.bootstrapModule=/**
       * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.
       *
       * ## Simple Example
       *
       * ```typescript
       * @NgModule({
       *   imports: [BrowserModule]
       * })
       * class MyModule {}
       *
       * let moduleRef = platformBrowser().bootstrapModule(MyModule);
       * ```
       *
       */function(moduleType,compilerOptions){var _this=this;if(compilerOptions===void 0){compilerOptions=[];}var compilerFactory=this.injector.get(CompilerFactory);var options=optionsReducer({},compilerOptions);var compiler=compilerFactory.createCompiler([options]);return compiler.compileModuleAsync(moduleType).then(function(moduleFactory){return _this.bootstrapModuleFactory(moduleFactory,options);});};PlatformRef.prototype._moduleDoBootstrap=function(moduleRef){var appRef=moduleRef.injector.get(ApplicationRef);if(moduleRef._bootstrapComponents.length>0){moduleRef._bootstrapComponents.forEach(function(f){return appRef.bootstrap(f);});}else if(moduleRef.instance.ngDoBootstrap){moduleRef.instance.ngDoBootstrap(appRef);}else{throw new Error("The module "+stringify(moduleRef.instance.constructor)+" was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. "+"Please define one of these.");}this._modules.push(moduleRef);};/**
     * Register a listener to be called when the platform is disposed.
     */ /**
       * Register a listener to be called when the platform is disposed.
       */PlatformRef.prototype.onDestroy=/**
       * Register a listener to be called when the platform is disposed.
       */function(callback){this._destroyListeners.push(callback);};Object.defineProperty(PlatformRef.prototype,"injector",{/**
         * Retrieve the platform {@link Injector}, which is the parent injector for
         * every Angular application on the page and provides singleton providers.
         */get:/**
           * Retrieve the platform {@link Injector}, which is the parent injector for
           * every Angular application on the page and provides singleton providers.
           */function get(){return this._injector;},enumerable:true,configurable:true});/**
     * Destroy the Angular platform and all Angular applications on the page.
     */ /**
       * Destroy the Angular platform and all Angular applications on the page.
       */PlatformRef.prototype.destroy=/**
       * Destroy the Angular platform and all Angular applications on the page.
       */function(){if(this._destroyed){throw new Error('The platform has already been destroyed!');}this._modules.slice().forEach(function(module){return module.destroy();});this._destroyListeners.forEach(function(listener){return listener();});this._destroyed=true;};Object.defineProperty(PlatformRef.prototype,"destroyed",{get:function get(){return this._destroyed;},enumerable:true,configurable:true});PlatformRef.decorators=[{type:Injectable}];/** @nocollapse */PlatformRef.ctorParameters=function(){return[{type:Injector}];};return PlatformRef;}();exports.PlatformRef=PlatformRef;function getNgZone(ngZoneOption){var ngZone;if(ngZoneOption==='noop'){ngZone=new NoopNgZone();}else{ngZone=(ngZoneOption==='zone.js'?undefined:ngZoneOption)||new NgZone({enableLongStackTrace:isDevMode()});}return ngZone;}function _callAndReportToErrorHandler(errorHandler,ngZone,callback){try{var result=callback();if(isPromise(result)){return result.catch(function(e){ngZone.runOutsideAngular(function(){return errorHandler.handleError(e);});// rethrow as the exception handler might not do it
throw e;});}return result;}catch(e){ngZone.runOutsideAngular(function(){return errorHandler.handleError(e);});// rethrow as the exception handler might not do it
throw e;}}function optionsReducer(dst,objs){if(Array.isArray(objs)){dst=objs.reduce(optionsReducer,dst);}else{dst=(0,_tslib.__assign)({},dst,objs);}return dst;}/**
 * A reference to an Angular application running on a page.
 *
 *
 */var ApplicationRef=/** @class */function(){/** @internal */function ApplicationRef(_zone,_console,_injector,_exceptionHandler,_componentFactoryResolver,_initStatus){var _this=this;this._zone=_zone;this._console=_console;this._injector=_injector;this._exceptionHandler=_exceptionHandler;this._componentFactoryResolver=_componentFactoryResolver;this._initStatus=_initStatus;this._bootstrapListeners=[];this._views=[];this._runningTick=false;this._enforceNoNewChanges=false;this._stable=true;/**
           * Get a list of component types registered to this application.
           * This list is populated even before the component is created.
           */this.componentTypes=[];/**
           * Get a list of components registered to this application.
           */this.components=[];this._enforceNoNewChanges=isDevMode();this._zone.onMicrotaskEmpty.subscribe({next:function next(){_this._zone.run(function(){_this.tick();});}});var isCurrentlyStable=new _rxjs.Observable(function(observer){_this._stable=_this._zone.isStable&&!_this._zone.hasPendingMacrotasks&&!_this._zone.hasPendingMicrotasks;_this._zone.runOutsideAngular(function(){observer.next(_this._stable);observer.complete();});});var isStable=new _rxjs.Observable(function(observer){// Create the subscription to onStable outside the Angular Zone so that
// the callback is run outside the Angular Zone.
var stableSub;_this._zone.runOutsideAngular(function(){stableSub=_this._zone.onStable.subscribe(function(){NgZone.assertNotInAngularZone();// Check whether there are no pending macro/micro tasks in the next tick
// to allow for NgZone to update the state.
scheduleMicroTask(function(){if(!_this._stable&&!_this._zone.hasPendingMacrotasks&&!_this._zone.hasPendingMicrotasks){_this._stable=true;observer.next(true);}});});});var unstableSub=_this._zone.onUnstable.subscribe(function(){NgZone.assertInAngularZone();if(_this._stable){_this._stable=false;_this._zone.runOutsideAngular(function(){observer.next(false);});}});return function(){stableSub.unsubscribe();unstableSub.unsubscribe();};});this.isStable=(0,_rxjs.merge)(isCurrentlyStable,isStable.pipe((0,_operators.share)()));}/**
     * Bootstrap a new component at the root level of the application.
     *
     * ### Bootstrap process
     *
     * When bootstrapping a new root component into an application, Angular mounts the
     * specified application component onto DOM elements identified by the [componentType]'s
     * selector and kicks off automatic change detection to finish initializing the component.
     *
     * Optionally, a component can be mounted onto a DOM element that does not match the
     * [componentType]'s selector.
     *
     * ### Example
     * {@example core/ts/platform/platform.ts region='longform'}
     */ /**
       * Bootstrap a new component at the root level of the application.
       *
       * ### Bootstrap process
       *
       * When bootstrapping a new root component into an application, Angular mounts the
       * specified application component onto DOM elements identified by the [componentType]'s
       * selector and kicks off automatic change detection to finish initializing the component.
       *
       * Optionally, a component can be mounted onto a DOM element that does not match the
       * [componentType]'s selector.
       *
       * ### Example
       * {@example core/ts/platform/platform.ts region='longform'}
       */ApplicationRef.prototype.bootstrap=/**
       * Bootstrap a new component at the root level of the application.
       *
       * ### Bootstrap process
       *
       * When bootstrapping a new root component into an application, Angular mounts the
       * specified application component onto DOM elements identified by the [componentType]'s
       * selector and kicks off automatic change detection to finish initializing the component.
       *
       * Optionally, a component can be mounted onto a DOM element that does not match the
       * [componentType]'s selector.
       *
       * ### Example
       * {@example core/ts/platform/platform.ts region='longform'}
       */function(componentOrFactory,rootSelectorOrNode){var _this=this;if(!this._initStatus.done){throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');}var componentFactory;if(componentOrFactory instanceof ComponentFactory){componentFactory=componentOrFactory;}else{componentFactory=this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);}this.componentTypes.push(componentFactory.componentType);// Create a factory associated with the current module if it's not bound to some other
var ngModule=componentFactory instanceof ComponentFactoryBoundToModule?null:this._injector.get(NgModuleRef);var selectorOrNode=rootSelectorOrNode||componentFactory.selector;var compRef=componentFactory.create(Injector.NULL,[],selectorOrNode,ngModule);compRef.onDestroy(function(){_this._unloadComponent(compRef);});var testability=compRef.injector.get(Testability,null);if(testability){compRef.injector.get(TestabilityRegistry).registerApplication(compRef.location.nativeElement,testability);}this._loadComponent(compRef);if(isDevMode()){this._console.log("Angular is running in the development mode. Call enableProdMode() to enable the production mode.");}return compRef;};/**
     * Invoke this method to explicitly process change detection and its side-effects.
     *
     * In development mode, `tick()` also performs a second change detection cycle to ensure that no
     * further changes are detected. If additional changes are picked up during this second cycle,
     * bindings in the app have side-effects that cannot be resolved in a single change detection
     * pass.
     * In this case, Angular throws an error, since an Angular application can only have one change
     * detection pass during which all change detection must complete.
     */ /**
       * Invoke this method to explicitly process change detection and its side-effects.
       *
       * In development mode, `tick()` also performs a second change detection cycle to ensure that no
       * further changes are detected. If additional changes are picked up during this second cycle,
       * bindings in the app have side-effects that cannot be resolved in a single change detection
       * pass.
       * In this case, Angular throws an error, since an Angular application can only have one change
       * detection pass during which all change detection must complete.
       */ApplicationRef.prototype.tick=/**
       * Invoke this method to explicitly process change detection and its side-effects.
       *
       * In development mode, `tick()` also performs a second change detection cycle to ensure that no
       * further changes are detected. If additional changes are picked up during this second cycle,
       * bindings in the app have side-effects that cannot be resolved in a single change detection
       * pass.
       * In this case, Angular throws an error, since an Angular application can only have one change
       * detection pass during which all change detection must complete.
       */function(){var _this=this;if(this._runningTick){throw new Error('ApplicationRef.tick is called recursively');}var scope=ApplicationRef._tickScope();try{this._runningTick=true;this._views.forEach(function(view){return view.detectChanges();});if(this._enforceNoNewChanges){this._views.forEach(function(view){return view.checkNoChanges();});}}catch(e){// Attention: Don't rethrow as it could cancel subscriptions to Observables!
this._zone.runOutsideAngular(function(){return _this._exceptionHandler.handleError(e);});}finally{this._runningTick=false;wtfLeave(scope);}};/**
     * Attaches a view so that it will be dirty checked.
     * The view will be automatically detached when it is destroyed.
     * This will throw if the view is already attached to a ViewContainer.
     */ /**
       * Attaches a view so that it will be dirty checked.
       * The view will be automatically detached when it is destroyed.
       * This will throw if the view is already attached to a ViewContainer.
       */ApplicationRef.prototype.attachView=/**
       * Attaches a view so that it will be dirty checked.
       * The view will be automatically detached when it is destroyed.
       * This will throw if the view is already attached to a ViewContainer.
       */function(viewRef){var view=viewRef;this._views.push(view);view.attachToAppRef(this);};/**
     * Detaches a view from dirty checking again.
     */ /**
       * Detaches a view from dirty checking again.
       */ApplicationRef.prototype.detachView=/**
       * Detaches a view from dirty checking again.
       */function(viewRef){var view=viewRef;remove(this._views,view);view.detachFromAppRef();};ApplicationRef.prototype._loadComponent=function(componentRef){this.attachView(componentRef.hostView);this.tick();this.components.push(componentRef);// Get the listeners lazily to prevent DI cycles.
var listeners=this._injector.get(APP_BOOTSTRAP_LISTENER,[]).concat(this._bootstrapListeners);listeners.forEach(function(listener){return listener(componentRef);});};ApplicationRef.prototype._unloadComponent=function(componentRef){this.detachView(componentRef.hostView);remove(this.components,componentRef);};/** @internal */ /** @internal */ApplicationRef.prototype.ngOnDestroy=/** @internal */function(){// TODO(alxhub): Dispose of the NgZone.
this._views.slice().forEach(function(view){return view.destroy();});};Object.defineProperty(ApplicationRef.prototype,"viewCount",{/**
         * Returns the number of attached views.
         */get:/**
           * Returns the number of attached views.
           */function get(){return this._views.length;},enumerable:true,configurable:true});/** @internal */ApplicationRef._tickScope=wtfCreateScope('ApplicationRef#tick()');ApplicationRef.decorators=[{type:Injectable}];/** @nocollapse */ApplicationRef.ctorParameters=function(){return[{type:NgZone},{type:Console},{type:Injector},{type:ErrorHandler},{type:ComponentFactoryResolver},{type:ApplicationInitStatus}];};return ApplicationRef;}();exports.ApplicationRef=ApplicationRef;function remove(list,el){var index=list.indexOf(el);if(index>-1){list.splice(index,1);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @deprecated Use `RendererType2` (and `Renderer2`) instead.
 */var RenderComponentType=/** @class */function(){function RenderComponentType(id,templateUrl,slotCount,encapsulation,styles,animations){this.id=id;this.templateUrl=templateUrl;this.slotCount=slotCount;this.encapsulation=encapsulation;this.styles=styles;this.animations=animations;}return RenderComponentType;}();/**
 * @deprecated Debug info is handeled internally in the view engine now.
 */exports.RenderComponentType=RenderComponentType;var RenderDebugInfo=/** @class */function(){function RenderDebugInfo(){}return RenderDebugInfo;}();/**
 * @deprecated Use the `Renderer2` instead.
 */exports.ɵRenderDebugInfo=RenderDebugInfo;var Renderer=/** @class */function(){function Renderer(){}return Renderer;}();exports.Renderer=Renderer;var Renderer2Interceptor=new InjectionToken('Renderer2Interceptor');/**
 * Injectable service that provides a low-level interface for modifying the UI.
 *
 * Use this service to bypass Angular's templating and make custom UI changes that can't be
 * expressed declaratively. For example if you need to set a property or an attribute whose name is
 * not statically known, use {@link Renderer#setElementProperty setElementProperty} or
 * {@link Renderer#setElementAttribute setElementAttribute} respectively.
 *
 * If you are implementing a custom renderer, you must implement this interface.
 *
 * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.
 *
 * @deprecated Use `RendererFactory2` instead.
 */var RootRenderer=/** @class */function(){function RootRenderer(){}return RootRenderer;}();/**
 * @experimental
 */exports.RootRenderer=RootRenderer;var RendererFactory2=/** @class */function(){function RendererFactory2(){}return RendererFactory2;}();/**
 * @experimental
 */ /**
 * @experimental
 */exports.RendererFactory2=RendererFactory2;var RendererStyleFlags2;/**
 * @experimental
 */exports.RendererStyleFlags2=RendererStyleFlags2;(function(RendererStyleFlags2){RendererStyleFlags2[RendererStyleFlags2["Important"]=1]="Important";RendererStyleFlags2[RendererStyleFlags2["DashCase"]=2]="DashCase";})(RendererStyleFlags2||(exports.RendererStyleFlags2=RendererStyleFlags2={}));/**
 * @experimental
 */var Renderer2=/** @class */function(){function Renderer2(){}return Renderer2;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A wrapper around a native element inside of a View.
 *
 * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM
 * element.
 *
 * @security Permitting direct access to the DOM can make your application more vulnerable to
 * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the
 * [Security Guide](http://g.co/ng/security).
 *
 *
 */ // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,
// i.e. users have to ask for what they need. With that, we can build better analysis tools
// and could do better codegen in the future.
exports.Renderer2=Renderer2;var ElementRef=/** @class */function(){function ElementRef(nativeElement){this.nativeElement=nativeElement;}return ElementRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Used to load ng module factories.
 *
 */exports.ElementRef=ElementRef;var NgModuleFactoryLoader=/** @class */function(){function NgModuleFactoryLoader(){}return NgModuleFactoryLoader;}();exports.NgModuleFactoryLoader=NgModuleFactoryLoader;var moduleFactories=new Map();/**
 * Registers a loaded module. Should only be called from generated NgModuleFactory code.
 * @experimental
 */function registerModuleFactory(id,factory){var existing=moduleFactories.get(id);if(existing){throw new Error("Duplicate module registered for "+id+" - "+existing.moduleType.name+" vs "+factory.moduleType.name);}moduleFactories.set(id,factory);}/**
 * Returns the NgModuleFactory with the given id, if it exists and has been loaded.
 * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module
 * cannot be found.
 * @experimental
 */function getModuleFactory(id){var factory=moduleFactories.get(id);if(!factory)throw new Error("No module with ID "+id+" loaded");return factory;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An unmodifiable list of items that Angular keeps up to date when the state
 * of the application changes.
 *
 * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}
 * provide.
 *
 * Implements an iterable interface, therefore it can be used in both ES6
 * javascript `for (var i of items)` loops as well as in Angular templates with
 * `*ngFor="let i of myList"`.
 *
 * Changes can be observed by subscribing to the changes `Observable`.
 *
 * NOTE: In the future this class will implement an `Observable` interface.
 *
 * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))
 * ```typescript
 * @Component({...})
 * class Container {
 *   @ViewChildren(Item) items:QueryList<Item>;
 * }
 * ```
 *
 */var QueryList=/** @class */function(){function QueryList(){this.dirty=true;this._results=[];this.changes=new EventEmitter();this.length=0;}/**
     * See
     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
     */ /**
       * See
       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
       */QueryList.prototype.map=/**
       * See
       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
       */function(fn){return this._results.map(fn);};/**
     * See
     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
     */ /**
       * See
       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
       */QueryList.prototype.filter=/**
       * See
       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
       */function(fn){return this._results.filter(fn);};/**
     * See
     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
     */ /**
       * See
       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
       */QueryList.prototype.find=/**
       * See
       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
       */function(fn){return this._results.find(fn);};/**
     * See
     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
     */ /**
       * See
       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
       */QueryList.prototype.reduce=/**
       * See
       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
       */function(fn,init){return this._results.reduce(fn,init);};/**
     * See
     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
     */ /**
       * See
       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
       */QueryList.prototype.forEach=/**
       * See
       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
       */function(fn){this._results.forEach(fn);};/**
     * See
     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
     */ /**
       * See
       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
       */QueryList.prototype.some=/**
       * See
       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
       */function(fn){return this._results.some(fn);};QueryList.prototype.toArray=function(){return this._results.slice();};QueryList.prototype[getSymbolIterator()]=function(){return this._results[getSymbolIterator()]();};QueryList.prototype.toString=function(){return this._results.toString();};QueryList.prototype.reset=function(res){this._results=flatten(res);this.dirty=false;this.length=this._results.length;this.last=this._results[this.length-1];this.first=this._results[0];};QueryList.prototype.notifyOnChanges=function(){this.changes.emit(this);};/** internal */ /** internal */QueryList.prototype.setDirty=/** internal */function(){this.dirty=true;};/** internal */ /** internal */QueryList.prototype.destroy=/** internal */function(){this.changes.complete();this.changes.unsubscribe();};return QueryList;}();exports.QueryList=QueryList;function flatten(list){return list.reduce(function(flat,item){var flatItem=Array.isArray(item)?flatten(item):item;return flat.concat(flatItem);},[]);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _SEPARATOR='#';var FACTORY_CLASS_SUFFIX='NgFactory';/**
 * Configuration for SystemJsNgModuleLoader.
 * token.
 *
 * @experimental
 */var SystemJsNgModuleLoaderConfig=/** @class */function(){function SystemJsNgModuleLoaderConfig(){}return SystemJsNgModuleLoaderConfig;}();exports.SystemJsNgModuleLoaderConfig=SystemJsNgModuleLoaderConfig;var DEFAULT_CONFIG={factoryPathPrefix:'',factoryPathSuffix:'.ngfactory'};/**
 * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory
 * @experimental
 */var SystemJsNgModuleLoader=/** @class */function(){function SystemJsNgModuleLoader(_compiler,config){this._compiler=_compiler;this._config=config||DEFAULT_CONFIG;}SystemJsNgModuleLoader.prototype.load=function(path){var offlineMode=this._compiler instanceof Compiler;return offlineMode?this.loadFactory(path):this.loadAndCompile(path);};SystemJsNgModuleLoader.prototype.loadAndCompile=function(path){var _this=this;var _a=(0,_tslib.__read)(path.split(_SEPARATOR),2),module=_a[0],exportName=_a[1];if(exportName===undefined){exportName='default';}return __webpack_require__(142)(module).then(function(module){return module[exportName];}).then(function(type){return checkNotEmpty(type,module,exportName);}).then(function(type){return _this._compiler.compileModuleAsync(type);});};SystemJsNgModuleLoader.prototype.loadFactory=function(path){var _a=(0,_tslib.__read)(path.split(_SEPARATOR),2),module=_a[0],exportName=_a[1];var factoryClassSuffix=FACTORY_CLASS_SUFFIX;if(exportName===undefined){exportName='default';factoryClassSuffix='';}return __webpack_require__(142)(this._config.factoryPathPrefix+module+this._config.factoryPathSuffix).then(function(module){return module[exportName+factoryClassSuffix];}).then(function(factory){return checkNotEmpty(factory,module,exportName);});};SystemJsNgModuleLoader.decorators=[{type:Injectable}];/** @nocollapse */SystemJsNgModuleLoader.ctorParameters=function(){return[{type:Compiler},{type:SystemJsNgModuleLoaderConfig,decorators:[{type:Optional}]}];};return SystemJsNgModuleLoader;}();exports.SystemJsNgModuleLoader=SystemJsNgModuleLoader;function checkNotEmpty(value,modulePath,exportName){if(!value){throw new Error("Cannot find '"+exportName+"' in '"+modulePath+"'");}return value;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents an Embedded Template that can be used to instantiate Embedded Views.
 *
 * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element
 * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into
 * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for
 * the `TemplateRef` from a Component or a Directive via {@link Query}.
 *
 * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#
 * createEmbeddedView}, which will create the View and attach it to the View Container.
 *
 */var TemplateRef=/** @class */function(){function TemplateRef(){}return TemplateRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Represents a container where one or more Views can be attached.
 *
 * The container can contain two kinds of Views. Host Views, created by instantiating a
 * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an
 * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.
 *
 * The location of the View Container within the containing View is specified by the Anchor
 * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only
 * have a single View Container.
 *
 * Root elements of Views attached to this container become siblings of the Anchor Element in
 * the Rendered View.
 *
 * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected
 * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.
 *
 */exports.TemplateRef=TemplateRef;var ViewContainerRef=/** @class */function(){function ViewContainerRef(){}return ViewContainerRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 *
 */exports.ViewContainerRef=ViewContainerRef;var ChangeDetectorRef=/** @class */function(){function ChangeDetectorRef(){}return ChangeDetectorRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 *
 */exports.ChangeDetectorRef=ChangeDetectorRef;var ViewRef=/** @class */function(_super){(0,_tslib.__extends)(ViewRef,_super);function ViewRef(){return _super!==null&&_super.apply(this,arguments)||this;}return ViewRef;}(ChangeDetectorRef);/**
 * Represents an Angular View.
 *
 * <!-- TODO: move the next two paragraphs to the dev guide -->
 * A View is a fundamental building block of the application UI. It is the smallest grouping of
 * Elements which are created and destroyed together.
 *
 * Properties of elements in a View can change, but the structure (number and order) of elements in
 * a View cannot. Changing the structure of Elements can only be done by inserting, moving or
 * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.
 * <!-- /TODO -->
 *
 * ### Example
 *
 * Given this template...
 *
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <li *ngFor="let  item of items">{{item}}</li>
 * </ul>
 * ```
 *
 * We have two {@link TemplateRef}s:
 *
 * Outer {@link TemplateRef}:
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <ng-template ngFor let-item [ngForOf]="items"></ng-template>
 * </ul>
 * ```
 *
 * Inner {@link TemplateRef}:
 * ```
 *   <li>{{item}}</li>
 * ```
 *
 * Notice that the original template is broken down into two separate {@link TemplateRef}s.
 *
 * The outer/inner {@link TemplateRef}s are then assembled into views like so:
 *
 * ```
 * <!-- ViewRef: outer-0 -->
 * Count: 2
 * <ul>
 *   <ng-template view-container-ref></ng-template>
 *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->
 *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->
 * </ul>
 * <!-- /ViewRef: outer-0 -->
 * ```
 * @experimental
 */exports.ViewRef=ViewRef;var EmbeddedViewRef=/** @class */function(_super){(0,_tslib.__extends)(EmbeddedViewRef,_super);function EmbeddedViewRef(){return _super!==null&&_super.apply(this,arguments)||this;}return EmbeddedViewRef;}(ViewRef);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.EmbeddedViewRef=EmbeddedViewRef;var EventListener=/** @class */function(){function EventListener(name,callback){this.name=name;this.callback=callback;}return EventListener;}();/**
 * @experimental All debugging apis are currently experimental.
 */var DebugNode=/** @class */function(){function DebugNode(nativeNode,parent,_debugContext){this._debugContext=_debugContext;this.nativeNode=nativeNode;if(parent&&parent instanceof DebugElement){parent.addChild(this);}else{this.parent=null;}this.listeners=[];}Object.defineProperty(DebugNode.prototype,"injector",{get:function get(){return this._debugContext.injector;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"componentInstance",{get:function get(){return this._debugContext.component;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"context",{get:function get(){return this._debugContext.context;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"references",{get:function get(){return this._debugContext.references;},enumerable:true,configurable:true});Object.defineProperty(DebugNode.prototype,"providerTokens",{get:function get(){return this._debugContext.providerTokens;},enumerable:true,configurable:true});return DebugNode;}();/**
 * @experimental All debugging apis are currently experimental.
 */exports.DebugNode=DebugNode;var DebugElement=/** @class */function(_super){(0,_tslib.__extends)(DebugElement,_super);function DebugElement(nativeNode,parent,_debugContext){var _this=_super.call(this,nativeNode,parent,_debugContext)||this;_this.properties={};_this.attributes={};_this.classes={};_this.styles={};_this.childNodes=[];_this.nativeElement=nativeNode;return _this;}DebugElement.prototype.addChild=function(child){if(child){this.childNodes.push(child);child.parent=this;}};DebugElement.prototype.removeChild=function(child){var childIndex=this.childNodes.indexOf(child);if(childIndex!==-1){child.parent=null;this.childNodes.splice(childIndex,1);}};DebugElement.prototype.insertChildrenAfter=function(child,newChildren){var _this=this;var siblingIndex=this.childNodes.indexOf(child);if(siblingIndex!==-1){(_a=this.childNodes).splice.apply(_a,(0,_tslib.__spread)([siblingIndex+1,0],newChildren));newChildren.forEach(function(c){if(c.parent){c.parent.removeChild(c);}c.parent=_this;});}var _a;};DebugElement.prototype.insertBefore=function(refChild,newChild){var refIndex=this.childNodes.indexOf(refChild);if(refIndex===-1){this.addChild(newChild);}else{if(newChild.parent){newChild.parent.removeChild(newChild);}newChild.parent=this;this.childNodes.splice(refIndex,0,newChild);}};DebugElement.prototype.query=function(predicate){var results=this.queryAll(predicate);return results[0]||null;};DebugElement.prototype.queryAll=function(predicate){var matches=[];_queryElementChildren(this,predicate,matches);return matches;};DebugElement.prototype.queryAllNodes=function(predicate){var matches=[];_queryNodeChildren(this,predicate,matches);return matches;};Object.defineProperty(DebugElement.prototype,"children",{get:function get(){return this.childNodes.filter(function(node){return node instanceof DebugElement;});},enumerable:true,configurable:true});DebugElement.prototype.triggerEventHandler=function(eventName,eventObj){this.listeners.forEach(function(listener){if(listener.name==eventName){listener.callback(eventObj);}});};return DebugElement;}(DebugNode);/**
 * @experimental
 */exports.DebugElement=DebugElement;function asNativeElements(debugEls){return debugEls.map(function(el){return el.nativeElement;});}function _queryElementChildren(element,predicate,matches){element.childNodes.forEach(function(node){if(node instanceof DebugElement){if(predicate(node)){matches.push(node);}_queryElementChildren(node,predicate,matches);}});}function _queryNodeChildren(parentNode,predicate,matches){if(parentNode instanceof DebugElement){parentNode.childNodes.forEach(function(node){if(predicate(node)){matches.push(node);}if(node instanceof DebugElement){_queryNodeChildren(node,predicate,matches);}});}}// Need to keep the nodes in a global Map so that multiple angular apps are supported.
var _nativeNodeToDebugNode=new Map();/**
 * @experimental
 */function getDebugNode(nativeNode){return _nativeNodeToDebugNode.get(nativeNode)||null;}function indexDebugNode(node){_nativeNodeToDebugNode.set(node.nativeNode,node);}function removeDebugNodeFromIndex(node){_nativeNodeToDebugNode.delete(node.nativeNode);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function devModeEqual(a,b){var isListLikeIterableA=isListLikeIterable(a);var isListLikeIterableB=isListLikeIterable(b);if(isListLikeIterableA&&isListLikeIterableB){return areIterablesEqual(a,b,devModeEqual);}else{var isAObject=a&&(_typeof(a)==='object'||typeof a==='function');var isBObject=b&&(_typeof(b)==='object'||typeof b==='function');if(!isListLikeIterableA&&isAObject&&!isListLikeIterableB&&isBObject){return true;}else{return looseIdentical(a,b);}}}/**
 * Indicates that the result of a {@link Pipe} transformation has changed even though the
 * reference has not changed.
 *
 * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value
 * is stored.
 *
 * Example:
 *
 * ```
 * if (this._latestValue === this._latestReturnedValue) {
 *    return this._latestReturnedValue;
 *  } else {
 *    this._latestReturnedValue = this._latestValue;
 *    return WrappedValue.wrap(this._latestValue); // this will force update
 *  }
 * ```
 *
 */var WrappedValue=/** @class */function(){function WrappedValue(value){this.wrapped=value;}/** Creates a wrapped value. */ /** Creates a wrapped value. */WrappedValue.wrap=/** Creates a wrapped value. */function(value){return new WrappedValue(value);};/**
     * Returns the underlying value of a wrapped value.
     * Returns the given `value` when it is not wrapped.
     **/ /**
       * Returns the underlying value of a wrapped value.
       * Returns the given `value` when it is not wrapped.
       **/WrappedValue.unwrap=/**
       * Returns the underlying value of a wrapped value.
       * Returns the given `value` when it is not wrapped.
       **/function(value){return WrappedValue.isWrapped(value)?value.wrapped:value;};/** Returns true if `value` is a wrapped value. */ /** Returns true if `value` is a wrapped value. */WrappedValue.isWrapped=/** Returns true if `value` is a wrapped value. */function(value){return value instanceof WrappedValue;};return WrappedValue;}();/**
 * Represents a basic change from a previous to a new value.
 *
 */exports.WrappedValue=WrappedValue;var SimpleChange=/** @class */function(){function SimpleChange(previousValue,currentValue,firstChange){this.previousValue=previousValue;this.currentValue=currentValue;this.firstChange=firstChange;}/**
     * Check whether the new value is the first value assigned.
     */ /**
       * Check whether the new value is the first value assigned.
       */SimpleChange.prototype.isFirstChange=/**
       * Check whether the new value is the first value assigned.
       */function(){return this.firstChange;};return SimpleChange;}();exports.SimpleChange=SimpleChange;function isListLikeIterable(obj){if(!isJsObject(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&// JS Map are iterables but return entries as [k, v]
// JS Map are iterables but return entries as [k, v]
getSymbolIterator()in obj;// JS Iterable have a Symbol.iterator prop
}function areIterablesEqual(a,b,comparator){var iterator1=a[getSymbolIterator()]();var iterator2=b[getSymbolIterator()]();while(true){var item1=iterator1.next();var item2=iterator2.next();if(item1.done&&item2.done)return true;if(item1.done||item2.done)return false;if(!comparator(item1.value,item2.value))return false;}}function iterateListLike(obj,fn){if(Array.isArray(obj)){for(var i=0;i<obj.length;i++){fn(obj[i]);}}else{var iterator=obj[getSymbolIterator()]();var item=void 0;while(!(item=iterator.next()).done){fn(item.value);}}}function isJsObject(o){return o!==null&&(typeof o==='function'||_typeof(o)==='object');}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var DefaultIterableDifferFactory=/** @class */function(){function DefaultIterableDifferFactory(){}DefaultIterableDifferFactory.prototype.supports=function(obj){return isListLikeIterable(obj);};DefaultIterableDifferFactory.prototype.create=function(trackByFn){return new DefaultIterableDiffer(trackByFn);};return DefaultIterableDifferFactory;}();exports.ɵangular_packages_core_core_h=DefaultIterableDifferFactory;var trackByIdentity=function trackByIdentity(index,item){return item;};/**
 * @deprecated v4.0.0 - Should not be part of public API.
 */var DefaultIterableDiffer=/** @class */function(){function DefaultIterableDiffer(trackByFn){this.length=0;// Keeps track of the used records at any point in time (during & across `_check()` calls)
this._linkedRecords=null;// Keeps track of the removed records at any point in time during `_check()` calls.
this._unlinkedRecords=null;this._previousItHead=null;this._itHead=null;this._itTail=null;this._additionsHead=null;this._additionsTail=null;this._movesHead=null;this._movesTail=null;this._removalsHead=null;this._removalsTail=null;// Keeps track of records where custom track by is the same, but item identity has changed
this._identityChangesHead=null;this._identityChangesTail=null;this._trackByFn=trackByFn||trackByIdentity;}DefaultIterableDiffer.prototype.forEachItem=function(fn){var record;for(record=this._itHead;record!==null;record=record._next){fn(record);}};DefaultIterableDiffer.prototype.forEachOperation=function(fn){var nextIt=this._itHead;var nextRemove=this._removalsHead;var addRemoveOffset=0;var moveOffsets=null;while(nextIt||nextRemove){// Figure out which is the next record to process
// Order: remove, add, move
var record=!nextRemove||nextIt&&nextIt.currentIndex<getPreviousIndex(nextRemove,addRemoveOffset,moveOffsets)?nextIt:nextRemove;var adjPreviousIndex=getPreviousIndex(record,addRemoveOffset,moveOffsets);var currentIndex=record.currentIndex;// consume the item, and adjust the addRemoveOffset and update moveDistance if necessary
if(record===nextRemove){addRemoveOffset--;nextRemove=nextRemove._nextRemoved;}else{nextIt=nextIt._next;if(record.previousIndex==null){addRemoveOffset++;}else{// INVARIANT:  currentIndex < previousIndex
if(!moveOffsets)moveOffsets=[];var localMovePreviousIndex=adjPreviousIndex-addRemoveOffset;var localCurrentIndex=currentIndex-addRemoveOffset;if(localMovePreviousIndex!=localCurrentIndex){for(var i=0;i<localMovePreviousIndex;i++){var offset=i<moveOffsets.length?moveOffsets[i]:moveOffsets[i]=0;var index=offset+i;if(localCurrentIndex<=index&&index<localMovePreviousIndex){moveOffsets[i]=offset+1;}}var previousIndex=record.previousIndex;moveOffsets[previousIndex]=localCurrentIndex-localMovePreviousIndex;}}}if(adjPreviousIndex!==currentIndex){fn(record,adjPreviousIndex,currentIndex);}}};DefaultIterableDiffer.prototype.forEachPreviousItem=function(fn){var record;for(record=this._previousItHead;record!==null;record=record._nextPrevious){fn(record);}};DefaultIterableDiffer.prototype.forEachAddedItem=function(fn){var record;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}};DefaultIterableDiffer.prototype.forEachMovedItem=function(fn){var record;for(record=this._movesHead;record!==null;record=record._nextMoved){fn(record);}};DefaultIterableDiffer.prototype.forEachRemovedItem=function(fn){var record;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}};DefaultIterableDiffer.prototype.forEachIdentityChange=function(fn){var record;for(record=this._identityChangesHead;record!==null;record=record._nextIdentityChange){fn(record);}};DefaultIterableDiffer.prototype.diff=function(collection){if(collection==null)collection=[];if(!isListLikeIterable(collection)){throw new Error("Error trying to diff '"+stringify(collection)+"'. Only arrays and iterables are allowed");}if(this.check(collection)){return this;}else{return null;}};DefaultIterableDiffer.prototype.onDestroy=function(){};DefaultIterableDiffer.prototype.check=function(collection){var _this=this;this._reset();var record=this._itHead;var mayBeDirty=false;var index;var item;var itemTrackBy;if(Array.isArray(collection)){this.length=collection.length;for(var index_1=0;index_1<this.length;index_1++){item=collection[index_1];itemTrackBy=this._trackByFn(index_1,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=this._mismatch(record,item,itemTrackBy,index_1);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=this._verifyReinsertion(record,item,itemTrackBy,index_1);}if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);}record=record._next;}}else{index=0;iterateListLike(collection,function(item){itemTrackBy=_this._trackByFn(index,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=_this._mismatch(record,item,itemTrackBy,index);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=_this._verifyReinsertion(record,item,itemTrackBy,index);}if(!looseIdentical(record.item,item))_this._addIdentityChange(record,item);}record=record._next;index++;});this.length=index;}this._truncate(record);this.collection=collection;return this.isDirty;};Object.defineProperty(DefaultIterableDiffer.prototype,"isDirty",{/* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity
         * changes.
         */get:/* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity
           * changes.
           */function get(){return this._additionsHead!==null||this._movesHead!==null||this._removalsHead!==null||this._identityChangesHead!==null;},enumerable:true,configurable:true});/**
     * Reset the state of the change objects to show no changes. This means set previousKey to
     * currentKey, and clear all of the queues (additions, moves, removals).
     * Set the previousIndexes of moved and added items to their currentIndexes
     * Reset the list of additions, moves and removals
     *
     * @internal
     */ /**
       * Reset the state of the change objects to show no changes. This means set previousKey to
       * currentKey, and clear all of the queues (additions, moves, removals).
       * Set the previousIndexes of moved and added items to their currentIndexes
       * Reset the list of additions, moves and removals
       *
       * @internal
       */DefaultIterableDiffer.prototype._reset=/**
       * Reset the state of the change objects to show no changes. This means set previousKey to
       * currentKey, and clear all of the queues (additions, moves, removals).
       * Set the previousIndexes of moved and added items to their currentIndexes
       * Reset the list of additions, moves and removals
       *
       * @internal
       */function(){if(this.isDirty){var record=void 0;var nextRecord=void 0;for(record=this._previousItHead=this._itHead;record!==null;record=record._next){record._nextPrevious=record._next;}for(record=this._additionsHead;record!==null;record=record._nextAdded){record.previousIndex=record.currentIndex;}this._additionsHead=this._additionsTail=null;for(record=this._movesHead;record!==null;record=nextRecord){record.previousIndex=record.currentIndex;nextRecord=record._nextMoved;}this._movesHead=this._movesTail=null;this._removalsHead=this._removalsTail=null;this._identityChangesHead=this._identityChangesTail=null;// TODO(vicb): when assert gets supported
// assert(!this.isDirty);
}};/**
     * This is the core function which handles differences between collections.
     *
     * - `record` is the record which we saw at this position last time. If null then it is a new
     *   item.
     * - `item` is the current item in the collection
     * - `index` is the position of the item in the collection
     *
     * @internal
     */ /**
       * This is the core function which handles differences between collections.
       *
       * - `record` is the record which we saw at this position last time. If null then it is a new
       *   item.
       * - `item` is the current item in the collection
       * - `index` is the position of the item in the collection
       *
       * @internal
       */DefaultIterableDiffer.prototype._mismatch=/**
       * This is the core function which handles differences between collections.
       *
       * - `record` is the record which we saw at this position last time. If null then it is a new
       *   item.
       * - `item` is the current item in the collection
       * - `index` is the position of the item in the collection
       *
       * @internal
       */function(record,item,itemTrackBy,index){// The previous record after which we will append the current one.
var previousRecord;if(record===null){previousRecord=this._itTail;}else{previousRecord=record._prev;// Remove the record from the collection since we know it does not match the item.
this._remove(record);}// Attempt to see if we have seen the item before.
record=this._linkedRecords===null?null:this._linkedRecords.get(itemTrackBy,index);if(record!==null){// We have seen this before, we need to move it forward in the collection.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._moveAfter(record,previousRecord,index);}else{// Never seen it, check evicted list.
record=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy,null);if(record!==null){// It is an item which we have evicted earlier: reinsert it back into the list.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._reinsertAfter(record,previousRecord,index);}else{// It is a new item: add it.
record=this._addAfter(new IterableChangeRecord_(item,itemTrackBy),previousRecord,index);}}return record;};/**
     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
     *
     * Use case: `[a, a]` => `[b, a, a]`
     *
     * If we did not have this check then the insertion of `b` would:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) leave `a` at index `1` as is. <-- this is wrong!
     *   3) reinsert `a` at index 2. <-- this is wrong!
     *
     * The correct behavior is:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) reinsert `a` at index 1.
     *   3) move `a` at from `1` to `2`.
     *
     *
     * Double check that we have not evicted a duplicate item. We need to check if the item type may
     * have already been removed:
     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
     * at the end.
     *
     * @internal
     */ /**
       * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
       *
       * Use case: `[a, a]` => `[b, a, a]`
       *
       * If we did not have this check then the insertion of `b` would:
       *   1) evict first `a`
       *   2) insert `b` at `0` index.
       *   3) leave `a` at index `1` as is. <-- this is wrong!
       *   3) reinsert `a` at index 2. <-- this is wrong!
       *
       * The correct behavior is:
       *   1) evict first `a`
       *   2) insert `b` at `0` index.
       *   3) reinsert `a` at index 1.
       *   3) move `a` at from `1` to `2`.
       *
       *
       * Double check that we have not evicted a duplicate item. We need to check if the item type may
       * have already been removed:
       * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
       * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
       * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
       * at the end.
       *
       * @internal
       */DefaultIterableDiffer.prototype._verifyReinsertion=/**
       * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
       *
       * Use case: `[a, a]` => `[b, a, a]`
       *
       * If we did not have this check then the insertion of `b` would:
       *   1) evict first `a`
       *   2) insert `b` at `0` index.
       *   3) leave `a` at index `1` as is. <-- this is wrong!
       *   3) reinsert `a` at index 2. <-- this is wrong!
       *
       * The correct behavior is:
       *   1) evict first `a`
       *   2) insert `b` at `0` index.
       *   3) reinsert `a` at index 1.
       *   3) move `a` at from `1` to `2`.
       *
       *
       * Double check that we have not evicted a duplicate item. We need to check if the item type may
       * have already been removed:
       * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
       * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
       * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
       * at the end.
       *
       * @internal
       */function(record,item,itemTrackBy,index){var reinsertRecord=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy,null);if(reinsertRecord!==null){record=this._reinsertAfter(reinsertRecord,record._prev,index);}else if(record.currentIndex!=index){record.currentIndex=index;this._addToMoves(record,index);}return record;};/**
     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection
     *
     * - `record` The first excess {@link IterableChangeRecord_}.
     *
     * @internal
     */ /**
       * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection
       *
       * - `record` The first excess {@link IterableChangeRecord_}.
       *
       * @internal
       */DefaultIterableDiffer.prototype._truncate=/**
       * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection
       *
       * - `record` The first excess {@link IterableChangeRecord_}.
       *
       * @internal
       */function(record){// Anything after that needs to be removed;
while(record!==null){var nextRecord=record._next;this._addToRemovals(this._unlink(record));record=nextRecord;}if(this._unlinkedRecords!==null){this._unlinkedRecords.clear();}if(this._additionsTail!==null){this._additionsTail._nextAdded=null;}if(this._movesTail!==null){this._movesTail._nextMoved=null;}if(this._itTail!==null){this._itTail._next=null;}if(this._removalsTail!==null){this._removalsTail._nextRemoved=null;}if(this._identityChangesTail!==null){this._identityChangesTail._nextIdentityChange=null;}};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._reinsertAfter=/** @internal */function(record,prevRecord,index){if(this._unlinkedRecords!==null){this._unlinkedRecords.remove(record);}var prev=record._prevRemoved;var next=record._nextRemoved;if(prev===null){this._removalsHead=next;}else{prev._nextRemoved=next;}if(next===null){this._removalsTail=prev;}else{next._prevRemoved=prev;}this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._moveAfter=/** @internal */function(record,prevRecord,index){this._unlink(record);this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._addAfter=/** @internal */function(record,prevRecord,index){this._insertAfter(record,prevRecord,index);if(this._additionsTail===null){// TODO(vicb):
// assert(this._additionsHead === null);
this._additionsTail=this._additionsHead=record;}else{// TODO(vicb):
// assert(_additionsTail._nextAdded === null);
// assert(record._nextAdded === null);
this._additionsTail=this._additionsTail._nextAdded=record;}return record;};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._insertAfter=/** @internal */function(record,prevRecord,index){// TODO(vicb):
// assert(record != prevRecord);
// assert(record._next === null);
// assert(record._prev === null);
var next=prevRecord===null?this._itHead:prevRecord._next;// TODO(vicb):
// assert(next != record);
// assert(prevRecord != record);
record._next=next;record._prev=prevRecord;if(next===null){this._itTail=record;}else{next._prev=record;}if(prevRecord===null){this._itHead=record;}else{prevRecord._next=record;}if(this._linkedRecords===null){this._linkedRecords=new _DuplicateMap();}this._linkedRecords.put(record);record.currentIndex=index;return record;};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._remove=/** @internal */function(record){return this._addToRemovals(this._unlink(record));};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._unlink=/** @internal */function(record){if(this._linkedRecords!==null){this._linkedRecords.remove(record);}var prev=record._prev;var next=record._next;// TODO(vicb):
// assert((record._prev = null) === null);
// assert((record._next = null) === null);
if(prev===null){this._itHead=next;}else{prev._next=next;}if(next===null){this._itTail=prev;}else{next._prev=prev;}return record;};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._addToMoves=/** @internal */function(record,toIndex){// TODO(vicb):
// assert(record._nextMoved === null);
if(record.previousIndex===toIndex){return record;}if(this._movesTail===null){// TODO(vicb):
// assert(_movesHead === null);
this._movesTail=this._movesHead=record;}else{// TODO(vicb):
// assert(_movesTail._nextMoved === null);
this._movesTail=this._movesTail._nextMoved=record;}return record;};DefaultIterableDiffer.prototype._addToRemovals=function(record){if(this._unlinkedRecords===null){this._unlinkedRecords=new _DuplicateMap();}this._unlinkedRecords.put(record);record.currentIndex=null;record._nextRemoved=null;if(this._removalsTail===null){// TODO(vicb):
// assert(_removalsHead === null);
this._removalsTail=this._removalsHead=record;record._prevRemoved=null;}else{// TODO(vicb):
// assert(_removalsTail._nextRemoved === null);
// assert(record._nextRemoved === null);
record._prevRemoved=this._removalsTail;this._removalsTail=this._removalsTail._nextRemoved=record;}return record;};/** @internal */ /** @internal */DefaultIterableDiffer.prototype._addIdentityChange=/** @internal */function(record,item){record.item=item;if(this._identityChangesTail===null){this._identityChangesTail=this._identityChangesHead=record;}else{this._identityChangesTail=this._identityChangesTail._nextIdentityChange=record;}return record;};return DefaultIterableDiffer;}();/**
 *
 */exports.DefaultIterableDiffer=DefaultIterableDiffer;var IterableChangeRecord_=/** @class */function(){function IterableChangeRecord_(item,trackById){this.item=item;this.trackById=trackById;this.currentIndex=null;this.previousIndex=null;/** @internal */this._nextPrevious=null;/** @internal */this._prev=null;/** @internal */this._next=null;/** @internal */this._prevDup=null;/** @internal */this._nextDup=null;/** @internal */this._prevRemoved=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextAdded=null;/** @internal */this._nextMoved=null;/** @internal */this._nextIdentityChange=null;}return IterableChangeRecord_;}();// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item
var _DuplicateItemRecordList=/** @class */function(){function _DuplicateItemRecordList(){/** @internal */this._head=null;/** @internal */this._tail=null;}/**
     * Append the record to the list of duplicates.
     *
     * Note: by design all records in the list of duplicates hold the same value in record.item.
     */ /**
       * Append the record to the list of duplicates.
       *
       * Note: by design all records in the list of duplicates hold the same value in record.item.
       */_DuplicateItemRecordList.prototype.add=/**
       * Append the record to the list of duplicates.
       *
       * Note: by design all records in the list of duplicates hold the same value in record.item.
       */function(record){if(this._head===null){this._head=this._tail=record;record._nextDup=null;record._prevDup=null;}else{// TODO(vicb):
// assert(record.item ==  _head.item ||
//       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);
// TODO(vicb):
// assert(record.item ==  _head.item ||
//       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);
this._tail._nextDup=record;record._prevDup=this._tail;record._nextDup=null;this._tail=record;}};// Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and
// IterableChangeRecord_.currentIndex >= atOrAfterIndex
// Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and
// IterableChangeRecord_.currentIndex >= atOrAfterIndex
_DuplicateItemRecordList.prototype.get=// Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and
// IterableChangeRecord_.currentIndex >= atOrAfterIndex
function(trackById,atOrAfterIndex){var record;for(record=this._head;record!==null;record=record._nextDup){if((atOrAfterIndex===null||atOrAfterIndex<=record.currentIndex)&&looseIdentical(record.trackById,trackById)){return record;}}return null;};/**
     * Remove one {@link IterableChangeRecord_} from the list of duplicates.
     *
     * Returns whether the list of duplicates is empty.
     */ /**
       * Remove one {@link IterableChangeRecord_} from the list of duplicates.
       *
       * Returns whether the list of duplicates is empty.
       */_DuplicateItemRecordList.prototype.remove=/**
       * Remove one {@link IterableChangeRecord_} from the list of duplicates.
       *
       * Returns whether the list of duplicates is empty.
       */function(record){// TODO(vicb):
// assert(() {
//  // verify that the record being removed is in the list.
//  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {
//    if (identical(cursor, record)) return true;
//  }
//  return false;
//});
var prev=record._prevDup;var next=record._nextDup;if(prev===null){this._head=next;}else{prev._nextDup=next;}if(next===null){this._tail=prev;}else{next._prevDup=prev;}return this._head===null;};return _DuplicateItemRecordList;}();var _DuplicateMap=/** @class */function(){function _DuplicateMap(){this.map=new Map();}_DuplicateMap.prototype.put=function(record){var key=record.trackById;var duplicates=this.map.get(key);if(!duplicates){duplicates=new _DuplicateItemRecordList();this.map.set(key,duplicates);}duplicates.add(record);};/**
     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.
     *
     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
     * have any more `a`s needs to return the second `a`.
     */ /**
       * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
       * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.
       *
       * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
       * have any more `a`s needs to return the second `a`.
       */_DuplicateMap.prototype.get=/**
       * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
       * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.
       *
       * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
       * have any more `a`s needs to return the second `a`.
       */function(trackById,atOrAfterIndex){var key=trackById;var recordList=this.map.get(key);return recordList?recordList.get(trackById,atOrAfterIndex):null;};/**
     * Removes a {@link IterableChangeRecord_} from the list of duplicates.
     *
     * The list of duplicates also is removed from the map if it gets empty.
     */ /**
       * Removes a {@link IterableChangeRecord_} from the list of duplicates.
       *
       * The list of duplicates also is removed from the map if it gets empty.
       */_DuplicateMap.prototype.remove=/**
       * Removes a {@link IterableChangeRecord_} from the list of duplicates.
       *
       * The list of duplicates also is removed from the map if it gets empty.
       */function(record){var key=record.trackById;var recordList=this.map.get(key);// Remove the list of duplicates when it gets empty
if(recordList.remove(record)){this.map.delete(key);}return record;};Object.defineProperty(_DuplicateMap.prototype,"isEmpty",{get:function get(){return this.map.size===0;},enumerable:true,configurable:true});_DuplicateMap.prototype.clear=function(){this.map.clear();};return _DuplicateMap;}();function getPreviousIndex(item,addRemoveOffset,moveOffsets){var previousIndex=item.previousIndex;if(previousIndex===null)return previousIndex;var moveOffset=0;if(moveOffsets&&previousIndex<moveOffsets.length){moveOffset=moveOffsets[previousIndex];}return previousIndex+addRemoveOffset+moveOffset;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var DefaultKeyValueDifferFactory=/** @class */function(){function DefaultKeyValueDifferFactory(){}DefaultKeyValueDifferFactory.prototype.supports=function(obj){return obj instanceof Map||isJsObject(obj);};DefaultKeyValueDifferFactory.prototype.create=function(){return new DefaultKeyValueDiffer();};return DefaultKeyValueDifferFactory;}();exports.ɵangular_packages_core_core_i=DefaultKeyValueDifferFactory;var DefaultKeyValueDiffer=/** @class */function(){function DefaultKeyValueDiffer(){this._records=new Map();this._mapHead=null;// _appendAfter is used in the check loop
this._appendAfter=null;this._previousMapHead=null;this._changesHead=null;this._changesTail=null;this._additionsHead=null;this._additionsTail=null;this._removalsHead=null;this._removalsTail=null;}Object.defineProperty(DefaultKeyValueDiffer.prototype,"isDirty",{get:function get(){return this._additionsHead!==null||this._changesHead!==null||this._removalsHead!==null;},enumerable:true,configurable:true});DefaultKeyValueDiffer.prototype.forEachItem=function(fn){var record;for(record=this._mapHead;record!==null;record=record._next){fn(record);}};DefaultKeyValueDiffer.prototype.forEachPreviousItem=function(fn){var record;for(record=this._previousMapHead;record!==null;record=record._nextPrevious){fn(record);}};DefaultKeyValueDiffer.prototype.forEachChangedItem=function(fn){var record;for(record=this._changesHead;record!==null;record=record._nextChanged){fn(record);}};DefaultKeyValueDiffer.prototype.forEachAddedItem=function(fn){var record;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}};DefaultKeyValueDiffer.prototype.forEachRemovedItem=function(fn){var record;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}};DefaultKeyValueDiffer.prototype.diff=function(map){if(!map){map=new Map();}else if(!(map instanceof Map||isJsObject(map))){throw new Error("Error trying to diff '"+stringify(map)+"'. Only maps and objects are allowed");}return this.check(map)?this:null;};DefaultKeyValueDiffer.prototype.onDestroy=function(){};/**
     * Check the current state of the map vs the previous.
     * The algorithm is optimised for when the keys do no change.
     */ /**
       * Check the current state of the map vs the previous.
       * The algorithm is optimised for when the keys do no change.
       */DefaultKeyValueDiffer.prototype.check=/**
       * Check the current state of the map vs the previous.
       * The algorithm is optimised for when the keys do no change.
       */function(map){var _this=this;this._reset();var insertBefore=this._mapHead;this._appendAfter=null;this._forEach(map,function(value,key){if(insertBefore&&insertBefore.key===key){_this._maybeAddToChanges(insertBefore,value);_this._appendAfter=insertBefore;insertBefore=insertBefore._next;}else{var record=_this._getOrCreateRecordForKey(key,value);insertBefore=_this._insertBeforeOrAppend(insertBefore,record);}});// Items remaining at the end of the list have been deleted
if(insertBefore){if(insertBefore._prev){insertBefore._prev._next=null;}this._removalsHead=insertBefore;for(var record=insertBefore;record!==null;record=record._nextRemoved){if(record===this._mapHead){this._mapHead=null;}this._records.delete(record.key);record._nextRemoved=record._next;record.previousValue=record.currentValue;record.currentValue=null;record._prev=null;record._next=null;}}// Make sure tails have no next records from previous runs
if(this._changesTail)this._changesTail._nextChanged=null;if(this._additionsTail)this._additionsTail._nextAdded=null;return this.isDirty;};/**
     * Inserts a record before `before` or append at the end of the list when `before` is null.
     *
     * Notes:
     * - This method appends at `this._appendAfter`,
     * - This method updates `this._appendAfter`,
     * - The return value is the new value for the insertion pointer.
     */ /**
       * Inserts a record before `before` or append at the end of the list when `before` is null.
       *
       * Notes:
       * - This method appends at `this._appendAfter`,
       * - This method updates `this._appendAfter`,
       * - The return value is the new value for the insertion pointer.
       */DefaultKeyValueDiffer.prototype._insertBeforeOrAppend=/**
       * Inserts a record before `before` or append at the end of the list when `before` is null.
       *
       * Notes:
       * - This method appends at `this._appendAfter`,
       * - This method updates `this._appendAfter`,
       * - The return value is the new value for the insertion pointer.
       */function(before,record){if(before){var prev=before._prev;record._next=before;record._prev=prev;before._prev=record;if(prev){prev._next=record;}if(before===this._mapHead){this._mapHead=record;}this._appendAfter=before;return before;}if(this._appendAfter){this._appendAfter._next=record;record._prev=this._appendAfter;}else{this._mapHead=record;}this._appendAfter=record;return null;};DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey=function(key,value){if(this._records.has(key)){var record_1=this._records.get(key);this._maybeAddToChanges(record_1,value);var prev=record_1._prev;var next=record_1._next;if(prev){prev._next=next;}if(next){next._prev=prev;}record_1._next=null;record_1._prev=null;return record_1;}var record=new KeyValueChangeRecord_(key);this._records.set(key,record);record.currentValue=value;this._addToAdditions(record);return record;};/** @internal */ /** @internal */DefaultKeyValueDiffer.prototype._reset=/** @internal */function(){if(this.isDirty){var record=void 0;// let `_previousMapHead` contain the state of the map before the changes
this._previousMapHead=this._mapHead;for(record=this._previousMapHead;record!==null;record=record._next){record._nextPrevious=record._next;}// Update `record.previousValue` with the value of the item before the changes
// We need to update all changed items (that's those which have been added and changed)
for(record=this._changesHead;record!==null;record=record._nextChanged){record.previousValue=record.currentValue;}for(record=this._additionsHead;record!=null;record=record._nextAdded){record.previousValue=record.currentValue;}this._changesHead=this._changesTail=null;this._additionsHead=this._additionsTail=null;this._removalsHead=null;}};// Add the record or a given key to the list of changes only when the value has actually changed
// Add the record or a given key to the list of changes only when the value has actually changed
DefaultKeyValueDiffer.prototype._maybeAddToChanges=// Add the record or a given key to the list of changes only when the value has actually changed
function(record,newValue){if(!looseIdentical(newValue,record.currentValue)){record.previousValue=record.currentValue;record.currentValue=newValue;this._addToChanges(record);}};DefaultKeyValueDiffer.prototype._addToAdditions=function(record){if(this._additionsHead===null){this._additionsHead=this._additionsTail=record;}else{this._additionsTail._nextAdded=record;this._additionsTail=record;}};DefaultKeyValueDiffer.prototype._addToChanges=function(record){if(this._changesHead===null){this._changesHead=this._changesTail=record;}else{this._changesTail._nextChanged=record;this._changesTail=record;}};/** @internal */ /** @internal */DefaultKeyValueDiffer.prototype._forEach=/** @internal */function(obj,fn){if(obj instanceof Map){obj.forEach(fn);}else{Object.keys(obj).forEach(function(k){return fn(obj[k],k);});}};return DefaultKeyValueDiffer;}();/**
 *
 */var KeyValueChangeRecord_=/** @class */function(){function KeyValueChangeRecord_(key){this.key=key;this.previousValue=null;this.currentValue=null;/** @internal */this._nextPrevious=null;/** @internal */this._next=null;/** @internal */this._prev=null;/** @internal */this._nextAdded=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextChanged=null;}return KeyValueChangeRecord_;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.
 *
 */var IterableDiffers=/** @class */function(){function IterableDiffers(factories){this.factories=factories;}IterableDiffers.create=function(factories,parent){if(parent!=null){var copied=parent.factories.slice();factories=factories.concat(copied);}return new IterableDiffers(factories);};/**
     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the
     * inherited {@link IterableDiffers} instance with the provided factories and return a new
     * {@link IterableDiffers} instance.
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {@link IterableDiffer} available.
     *
     * ### Example
     *
     * ```
     * @Component({
     *   viewProviders: [
     *     IterableDiffers.extend([new ImmutableListDiffer()])
     *   ]
     * })
     * ```
     */ /**
       * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the
       * inherited {@link IterableDiffers} instance with the provided factories and return a new
       * {@link IterableDiffers} instance.
       *
       * The following example shows how to extend an existing list of factories,
       * which will only be applied to the injector for this component and its children.
       * This step is all that's required to make a new {@link IterableDiffer} available.
       *
       * ### Example
       *
       * ```
       * @Component({
       *   viewProviders: [
       *     IterableDiffers.extend([new ImmutableListDiffer()])
       *   ]
       * })
       * ```
       */IterableDiffers.extend=/**
       * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the
       * inherited {@link IterableDiffers} instance with the provided factories and return a new
       * {@link IterableDiffers} instance.
       *
       * The following example shows how to extend an existing list of factories,
       * which will only be applied to the injector for this component and its children.
       * This step is all that's required to make a new {@link IterableDiffer} available.
       *
       * ### Example
       *
       * ```
       * @Component({
       *   viewProviders: [
       *     IterableDiffers.extend([new ImmutableListDiffer()])
       *   ]
       * })
       * ```
       */function(factories){return{provide:IterableDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling IterableDiffers.extend inside of dependencies passed
// to
// bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend IterableDiffers without a parent injector');}return IterableDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[IterableDiffers,new SkipSelf(),new Optional()]]};};IterableDiffers.prototype.find=function(iterable){var factory=this.factories.find(function(f){return f.supports(iterable);});if(factory!=null){return factory;}else{throw new Error("Cannot find a differ supporting object '"+iterable+"' of type '"+getTypeNameForDebugging(iterable)+"'");}};IterableDiffers.ngInjectableDef=defineInjectable({providedIn:'root',factory:function factory(){return new IterableDiffers([new DefaultIterableDifferFactory()]);}});return IterableDiffers;}();exports.IterableDiffers=IterableDiffers;function getTypeNameForDebugging(type){return type['name']||_typeof(type);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.
 *
 */var KeyValueDiffers=/** @class */function(){function KeyValueDiffers(factories){this.factories=factories;}KeyValueDiffers.create=function(factories,parent){if(parent){var copied=parent.factories.slice();factories=factories.concat(copied);}return new KeyValueDiffers(factories);};/**
     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the
     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new
     * {@link KeyValueDiffers} instance.
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {@link KeyValueDiffer} available.
     *
     * ### Example
     *
     * ```
     * @Component({
     *   viewProviders: [
     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
     *   ]
     * })
     * ```
     */ /**
       * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the
       * inherited {@link KeyValueDiffers} instance with the provided factories and return a new
       * {@link KeyValueDiffers} instance.
       *
       * The following example shows how to extend an existing list of factories,
       * which will only be applied to the injector for this component and its children.
       * This step is all that's required to make a new {@link KeyValueDiffer} available.
       *
       * ### Example
       *
       * ```
       * @Component({
       *   viewProviders: [
       *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
       *   ]
       * })
       * ```
       */KeyValueDiffers.extend=/**
       * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the
       * inherited {@link KeyValueDiffers} instance with the provided factories and return a new
       * {@link KeyValueDiffers} instance.
       *
       * The following example shows how to extend an existing list of factories,
       * which will only be applied to the injector for this component and its children.
       * This step is all that's required to make a new {@link KeyValueDiffer} available.
       *
       * ### Example
       *
       * ```
       * @Component({
       *   viewProviders: [
       *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
       *   ]
       * })
       * ```
       */function(factories){return{provide:KeyValueDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed
// to bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend KeyValueDiffers without a parent injector');}return KeyValueDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[KeyValueDiffers,new SkipSelf(),new Optional()]]};};KeyValueDiffers.prototype.find=function(kv){var factory=this.factories.find(function(f){return f.supports(kv);});if(factory){return factory;}throw new Error("Cannot find a differ supporting object '"+kv+"'");};return KeyValueDiffers;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Structural diffing for `Object`s and `Map`s.
 */exports.KeyValueDiffers=KeyValueDiffers;var keyValDiff=[new DefaultKeyValueDifferFactory()];/**
 * Structural diffing for `Iterable` types such as `Array`s.
 */var iterableDiff=[new DefaultIterableDifferFactory()];var defaultIterableDiffers=new IterableDiffers(iterableDiff);exports.ɵdefaultIterableDiffers=defaultIterableDiffers;var defaultKeyValueDiffers=new KeyValueDiffers(keyValDiff);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.ɵangular_packages_core_core_g=defaultKeyValueDiffers;var _CORE_PLATFORM_PROVIDERS=[// Set a default platform name for platforms that don't set it explicitly.
{provide:PLATFORM_ID,useValue:'unknown'},{provide:PlatformRef,deps:[Injector]},{provide:TestabilityRegistry,deps:[]},{provide:Console,deps:[]}];/**
 * This platform has to be included in any other platform
 *
 * @experimental
 */var platformCore=createPlatformFactory(null,'core',_CORE_PLATFORM_PROVIDERS);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Provide this token to set the locale of your application.
 * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,
 * DecimalPipe and PercentPipe) and by ICU expressions.
 *
 * See the {@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.
 *
 * ### Example
 *
 * ```typescript
 * import { LOCALE_ID } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */exports.platformCore=platformCore;var LOCALE_ID=new InjectionToken('LocaleId');/**
 * Use this token at bootstrap to provide the content of your translation file (`xtb`,
 * `xlf` or `xlf2`) when you want to translate your application in another language.
 *
 * See the {@linkDocs guide/i18n#merge i18n guide} for more information.
 *
 * ### Example
 *
 * ```typescript
 * import { TRANSLATIONS } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * // content of your translation file
 * const translations = '....';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: TRANSLATIONS, useValue: translations }]
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */exports.LOCALE_ID=LOCALE_ID;var TRANSLATIONS=new InjectionToken('Translations');/**
 * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,
 * `xlf` or `xlf2`.
 *
 * See the {@linkDocs guide/i18n#merge i18n guide} for more information.
 *
 * ### Example
 *
 * ```typescript
 * import { TRANSLATIONS_FORMAT } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */exports.TRANSLATIONS=TRANSLATIONS;var TRANSLATIONS_FORMAT=new InjectionToken('TranslationsFormat');/**
 * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy
 * that the compiler should use in case of missing translations:
 * - Error: throw if you have missing translations.
 * - Warning (default): show a warning in the console and/or shell.
 * - Ignore: do nothing.
 *
 * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.
 *
 * ### Example
 * ```typescript
 * import { MissingTranslationStrategy } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   missingTranslation: MissingTranslationStrategy.Error
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */ /**
 * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy
 * that the compiler should use in case of missing translations:
 * - Error: throw if you have missing translations.
 * - Warning (default): show a warning in the console and/or shell.
 * - Ignore: do nothing.
 *
 * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.
 *
 * ### Example
 * ```typescript
 * import { MissingTranslationStrategy } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   missingTranslation: MissingTranslationStrategy.Error
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */exports.TRANSLATIONS_FORMAT=TRANSLATIONS_FORMAT;var MissingTranslationStrategy;/**
 * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy
 * that the compiler should use in case of missing translations:
 * - Error: throw if you have missing translations.
 * - Warning (default): show a warning in the console and/or shell.
 * - Ignore: do nothing.
 *
 * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.
 *
 * ### Example
 * ```typescript
 * import { MissingTranslationStrategy } from '@angular/core';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { AppModule } from './app/app.module';
 *
 * platformBrowserDynamic().bootstrapModule(AppModule, {
 *   missingTranslation: MissingTranslationStrategy.Error
 * });
 * ```
 *
 * @experimental i18n support is experimental.
 */exports.MissingTranslationStrategy=MissingTranslationStrategy;(function(MissingTranslationStrategy){MissingTranslationStrategy[MissingTranslationStrategy["Error"]=0]="Error";MissingTranslationStrategy[MissingTranslationStrategy["Warning"]=1]="Warning";MissingTranslationStrategy[MissingTranslationStrategy["Ignore"]=2]="Ignore";})(MissingTranslationStrategy||(exports.MissingTranslationStrategy=MissingTranslationStrategy={}));/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function _iterableDiffersFactory(){return defaultIterableDiffers;}function _keyValueDiffersFactory(){return defaultKeyValueDiffers;}function _localeFactory(locale){return locale||'en-US';}/**
 * This module includes the providers of @angular/core that are needed
 * to bootstrap components via `ApplicationRef`.
 *
 * @experimental
 */var ApplicationModule=/** @class */function(){// Inject ApplicationRef to make it eager...
function ApplicationModule(appRef){}ApplicationModule.decorators=[{type:NgModule,args:[{providers:[ApplicationRef,ApplicationInitStatus,Compiler,APP_ID_RANDOM_PROVIDER,{provide:IterableDiffers,useFactory:_iterableDiffersFactory},{provide:KeyValueDiffers,useFactory:_keyValueDiffersFactory},{provide:LOCALE_ID,useFactory:_localeFactory,deps:[[new Inject(LOCALE_ID),new Optional(),new SkipSelf()]]}]}]}];/** @nocollapse */ApplicationModule.ctorParameters=function(){return[{type:ApplicationRef}];};return ApplicationModule;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML
 * that needs sanitizing.
 * Depending upon browser support we must use one of three strategies for doing this.
 * Support: Safari 10.x -> XHR strategy
 * Support: Firefox -> DomParser strategy
 * Default: InertDocument strategy
 */exports.ApplicationModule=ApplicationModule;var InertBodyHelper=/** @class */function(){function InertBodyHelper(defaultDoc){this.defaultDoc=defaultDoc;this.inertDocument=this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');this.inertBodyElement=this.inertDocument.body;if(this.inertBodyElement==null){// usually there should be only one body element in the document, but IE doesn't have any, so
// we need to create one.
var inertHtml=this.inertDocument.createElement('html');this.inertDocument.appendChild(inertHtml);this.inertBodyElement=this.inertDocument.createElement('body');inertHtml.appendChild(this.inertBodyElement);}this.inertBodyElement.innerHTML='<svg><g onload="this.parentNode.remove()"></g></svg>';if(this.inertBodyElement.querySelector&&!this.inertBodyElement.querySelector('svg')){// We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element
// so use the XHR strategy.
this.getInertBodyElement=this.getInertBodyElement_XHR;return;}this.inertBodyElement.innerHTML='<svg><p><style><img src="</style><img src=x onerror=alert(1)//">';if(this.inertBodyElement.querySelector&&this.inertBodyElement.querySelector('svg img')){// We just hit the Firefox bug - which prevents the inner img JS from being sanitized
// so use the DOMParser strategy, if it is available.
// If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we
// fall through to the default strategy below.
if(isDOMParserAvailable()){this.getInertBodyElement=this.getInertBodyElement_DOMParser;return;}}// None of the bugs were hit so it is safe for us to use the default InertDocument strategy
this.getInertBodyElement=this.getInertBodyElement_InertDocument;}/**
     * Use XHR to create and fill an inert body element (on Safari 10.1)
     * See
     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449
     */ /**
       * Use XHR to create and fill an inert body element (on Safari 10.1)
       * See
       * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449
       */InertBodyHelper.prototype.getInertBodyElement_XHR=/**
       * Use XHR to create and fill an inert body element (on Safari 10.1)
       * See
       * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449
       */function(html){// We add these extra elements to ensure that the rest of the content is parsed as expected
// e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the
// `<head>` tag.
html='<body><remove></remove>'+html+'</body>';try{html=encodeURI(html);}catch(e){return null;}var xhr=new XMLHttpRequest();xhr.responseType='document';xhr.open('GET','data:text/html;charset=utf-8,'+html,false);xhr.send(null);var body=xhr.response.body;body.removeChild(body.firstChild);return body;};/**
     * Use DOMParser to create and fill an inert body element (on Firefox)
     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7
     *
     */ /**
       * Use DOMParser to create and fill an inert body element (on Firefox)
       * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7
       *
       */InertBodyHelper.prototype.getInertBodyElement_DOMParser=/**
       * Use DOMParser to create and fill an inert body element (on Firefox)
       * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7
       *
       */function(html){// We add these extra elements to ensure that the rest of the content is parsed as expected
// e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the
// `<head>` tag.
html='<body><remove></remove>'+html+'</body>';try{var body=new window.DOMParser().parseFromString(html,'text/html').body;body.removeChild(body.firstChild);return body;}catch(e){return null;}};/**
     * Use an HTML5 `template` element, if supported, or an inert body element created via
     * `createHtmlDocument` to create and fill an inert DOM element.
     * This is the default sane strategy to use if the browser does not require one of the specialised
     * strategies above.
     */ /**
       * Use an HTML5 `template` element, if supported, or an inert body element created via
       * `createHtmlDocument` to create and fill an inert DOM element.
       * This is the default sane strategy to use if the browser does not require one of the specialised
       * strategies above.
       */InertBodyHelper.prototype.getInertBodyElement_InertDocument=/**
       * Use an HTML5 `template` element, if supported, or an inert body element created via
       * `createHtmlDocument` to create and fill an inert DOM element.
       * This is the default sane strategy to use if the browser does not require one of the specialised
       * strategies above.
       */function(html){// Prefer using <template> element if supported.
var templateEl=this.inertDocument.createElement('template');if('content'in templateEl){templateEl.innerHTML=html;return templateEl;}this.inertBodyElement.innerHTML=html;// Support: IE 9-11 only
// strip custom-namespaced attributes on IE<=11
if(this.defaultDoc.documentMode){this.stripCustomNsAttrs(this.inertBodyElement);}return this.inertBodyElement;};/**
     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.
     * 'ns1:xlink:foo').
     *
     * This is undesirable since we don't want to allow any of these custom attributes. This method
     * strips them all.
     */ /**
       * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
       * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.
       * 'ns1:xlink:foo').
       *
       * This is undesirable since we don't want to allow any of these custom attributes. This method
       * strips them all.
       */InertBodyHelper.prototype.stripCustomNsAttrs=/**
       * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
       * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.
       * 'ns1:xlink:foo').
       *
       * This is undesirable since we don't want to allow any of these custom attributes. This method
       * strips them all.
       */function(el){var elAttrs=el.attributes;// loop backwards so that we can support removals.
for(var i=elAttrs.length-1;0<i;i--){var attrib=elAttrs.item(i);var attrName=attrib.name;if(attrName==='xmlns:ns1'||attrName.indexOf('ns1:')===0){el.removeAttribute(attrName);}}var childNode=el.firstChild;while(childNode){if(childNode.nodeType===Node.ELEMENT_NODE)this.stripCustomNsAttrs(childNode);childNode=childNode.nextSibling;}};return InertBodyHelper;}();/**
 * We need to determine whether the DOMParser exists in the global context.
 * The try-catch is because, on some browsers, trying to access this property
 * on window can actually throw an error.
 *
 * @suppress {uselessCode}
 */function isDOMParserAvailable(){try{return!!window.DOMParser;}catch(e){return false;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * This regular expression matches a subset of URLs that will not cause script
 * execution if used in URL context within a HTML document. Specifically, this
 * regular expression matches if (comment from here on and regex copied from
 * Soy's EscapingConventions):
 * (1) Either a protocol in a whitelist (http, https, mailto or ftp).
 * (2) or no protocol.  A protocol must be followed by a colon. The below
 *     allows that by allowing colons only after one of the characters [/?#].
 *     A colon after a hash (#) must be in the fragment.
 *     Otherwise, a colon after a (?) must be in a query.
 *     Otherwise, a colon after a single solidus (/) must be in a path.
 *     Otherwise, a colon after a double solidus (//) must be in the authority
 *     (before port).
 *
 * The pattern disallows &, used in HTML entity declarations before
 * one of the characters in [/?#]. This disallows HTML entities used in the
 * protocol name, which should never happen, e.g. "h&#116;tp" for "http".
 * It also disallows HTML entities in the first path part of a relative path,
 * e.g. "foo&lt;bar/baz".  Our existing escaping functions should not produce
 * that. More importantly, it disallows masking of a colon,
 * e.g. "javascript&#58;...".
 *
 * This regular expression was taken from the Closure sanitization library.
 */var SAFE_URL_PATTERN=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;/** A pattern that matches safe data URLs. Only matches image, video and audio types. */var DATA_URL_PATTERN=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function _sanitizeUrl(url){url=String(url);if(url.match(SAFE_URL_PATTERN)||url.match(DATA_URL_PATTERN))return url;if(isDevMode()){console.warn("WARNING: sanitizing unsafe URL value "+url+" (see http://g.co/ng/security#xss)");}return'unsafe:'+url;}function sanitizeSrcset(srcset){srcset=String(srcset);return srcset.split(',').map(function(srcset){return _sanitizeUrl(srcset.trim());}).join(', ');}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function tagSet(tags){var res={};try{for(var _a=(0,_tslib.__values)(tags.split(',')),_b=_a.next();!_b.done;_b=_a.next()){var t=_b.value;res[t]=true;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_b&&!_b.done&&(_c=_a.return))_c.call(_a);}finally{if(e_1)throw e_1.error;}}return res;var e_1,_c;}function merge$1(){var sets=[];for(var _i=0;_i<arguments.length;_i++){sets[_i]=arguments[_i];}var res={};try{for(var sets_1=(0,_tslib.__values)(sets),sets_1_1=sets_1.next();!sets_1_1.done;sets_1_1=sets_1.next()){var s=sets_1_1.value;for(var v in s){if(s.hasOwnProperty(v))res[v]=true;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(sets_1_1&&!sets_1_1.done&&(_a=sets_1.return))_a.call(sets_1);}finally{if(e_2)throw e_2.error;}}return res;var e_2,_a;}// Good source of info about elements and attributes
// http://dev.w3.org/html5/spec/Overview.html#semantics
// http://simon.html5.org/html-elements
// Safe Void Elements - HTML5
// http://dev.w3.org/html5/spec/Overview.html#void-elements
var VOID_ELEMENTS=tagSet('area,br,col,hr,img,wbr');// Elements that you can, intentionally, leave open (and which close themselves)
// http://dev.w3.org/html5/spec/Overview.html#optional-tags
var OPTIONAL_END_TAG_BLOCK_ELEMENTS=tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');var OPTIONAL_END_TAG_INLINE_ELEMENTS=tagSet('rp,rt');var OPTIONAL_END_TAG_ELEMENTS=merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS,OPTIONAL_END_TAG_BLOCK_ELEMENTS);// Safe Block Elements - HTML5
var BLOCK_ELEMENTS=merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS,tagSet('address,article,'+'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,'+'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));// Inline Elements - HTML5
var INLINE_ELEMENTS=merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS,tagSet('a,abbr,acronym,audio,b,'+'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,'+'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));var VALID_ELEMENTS=merge$1(VOID_ELEMENTS,BLOCK_ELEMENTS,INLINE_ELEMENTS,OPTIONAL_END_TAG_ELEMENTS);// Attributes that have href and hence need to be sanitized
var URI_ATTRS=tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');// Attributes that have special href set hence need to be sanitized
var SRCSET_ATTRS=tagSet('srcset');var HTML_ATTRS=tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,'+'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,'+'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,'+'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,'+'valign,value,vspace,width');// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security
// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via
// innerHTML is required, SVG attributes should be added here.
// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those
// can be sanitized, but they increase security surface area without a legitimate use case, so they
// are left out here.
var VALID_ATTRS=merge$1(URI_ATTRS,SRCSET_ATTRS,HTML_ATTRS);/**
 * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe
 * attributes.
 */var SanitizingHtmlSerializer=/** @class */function(){function SanitizingHtmlSerializer(){// Explicitly track if something was stripped, to avoid accidentally warning of sanitization just
// because characters were re-encoded.
this.sanitizedSomething=false;this.buf=[];}SanitizingHtmlSerializer.prototype.sanitizeChildren=function(el){// This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.
// However this code never accesses properties off of `document` before deleting its contents
// again, so it shouldn't be vulnerable to DOM clobbering.
var current=el.firstChild;while(current){if(current.nodeType===Node.ELEMENT_NODE){this.startElement(current);}else if(current.nodeType===Node.TEXT_NODE){this.chars(current.nodeValue);}else{// Strip non-element, non-text nodes.
this.sanitizedSomething=true;}if(current.firstChild){current=current.firstChild;continue;}while(current){// Leaving the element. Walk up and to the right, closing tags as we go.
if(current.nodeType===Node.ELEMENT_NODE){this.endElement(current);}var next=this.checkClobberedElement(current,current.nextSibling);if(next){current=next;break;}current=this.checkClobberedElement(current,current.parentNode);}}return this.buf.join('');};SanitizingHtmlSerializer.prototype.startElement=function(element){var tagName=element.nodeName.toLowerCase();if(!VALID_ELEMENTS.hasOwnProperty(tagName)){this.sanitizedSomething=true;return;}this.buf.push('<');this.buf.push(tagName);var elAttrs=element.attributes;for(var i=0;i<elAttrs.length;i++){var elAttr=elAttrs.item(i);var attrName=elAttr.name;var lower=attrName.toLowerCase();if(!VALID_ATTRS.hasOwnProperty(lower)){this.sanitizedSomething=true;continue;}var value=elAttr.value;// TODO(martinprobst): Special case image URIs for data:image/...
if(URI_ATTRS[lower])value=_sanitizeUrl(value);if(SRCSET_ATTRS[lower])value=sanitizeSrcset(value);this.buf.push(' ',attrName,'="',encodeEntities(value),'"');}this.buf.push('>');};SanitizingHtmlSerializer.prototype.endElement=function(current){var tagName=current.nodeName.toLowerCase();if(VALID_ELEMENTS.hasOwnProperty(tagName)&&!VOID_ELEMENTS.hasOwnProperty(tagName)){this.buf.push('</');this.buf.push(tagName);this.buf.push('>');}};SanitizingHtmlSerializer.prototype.chars=function(chars){this.buf.push(encodeEntities(chars));};SanitizingHtmlSerializer.prototype.checkClobberedElement=function(node,nextNode){if(nextNode&&(node.compareDocumentPosition(nextNode)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY){throw new Error("Failed to sanitize html because the element is clobbered: "+node.outerHTML);}return nextNode;};return SanitizingHtmlSerializer;}();// Regular Expressions for parsing tags and attributes
var SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;// ! to ~ is the ASCII range.
var NON_ALPHANUMERIC_REGEXP=/([^\#-~ |!])/g;/**
 * Escapes all potentially dangerous characters, so that the
 * resulting string can be safely inserted into attribute or
 * element text.
 * @param value
 */function encodeEntities(value){return value.replace(/&/g,'&amp;').replace(SURROGATE_PAIR_REGEXP,function(match){var hi=match.charCodeAt(0);var low=match.charCodeAt(1);return'&#'+((hi-0xD800)*0x400+(low-0xDC00)+0x10000)+';';}).replace(NON_ALPHANUMERIC_REGEXP,function(match){return'&#'+match.charCodeAt(0)+';';}).replace(/</g,'&lt;').replace(/>/g,'&gt;');}var inertBodyHelper;/**
 * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to
 * the DOM in a browser environment.
 */function _sanitizeHtml(defaultDoc,unsafeHtmlInput){var inertBodyElement=null;try{inertBodyHelper=inertBodyHelper||new InertBodyHelper(defaultDoc);// Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).
var unsafeHtml=unsafeHtmlInput?String(unsafeHtmlInput):'';inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);// mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser
// trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.
var mXSSAttempts=5;var parsedHtml=unsafeHtml;do{if(mXSSAttempts===0){throw new Error('Failed to sanitize html because the input is unstable');}mXSSAttempts--;unsafeHtml=parsedHtml;parsedHtml=inertBodyElement.innerHTML;inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);}while(unsafeHtml!==parsedHtml);var sanitizer=new SanitizingHtmlSerializer();var safeHtml=sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement)||inertBodyElement);if(isDevMode()&&sanitizer.sanitizedSomething){console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');}return safeHtml;}finally{// In case anything goes wrong, clear out inertElement to reset the entire DOM structure.
if(inertBodyElement){var parent_1=getTemplateContent(inertBodyElement)||inertBodyElement;while(parent_1.firstChild){parent_1.removeChild(parent_1.firstChild);}}}}function getTemplateContent(el){return'content'in el/** Microsoft/TypeScript#21517 */&&isTemplateElement(el)?el.content:null;}function isTemplateElement(el){return el.nodeType===Node.ELEMENT_NODE&&el.nodeName==='TEMPLATE';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Regular expression for safe style values.
 *
 * Quotes (" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.
 *
 * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or
 * font-family) and hence could allow multiple values to get injected, but that should pose no risk
 * of XSS.
 *
 * The function expression checks only for XSS safety, not for CSS validity.
 *
 * This regular expression was taken from the Closure sanitization library, and augmented for
 * transformation values.
 */var VALUES='[-,."\'%_!# a-zA-Z0-9]+';var TRANSFORMATION_FNS='(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';var COLOR_FNS='(?:rgb|hsl)a?';var GRADIENTS='(?:repeating-)?(?:linear|radial)-gradient';var CSS3_FNS='(?:calc|attr)';var FN_ARGS='\\([-0-9.%, #a-zA-Z]+\\)';var SAFE_STYLE_VALUE=new RegExp("^("+VALUES+"|"+("(?:"+TRANSFORMATION_FNS+"|"+COLOR_FNS+"|"+GRADIENTS+"|"+CSS3_FNS+")")+(FN_ARGS+")$"),'g');/**
 * Matches a `url(...)` value with an arbitrary argument as long as it does
 * not contain parentheses.
 *
 * The URL value still needs to be sanitized separately.
 *
 * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted
 * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.
 * by observing whether scroll bars are displayed, or character ranges used by a font face
 * definition.
 *
 * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that
 * binding a URL value without further cooperation from the page will cause an information leak, and
 * if so, it is just a leak, not a full blown XSS vulnerability.
 *
 * Given the common use case, low likelihood of attack vector, and low impact of an attack, this
 * code is permissive and allows URLs that sanitize otherwise.
 */var URL_RE=/^url\(([^)]+)\)$/;/**
 * Checks that quotes (" and ') are properly balanced inside a string. Assumes
 * that neither escape (\) nor any other character that could result in
 * breaking out of a string parsing context are allowed;
 * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.
 *
 * This code was taken from the Closure sanitization library.
 */function hasBalancedQuotes(value){var outsideSingle=true;var outsideDouble=true;for(var i=0;i<value.length;i++){var c=value.charAt(i);if(c==='\''&&outsideDouble){outsideSingle=!outsideSingle;}else if(c==='"'&&outsideSingle){outsideDouble=!outsideDouble;}}return outsideSingle&&outsideDouble;}/**
 * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single
 * value) and returns a value that is safe to use in a browser environment.
 */function _sanitizeStyle(value){value=String(value).trim();// Make sure it's actually a string.
if(!value)return'';// Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for
// reasoning behind this.
var urlMatch=value.match(URL_RE);if(urlMatch&&_sanitizeUrl(urlMatch[1])===urlMatch[1]||value.match(SAFE_STYLE_VALUE)&&hasBalancedQuotes(value)){return value;// Safe style values.
}if(isDevMode()){console.warn("WARNING: sanitizing unsafe style value "+value+" (see http://g.co/ng/security#xss).");}return'unsafe';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property
 * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly
 * handled.
 *
 * See DomSanitizer for more details on security in Angular applications.
 *
 *
 */ /**
 * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property
 * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly
 * handled.
 *
 * See DomSanitizer for more details on security in Angular applications.
 *
 *
 */var SecurityContext;/**
 * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property
 * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly
 * handled.
 *
 * See DomSanitizer for more details on security in Angular applications.
 *
 *
 */exports.SecurityContext=SecurityContext;(function(SecurityContext){SecurityContext[SecurityContext["NONE"]=0]="NONE";SecurityContext[SecurityContext["HTML"]=1]="HTML";SecurityContext[SecurityContext["STYLE"]=2]="STYLE";SecurityContext[SecurityContext["SCRIPT"]=3]="SCRIPT";SecurityContext[SecurityContext["URL"]=4]="URL";SecurityContext[SecurityContext["RESOURCE_URL"]=5]="RESOURCE_URL";})(SecurityContext||(exports.SecurityContext=SecurityContext={}));/**
 * Sanitizer is used by the views to sanitize potentially dangerous values.
 *
 *
 */var Sanitizer=/** @class */function(){function Sanitizer(){}return Sanitizer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Called before each cycle of a view's check to detect whether this is in the
// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit
// lifecycle methods. Returns true if this check cycle should call lifecycle
// methods.
exports.Sanitizer=Sanitizer;function shiftInitState(view,priorInitState,newInitState){// Only update the InitState if we are currently in the prior state.
// For example, only move into CallingInit if we are in BeforeInit. Only
// move into CallingContentInit if we are in CallingInit. Normally this will
// always be true because of how checkCycle is called in checkAndUpdateView.
// However, if checkAndUpdateView is called recursively or if an exception is
// thrown while checkAndUpdateView is running, checkAndUpdateView starts over
// from the beginning. This ensures the state is monotonically increasing,
// terminating in the AfterInit state, which ensures the Init methods are called
// at least once and only once.
var state=view.state;var initState=state&1792;if(initState===priorInitState){view.state=state&~1792/* InitState_Mask */|newInitState;view.initIndex=-1;return true;}return initState===newInitState;}// Returns true if the lifecycle init method should be called for the node with
// the given init index.
function shouldCallLifecycleInitHook(view,initState,index){if((view.state&1792/* InitState_Mask */)===initState&&view.initIndex<=index){view.initIndex=index+1;return true;}return false;}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asTextData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asElementData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asProviderData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asPureExpressionData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 */function asQueryList(view,index){return view.nodes[index];}var DebugContext=/** @class */function(){function DebugContext(){}return DebugContext;}();/**
 * This object is used to prevent cycles in the source files and to have a place where
 * debug mode can hook it. It is lazily filled when `isDevMode` is known.
 */exports.ɵangular_packages_core_core_t=DebugContext;var Services={setCurrentNode:undefined,createRootView:undefined,createEmbeddedView:undefined,createComponentView:undefined,createNgModuleRef:undefined,overrideProvider:undefined,overrideComponentView:undefined,clearOverrides:undefined,checkAndUpdateView:undefined,checkNoChangesView:undefined,destroyView:undefined,resolveDep:undefined,createDebugContext:undefined,handleEvent:undefined,updateDirectives:undefined,updateRenderer:undefined,dirtyParentQueries:undefined};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function expressionChangedAfterItHasBeenCheckedError(context,oldValue,currValue,isFirstCheck){var msg="ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '"+oldValue+"'. Current value: '"+currValue+"'.";if(isFirstCheck){msg+=" It seems like the view has been created after its parent and its children have been dirty checked."+" Has it been created in a change detection hook ?";}return viewDebugError(msg,context);}function viewWrappedDebugError(err,context){if(!(err instanceof Error)){// errors that are not Error instances don't have a stack,
// so it is ok to wrap them into a new Error object...
err=new Error(err.toString());}_addDebugContext(err,context);return err;}function viewDebugError(msg,context){var err=new Error(msg);_addDebugContext(err,context);return err;}function _addDebugContext(err,context){err[ERROR_DEBUG_CONTEXT]=context;err[ERROR_LOGGER]=context.logError.bind(context);}function isViewDebugError(err){return!!getDebugContext(err);}function viewDestroyedError(action){return new Error("ViewDestroyedError: Attempt to use a destroyed view: "+action);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NOOP=function NOOP(){};var _tokenKeyCache=new Map();function tokenKey(token){var key=_tokenKeyCache.get(token);if(!key){key=stringify(token)+'_'+_tokenKeyCache.size;_tokenKeyCache.set(token,key);}return key;}function unwrapValue(view,nodeIdx,bindingIdx,value){if(WrappedValue.isWrapped(value)){value=WrappedValue.unwrap(value);var globalBindingIdx=view.def.nodes[nodeIdx].bindingIndex+bindingIdx;var oldValue=WrappedValue.unwrap(view.oldValues[globalBindingIdx]);view.oldValues[globalBindingIdx]=new WrappedValue(oldValue);}return value;}var UNDEFINED_RENDERER_TYPE_ID='$$undefined';var EMPTY_RENDERER_TYPE_ID='$$empty';// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createRendererType2(values){return{id:UNDEFINED_RENDERER_TYPE_ID,styles:values.styles,encapsulation:values.encapsulation,data:values.data};}var _renderCompCount=0;function resolveRendererType2(type){if(type&&type.id===UNDEFINED_RENDERER_TYPE_ID){// first time we see this RendererType2. Initialize it...
var isFilled=type.encapsulation!=null&&type.encapsulation!==ViewEncapsulation.None||type.styles.length||Object.keys(type.data).length;if(isFilled){type.id="c"+_renderCompCount++;}else{type.id=EMPTY_RENDERER_TYPE_ID;}}if(type&&type.id===EMPTY_RENDERER_TYPE_ID){type=null;}return type||null;}function checkBinding(view,def,bindingIdx,value){var oldValues=view.oldValues;if(view.state&2/* FirstCheck */||!looseIdentical(oldValues[def.bindingIndex+bindingIdx],value)){return true;}return false;}function checkAndUpdateBinding(view,def,bindingIdx,value){if(checkBinding(view,def,bindingIdx,value)){view.oldValues[def.bindingIndex+bindingIdx]=value;return true;}return false;}function checkBindingNoChanges(view,def,bindingIdx,value){var oldValue=view.oldValues[def.bindingIndex+bindingIdx];if(view.state&1/* BeforeFirstCheck */||!devModeEqual(oldValue,value)){var bindingName=def.bindings[bindingIdx].name;throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view,def.nodeIndex),bindingName+": "+oldValue,bindingName+": "+value,(view.state&1/* BeforeFirstCheck */)!==0);}}function markParentViewsForCheck(view){var currView=view;while(currView){if(currView.def.flags&2/* OnPush */){currView.state|=8/* ChecksEnabled */;}currView=currView.viewContainerParent||currView.parent;}}function markParentViewsForCheckProjectedViews(view,endView){var currView=view;while(currView&&currView!==endView){currView.state|=64/* CheckProjectedViews */;currView=currView.viewContainerParent||currView.parent;}}function dispatchEvent(view,nodeIndex,eventName,event){try{var nodeDef=view.def.nodes[nodeIndex];var startView=nodeDef.flags&33554432/* ComponentView */?asElementData(view,nodeIndex).componentView:view;markParentViewsForCheck(startView);return Services.handleEvent(view,nodeIndex,eventName,event);}catch(e){// Attention: Don't rethrow, as it would cancel Observable subscriptions!
view.root.errorHandler.handleError(e);}}function declaredViewContainer(view){if(view.parent){var parentView=view.parent;return asElementData(parentView,view.parentNodeDef.nodeIndex);}return null;}/**
 * for component views, this is the host element.
 * for embedded views, this is the index of the parent node
 * that contains the view container.
 */function viewParentEl(view){var parentView=view.parent;if(parentView){return view.parentNodeDef.parent;}else{return null;}}function renderNode(view,def){switch(def.flags&201347067/* Types */){case 1/* TypeElement */:return asElementData(view,def.nodeIndex).renderElement;case 2/* TypeText */:return asTextData(view,def.nodeIndex).renderText;}}function elementEventFullName(target,name){return target?target+":"+name:name;}function isComponentView(view){return!!view.parent&&!!(view.parentNodeDef.flags&32768/* Component */);}function isEmbeddedView(view){return!!view.parent&&!(view.parentNodeDef.flags&32768/* Component */);}function filterQueryId(queryId){return 1<<queryId%32;}function splitMatchedQueriesDsl(matchedQueriesDsl){var matchedQueries={};var matchedQueryIds=0;var references={};if(matchedQueriesDsl){matchedQueriesDsl.forEach(function(_a){var _b=(0,_tslib.__read)(_a,2),queryId=_b[0],valueType=_b[1];if(typeof queryId==='number'){matchedQueries[queryId]=valueType;matchedQueryIds|=filterQueryId(queryId);}else{references[queryId]=valueType;}});}return{matchedQueries:matchedQueries,references:references,matchedQueryIds:matchedQueryIds};}function splitDepsDsl(deps,sourceName){return deps.map(function(value){var token;var flags;if(Array.isArray(value)){_a=(0,_tslib.__read)(value,2),flags=_a[0],token=_a[1];}else{flags=0/* None */;token=value;}if(token&&(typeof token==='function'||_typeof(token)==='object')&&sourceName){Object.defineProperty(token,SOURCE,{value:sourceName,configurable:true});}return{flags:flags,token:token,tokenKey:tokenKey(token)};var _a;});}function getParentRenderElement(view,renderHost,def){var renderParent=def.renderParent;if(renderParent){if((renderParent.flags&1/* TypeElement */)===0||(renderParent.flags&33554432/* ComponentView */)===0||renderParent.element.componentRendererType&&renderParent.element.componentRendererType.encapsulation===ViewEncapsulation.Native){// only children of non components, or children of components with native encapsulation should
// be attached.
return asElementData(view,def.renderParent.nodeIndex).renderElement;}}else{return renderHost;}}var DEFINITION_CACHE=new WeakMap();function resolveDefinition(factory){var value=DEFINITION_CACHE.get(factory);if(!value){value=factory(function(){return NOOP;});value.factory=factory;DEFINITION_CACHE.set(factory,value);}return value;}function rootRenderNodes(view){var renderNodes=[];visitRootRenderNodes(view,0/* Collect */,undefined,undefined,renderNodes);return renderNodes;}function visitRootRenderNodes(view,action,parentNode,nextSibling,target){// We need to re-compute the parent node in case the nodes have been moved around manually
if(action===3/* RemoveChild */){parentNode=view.renderer.parentNode(renderNode(view,view.def.lastRenderRootNode));}visitSiblingRenderNodes(view,action,0,view.def.nodes.length-1,parentNode,nextSibling,target);}function visitSiblingRenderNodes(view,action,startIndex,endIndex,parentNode,nextSibling,target){for(var i=startIndex;i<=endIndex;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&(1/* TypeElement */|2/* TypeText */|8/* TypeNgContent */)){visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}}function visitProjectedRenderNodes(view,ngContentIndex,action,parentNode,nextSibling,target){var compView=view;while(compView&&!isComponentView(compView)){compView=compView.parent;}var hostView=compView.parent;var hostElDef=viewParentEl(compView);var startIndex=hostElDef.nodeIndex+1;var endIndex=hostElDef.nodeIndex+hostElDef.childCount;for(var i=startIndex;i<=endIndex;i++){var nodeDef=hostView.def.nodes[i];if(nodeDef.ngContentIndex===ngContentIndex){visitRenderNode(hostView,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}if(!hostView.parent){// a root view
var projectedNodes=view.root.projectableNodes[ngContentIndex];if(projectedNodes){for(var i=0;i<projectedNodes.length;i++){execRenderNodeAction(view,projectedNodes[i],action,parentNode,nextSibling,target);}}}}function visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target){if(nodeDef.flags&8/* TypeNgContent */){visitProjectedRenderNodes(view,nodeDef.ngContent.index,action,parentNode,nextSibling,target);}else{var rn=renderNode(view,nodeDef);if(action===3/* RemoveChild */&&nodeDef.flags&33554432/* ComponentView */&&nodeDef.bindingFlags&48/* CatSyntheticProperty */){// Note: we might need to do both actions.
if(nodeDef.bindingFlags&16/* SyntheticProperty */){execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);}if(nodeDef.bindingFlags&32/* SyntheticHostProperty */){var compView=asElementData(view,nodeDef.nodeIndex).componentView;execRenderNodeAction(compView,rn,action,parentNode,nextSibling,target);}}else{execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);}if(nodeDef.flags&16777216/* EmbeddedViews */){var embeddedViews=asElementData(view,nodeDef.nodeIndex).viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){visitRootRenderNodes(embeddedViews[k],action,parentNode,nextSibling,target);}}if(nodeDef.flags&1/* TypeElement */&&!nodeDef.element.name){visitSiblingRenderNodes(view,action,nodeDef.nodeIndex+1,nodeDef.nodeIndex+nodeDef.childCount,parentNode,nextSibling,target);}}}function execRenderNodeAction(view,renderNode,action,parentNode,nextSibling,target){var renderer=view.renderer;switch(action){case 1/* AppendChild */:renderer.appendChild(parentNode,renderNode);break;case 2/* InsertBefore */:renderer.insertBefore(parentNode,renderNode,nextSibling);break;case 3/* RemoveChild */:renderer.removeChild(parentNode,renderNode);break;case 0/* Collect */:target.push(renderNode);break;}}var NS_PREFIX_RE=/^:([^:]+):(.+)$/;function splitNamespace(name){if(name[0]===':'){var match=name.match(NS_PREFIX_RE);return[match[1],match[2]];}return['',name];}function calcBindingFlags(bindings){var flags=0;for(var i=0;i<bindings.length;i++){flags|=bindings[i].flags;}return flags;}function interpolate(valueCount,constAndInterp){var result='';for(var i=0;i<valueCount*2;i=i+2){result=result+constAndInterp[i]+_toStringWithNull(constAndInterp[i+1]);}return result+constAndInterp[valueCount*2];}function inlineInterpolate(valueCount,c0,a1,c1,a2,c2,a3,c3,a4,c4,a5,c5,a6,c6,a7,c7,a8,c8,a9,c9){switch(valueCount){case 1:return c0+_toStringWithNull(a1)+c1;case 2:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2;case 3:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3;case 4:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4;case 5:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5;case 6:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6;case 7:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7;case 8:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8;case 9:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8+_toStringWithNull(a9)+c9;default:throw new Error("Does not support more than 9 expressions");}}function _toStringWithNull(v){return v!=null?v.toString():'';}var EMPTY_ARRAY$2=[];exports.ɵEMPTY_ARRAY=EMPTY_ARRAY$2;var EMPTY_MAP={};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.ɵEMPTY_MAP=EMPTY_MAP;function anchorDef(flags,matchedQueriesDsl,ngContentIndex,childCount,handleEvent,templateFactory){flags|=1/* TypeElement */;var _a=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_a.matchedQueries,references=_a.references,matchedQueryIds=_a.matchedQueryIds;var template=templateFactory?resolveDefinition(templateFactory):null;return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
flags:flags,checkIndex:-1,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:[],bindingFlags:0,outputs:[],element:{ns:null,name:null,attrs:null,template:template,componentProvider:null,componentView:null,componentRendererType:null,publicProviders:null,allProviders:null,handleEvent:handleEvent||NOOP},provider:null,text:null,query:null,ngContent:null};}function elementDef(checkIndex,flags,matchedQueriesDsl,ngContentIndex,childCount,namespaceAndName,fixedAttrs,bindings,outputs,handleEvent,componentView,componentRendererType){if(fixedAttrs===void 0){fixedAttrs=[];}if(!handleEvent){handleEvent=NOOP;}var _a=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_a.matchedQueries,references=_a.references,matchedQueryIds=_a.matchedQueryIds;var ns=null;var name=null;if(namespaceAndName){_b=(0,_tslib.__read)(splitNamespace(namespaceAndName),2),ns=_b[0],name=_b[1];}bindings=bindings||[];var bindingDefs=new Array(bindings.length);for(var i=0;i<bindings.length;i++){var _c=(0,_tslib.__read)(bindings[i],3),bindingFlags=_c[0],namespaceAndName_1=_c[1],suffixOrSecurityContext=_c[2];var _d=(0,_tslib.__read)(splitNamespace(namespaceAndName_1),2),ns_1=_d[0],name_1=_d[1];var securityContext=undefined;var suffix=undefined;switch(bindingFlags&15/* Types */){case 4/* TypeElementStyle */:suffix=suffixOrSecurityContext;break;case 1/* TypeElementAttribute */:case 8/* TypeProperty */:securityContext=suffixOrSecurityContext;break;}bindingDefs[i]={flags:bindingFlags,ns:ns_1,name:name_1,nonMinifiedName:name_1,securityContext:securityContext,suffix:suffix};}outputs=outputs||[];var outputDefs=new Array(outputs.length);for(var i=0;i<outputs.length;i++){var _e=(0,_tslib.__read)(outputs[i],2),target=_e[0],eventName=_e[1];outputDefs[i]={type:0/* ElementOutput */,target:target,eventName:eventName,propName:null};}fixedAttrs=fixedAttrs||[];var attrs=fixedAttrs.map(function(_a){var _b=(0,_tslib.__read)(_a,2),namespaceAndName=_b[0],value=_b[1];var _c=(0,_tslib.__read)(splitNamespace(namespaceAndName),2),ns=_c[0],name=_c[1];return[ns,name,value];});componentRendererType=resolveRendererType2(componentRendererType);if(componentView){flags|=33554432/* ComponentView */;}flags|=1/* TypeElement */;return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:bindingDefs,bindingFlags:calcBindingFlags(bindingDefs),outputs:outputDefs,element:{ns:ns,name:name,attrs:attrs,template:null,// will bet set by the view definition
componentProvider:null,componentView:componentView||null,componentRendererType:componentRendererType,publicProviders:null,allProviders:null,handleEvent:handleEvent||NOOP},provider:null,text:null,query:null,ngContent:null};var _b;}function createElement(view,renderHost,def){var elDef=def.element;var rootSelectorOrNode=view.root.selectorOrNode;var renderer=view.renderer;var el;if(view.parent||!rootSelectorOrNode){if(elDef.name){el=renderer.createElement(elDef.name,elDef.ns);}else{el=renderer.createComment('');}var parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,el);}}else{el=renderer.selectRootElement(rootSelectorOrNode);}if(elDef.attrs){for(var i=0;i<elDef.attrs.length;i++){var _a=(0,_tslib.__read)(elDef.attrs[i],3),ns=_a[0],name_2=_a[1],value=_a[2];renderer.setAttribute(el,name_2,value,ns);}}return el;}function listenToElementOutputs(view,compView,def,el){for(var i=0;i<def.outputs.length;i++){var output=def.outputs[i];var handleEventClosure=renderEventHandlerClosure(view,def.nodeIndex,elementEventFullName(output.target,output.eventName));var listenTarget=output.target;var listenerView=view;if(output.target==='component'){listenTarget=null;listenerView=compView;}var disposable=listenerView.renderer.listen(listenTarget||el,output.eventName,handleEventClosure);view.disposables[def.outputIndex+i]=disposable;}}function renderEventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}function checkAndUpdateElementInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindLen=def.bindings.length;var changed=false;if(bindLen>0&&checkAndUpdateElementValue(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateElementValue(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateElementValue(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateElementValue(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateElementValue(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateElementValue(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateElementValue(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateElementValue(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateElementValue(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateElementValue(view,def,9,v9))changed=true;return changed;}function checkAndUpdateElementDynamic(view,def,values){var changed=false;for(var i=0;i<values.length;i++){if(checkAndUpdateElementValue(view,def,i,values[i]))changed=true;}return changed;}function checkAndUpdateElementValue(view,def,bindingIdx,value){if(!checkAndUpdateBinding(view,def,bindingIdx,value)){return false;}var binding=def.bindings[bindingIdx];var elData=asElementData(view,def.nodeIndex);var renderNode$$1=elData.renderElement;var name=binding.name;switch(binding.flags&15/* Types */){case 1/* TypeElementAttribute */:setElementAttribute(view,binding,renderNode$$1,binding.ns,name,value);break;case 2/* TypeElementClass */:setElementClass(view,renderNode$$1,name,value);break;case 4/* TypeElementStyle */:setElementStyle(view,binding,renderNode$$1,name,value);break;case 8/* TypeProperty */:var bindView=def.flags&33554432/* ComponentView */&&binding.flags&32/* SyntheticHostProperty */?elData.componentView:view;setElementProperty(bindView,binding,renderNode$$1,name,value);break;}return true;}function setElementAttribute(view,binding,renderNode$$1,ns,name,value){var securityContext=binding.securityContext;var renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;renderValue=renderValue!=null?renderValue.toString():null;var renderer=view.renderer;if(value!=null){renderer.setAttribute(renderNode$$1,name,renderValue,ns);}else{renderer.removeAttribute(renderNode$$1,name,ns);}}function setElementClass(view,renderNode$$1,name,value){var renderer=view.renderer;if(value){renderer.addClass(renderNode$$1,name);}else{renderer.removeClass(renderNode$$1,name);}}function setElementStyle(view,binding,renderNode$$1,name,value){var renderValue=view.root.sanitizer.sanitize(SecurityContext.STYLE,value);if(renderValue!=null){renderValue=renderValue.toString();var unit=binding.suffix;if(unit!=null){renderValue=renderValue+unit;}}else{renderValue=null;}var renderer=view.renderer;if(renderValue!=null){renderer.setStyle(renderNode$$1,name,renderValue);}else{renderer.removeStyle(renderNode$$1,name);}}function setElementProperty(view,binding,renderNode$$1,name,value){var securityContext=binding.securityContext;var renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;view.renderer.setProperty(renderNode$$1,name,renderValue);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var UNDEFINED_VALUE=new Object();var InjectorRefTokenKey$1=tokenKey(Injector);var INJECTORRefTokenKey$1=tokenKey(INJECTOR);var NgModuleRefTokenKey=tokenKey(NgModuleRef);function moduleProvideDef(flags,token,value,deps){// Need to resolve forwardRefs as e.g. for `useValue` we
// lowered the expression and then stopped evaluating it,
// i.e. also didn't unwrap it.
value=resolveForwardRef(value);var depDefs=splitDepsDsl(deps,stringify(token));return{// will bet set by the module definition
index:-1,deps:depDefs,flags:flags,token:token,value:value};}function moduleDef(providers){var providersByKey={};var modules=[];var isRoot=false;for(var i=0;i<providers.length;i++){var provider=providers[i];if(provider.token===APP_ROOT){isRoot=true;}if(provider.flags&1073741824/* TypeNgModule */){modules.push(provider.token);}provider.index=i;providersByKey[tokenKey(provider.token)]=provider;}return{// Will be filled later...
factory:null,providersByKey:providersByKey,providers:providers,modules:modules,isRoot:isRoot};}function initNgModule(data){var def=data._def;var providers=data._providers=new Array(def.providers.length);for(var i=0;i<def.providers.length;i++){var provDef=def.providers[i];if(!(provDef.flags&4096/* LazyProvider */)){// Make sure the provider has not been already initialized outside this loop.
if(providers[i]===undefined){providers[i]=_createProviderInstance$1(data,provDef);}}}}function resolveNgModuleDep(data,depDef,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}var former=setCurrentInjector(data);try{if(depDef.flags&8/* Value */){return depDef.token;}if(depDef.flags&2/* Optional */){notFoundValue=null;}if(depDef.flags&1/* SkipSelf */){return data._parent.get(depDef.token,notFoundValue);}var tokenKey_1=depDef.tokenKey;switch(tokenKey_1){case InjectorRefTokenKey$1:case INJECTORRefTokenKey$1:case NgModuleRefTokenKey:return data;}var providerDef=data._def.providersByKey[tokenKey_1];if(providerDef){var providerInstance=data._providers[providerDef.index];if(providerInstance===undefined){providerInstance=data._providers[providerDef.index]=_createProviderInstance$1(data,providerDef);}return providerInstance===UNDEFINED_VALUE?undefined:providerInstance;}else if(depDef.token.ngInjectableDef&&targetsModule(data,depDef.token.ngInjectableDef)){var injectableDef=depDef.token.ngInjectableDef;var index=data._providers.length;data._def.providersByKey[depDef.tokenKey]={flags:1024/* TypeFactoryProvider */|4096/* LazyProvider */,value:injectableDef.factory,deps:[],index:index,token:depDef.token};data._providers[index]=UNDEFINED_VALUE;return data._providers[index]=_createProviderInstance$1(data,data._def.providersByKey[depDef.tokenKey]);}return data._parent.get(depDef.token,notFoundValue);}finally{setCurrentInjector(former);}}function moduleTransitivelyPresent(ngModule,scope){return ngModule._def.modules.indexOf(scope)>-1;}function targetsModule(ngModule,def){return def.providedIn!=null&&(moduleTransitivelyPresent(ngModule,def.providedIn)||def.providedIn==='root'&&ngModule._def.isRoot);}function _createProviderInstance$1(ngModule,providerDef){var injectable;switch(providerDef.flags&201347067/* Types */){case 512/* TypeClassProvider */:injectable=_createClass(ngModule,providerDef.value,providerDef.deps);break;case 1024/* TypeFactoryProvider */:injectable=_callFactory(ngModule,providerDef.value,providerDef.deps);break;case 2048/* TypeUseExistingProvider */:injectable=resolveNgModuleDep(ngModule,providerDef.deps[0]);break;case 256/* TypeValueProvider */:injectable=providerDef.value;break;}return injectable===undefined?UNDEFINED_VALUE:injectable;}function _createClass(ngModule,ctor,deps){var len=deps.length;switch(len){case 0:return new ctor();case 1:return new ctor(resolveNgModuleDep(ngModule,deps[0]));case 2:return new ctor(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]));case 3:return new ctor(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]),resolveNgModuleDep(ngModule,deps[2]));default:var depValues=new Array(len);for(var i=0;i<len;i++){depValues[i]=resolveNgModuleDep(ngModule,deps[i]);}return new(ctor.bind.apply(ctor,(0,_tslib.__spread)([void 0],depValues)))();}}function _callFactory(ngModule,factory,deps){var len=deps.length;switch(len){case 0:return factory();case 1:return factory(resolveNgModuleDep(ngModule,deps[0]));case 2:return factory(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]));case 3:return factory(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]),resolveNgModuleDep(ngModule,deps[2]));default:var depValues=Array(len);for(var i=0;i<len;i++){depValues[i]=resolveNgModuleDep(ngModule,deps[i]);}return factory.apply(void 0,(0,_tslib.__spread)(depValues));}}function callNgModuleLifecycle(ngModule,lifecycles){var def=ngModule._def;for(var i=0;i<def.providers.length;i++){var provDef=def.providers[i];if(provDef.flags&131072/* OnDestroy */){var instance=ngModule._providers[i];if(instance&&instance!==UNDEFINED_VALUE){instance.ngOnDestroy();}}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function attachEmbeddedView(parentView,elementData,viewIndex,view){var embeddedViews=elementData.viewContainer._embeddedViews;if(viewIndex===null||viewIndex===undefined){viewIndex=embeddedViews.length;}view.viewContainerParent=parentView;addToArray(embeddedViews,viewIndex,view);attachProjectedView(elementData,view);Services.dirtyParentQueries(view);var prevView=viewIndex>0?embeddedViews[viewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);}function attachProjectedView(vcElementData,view){var dvcElementData=declaredViewContainer(view);if(!dvcElementData||dvcElementData===vcElementData||view.state&16/* IsProjectedView */){return;}// Note: For performance reasons, we
// - add a view to template._projectedViews only 1x throughout its lifetime,
//   and remove it not until the view is destroyed.
//   (hard, as when a parent view is attached/detached we would need to attach/detach all
//    nested projected views as well, even across component boundaries).
// - don't track the insertion order of views in the projected views array
//   (hard, as when the views of the same template are inserted different view containers)
view.state|=16/* IsProjectedView */;var projectedViews=dvcElementData.template._projectedViews;if(!projectedViews){projectedViews=dvcElementData.template._projectedViews=[];}projectedViews.push(view);// Note: we are changing the NodeDef here as we cannot calculate
// the fact whether a template is used for projection during compilation.
markNodeAsProjectedTemplate(view.parent.def,view.parentNodeDef);}function markNodeAsProjectedTemplate(viewDef,nodeDef){if(nodeDef.flags&4/* ProjectedTemplate */){return;}viewDef.nodeFlags|=4/* ProjectedTemplate */;nodeDef.flags|=4/* ProjectedTemplate */;var parentNodeDef=nodeDef.parent;while(parentNodeDef){parentNodeDef.childFlags|=4/* ProjectedTemplate */;parentNodeDef=parentNodeDef.parent;}}function detachEmbeddedView(elementData,viewIndex){var embeddedViews=elementData.viewContainer._embeddedViews;if(viewIndex==null||viewIndex>=embeddedViews.length){viewIndex=embeddedViews.length-1;}if(viewIndex<0){return null;}var view=embeddedViews[viewIndex];view.viewContainerParent=null;removeFromArray(embeddedViews,viewIndex);// See attachProjectedView for why we don't update projectedViews here.
Services.dirtyParentQueries(view);renderDetachView(view);return view;}function detachProjectedView(view){if(!(view.state&16/* IsProjectedView */)){return;}var dvcElementData=declaredViewContainer(view);if(dvcElementData){var projectedViews=dvcElementData.template._projectedViews;if(projectedViews){removeFromArray(projectedViews,projectedViews.indexOf(view));Services.dirtyParentQueries(view);}}}function moveEmbeddedView(elementData,oldViewIndex,newViewIndex){var embeddedViews=elementData.viewContainer._embeddedViews;var view=embeddedViews[oldViewIndex];removeFromArray(embeddedViews,oldViewIndex);if(newViewIndex==null){newViewIndex=embeddedViews.length;}addToArray(embeddedViews,newViewIndex,view);// Note: Don't need to change projectedViews as the order in there
// as always invalid...
Services.dirtyParentQueries(view);renderDetachView(view);var prevView=newViewIndex>0?embeddedViews[newViewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);return view;}function renderAttachEmbeddedView(elementData,prevView,view){var prevRenderNode=prevView?renderNode(prevView,prevView.def.lastRenderRootNode):elementData.renderElement;var parentNode=view.renderer.parentNode(prevRenderNode);var nextSibling=view.renderer.nextSibling(prevRenderNode);// Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!
// However, browsers automatically do `appendChild` when there is no `nextSibling`.
visitRootRenderNodes(view,2/* InsertBefore */,parentNode,nextSibling,undefined);}function renderDetachView(view){visitRootRenderNodes(view,3/* RemoveChild */,null,null,undefined);}function addToArray(arr,index,value){// perf: array.push is faster than array.splice!
if(index>=arr.length){arr.push(value);}else{arr.splice(index,0,value);}}function removeFromArray(arr,index){// perf: array.pop is faster than array.splice!
if(index>=arr.length-1){arr.pop();}else{arr.splice(index,1);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EMPTY_CONTEXT=new Object();// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createComponentFactory(selector,componentType,viewDefFactory,inputs,outputs,ngContentSelectors){return new ComponentFactory_(selector,componentType,viewDefFactory,inputs,outputs,ngContentSelectors);}function getComponentViewDefinitionFactory(componentFactory){return componentFactory.viewDefFactory;}var ComponentFactory_=/** @class */function(_super){(0,_tslib.__extends)(ComponentFactory_,_super);function ComponentFactory_(selector,componentType,viewDefFactory,_inputs,_outputs,ngContentSelectors){var _this=// Attention: this ctor is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
_super.call(this)||this;_this.selector=selector;_this.componentType=componentType;_this._inputs=_inputs;_this._outputs=_outputs;_this.ngContentSelectors=ngContentSelectors;_this.viewDefFactory=viewDefFactory;return _this;}Object.defineProperty(ComponentFactory_.prototype,"inputs",{get:function get(){var inputsArr=[];var inputs=this._inputs;for(var propName in inputs){var templateName=inputs[propName];inputsArr.push({propName:propName,templateName:templateName});}return inputsArr;},enumerable:true,configurable:true});Object.defineProperty(ComponentFactory_.prototype,"outputs",{get:function get(){var outputsArr=[];for(var propName in this._outputs){var templateName=this._outputs[propName];outputsArr.push({propName:propName,templateName:templateName});}return outputsArr;},enumerable:true,configurable:true});/**
     * Creates a new component.
     */ /**
       * Creates a new component.
       */ComponentFactory_.prototype.create=/**
       * Creates a new component.
       */function(injector,projectableNodes,rootSelectorOrNode,ngModule){if(!ngModule){throw new Error('ngModule should be provided');}var viewDef=resolveDefinition(this.viewDefFactory);var componentNodeIndex=viewDef.nodes[0].element.componentProvider.nodeIndex;var view=Services.createRootView(injector,projectableNodes||[],rootSelectorOrNode,viewDef,ngModule,EMPTY_CONTEXT);var component=asProviderData(view,componentNodeIndex).instance;if(rootSelectorOrNode){view.renderer.setAttribute(asElementData(view,0).renderElement,'ng-version',VERSION.full);}return new ComponentRef_(view,new ViewRef_(view),component);};return ComponentFactory_;}(ComponentFactory);var ComponentRef_=/** @class */function(_super){(0,_tslib.__extends)(ComponentRef_,_super);function ComponentRef_(_view,_viewRef,_component){var _this=_super.call(this)||this;_this._view=_view;_this._viewRef=_viewRef;_this._component=_component;_this._elDef=_this._view.def.nodes[0];_this.hostView=_viewRef;_this.changeDetectorRef=_viewRef;_this.instance=_component;return _this;}Object.defineProperty(ComponentRef_.prototype,"location",{get:function get(){return new ElementRef(asElementData(this._view,this._elDef.nodeIndex).renderElement);},enumerable:true,configurable:true});Object.defineProperty(ComponentRef_.prototype,"injector",{get:function get(){return new Injector_(this._view,this._elDef);},enumerable:true,configurable:true});Object.defineProperty(ComponentRef_.prototype,"componentType",{get:function get(){return this._component.constructor;},enumerable:true,configurable:true});ComponentRef_.prototype.destroy=function(){this._viewRef.destroy();};ComponentRef_.prototype.onDestroy=function(callback){this._viewRef.onDestroy(callback);};return ComponentRef_;}(ComponentRef);function createViewContainerData(view,elDef,elData){return new ViewContainerRef_(view,elDef,elData);}var ViewContainerRef_=/** @class */function(){function ViewContainerRef_(_view,_elDef,_data){this._view=_view;this._elDef=_elDef;this._data=_data;/**
           * @internal
           */this._embeddedViews=[];}Object.defineProperty(ViewContainerRef_.prototype,"element",{get:function get(){return new ElementRef(this._data.renderElement);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"injector",{get:function get(){return new Injector_(this._view,this._elDef);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"parentInjector",{get:function get(){var view=this._view;var elDef=this._elDef.parent;while(!elDef&&view){elDef=viewParentEl(view);view=view.parent;}return view?new Injector_(view,elDef):new Injector_(this._view,null);},enumerable:true,configurable:true});ViewContainerRef_.prototype.clear=function(){var len=this._embeddedViews.length;for(var i=len-1;i>=0;i--){var view=detachEmbeddedView(this._data,i);Services.destroyView(view);}};ViewContainerRef_.prototype.get=function(index){var view=this._embeddedViews[index];if(view){var ref=new ViewRef_(view);ref.attachToViewContainerRef(this);return ref;}return null;};Object.defineProperty(ViewContainerRef_.prototype,"length",{get:function get(){return this._embeddedViews.length;},enumerable:true,configurable:true});ViewContainerRef_.prototype.createEmbeddedView=function(templateRef,context,index){var viewRef=templateRef.createEmbeddedView(context||{});this.insert(viewRef,index);return viewRef;};ViewContainerRef_.prototype.createComponent=function(componentFactory,index,injector,projectableNodes,ngModuleRef){var contextInjector=injector||this.parentInjector;if(!ngModuleRef&&!(componentFactory instanceof ComponentFactoryBoundToModule)){ngModuleRef=contextInjector.get(NgModuleRef);}var componentRef=componentFactory.create(contextInjector,projectableNodes,undefined,ngModuleRef);this.insert(componentRef.hostView,index);return componentRef;};ViewContainerRef_.prototype.insert=function(viewRef,index){if(viewRef.destroyed){throw new Error('Cannot insert a destroyed View in a ViewContainer!');}var viewRef_=viewRef;var viewData=viewRef_._view;attachEmbeddedView(this._view,this._data,index,viewData);viewRef_.attachToViewContainerRef(this);return viewRef;};ViewContainerRef_.prototype.move=function(viewRef,currentIndex){if(viewRef.destroyed){throw new Error('Cannot move a destroyed View in a ViewContainer!');}var previousIndex=this._embeddedViews.indexOf(viewRef._view);moveEmbeddedView(this._data,previousIndex,currentIndex);return viewRef;};ViewContainerRef_.prototype.indexOf=function(viewRef){return this._embeddedViews.indexOf(viewRef._view);};ViewContainerRef_.prototype.remove=function(index){var viewData=detachEmbeddedView(this._data,index);if(viewData){Services.destroyView(viewData);}};ViewContainerRef_.prototype.detach=function(index){var view=detachEmbeddedView(this._data,index);return view?new ViewRef_(view):null;};return ViewContainerRef_;}();function createChangeDetectorRef(view){return new ViewRef_(view);}var ViewRef_=/** @class */function(){function ViewRef_(_view){this._view=_view;this._viewContainerRef=null;this._appRef=null;}Object.defineProperty(ViewRef_.prototype,"rootNodes",{get:function get(){return rootRenderNodes(this._view);},enumerable:true,configurable:true});Object.defineProperty(ViewRef_.prototype,"context",{get:function get(){return this._view.context;},enumerable:true,configurable:true});Object.defineProperty(ViewRef_.prototype,"destroyed",{get:function get(){return(this._view.state&128/* Destroyed */)!==0;},enumerable:true,configurable:true});ViewRef_.prototype.markForCheck=function(){markParentViewsForCheck(this._view);};ViewRef_.prototype.detach=function(){this._view.state&=~4/* Attached */;};ViewRef_.prototype.detectChanges=function(){var fs=this._view.root.rendererFactory;if(fs.begin){fs.begin();}try{Services.checkAndUpdateView(this._view);}finally{if(fs.end){fs.end();}}};ViewRef_.prototype.checkNoChanges=function(){Services.checkNoChangesView(this._view);};ViewRef_.prototype.reattach=function(){this._view.state|=4/* Attached */;};ViewRef_.prototype.onDestroy=function(callback){if(!this._view.disposables){this._view.disposables=[];}this._view.disposables.push(callback);};ViewRef_.prototype.destroy=function(){if(this._appRef){this._appRef.detachView(this);}else if(this._viewContainerRef){this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));}Services.destroyView(this._view);};ViewRef_.prototype.detachFromAppRef=function(){this._appRef=null;renderDetachView(this._view);Services.dirtyParentQueries(this._view);};ViewRef_.prototype.attachToAppRef=function(appRef){if(this._viewContainerRef){throw new Error('This view is already attached to a ViewContainer!');}this._appRef=appRef;};ViewRef_.prototype.attachToViewContainerRef=function(vcRef){if(this._appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._viewContainerRef=vcRef;};return ViewRef_;}();function createTemplateData(view,def){return new TemplateRef_(view,def);}var TemplateRef_=/** @class */function(_super){(0,_tslib.__extends)(TemplateRef_,_super);function TemplateRef_(_parentView,_def){var _this=_super.call(this)||this;_this._parentView=_parentView;_this._def=_def;return _this;}TemplateRef_.prototype.createEmbeddedView=function(context){return new ViewRef_(Services.createEmbeddedView(this._parentView,this._def,this._def.element.template,context));};Object.defineProperty(TemplateRef_.prototype,"elementRef",{get:function get(){return new ElementRef(asElementData(this._parentView,this._def.nodeIndex).renderElement);},enumerable:true,configurable:true});return TemplateRef_;}(TemplateRef);function createInjector$1(view,elDef){return new Injector_(view,elDef);}var Injector_=/** @class */function(){function Injector_(view,elDef){this.view=view;this.elDef=elDef;}Injector_.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}var allowPrivateServices=this.elDef?(this.elDef.flags&33554432/* ComponentView */)!==0:false;return Services.resolveDep(this.view,this.elDef,allowPrivateServices,{flags:0/* None */,token:token,tokenKey:tokenKey(token)},notFoundValue);};return Injector_;}();function nodeValue(view,index){var def=view.def.nodes[index];if(def.flags&1/* TypeElement */){var elData=asElementData(view,def.nodeIndex);return def.element.template?elData.template:elData.renderElement;}else if(def.flags&2/* TypeText */){return asTextData(view,def.nodeIndex).renderText;}else if(def.flags&(20224/* CatProvider */|16/* TypePipe */)){return asProviderData(view,def.nodeIndex).instance;}throw new Error("Illegal state: read nodeValue for node index "+index);}function createRendererV1(view){return new RendererAdapter(view.renderer);}var RendererAdapter=/** @class */function(){function RendererAdapter(delegate){this.delegate=delegate;}RendererAdapter.prototype.selectRootElement=function(selectorOrNode){return this.delegate.selectRootElement(selectorOrNode);};RendererAdapter.prototype.createElement=function(parent,namespaceAndName){var _a=(0,_tslib.__read)(splitNamespace(namespaceAndName),2),ns=_a[0],name=_a[1];var el=this.delegate.createElement(name,ns);if(parent){this.delegate.appendChild(parent,el);}return el;};RendererAdapter.prototype.createViewRoot=function(hostElement){return hostElement;};RendererAdapter.prototype.createTemplateAnchor=function(parentElement){var comment=this.delegate.createComment('');if(parentElement){this.delegate.appendChild(parentElement,comment);}return comment;};RendererAdapter.prototype.createText=function(parentElement,value){var node=this.delegate.createText(value);if(parentElement){this.delegate.appendChild(parentElement,node);}return node;};RendererAdapter.prototype.projectNodes=function(parentElement,nodes){for(var i=0;i<nodes.length;i++){this.delegate.appendChild(parentElement,nodes[i]);}};RendererAdapter.prototype.attachViewAfter=function(node,viewRootNodes){var parentElement=this.delegate.parentNode(node);var nextSibling=this.delegate.nextSibling(node);for(var i=0;i<viewRootNodes.length;i++){this.delegate.insertBefore(parentElement,viewRootNodes[i],nextSibling);}};RendererAdapter.prototype.detachView=function(viewRootNodes){for(var i=0;i<viewRootNodes.length;i++){var node=viewRootNodes[i];var parentElement=this.delegate.parentNode(node);this.delegate.removeChild(parentElement,node);}};RendererAdapter.prototype.destroyView=function(hostElement,viewAllNodes){for(var i=0;i<viewAllNodes.length;i++){this.delegate.destroyNode(viewAllNodes[i]);}};RendererAdapter.prototype.listen=function(renderElement,name,callback){return this.delegate.listen(renderElement,name,callback);};RendererAdapter.prototype.listenGlobal=function(target,name,callback){return this.delegate.listen(target,name,callback);};RendererAdapter.prototype.setElementProperty=function(renderElement,propertyName,propertyValue){this.delegate.setProperty(renderElement,propertyName,propertyValue);};RendererAdapter.prototype.setElementAttribute=function(renderElement,namespaceAndName,attributeValue){var _a=(0,_tslib.__read)(splitNamespace(namespaceAndName),2),ns=_a[0],name=_a[1];if(attributeValue!=null){this.delegate.setAttribute(renderElement,name,attributeValue,ns);}else{this.delegate.removeAttribute(renderElement,name,ns);}};RendererAdapter.prototype.setBindingDebugInfo=function(renderElement,propertyName,propertyValue){};RendererAdapter.prototype.setElementClass=function(renderElement,className,isAdd){if(isAdd){this.delegate.addClass(renderElement,className);}else{this.delegate.removeClass(renderElement,className);}};RendererAdapter.prototype.setElementStyle=function(renderElement,styleName,styleValue){if(styleValue!=null){this.delegate.setStyle(renderElement,styleName,styleValue);}else{this.delegate.removeStyle(renderElement,styleName);}};RendererAdapter.prototype.invokeElementMethod=function(renderElement,methodName,args){renderElement[methodName].apply(renderElement,args);};RendererAdapter.prototype.setText=function(renderNode$$1,text){this.delegate.setValue(renderNode$$1,text);};RendererAdapter.prototype.animate=function(){throw new Error('Renderer.animate is no longer supported!');};return RendererAdapter;}();function createNgModuleRef(moduleType,parent,bootstrapComponents,def){return new NgModuleRef_(moduleType,parent,bootstrapComponents,def);}var NgModuleRef_=/** @class */function(){function NgModuleRef_(_moduleType,_parent,_bootstrapComponents,_def){this._moduleType=_moduleType;this._parent=_parent;this._bootstrapComponents=_bootstrapComponents;this._def=_def;this._destroyListeners=[];this._destroyed=false;this.injector=this;initNgModule(this);}NgModuleRef_.prototype.get=function(token,notFoundValue,injectFlags){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}if(injectFlags===void 0){injectFlags=0/* Default */;}var flags=0;if(injectFlags&4/* SkipSelf */){flags|=1/* SkipSelf */;}else if(injectFlags&2/* Self */){flags|=4/* Self */;}return resolveNgModuleDep(this,{token:token,tokenKey:tokenKey(token),flags:flags},notFoundValue);};Object.defineProperty(NgModuleRef_.prototype,"instance",{get:function get(){return this.get(this._moduleType);},enumerable:true,configurable:true});Object.defineProperty(NgModuleRef_.prototype,"componentFactoryResolver",{get:function get(){return this.get(ComponentFactoryResolver);},enumerable:true,configurable:true});NgModuleRef_.prototype.destroy=function(){if(this._destroyed){throw new Error("The ng module "+stringify(this.instance.constructor)+" has already been destroyed.");}this._destroyed=true;callNgModuleLifecycle(this,131072/* OnDestroy */);this._destroyListeners.forEach(function(listener){return listener();});};NgModuleRef_.prototype.onDestroy=function(callback){this._destroyListeners.push(callback);};return NgModuleRef_;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var RendererV1TokenKey=tokenKey(Renderer);var Renderer2TokenKey=tokenKey(Renderer2);var ElementRefTokenKey=tokenKey(ElementRef);var ViewContainerRefTokenKey=tokenKey(ViewContainerRef);var TemplateRefTokenKey=tokenKey(TemplateRef);var ChangeDetectorRefTokenKey=tokenKey(ChangeDetectorRef);var InjectorRefTokenKey=tokenKey(Injector);var INJECTORRefTokenKey=tokenKey(INJECTOR);function directiveDef(checkIndex,flags,matchedQueries,childCount,ctor,deps,props,outputs){var bindings=[];if(props){for(var prop in props){var _a=(0,_tslib.__read)(props[prop],2),bindingIndex=_a[0],nonMinifiedName=_a[1];bindings[bindingIndex]={flags:8/* TypeProperty */,name:prop,nonMinifiedName:nonMinifiedName,ns:null,securityContext:null,suffix:null};}}var outputDefs=[];if(outputs){for(var propName in outputs){outputDefs.push({type:1/* DirectiveOutput */,propName:propName,target:null,eventName:outputs[propName]});}}flags|=16384/* TypeDirective */;return _def(checkIndex,flags,matchedQueries,childCount,ctor,ctor,deps,bindings,outputDefs);}function pipeDef(flags,ctor,deps){flags|=16/* TypePipe */;return _def(-1,flags,null,0,ctor,ctor,deps);}function providerDef(flags,matchedQueries,token,value,deps){return _def(-1,flags,matchedQueries,0,token,value,deps);}function _def(checkIndex,flags,matchedQueriesDsl,childCount,token,value,deps,bindings,outputs){var _a=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_a.matchedQueries,references=_a.references,matchedQueryIds=_a.matchedQueryIds;if(!outputs){outputs=[];}if(!bindings){bindings=[];}// Need to resolve forwardRefs as e.g. for `useValue` we
// lowered the expression and then stopped evaluating it,
// i.e. also didn't unwrap it.
value=resolveForwardRef(value);var depDefs=splitDepsDsl(deps,stringify(token));return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:-1,childCount:childCount,bindings:bindings,bindingFlags:calcBindingFlags(bindings),outputs:outputs,element:null,provider:{token:token,value:value,deps:depDefs},text:null,query:null,ngContent:null};}function createProviderInstance(view,def){return _createProviderInstance(view,def);}function createPipeInstance(view,def){// deps are looked up from component.
var compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}// pipes can see the private services of the component
var allowPrivateServices=true;// pipes are always eager and classes!
return createClass(compView.parent,viewParentEl(compView),allowPrivateServices,def.provider.value,def.provider.deps);}function createDirectiveInstance(view,def){// components can see other private services, other directives can't.
var allowPrivateServices=(def.flags&32768/* Component */)>0;// directives are always eager and classes!
var instance=createClass(view,def.parent,allowPrivateServices,def.provider.value,def.provider.deps);if(def.outputs.length){for(var i=0;i<def.outputs.length;i++){var output=def.outputs[i];var subscription=instance[output.propName].subscribe(eventHandlerClosure(view,def.parent.nodeIndex,output.eventName));view.disposables[def.outputIndex+i]=subscription.unsubscribe.bind(subscription);}}return instance;}function eventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}function checkAndUpdateDirectiveInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var providerData=asProviderData(view,def.nodeIndex);var directive=providerData.instance;var changed=false;var changes=undefined;var bindLen=def.bindings.length;if(bindLen>0&&checkBinding(view,def,0,v0)){changed=true;changes=updateProp(view,providerData,def,0,v0,changes);}if(bindLen>1&&checkBinding(view,def,1,v1)){changed=true;changes=updateProp(view,providerData,def,1,v1,changes);}if(bindLen>2&&checkBinding(view,def,2,v2)){changed=true;changes=updateProp(view,providerData,def,2,v2,changes);}if(bindLen>3&&checkBinding(view,def,3,v3)){changed=true;changes=updateProp(view,providerData,def,3,v3,changes);}if(bindLen>4&&checkBinding(view,def,4,v4)){changed=true;changes=updateProp(view,providerData,def,4,v4,changes);}if(bindLen>5&&checkBinding(view,def,5,v5)){changed=true;changes=updateProp(view,providerData,def,5,v5,changes);}if(bindLen>6&&checkBinding(view,def,6,v6)){changed=true;changes=updateProp(view,providerData,def,6,v6,changes);}if(bindLen>7&&checkBinding(view,def,7,v7)){changed=true;changes=updateProp(view,providerData,def,7,v7,changes);}if(bindLen>8&&checkBinding(view,def,8,v8)){changed=true;changes=updateProp(view,providerData,def,8,v8,changes);}if(bindLen>9&&checkBinding(view,def,9,v9)){changed=true;changes=updateProp(view,providerData,def,9,v9,changes);}if(changes){directive.ngOnChanges(changes);}if(def.flags&65536/* OnInit */&&shouldCallLifecycleInitHook(view,256/* InitState_CallingOnInit */,def.nodeIndex)){directive.ngOnInit();}if(def.flags&262144/* DoCheck */){directive.ngDoCheck();}return changed;}function checkAndUpdateDirectiveDynamic(view,def,values){var providerData=asProviderData(view,def.nodeIndex);var directive=providerData.instance;var changed=false;var changes=undefined;for(var i=0;i<values.length;i++){if(checkBinding(view,def,i,values[i])){changed=true;changes=updateProp(view,providerData,def,i,values[i],changes);}}if(changes){directive.ngOnChanges(changes);}if(def.flags&65536/* OnInit */&&shouldCallLifecycleInitHook(view,256/* InitState_CallingOnInit */,def.nodeIndex)){directive.ngOnInit();}if(def.flags&262144/* DoCheck */){directive.ngDoCheck();}return changed;}function _createProviderInstance(view,def){// private services can see other private services
var allowPrivateServices=(def.flags&8192/* PrivateProvider */)>0;var providerDef=def.provider;switch(def.flags&201347067/* Types */){case 512/* TypeClassProvider */:return createClass(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);case 1024/* TypeFactoryProvider */:return callFactory(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);case 2048/* TypeUseExistingProvider */:return resolveDep(view,def.parent,allowPrivateServices,providerDef.deps[0]);case 256/* TypeValueProvider */:return providerDef.value;}}function createClass(view,elDef,allowPrivateServices,ctor,deps){var len=deps.length;switch(len){case 0:return new ctor();case 1:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]));case 2:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));case 3:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));default:var depValues=new Array(len);for(var i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}return new(ctor.bind.apply(ctor,(0,_tslib.__spread)([void 0],depValues)))();}}function callFactory(view,elDef,allowPrivateServices,factory,deps){var len=deps.length;switch(len){case 0:return factory();case 1:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]));case 2:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));case 3:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));default:var depValues=Array(len);for(var i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}return factory.apply(void 0,(0,_tslib.__spread)(depValues));}}// This default value is when checking the hierarchy for a token.
//
// It means both:
// - the token is not provided by the current injector,
// - only the element injectors should be checked (ie do not check module injectors
//
//          mod1
//         /
//       el1   mod2
//         \  /
//         el2
//
// When requesting el2.injector.get(token), we should check in the following order and return the
// first found value:
// - el2.injector.get(token, default)
// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module
// - mod2.injector.get(token, default)
var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR={};exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR=NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;function resolveDep(view,elDef,allowPrivateServices,depDef,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}if(depDef.flags&8/* Value */){return depDef.token;}var startView=view;if(depDef.flags&2/* Optional */){notFoundValue=null;}var tokenKey$$1=depDef.tokenKey;if(tokenKey$$1===ChangeDetectorRefTokenKey){// directives on the same element as a component should be able to control the change detector
// of that component as well.
allowPrivateServices=!!(elDef&&elDef.element.componentView);}if(elDef&&depDef.flags&1/* SkipSelf */){allowPrivateServices=false;elDef=elDef.parent;}var searchView=view;while(searchView){if(elDef){switch(tokenKey$$1){case RendererV1TokenKey:{var compView=findCompView(searchView,elDef,allowPrivateServices);return createRendererV1(compView);}case Renderer2TokenKey:{var compView=findCompView(searchView,elDef,allowPrivateServices);return compView.renderer;}case ElementRefTokenKey:return new ElementRef(asElementData(searchView,elDef.nodeIndex).renderElement);case ViewContainerRefTokenKey:return asElementData(searchView,elDef.nodeIndex).viewContainer;case TemplateRefTokenKey:{if(elDef.element.template){return asElementData(searchView,elDef.nodeIndex).template;}break;}case ChangeDetectorRefTokenKey:{var cdView=findCompView(searchView,elDef,allowPrivateServices);return createChangeDetectorRef(cdView);}case InjectorRefTokenKey:case INJECTORRefTokenKey:return createInjector$1(searchView,elDef);default:var providerDef_1=(allowPrivateServices?elDef.element.allProviders:elDef.element.publicProviders)[tokenKey$$1];if(providerDef_1){var providerData=asProviderData(searchView,providerDef_1.nodeIndex);if(!providerData){providerData={instance:_createProviderInstance(searchView,providerDef_1)};searchView.nodes[providerDef_1.nodeIndex]=providerData;}return providerData.instance;}}}allowPrivateServices=isComponentView(searchView);elDef=viewParentEl(searchView);searchView=searchView.parent;if(depDef.flags&4/* Self */){searchView=null;}}var value=startView.root.injector.get(depDef.token,NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);if(value!==NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR||notFoundValue===NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR){// Return the value from the root element injector when
// - it provides it
//   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
// - the module injector should not be checked
//   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
return value;}return startView.root.ngModule.injector.get(depDef.token,notFoundValue);}function findCompView(view,elDef,allowPrivateServices){var compView;if(allowPrivateServices){compView=asElementData(view,elDef.nodeIndex).componentView;}else{compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}}return compView;}function updateProp(view,providerData,def,bindingIdx,value,changes){if(def.flags&32768/* Component */){var compView=asElementData(view,def.parent.nodeIndex).componentView;if(compView.def.flags&2/* OnPush */){compView.state|=8/* ChecksEnabled */;}}var binding=def.bindings[bindingIdx];var propName=binding.name;// Note: This is still safe with Closure Compiler as
// the user passed in the property name as an object has to `providerDef`,
// so Closure Compiler will have renamed the property correctly already.
providerData.instance[propName]=value;if(def.flags&524288/* OnChanges */){changes=changes||{};var oldValue=WrappedValue.unwrap(view.oldValues[def.bindingIndex+bindingIdx]);var binding_1=def.bindings[bindingIdx];changes[binding_1.nonMinifiedName]=new SimpleChange(oldValue,value,(view.state&2/* FirstCheck */)!==0);}view.oldValues[def.bindingIndex+bindingIdx]=value;return changes;}// This function calls the ngAfterContentCheck, ngAfterContentInit,
// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node
// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are
// called during a pre-order traversal of the view tree (that is calling the
// parent hooks before the child hooks) these events are sent in using a
// post-order traversal of the tree (children before parents). This changes the
// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the
// expected nodeIndex which a ngOnInit should be called. When sending
// ngAfterContentInit and ngAfterViewInit it is the expected count of
// ngAfterContentInit or ngAfterViewInit methods that have been called. This
// ensure that despite being called recursively or after picking up after an
// exception, the ngAfterContentInit or ngAfterViewInit will be called on the
// correct nodes. Consider for example, the following (where E is an element
// and D is a directive)
//  Tree:       pre-order index  post-order index
//    E1        0                6
//      E2      1                1
//       D3     2                0
//      E4      3                5
//       E5     4                4
//        E6    5                2
//        E7    6                3
// As can be seen, the post-order index has an unclear relationship to the
// pre-order index (postOrderIndex === preOrderIndex - parentCount +
// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit
// are stable (will be the same for the same view regardless of exceptions or
// recursion) we just need to count them which will roughly correspond to the
// post-order index (it skips elements and directives that do not have
// lifecycle hooks).
//
// For example, if an exception is raised in the E6.onAfterViewInit() the
// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to
// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will
// not have their ngAfterViewInit() called but, starting with E7, the rest of
// the view will begin getting ngAfterViewInit() called until a check and
// pass is complete.
//
// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()
// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected
// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.
// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.
// When the recursion returns the initIndex will be 7 so E1 is skipped as it
// has already been called in the recursively called checkAnUpdateView().
function callLifecycleHooksChildrenFirst(view,lifecycles){if(!(view.def.nodeFlags&lifecycles)){return;}var nodes=view.def.nodes;var initIndex=0;for(var i=0;i<nodes.length;i++){var nodeDef=nodes[i];var parent_1=nodeDef.parent;if(!parent_1&&nodeDef.flags&lifecycles){// matching root node (e.g. a pipe)
callProviderLifecycles(view,i,nodeDef.flags&lifecycles,initIndex++);}if((nodeDef.childFlags&lifecycles)===0){// no child matches one of the lifecycles
i+=nodeDef.childCount;}while(parent_1&&parent_1.flags&1/* TypeElement */&&i===parent_1.nodeIndex+parent_1.childCount){// last child of an element
if(parent_1.directChildFlags&lifecycles){initIndex=callElementProvidersLifecycles(view,parent_1,lifecycles,initIndex);}parent_1=parent_1.parent;}}}function callElementProvidersLifecycles(view,elDef,lifecycles,initIndex){for(var i=elDef.nodeIndex+1;i<=elDef.nodeIndex+elDef.childCount;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&lifecycles){callProviderLifecycles(view,i,nodeDef.flags&lifecycles,initIndex++);}// only visit direct children
i+=nodeDef.childCount;}return initIndex;}function callProviderLifecycles(view,index,lifecycles,initIndex){var providerData=asProviderData(view,index);if(!providerData){return;}var provider=providerData.instance;if(!provider){return;}Services.setCurrentNode(view,index);if(lifecycles&1048576/* AfterContentInit */&&shouldCallLifecycleInitHook(view,512/* InitState_CallingAfterContentInit */,initIndex)){provider.ngAfterContentInit();}if(lifecycles&2097152/* AfterContentChecked */){provider.ngAfterContentChecked();}if(lifecycles&4194304/* AfterViewInit */&&shouldCallLifecycleInitHook(view,768/* InitState_CallingAfterViewInit */,initIndex)){provider.ngAfterViewInit();}if(lifecycles&8388608/* AfterViewChecked */){provider.ngAfterViewChecked();}if(lifecycles&131072/* OnDestroy */){provider.ngOnDestroy();}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function queryDef(flags,id,bindings){var bindingDefs=[];for(var propName in bindings){var bindingType=bindings[propName];bindingDefs.push({propName:propName,bindingType:bindingType});}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
// TODO(vicb): check
checkIndex:-1,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,ngContentIndex:-1,matchedQueries:{},matchedQueryIds:0,references:{},childCount:0,bindings:[],bindingFlags:0,outputs:[],element:null,provider:null,text:null,query:{id:id,filterId:filterQueryId(id),bindings:bindingDefs},ngContent:null};}function createQuery(){return new QueryList();}function dirtyParentQueries(view){var queryIds=view.def.nodeMatchedQueries;while(view.parent&&isEmbeddedView(view)){var tplDef=view.parentNodeDef;view=view.parent;// content queries
var end=tplDef.nodeIndex+tplDef.childCount;for(var i=0;i<=end;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&67108864/* TypeContentQuery */&&nodeDef.flags&536870912/* DynamicQuery */&&(nodeDef.query.filterId&queryIds)===nodeDef.query.filterId){asQueryList(view,i).setDirty();}if(nodeDef.flags&1/* TypeElement */&&i+nodeDef.childCount<tplDef.nodeIndex||!(nodeDef.childFlags&67108864/* TypeContentQuery */)||!(nodeDef.childFlags&536870912/* DynamicQuery */)){// skip elements that don't contain the template element or no query.
i+=nodeDef.childCount;}}}// view queries
if(view.def.nodeFlags&134217728/* TypeViewQuery */){for(var i=0;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&134217728/* TypeViewQuery */&&nodeDef.flags&536870912/* DynamicQuery */){asQueryList(view,i).setDirty();}// only visit the root nodes
i+=nodeDef.childCount;}}}function checkAndUpdateQuery(view,nodeDef){var queryList=asQueryList(view,nodeDef.nodeIndex);if(!queryList.dirty){return;}var directiveInstance;var newValues=undefined;if(nodeDef.flags&67108864/* TypeContentQuery */){var elementDef=nodeDef.parent.parent;newValues=calcQueryValues(view,elementDef.nodeIndex,elementDef.nodeIndex+elementDef.childCount,nodeDef.query,[]);directiveInstance=asProviderData(view,nodeDef.parent.nodeIndex).instance;}else if(nodeDef.flags&134217728/* TypeViewQuery */){newValues=calcQueryValues(view,0,view.def.nodes.length-1,nodeDef.query,[]);directiveInstance=view.component;}queryList.reset(newValues);var bindings=nodeDef.query.bindings;var notify=false;for(var i=0;i<bindings.length;i++){var binding=bindings[i];var boundValue=void 0;switch(binding.bindingType){case 0/* First */:boundValue=queryList.first;break;case 1/* All */:boundValue=queryList;notify=true;break;}directiveInstance[binding.propName]=boundValue;}if(notify){queryList.notifyOnChanges();}}function calcQueryValues(view,startIndex,endIndex,queryDef,values){for(var i=startIndex;i<=endIndex;i++){var nodeDef=view.def.nodes[i];var valueType=nodeDef.matchedQueries[queryDef.id];if(valueType!=null){values.push(getQueryValue(view,nodeDef,valueType));}if(nodeDef.flags&1/* TypeElement */&&nodeDef.element.template&&(nodeDef.element.template.nodeMatchedQueries&queryDef.filterId)===queryDef.filterId){var elementData=asElementData(view,i);// check embedded views that were attached at the place of their template,
// but process child nodes first if some match the query (see issue #16568)
if((nodeDef.childMatchedQueries&queryDef.filterId)===queryDef.filterId){calcQueryValues(view,i+1,i+nodeDef.childCount,queryDef,values);i+=nodeDef.childCount;}if(nodeDef.flags&16777216/* EmbeddedViews */){var embeddedViews=elementData.viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){var embeddedView=embeddedViews[k];var dvc=declaredViewContainer(embeddedView);if(dvc&&dvc===elementData){calcQueryValues(embeddedView,0,embeddedView.def.nodes.length-1,queryDef,values);}}}var projectedViews=elementData.template._projectedViews;if(projectedViews){for(var k=0;k<projectedViews.length;k++){var projectedView=projectedViews[k];calcQueryValues(projectedView,0,projectedView.def.nodes.length-1,queryDef,values);}}}if((nodeDef.childMatchedQueries&queryDef.filterId)!==queryDef.filterId){// if no child matches the query, skip the children.
i+=nodeDef.childCount;}}return values;}function getQueryValue(view,nodeDef,queryValueType){if(queryValueType!=null){// a match
switch(queryValueType){case 1/* RenderElement */:return asElementData(view,nodeDef.nodeIndex).renderElement;case 0/* ElementRef */:return new ElementRef(asElementData(view,nodeDef.nodeIndex).renderElement);case 2/* TemplateRef */:return asElementData(view,nodeDef.nodeIndex).template;case 3/* ViewContainerRef */:return asElementData(view,nodeDef.nodeIndex).viewContainer;case 4/* Provider */:return asProviderData(view,nodeDef.nodeIndex).instance;}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function ngContentDef(ngContentIndex,index){return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:-1,flags:8/* TypeNgContent */,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:[],bindingFlags:0,outputs:[],element:null,provider:null,text:null,query:null,ngContent:{index:index}};}function appendNgContent(view,renderHost,def){var parentEl=getParentRenderElement(view,renderHost,def);if(!parentEl){// Nothing to do if there is no parent element.
return;}var ngContentIndex=def.ngContent.index;visitProjectedRenderNodes(view,ngContentIndex,1/* AppendChild */,parentEl,null,undefined);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function purePipeDef(checkIndex,argCount){// argCount + 1 to include the pipe as first arg
return _pureExpressionDef(128/* TypePurePipe */,checkIndex,new Array(argCount+1));}function pureArrayDef(checkIndex,argCount){return _pureExpressionDef(32/* TypePureArray */,checkIndex,new Array(argCount));}function pureObjectDef(checkIndex,propToIndex){var keys=Object.keys(propToIndex);var nbKeys=keys.length;var propertyNames=new Array(nbKeys);for(var i=0;i<nbKeys;i++){var key=keys[i];var index=propToIndex[key];propertyNames[index]=key;}return _pureExpressionDef(64/* TypePureObject */,checkIndex,propertyNames);}function _pureExpressionDef(flags,checkIndex,propertyNames){var bindings=new Array(propertyNames.length);for(var i=0;i<propertyNames.length;i++){var prop=propertyNames[i];bindings[i]={flags:8/* TypeProperty */,name:prop,ns:null,nonMinifiedName:prop,securityContext:null,suffix:null};}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:-1,childCount:0,bindings:bindings,bindingFlags:calcBindingFlags(bindings),outputs:[],element:null,provider:null,text:null,query:null,ngContent:null};}function createPureExpression(view,def){return{value:undefined};}function checkAndUpdatePureExpressionInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindings=def.bindings;var changed=false;var bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var data=asPureExpressionData(view,def.nodeIndex);var value=void 0;switch(def.flags&201347067/* Types */){case 32/* TypePureArray */:value=new Array(bindings.length);if(bindLen>0)value[0]=v0;if(bindLen>1)value[1]=v1;if(bindLen>2)value[2]=v2;if(bindLen>3)value[3]=v3;if(bindLen>4)value[4]=v4;if(bindLen>5)value[5]=v5;if(bindLen>6)value[6]=v6;if(bindLen>7)value[7]=v7;if(bindLen>8)value[8]=v8;if(bindLen>9)value[9]=v9;break;case 64/* TypePureObject */:value={};if(bindLen>0)value[bindings[0].name]=v0;if(bindLen>1)value[bindings[1].name]=v1;if(bindLen>2)value[bindings[2].name]=v2;if(bindLen>3)value[bindings[3].name]=v3;if(bindLen>4)value[bindings[4].name]=v4;if(bindLen>5)value[bindings[5].name]=v5;if(bindLen>6)value[bindings[6].name]=v6;if(bindLen>7)value[bindings[7].name]=v7;if(bindLen>8)value[bindings[8].name]=v8;if(bindLen>9)value[bindings[9].name]=v9;break;case 128/* TypePurePipe */:var pipe=v0;switch(bindLen){case 1:value=pipe.transform(v0);break;case 2:value=pipe.transform(v1);break;case 3:value=pipe.transform(v1,v2);break;case 4:value=pipe.transform(v1,v2,v3);break;case 5:value=pipe.transform(v1,v2,v3,v4);break;case 6:value=pipe.transform(v1,v2,v3,v4,v5);break;case 7:value=pipe.transform(v1,v2,v3,v4,v5,v6);break;case 8:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7);break;case 9:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8);break;case 10:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8,v9);break;}break;}data.value=value;}return changed;}function checkAndUpdatePureExpressionDynamic(view,def,values){var bindings=def.bindings;var changed=false;for(var i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var data=asPureExpressionData(view,def.nodeIndex);var value=void 0;switch(def.flags&201347067/* Types */){case 32/* TypePureArray */:value=values;break;case 64/* TypePureObject */:value={};for(var i=0;i<values.length;i++){value[bindings[i].name]=values[i];}break;case 128/* TypePurePipe */:var pipe=values[0];var params=values.slice(1);value=pipe.transform.apply(pipe,(0,_tslib.__spread)(params));break;}data.value=value;}return changed;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function textDef(checkIndex,ngContentIndex,staticText){var bindings=new Array(staticText.length-1);for(var i=1;i<staticText.length;i++){bindings[i-1]={flags:8/* TypeProperty */,name:null,ns:null,nonMinifiedName:null,securityContext:null,suffix:staticText[i]};}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:2/* TypeText */,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:bindings,bindingFlags:8/* TypeProperty */,outputs:[],element:null,provider:null,text:{prefix:staticText[0]},query:null,ngContent:null};}function createText(view,renderHost,def){var renderNode$$1;var renderer=view.renderer;renderNode$$1=renderer.createText(def.text.prefix);var parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,renderNode$$1);}return{renderText:renderNode$$1};}function checkAndUpdateTextInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var changed=false;var bindings=def.bindings;var bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var value=def.text.prefix;if(bindLen>0)value+=_addInterpolationPart(v0,bindings[0]);if(bindLen>1)value+=_addInterpolationPart(v1,bindings[1]);if(bindLen>2)value+=_addInterpolationPart(v2,bindings[2]);if(bindLen>3)value+=_addInterpolationPart(v3,bindings[3]);if(bindLen>4)value+=_addInterpolationPart(v4,bindings[4]);if(bindLen>5)value+=_addInterpolationPart(v5,bindings[5]);if(bindLen>6)value+=_addInterpolationPart(v6,bindings[6]);if(bindLen>7)value+=_addInterpolationPart(v7,bindings[7]);if(bindLen>8)value+=_addInterpolationPart(v8,bindings[8]);if(bindLen>9)value+=_addInterpolationPart(v9,bindings[9]);var renderNode$$1=asTextData(view,def.nodeIndex).renderText;view.renderer.setValue(renderNode$$1,value);}return changed;}function checkAndUpdateTextDynamic(view,def,values){var bindings=def.bindings;var changed=false;for(var i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var value='';for(var i=0;i<values.length;i++){value=value+_addInterpolationPart(values[i],bindings[i]);}value=def.text.prefix+value;var renderNode$$1=asTextData(view,def.nodeIndex).renderText;view.renderer.setValue(renderNode$$1,value);}return changed;}function _addInterpolationPart(value,binding){var valueStr=value!=null?value.toString():'';return valueStr+binding.suffix;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function viewDef(flags,nodes,updateDirectives,updateRenderer){// clone nodes and set auto calculated values
var viewBindingCount=0;var viewDisposableCount=0;var viewNodeFlags=0;var viewRootNodeFlags=0;var viewMatchedQueries=0;var currentParent=null;var currentRenderParent=null;var currentElementHasPublicProviders=false;var currentElementHasPrivateProviders=false;var lastRenderRootNode=null;for(var i=0;i<nodes.length;i++){var node=nodes[i];node.nodeIndex=i;node.parent=currentParent;node.bindingIndex=viewBindingCount;node.outputIndex=viewDisposableCount;node.renderParent=currentRenderParent;viewNodeFlags|=node.flags;viewMatchedQueries|=node.matchedQueryIds;if(node.element){var elDef=node.element;elDef.publicProviders=currentParent?currentParent.element.publicProviders:Object.create(null);elDef.allProviders=elDef.publicProviders;// Note: We assume that all providers of an element are before any child element!
currentElementHasPublicProviders=false;currentElementHasPrivateProviders=false;if(node.element.template){viewMatchedQueries|=node.element.template.nodeMatchedQueries;}}validateNode(currentParent,node,nodes.length);viewBindingCount+=node.bindings.length;viewDisposableCount+=node.outputs.length;if(!currentRenderParent&&node.flags&3/* CatRenderNode */){lastRenderRootNode=node;}if(node.flags&20224/* CatProvider */){if(!currentElementHasPublicProviders){currentElementHasPublicProviders=true;// Use prototypical inheritance to not get O(n^2) complexity...
// Use prototypical inheritance to not get O(n^2) complexity...
currentParent.element.publicProviders=Object.create(currentParent.element.publicProviders);currentParent.element.allProviders=currentParent.element.publicProviders;}var isPrivateService=(node.flags&8192/* PrivateProvider */)!==0;var isComponent=(node.flags&32768/* Component */)!==0;if(!isPrivateService||isComponent){currentParent.element.publicProviders[tokenKey(node.provider.token)]=node;}else{if(!currentElementHasPrivateProviders){currentElementHasPrivateProviders=true;// Use prototypical inheritance to not get O(n^2) complexity...
// Use prototypical inheritance to not get O(n^2) complexity...
currentParent.element.allProviders=Object.create(currentParent.element.publicProviders);}currentParent.element.allProviders[tokenKey(node.provider.token)]=node;}if(isComponent){currentParent.element.componentProvider=node;}}if(currentParent){currentParent.childFlags|=node.flags;currentParent.directChildFlags|=node.flags;currentParent.childMatchedQueries|=node.matchedQueryIds;if(node.element&&node.element.template){currentParent.childMatchedQueries|=node.element.template.nodeMatchedQueries;}}else{viewRootNodeFlags|=node.flags;}if(node.childCount>0){currentParent=node;if(!isNgContainer(node)){currentRenderParent=node;}}else{// When the current node has no children, check if it is the last children of its parent.
// When it is, propagate the flags up.
// The loop is required because an element could be the last transitive children of several
// elements. We loop to either the root or the highest opened element (= with remaining
// children)
while(currentParent&&i===currentParent.nodeIndex+currentParent.childCount){var newParent=currentParent.parent;if(newParent){newParent.childFlags|=currentParent.childFlags;newParent.childMatchedQueries|=currentParent.childMatchedQueries;}currentParent=newParent;// We also need to update the render parent & account for ng-container
if(currentParent&&isNgContainer(currentParent)){currentRenderParent=currentParent.renderParent;}else{currentRenderParent=currentParent;}}}}var handleEvent=function handleEvent(view,nodeIndex,eventName,event){return nodes[nodeIndex].element.handleEvent(view,eventName,event);};return{// Will be filled later...
factory:null,nodeFlags:viewNodeFlags,rootNodeFlags:viewRootNodeFlags,nodeMatchedQueries:viewMatchedQueries,flags:flags,nodes:nodes,updateDirectives:updateDirectives||NOOP,updateRenderer:updateRenderer||NOOP,handleEvent:handleEvent,bindingCount:viewBindingCount,outputCount:viewDisposableCount,lastRenderRootNode:lastRenderRootNode};}function isNgContainer(node){return(node.flags&1/* TypeElement */)!==0&&node.element.name===null;}function validateNode(parent,node,nodeCount){var template=node.element&&node.element.template;if(template){if(!template.lastRenderRootNode){throw new Error("Illegal State: Embedded templates without nodes are not allowed!");}if(template.lastRenderRootNode&&template.lastRenderRootNode.flags&16777216/* EmbeddedViews */){throw new Error("Illegal State: Last root node of a template can't have embedded views, at index "+node.nodeIndex+"!");}}if(node.flags&20224/* CatProvider */){var parentFlags=parent?parent.flags:0;if((parentFlags&1/* TypeElement */)===0){throw new Error("Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index "+node.nodeIndex+"!");}}if(node.query){if(node.flags&67108864/* TypeContentQuery */&&(!parent||(parent.flags&16384/* TypeDirective */)===0)){throw new Error("Illegal State: Content Query nodes need to be children of directives, at index "+node.nodeIndex+"!");}if(node.flags&134217728/* TypeViewQuery */&&parent){throw new Error("Illegal State: View Query nodes have to be top level nodes, at index "+node.nodeIndex+"!");}}if(node.childCount){var parentEnd=parent?parent.nodeIndex+parent.childCount:nodeCount-1;if(node.nodeIndex<=parentEnd&&node.nodeIndex+node.childCount>parentEnd){throw new Error("Illegal State: childCount of node leads outside of parent, at index "+node.nodeIndex+"!");}}}function createEmbeddedView(parent,anchorDef$$1,viewDef,context){// embedded views are seen as siblings to the anchor, so we need
// to get the parent of the anchor and use it as parentIndex.
var view=createView(parent.root,parent.renderer,parent,anchorDef$$1,viewDef);initView(view,parent.component,context);createViewNodes(view);return view;}function createRootView(root,def,context){var view=createView(root,root.renderer,null,null,def);initView(view,context,context);createViewNodes(view);return view;}function createComponentView(parentView,nodeDef,viewDef,hostElement){var rendererType=nodeDef.element.componentRendererType;var compRenderer;if(!rendererType){compRenderer=parentView.root.renderer;}else{compRenderer=parentView.root.rendererFactory.createRenderer(hostElement,rendererType);}return createView(parentView.root,compRenderer,parentView,nodeDef.element.componentProvider,viewDef);}function createView(root,renderer,parent,parentNodeDef,def){var nodes=new Array(def.nodes.length);var disposables=def.outputCount?new Array(def.outputCount):null;var view={def:def,parent:parent,viewContainerParent:null,parentNodeDef:parentNodeDef,context:null,component:null,nodes:nodes,state:13/* CatInit */,root:root,renderer:renderer,oldValues:new Array(def.bindingCount),disposables:disposables,initIndex:-1};return view;}function initView(view,component,context){view.component=component;view.context=context;}function createViewNodes(view){var renderHost;if(isComponentView(view)){var hostDef=view.parentNodeDef;renderHost=asElementData(view.parent,hostDef.parent.nodeIndex).renderElement;}var def=view.def;var nodes=view.nodes;for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];Services.setCurrentNode(view,i);var nodeData=void 0;switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:var el=createElement(view,renderHost,nodeDef);var componentView=undefined;if(nodeDef.flags&33554432/* ComponentView */){var compViewDef=resolveDefinition(nodeDef.element.componentView);componentView=Services.createComponentView(view,nodeDef,compViewDef,el);}listenToElementOutputs(view,componentView,nodeDef,el);nodeData={renderElement:el,componentView:componentView,viewContainer:null,template:nodeDef.element.template?createTemplateData(view,nodeDef):undefined};if(nodeDef.flags&16777216/* EmbeddedViews */){nodeData.viewContainer=createViewContainerData(view,nodeDef,nodeData);}break;case 2/* TypeText */:nodeData=createText(view,renderHost,nodeDef);break;case 512/* TypeClassProvider */:case 1024/* TypeFactoryProvider */:case 2048/* TypeUseExistingProvider */:case 256/* TypeValueProvider */:{nodeData=nodes[i];if(!nodeData&&!(nodeDef.flags&4096/* LazyProvider */)){var instance=createProviderInstance(view,nodeDef);nodeData={instance:instance};}break;}case 16/* TypePipe */:{var instance=createPipeInstance(view,nodeDef);nodeData={instance:instance};break;}case 16384/* TypeDirective */:{nodeData=nodes[i];if(!nodeData){var instance=createDirectiveInstance(view,nodeDef);nodeData={instance:instance};}if(nodeDef.flags&32768/* Component */){var compView=asElementData(view,nodeDef.parent.nodeIndex).componentView;initView(compView,nodeData.instance,nodeData.instance);}break;}case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:nodeData=createPureExpression(view,nodeDef);break;case 67108864/* TypeContentQuery */:case 134217728/* TypeViewQuery */:nodeData=createQuery();break;case 8/* TypeNgContent */:appendNgContent(view,renderHost,nodeDef);// no runtime data needed for NgContent...
nodeData=undefined;break;}nodes[i]=nodeData;}// Create the ViewData.nodes of component views after we created everything else,
// so that e.g. ng-content works
execComponentViewsAction(view,ViewAction.CreateViewNodes);// fill static content and view queries
execQueriesAction(view,67108864/* TypeContentQuery */|134217728/* TypeViewQuery */,268435456/* StaticQuery */,0/* CheckAndUpdate */);}function checkNoChangesView(view){markProjectedViewsForCheck(view);Services.updateDirectives(view,1/* CheckNoChanges */);execEmbeddedViewsAction(view,ViewAction.CheckNoChanges);Services.updateRenderer(view,1/* CheckNoChanges */);execComponentViewsAction(view,ViewAction.CheckNoChanges);// Note: We don't check queries for changes as we didn't do this in v2.x.
// TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.
view.state&=~(64/* CheckProjectedViews */|32/* CheckProjectedView */);}function checkAndUpdateView(view){if(view.state&1/* BeforeFirstCheck */){view.state&=~1/* BeforeFirstCheck */;view.state|=2/* FirstCheck */;}else{view.state&=~2/* FirstCheck */;}shiftInitState(view,0/* InitState_BeforeInit */,256/* InitState_CallingOnInit */);markProjectedViewsForCheck(view);Services.updateDirectives(view,0/* CheckAndUpdate */);execEmbeddedViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,67108864/* TypeContentQuery */,536870912/* DynamicQuery */,0/* CheckAndUpdate */);var callInit=shiftInitState(view,256/* InitState_CallingOnInit */,512/* InitState_CallingAfterContentInit */);callLifecycleHooksChildrenFirst(view,2097152/* AfterContentChecked */|(callInit?1048576/* AfterContentInit */:0));Services.updateRenderer(view,0/* CheckAndUpdate */);execComponentViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,134217728/* TypeViewQuery */,536870912/* DynamicQuery */,0/* CheckAndUpdate */);callInit=shiftInitState(view,512/* InitState_CallingAfterContentInit */,768/* InitState_CallingAfterViewInit */);callLifecycleHooksChildrenFirst(view,8388608/* AfterViewChecked */|(callInit?4194304/* AfterViewInit */:0));if(view.def.flags&2/* OnPush */){view.state&=~8/* ChecksEnabled */;}view.state&=~(64/* CheckProjectedViews */|32/* CheckProjectedView */);shiftInitState(view,768/* InitState_CallingAfterViewInit */,1024/* InitState_AfterInit */);}function checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===0/* Inline */){return checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{return checkAndUpdateNodeDynamic(view,nodeDef,v0);}}function markProjectedViewsForCheck(view){var def=view.def;if(!(def.nodeFlags&4/* ProjectedTemplate */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&4/* ProjectedTemplate */){var projectedViews=asElementData(view,i).template._projectedViews;if(projectedViews){for(var i_1=0;i_1<projectedViews.length;i_1++){var projectedView=projectedViews[i_1];projectedView.state|=32/* CheckProjectedView */;markParentViewsForCheckProjectedViews(projectedView,view);}}}else if((nodeDef.childFlags&4/* ProjectedTemplate */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:return checkAndUpdateElementInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 2/* TypeText */:return checkAndUpdateTextInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 16384/* TypeDirective */:return checkAndUpdateDirectiveInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:return checkAndUpdatePureExpressionInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);default:throw'unreachable';}}function checkAndUpdateNodeDynamic(view,nodeDef,values){switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:return checkAndUpdateElementDynamic(view,nodeDef,values);case 2/* TypeText */:return checkAndUpdateTextDynamic(view,nodeDef,values);case 16384/* TypeDirective */:return checkAndUpdateDirectiveDynamic(view,nodeDef,values);case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:return checkAndUpdatePureExpressionDynamic(view,nodeDef,values);default:throw'unreachable';}}function checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===0/* Inline */){checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{checkNoChangesNodeDynamic(view,nodeDef,v0);}// Returning false is ok here as we would have thrown in case of a change.
return false;}function checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindLen=nodeDef.bindings.length;if(bindLen>0)checkBindingNoChanges(view,nodeDef,0,v0);if(bindLen>1)checkBindingNoChanges(view,nodeDef,1,v1);if(bindLen>2)checkBindingNoChanges(view,nodeDef,2,v2);if(bindLen>3)checkBindingNoChanges(view,nodeDef,3,v3);if(bindLen>4)checkBindingNoChanges(view,nodeDef,4,v4);if(bindLen>5)checkBindingNoChanges(view,nodeDef,5,v5);if(bindLen>6)checkBindingNoChanges(view,nodeDef,6,v6);if(bindLen>7)checkBindingNoChanges(view,nodeDef,7,v7);if(bindLen>8)checkBindingNoChanges(view,nodeDef,8,v8);if(bindLen>9)checkBindingNoChanges(view,nodeDef,9,v9);}function checkNoChangesNodeDynamic(view,nodeDef,values){for(var i=0;i<values.length;i++){checkBindingNoChanges(view,nodeDef,i,values[i]);}}/**
 * Workaround https://github.com/angular/tsickle/issues/497
 * @suppress {misplacedTypeAnnotation}
 */function checkNoChangesQuery(view,nodeDef){var queryList=asQueryList(view,nodeDef.nodeIndex);if(queryList.dirty){throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view,nodeDef.nodeIndex),"Query "+nodeDef.query.id+" not dirty","Query "+nodeDef.query.id+" dirty",(view.state&1/* BeforeFirstCheck */)!==0);}}function destroyView(view){if(view.state&128/* Destroyed */){return;}execEmbeddedViewsAction(view,ViewAction.Destroy);execComponentViewsAction(view,ViewAction.Destroy);callLifecycleHooksChildrenFirst(view,131072/* OnDestroy */);if(view.disposables){for(var i=0;i<view.disposables.length;i++){view.disposables[i]();}}detachProjectedView(view);if(view.renderer.destroyNode){destroyViewNodes(view);}if(isComponentView(view)){view.renderer.destroy();}view.state|=128/* Destroyed */;}function destroyViewNodes(view){var len=view.def.nodes.length;for(var i=0;i<len;i++){var def=view.def.nodes[i];if(def.flags&1/* TypeElement */){view.renderer.destroyNode(asElementData(view,i).renderElement);}else if(def.flags&2/* TypeText */){view.renderer.destroyNode(asTextData(view,i).renderText);}else if(def.flags&67108864/* TypeContentQuery */||def.flags&134217728/* TypeViewQuery */){asQueryList(view,i).destroy();}}}var ViewAction;(function(ViewAction){ViewAction[ViewAction["CreateViewNodes"]=0]="CreateViewNodes";ViewAction[ViewAction["CheckNoChanges"]=1]="CheckNoChanges";ViewAction[ViewAction["CheckNoChangesProjectedViews"]=2]="CheckNoChangesProjectedViews";ViewAction[ViewAction["CheckAndUpdate"]=3]="CheckAndUpdate";ViewAction[ViewAction["CheckAndUpdateProjectedViews"]=4]="CheckAndUpdateProjectedViews";ViewAction[ViewAction["Destroy"]=5]="Destroy";})(ViewAction||(ViewAction={}));function execComponentViewsAction(view,action){var def=view.def;if(!(def.nodeFlags&33554432/* ComponentView */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&33554432/* ComponentView */){// a leaf
callViewAction(asElementData(view,i).componentView,action);}else if((nodeDef.childFlags&33554432/* ComponentView */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function execEmbeddedViewsAction(view,action){var def=view.def;if(!(def.nodeFlags&16777216/* EmbeddedViews */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&16777216/* EmbeddedViews */){// a leaf
var embeddedViews=asElementData(view,i).viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){callViewAction(embeddedViews[k],action);}}else if((nodeDef.childFlags&16777216/* EmbeddedViews */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function callViewAction(view,action){var viewState=view.state;switch(action){case ViewAction.CheckNoChanges:if((viewState&128/* Destroyed */)===0){if((viewState&12/* CatDetectChanges */)===12/* CatDetectChanges */){checkNoChangesView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,ViewAction.CheckNoChangesProjectedViews);}}break;case ViewAction.CheckNoChangesProjectedViews:if((viewState&128/* Destroyed */)===0){if(viewState&32/* CheckProjectedView */){checkNoChangesView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,action);}}break;case ViewAction.CheckAndUpdate:if((viewState&128/* Destroyed */)===0){if((viewState&12/* CatDetectChanges */)===12/* CatDetectChanges */){checkAndUpdateView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,ViewAction.CheckAndUpdateProjectedViews);}}break;case ViewAction.CheckAndUpdateProjectedViews:if((viewState&128/* Destroyed */)===0){if(viewState&32/* CheckProjectedView */){checkAndUpdateView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,action);}}break;case ViewAction.Destroy:// Note: destroyView recurses over all views,
// so we don't need to special case projected views here.
destroyView(view);break;case ViewAction.CreateViewNodes:createViewNodes(view);break;}}function execProjectedViewsAction(view,action){execEmbeddedViewsAction(view,action);execComponentViewsAction(view,action);}function execQueriesAction(view,queryFlags,staticDynamicQueryFlag,checkType){if(!(view.def.nodeFlags&queryFlags)||!(view.def.nodeFlags&staticDynamicQueryFlag)){return;}var nodeCount=view.def.nodes.length;for(var i=0;i<nodeCount;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&queryFlags&&nodeDef.flags&staticDynamicQueryFlag){Services.setCurrentNode(view,nodeDef.nodeIndex);switch(checkType){case 0/* CheckAndUpdate */:checkAndUpdateQuery(view,nodeDef);break;case 1/* CheckNoChanges */:checkNoChangesQuery(view,nodeDef);break;}}if(!(nodeDef.childFlags&queryFlags)||!(nodeDef.childFlags&staticDynamicQueryFlag)){// no child has a matching query
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var initialized=false;function initServicesIfNeeded(){if(initialized){return;}initialized=true;var services=isDevMode()?createDebugServices():createProdServices();Services.setCurrentNode=services.setCurrentNode;Services.createRootView=services.createRootView;Services.createEmbeddedView=services.createEmbeddedView;Services.createComponentView=services.createComponentView;Services.createNgModuleRef=services.createNgModuleRef;Services.overrideProvider=services.overrideProvider;Services.overrideComponentView=services.overrideComponentView;Services.clearOverrides=services.clearOverrides;Services.checkAndUpdateView=services.checkAndUpdateView;Services.checkNoChangesView=services.checkNoChangesView;Services.destroyView=services.destroyView;Services.resolveDep=resolveDep;Services.createDebugContext=services.createDebugContext;Services.handleEvent=services.handleEvent;Services.updateDirectives=services.updateDirectives;Services.updateRenderer=services.updateRenderer;Services.dirtyParentQueries=dirtyParentQueries;}function createProdServices(){return{setCurrentNode:function setCurrentNode(){},createRootView:createProdRootView,createEmbeddedView:createEmbeddedView,createComponentView:createComponentView,createNgModuleRef:createNgModuleRef,overrideProvider:NOOP,overrideComponentView:NOOP,clearOverrides:NOOP,checkAndUpdateView:checkAndUpdateView,checkNoChangesView:checkNoChangesView,destroyView:destroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:function handleEvent(view,nodeIndex,eventName,event){return view.def.handleEvent(view,nodeIndex,eventName,event);},updateDirectives:function updateDirectives(view,checkType){return view.def.updateDirectives(checkType===0/* CheckAndUpdate */?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);},updateRenderer:function updateRenderer(view,checkType){return view.def.updateRenderer(checkType===0/* CheckAndUpdate */?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);}};}function createDebugServices(){return{setCurrentNode:debugSetCurrentNode,createRootView:debugCreateRootView,createEmbeddedView:debugCreateEmbeddedView,createComponentView:debugCreateComponentView,createNgModuleRef:debugCreateNgModuleRef,overrideProvider:debugOverrideProvider,overrideComponentView:debugOverrideComponentView,clearOverrides:debugClearOverrides,checkAndUpdateView:debugCheckAndUpdateView,checkNoChangesView:debugCheckNoChangesView,destroyView:debugDestroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:debugHandleEvent,updateDirectives:debugUpdateDirectives,updateRenderer:debugUpdateRenderer};}function createProdRootView(elInjector,projectableNodes,rootSelectorOrNode,def,ngModule,context){var rendererFactory=ngModule.injector.get(RendererFactory2);return createRootView(createRootData(elInjector,ngModule,rendererFactory,projectableNodes,rootSelectorOrNode),def,context);}function debugCreateRootView(elInjector,projectableNodes,rootSelectorOrNode,def,ngModule,context){var rendererFactory=ngModule.injector.get(RendererFactory2);var root=createRootData(elInjector,ngModule,new DebugRendererFactory2(rendererFactory),projectableNodes,rootSelectorOrNode);var defWithOverride=applyProviderOverridesToView(def);return callWithDebugContext(DebugAction.create,createRootView,null,[root,defWithOverride,context]);}function createRootData(elInjector,ngModule,rendererFactory,projectableNodes,rootSelectorOrNode){var sanitizer=ngModule.injector.get(Sanitizer);var errorHandler=ngModule.injector.get(ErrorHandler);var renderer=rendererFactory.createRenderer(null,null);return{ngModule:ngModule,injector:elInjector,projectableNodes:projectableNodes,selectorOrNode:rootSelectorOrNode,sanitizer:sanitizer,rendererFactory:rendererFactory,renderer:renderer,errorHandler:errorHandler};}function debugCreateEmbeddedView(parentView,anchorDef,viewDef$$1,context){var defWithOverride=applyProviderOverridesToView(viewDef$$1);return callWithDebugContext(DebugAction.create,createEmbeddedView,null,[parentView,anchorDef,defWithOverride,context]);}function debugCreateComponentView(parentView,nodeDef,viewDef$$1,hostElement){var overrideComponentView=viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);if(overrideComponentView){viewDef$$1=overrideComponentView;}else{viewDef$$1=applyProviderOverridesToView(viewDef$$1);}return callWithDebugContext(DebugAction.create,createComponentView,null,[parentView,nodeDef,viewDef$$1,hostElement]);}function debugCreateNgModuleRef(moduleType,parentInjector,bootstrapComponents,def){var defWithOverride=applyProviderOverridesToNgModule(def);return createNgModuleRef(moduleType,parentInjector,bootstrapComponents,defWithOverride);}var providerOverrides=new Map();var providerOverridesWithScope=new Map();var viewDefOverrides=new Map();function debugOverrideProvider(override){providerOverrides.set(override.token,override);if(typeof override.token==='function'&&override.token.ngInjectableDef&&typeof override.token.ngInjectableDef.providedIn==='function'){providerOverridesWithScope.set(override.token,override);}}function debugOverrideComponentView(comp,compFactory){var hostViewDef=resolveDefinition(getComponentViewDefinitionFactory(compFactory));var compViewDef=resolveDefinition(hostViewDef.nodes[0].element.componentView);viewDefOverrides.set(comp,compViewDef);}function debugClearOverrides(){providerOverrides.clear();providerOverridesWithScope.clear();viewDefOverrides.clear();}// Notes about the algorithm:
// 1) Locate the providers of an element and check if one of them was overwritten
// 2) Change the providers of that element
//
// We only create new datastructures if we need to, to keep perf impact
// reasonable.
function applyProviderOverridesToView(def){if(providerOverrides.size===0){return def;}var elementIndicesWithOverwrittenProviders=findElementIndicesWithOverwrittenProviders(def);if(elementIndicesWithOverwrittenProviders.length===0){return def;}// clone the whole view definition,
// as it maintains references between the nodes that are hard to update.
def=def.factory(function(){return NOOP;});for(var i=0;i<elementIndicesWithOverwrittenProviders.length;i++){applyProviderOverridesToElement(def,elementIndicesWithOverwrittenProviders[i]);}return def;function findElementIndicesWithOverwrittenProviders(def){var elIndicesWithOverwrittenProviders=[];var lastElementDef=null;for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&1/* TypeElement */){lastElementDef=nodeDef;}if(lastElementDef&&nodeDef.flags&3840/* CatProviderNoDirective */&&providerOverrides.has(nodeDef.provider.token)){elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);lastElementDef=null;}}return elIndicesWithOverwrittenProviders;}function applyProviderOverridesToElement(viewDef$$1,elIndex){for(var i=elIndex+1;i<viewDef$$1.nodes.length;i++){var nodeDef=viewDef$$1.nodes[i];if(nodeDef.flags&1/* TypeElement */){// stop at the next element
return;}if(nodeDef.flags&3840/* CatProviderNoDirective */){var provider=nodeDef.provider;var override=providerOverrides.get(provider.token);if(override){nodeDef.flags=nodeDef.flags&~3840/* CatProviderNoDirective */|override.flags;provider.deps=splitDepsDsl(override.deps);provider.value=override.value;}}}}}// Notes about the algorithm:
// We only create new datastructures if we need to, to keep perf impact
// reasonable.
function applyProviderOverridesToNgModule(def){var _a=calcHasOverrides(def),hasOverrides=_a.hasOverrides,hasDeprecatedOverrides=_a.hasDeprecatedOverrides;if(!hasOverrides){return def;}// clone the whole view definition,
// as it maintains references between the nodes that are hard to update.
def=def.factory(function(){return NOOP;});applyProviderOverrides(def);return def;function calcHasOverrides(def){var hasOverrides=false;var hasDeprecatedOverrides=false;if(providerOverrides.size===0){return{hasOverrides:hasOverrides,hasDeprecatedOverrides:hasDeprecatedOverrides};}def.providers.forEach(function(node){var override=providerOverrides.get(node.token);if(node.flags&3840/* CatProviderNoDirective */&&override){hasOverrides=true;hasDeprecatedOverrides=hasDeprecatedOverrides||override.deprecatedBehavior;}});def.modules.forEach(function(module){providerOverridesWithScope.forEach(function(override,token){if(token.ngInjectableDef.providedIn===module){hasOverrides=true;hasDeprecatedOverrides=hasDeprecatedOverrides||override.deprecatedBehavior;}});});return{hasOverrides:hasOverrides,hasDeprecatedOverrides:hasDeprecatedOverrides};}function applyProviderOverrides(def){for(var i=0;i<def.providers.length;i++){var provider=def.providers[i];if(hasDeprecatedOverrides){// We had a bug where me made
// all providers lazy. Keep this logic behind a flag
// for migrating existing users.
provider.flags|=4096/* LazyProvider */;}var override=providerOverrides.get(provider.token);if(override){provider.flags=provider.flags&~3840/* CatProviderNoDirective */|override.flags;provider.deps=splitDepsDsl(override.deps);provider.value=override.value;}}if(providerOverridesWithScope.size>0){var moduleSet_1=new Set(def.modules);providerOverridesWithScope.forEach(function(override,token){if(moduleSet_1.has(token.ngInjectableDef.providedIn)){var provider={token:token,flags:override.flags|(hasDeprecatedOverrides?4096/* LazyProvider */:0/* None */),deps:splitDepsDsl(override.deps),value:override.value,index:def.providers.length};def.providers.push(provider);def.providersByKey[tokenKey(token)]=provider;}});}}}function prodCheckAndUpdateNode(view,checkIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var nodeDef=view.def.nodes[checkIndex];checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,checkIndex).value:undefined;}function prodCheckNoChangesNode(view,checkIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var nodeDef=view.def.nodes[checkIndex];checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,checkIndex).value:undefined;}function debugCheckAndUpdateView(view){return callWithDebugContext(DebugAction.detectChanges,checkAndUpdateView,null,[view]);}function debugCheckNoChangesView(view){return callWithDebugContext(DebugAction.checkNoChanges,checkNoChangesView,null,[view]);}function debugDestroyView(view){return callWithDebugContext(DebugAction.destroy,destroyView,null,[view]);}var DebugAction;(function(DebugAction){DebugAction[DebugAction["create"]=0]="create";DebugAction[DebugAction["detectChanges"]=1]="detectChanges";DebugAction[DebugAction["checkNoChanges"]=2]="checkNoChanges";DebugAction[DebugAction["destroy"]=3]="destroy";DebugAction[DebugAction["handleEvent"]=4]="handleEvent";})(DebugAction||(DebugAction={}));var _currentAction;var _currentView;var _currentNodeIndex;function debugSetCurrentNode(view,nodeIndex){_currentView=view;_currentNodeIndex=nodeIndex;}function debugHandleEvent(view,nodeIndex,eventName,event){debugSetCurrentNode(view,nodeIndex);return callWithDebugContext(DebugAction.handleEvent,view.def.handleEvent,null,[view,nodeIndex,eventName,event]);}function debugUpdateDirectives(view,checkType){if(view.state&128/* Destroyed */){throw viewDestroyedError(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextDirectiveWithBinding(view,0));return view.def.updateDirectives(debugCheckDirectivesFn,view);function debugCheckDirectivesFn(view,nodeIndex,argStyle){var values=[];for(var _i=3;_i<arguments.length;_i++){values[_i-3]=arguments[_i];}var nodeDef=view.def.nodes[nodeIndex];if(checkType===0/* CheckAndUpdate */){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.flags&16384/* TypeDirective */){debugSetCurrentNode(view,nextDirectiveWithBinding(view,nodeIndex));}return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,nodeDef.nodeIndex).value:undefined;}}function debugUpdateRenderer(view,checkType){if(view.state&128/* Destroyed */){throw viewDestroyedError(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextRenderNodeWithBinding(view,0));return view.def.updateRenderer(debugCheckRenderNodeFn,view);function debugCheckRenderNodeFn(view,nodeIndex,argStyle){var values=[];for(var _i=3;_i<arguments.length;_i++){values[_i-3]=arguments[_i];}var nodeDef=view.def.nodes[nodeIndex];if(checkType===0/* CheckAndUpdate */){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.flags&3/* CatRenderNode */){debugSetCurrentNode(view,nextRenderNodeWithBinding(view,nodeIndex));}return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,nodeDef.nodeIndex).value:undefined;}}function debugCheckAndUpdateNode(view,nodeDef,argStyle,givenValues){var changed=checkAndUpdateNode.apply(void 0,(0,_tslib.__spread)([view,nodeDef,argStyle],givenValues));if(changed){var values=argStyle===1/* Dynamic */?givenValues[0]:givenValues;if(nodeDef.flags&16384/* TypeDirective */){var bindingValues={};for(var i=0;i<nodeDef.bindings.length;i++){var binding=nodeDef.bindings[i];var value=values[i];if(binding.flags&8/* TypeProperty */){bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)]=normalizeDebugBindingValue(value);}}var elDef=nodeDef.parent;var el=asElementData(view,elDef.nodeIndex).renderElement;if(!elDef.element.name){// a comment.
view.renderer.setValue(el,"bindings="+JSON.stringify(bindingValues,null,2));}else{// a regular element.
for(var attr in bindingValues){var value=bindingValues[attr];if(value!=null){view.renderer.setAttribute(el,attr,value);}else{view.renderer.removeAttribute(el,attr);}}}}}}function debugCheckNoChangesNode(view,nodeDef,argStyle,values){checkNoChangesNode.apply(void 0,(0,_tslib.__spread)([view,nodeDef,argStyle],values));}function normalizeDebugBindingName(name){// Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
name=camelCaseToDashCase(name.replace(/[$@]/g,'_'));return"ng-reflect-"+name;}var CAMEL_CASE_REGEXP=/([A-Z])/g;function camelCaseToDashCase(input){return input.replace(CAMEL_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return'-'+m[1].toLowerCase();});}function normalizeDebugBindingValue(value){try{// Limit the size of the value as otherwise the DOM just gets polluted.
return value!=null?value.toString().slice(0,30):value;}catch(e){return'[ERROR] Exception while trying to serialize the value';}}function nextDirectiveWithBinding(view,nodeIndex){for(var i=nodeIndex;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&16384/* TypeDirective */&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return null;}function nextRenderNodeWithBinding(view,nodeIndex){for(var i=nodeIndex;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&3/* CatRenderNode */&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return null;}var DebugContext_=/** @class */function(){function DebugContext_(view,nodeIndex){this.view=view;this.nodeIndex=nodeIndex;if(nodeIndex==null){this.nodeIndex=nodeIndex=0;}this.nodeDef=view.def.nodes[nodeIndex];var elDef=this.nodeDef;var elView=view;while(elDef&&(elDef.flags&1/* TypeElement */)===0){elDef=elDef.parent;}if(!elDef){while(!elDef&&elView){elDef=viewParentEl(elView);elView=elView.parent;}}this.elDef=elDef;this.elView=elView;}Object.defineProperty(DebugContext_.prototype,"elOrCompView",{get:function get(){// Has to be done lazily as we use the DebugContext also during creation of elements...
return asElementData(this.elView,this.elDef.nodeIndex).componentView||this.view;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"injector",{get:function get(){return createInjector$1(this.elView,this.elDef);},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"component",{get:function get(){return this.elOrCompView.component;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"context",{get:function get(){return this.elOrCompView.context;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"providerTokens",{get:function get(){var tokens=[];if(this.elDef){for(var i=this.elDef.nodeIndex+1;i<=this.elDef.nodeIndex+this.elDef.childCount;i++){var childDef=this.elView.def.nodes[i];if(childDef.flags&20224/* CatProvider */){tokens.push(childDef.provider.token);}i+=childDef.childCount;}}return tokens;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"references",{get:function get(){var references={};if(this.elDef){collectReferences(this.elView,this.elDef,references);for(var i=this.elDef.nodeIndex+1;i<=this.elDef.nodeIndex+this.elDef.childCount;i++){var childDef=this.elView.def.nodes[i];if(childDef.flags&20224/* CatProvider */){collectReferences(this.elView,childDef,references);}i+=childDef.childCount;}}return references;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"componentRenderElement",{get:function get(){var elData=findHostElement(this.elOrCompView);return elData?elData.renderElement:undefined;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"renderNode",{get:function get(){return this.nodeDef.flags&2/* TypeText */?renderNode(this.view,this.nodeDef):renderNode(this.elView,this.elDef);},enumerable:true,configurable:true});DebugContext_.prototype.logError=function(console){var values=[];for(var _i=1;_i<arguments.length;_i++){values[_i-1]=arguments[_i];}var logViewDef;var logNodeIndex;if(this.nodeDef.flags&2/* TypeText */){logViewDef=this.view.def;logNodeIndex=this.nodeDef.nodeIndex;}else{logViewDef=this.elView.def;logNodeIndex=this.elDef.nodeIndex;}// Note: we only generate a log function for text and element nodes
// to make the generated code as small as possible.
var renderNodeIndex=getRenderNodeIndex(logViewDef,logNodeIndex);var currRenderNodeIndex=-1;var nodeLogger=function nodeLogger(){currRenderNodeIndex++;if(currRenderNodeIndex===renderNodeIndex){return(_a=console.error).bind.apply(_a,(0,_tslib.__spread)([console],values));}else{return NOOP;}var _a;};logViewDef.factory(nodeLogger);if(currRenderNodeIndex<renderNodeIndex){console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');console.error.apply(console,(0,_tslib.__spread)(values));}};return DebugContext_;}();function getRenderNodeIndex(viewDef$$1,nodeIndex){var renderNodeIndex=-1;for(var i=0;i<=nodeIndex;i++){var nodeDef=viewDef$$1.nodes[i];if(nodeDef.flags&3/* CatRenderNode */){renderNodeIndex++;}}return renderNodeIndex;}function findHostElement(view){while(view&&!isComponentView(view)){view=view.parent;}if(view.parent){return asElementData(view.parent,viewParentEl(view).nodeIndex);}return null;}function collectReferences(view,nodeDef,references){for(var refName in nodeDef.references){references[refName]=getQueryValue(view,nodeDef,nodeDef.references[refName]);}}function callWithDebugContext(action,fn,self,args){var oldAction=_currentAction;var oldView=_currentView;var oldNodeIndex=_currentNodeIndex;try{_currentAction=action;var result=fn.apply(self,args);_currentView=oldView;_currentNodeIndex=oldNodeIndex;_currentAction=oldAction;return result;}catch(e){if(isViewDebugError(e)||!_currentView){throw e;}throw viewWrappedDebugError(e,getCurrentDebugContext());}}function getCurrentDebugContext(){return _currentView?new DebugContext_(_currentView,_currentNodeIndex):null;}var DebugRendererFactory2=/** @class */function(){function DebugRendererFactory2(delegate){this.delegate=delegate;}DebugRendererFactory2.prototype.createRenderer=function(element,renderData){return new DebugRenderer2(this.delegate.createRenderer(element,renderData));};DebugRendererFactory2.prototype.begin=function(){if(this.delegate.begin){this.delegate.begin();}};DebugRendererFactory2.prototype.end=function(){if(this.delegate.end){this.delegate.end();}};DebugRendererFactory2.prototype.whenRenderingDone=function(){if(this.delegate.whenRenderingDone){return this.delegate.whenRenderingDone();}return Promise.resolve(null);};return DebugRendererFactory2;}();var DebugRenderer2=/** @class */function(){function DebugRenderer2(delegate){this.delegate=delegate;this.data=this.delegate.data;}DebugRenderer2.prototype.destroyNode=function(node){removeDebugNodeFromIndex(getDebugNode(node));if(this.delegate.destroyNode){this.delegate.destroyNode(node);}};DebugRenderer2.prototype.destroy=function(){this.delegate.destroy();};DebugRenderer2.prototype.createElement=function(name,namespace){var el=this.delegate.createElement(name,namespace);var debugCtx=getCurrentDebugContext();if(debugCtx){var debugEl=new DebugElement(el,null,debugCtx);debugEl.name=name;indexDebugNode(debugEl);}return el;};DebugRenderer2.prototype.createComment=function(value){var comment=this.delegate.createComment(value);var debugCtx=getCurrentDebugContext();if(debugCtx){indexDebugNode(new DebugNode(comment,null,debugCtx));}return comment;};DebugRenderer2.prototype.createText=function(value){var text=this.delegate.createText(value);var debugCtx=getCurrentDebugContext();if(debugCtx){indexDebugNode(new DebugNode(text,null,debugCtx));}return text;};DebugRenderer2.prototype.appendChild=function(parent,newChild){var debugEl=getDebugNode(parent);var debugChildEl=getDebugNode(newChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.addChild(debugChildEl);}this.delegate.appendChild(parent,newChild);};DebugRenderer2.prototype.insertBefore=function(parent,newChild,refChild){var debugEl=getDebugNode(parent);var debugChildEl=getDebugNode(newChild);var debugRefEl=getDebugNode(refChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.insertBefore(debugRefEl,debugChildEl);}this.delegate.insertBefore(parent,newChild,refChild);};DebugRenderer2.prototype.removeChild=function(parent,oldChild){var debugEl=getDebugNode(parent);var debugChildEl=getDebugNode(oldChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.removeChild(debugChildEl);}this.delegate.removeChild(parent,oldChild);};DebugRenderer2.prototype.selectRootElement=function(selectorOrNode){var el=this.delegate.selectRootElement(selectorOrNode);var debugCtx=getCurrentDebugContext();if(debugCtx){indexDebugNode(new DebugElement(el,null,debugCtx));}return el;};DebugRenderer2.prototype.setAttribute=function(el,name,value,namespace){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=value;}this.delegate.setAttribute(el,name,value,namespace);};DebugRenderer2.prototype.removeAttribute=function(el,name,namespace){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=null;}this.delegate.removeAttribute(el,name,namespace);};DebugRenderer2.prototype.addClass=function(el,name){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=true;}this.delegate.addClass(el,name);};DebugRenderer2.prototype.removeClass=function(el,name){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=false;}this.delegate.removeClass(el,name);};DebugRenderer2.prototype.setStyle=function(el,style,value,flags){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=value;}this.delegate.setStyle(el,style,value,flags);};DebugRenderer2.prototype.removeStyle=function(el,style,flags){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=null;}this.delegate.removeStyle(el,style,flags);};DebugRenderer2.prototype.setProperty=function(el,name,value){var debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.properties[name]=value;}this.delegate.setProperty(el,name,value);};DebugRenderer2.prototype.listen=function(target,eventName,callback){if(typeof target!=='string'){var debugEl=getDebugNode(target);if(debugEl){debugEl.listeners.push(new EventListener(eventName,callback));}}return this.delegate.listen(target,eventName,callback);};DebugRenderer2.prototype.parentNode=function(node){return this.delegate.parentNode(node);};DebugRenderer2.prototype.nextSibling=function(node){return this.delegate.nextSibling(node);};DebugRenderer2.prototype.setValue=function(node,value){return this.delegate.setValue(node,value);};return DebugRenderer2;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function overrideProvider(override){initServicesIfNeeded();return Services.overrideProvider(override);}function overrideComponentView(comp,componentFactory){initServicesIfNeeded();return Services.overrideComponentView(comp,componentFactory);}function clearOverrides(){initServicesIfNeeded();return Services.clearOverrides();}// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createNgModuleFactory(ngModuleType,bootstrapComponents,defFactory){return new NgModuleFactory_(ngModuleType,bootstrapComponents,defFactory);}var NgModuleFactory_=/** @class */function(_super){(0,_tslib.__extends)(NgModuleFactory_,_super);function NgModuleFactory_(moduleType,_bootstrapComponents,_ngModuleDefFactory){var _this=// Attention: this ctor is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
_super.call(this)||this;_this.moduleType=moduleType;_this._bootstrapComponents=_bootstrapComponents;_this._ngModuleDefFactory=_ngModuleDefFactory;return _this;}NgModuleFactory_.prototype.create=function(parentInjector){initServicesIfNeeded();var def=resolveDefinition(this._ngModuleDefFactory);return Services.createNgModuleRef(this.moduleType,parentInjector||Injector.NULL,this._bootstrapComponents,def);};return NgModuleFactory_;}(NgModuleFactory);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // The functions in this file verify that the assumptions we are making
// about state in an instruction are correct before implementing any logic.
// They are meant only to be called in dev mode as sanity checks.
function assertEqual(actual,expected,msg){if(actual!=expected){throwError(msg);}}function assertNotEqual(actual,expected,msg){if(actual==expected){throwError(msg);}}function assertSame(actual,expected,msg){if(actual!==expected){throwError(msg);}}function assertLessThan(actual,expected,msg){if(actual>=expected){throwError(msg);}}function assertGreaterThan(actual,expected,msg){if(actual<=expected){throwError(msg);}}function assertNull(actual,msg){if(actual!=null){throwError(msg);}}function assertNotNull(actual,msg){if(actual==null){throwError(msg);}}function assertComponentType(actual,msg){if(msg===void 0){msg='Type passed in is not ComponentType, it does not have \'ngComponentDef\' property.';}if(!actual.ngComponentDef){throwError(msg);}}function throwError(msg){debugger;// Left intentionally for better debugger experience.
throw new Error("ASSERTION ERROR: "+msg);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into
 * TView.initHooks during directiveCreate.
 *
 * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:
 * directive index), then saved in the even indices of the initHooks array. The odd indices
 * hold the hook functions themselves.
 *
 * @param index The index of the directive in LView.data
 * @param hooks The static hooks map on the directive def
 * @param tView The current TView
 */function queueInitHooks(index,onInit,doCheck,tView){ngDevMode&&assertEqual(tView.firstTemplatePass,true,'Should only be called on first template pass');if(onInit){(tView.initHooks||(tView.initHooks=[])).push(index,onInit);}if(doCheck){(tView.initHooks||(tView.initHooks=[])).push(index,doCheck);(tView.checkHooks||(tView.checkHooks=[])).push(index,doCheck);}}/**
 * Loops through the directives on a node and queues all their hooks except ngOnInit
 * and ngDoCheck, which are queued separately in directiveCreate.
 */function queueLifecycleHooks(flags,currentView){var tView=currentView.tView;if(tView.firstTemplatePass===true){var start=flags>>13;var count=flags&4095;var end=start+count;// It's necessary to loop through the directives at elementEnd() (rather than processing in
// directiveCreate) so we can preserve the current hook order. Content, view, and destroy
// hooks for projected components and directives must be called *before* their hosts.
for(var i=start;i<end;i++){var def=tView.directives[i];queueContentHooks(def,tView,i);queueViewHooks(def,tView,i);queueDestroyHooks(def,tView,i);}}}/** Queues afterContentInit and afterContentChecked hooks on TView */function queueContentHooks(def,tView,i){if(def.afterContentInit){(tView.contentHooks||(tView.contentHooks=[])).push(i,def.afterContentInit);}if(def.afterContentChecked){(tView.contentHooks||(tView.contentHooks=[])).push(i,def.afterContentChecked);(tView.contentCheckHooks||(tView.contentCheckHooks=[])).push(i,def.afterContentChecked);}}/** Queues afterViewInit and afterViewChecked hooks on TView */function queueViewHooks(def,tView,i){if(def.afterViewInit){(tView.viewHooks||(tView.viewHooks=[])).push(i,def.afterViewInit);}if(def.afterViewChecked){(tView.viewHooks||(tView.viewHooks=[])).push(i,def.afterViewChecked);(tView.viewCheckHooks||(tView.viewCheckHooks=[])).push(i,def.afterViewChecked);}}/** Queues onDestroy hooks on TView */function queueDestroyHooks(def,tView,i){if(def.onDestroy!=null){(tView.destroyHooks||(tView.destroyHooks=[])).push(i,def.onDestroy);}}/**
 * Calls onInit and doCheck calls if they haven't already been called.
 *
 * @param currentView The current view
 */function executeInitHooks(currentView,tView,creationMode){if(currentView.lifecycleStage===1/* Init */){executeHooks(currentView.directives,tView.initHooks,tView.checkHooks,creationMode);currentView.lifecycleStage=2/* AfterInit */;}}/**
 * Iterates over afterViewInit and afterViewChecked functions and calls them.
 *
 * @param currentView The current view
 */function executeHooks(data,allHooks,checkHooks,creationMode){var hooksToCall=creationMode?allHooks:checkHooks;if(hooksToCall){callHooks(data,hooksToCall);}}/**
 * Calls lifecycle hooks with their contexts, skipping init hooks if it's not
 * creation mode.
 *
 * @param currentView The current view
 * @param arr The array in which the hooks are found
 */function callHooks(data,arr){for(var i=0;i<arr.length;i+=2){arr[i+1].call(data[arr[i]]);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */if(typeof ngDevMode=='undefined'){if(typeof window!='undefined')window.ngDevMode=true;if(typeof self!='undefined')self.ngDevMode=true;if(typeof global!='undefined')global.ngDevMode=true;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NG_PROJECT_AS_ATTR_NAME='ngProjectAs';// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function assertNodeType(node,type){assertNotNull(node,'should be called with a node');assertEqual(node.type,type,"should be a "+typeName(type));}function assertNodeOfPossibleTypes(node){var types=[];for(var _i=1;_i<arguments.length;_i++){types[_i-1]=arguments[_i];}assertNotNull(node,'should be called with a node');var found=types.some(function(type){return node.type===type;});assertEqual(found,true,"Should be one of "+types.map(typeName).join(', '));}function typeName(type){if(type==1/* Projection */)return'Projection';if(type==0/* Container */)return'Container';if(type==2/* View */)return'View';if(type==3/* Element */)return'Element';return'<unknown>';}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // TODO: cleanup once the code is merged in angular/angular
// TODO: cleanup once the code is merged in angular/angular
var RendererStyleFlags3;// TODO: cleanup once the code is merged in angular/angular
(function(RendererStyleFlags3){RendererStyleFlags3[RendererStyleFlags3["Important"]=1]="Important";RendererStyleFlags3[RendererStyleFlags3["DashCase"]=2]="DashCase";})(RendererStyleFlags3||(RendererStyleFlags3={}));/** Returns whether the `renderer` is a `ProceduralRenderer3` */function isProceduralRenderer(renderer){return!!renderer.listen;}var domRendererFactory3={createRenderer:function createRenderer(hostElement,rendererType){return document;}};// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
* Must use this method for CD (instead of === ) since NaN !== NaN
*/function isDifferent(a,b){// NaN is the only value that is not equal to itself so the first
// test checks if both a and b are not NaN
return!(a!==a&&b!==b)&&a!==b;}function stringify$1(value){if(typeof value=='function')return value.name||value;if(typeof value=='string')return value;if(value==null)return'';return''+value;}/**
 *  Function that throws a "not implemented" error so it's clear certain
 *  behaviors/methods aren't yet ready.
 *
 * @returns Not implemented error
 */function notImplemented(){return new Error('NotImplemented');}/**
 * Flattens an array in non-recursive way. Input arrays are not modified.
 */function flatten$1(list){var result=[];var i=0;while(i<list.length){var item=list[i];if(Array.isArray(item)){if(item.length>0){list=item.concat(list.slice(i+1));i=0;}else{i++;}}else{result.push(item);i++;}}return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Returns the first RNode following the given LNode in the same parent DOM element.
 *
 * This is needed in order to insert the given node with insertBefore.
 *
 * @param node The node whose following DOM node must be found.
 * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the
 * lookup should not be stopped until the result is found.
 * @returns RNode before which the provided node should be inserted or null if the lookup was
 * stopped
 * or if there is no native node after the given logical node in the same native parent.
 */function findNextRNodeSibling(node,stopNode){var currentNode=node;while(currentNode&&currentNode!==stopNode){var pNextOrParent=currentNode.pNextOrParent;if(pNextOrParent){while(pNextOrParent.type!==1/* Projection */){var nativeNode=findFirstRNode(pNextOrParent);if(nativeNode){return nativeNode;}pNextOrParent=pNextOrParent.pNextOrParent;}currentNode=pNextOrParent;}else{var currentSibling=currentNode.next;while(currentSibling){var nativeNode=findFirstRNode(currentSibling);if(nativeNode){return nativeNode;}currentSibling=currentSibling.next;}var parentNode=currentNode.parent;currentNode=null;if(parentNode){var parentType=parentNode.type;if(parentType===0/* Container */||parentType===2/* View */){currentNode=parentNode;}}}}return null;}/**
 * Get the next node in the LNode tree, taking into account the place where a node is
 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).
 *
 * @param node The node whose next node in the LNode tree must be found.
 * @return LNode|null The next sibling in the LNode tree.
 */function getNextLNodeWithProjection(node){var pNextOrParent=node.pNextOrParent;if(pNextOrParent){// The node is projected
var isLastProjectedNode=pNextOrParent.type===1;// returns pNextOrParent if we are not at the end of the list, null otherwise
return isLastProjectedNode?null:pNextOrParent;}// returns node.next because the the node is not projected
return node.next;}/**
 * Find the next node in the LNode tree, taking into account the place where a node is
 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).
 *
 * If there is no sibling node, this function goes to the next sibling of the parent node...
 * until it reaches rootNode (at which point null is returned).
 *
 * @param initialNode The node whose following node in the LNode tree must be found.
 * @param rootNode The root node at which the lookup should stop.
 * @return LNode|null The following node in the LNode tree.
 */function getNextOrParentSiblingNode(initialNode,rootNode){var node=initialNode;var nextNode=getNextLNodeWithProjection(node);while(node&&!nextNode){// if node.pNextOrParent is not null here, it is not the next node
// (because, at this point, nextNode is null, so it is the parent)
node=node.pNextOrParent||node.parent;if(node===rootNode){return null;}nextNode=node&&getNextLNodeWithProjection(node);}return nextNode;}/**
 * Returns the first RNode inside the given LNode.
 *
 * @param node The node whose first DOM node must be found
 * @returns RNode The first RNode of the given LNode or null if there is none.
 */function findFirstRNode(rootNode){var node=rootNode;while(node){var nextNode=null;if(node.type===3/* Element */){// A LElementNode has a matching RNode in LElementNode.native
return node.native;}else if(node.type===0/* Container */){var lContainerNode=node;var childContainerData=lContainerNode.dynamicLContainerNode?lContainerNode.dynamicLContainerNode.data:lContainerNode.data;nextNode=childContainerData.views.length?childContainerData.views[0].child:null;}else if(node.type===1/* Projection */){// For Projection look at the first projected node
nextNode=node.data.head;}else{// Otherwise look at the first child
nextNode=node.child;}node=nextNode===null?getNextOrParentSiblingNode(node,rootNode):nextNode;}return null;}function createTextNode(value,renderer){return isProceduralRenderer(renderer)?renderer.createText(stringify$1(value)):renderer.createTextNode(stringify$1(value));}function addRemoveViewFromContainer(container,rootNode,insertMode,beforeNode){ngDevMode&&assertNodeType(container,0/* Container */);ngDevMode&&assertNodeType(rootNode,2/* View */);var parentNode=container.data.renderParent;var parent=parentNode?parentNode.native:null;var node=rootNode.child;if(parent){while(node){var nextNode=null;var renderer=container.view.renderer;if(node.type===3/* Element */){if(insertMode){if(!node.native){// If the native element doesn't exist, this is a bound text node that hasn't yet been
// created because update mode has not run (occurs when a bound text node is a root
// node of a dynamically created view). See textBinding() in instructions for ctx.
// If the native element doesn't exist, this is a bound text node that hasn't yet been
// created because update mode has not run (occurs when a bound text node is a root
// node of a dynamically created view). See textBinding() in instructions for ctx.
node.native=createTextNode('',renderer);}isProceduralRenderer(renderer)?renderer.insertBefore(parent,node.native,beforeNode):parent.insertBefore(node.native,beforeNode,true);}else{isProceduralRenderer(renderer)?renderer.removeChild(parent,node.native):parent.removeChild(node.native);}nextNode=node.next;}else if(node.type===0/* Container */){// if we get to a container, it must be a root node of a view because we are only
// propagating down into child views / containers and not child elements
var childContainerData=node.data;childContainerData.renderParent=parentNode;nextNode=childContainerData.views.length?childContainerData.views[0].child:null;}else if(node.type===1/* Projection */){nextNode=node.data.head;}else{nextNode=node.child;}if(nextNode===null){node=getNextOrParentSiblingNode(node,rootNode);}else{node=nextNode;}}}}/**
 * Traverses the tree of component views and containers to remove listeners and
 * call onDestroy callbacks.
 *
 * Notes:
 *  - Because it's used for onDestroy calls, it needs to be bottom-up.
 *  - Must process containers instead of their views to avoid splicing
 *  when views are destroyed and re-added.
 *  - Using a while loop because it's faster than recursion
 *  - Destroy only called on movement to sibling or movement to parent (laterally or up)
 *
 *  @param rootView The view to destroy
 */function destroyViewTree(rootView){var viewOrContainer=rootView;while(viewOrContainer){var next=null;if(viewOrContainer.views&&viewOrContainer.views.length){next=viewOrContainer.views[0].data;}else if(viewOrContainer.child){next=viewOrContainer.child;}else if(viewOrContainer.next){cleanUpView(viewOrContainer);next=viewOrContainer.next;}if(next==null){// If the viewOrContainer is the rootView, then the cleanup is done twice.
// Without this check, ngOnDestroy would be called twice for a directive on an element.
while(viewOrContainer&&!viewOrContainer.next&&viewOrContainer!==rootView){cleanUpView(viewOrContainer);viewOrContainer=getParentState(viewOrContainer,rootView);}cleanUpView(viewOrContainer||rootView);next=viewOrContainer&&viewOrContainer.next;}viewOrContainer=next;}}/**
 * Inserts a view into a container.
 *
 * This adds the view to the container's array of active views in the correct
 * position. It also adds the view's elements to the DOM if the container isn't a
 * root node of another view (in that case, the view's elements will be added when
 * the container's parent view is added later).
 *
 * @param container The container into which the view should be inserted
 * @param newView The view to insert
 * @param index The index at which to insert the view
 * @returns The inserted view
 */function insertView(container,newView,index){var state=container.data;var views=state.views;if(index>0){// This is a new view, we need to add it to the children.
setViewNext(views[index-1],newView);}if(index<views.length){setViewNext(newView,views[index]);views.splice(index,0,newView);}else{views.push(newView);}// If the container's renderParent is null, we know that it is a root node of its own parent view
// and we should wait until that parent processes its nodes (otherwise, we will insert this view's
// nodes twice - once now and once when its parent inserts its views).
if(container.data.renderParent!==null){var beforeNode=findNextRNodeSibling(newView,container);if(!beforeNode){var containerNextNativeNode=container.native;if(containerNextNativeNode===undefined){containerNextNativeNode=container.native=findNextRNodeSibling(container,null);}beforeNode=containerNextNativeNode;}addRemoveViewFromContainer(container,newView,true,beforeNode);}return newView;}/**
 * Removes a view from a container.
 *
 * This method splices the view from the container's array of active views. It also
 * removes the view's elements from the DOM and conducts cleanup (e.g. removing
 * listeners, calling onDestroys).
 *
 * @param container The container from which to remove a view
 * @param removeIndex The index of the view to remove
 * @returns The removed view
 */function removeView(container,removeIndex){var views=container.data.views;var viewNode=views[removeIndex];if(removeIndex>0){setViewNext(views[removeIndex-1],viewNode.next);}views.splice(removeIndex,1);viewNode.next=null;destroyViewTree(viewNode.data);addRemoveViewFromContainer(container,viewNode,false);// Notify query that view has been removed
container.data.queries&&container.data.queries.removeView(removeIndex);return viewNode;}/**
 * Sets a next on the view node, so views in for loops can easily jump from
 * one view to the next to add/remove elements. Also adds the LView (view.data)
 * to the view tree for easy traversal when cleaning up the view.
 *
 * @param view The view to set up
 * @param next The view's new next
 */function setViewNext(view,next){view.next=next;view.data.next=next?next.data:null;}/**
 * Determines which LViewOrLContainer to jump to when traversing back up the
 * tree in destroyViewTree.
 *
 * Normally, the view's parent LView should be checked, but in the case of
 * embedded views, the container (which is the view node's parent, but not the
 * LView's parent) needs to be checked for a possible next property.
 *
 * @param state The LViewOrLContainer for which we need a parent state
 * @param rootView The rootView, so we don't propagate too far up the view tree
 * @returns The correct parent LViewOrLContainer
 */function getParentState(state,rootView){var node;if((node=state.node)&&node.type===2/* View */){// if it's an embedded view, the state needs to go up to the container, in case the
// container has a next
return node.parent.data;}else{// otherwise, use parent view for containers or component views
return state.parent===rootView?null:state.parent;}}/**
 * Removes all listeners and call all onDestroys in a given view.
 *
 * @param view The LView to clean up
 */function cleanUpView(view){removeListeners(view);executeOnDestroys(view);executePipeOnDestroys(view);}/** Removes listeners and unsubscribes from output subscriptions */function removeListeners(view){var cleanup=view.cleanup;if(cleanup!=null){for(var i=0;i<cleanup.length-1;i+=2){if(typeof cleanup[i]==='string'){cleanup[i+1].removeEventListener(cleanup[i],cleanup[i+2],cleanup[i+3]);i+=2;}else{cleanup[i].call(cleanup[i+1]);}}view.cleanup=null;}}/** Calls onDestroy hooks for this view */function executeOnDestroys(view){var tView=view.tView;var destroyHooks;if(tView!=null&&(destroyHooks=tView.destroyHooks)!=null){callHooks(view.directives,destroyHooks);}}/** Calls pipe destroy hooks for this view */function executePipeOnDestroys(view){var pipeDestroyHooks=view.tView&&view.tView.pipeDestroyHooks;if(pipeDestroyHooks){callHooks(view.data,pipeDestroyHooks);}}/**
 * Returns whether a native element should be inserted in the given parent.
 *
 * The native node can be inserted when its parent is:
 * - A regular element => Yes
 * - A component host element =>
 *    - if the `currentView` === the parent `view`: The element is in the content (vs the
 *      template)
 *      => don't add as the parent component will project if needed.
 *    - `currentView` !== the parent `view` => The element is in the template (vs the content),
 *      add it
 * - View element => delay insertion, will be done on `viewEnd()`
 *
 * @param parent The parent in which to insert the child
 * @param currentView The LView being processed
 * @return boolean Whether the child element should be inserted.
 */function canInsertNativeNode(parent,currentView){var parentIsElement=parent.type===3;return parentIsElement&&(parent.view!==currentView||parent.data===null/* Regular Element. */);}/**
 * Appends the `child` element to the `parent`.
 *
 * The element insertion might be delayed {@link canInsertNativeNode}
 *
 * @param parent The parent to which to append the child
 * @param child The child that should be appended
 * @param currentView The current LView
 * @returns Whether or not the child was appended
 */function appendChild(parent,child,currentView){if(child!==null&&canInsertNativeNode(parent,currentView)){// We only add element if not in View or not projected.
var renderer=currentView.renderer;isProceduralRenderer(renderer)?renderer.appendChild(parent.native,child):parent.native.appendChild(child);return true;}return false;}/**
 * Inserts the provided node before the correct element in the DOM.
 *
 * The element insertion might be delayed {@link canInsertNativeNode}
 *
 * @param node Node to insert
 * @param currentView Current LView
 */function insertChild(node,currentView){var parent=node.parent;if(canInsertNativeNode(parent,currentView)){var nativeSibling=findNextRNodeSibling(node,null);var renderer=currentView.renderer;isProceduralRenderer(renderer)?renderer.insertBefore(parent.native,node.native,nativeSibling):parent.native.insertBefore(node.native,nativeSibling,false);}}/**
 * Appends a projected node to the DOM, or in the case of a projected container,
 * appends the nodes from all of the container's active views to the DOM.
 *
 * @param node The node to process
 * @param currentParent The last parent element to be processed
 * @param currentView Current LView
 */function appendProjectedNode(node,currentParent,currentView){if(node.type!==0/* Container */){appendChild(currentParent,node.native,currentView);}else{// The node we are adding is a Container and we are adding it to Element which
// is not a component (no more re-projection).
// Alternatively a container is projected at the root of a component's template
// and can't be re-projected (as not content of any component).
// Assignee the final projection location in those cases.
var lContainer=node.data;lContainer.renderParent=currentParent;var views=lContainer.views;for(var i=0;i<views.length;i++){addRemoveViewFromContainer(node,views[i],true,null);}}if(node.dynamicLContainerNode){node.dynamicLContainerNode.data.renderParent=currentParent;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function isCssClassMatching(nodeClassAttrVal,cssClassToMatch){var nodeClassesLen=nodeClassAttrVal.length;var matchIndex=nodeClassAttrVal.indexOf(cssClassToMatch);var matchEndIdx=matchIndex+cssClassToMatch.length;if(matchIndex===-1// no match
||matchIndex>0&&nodeClassAttrVal[matchIndex-1]!==' '// no space before
||matchEndIdx<nodeClassesLen&&nodeClassAttrVal[matchEndIdx]!==' '){return false;}return true;}/**
 * A utility function to match an Ivy node static data against a simple CSS selector
 *
 * @param node static data to match
 * @param selector
 * @returns true if node matches the selector.
 */function isNodeMatchingSelector(tNode,selector){ngDevMode&&assertNotNull(selector[0],'Selector should have a tag name');var mode=4;var nodeAttrs=tNode.attrs;// When processing ":not" selectors, we skip to the next ":not" if the
// current one doesn't match
var skipToNextSelector=false;for(var i=0;i<selector.length;i++){var current=selector[i];if(typeof current==='number'){// If we finish processing a :not selector and it hasn't failed, return false
if(!skipToNextSelector&&!isPositive(mode)&&!isPositive(current)){return false;}// If we are skipping to the next :not() and this mode flag is positive,
// it's a part of the current :not() selector, and we should keep skipping
if(skipToNextSelector&&isPositive(current))continue;skipToNextSelector=false;mode=current|mode&1/* NOT */;continue;}if(skipToNextSelector)continue;if(mode&4/* ELEMENT */){mode=2/* ATTRIBUTE */|mode&1/* NOT */;if(current!==''&&current!==tNode.tagName){if(isPositive(mode))return false;skipToNextSelector=true;}}else{var attrName=mode&8/* CLASS */?'class':current;var attrIndexInNode=findAttrIndexInNode(attrName,nodeAttrs);if(attrIndexInNode===-1){if(isPositive(mode))return false;skipToNextSelector=true;continue;}var selectorAttrValue=mode&8/* CLASS */?current:selector[++i];if(selectorAttrValue!==''){var nodeAttrValue=nodeAttrs[attrIndexInNode+1];if(mode&8/* CLASS */&&!isCssClassMatching(nodeAttrValue,selectorAttrValue)||mode&2/* ATTRIBUTE */&&selectorAttrValue!==nodeAttrValue){if(isPositive(mode))return false;skipToNextSelector=true;}}}}return isPositive(mode)||skipToNextSelector;}function isPositive(mode){return(mode&1/* NOT */)===0;}function findAttrIndexInNode(name,attrs){if(attrs===null)return-1;for(var i=0;i<attrs.length;i+=2){if(attrs[i]===name)return i;}return-1;}function isNodeMatchingSelectorList(tNode,selector){for(var i=0;i<selector.length;i++){if(isNodeMatchingSelector(tNode,selector[i])){return true;}}return false;}function getProjectAsAttrValue(tNode){var nodeAttrs=tNode.attrs;if(nodeAttrs!=null){var ngProjectAsAttrIdx=nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);// only check for ngProjectAs in attribute names, don't accidentally match attribute's value
// (attribute names are stored at even indexes)
if((ngProjectAsAttrIdx&1)===0){return nodeAttrs[ngProjectAsAttrIdx+1];}}return null;}/**
 * Checks a given node against matching selectors and returns
 * selector index (or 0 if none matched).
 *
 * This function takes into account the ngProjectAs attribute: if present its value will be compared
 * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.
 */function matchingSelectorIndex(tNode,selectors,textSelectors){var ngProjectAsAttrVal=getProjectAsAttrValue(tNode);for(var i=0;i<selectors.length;i++){// if a node has the ngProjectAs attribute match it against unparsed selector
// match a node against a parsed selector only if ngProjectAs attribute is not present
if(ngProjectAsAttrVal===textSelectors[i]||ngProjectAsAttrVal===null&&isNodeMatchingSelectorList(tNode,selectors[i])){return i+1;// first matching selector "captures" a given node
}}return 0;}/** Called when directives inject each other (creating a circular dependency) */function throwCyclicDependencyError(token){throw new Error("Cannot instantiate cyclic dependency! "+token);}/** Called when there are multiple component selectors that match a given node */function throwMultipleComponentError(tNode){throw new Error("Multiple components match node with tagname "+tNode.tagName);}/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */function throwErrorIfNoChangesMode(creationMode,checkNoChangesMode,oldValue,currValue){if(checkNoChangesMode){var msg="ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '"+oldValue+"'. Current value: '"+currValue+"'.";if(creationMode){msg+=" It seems like the view has been created after its parent and its children have been dirty checked."+" Has it been created in a change detection hook ?";}// TODO: include debug context
throw new Error(msg);}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Directive (D) sets a property on all component instances using this constant as a key and the
 * component's host node (LElement) as the value. This is used in methods like detectChanges to
 * facilitate jumping from an instance to the host node.
 */var NG_HOST_SYMBOL='__ngHostLNode__';/**
 * A permanent marker promise which signifies that the current CD tree is
 * clean.
 */var _CLEAN_PROMISE=Promise.resolve(null);/**
 * Directive and element indices for top-level directive.
 *
 * Saved here to avoid re-instantiating an array on every change detection run.
 */var _ROOT_DIRECTIVE_INDICES=[0,0];/**
 * Token set in currentMatches while dependencies are being resolved.
 *
 * If we visit a directive that has a value set to CIRCULAR, we know we've
 * already seen it, and thus have a circular dependency.
 */var CIRCULAR$2='__CIRCULAR__';/**
 * This property gets set before entering a template.
 *
 * This renderer can be one of two varieties of Renderer3:
 *
 * - ObjectedOrientedRenderer3
 *
 * This is the native browser API style, e.g. operations are methods on individual objects
 * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload
 * size).
 *
 * - ProceduralRenderer3
 *
 * In non-native browser environments (e.g. platforms such as web-workers), this is the facade
 * that enables element manipulation. This also facilitates backwards compatibility with
 * Renderer2.
 */var renderer;var rendererFactory;function getRenderer(){// top level variables should not be exported for performance reason (PERF_NOTES.md)
return renderer;}/** Used to set the parent property when nodes are created. */var previousOrParentNode;function getPreviousOrParentNode(){// top level variables should not be exported for performance reason (PERF_NOTES.md)
return previousOrParentNode;}/**
 * If `isParent` is:
 *  - `true`: then `previousOrParentNode` points to a parent node.
 *  - `false`: then `previousOrParentNode` points to previous node (sibling).
 */var isParent;/**
 * Static data that corresponds to the instance-specific data array on an LView.
 *
 * Each node's static data is stored in tData at the same index that it's stored
 * in the data array. Any nodes that do not have static data store a null value in
 * tData to avoid a sparse array.
 */var tData;/**
 * State of the current view being processed.
 *
 * NOTE: we cheat here and initialize it to `null` even thought the type does not
 * contain `null`. This is because we expect this value to be not `null` as soon
 * as we enter the view. Declaring the type as `null` would require us to place `!`
 * in most instructions since they all assume that `currentView` is defined.
 */var currentView=null;var currentQueries;function getCurrentQueries(QueryType){// top level variables should not be exported for performance reason (PERF_NOTES.md)
return currentQueries||(currentQueries=new QueryType());}/**
 * This property gets set before entering a template.
 */var creationMode;function getCreationMode(){// top level variables should not be exported for performance reason (PERF_NOTES.md)
return creationMode;}/**
 * An array of nodes (text, element, container, etc), pipes, their bindings, and
 * any local variables that need to be stored between invocations.
 */var data;/**
 * An array of directive instances in the current view.
 *
 * These must be stored separately from LNodes because their presence is
 * unknown at compile-time and thus space cannot be reserved in data[].
 */var directives;/**
 * When a view is destroyed, listeners need to be released and outputs need to be
 * unsubscribed. This cleanup array stores both listener data (in chunks of 4)
 * and output data (in chunks of 2) for a particular view. Combining the arrays
 * saves on memory (70 bytes per array) and on a few bytes of code size (for two
 * separate for loops).
 *
 * If it's a listener being stored:
 * 1st index is: event name to remove
 * 2nd index is: native element
 * 3rd index is: listener function
 * 4th index is: useCapture boolean
 *
 * If it's an output subscription:
 * 1st index is: unsubscribe function
 * 2nd index is: context for function
 */var cleanup;/**
 * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.
 *
 * Necessary to support ChangeDetectorRef.checkNoChanges().
 */var checkNoChangesMode=false;/** Whether or not this is the first time the current view has been processed. */var firstTemplatePass=true;/**
 * Swap the current state with a new state.
 *
 * For performance reasons we store the state in the top level of the module.
 * This way we minimize the number of properties to read. Whenever a new view
 * is entered we have to store the state for later, and when the view is
 * exited the state has to be restored
 *
 * @param newView New state to become active
 * @param host Element to which the View is a child of
 * @returns the previous state;
 */function enterView(newView,host){var oldView=currentView;data=newView&&newView.data;directives=newView&&newView.directives;tData=newView&&newView.tView.data;creationMode=newView&&(newView.flags&1/* CreationMode */)===1/* CreationMode */;firstTemplatePass=newView&&newView.tView.firstTemplatePass;cleanup=newView&&newView.cleanup;renderer=newView&&newView.renderer;if(newView&&newView.bindingIndex<0){newView.bindingIndex=newView.bindingStartIndex;}if(host!=null){previousOrParentNode=host;isParent=true;}currentView=newView;currentQueries=newView&&newView.queries;return oldView;}/**
 * Used in lieu of enterView to make it clear when we are exiting a child view. This makes
 * the direction of traversal (up or down the view tree) a bit clearer.
 */function leaveView(newView){if(!checkNoChangesMode){executeHooks(directives,currentView.tView.viewHooks,currentView.tView.viewCheckHooks,creationMode);}// Views should be clean and in update mode after being checked, so these bits are cleared
currentView.flags&=~(1/* CreationMode */|4/* Dirty */);currentView.lifecycleStage=1/* Init */;currentView.bindingIndex=-1;enterView(newView,null);}/**  Refreshes directives in this view and triggers any init/content hooks.  */function refreshDirectives(){executeInitAndContentHooks();var tView=currentView.tView;// This needs to be set before children are processed to support recursive components
tView.firstTemplatePass=firstTemplatePass=false;setHostBindings(tView.hostBindings);refreshChildComponents(tView.components);}/** Sets the host bindings for the current view. */function setHostBindings(bindings){if(bindings!=null){var defs=currentView.tView.directives;for(var i=0;i<bindings.length;i+=2){var dirIndex=bindings[i];var def=defs[dirIndex];def.hostBindings&&def.hostBindings(dirIndex,bindings[i+1]);}}}/** Refreshes child components in the current view. */function refreshChildComponents(components){if(components!=null){for(var i=0;i<components.length;i+=2){componentRefresh(components[i],components[i+1]);}}}function executeInitAndContentHooks(){if(!checkNoChangesMode){var tView=currentView.tView;executeInitHooks(currentView,tView,creationMode);executeHooks(directives,tView.contentHooks,tView.contentCheckHooks,creationMode);}}function createLView(viewId,renderer,tView,template,context,flags){var newView={parent:currentView,id:viewId,// -1 for component views
flags:flags|1/* CreationMode */|8/* Attached */,node:null,// until we initialize it in createNode.
data:[],directives:null,tView:tView,cleanup:null,renderer:renderer,child:null,tail:null,next:null,bindingStartIndex:-1,bindingIndex:-1,template:template,context:context,dynamicViewCount:0,lifecycleStage:1/* Init */,queries:null,injector:currentView&&currentView.injector};return newView;}/**
 * Creation of LNode object is extracted to a separate function so we always create LNode object
 * with the same shape
 * (same properties assigned in the same order).
 */function createLNodeObject(type,currentView,parent,native,state,queries){return{type:type,native:native,view:currentView,parent:parent,child:null,next:null,nodeInjector:parent?parent.nodeInjector:null,data:state,queries:queries,tNode:null,pNextOrParent:null,dynamicLContainerNode:null};}function createLNode(index,type,native,state){var parent=isParent?previousOrParentNode:previousOrParentNode&&previousOrParentNode.parent;var queries=(isParent?currentQueries:previousOrParentNode&&previousOrParentNode.queries)||parent&&parent.queries&&parent.queries.child();var isState=state!=null;var node=createLNodeObject(type,currentView,parent,native,isState?state:null,queries);if((type&2/* ViewOrElement */)===2/* ViewOrElement */&&isState){// Bit of a hack to bust through the readonly because there is a circular dep between
// LView and LNode.
ngDevMode&&assertNull(state.node,'LView.node should not have been initialized');state.node=node;}if(index!=null){// We are Element or Container
ngDevMode&&assertDataNext(index);data[index]=node;// Every node adds a value to the static data array to avoid a sparse array
if(index>=tData.length){tData[index]=null;}else{node.tNode=tData[index];}// Now link ourselves into the tree.
if(isParent){currentQueries=null;if(previousOrParentNode.view===currentView||previousOrParentNode.type===2/* View */){// We are in the same view, which means we are adding content node to the parent View.
ngDevMode&&assertNull(previousOrParentNode.child,"previousOrParentNode's child should not have been set.");previousOrParentNode.child=node;}else{// We are adding component view, so we don't link parent node child to this node.
}}else if(previousOrParentNode){ngDevMode&&assertNull(previousOrParentNode.next,"previousOrParentNode's next property should not have been set "+index+".");previousOrParentNode.next=node;if(previousOrParentNode.dynamicLContainerNode){previousOrParentNode.dynamicLContainerNode.next=node;}}}previousOrParentNode=node;isParent=true;return node;}/**
 * Resets the application state.
 */function resetApplicationState(){isParent=false;previousOrParentNode=null;}/**
 *
 * @param hostNode Existing node to render into.
 * @param template Template function with the instructions.
 * @param context to pass into the template.
 * @param providedRendererFactory renderer factory to use
 * @param host The host element node to use
 * @param directives Directive defs that should be used for matching
 * @param pipes Pipe defs that should be used for matching
 */function renderEmbeddedTemplate(viewNode,template,context,renderer,directives,pipes){var _isParent=isParent;var _previousOrParentNode=previousOrParentNode;var oldView;try{isParent=true;previousOrParentNode=null;var rf=2;if(viewNode==null){var tView=getOrCreateTView(template,directives||null,pipes||null);var lView=createLView(-1,renderer,tView,template,context,2/* CheckAlways */);viewNode=createLNode(null,2/* View */,null,lView);rf=1/* Create */;}oldView=enterView(viewNode.data,viewNode);template(rf,context);refreshDirectives();refreshDynamicChildren();}finally{leaveView(oldView);isParent=_isParent;previousOrParentNode=_previousOrParentNode;}return viewNode;}function renderComponentOrTemplate(node,hostView,componentOrContext,template){var oldView=enterView(hostView,node);try{if(rendererFactory.begin){rendererFactory.begin();}if(template){template(getRenderFlags(hostView),componentOrContext);refreshDynamicChildren();refreshDirectives();}else{executeInitAndContentHooks();// Element was stored at 0 in data and directive was stored at 0 in directives
// in renderComponent()
setHostBindings(_ROOT_DIRECTIVE_INDICES);componentRefresh(0,0);}}finally{if(rendererFactory.end){rendererFactory.end();}leaveView(oldView);}}/**
 * This function returns the default configuration of rendering flags depending on when the
 * template is in creation mode or update mode. By default, the update block is run with the
 * creation block when the view is in creation mode. Otherwise, the update block is run
 * alone.
 *
 * Dynamically created views do NOT use this configuration (update block and create block are
 * always run separately).
 */function getRenderFlags(view){return view.flags&1/* CreationMode */?1/* Create */|2/* Update */:2/* Update */;}/**
 * Create DOM element. The instruction must later be followed by `elementEnd()` call.
 *
 * @param index Index of the element in the data array
 * @param name Name of the DOM Node
 * @param attrs Statically bound set of attributes to be written into the DOM element on creation.
 * @param localRefs A set of local reference bindings on the element.
 *
 * Attributes and localRefs are passed as an array of strings where elements with an even index
 * hold an attribute name and elements with an odd index hold an attribute value, ex.:
 * ['id', 'warning5', 'class', 'alert']
 */function elementStart(index,name,attrs,localRefs){ngDevMode&&assertEqual(currentView.bindingStartIndex,-1,'elements should be created before any bindings');var native=renderer.createElement(name);var node=createLNode(index,3/* Element */,native,null);if(attrs)setUpAttributes(native,attrs);appendChild(node.parent,native,currentView);createDirectivesAndLocals(index,name,attrs,localRefs,null);return native;}function createDirectivesAndLocals(index,name,attrs,localRefs,containerData){var node=previousOrParentNode;if(firstTemplatePass){ngDevMode&&assertDataInRange(index-1);node.tNode=tData[index]=createTNode(name,attrs||null,containerData);cacheMatchingDirectivesForNode(node.tNode,currentView.tView,localRefs||null);}else{instantiateDirectivesDirectly();}saveResolvedLocalsInData();}/**
 * On first template pass, we match each node against available directive selectors and save
 * the resulting defs in the correct instantiation order for subsequent change detection runs
 * (so dependencies are always created before the directives that inject them).
 */function cacheMatchingDirectivesForNode(tNode,tView,localRefs){// Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.
var exportsMap=localRefs?{'':-1}:null;var matches=tView.currentMatches=findDirectiveMatches(tNode);if(matches){for(var i=0;i<matches.length;i+=2){var def=matches[i];var valueIndex=i+1;resolveDirective(def,valueIndex,matches,tView);saveNameToExportMap(matches[valueIndex],def,exportsMap);}}if(exportsMap)cacheMatchingLocalNames(tNode,localRefs,exportsMap);}/** Matches the current node against all available selectors. */function findDirectiveMatches(tNode){var registry=currentView.tView.directiveRegistry;var matches=null;if(registry){for(var i=0;i<registry.length;i++){var def=registry[i];if(isNodeMatchingSelectorList(tNode,def.selectors)){if(def.template){if(tNode.flags&4096/* isComponent */)throwMultipleComponentError(tNode);tNode.flags=4096/* isComponent */;}if(def.diPublic)def.diPublic(def);(matches||(matches=[])).push(def,null);}}}return matches;}function resolveDirective(def,valueIndex,matches,tView){if(matches[valueIndex]===null){matches[valueIndex]=CIRCULAR$2;var instance=def.factory();(tView.directives||(tView.directives=[])).push(def);return directiveCreate(matches[valueIndex]=tView.directives.length-1,instance,def);}else if(matches[valueIndex]===CIRCULAR$2){// If we revisit this directive before it's resolved, we know it's circular
throwCyclicDependencyError(def.type);}return null;}/** Stores index of component's host element so it will be queued for view refresh during CD. */function queueComponentIndexForCheck(dirIndex){if(firstTemplatePass){(currentView.tView.components||(currentView.tView.components=[])).push(dirIndex,data.length-1);}}/** Stores index of directive and host element so it will be queued for binding refresh during CD.
 */function queueHostBindingForCheck(dirIndex){ngDevMode&&assertEqual(firstTemplatePass,true,'Should only be called in first template pass.');(currentView.tView.hostBindings||(currentView.tView.hostBindings=[])).push(dirIndex,data.length-1);}/** Sets the context for a ChangeDetectorRef to the given instance. */function initChangeDetectorIfExisting(injector,instance,view){if(injector&&injector.changeDetectorRef!=null){injector.changeDetectorRef._setComponentContext(view,instance);}}function isComponent(tNode){return(tNode.flags&4096/* isComponent */)===4096/* isComponent */;}/**
 * This function instantiates the given directives.
 */function instantiateDirectivesDirectly(){var tNode=previousOrParentNode.tNode;var count=tNode.flags&4095;if(count>0){var start=tNode.flags>>13;var end=start+count;var tDirectives=currentView.tView.directives;for(var i=start;i<end;i++){var def=tDirectives[i];directiveCreate(i,def.factory(),def);}}}/** Caches local names and their matching directive indices for query and template lookups. */function cacheMatchingLocalNames(tNode,localRefs,exportsMap){if(localRefs){var localNames=tNode.localNames=[];// Local names must be stored in tNode in the same order that localRefs are defined
// in the template to ensure the data is loaded in the same slots as their refs
// in the template (for template queries).
for(var i=0;i<localRefs.length;i+=2){var index=exportsMap[localRefs[i+1]];if(index==null)throw new Error("Export of name '"+localRefs[i+1]+"' not found!");localNames.push(localRefs[i],index);}}}/**
 * Builds up an export map as directives are created, so local refs can be quickly mapped
 * to their directive instances.
 */function saveNameToExportMap(index,def,exportsMap){if(exportsMap){if(def.exportAs)exportsMap[def.exportAs]=index;if(def.template)exportsMap['']=index;}}/**
 * Takes a list of local names and indices and pushes the resolved local variable values
 * to data[] in the same order as they are loaded in the template with load().
 */function saveResolvedLocalsInData(){var localNames=previousOrParentNode.tNode.localNames;if(localNames){for(var i=0;i<localNames.length;i+=2){var index=localNames[i+1];var value=index===-1?previousOrParentNode.native:directives[index];data.push(value);}}}/**
 * Gets TView from a template function or creates a new TView
 * if it doesn't already exist.
 *
 * @param template The template from which to get static data
 * @param directives Directive defs that should be saved on TView
 * @param pipes Pipe defs that should be saved on TView
 * @returns TView
 */function getOrCreateTView(template,directives,pipes){return template.ngPrivateData||(template.ngPrivateData=createTView(directives,pipes));}/** Creates a TView instance */function createTView(defs,pipes){return{data:[],directives:null,firstTemplatePass:true,initHooks:null,checkHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,pipeDestroyHooks:null,hostBindings:null,components:null,directiveRegistry:typeof defs==='function'?defs():defs,pipeRegistry:typeof pipes==='function'?pipes():pipes,currentMatches:null};}function setUpAttributes(native,attrs){ngDevMode&&assertEqual(attrs.length%2,0,'each attribute should have a key and a value');var isProc=isProceduralRenderer(renderer);for(var i=0;i<attrs.length;i+=2){var attrName=attrs[i];if(attrName!==NG_PROJECT_AS_ATTR_NAME){var attrVal=attrs[i+1];isProc?renderer.setAttribute(native,attrName,attrVal):native.setAttribute(attrName,attrVal);}}}function createError(text,token){return new Error("Renderer: "+text+" ["+stringify$1(token)+"]");}/**
 * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.
 *
 * @param elementOrSelector Render element or CSS selector to locate the element.
 */function locateHostElement(factory,elementOrSelector){ngDevMode&&assertDataInRange(-1);rendererFactory=factory;var defaultRenderer=factory.createRenderer(null,null);var rNode=typeof elementOrSelector==='string'?isProceduralRenderer(defaultRenderer)?defaultRenderer.selectRootElement(elementOrSelector):defaultRenderer.querySelector(elementOrSelector):elementOrSelector;if(ngDevMode&&!rNode){if(typeof elementOrSelector==='string'){throw createError('Host node with selector not found:',elementOrSelector);}else{throw createError('Host node is required:',elementOrSelector);}}return rNode;}/**
 * Creates the host LNode.
 *
 * @param rNode Render host element.
 * @param def ComponentDef
 *
 * @returns LElementNode created
 */function hostElement(tag,rNode,def){resetApplicationState();var node=createLNode(0,3/* Element */,rNode,createLView(-1,renderer,getOrCreateTView(def.template,def.directiveDefs,def.pipeDefs),null,null,def.onPush?4/* Dirty */:2/* CheckAlways */));if(firstTemplatePass){node.tNode=createTNode(tag,null,null);node.tNode.flags=4096/* isComponent */;if(def.diPublic)def.diPublic(def);currentView.tView.directives=[def];}return node;}/**
 * Adds an event listener to the current node.
 *
 * If an output exists on one of the node's directives, it also subscribes to the output
 * and saves the subscription for later cleanup.
 *
 * @param eventName Name of the event
 * @param listenerFn The function to be called when event emits
 * @param useCapture Whether or not to use capture in event listener.
 */function listener(eventName,listenerFn,useCapture){if(useCapture===void 0){useCapture=false;}ngDevMode&&assertPreviousIsParent();var node=previousOrParentNode;var native=node.native;// In order to match current behavior, native DOM event listeners must be added for all
// events (including outputs).
var cleanupFns=cleanup||(cleanup=currentView.cleanup=[]);if(isProceduralRenderer(renderer)){var wrappedListener=wrapListenerWithDirtyLogic(currentView,listenerFn);var cleanupFn=renderer.listen(native,eventName,wrappedListener);cleanupFns.push(cleanupFn,null);}else{var wrappedListener=wrapListenerWithDirtyAndDefault(currentView,listenerFn);native.addEventListener(eventName,wrappedListener,useCapture);cleanupFns.push(eventName,native,wrappedListener,useCapture);}var tNode=node.tNode;if(tNode.outputs===undefined){// if we create TNode here, inputs must be undefined so we know they still need to be
// checked
tNode.outputs=generatePropertyAliases(node.tNode.flags,1/* Output */);}var outputs=tNode.outputs;var outputData;if(outputs&&(outputData=outputs[eventName])){createOutput(outputData,listenerFn);}}/**
 * Iterates through the outputs associated with a particular event name and subscribes to
 * each output.
 */function createOutput(outputs,listener){for(var i=0;i<outputs.length;i+=2){ngDevMode&&assertDataInRange(outputs[i],directives);var subscription=directives[outputs[i]][outputs[i+1]].subscribe(listener);cleanup.push(subscription.unsubscribe,subscription);}}/** Mark the end of the element. */function elementEnd(){if(isParent){isParent=false;}else{ngDevMode&&assertHasParent();previousOrParentNode=previousOrParentNode.parent;}ngDevMode&&assertNodeType(previousOrParentNode,3/* Element */);var queries=previousOrParentNode.queries;queries&&queries.addNode(previousOrParentNode);queueLifecycleHooks(previousOrParentNode.tNode.flags,currentView);}/**
 * Updates the value of removes an attribute on an Element.
 *
 * @param number index The index of the element in the data array
 * @param name name The name of the attribute.
 * @param value value The attribute is removed when value is `null` or `undefined`.
 *                  Otherwise the attribute value is set to the stringified value.
 * @param sanitizer An optional function used to sanitize the value.
 */function elementAttribute(index,name,value,sanitizer){if(value!==NO_CHANGE){var element=data[index];if(value==null){isProceduralRenderer(renderer)?renderer.removeAttribute(element.native,name):element.native.removeAttribute(name);}else{var strValue=sanitizer==null?stringify$1(value):sanitizer(value);isProceduralRenderer(renderer)?renderer.setAttribute(element.native,name,strValue):element.native.setAttribute(name,strValue);}}}/**
 * Update a property on an Element.
 *
 * If the property name also exists as an input property on one of the element's directives,
 * the component property will be set instead of the element property. This check must
 * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.
 *
 * @param index The index of the element to update in the data array
 * @param propName Name of property. Because it is going to DOM, this is not subject to
 *        renaming as part of minification.
 * @param value New value to write.
 * @param sanitizer An optional function used to sanitize the value.
 */function elementProperty(index,propName,value,sanitizer){if(value===NO_CHANGE)return;var node=data[index];var tNode=node.tNode;// if tNode.inputs is undefined, a listener has created outputs, but inputs haven't
// yet been checked
if(tNode&&tNode.inputs===undefined){// mark inputs as checked
tNode.inputs=generatePropertyAliases(node.tNode.flags,0/* Input */);}var inputData=tNode&&tNode.inputs;var dataValue;if(inputData&&(dataValue=inputData[propName])){setInputsForProperty(dataValue,value);markDirtyIfOnPush(node);}else{// It is assumed that the sanitizer is only added when the compiler determines that the property
// is risky, so sanitization can be done without further checks.
value=sanitizer!=null?sanitizer(value):value;var native=node.native;isProceduralRenderer(renderer)?renderer.setProperty(native,propName,value):native.setProperty?native.setProperty(propName,value):native[propName]=value;}}/**
 * Constructs a TNode object from the arguments.
 *
 * @param tagName
 * @param attrs
 * @param data
 * @param localNames A list of local names and their matching indices
 * @returns the TNode object
 */function createTNode(tagName,attrs,data){return{flags:0,tagName:tagName,attrs:attrs,localNames:null,initialInputs:undefined,inputs:undefined,outputs:undefined,data:data};}/**
 * Given a list of directive indices and minified input names, sets the
 * input properties on the corresponding directives.
 */function setInputsForProperty(inputs,value){for(var i=0;i<inputs.length;i+=2){ngDevMode&&assertDataInRange(inputs[i],directives);directives[inputs[i]][inputs[i+1]]=value;}}/**
 * Consolidates all inputs or outputs of all directives on this logical node.
 *
 * @param number lNodeFlags logical node flags
 * @param Direction direction whether to consider inputs or outputs
 * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise
 */function generatePropertyAliases(tNodeFlags,direction){var count=tNodeFlags&4095;var propStore=null;if(count>0){var start=tNodeFlags>>13;var end=start+count;var isInput=direction===0;var defs=currentView.tView.directives;for(var i=start;i<end;i++){var directiveDef=defs[i];var propertyAliasMap=isInput?directiveDef.inputs:directiveDef.outputs;for(var publicName in propertyAliasMap){if(propertyAliasMap.hasOwnProperty(publicName)){propStore=propStore||{};var internalName=propertyAliasMap[publicName];var hasProperty=propStore.hasOwnProperty(publicName);hasProperty?propStore[publicName].push(i,internalName):propStore[publicName]=[i,internalName];}}}}return propStore;}/**
 * Add or remove a class in a `classList` on a DOM element.
 *
 * This instruction is meant to handle the [class.foo]="exp" case
 *
 * @param index The index of the element to update in the data array
 * @param className Name of class to toggle. Because it is going to DOM, this is not subject to
 *        renaming as part of minification.
 * @param value A value indicating if a given class should be added or removed.
 */function elementClassNamed(index,className,value){if(value!==NO_CHANGE){var lElement=data[index];if(value){isProceduralRenderer(renderer)?renderer.addClass(lElement.native,className):lElement.native.classList.add(className);}else{isProceduralRenderer(renderer)?renderer.removeClass(lElement.native,className):lElement.native.classList.remove(className);}}}/**
 * Set the `className` property on a DOM element.
 *
 * This instruction is meant to handle the `[class]="exp"` usage.
 *
 * `elementClass` instruction writes the value to the "element's" `className` property.
 *
 * @param index The index of the element to update in the data array
 * @param value A value indicating a set of classes which should be applied. The method overrides
 *   any existing classes. The value is stringified (`toString`) before it is applied to the
 *   element.
 */function elementClass(index,value){if(value!==NO_CHANGE){// TODO: This is a naive implementation which simply writes value to the `className`. In the
// future
// we will add logic here which would work with the animation code.
var lElement=data[index];isProceduralRenderer(renderer)?renderer.setProperty(lElement.native,'className',value):lElement.native['className']=stringify$1(value);}}function elementStyleNamed(index,styleName,value,suffixOrSanitizer){if(value!==NO_CHANGE){var lElement=data[index];if(value==null){isProceduralRenderer(renderer)?renderer.removeStyle(lElement.native,styleName,RendererStyleFlags3.DashCase):lElement.native['style'].removeProperty(styleName);}else{var strValue=typeof suffixOrSanitizer=='function'?suffixOrSanitizer(value):stringify$1(value);if(typeof suffixOrSanitizer=='string')strValue=strValue+suffixOrSanitizer;isProceduralRenderer(renderer)?renderer.setStyle(lElement.native,styleName,strValue,RendererStyleFlags3.DashCase):lElement.native['style'].setProperty(styleName,strValue);}}}/**
 * Set the `style` property on a DOM element.
 *
 * This instruction is meant to handle the `[style]="exp"` usage.
 *
 *
 * @param index The index of the element to update in the data array
 * @param value A value indicating if a given style should be added or removed.
 *   The expected shape of `value` is an object where keys are style names and the values
 *   are their corresponding values to set. If value is falsy than the style is remove. An absence
 *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be
 *   performed.
 */function elementStyle(index,value){if(value!==NO_CHANGE){// TODO: This is a naive implementation which simply writes value to the `style`. In the future
// we will add logic here which would work with the animation code.
var lElement=data[index];if(isProceduralRenderer(renderer)){renderer.setProperty(lElement.native,'style',value);}else{var style=lElement.native['style'];for(var i=0,keys=Object.keys(value);i<keys.length;i++){var styleName=keys[i];var styleValue=value[styleName];styleValue==null?style.removeProperty(styleName):style.setProperty(styleName,styleValue);}}}}/**
 * Create static text node
 *
 * @param index Index of the node in the data array.
 * @param value Value to write. This value will be stringified.
 *   If value is not provided than the actual creation of the text node is delayed.
 */function text(index,value){ngDevMode&&assertEqual(currentView.bindingStartIndex,-1,'text nodes should be created before bindings');var textNode=value!=null?createTextNode(value,renderer):null;var node=createLNode(index,3/* Element */,textNode);// Text nodes are self closing.
isParent=false;appendChild(node.parent,textNode,currentView);}/**
 * Create text node with binding
 * Bindings should be handled externally with the proper bind(1-8) method
 *
 * @param index Index of the node in the data array.
 * @param value Stringified value to write.
 */function textBinding(index,value){ngDevMode&&assertDataInRange(index);var existingNode=data[index];ngDevMode&&assertNotNull(existingNode,'existing node');if(existingNode.native){// If DOM node exists and value changed, update textContent
value!==NO_CHANGE&&(isProceduralRenderer(renderer)?renderer.setValue(existingNode.native,stringify$1(value)):existingNode.native.textContent=stringify$1(value));}else{// Node was created but DOM node creation was delayed. Create and append now.
existingNode.native=createTextNode(value,renderer);insertChild(existingNode,currentView);}}/**
 * Create a directive.
 *
 * NOTE: directives can be created in order other than the index order. They can also
 *       be retrieved before they are created in which case the value will be null.
 *
 * @param directive The directive instance.
 * @param directiveDef DirectiveDef object which contains information about the template.
 */function directiveCreate(index,directive,directiveDef){var instance=baseDirectiveCreate(index,directive,directiveDef);ngDevMode&&assertNotNull(previousOrParentNode.tNode,'previousOrParentNode.tNode');var tNode=previousOrParentNode.tNode;var isComponent=directiveDef.template;if(isComponent){addComponentLogic(index,directive,directiveDef);}if(firstTemplatePass){// Init hooks are queued now so ngOnInit is called in host components before
// any projected components.
queueInitHooks(index,directiveDef.onInit,directiveDef.doCheck,currentView.tView);if(directiveDef.hostBindings)queueHostBindingForCheck(index);}if(tNode&&tNode.attrs){setInputsFromAttrs(index,instance,directiveDef.inputs,tNode);}return instance;}function addComponentLogic(index,instance,def){var tView=getOrCreateTView(def.template,def.directiveDefs,def.pipeDefs);// Only component views should be added to the view tree directly. Embedded views are
// accessed through their containers because they may be removed / re-added later.
var hostView=addToViewTree(currentView,createLView(-1,rendererFactory.createRenderer(previousOrParentNode.native,def.rendererType),tView,null,null,def.onPush?4/* Dirty */:2/* CheckAlways */));previousOrParentNode.data=hostView;hostView.node=previousOrParentNode;initChangeDetectorIfExisting(previousOrParentNode.nodeInjector,instance,hostView);if(firstTemplatePass)queueComponentIndexForCheck(index);}/**
 * A lighter version of directiveCreate() that is used for the root component
 *
 * This version does not contain features that we don't already support at root in
 * current Angular. Example: local refs and inputs on root component.
 */function baseDirectiveCreate(index,directive,directiveDef){ngDevMode&&assertEqual(currentView.bindingStartIndex,-1,'directives should be created before any bindings');ngDevMode&&assertPreviousIsParent();Object.defineProperty(directive,NG_HOST_SYMBOL,{enumerable:false,value:previousOrParentNode});if(directives==null)currentView.directives=directives=[];ngDevMode&&assertDataNext(index,directives);directives[index]=directive;if(firstTemplatePass){var flags=previousOrParentNode.tNode.flags;if((flags&4095/* DirectiveCountMask */)===0){// When the first directive is created:
// - save the index,
// - set the number of directives to 1
// When the first directive is created:
// - save the index,
// - set the number of directives to 1
previousOrParentNode.tNode.flags=index<<13/* DirectiveStartingIndexShift */|flags&4096/* isComponent */|1;}else{// Only need to bump the size when subsequent directives are created
ngDevMode&&assertNotEqual(flags&4095/* DirectiveCountMask */,4095/* DirectiveCountMask */,'Reached the max number of directives');previousOrParentNode.tNode.flags++;}}else{var diPublic=directiveDef.diPublic;if(diPublic)diPublic(directiveDef);}if(directiveDef.attributes!=null&&previousOrParentNode.type==3/* Element */){setUpAttributes(previousOrParentNode.native,directiveDef.attributes);}return directive;}/**
 * Sets initial input properties on directive instances from attribute data
 *
 * @param directiveIndex Index of the directive in directives array
 * @param instance Instance of the directive on which to set the initial inputs
 * @param inputs The list of inputs from the directive def
 * @param tNode The static data for this node
 */function setInputsFromAttrs(directiveIndex,instance,inputs,tNode){var initialInputData=tNode.initialInputs;if(initialInputData===undefined||directiveIndex>=initialInputData.length){initialInputData=generateInitialInputs(directiveIndex,inputs,tNode);}var initialInputs=initialInputData[directiveIndex];if(initialInputs){for(var i=0;i<initialInputs.length;i+=2){instance[initialInputs[i]]=initialInputs[i+1];}}}/**
 * Generates initialInputData for a node and stores it in the template's static storage
 * so subsequent template invocations don't have to recalculate it.
 *
 * initialInputData is an array containing values that need to be set as input properties
 * for directives on this node, but only once on creation. We need this array to support
 * the case where you set an @Input property of a directive using attribute-like syntax.
 * e.g. if you have a `name` @Input, you can set it once like this:
 *
 * <my-component name="Bess"></my-component>
 *
 * @param directiveIndex Index to store the initial input data
 * @param inputs The list of inputs from the directive def
 * @param tNode The static data on this node
 */function generateInitialInputs(directiveIndex,inputs,tNode){var initialInputData=tNode.initialInputs||(tNode.initialInputs=[]);initialInputData[directiveIndex]=null;var attrs=tNode.attrs;for(var i=0;i<attrs.length;i+=2){var attrName=attrs[i];var minifiedInputName=inputs[attrName];if(minifiedInputName!==undefined){var inputsToStore=initialInputData[directiveIndex]||(initialInputData[directiveIndex]=[]);inputsToStore.push(minifiedInputName,attrs[i+1]);}}return initialInputData;}function createLContainer(parentLNode,currentView,template){ngDevMode&&assertNotNull(parentLNode,'containers should have a parent');return{views:[],nextIndex:0,// If the direct parent of the container is a view, its views will need to be added
// through insertView() when its parent view is being inserted:
renderParent:canInsertNativeNode(parentLNode,currentView)?parentLNode:null,template:template==null?null:template,next:null,parent:currentView,dynamicViewCount:0,queries:null};}/**
 * Creates an LContainerNode.
 *
 * Only `LViewNodes` can go into `LContainerNodes`.
 *
 * @param index The index of the container in the data array
 * @param template Optional inline template
 * @param tagName The name of the container element, if applicable
 * @param attrs The attrs attached to the container, if applicable
 * @param localRefs A set of local reference bindings on the element.
 */function container(index,template,tagName,attrs,localRefs){ngDevMode&&assertEqual(currentView.bindingStartIndex,-1,'container nodes should be created before any bindings');var currentParent=isParent?previousOrParentNode:previousOrParentNode.parent;var lContainer=createLContainer(currentParent,currentView,template);var node=createLNode(index,0/* Container */,undefined,lContainer);// Containers are added to the current view tree instead of their embedded views
// because views can be removed and re-inserted.
addToViewTree(currentView,node.data);createDirectivesAndLocals(index,tagName||null,attrs,localRefs,[]);isParent=false;ngDevMode&&assertNodeType(previousOrParentNode,0/* Container */);var queries=node.queries;if(queries){// check if a given container node matches
queries.addNode(node);// prepare place for matching nodes from views inserted into a given container
lContainer.queries=queries.container();}}/**
 * Sets a container up to receive views.
 *
 * @param index The index of the container in the data array
 */function containerRefreshStart(index){ngDevMode&&assertDataInRange(index);previousOrParentNode=data[index];ngDevMode&&assertNodeType(previousOrParentNode,0/* Container */);isParent=true;previousOrParentNode.data.nextIndex=0;ngDevMode&&assertSame(previousOrParentNode.native,undefined,"the container's native element should not have been set yet.");if(!checkNoChangesMode){// We need to execute init hooks here so ngOnInit hooks are called in top level views
// before they are called in embedded views (for backwards compatibility).
executeInitHooks(currentView,currentView.tView,creationMode);}}/**
 * Marks the end of the LContainerNode.
 *
 * Marking the end of LContainerNode is the time when to child Views get inserted or removed.
 */function containerRefreshEnd(){if(isParent){isParent=false;}else{ngDevMode&&assertNodeType(previousOrParentNode,2/* View */);ngDevMode&&assertHasParent();previousOrParentNode=previousOrParentNode.parent;}ngDevMode&&assertNodeType(previousOrParentNode,0/* Container */);var container=previousOrParentNode;container.native=undefined;ngDevMode&&assertNodeType(container,0/* Container */);var nextIndex=container.data.nextIndex;// remove extra views at the end of the container
while(nextIndex<container.data.views.length){removeView(container,nextIndex);}}function refreshDynamicChildren(){for(var current=currentView.child;current!==null;current=current.next){if(current.dynamicViewCount!==0&&current.views){var container_1=current;for(var i=0;i<container_1.views.length;i++){var view=container_1.views[i];// The directives and pipes are not needed here as an existing view is only being refreshed.
renderEmbeddedTemplate(view,view.data.template,view.data.context,renderer);}}}}/**
 * Looks for a view with a given view block id inside a provided LContainer.
 * Removes views that need to be deleted in the process.
 *
 * @param containerNode where to search for views
 * @param startIdx starting index in the views array to search from
 * @param viewBlockId exact view block id to look for
 * @returns index of a found view or -1 if not found
 */function scanForView(containerNode,startIdx,viewBlockId){var views=containerNode.data.views;for(var i=startIdx;i<views.length;i++){var viewAtPositionId=views[i].data.id;if(viewAtPositionId===viewBlockId){return views[i];}else if(viewAtPositionId<viewBlockId){// found a view that should not be at this position - remove
removeView(containerNode,i);}else{// found a view with id grater than the one we are searching for
// which means that required view doesn't exist and can't be found at
// later positions in the views array - stop the search here
break;}}return null;}/**
 * Marks the start of an embedded view.
 *
 * @param viewBlockId The ID of this view
 * @return boolean Whether or not this view is in creation mode
 */function embeddedViewStart(viewBlockId){var container=isParent?previousOrParentNode:previousOrParentNode.parent;ngDevMode&&assertNodeType(container,0/* Container */);var lContainer=container.data;var viewNode=scanForView(container,lContainer.nextIndex,viewBlockId);if(viewNode){previousOrParentNode=viewNode;ngDevMode&&assertNodeType(previousOrParentNode,2/* View */);isParent=true;enterView(viewNode.data,viewNode);}else{// When we create a new LView, we always reset the state of the instructions.
var newView=createLView(viewBlockId,renderer,getOrCreateEmbeddedTView(viewBlockId,container),null,null,2/* CheckAlways */);if(lContainer.queries){newView.queries=lContainer.queries.enterView(lContainer.nextIndex);}enterView(newView,viewNode=createLNode(null,2/* View */,null,newView));}return getRenderFlags(viewNode.data);}/**
 * Initialize the TView (e.g. static data) for the active embedded view.
 *
 * Each embedded view needs to set the global tData variable to the static data for
 * that view. Otherwise, the view's static data for a particular node would overwrite
 * the static data for a node in the view above it with the same index (since it's in the
 * same template).
 *
 * @param viewIndex The index of the TView in TContainer
 * @param parent The parent container in which to look for the view's static data
 * @returns TView
 */function getOrCreateEmbeddedTView(viewIndex,parent){ngDevMode&&assertNodeType(parent,0/* Container */);var tContainer=parent.tNode.data;if(viewIndex>=tContainer.length||tContainer[viewIndex]==null){var tView=currentView.tView;tContainer[viewIndex]=createTView(tView.directiveRegistry,tView.pipeRegistry);}return tContainer[viewIndex];}/** Marks the end of an embedded view. */function embeddedViewEnd(){refreshDirectives();isParent=false;var viewNode=previousOrParentNode=currentView.node;var containerNode=previousOrParentNode.parent;if(containerNode){ngDevMode&&assertNodeType(viewNode,2/* View */);ngDevMode&&assertNodeType(containerNode,0/* Container */);var lContainer=containerNode.data;if(creationMode){// When projected nodes are going to be inserted, the renderParent of the dynamic container
// used by the ViewContainerRef must be set.
setRenderParentInProjectedNodes(lContainer.renderParent,viewNode);// it is a new view, insert it into collection of views for a given container
insertView(containerNode,viewNode,lContainer.nextIndex);}lContainer.nextIndex++;}leaveView(currentView.parent);ngDevMode&&assertEqual(isParent,false,'isParent');ngDevMode&&assertNodeType(previousOrParentNode,2/* View */);}/**
 * For nodes which are projected inside an embedded view, this function sets the renderParent
 * of their dynamic LContainerNode.
 * @param renderParent the renderParent of the LContainer which contains the embedded view.
 * @param viewNode the embedded view.
 */function setRenderParentInProjectedNodes(renderParent,viewNode){if(renderParent!=null){var node=viewNode.child;while(node){if(node.type===1/* Projection */){var nodeToProject=node.data.head;var lastNodeToProject=node.data.tail;while(nodeToProject){if(nodeToProject.dynamicLContainerNode){nodeToProject.dynamicLContainerNode.data.renderParent=renderParent;}nodeToProject=nodeToProject===lastNodeToProject?null:nodeToProject.pNextOrParent;}}node=node.next;}}}/**
 * Refreshes components by entering the component view and processing its bindings, queries, etc.
 *
 * @param directiveIndex
 * @param elementIndex
 */function componentRefresh(directiveIndex,elementIndex){ngDevMode&&assertDataInRange(elementIndex);var element=data[elementIndex];ngDevMode&&assertNodeType(element,3/* Element */);ngDevMode&&assertNotNull(element.data,"Component's host node should have an LView attached.");var hostView=element.data;// Only attached CheckAlways components or attached, dirty OnPush components should be checked
if(viewAttached(hostView)&&hostView.flags&(2/* CheckAlways */|4/* Dirty */)){ngDevMode&&assertDataInRange(directiveIndex,directives);var def=currentView.tView.directives[directiveIndex];detectChangesInternal(hostView,element,def,getDirectiveInstance(directives[directiveIndex]));}}/** Returns a boolean for whether the view is attached */function viewAttached(view){return(view.flags&8/* Attached */)===8/* Attached */;}/**
 * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.
 * It takes all the selectors from the entire component's template and decides where
 * each projected node belongs (it re-distributes nodes among "buckets" where each "bucket" is
 * backed by a selector).
 *
 * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,
 * un-parsed form.
 *
 * The parsed form is needed for efficient matching of a node against a given CSS selector.
 * The un-parsed, textual form is needed for support of the ngProjectAs attribute.
 *
 * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more
 * drawbacks:
 * - having only a textual form would require runtime parsing of CSS selectors;
 * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a
 * template author).
 *
 * @param selectors A collection of parsed CSS selectors
 * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form
 */function projectionDef(index,selectors,textSelectors){var noOfNodeBuckets=selectors?selectors.length+1:1;var distributedNodes=new Array(noOfNodeBuckets);for(var i=0;i<noOfNodeBuckets;i++){distributedNodes[i]=[];}var componentNode=findComponentHost(currentView);var componentChild=componentNode.child;while(componentChild!==null){// execute selector matching logic if and only if:
// - there are selectors defined
// - a node has a tag name / attributes that can be matched
if(selectors&&componentChild.tNode){var matchedIdx=matchingSelectorIndex(componentChild.tNode,selectors,textSelectors);distributedNodes[matchedIdx].push(componentChild);}else{distributedNodes[0].push(componentChild);}componentChild=componentChild.next;}ngDevMode&&assertDataNext(index);data[index]=distributedNodes;}/**
 * Updates the linked list of a projection node, by appending another linked list.
 *
 * @param projectionNode Projection node whose projected nodes linked list has to be updated
 * @param appendedFirst First node of the linked list to append.
 * @param appendedLast Last node of the linked list to append.
 */function appendToProjectionNode(projectionNode,appendedFirst,appendedLast){ngDevMode&&assertEqual(!!appendedFirst,!!appendedLast,'appendedFirst can be null if and only if appendedLast is also null');if(!appendedLast){// nothing to append
return;}var projectionNodeData=projectionNode.data;if(projectionNodeData.tail){projectionNodeData.tail.pNextOrParent=appendedFirst;}else{projectionNodeData.head=appendedFirst;}projectionNodeData.tail=appendedLast;appendedLast.pNextOrParent=projectionNode;}/**
 * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call
 * to the projectionDef instruction.
 *
 * @param nodeIndex
 * @param localIndex - index under which distribution of projected nodes was memorized
 * @param selectorIndex - 0 means <ng-content> without any selector
 * @param attrs - attributes attached to the ng-content node, if present
 */function projection(nodeIndex,localIndex,selectorIndex,attrs){if(selectorIndex===void 0){selectorIndex=0;}var node=createLNode(nodeIndex,1/* Projection */,null,{head:null,tail:null});if(node.tNode==null){node.tNode=createTNode(null,attrs||null,null);}isParent=false;// self closing
var currentParent=node.parent;// re-distribution of projectable nodes is memorized on a component's view level
var componentNode=findComponentHost(currentView);// make sure that nodes to project were memorized
var nodesForSelector=componentNode.data.data[localIndex][selectorIndex];// build the linked list of projected nodes:
for(var i=0;i<nodesForSelector.length;i++){var nodeToProject=nodesForSelector[i];if(nodeToProject.type===1/* Projection */){var previouslyProjected=nodeToProject.data;appendToProjectionNode(node,previouslyProjected.head,previouslyProjected.tail);}else{appendToProjectionNode(node,nodeToProject,nodeToProject);}}if(canInsertNativeNode(currentParent,currentView)){ngDevMode&&assertNodeType(currentParent,3/* Element */);// process each node in the list of projected nodes:
var nodeToProject=node.data.head;var lastNodeToProject=node.data.tail;while(nodeToProject){appendProjectedNode(nodeToProject,currentParent,currentView);nodeToProject=nodeToProject===lastNodeToProject?null:nodeToProject.pNextOrParent;}}}/**
 * Given a current view, finds the nearest component's host (LElement).
 *
 * @param lView LView for which we want a host element node
 * @returns The host node
 */function findComponentHost(lView){var viewRootLNode=lView.node;while(viewRootLNode.type===2/* View */){ngDevMode&&assertNotNull(lView.parent,'lView.parent');lView=lView.parent;viewRootLNode=lView.node;}ngDevMode&&assertNodeType(viewRootLNode,3/* Element */);ngDevMode&&assertNotNull(viewRootLNode.data,'node.data');return viewRootLNode;}/**
 * Adds a LView or a LContainer to the end of the current view tree.
 *
 * This structure will be used to traverse through nested views to remove listeners
 * and call onDestroy callbacks.
 *
 * @param currentView The view where LView or LContainer should be added
 * @param state The LView or LContainer to add to the view tree
 * @returns The state passed in
 */function addToViewTree(currentView,state){currentView.tail?currentView.tail.next=state:currentView.child=state;currentView.tail=state;return state;}/** If node is an OnPush component, marks its LView dirty. */function markDirtyIfOnPush(node){// Because data flows down the component tree, ancestors do not need to be marked dirty
if(node.data&&!(node.data.flags&2/* CheckAlways */)){node.data.flags|=4/* Dirty */;}}/**
 * Wraps an event listener so its host view and its ancestor views will be marked dirty
 * whenever the event fires. Necessary to support OnPush components.
 */function wrapListenerWithDirtyLogic(view,listenerFn){return function(e){markViewDirty(view);return listenerFn(e);};}/**
 * Wraps an event listener so its host view and its ancestor views will be marked dirty
 * whenever the event fires. Also wraps with preventDefault behavior.
 */function wrapListenerWithDirtyAndDefault(view,listenerFn){return function wrapListenerIn_markViewDirty(e){markViewDirty(view);if(listenerFn(e)===false){e.preventDefault();// Necessary for legacy browsers that don't support preventDefault (e.g. IE)
e.returnValue=false;}};}/** Marks current view and all ancestors dirty */function markViewDirty(view){var currentView=view;while(currentView.parent!=null){currentView.flags|=4/* Dirty */;currentView=currentView.parent;}currentView.flags|=4/* Dirty */;ngDevMode&&assertNotNull(currentView.context,'rootContext');scheduleTick(currentView.context);}/**
 * Used to schedule change detection on the whole application.
 *
 * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.
 * It is usually called indirectly by calling `markDirty` when the view needs to be
 * re-rendered.
 *
 * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple
 * `scheduleTick` requests. The scheduling function can be overridden in
 * `renderComponent`'s `scheduler` option.
 */function scheduleTick(rootContext){if(rootContext.clean==_CLEAN_PROMISE){var res_1;rootContext.clean=new Promise(function(r){return res_1=r;});rootContext.scheduler(function(){tick(rootContext.component);res_1(null);rootContext.clean=_CLEAN_PROMISE;});}}/**
 * Used to perform change detection on the whole application.
 *
 * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`
 * executes lifecycle hooks and conditionally checks components based on their
 * `ChangeDetectionStrategy` and dirtiness.
 *
 * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally
 * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a
 * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can
 * be changed when calling `renderComponent` and providing the `scheduler` option.
 */function tick(component){var rootView=getRootView(component);var rootComponent=rootView.context.component;var hostNode=_getComponentHostLElementNode(rootComponent);ngDevMode&&assertNotNull(hostNode.data,'Component host node should be attached to an LView');renderComponentOrTemplate(hostNode,rootView,rootComponent);}/**
 * Retrieve the root view from any component by walking the parent `LView` until
 * reaching the root `LView`.
 *
 * @param component any component
 */function getRootView(component){ngDevMode&&assertNotNull(component,'component');var lElementNode=_getComponentHostLElementNode(component);var lView=lElementNode.view;while(lView.parent){lView=lView.parent;}return lView;}/**
 * Synchronously perform change detection on a component (and possibly its sub-components).
 *
 * This function triggers change detection in a synchronous way on a component. There should
 * be very little reason to call this function directly since a preferred way to do change
 * detection is to {@link markDirty} the component and wait for the scheduler to call this method
 * at some future point in time. This is because a single user action often results in many
 * components being invalidated and calling change detection on each component synchronously
 * would be inefficient. It is better to wait until all components are marked as dirty and
 * then perform single change detection across all of the components
 *
 * @param component The component which the change detection should be performed on.
 */function detectChanges(component){var hostNode=_getComponentHostLElementNode(component);ngDevMode&&assertNotNull(hostNode.data,'Component host node should be attached to an LView');var componentIndex=hostNode.tNode.flags>>13;var def=hostNode.view.tView.directives[componentIndex];detectChangesInternal(hostNode.data,hostNode,def,component);}/**
 * Checks the change detector and its children, and throws if any changes are detected.
 *
 * This is used in development mode to verify that running change detection doesn't
 * introduce other changes.
 */function checkNoChanges(component){checkNoChangesMode=true;try{detectChanges(component);}finally{checkNoChangesMode=false;}}/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */function detectChangesInternal(hostView,hostNode,def,component){var oldView=enterView(hostView,hostNode);var template=def.template;try{template(getRenderFlags(hostView),component);refreshDirectives();refreshDynamicChildren();}finally{leaveView(oldView);}}/**
 * Mark the component as dirty (needing change detection).
 *
 * Marking a component dirty will schedule a change detection on this
 * component at some point in the future. Marking an already dirty
 * component as dirty is a noop. Only one outstanding change detection
 * can be scheduled per component tree. (Two components bootstrapped with
 * separate `renderComponent` will have separate schedulers)
 *
 * When the root component is bootstrapped with `renderComponent`, a scheduler
 * can be provided.
 *
 * @param component Component to mark as dirty.
 */function markDirty(component){ngDevMode&&assertNotNull(component,'component');var lElementNode=_getComponentHostLElementNode(component);markViewDirty(lElementNode.view);}/** A special value which designates that a value has not changed. */var NO_CHANGE={};/**
 *  Initializes the binding start index. Will get inlined.
 *
 *  This function must be called before any binding related function is called
 *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)
 */exports.ɵNC=NO_CHANGE;function initBindings(){ngDevMode&&assertEqual(currentView.bindingStartIndex,-1,'Binding start index should only be set once, when null');ngDevMode&&assertEqual(currentView.bindingIndex,-1,'Binding index should not yet be set '+currentView.bindingIndex);currentView.bindingIndex=currentView.bindingStartIndex=data.length;}/**
 * Creates a single value binding.
 *
 * @param value Value to diff
 */function bind(value){if(currentView.bindingStartIndex<0){initBindings();return data[currentView.bindingIndex++]=value;}var changed=value!==NO_CHANGE&&isDifferent(data[currentView.bindingIndex],value);if(changed){throwErrorIfNoChangesMode(creationMode,checkNoChangesMode,data[currentView.bindingIndex],value);data[currentView.bindingIndex]=value;}currentView.bindingIndex++;return changed?value:NO_CHANGE;}/**
 * Create interpolation bindings with a variable number of expressions.
 *
 * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.
 * Those are faster because there is no need to create an array of expressions and iterate over it.
 *
 * `values`:
 * - has static text at even indexes,
 * - has evaluated expressions at odd indexes.
 *
 * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
 */function interpolationV(values){ngDevMode&&assertLessThan(2,values.length,'should have at least 3 values');ngDevMode&&assertEqual(values.length%2,1,'should have an odd number of values');var different=false;for(var i=1;i<values.length;i+=2){// Check if bindings (odd indexes) have changed
bindingUpdated(values[i])&&(different=true);}if(!different){return NO_CHANGE;}// Build the updated content
var content=values[0];for(var i=1;i<values.length;i+=2){content+=stringify$1(values[i])+values[i+1];}return content;}/**
 * Creates an interpolation binding with 1 expression.
 *
 * @param prefix static value used for concatenation only.
 * @param v0 value checked for change.
 * @param suffix static value used for concatenation only.
 */function interpolation1(prefix,v0,suffix){var different=bindingUpdated(v0);return different?prefix+stringify$1(v0)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 2 expressions. */function interpolation2(prefix,v0,i0,v1,suffix){var different=bindingUpdated2(v0,v1);return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+suffix:NO_CHANGE;}/** Creates an interpolation bindings with 3 expressions. */function interpolation3(prefix,v0,i0,v1,i1,v2,suffix){var different=bindingUpdated2(v0,v1);different=bindingUpdated(v2)||different;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+suffix:NO_CHANGE;}/** Create an interpolation binding with 4 expressions. */function interpolation4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){var different=bindingUpdated4(v0,v1,v2,v3);return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 5 expressions. */function interpolation5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){var different=bindingUpdated4(v0,v1,v2,v3);different=bindingUpdated(v4)||different;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 6 expressions. */function interpolation6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){var different=bindingUpdated4(v0,v1,v2,v3);different=bindingUpdated2(v4,v5)||different;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+i4+stringify$1(v5)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 7 expressions. */function interpolation7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){var different=bindingUpdated4(v0,v1,v2,v3);different=bindingUpdated2(v4,v5)||different;different=bindingUpdated(v6)||different;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+i4+stringify$1(v5)+i5+stringify$1(v6)+suffix:NO_CHANGE;}/** Creates an interpolation binding with 8 expressions. */function interpolation8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){var different=bindingUpdated4(v0,v1,v2,v3);different=bindingUpdated4(v4,v5,v6,v7)||different;return different?prefix+stringify$1(v0)+i0+stringify$1(v1)+i1+stringify$1(v2)+i2+stringify$1(v3)+i3+stringify$1(v4)+i4+stringify$1(v5)+i5+stringify$1(v6)+i6+stringify$1(v7)+suffix:NO_CHANGE;}/** Store a value in the `data` at a given `index`. */function store(index,value){// We don't store any static data for local variables, so the first time
// we see the template, we should store as null to avoid a sparse array
if(index>=tData.length){tData[index]=null;}data[index]=value;}/** Retrieves a value from the `data`. */function load(index){ngDevMode&&assertDataInRange(index);return data[index];}/** Retrieves a value from the `directives` array. */function loadDirective(index){ngDevMode&&assertNotNull(directives,'Directives array should be defined if reading a dir.');ngDevMode&&assertDataInRange(index,directives);return directives[index];}/** Gets the current binding value and increments the binding index. */function consumeBinding(){ngDevMode&&assertDataInRange(currentView.bindingIndex);ngDevMode&&assertNotEqual(data[currentView.bindingIndex],NO_CHANGE,'Stored value should never be NO_CHANGE.');return data[currentView.bindingIndex++];}/** Updates binding if changed, then returns whether it was updated. */function bindingUpdated(value){ngDevMode&&assertNotEqual(value,NO_CHANGE,'Incoming value should never be NO_CHANGE.');if(currentView.bindingStartIndex<0){initBindings();}else if(isDifferent(data[currentView.bindingIndex],value)){throwErrorIfNoChangesMode(creationMode,checkNoChangesMode,data[currentView.bindingIndex],value);}else{currentView.bindingIndex++;return false;}data[currentView.bindingIndex++]=value;return true;}/** Updates binding if changed, then returns the latest value. */function checkAndUpdateBinding$1(value){bindingUpdated(value);return value;}/** Updates 2 bindings if changed, then returns whether either was updated. */function bindingUpdated2(exp1,exp2){var different=bindingUpdated(exp1);return bindingUpdated(exp2)||different;}/** Updates 4 bindings if changed, then returns whether any was updated. */function bindingUpdated4(exp1,exp2,exp3,exp4){var different=bindingUpdated2(exp1,exp2);return bindingUpdated2(exp3,exp4)||different;}function getTView(){return currentView.tView;}function getDirectiveInstance(instanceOrArray){// Directives with content queries store an array in directives[directiveIndex]
// with the instance as the first index
return Array.isArray(instanceOrArray)?instanceOrArray[0]:instanceOrArray;}function assertPreviousIsParent(){assertEqual(isParent,true,'previousOrParentNode should be a parent');}function assertHasParent(){assertNotNull(previousOrParentNode.parent,'previousOrParentNode should have a parent');}function assertDataInRange(index,arr){if(arr==null)arr=data;assertLessThan(index,arr?arr.length:0,'index expected to be a valid data index');}function assertDataNext(index,arr){if(arr==null)arr=data;assertEqual(arr.length,index,"index "+index+" expected to be at the end of arr (length "+arr.length+")");}function _getComponentHostLElementNode(component){ngDevMode&&assertNotNull(component,'expecting component got null');var lElementNode=component[NG_HOST_SYMBOL];ngDevMode&&assertNotNull(component,'object is not a component');return lElementNode;}var CLEAN_PROMISE=_CLEAN_PROMISE;var ROOT_DIRECTIVE_INDICES=_ROOT_DIRECTIVE_INDICES;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ViewRef$1=/** @class */function(){function ViewRef(_view,context){this._view=_view;this.context=context;}/** @internal */ /** @internal */ViewRef.prototype._setComponentContext=/** @internal */function(view,context){this._view=view;this.context=context;};ViewRef.prototype.destroy=function(){};ViewRef.prototype.onDestroy=function(callback){};/**
     * Marks a view and all of its ancestors dirty.
     *
     * It also triggers change detection by calling `scheduleTick` internally, which coalesces
     * multiple `markForCheck` calls to into one change detection run.
     *
     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is
     * checked when it needs to be re-rendered but the two normal triggers haven't marked it
     * dirty (i.e. inputs haven't changed and events haven't fired in the view).
     *
     * <!-- TODO: Add a link to a chapter on OnPush components -->
     *
     * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))
     *
     * ```typescript
     * @Component({
     *   selector: 'my-app',
     *   template: `Number of ticks: {{numberOfTicks}}`
     *   changeDetection: ChangeDetectionStrategy.OnPush,
     * })
     * class AppComponent {
     *   numberOfTicks = 0;
     *
     *   constructor(private ref: ChangeDetectorRef) {
     *     setInterval(() => {
     *       this.numberOfTicks++;
     *       // the following is required, otherwise the view will not be updated
     *       this.ref.markForCheck();
     *     }, 1000);
     *   }
     * }
     * ```
     */ /**
       * Marks a view and all of its ancestors dirty.
       *
       * It also triggers change detection by calling `scheduleTick` internally, which coalesces
       * multiple `markForCheck` calls to into one change detection run.
       *
       * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is
       * checked when it needs to be re-rendered but the two normal triggers haven't marked it
       * dirty (i.e. inputs haven't changed and events haven't fired in the view).
       *
       * <!-- TODO: Add a link to a chapter on OnPush components -->
       *
       * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))
       *
       * ```typescript
       * @Component({
       *   selector: 'my-app',
       *   template: `Number of ticks: {{numberOfTicks}}`
       *   changeDetection: ChangeDetectionStrategy.OnPush,
       * })
       * class AppComponent {
       *   numberOfTicks = 0;
       *
       *   constructor(private ref: ChangeDetectorRef) {
       *     setInterval(() => {
       *       this.numberOfTicks++;
       *       // the following is required, otherwise the view will not be updated
       *       this.ref.markForCheck();
       *     }, 1000);
       *   }
       * }
       * ```
       */ViewRef.prototype.markForCheck=/**
       * Marks a view and all of its ancestors dirty.
       *
       * It also triggers change detection by calling `scheduleTick` internally, which coalesces
       * multiple `markForCheck` calls to into one change detection run.
       *
       * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is
       * checked when it needs to be re-rendered but the two normal triggers haven't marked it
       * dirty (i.e. inputs haven't changed and events haven't fired in the view).
       *
       * <!-- TODO: Add a link to a chapter on OnPush components -->
       *
       * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))
       *
       * ```typescript
       * @Component({
       *   selector: 'my-app',
       *   template: `Number of ticks: {{numberOfTicks}}`
       *   changeDetection: ChangeDetectionStrategy.OnPush,
       * })
       * class AppComponent {
       *   numberOfTicks = 0;
       *
       *   constructor(private ref: ChangeDetectorRef) {
       *     setInterval(() => {
       *       this.numberOfTicks++;
       *       // the following is required, otherwise the view will not be updated
       *       this.ref.markForCheck();
       *     }, 1000);
       *   }
       * }
       * ```
       */function(){markViewDirty(this._view);};/**
     * Detaches the view from the change detection tree.
     *
     * Detached views will not be checked during change detection runs until they are
     * re-attached, even if they are dirty. `detach` can be used in combination with
     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change
     * detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds. We can do that by detaching
     * the component's change detector and doing a local check every five seconds.
     *
     * ```typescript
     * class DataProvider {
     *   // in a real application the returned data will be different every time
     *   get data() {
     *     return [1,2,3,4,5];
     *   }
     * }
     *
     * @Component({
     *   selector: 'giant-list',
     *   template: `
     *     <li *ngFor="let d of dataProvider.data">Data {{d}}</li>
     *   `,
     * })
     * class GiantList {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {
     *     ref.detach();
     *     setInterval(() => {
     *       this.ref.detectChanges();
     *     }, 5000);
     *   }
     * }
     *
     * @Component({
     *   selector: 'app',
     *   providers: [DataProvider],
     *   template: `
     *     <giant-list><giant-list>
     *   `,
     * })
     * class App {
     * }
     * ```
     */ /**
       * Detaches the view from the change detection tree.
       *
       * Detached views will not be checked during change detection runs until they are
       * re-attached, even if they are dirty. `detach` can be used in combination with
       * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change
       * detection checks.
       *
       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
       *
       * ### Example
       *
       * The following example defines a component with a large list of readonly data.
       * Imagine the data changes constantly, many times per second. For performance reasons,
       * we want to check and update the list every five seconds. We can do that by detaching
       * the component's change detector and doing a local check every five seconds.
       *
       * ```typescript
       * class DataProvider {
       *   // in a real application the returned data will be different every time
       *   get data() {
       *     return [1,2,3,4,5];
       *   }
       * }
       *
       * @Component({
       *   selector: 'giant-list',
       *   template: `
       *     <li *ngFor="let d of dataProvider.data">Data {{d}}</li>
       *   `,
       * })
       * class GiantList {
       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {
       *     ref.detach();
       *     setInterval(() => {
       *       this.ref.detectChanges();
       *     }, 5000);
       *   }
       * }
       *
       * @Component({
       *   selector: 'app',
       *   providers: [DataProvider],
       *   template: `
       *     <giant-list><giant-list>
       *   `,
       * })
       * class App {
       * }
       * ```
       */ViewRef.prototype.detach=/**
       * Detaches the view from the change detection tree.
       *
       * Detached views will not be checked during change detection runs until they are
       * re-attached, even if they are dirty. `detach` can be used in combination with
       * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change
       * detection checks.
       *
       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
       *
       * ### Example
       *
       * The following example defines a component with a large list of readonly data.
       * Imagine the data changes constantly, many times per second. For performance reasons,
       * we want to check and update the list every five seconds. We can do that by detaching
       * the component's change detector and doing a local check every five seconds.
       *
       * ```typescript
       * class DataProvider {
       *   // in a real application the returned data will be different every time
       *   get data() {
       *     return [1,2,3,4,5];
       *   }
       * }
       *
       * @Component({
       *   selector: 'giant-list',
       *   template: `
       *     <li *ngFor="let d of dataProvider.data">Data {{d}}</li>
       *   `,
       * })
       * class GiantList {
       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {
       *     ref.detach();
       *     setInterval(() => {
       *       this.ref.detectChanges();
       *     }, 5000);
       *   }
       * }
       *
       * @Component({
       *   selector: 'app',
       *   providers: [DataProvider],
       *   template: `
       *     <giant-list><giant-list>
       *   `,
       * })
       * class App {
       * }
       * ```
       */function(){this._view.flags&=~8/* Attached */;};/**
     * Re-attaches a view to the change detection tree.
     *
     * This can be used to re-attach views that were previously detached from the tree
     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     *
     * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))
     *
     * The following example creates a component displaying `live` data. The component will detach
     * its change detector from the main change detector tree when the component's live property
     * is set to false.
     *
     * ```typescript
     * class DataProvider {
     *   data = 1;
     *
     *   constructor() {
     *     setInterval(() => {
     *       this.data = this.data * 2;
     *     }, 500);
     *   }
     * }
     *
     * @Component({
     *   selector: 'live-data',
     *   inputs: ['live'],
     *   template: 'Data: {{dataProvider.data}}'
     * })
     * class LiveData {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}
     *
     *   set live(value) {
     *     if (value) {
     *       this.ref.reattach();
     *     } else {
     *       this.ref.detach();
     *     }
     *   }
     * }
     *
     * @Component({
     *   selector: 'my-app',
     *   providers: [DataProvider],
     *   template: `
     *     Live Update: <input type="checkbox" [(ngModel)]="live">
     *     <live-data [live]="live"><live-data>
     *   `,
     * })
     * class AppComponent {
     *   live = true;
     * }
     * ```
     */ /**
       * Re-attaches a view to the change detection tree.
       *
       * This can be used to re-attach views that were previously detached from the tree
       * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.
       *
       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
       *
       * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))
       *
       * The following example creates a component displaying `live` data. The component will detach
       * its change detector from the main change detector tree when the component's live property
       * is set to false.
       *
       * ```typescript
       * class DataProvider {
       *   data = 1;
       *
       *   constructor() {
       *     setInterval(() => {
       *       this.data = this.data * 2;
       *     }, 500);
       *   }
       * }
       *
       * @Component({
       *   selector: 'live-data',
       *   inputs: ['live'],
       *   template: 'Data: {{dataProvider.data}}'
       * })
       * class LiveData {
       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}
       *
       *   set live(value) {
       *     if (value) {
       *       this.ref.reattach();
       *     } else {
       *       this.ref.detach();
       *     }
       *   }
       * }
       *
       * @Component({
       *   selector: 'my-app',
       *   providers: [DataProvider],
       *   template: `
       *     Live Update: <input type="checkbox" [(ngModel)]="live">
       *     <live-data [live]="live"><live-data>
       *   `,
       * })
       * class AppComponent {
       *   live = true;
       * }
       * ```
       */ViewRef.prototype.reattach=/**
       * Re-attaches a view to the change detection tree.
       *
       * This can be used to re-attach views that were previously detached from the tree
       * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.
       *
       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
       *
       * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))
       *
       * The following example creates a component displaying `live` data. The component will detach
       * its change detector from the main change detector tree when the component's live property
       * is set to false.
       *
       * ```typescript
       * class DataProvider {
       *   data = 1;
       *
       *   constructor() {
       *     setInterval(() => {
       *       this.data = this.data * 2;
       *     }, 500);
       *   }
       * }
       *
       * @Component({
       *   selector: 'live-data',
       *   inputs: ['live'],
       *   template: 'Data: {{dataProvider.data}}'
       * })
       * class LiveData {
       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}
       *
       *   set live(value) {
       *     if (value) {
       *       this.ref.reattach();
       *     } else {
       *       this.ref.detach();
       *     }
       *   }
       * }
       *
       * @Component({
       *   selector: 'my-app',
       *   providers: [DataProvider],
       *   template: `
       *     Live Update: <input type="checkbox" [(ngModel)]="live">
       *     <live-data [live]="live"><live-data>
       *   `,
       * })
       * class AppComponent {
       *   live = true;
       * }
       * ```
       */function(){this._view.flags|=8/* Attached */;};/**
     * Checks the view and its children.
     *
     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement
     * local change detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine, the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds.
     *
     * We can do that by detaching the component's change detector and doing a local change detection
     * check every five seconds.
     *
     * See {@link ChangeDetectorRef#detach detach} for more information.
     */ /**
       * Checks the view and its children.
       *
       * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement
       * local change detection checks.
       *
       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
       *
       * ### Example
       *
       * The following example defines a component with a large list of readonly data.
       * Imagine, the data changes constantly, many times per second. For performance reasons,
       * we want to check and update the list every five seconds.
       *
       * We can do that by detaching the component's change detector and doing a local change detection
       * check every five seconds.
       *
       * See {@link ChangeDetectorRef#detach detach} for more information.
       */ViewRef.prototype.detectChanges=/**
       * Checks the view and its children.
       *
       * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement
       * local change detection checks.
       *
       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
       *
       * ### Example
       *
       * The following example defines a component with a large list of readonly data.
       * Imagine, the data changes constantly, many times per second. For performance reasons,
       * we want to check and update the list every five seconds.
       *
       * We can do that by detaching the component's change detector and doing a local change detection
       * check every five seconds.
       *
       * See {@link ChangeDetectorRef#detach detach} for more information.
       */function(){detectChanges(this.context);};/**
     * Checks the change detector and its children, and throws if any changes are detected.
     *
     * This is used in development mode to verify that running change detection doesn't
     * introduce other changes.
     */ /**
       * Checks the change detector and its children, and throws if any changes are detected.
       *
       * This is used in development mode to verify that running change detection doesn't
       * introduce other changes.
       */ViewRef.prototype.checkNoChanges=/**
       * Checks the change detector and its children, and throws if any changes are detected.
       *
       * This is used in development mode to verify that running change detection doesn't
       * introduce other changes.
       */function(){checkNoChanges(this.context);};return ViewRef;}();var EmbeddedViewRef$1=/** @class */function(_super){(0,_tslib.__extends)(EmbeddedViewRef,_super);function EmbeddedViewRef(viewNode,template,context){var _this=_super.call(this,viewNode.data,context)||this;_this._lViewNode=viewNode;return _this;}return EmbeddedViewRef;}(ViewRef$1);/**
 * Creates a ViewRef bundled with destroy functionality.
 *
 * @param context The context for this view
 * @returns The ViewRef
 */function createViewRef(view,context){// TODO: add detectChanges back in when implementing ChangeDetectorRef.detectChanges
return addDestroyable(new ViewRef$1(view,context));}/**
 * Decorates an object with destroy logic (implementing the DestroyRef interface)
 * and returns the enhanced object.
 *
 * @param obj The object to decorate
 * @returns The object with destroy logic
 */function addDestroyable(obj){var destroyFn=null;obj.destroyed=false;obj.destroy=function(){destroyFn&&destroyFn.forEach(function(fn){return fn();});this.destroyed=true;};obj.onDestroy=function(fn){return(destroyFn||(destroyFn=[])).push(fn);};return obj;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Bootstraps a component, then creates and returns a `ComponentRef` for that component.
 *
 * @param componentType Component to bootstrap
 * @param options Optional parameters which control bootstrapping
 */ // TODO: A hack to not pull in the NullInjector from @angular/core.
/**
 * Bootstraps a Component into an existing host element and returns an instance
 * of the component.
 *
 * Use this function to bootstrap a component into the DOM tree. Each invocation
 * of this function will create a separate tree of components, injectors and
 * change detection cycles and lifetimes. To dynamically insert a new component
 * into an existing tree such that it shares the same injection, change detection
 * and object lifetime, use {@link ViewContainer#createComponent}.
 *
 * @param componentType Component to bootstrap
 * @param options Optional parameters which control bootstrapping
 */function renderComponent(componentType/* Type as workaround for: Microsoft/TypeScript/issues/4881 */,opts){if(opts===void 0){opts={};}ngDevMode&&assertComponentType(componentType);var rendererFactory=opts.rendererFactory||domRendererFactory3;var componentDef=componentType.ngComponentDef;if(componentDef.type!=componentType)componentDef.type=componentType;var component;// The first index of the first selector is the tag name.
var componentTag=componentDef.selectors[0][0];var hostNode=locateHostElement(rendererFactory,opts.host||componentTag);var rootContext={// Incomplete initialization due to circular reference.
component:null,scheduler:opts.scheduler||requestAnimationFrame.bind(window),clean:CLEAN_PROMISE};var rootView=createLView(-1,rendererFactory.createRenderer(hostNode,componentDef.rendererType),createTView(null,null),null,rootContext,componentDef.onPush?4/* Dirty */:2/* CheckAlways */);rootView.injector=opts.injector||null;var oldView=enterView(rootView,null);var elementNode;try{if(rendererFactory.begin)rendererFactory.begin();// Create element node at index 0 in data array
elementNode=hostElement(componentTag,hostNode,componentDef);// Create directive instance with factory() and store at index 0 in directives array
component=rootContext.component=baseDirectiveCreate(0,componentDef.factory(),componentDef);initChangeDetectorIfExisting(elementNode.nodeInjector,component,elementNode.data);opts.hostFeatures&&opts.hostFeatures.forEach(function(feature){return feature(component,componentDef);});executeInitAndContentHooks();setHostBindings(ROOT_DIRECTIVE_INDICES);detectChangesInternal(elementNode.data,elementNode,componentDef,component);}finally{leaveView(oldView);if(rendererFactory.end)rendererFactory.end();}return component;}/**
 * Used to enable lifecycle hooks on the root component.
 *
 * Include this feature when calling `renderComponent` if the root component
 * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't
 * be called properly.
 *
 * Example:
 *
 * ```
 * renderComponent(AppComponent, {features: [RootLifecycleHooks]});
 * ```
 */ /**
 * Retrieve the root context for any component by walking the parent `LView` until
 * reaching the root `LView`.
 *
 * @param component any component
 */function getRootContext(component){var rootContext=getRootView(component).context;ngDevMode&&assertNotNull(rootContext,'rootContext');return rootContext;}/**
 * Retrieve the host element of the component.
 *
 * Use this function to retrieve the host element of the component. The host
 * element is the element which the component is associated with.
 *
 * @param component Component for which the host element should be retrieved.
 */ /**
 * Retrieves the rendered text for a given component.
 *
 * This function retrieves the host element of a component and
 * and then returns the `textContent` for that element. This implies
 * that the text returned will include re-projected content of
 * the component as well.
 *
 * @param component The component to return the content text for.
 */ /**
 * Wait on component until it is rendered.
 *
 * This function returns a `Promise` which is resolved when the component's
 * change detection is executed. This is determined by finding the scheduler
 * associated with the `component`'s render tree and waiting until the scheduler
 * flushes. If nothing is scheduled, the function returns a resolved promise.
 *
 * Example:
 * ```
 * await whenRendered(myComponent);
 * ```
 *
 * @param component Component to wait upon
 * @returns Promise which resolves when the component is rendered.
 */function whenRendered(component){return getRootContext(component).clean;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as
 * the key and the directive's unique ID as the value. This allows us to map directives to their
 * bloom filter bit for DI.
 */var NG_ELEMENT_ID='__NG_ELEMENT_ID__';/**
 * The number of slots in each bloom filter (used by DI). The larger this number, the fewer
 * directives that will share slots, and thus, the fewer false positives when checking for
 * the existence of a directive.
 */var BLOOM_SIZE=256;/** Counter used to generate unique IDs for directives. */var nextNgElementId=0;/**
 * Registers this directive as present in its node's injector by flipping the directive's
 * corresponding bit in the injector's bloom filter.
 *
 * @param injector The node injector in which the directive should be registered
 * @param type The directive to register
 */function bloomAdd(injector,type){var id=type[NG_ELEMENT_ID];// Set a unique ID on the directive type, so if something tries to inject the directive,
// we can easily retrieve the ID and hash it into the bloom bit that should be checked.
if(id==null){id=type[NG_ELEMENT_ID]=nextNgElementId++;}// We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),
// so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.
// This means that after 255, some directives will share slots, leading to some false positives
// when checking for a directive's presence.
var bloomBit=id%BLOOM_SIZE;// Create a mask that targets the specific bit associated with the directive.
// JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
// to bit positions 0 - 31 in a 32 bit integer.
var mask=1<<bloomBit;// Use the raw bloomBit number to determine which bloom filter bucket we should check
// e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc
if(bloomBit<128){// Then use the mask to flip on the bit (0-31) associated with the directive in that bucket
bloomBit<64?bloomBit<32?injector.bf0|=mask:injector.bf1|=mask:bloomBit<96?injector.bf2|=mask:injector.bf3|=mask;}else{bloomBit<192?bloomBit<160?injector.bf4|=mask:injector.bf5|=mask:bloomBit<224?injector.bf6|=mask:injector.bf7|=mask;}}function getOrCreateNodeInjector(){ngDevMode&&assertPreviousIsParent();return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());}/**
 * Creates (or gets an existing) injector for a given element or container.
 *
 * @param node for which an injector should be retrieved / created.
 * @returns Node injector
 */function getOrCreateNodeInjectorForNode(node){var nodeInjector=node.nodeInjector;var parentInjector=node.parent&&node.parent.nodeInjector;if(nodeInjector!=parentInjector){return nodeInjector;}return node.nodeInjector={parent:parentInjector,node:node,bf0:0,bf1:0,bf2:0,bf3:0,bf4:0,bf5:0,bf6:0,bf7:0,cbf0:parentInjector==null?0:parentInjector.cbf0|parentInjector.bf0,cbf1:parentInjector==null?0:parentInjector.cbf1|parentInjector.bf1,cbf2:parentInjector==null?0:parentInjector.cbf2|parentInjector.bf2,cbf3:parentInjector==null?0:parentInjector.cbf3|parentInjector.bf3,cbf4:parentInjector==null?0:parentInjector.cbf4|parentInjector.bf4,cbf5:parentInjector==null?0:parentInjector.cbf5|parentInjector.bf5,cbf6:parentInjector==null?0:parentInjector.cbf6|parentInjector.bf6,cbf7:parentInjector==null?0:parentInjector.cbf7|parentInjector.bf7,templateRef:null,viewContainerRef:null,elementRef:null,changeDetectorRef:null};}/**
 * Makes a directive public to the DI system by adding it to an injector's bloom filter.
 *
 * @param di The node injector in which a directive will be added
 * @param def The definition of the directive to be made public
 */function diPublicInInjector(di,def){bloomAdd(di,def.type);}/**
 * Makes a directive public to the DI system by adding it to an injector's bloom filter.
 *
 * @param def The definition of the directive to be made public
 */function diPublic(def){diPublicInInjector(getOrCreateNodeInjector(),def);}function directiveInject(token,flags){if(flags===void 0){flags=0/* Default */;}return getOrCreateInjectable(getOrCreateNodeInjector(),token,flags);}/**
 * Creates an ElementRef and stores it on the injector.
 * Or, if the ElementRef already exists, retrieves the existing ElementRef.
 *
 * @returns The ElementRef instance to use
 */ /**
 * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already
 * exists, retrieves the existing TemplateRef.
 *
 * @returns The TemplateRef instance to use
 */function injectTemplateRef(){return getOrCreateTemplateRef(getOrCreateNodeInjector());}/**
 * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef
 * already exists, retrieves the existing ViewContainerRef.
 *
 * @returns The ViewContainerRef instance to use
 */function injectViewContainerRef(){return getOrCreateContainerRef(getOrCreateNodeInjector());}/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */function injectChangeDetectorRef(){return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(),null);}/**
 * Inject static attribute value into directive constructor.
 *
 * This method is used with `factory` functions which are generated as part of
 * `defineDirective` or `defineComponent`. The method retrieves the static value
 * of an attribute. (Dynamic attributes are not supported since they are not resolved
 *  at the time of injection and can change over time.)
 *
 * # Example
 * Given:
 * ```
 * @Component(...)
 * class MyComponent {
 *   constructor(@Attribute('title') title: string) { ... }
 * }
 * ```
 * When instantiated with
 * ```
 * <my-component title="Hello"></my-component>
 * ```
 *
 * Then factory method generated is:
 * ```
 * MyComponent.ngComponentDef = defineComponent({
 *   factory: () => new MyComponent(injectAttribute('title'))
 *   ...
 * })
 * ```
 *
 * @experimental
 */function injectAttribute(attrName){ngDevMode&&assertPreviousIsParent();var lElement=getPreviousOrParentNode();ngDevMode&&assertNodeType(lElement,3/* Element */);var tElement=lElement.tNode;ngDevMode&&assertNotNull(tElement,'expecting tNode');var attrs=tElement.attrs;if(attrs){for(var i=0;i<attrs.length;i=i+2){if(attrs[i]==attrName){return attrs[i+1];}}}return undefined;}/**
 * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).
 * Or, if it already exists, retrieves the existing instance.
 *
 * @returns The ChangeDetectorRef to use
 */function getOrCreateChangeDetectorRef(di,context){if(di.changeDetectorRef)return di.changeDetectorRef;var currentNode=di.node;if(isComponent(currentNode.tNode)){return di.changeDetectorRef=createViewRef(currentNode.data,context);}else if(currentNode.type===3/* Element */){return di.changeDetectorRef=getOrCreateHostChangeDetector(currentNode.view.node);}return null;}/** Gets or creates ChangeDetectorRef for the closest host component */function getOrCreateHostChangeDetector(currentNode){var hostNode=getClosestComponentAncestor(currentNode);var hostInjector=hostNode.nodeInjector;var existingRef=hostInjector&&hostInjector.changeDetectorRef;return existingRef?existingRef:createViewRef(hostNode.data,hostNode.view.directives[hostNode.tNode.flags>>13/* DirectiveStartingIndexShift */]);}/**
 * If the node is an embedded view, traverses up the view tree to return the closest
 * ancestor view that is attached to a component. If it's already a component node,
 * returns itself.
 */function getClosestComponentAncestor(node){while(node.type===2/* View */){node=node.view.node;}return node;}/**
 * Searches for an instance of the given directive type up the injector tree and returns
 * that instance if found.
 *
 * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),
 * checks that bit against the bloom filter structure to identify an injector that might have
 * the directive (see bloomFindPossibleInjector), then searches the directives on that injector
 * for a match.
 *
 * If not found, it will propagate up to the next parent injector until the token
 * is found or the top is reached.
 *
 * @param di Node injector where the search should start
 * @param token The directive type to search for
 * @param flags Injection flags (e.g. CheckParent)
 * @returns The instance found
 */function getOrCreateInjectable(di,token,flags){var bloomHash=bloomHashBit(token);// If the token has a bloom hash, then it is a directive that is public to the injection system
// (diPublic). If there is no hash, fall back to the module injector.
if(bloomHash===null){var moduleInjector=getPreviousOrParentNode().view.injector;var formerInjector=setCurrentInjector(moduleInjector);try{return inject(token,flags);}finally{setCurrentInjector(formerInjector);}}else{var injector=di;while(injector){// Get the closest potential matching injector (upwards in the injector tree) that
// *potentially* has the token.
injector=bloomFindPossibleInjector(injector,bloomHash);// If no injector is found, we *know* that there is no ancestor injector that contains the
// token, so we abort.
if(!injector){break;}// At this point, we have an injector which *may* contain the token, so we step through the
// directives associated with the injector's corresponding node to get the directive instance.
var node=injector.node;var flags_1=node.tNode.flags;var count=flags_1&4095;if(count!==0){var start=flags_1>>13;var end=start+count;var defs=node.view.tView.directives;for(var i=start;i<end;i++){// Get the definition for the directive at this index and, if it is injectable (diPublic),
// and matches the given token, return the directive instance.
var directiveDef=defs[i];if(directiveDef.type===token&&directiveDef.diPublic){return getDirectiveInstance(node.view.directives[i]);}}}// If we *didn't* find the directive for the token and we are searching the current node's
// injector, it's possible the directive is on this node and hasn't been created yet.
var instance=void 0;if(injector===di&&(instance=searchMatchesQueuedForCreation(node,token))){return instance;}// The def wasn't found anywhere on this node, so it might be a false positive.
// Traverse up the tree and continue searching.
injector=injector.parent;}}// No directive was found for the given token.
// TODO: implement optional, check-self, and check-parent.
throw new Error('Implement');}function searchMatchesQueuedForCreation(node,token){var matches=node.view.tView.currentMatches;if(matches){for(var i=0;i<matches.length;i+=2){var def=matches[i];if(def.type===token){return resolveDirective(def,i+1,matches,node.view.tView);}}}return null;}/**
 * Given a directive type, this function returns the bit in an injector's bloom filter
 * that should be used to determine whether or not the directive is present.
 *
 * When the directive was added to the bloom filter, it was given a unique ID that can be
 * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's
 * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after
 * BLOOM_SIZE is reached).
 *
 * @param type The directive type
 * @returns The bloom bit to check for the directive
 */function bloomHashBit(type){var id=type[NG_ELEMENT_ID];return typeof id==='number'?id%BLOOM_SIZE:null;}/**
 * Finds the closest injector that might have a certain directive.
 *
 * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to
 * check and a starting injector, this function traverses up injectors until it finds an
 * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the
 * injector may have that directive. It only *may* have the directive because directives begin
 * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a
 * different directive sharing the bit.
 *
 * Note: We can skip checking further injectors up the tree if an injector's cbf structure
 * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent
 * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain
 * the directive and do not need to be checked.
 *
 * @param injector The starting node injector to check
 * @param  bloomBit The bit to check in each injector's bloom filter
 * @returns An injector that might have the directive
 */function bloomFindPossibleInjector(startInjector,bloomBit){// Create a mask that targets the specific bit associated with the directive we're looking for.
// JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
// to bit positions 0 - 31 in a 32 bit integer.
var mask=1<<bloomBit;// Traverse up the injector tree until we find a potential match or until we know there *isn't* a
// match.
var injector=startInjector;while(injector){// Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:
// bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.
// Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.
var value=void 0;if(bloomBit<128){value=bloomBit<64?bloomBit<32?injector.bf0:injector.bf1:bloomBit<96?injector.bf2:injector.bf3;}else{value=bloomBit<192?bloomBit<160?injector.bf4:injector.bf5:bloomBit<224?injector.bf6:injector.bf7;}// If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,
// this injector is a potential match.
if((value&mask)===mask){return injector;}// If the current injector does not have the directive, check the bloom filters for the ancestor
// injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.
if(bloomBit<128){value=bloomBit<64?bloomBit<32?injector.cbf0:injector.cbf1:bloomBit<96?injector.cbf2:injector.cbf3;}else{value=bloomBit<192?bloomBit<160?injector.cbf4:injector.cbf5:bloomBit<224?injector.cbf6:injector.cbf7;}// If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to
// find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.
injector=value&mask?injector.parent:null;}return null;}var ReadFromInjectorFn=/** @class */function(){function ReadFromInjectorFn(read){this.read=read;}return ReadFromInjectorFn;}();/**
 * Creates an ElementRef for a given node injector and stores it on the injector.
 * Or, if the ElementRef already exists, retrieves the existing ElementRef.
 *
 * @param di The node injector where we should store a created ElementRef
 * @returns The ElementRef instance to use
 */function getOrCreateElementRef(di){return di.elementRef||(di.elementRef=new ElementRef$1(di.node.type===0/* Container */?null:di.node.native));}/** A ref to a node's native element. */var ElementRef$1=/** @class */function(){function ElementRef(nativeElement){this.nativeElement=nativeElement;}return ElementRef;}();/**
 * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef
 * already exists, retrieves the existing ViewContainerRef.
 *
 * @returns The ViewContainerRef instance to use
 */function getOrCreateContainerRef(di){if(!di.viewContainerRef){var vcRefHost=di.node;ngDevMode&&assertNodeOfPossibleTypes(vcRefHost,0/* Container */,3/* Element */);var lContainer=createLContainer(vcRefHost.parent,vcRefHost.view);var lContainerNode=createLNodeObject(0/* Container */,vcRefHost.view,vcRefHost.parent,undefined,lContainer,null);vcRefHost.dynamicLContainerNode=lContainerNode;addToViewTree(vcRefHost.view,lContainer);di.viewContainerRef=new ViewContainerRef$1(lContainerNode);}return di.viewContainerRef;}/**
 * A ref to a container that enables adding and removing views from that container
 * imperatively.
 */var ViewContainerRef$1=/** @class */function(){function ViewContainerRef(_lContainerNode){this._lContainerNode=_lContainerNode;this._viewRefs=[];}ViewContainerRef.prototype.clear=function(){var lContainer=this._lContainerNode.data;while(lContainer.views.length){this.remove(0);}};ViewContainerRef.prototype.get=function(index){return this._viewRefs[index]||null;};Object.defineProperty(ViewContainerRef.prototype,"length",{get:function get(){var lContainer=this._lContainerNode.data;return lContainer.views.length;},enumerable:true,configurable:true});ViewContainerRef.prototype.createEmbeddedView=function(templateRef,context,index){var viewRef=templateRef.createEmbeddedView(context||{});this.insert(viewRef,index);return viewRef;};ViewContainerRef.prototype.createComponent=function(componentFactory,index,injector,projectableNodes,ngModule){throw notImplemented();};ViewContainerRef.prototype.insert=function(viewRef,index){var lViewNode=viewRef._lViewNode;var adjustedIdx=this._adjustIndex(index);insertView(this._lContainerNode,lViewNode,adjustedIdx);// invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd
// instruction)
this._lContainerNode.native=undefined;this._viewRefs.splice(adjustedIdx,0,viewRef);lViewNode.parent=this._lContainerNode;// If the view is dynamic (has a template), it needs to be counted both at the container
// level and at the node above the container.
if(lViewNode.data.template!==null){// Increment the container view count.
this._lContainerNode.data.dynamicViewCount++;// Look for the parent node and increment its dynamic view count.
if(this._lContainerNode.parent!==null&&this._lContainerNode.parent.data!==null){ngDevMode&&assertNodeOfPossibleTypes(this._lContainerNode.parent,2/* View */,3/* Element */);this._lContainerNode.parent.data.dynamicViewCount++;}}return viewRef;};ViewContainerRef.prototype.move=function(viewRef,newIndex){var index=this.indexOf(viewRef);this.detach(index);this.insert(viewRef,this._adjustIndex(newIndex));return viewRef;};ViewContainerRef.prototype.indexOf=function(viewRef){return this._viewRefs.indexOf(viewRef);};ViewContainerRef.prototype.remove=function(index){this.detach(index);// TODO(ml): proper destroy of the ViewRef, i.e. recursively destroy the LviewNode and its
// children, delete DOM nodes and QueryList, trigger hooks (onDestroy), destroy the renderer,
// detach projected nodes
};ViewContainerRef.prototype.detach=function(index){var adjustedIdx=this._adjustIndex(index,-1);removeView(this._lContainerNode,adjustedIdx);return this._viewRefs.splice(adjustedIdx,1)[0]||null;};ViewContainerRef.prototype._adjustIndex=function(index,shift){if(shift===void 0){shift=0;}if(index==null){return this._lContainerNode.data.views.length+shift;}if(ngDevMode){assertGreaterThan(index,-1,'index must be positive');// +1 because it's legal to insert at the end.
assertLessThan(index,this._lContainerNode.data.views.length+1+shift,'index');}return index;};return ViewContainerRef;}();/**
 * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already
 * exists, retrieves the existing TemplateRef.
 *
 * @param di The node injector where we should store a created TemplateRef
 * @returns The TemplateRef instance to use
 */function getOrCreateTemplateRef(di){ngDevMode&&assertNodeType(di.node,0/* Container */);var data=di.node.data;var tView=di.node.view.tView;return di.templateRef||(di.templateRef=new TemplateRef$1(getOrCreateElementRef(di),data.template,getRenderer(),tView.directiveRegistry,tView.pipeRegistry));}var TemplateRef$1=/** @class */function(){function TemplateRef(elementRef,template,_renderer,_directives,_pipes){this._renderer=_renderer;this._directives=_directives;this._pipes=_pipes;this.elementRef=elementRef;this._template=template;}TemplateRef.prototype.createEmbeddedView=function(context){var viewNode=renderEmbeddedTemplate(null,this._template,context,this._renderer,this._directives,this._pipes);return addDestroyable(new EmbeddedViewRef$1(viewNode,this._template,context));};return TemplateRef;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Create a component definition object.
 *
 *
 * # Example
 * ```
 * class MyDirective {
 *   // Generated by Angular Template Compiler
 *   // [Symbol] syntax will not be supported by TypeScript until v2.7
 *   static ngComponentDef = defineComponent({
 *     ...
 *   });
 * }
 * ```
 */function defineComponent(componentDefinition){var type=componentDefinition.type;var pipeTypes=componentDefinition.pipes;var directiveTypes=componentDefinition.directives;var def={type:type,diPublic:null,factory:componentDefinition.factory,template:componentDefinition.template||null,hostBindings:componentDefinition.hostBindings||null,attributes:componentDefinition.attributes||null,inputs:invertObject(componentDefinition.inputs),outputs:invertObject(componentDefinition.outputs),rendererType:resolveRendererType2(componentDefinition.rendererType)||null,exportAs:componentDefinition.exportAs,onInit:type.prototype.ngOnInit||null,doCheck:type.prototype.ngDoCheck||null,afterContentInit:type.prototype.ngAfterContentInit||null,afterContentChecked:type.prototype.ngAfterContentChecked||null,afterViewInit:type.prototype.ngAfterViewInit||null,afterViewChecked:type.prototype.ngAfterViewChecked||null,onDestroy:type.prototype.ngOnDestroy||null,onPush:componentDefinition.changeDetection===ChangeDetectionStrategy.OnPush,directiveDefs:directiveTypes?function(){return(typeof directiveTypes==='function'?directiveTypes():directiveTypes).map(extractDirectiveDef);}:null,pipeDefs:pipeTypes?function(){return(typeof pipeTypes==='function'?pipeTypes():pipeTypes).map(extractPipeDef);}:null,selectors:componentDefinition.selectors};var feature=componentDefinition.features;feature&&feature.forEach(function(fn){return fn(def);});return def;}function extractDirectiveDef(type){var def=type.ngComponentDef||type.ngDirectiveDef;if(ngDevMode&&!def){throw new Error("'"+type.name+"' is neither 'ComponentType' or 'DirectiveType'.");}return def;}function extractPipeDef(type){var def=type.ngPipeDef;if(ngDevMode&&!def){throw new Error("'"+type.name+"' is not a 'PipeType'.");}return def;}var PRIVATE_PREFIX='__ngOnChanges_';/**
 * Creates an NgOnChangesFeature function for a component's features list.
 *
 * It accepts an optional map of minified input property names to original property names,
 * if any input properties have a public alias.
 *
 * The NgOnChangesFeature function that is returned decorates a component with support for
 * the ngOnChanges lifecycle hook, so it should be included in any component that implements
 * that hook.
 *
 * Example usage:
 *
 * ```
 * static ngComponentDef = defineComponent({
 *   ...
 *   inputs: {name: 'publicName'},
 *   features: [NgOnChangesFeature({name: 'name'})]
 * });
 * ```
 *
 * @param inputPropertyNames Map of input property names, if they are aliased
 * @returns DirectiveDefFeature
 */function NgOnChangesFeature(inputPropertyNames){return function(definition){var inputs=definition.inputs;var proto=definition.type.prototype;// Place where we will store SimpleChanges if there is a change
Object.defineProperty(proto,PRIVATE_PREFIX,{value:undefined,writable:true});var _loop_1=function _loop_1(pubKey){var minKey=inputs[pubKey];var propertyName=inputPropertyNames&&inputPropertyNames[minKey]||pubKey;var privateMinKey=PRIVATE_PREFIX+minKey;// Create a place where the actual value will be stored and make it non-enumerable
Object.defineProperty(proto,privateMinKey,{value:undefined,writable:true});var existingDesc=Object.getOwnPropertyDescriptor(proto,minKey);// create a getter and setter for property
Object.defineProperty(proto,minKey,{get:function get(){return existingDesc&&existingDesc.get?existingDesc.get.call(this):this[privateMinKey];},set:function set(value){var simpleChanges=this[PRIVATE_PREFIX];var isFirstChange=simpleChanges===undefined;if(simpleChanges==null){simpleChanges=this[PRIVATE_PREFIX]={};}simpleChanges[propertyName]=new SimpleChange(this[privateMinKey],value,isFirstChange);existingDesc&&existingDesc.set?existingDesc.set.call(this,value):this[privateMinKey]=value;}});};for(var pubKey in inputs){_loop_1(pubKey);}// If an onInit hook is defined, it will need to wrap the ngOnChanges call
// so the call order is changes-init-check in creation mode. In subsequent
// change detection runs, only the check wrapper will be called.
if(definition.onInit!=null){definition.onInit=onChangesWrapper(definition.onInit);}definition.doCheck=onChangesWrapper(definition.doCheck);};function onChangesWrapper(delegateHook){return function(){var simpleChanges=this[PRIVATE_PREFIX];if(simpleChanges!=null){this.ngOnChanges(simpleChanges);this[PRIVATE_PREFIX]=null;}delegateHook&&delegateHook.apply(this);};}}function PublicFeature(definition){definition.diPublic=diPublic;}var EMPTY$1={};/** Swaps the keys and values of an object. */function invertObject(obj){if(obj==null)return EMPTY$1;var newObj={};for(var minifiedKey in obj){newObj[obj[minifiedKey]]=minifiedKey;}return newObj;}/**
 * Create a directive definition object.
 *
 * # Example
 * ```
 * class MyDirective {
 *   // Generated by Angular Template Compiler
 *   // [Symbol] syntax will not be supported by TypeScript until v2.7
 *   static ngDirectiveDef = defineDirective({
 *     ...
 *   });
 * }
 * ```
 */var defineDirective=defineComponent;/**
 * Create a pipe definition object.
 *
 * # Example
 * ```
 * class MyPipe implements PipeTransform {
 *   // Generated by Angular Template Compiler
 *   static ngPipeDef = definePipe({
 *     ...
 *   });
 * }
 * ```
 * @param pipeDef Pipe definition generated by the compiler
 */exports.ɵdefineDirective=defineDirective;function definePipe(pipeDef){return{name:pipeDef.name,n:pipeDef.factory,pure:pipeDef.pure!==false,onDestroy:pipeDef.type.prototype.ngOnDestroy||null};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * If the value hasn't been saved, calls the pure function to store and return the
 * value. If it has been saved, returns the saved value.
 *
 * @param pureFn Function that returns a value
 * @returns value
 */function pureFunction0(pureFn,thisArg){return getCreationMode()?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg):pureFn()):consumeBinding();}/**
 * If the value of the provided exp has changed, calls the pure function to return
 * an updated value. Or if the value has not changed, returns cached value.
 *
 * @param pureFn Function that returns an updated value
 * @param exp Updated expression value
 * @returns Updated value
 */function pureFunction1(pureFn,exp,thisArg){return bindingUpdated(exp)?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp):pureFn(exp)):consumeBinding();}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn
 * @param exp1
 * @param exp2
 * @returns Updated value
 */function pureFunction2(pureFn,exp1,exp2,thisArg){return bindingUpdated2(exp1,exp2)?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp1,exp2):pureFn(exp1,exp2)):consumeBinding();}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @returns Updated value
 */function pureFunction3(pureFn,exp1,exp2,exp3,thisArg){var different=bindingUpdated2(exp1,exp2);return bindingUpdated(exp3)||different?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp1,exp2,exp3):pureFn(exp1,exp2,exp3)):consumeBinding();}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @returns Updated value
 */function pureFunction4(pureFn,exp1,exp2,exp3,exp4,thisArg){return bindingUpdated4(exp1,exp2,exp3,exp4)?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4):pureFn(exp1,exp2,exp3,exp4)):consumeBinding();}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @returns Updated value
 */function pureFunction5(pureFn,exp1,exp2,exp3,exp4,exp5,thisArg){var different=bindingUpdated4(exp1,exp2,exp3,exp4);return bindingUpdated(exp5)||different?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5):pureFn(exp1,exp2,exp3,exp4,exp5)):consumeBinding();}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @returns Updated value
 */function pureFunction6(pureFn,exp1,exp2,exp3,exp4,exp5,exp6,thisArg){var different=bindingUpdated4(exp1,exp2,exp3,exp4);return bindingUpdated2(exp5,exp6)||different?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6):pureFn(exp1,exp2,exp3,exp4,exp5,exp6)):consumeBinding();}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param exp7
 * @returns Updated value
 */function pureFunction7(pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,thisArg){var different=bindingUpdated4(exp1,exp2,exp3,exp4);different=bindingUpdated2(exp5,exp6)||different;return bindingUpdated(exp7)||different?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7)):consumeBinding();}/**
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn
 * @param exp1
 * @param exp2
 * @param exp3
 * @param exp4
 * @param exp5
 * @param exp6
 * @param exp7
 * @param exp8
 * @returns Updated value
 */function pureFunction8(pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8,thisArg){var different=bindingUpdated4(exp1,exp2,exp3,exp4);return bindingUpdated4(exp5,exp6,exp7,exp8)||different?checkAndUpdateBinding$1(thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8)):consumeBinding();}/**
 * pureFunction instruction that can support any number of bindings.
 *
 * If the value of any provided exp has changed, calls the pure function to return
 * an updated value. Or if no values have changed, returns cached value.
 *
 * @param pureFn A pure function that takes binding values and builds an object or array
 * containing those values.
 * @param exp An array of binding values
 * @returns Updated value
 */function pureFunctionV(pureFn,exps,thisArg){var different=false;for(var i=0;i<exps.length;i++){bindingUpdated(exps[i])&&(different=true);}return different?checkAndUpdateBinding$1(pureFn.apply(thisArg,exps)):consumeBinding();}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Create a pipe.
 *
 * @param index Pipe index where the pipe will be stored.
 * @param pipeName The name of the pipe
 * @returns T the instance of the pipe.
 */function pipe(index,pipeName){var tView=getTView();var pipeDef;if(tView.firstTemplatePass){pipeDef=getPipeDef(pipeName,tView.pipeRegistry);tView.data[index]=pipeDef;if(pipeDef.onDestroy){(tView.pipeDestroyHooks||(tView.pipeDestroyHooks=[])).push(index,pipeDef.onDestroy);}}else{pipeDef=tView.data[index];}var pipeInstance=pipeDef.n();store(index,pipeInstance);return pipeInstance;}/**
 * Searches the pipe registry for a pipe with the given name. If one is found,
 * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.
 *
 * @param name Name of pipe to resolve
 * @param registry Full list of available pipes
 * @returns Matching PipeDef
 */function getPipeDef(name,registry){if(registry){for(var i=0;i<registry.length;i++){var pipeDef=registry[i];if(name===pipeDef.name){return pipeDef;}}}throw new Error("Pipe with name '"+name+"' not found!");}/**
 * Invokes a pipe with 1 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param v1 1st argument to {@link PipeTransform#transform}.
 */function pipeBind1(index,v1){var pipeInstance=load(index);return isPure(index)?pureFunction1(pipeInstance.transform,v1,pipeInstance):pipeInstance.transform(v1);}/**
 * Invokes a pipe with 2 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 */function pipeBind2(index,v1,v2){var pipeInstance=load(index);return isPure(index)?pureFunction2(pipeInstance.transform,v1,v2,pipeInstance):pipeInstance.transform(v1,v2);}/**
 * Invokes a pipe with 3 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 * @param v3 4rd argument to {@link PipeTransform#transform}.
 */function pipeBind3(index,v1,v2,v3){var pipeInstance=load(index);return isPure(index)?pureFunction3(pipeInstance.transform.bind(pipeInstance),v1,v2,v3):pipeInstance.transform(v1,v2,v3);}/**
 * Invokes a pipe with 4 arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param v1 1st argument to {@link PipeTransform#transform}.
 * @param v2 2nd argument to {@link PipeTransform#transform}.
 * @param v3 3rd argument to {@link PipeTransform#transform}.
 * @param v4 4th argument to {@link PipeTransform#transform}.
 */function pipeBind4(index,v1,v2,v3,v4){var pipeInstance=load(index);return isPure(index)?pureFunction4(pipeInstance.transform,v1,v2,v3,v4,pipeInstance):pipeInstance.transform(v1,v2,v3,v4);}/**
 * Invokes a pipe with variable number of arguments.
 *
 * This instruction acts as a guard to {@link PipeTransform#transform} invoking
 * the pipe only when an input to the pipe changes.
 *
 * @param index Pipe index where the pipe was stored on creation.
 * @param values Array of arguments to pass to {@link PipeTransform#transform} method.
 */function pipeBindV(index,values){var pipeInstance=load(index);return isPure(index)?pureFunctionV(pipeInstance.transform,values,pipeInstance):pipeInstance.transform.apply(pipeInstance,values);}function isPure(index){return getTView().data[index].pure;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var LQueries_=/** @class */function(){function LQueries_(deep){this.shallow=null;this.deep=null;this.deep=deep==null?null:deep;}LQueries_.prototype.track=function(queryList,predicate,descend,read){// TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly
// mutate parent.
if(descend){this.deep=createQuery$1(this.deep,queryList,predicate,read!=null?read:null);}else{this.shallow=createQuery$1(this.shallow,queryList,predicate,read!=null?read:null);}};LQueries_.prototype.child=function(){if(this.deep===null){// if we don't have any deep queries then no need to track anything more.
return null;}if(this.shallow===null){// DeepQuery: We can reuse the current state if the child state would be same as current
// state.
return this;}else{// We need to create new state
return new LQueries_(this.deep);}};LQueries_.prototype.container=function(){var result=null;var query=this.deep;while(query){var containerValues=[];// prepare room for views
query.values.push(containerValues);var clonedQuery={next:null,list:query.list,predicate:query.predicate,values:containerValues};clonedQuery.next=result;result=clonedQuery;query=query.next;}return result?new LQueries_(result):null;};LQueries_.prototype.enterView=function(index){var result=null;var query=this.deep;while(query){var viewValues=[];// prepare room for view nodes
query.values.splice(index,0,viewValues);var clonedQuery={next:null,list:query.list,predicate:query.predicate,values:viewValues};clonedQuery.next=result;result=clonedQuery;query=query.next;}return result?new LQueries_(result):null;};LQueries_.prototype.addNode=function(node){add(this.shallow,node);add(this.deep,node);};LQueries_.prototype.removeView=function(index){var query=this.deep;while(query){var removed=query.values.splice(index,1);// mark a query as dirty only when removed view had matching modes
ngDevMode&&assertEqual(removed.length,1,'removed.length');if(removed[0].length){query.list.setDirty();}query=query.next;}};return LQueries_;}();/**
 * Iterates over local names for a given node and returns directive index
 * (or -1 if a local name points to an element).
 *
 * @param tNode static data of a node to check
 * @param selector selector to match
 * @returns directive index, -1 or null if a selector didn't match any of the local names
 */function getIdxOfMatchingSelector(tNode,selector){var localNames=tNode.localNames;if(localNames){for(var i=0;i<localNames.length;i+=2){if(localNames[i]===selector){return localNames[i+1];}}}return null;}/**
 * Iterates over all the directives for a node and returns index of a directive for a given type.
 *
 * @param node Node on which directives are present.
 * @param type Type of a directive to look for.
 * @returns Index of a found directive or null when none found.
 */function getIdxOfMatchingDirective(node,type){var defs=node.view.tView.directives;var flags=node.tNode.flags;var count=flags&4095;var start=flags>>13;var end=start+count;for(var i=start;i<end;i++){var def=defs[i];if(def.type===type&&def.diPublic){return i;}}return null;}function readFromNodeInjector(nodeInjector,node,read,directiveIdx){if(read instanceof ReadFromInjectorFn){return read.read(nodeInjector,node,directiveIdx);}else{var matchingIdx=getIdxOfMatchingDirective(node,read);if(matchingIdx!==null){return node.view.directives[matchingIdx];}}return null;}function add(query,node){var nodeInjector=getOrCreateNodeInjectorForNode(node);while(query){var predicate=query.predicate;var type=predicate.type;if(type){var directiveIdx=getIdxOfMatchingDirective(node,type);if(directiveIdx!==null){// a node is matching a predicate - determine what to read
// if read token and / or strategy is not specified, use type as read token
var result=readFromNodeInjector(nodeInjector,node,predicate.read||type,directiveIdx);if(result!==null){addMatch(query,result);}}}else{var selector=predicate.selector;for(var i=0;i<selector.length;i++){ngDevMode&&assertNotNull(node.tNode,'node.tNode');var directiveIdx=getIdxOfMatchingSelector(node.tNode,selector[i]);if(directiveIdx!==null){// a node is matching a predicate - determine what to read
// note that queries using name selector must specify read strategy
ngDevMode&&assertNotNull(predicate.read,'the node should have a predicate');var result=readFromNodeInjector(nodeInjector,node,predicate.read,directiveIdx);if(result!==null){addMatch(query,result);}}}}query=query.next;}}function addMatch(query,matchingValue){query.values.push(matchingValue);query.list.setDirty();}function createPredicate(predicate,read){var isArray=Array.isArray(predicate);return{type:isArray?null:predicate,selector:isArray?predicate:null,read:read};}function createQuery$1(previous,queryList,predicate,read){return{next:previous,list:queryList,predicate:createPredicate(predicate,read),values:queryList._valuesTree};}var QueryList_=/** @class */function(){function QueryList_(){this.dirty=true;this.changes=new EventEmitter();this._values=[];/** @internal */this._valuesTree=[];}Object.defineProperty(QueryList_.prototype,"length",{get:function get(){return this._values.length;},enumerable:true,configurable:true});Object.defineProperty(QueryList_.prototype,"first",{get:function get(){var values=this._values;return values.length?values[0]:null;},enumerable:true,configurable:true});Object.defineProperty(QueryList_.prototype,"last",{get:function get(){var values=this._values;return values.length?values[values.length-1]:null;},enumerable:true,configurable:true});/**
     * See
     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
     */ /**
       * See
       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
       */QueryList_.prototype.map=/**
       * See
       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
       */function(fn){return this._values.map(fn);};/**
     * See
     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
     */ /**
       * See
       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
       */QueryList_.prototype.filter=/**
       * See
       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
       */function(fn){return this._values.filter(fn);};/**
     * See
     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
     */ /**
       * See
       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
       */QueryList_.prototype.find=/**
       * See
       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
       */function(fn){return this._values.find(fn);};/**
     * See
     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
     */ /**
       * See
       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
       */QueryList_.prototype.reduce=/**
       * See
       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
       */function(fn,init){return this._values.reduce(fn,init);};/**
     * See
     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
     */ /**
       * See
       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
       */QueryList_.prototype.forEach=/**
       * See
       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
       */function(fn){this._values.forEach(fn);};/**
     * See
     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
     */ /**
       * See
       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
       */QueryList_.prototype.some=/**
       * See
       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
       */function(fn){return this._values.some(fn);};QueryList_.prototype.toArray=function(){return this._values.slice(0);};QueryList_.prototype[getSymbolIterator()]=function(){return this._values[getSymbolIterator()]();};QueryList_.prototype.toString=function(){return this._values.toString();};QueryList_.prototype.reset=function(res){this._values=flatten$1(res);this.dirty=false;};QueryList_.prototype.notifyOnChanges=function(){this.changes.emit(this);};QueryList_.prototype.setDirty=function(){this.dirty=true;};QueryList_.prototype.destroy=function(){this.changes.complete();this.changes.unsubscribe();};return QueryList_;}();var QueryList$1=QueryList_;/**
 * Creates and returns a QueryList.
 *
 * @param memoryIndex The index in memory where the QueryList should be saved. If null,
 * this is is a content query and the QueryList will be saved later through directiveCreate.
 * @param predicate The type for which the query will search
 * @param descend Whether or not to descend into children
 * @param read What to save in the query
 * @returns QueryList<T>
 */function query(memoryIndex,predicate,descend,read){ngDevMode&&assertPreviousIsParent();var queryList=new QueryList$1();var queries=getCurrentQueries(LQueries_);queries.track(queryList,predicate,descend,read);if(memoryIndex!=null){store(memoryIndex,queryList);}return queryList;}/**
 * Refreshes a query by combining matches from all active views and removing matches from deleted
 * views.
 * Returns true if a query got dirty during change detection, false otherwise.
 */function queryRefresh(queryList){var queryListImpl=queryList;if(queryList.dirty){queryList.reset(queryListImpl._valuesTree);queryList.notifyOnChanges();return true;}return false;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var BRAND='__SANITIZER_TRUSTED_BRAND__';/**
 * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing
 * dangerous content.
 *
 * This method parses the `html` and locates potentially dangerous content (such as urls and
 * javascript) and removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.
 *
 * @param unsafeHtml untrusted `html`, typically from the user.
 * @returns `html` string which is safe to display to user, because all of the dangerous javascript
 * and urls have been removed.
 */function sanitizeHtml(unsafeHtml){if(unsafeHtml instanceof String&&unsafeHtml[BRAND]==='Html'){return unsafeHtml.toString();}return _sanitizeHtml(document,stringify$1(unsafeHtml));}/**
 * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing
 * dangerous content.
 *
 * This method parses the `style` and locates potentially dangerous content (such as urls and
 * javascript) and removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.
 *
 * @param unsafeStyle untrusted `style`, typically from the user.
 * @returns `style` string which is safe to bind to the `style` properties, because all of the
 * dangerous javascript and urls have been removed.
 */function sanitizeStyle(unsafeStyle){if(unsafeStyle instanceof String&&unsafeStyle[BRAND]==='Style'){return unsafeStyle.toString();}return _sanitizeStyle(stringify$1(unsafeStyle));}/**
 * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing
 * dangerous
 * content.
 *
 * This method parses the `url` and locates potentially dangerous content (such as javascript) and
 * removes it.
 *
 * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.
 *
 * @param unsafeUrl untrusted `url`, typically from the user.
 * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
 * all of the dangerous javascript has been removed.
 */function sanitizeUrl(unsafeUrl){if(unsafeUrl instanceof String&&unsafeUrl[BRAND]==='Url'){return unsafeUrl.toString();}return _sanitizeUrl(stringify$1(unsafeUrl));}/**
 * A `url` sanitizer which only lets trusted `url`s through.
 *
 * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.
 *
 * @param unsafeResourceUrl untrusted `url`, typically from the user.
 * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
 * only trusted `url`s have been allowed to pass.
 */function sanitizeResourceUrl(unsafeResourceUrl){if(unsafeResourceUrl instanceof String&&unsafeResourceUrl[BRAND]==='ResourceUrl'){return unsafeResourceUrl.toString();}throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');}/**
 * A `script` sanitizer which only lets trusted javascript through.
 *
 * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.
 *
 * @param unsafeScript untrusted `script`, typically from the user.
 * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,
 * because only trusted `scripts`s have been allowed to pass.
 */ /**
 * Mark `html` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link htmlSanitizer} to be trusted implicitly.
 *
 * @param trustedHtml `html` string which needs to be implicitly trusted.
 * @returns a `html` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustHtml(trustedHtml){return bypassSanitizationTrustString(trustedHtml,'Html');}/**
 * Mark `style` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link styleSanitizer} to be trusted implicitly.
 *
 * @param trustedStyle `style` string which needs to be implicitly trusted.
 * @returns a `style` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustStyle(trustedStyle){return bypassSanitizationTrustString(trustedStyle,'Style');}/**
 * Mark `script` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link scriptSanitizer} to be trusted implicitly.
 *
 * @param trustedScript `script` string which needs to be implicitly trusted.
 * @returns a `script` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustScript(trustedScript){return bypassSanitizationTrustString(trustedScript,'Script');}/**
 * Mark `url` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link urlSanitizer} to be trusted implicitly.
 *
 * @param trustedUrl `url` string which needs to be implicitly trusted.
 * @returns a `url` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustUrl(trustedUrl){return bypassSanitizationTrustString(trustedUrl,'Url');}/**
 * Mark `url` string as trusted.
 *
 * This function wraps the trusted string in `String` and brands it in a way which makes it
 * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.
 *
 * @param trustedResourceUrl `url` string which needs to be implicitly trusted.
 * @returns a `url` `String` which has been branded to be implicitly trusted.
 */function bypassSanitizationTrustResourceUrl(trustedResourceUrl){return bypassSanitizationTrustString(trustedResourceUrl,'ResourceUrl');}function bypassSanitizationTrustString(trustedString,mode){var trusted=new String(trustedString);trusted[BRAND]=mode;return trusted;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // clang-format on
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // This file only reexports content of the `src` folder. Keep it that way.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Generated bundle index. Do not edit.
 */
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(141)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__extends = __extends;
exports.__rest = __rest;
exports.__decorate = __decorate;
exports.__param = __param;
exports.__metadata = __metadata;
exports.__awaiter = __awaiter;
exports.__generator = __generator;
exports.__exportStar = __exportStar;
exports.__values = __values;
exports.__read = __read;
exports.__spread = __spread;
exports.__await = __await;
exports.__asyncGenerator = __asyncGenerator;
exports.__asyncDelegator = __asyncDelegator;
exports.__asyncValues = __asyncValues;
exports.__makeTemplateObject = __makeTemplateObject;
exports.__importStar = __importStar;
exports.__importDefault = __importDefault;
exports.__assign = void 0;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  exports.__assign = _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};

exports.__assign = _assign;

function __rest(s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
  }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}

function __metadata(metadataKey, metadataValue) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : new P(function (resolve) {
        resolve(result.value);
      }).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}

function __exportStar(m, exports) {
  for (var p in m) {
    if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
}

function __values(o) {
  var m = typeof Symbol === "function" && o[Symbol.iterator],
      i = 0;
  if (m) return m.call(o);
  return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}

function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
}

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}

;

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result.default = mod;
  return result;
}

function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}

/***/ }),
/* 2 */,
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Subscriber = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _isFunction = __webpack_require__(80);

var _Observer = __webpack_require__(212);

var _Subscription = __webpack_require__(15);

var _rxSubscriber = __webpack_require__(138);

var _config = __webpack_require__(95);

var _hostReportError = __webpack_require__(139);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var Subscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(Subscriber, _super);

  function Subscriber(destinationOrNext, error, complete) {
    var _this = _super.call(this) || this;

    _this.syncErrorValue = null;
    _this.syncErrorThrown = false;
    _this.syncErrorThrowable = false;
    _this.isStopped = false;

    switch (arguments.length) {
      case 0:
        _this.destination = _Observer.empty;
        break;

      case 1:
        if (!destinationOrNext) {
          _this.destination = _Observer.empty;
          break;
        }

        if (_typeof(destinationOrNext) === 'object') {
          if (isTrustedSubscriber(destinationOrNext)) {
            var trustedSubscriber = destinationOrNext[_rxSubscriber.rxSubscriber]();

            _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;
            _this.destination = trustedSubscriber;
            trustedSubscriber.add(_this);
          } else {
            _this.syncErrorThrowable = true;
            _this.destination = new SafeSubscriber(_this, destinationOrNext);
          }

          break;
        }

      default:
        _this.syncErrorThrowable = true;
        _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
        break;
    }

    return _this;
  }

  Subscriber.prototype[_rxSubscriber.rxSubscriber] = function () {
    return this;
  };

  Subscriber.create = function (next, error, complete) {
    var subscriber = new Subscriber(next, error, complete);
    subscriber.syncErrorThrowable = false;
    return subscriber;
  };

  Subscriber.prototype.next = function (value) {
    if (!this.isStopped) {
      this._next(value);
    }
  };

  Subscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      this.isStopped = true;

      this._error(err);
    }
  };

  Subscriber.prototype.complete = function () {
    if (!this.isStopped) {
      this.isStopped = true;

      this._complete();
    }
  };

  Subscriber.prototype.unsubscribe = function () {
    if (this.closed) {
      return;
    }

    this.isStopped = true;

    _super.prototype.unsubscribe.call(this);
  };

  Subscriber.prototype._next = function (value) {
    this.destination.next(value);
  };

  Subscriber.prototype._error = function (err) {
    this.destination.error(err);
    this.unsubscribe();
  };

  Subscriber.prototype._complete = function () {
    this.destination.complete();
    this.unsubscribe();
  };

  Subscriber.prototype._unsubscribeAndRecycle = function () {
    var _a = this,
        _parent = _a._parent,
        _parents = _a._parents;

    this._parent = null;
    this._parents = null;
    this.unsubscribe();
    this.closed = false;
    this.isStopped = false;
    this._parent = _parent;
    this._parents = _parents;
    return this;
  };

  return Subscriber;
}(_Subscription.Subscription);

exports.Subscriber = Subscriber;

var SafeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SafeSubscriber, _super);

  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
    var _this = _super.call(this) || this;

    _this._parentSubscriber = _parentSubscriber;
    var next;
    var context = _this;

    if ((0, _isFunction.isFunction)(observerOrNext)) {
      next = observerOrNext;
    } else if (observerOrNext) {
      next = observerOrNext.next;
      error = observerOrNext.error;
      complete = observerOrNext.complete;

      if (observerOrNext !== _Observer.empty) {
        context = Object.create(observerOrNext);

        if ((0, _isFunction.isFunction)(context.unsubscribe)) {
          _this.add(context.unsubscribe.bind(context));
        }

        context.unsubscribe = _this.unsubscribe.bind(_this);
      }
    }

    _this._context = context;
    _this._next = next;
    _this._error = error;
    _this._complete = complete;
    return _this;
  }

  SafeSubscriber.prototype.next = function (value) {
    if (!this.isStopped && this._next) {
      var _parentSubscriber = this._parentSubscriber;

      if (!_config.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
        this.__tryOrUnsub(this._next, value);
      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
        this.unsubscribe();
      }
    }
  };

  SafeSubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var _parentSubscriber = this._parentSubscriber;
      var useDeprecatedSynchronousErrorHandling = _config.config.useDeprecatedSynchronousErrorHandling;

      if (this._error) {
        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(this._error, err);

          this.unsubscribe();
        } else {
          this.__tryOrSetError(_parentSubscriber, this._error, err);

          this.unsubscribe();
        }
      } else if (!_parentSubscriber.syncErrorThrowable) {
        this.unsubscribe();

        if (useDeprecatedSynchronousErrorHandling) {
          throw err;
        }

        (0, _hostReportError.hostReportError)(err);
      } else {
        if (useDeprecatedSynchronousErrorHandling) {
          _parentSubscriber.syncErrorValue = err;
          _parentSubscriber.syncErrorThrown = true;
        } else {
          (0, _hostReportError.hostReportError)(err);
        }

        this.unsubscribe();
      }
    }
  };

  SafeSubscriber.prototype.complete = function () {
    var _this = this;

    if (!this.isStopped) {
      var _parentSubscriber = this._parentSubscriber;

      if (this._complete) {
        var wrappedComplete = function wrappedComplete() {
          return _this._complete.call(_this._context);
        };

        if (!_config.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(wrappedComplete);

          this.unsubscribe();
        } else {
          this.__tryOrSetError(_parentSubscriber, wrappedComplete);

          this.unsubscribe();
        }
      } else {
        this.unsubscribe();
      }
    }
  };

  SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
    try {
      fn.call(this._context, value);
    } catch (err) {
      this.unsubscribe();

      if (_config.config.useDeprecatedSynchronousErrorHandling) {
        throw err;
      } else {
        (0, _hostReportError.hostReportError)(err);
      }
    }
  };

  SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
    if (!_config.config.useDeprecatedSynchronousErrorHandling) {
      throw new Error('bad call');
    }

    try {
      fn.call(this._context, value);
    } catch (err) {
      if (_config.config.useDeprecatedSynchronousErrorHandling) {
        parent.syncErrorValue = err;
        parent.syncErrorThrown = true;
        return true;
      } else {
        (0, _hostReportError.hostReportError)(err);
        return true;
      }
    }

    return false;
  };

  SafeSubscriber.prototype._unsubscribe = function () {
    var _parentSubscriber = this._parentSubscriber;
    this._context = null;
    this._parentSubscriber = null;

    _parentSubscriber.unsubscribe();
  };

  return SafeSubscriber;
}(Subscriber);

function isTrustedSubscriber(obj) {
  return obj instanceof Subscriber || 'syncErrorThrowable' in obj && obj[_rxSubscriber.rxSubscriber];
}

/***/ }),
/* 4 */,
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Observable = void 0;

var _toSubscriber = __webpack_require__(617);

var _observable = __webpack_require__(61);

var _pipe = __webpack_require__(140);

var _config = __webpack_require__(95);

/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */
var Observable =
/*@__PURE__*/
function () {
  function Observable(subscribe) {
    this._isScalar = false;

    if (subscribe) {
      this._subscribe = subscribe;
    }
  }

  Observable.prototype.lift = function (operator) {
    var observable = new Observable();
    observable.source = this;
    observable.operator = operator;
    return observable;
  };

  Observable.prototype.subscribe = function (observerOrNext, error, complete) {
    var operator = this.operator;
    var sink = (0, _toSubscriber.toSubscriber)(observerOrNext, error, complete);

    if (operator) {
      operator.call(sink, this.source);
    } else {
      sink.add(this.source || _config.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));
    }

    if (_config.config.useDeprecatedSynchronousErrorHandling) {
      if (sink.syncErrorThrowable) {
        sink.syncErrorThrowable = false;

        if (sink.syncErrorThrown) {
          throw sink.syncErrorValue;
        }
      }
    }

    return sink;
  };

  Observable.prototype._trySubscribe = function (sink) {
    try {
      return this._subscribe(sink);
    } catch (err) {
      if (_config.config.useDeprecatedSynchronousErrorHandling) {
        sink.syncErrorThrown = true;
        sink.syncErrorValue = err;
      }

      sink.error(err);
    }
  };

  Observable.prototype.forEach = function (next, promiseCtor) {
    var _this = this;

    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function (resolve, reject) {
      var subscription;
      subscription = _this.subscribe(function (value) {
        try {
          next(value);
        } catch (err) {
          reject(err);

          if (subscription) {
            subscription.unsubscribe();
          }
        }
      }, reject, resolve);
    });
  };

  Observable.prototype._subscribe = function (subscriber) {
    var source = this.source;
    return source && source.subscribe(subscriber);
  };

  Observable.prototype[_observable.observable] = function () {
    return this;
  };

  Observable.prototype.pipe = function () {
    var operations = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      operations[_i] = arguments[_i];
    }

    if (operations.length === 0) {
      return this;
    }

    return (0, _pipe.pipeFromArray)(operations)(this);
  };

  Observable.prototype.toPromise = function (promiseCtor) {
    var _this = this;

    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function (resolve, reject) {
      var value;

      _this.subscribe(function (x) {
        return value = x;
      }, function (err) {
        return reject(err);
      }, function () {
        return resolve(value);
      });
    });
  };

  Observable.create = function (subscribe) {
    return new Observable(subscribe);
  };

  return Observable;
}();

exports.Observable = Observable;

function getPromiseCtor(promiseCtor) {
  if (!promiseCtor) {
    promiseCtor = _config.config.Promise || Promise;
  }

  if (!promiseCtor) {
    throw new Error('no Promise impl found');
  }

  return promiseCtor;
}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OuterSubscriber = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
var OuterSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(OuterSubscriber, _super);

  function OuterSubscriber() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  OuterSubscriber.prototype.notifyError = function (error, innerSub) {
    this.destination.error(error);
  };

  OuterSubscriber.prototype.notifyComplete = function (innerSub) {
    this.destination.complete();
  };

  return OuterSubscriber;
}(_Subscriber.Subscriber);

exports.OuterSubscriber = OuterSubscriber;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeToResult = subscribeToResult;

var _InnerSubscriber = __webpack_require__(505);

var _subscribeTo = __webpack_require__(237);

/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */
function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
  var destination = new _InnerSubscriber.InnerSubscriber(outerSubscriber, outerValue, outerIndex);
  return (0, _subscribeTo.subscribeTo)(result)(destination);
}

/***/ }),
/* 8 */,
/* 9 */,
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ɵangular_packages_common_common_d = findLocaleData;
exports.ɵangular_packages_common_common_b = getPluralCase;
exports.registerLocaleData = exports.ɵregisterLocaleData = registerLocaleData;
exports.formatDate = formatDate;
exports.formatCurrency = formatCurrency;
exports.formatNumber = formatNumber;
exports.formatPercent = formatPercent;
exports.getNumberOfCurrencyDigits = getNumberOfCurrencyDigits;
exports.getCurrencySymbol = getCurrencySymbol;
exports.getLocaleDayPeriods = getLocaleDayPeriods;
exports.getLocaleDayNames = getLocaleDayNames;
exports.getLocaleMonthNames = getLocaleMonthNames;
exports.getLocaleId = getLocaleId;
exports.getLocaleEraNames = getLocaleEraNames;
exports.getLocaleWeekEndRange = getLocaleWeekEndRange;
exports.getLocaleFirstDayOfWeek = getLocaleFirstDayOfWeek;
exports.getLocaleDateFormat = getLocaleDateFormat;
exports.getLocaleDateTimeFormat = getLocaleDateTimeFormat;
exports.getLocaleExtraDayPeriodRules = getLocaleExtraDayPeriodRules;
exports.getLocaleExtraDayPeriods = getLocaleExtraDayPeriods;
exports.getLocalePluralCase = getLocalePluralCase;
exports.getLocaleTimeFormat = getLocaleTimeFormat;
exports.getLocaleNumberSymbol = getLocaleNumberSymbol;
exports.getLocaleNumberFormat = getLocaleNumberFormat;
exports.getLocaleCurrencyName = getLocaleCurrencyName;
exports.getLocaleCurrencySymbol = getLocaleCurrencySymbol;
exports.ɵparseCookieValue = parseCookieValue;
exports.isPlatformBrowser = isPlatformBrowser;
exports.isPlatformServer = isPlatformServer;
exports.isPlatformWorkerApp = isPlatformWorkerApp;
exports.isPlatformWorkerUi = isPlatformWorkerUi;
exports.Location = exports.PathLocationStrategy = exports.HashLocationStrategy = exports.APP_BASE_HREF = exports.LocationStrategy = exports.LOCATION_INITIALIZED = exports.PlatformLocation = exports.VERSION = exports.ɵPLATFORM_WORKER_UI_ID = exports.ɵPLATFORM_WORKER_APP_ID = exports.ɵPLATFORM_SERVER_ID = exports.ɵPLATFORM_BROWSER_ID = exports.DeprecatedPercentPipe = exports.DeprecatedDecimalPipe = exports.DeprecatedCurrencyPipe = exports.DeprecatedDatePipe = exports.TitleCasePipe = exports.UpperCasePipe = exports.SlicePipe = exports.PercentPipe = exports.DecimalPipe = exports.CurrencyPipe = exports.LowerCasePipe = exports.JsonPipe = exports.I18nSelectPipe = exports.I18nPluralPipe = exports.DatePipe = exports.AsyncPipe = exports.DOCUMENT = exports.NgComponentOutlet = exports.NgTemplateOutlet = exports.NgSwitchDefault = exports.NgSwitchCase = exports.NgSwitch = exports.NgStyle = exports.NgPluralCase = exports.NgPlural = exports.NgIfContext = exports.NgIf = exports.NgForOfContext = exports.NgForOf = exports.NgClass = exports.DeprecatedI18NPipesModule = exports.CommonModule = exports.WeekDay = exports.NumberSymbol = exports.FormatWidth = exports.TranslationWidth = exports.FormStyle = exports.NumberFormatStyle = exports.Plural = exports.NgLocalization = exports.NgLocaleLocalization = exports.ɵangular_packages_common_common_f = exports.ɵangular_packages_common_common_g = exports.ɵangular_packages_common_common_a = exports.ɵangular_packages_common_common_e = void 0;

var _core = __webpack_require__(0);

var _tslib = __webpack_require__(1);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This class should not be used directly by an application developer. Instead, use
 * {@link Location}.
 *
 * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform
 * agnostic.
 * This means that we can have different implementation of `PlatformLocation` for the different
 * platforms that angular supports. For example, `@angular/platform-browser` provides an
 * implementation specific to the browser environment, while `@angular/platform-webworker` provides
 * one suitable for use with web workers.
 *
 * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}
 * when they need to interact with the DOM apis like pushState, popState, etc...
 *
 * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly
 * by the {@link Router} in order to navigate between routes. Since all interactions between {@link
 * Router} /
 * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`
 * class they are all platform independent.
 *
 *
 */
var PlatformLocation =
/** @class */
function () {
  function PlatformLocation() {}

  return PlatformLocation;
}();
/**
 * @description Indicates when a location is initialized.
 * @experimental
 */


exports.PlatformLocation = PlatformLocation;
var LOCATION_INITIALIZED = new _core.InjectionToken('Location Initialized');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * `LocationStrategy` is responsible for representing and reading route state
 * from the browser's URL. Angular provides two strategies:
 * {@link HashLocationStrategy} and {@link PathLocationStrategy}.
 *
 * This is used under the hood of the {@link Location} service.
 *
 * Applications should use the {@link Router} or {@link Location} services to
 * interact with application route state.
 *
 * For instance, {@link HashLocationStrategy} produces URLs like
 * `http://example.com#/foo`, and {@link PathLocationStrategy} produces
 * `http://example.com/foo` as an equivalent URL.
 *
 * See these two classes for more.
 *
 *
 */

exports.LOCATION_INITIALIZED = LOCATION_INITIALIZED;

var LocationStrategy =
/** @class */
function () {
  function LocationStrategy() {}

  return LocationStrategy;
}();
/**
 * The `APP_BASE_HREF` token represents the base href to be used with the
 * {@link PathLocationStrategy}.
 *
 * If you're using {@link PathLocationStrategy}, you must provide a provider to a string
 * representing the URL prefix that should be preserved when generating and recognizing
 * URLs.
 *
 * ### Example
 *
 * ```typescript
 * import {Component, NgModule} from '@angular/core';
 * import {APP_BASE_HREF} from '@angular/common';
 *
 * @NgModule({
 *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]
 * })
 * class AppModule {}
 * ```
 *
 *
 */


exports.LocationStrategy = LocationStrategy;
var APP_BASE_HREF = new _core.InjectionToken('appBaseHref');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * A service that applications can use to interact with a browser's URL.
 *
 * Depending on which {@link LocationStrategy} is used, `Location` will either persist
 * to the URL's path or the URL's hash segment.
 *
 * Note: it's better to use {@link Router#navigate} service to trigger route changes. Use
 * `Location` only if you need to interact with or create normalized URLs outside of
 * routing.
 *
 * `Location` is responsible for normalizing the URL against the application's base href.
 * A normalized URL is absolute from the URL host, includes the application's base href, and has no
 * trailing slash:
 * - `/my/app/user/123` is normalized
 * - `my/app/user/123` **is not** normalized
 * - `/my/app/user/123/` **is not** normalized
 *
 * ### Example
 * {@example common/location/ts/path_location_component.ts region='LocationComponent'}
 *
 */

exports.APP_BASE_HREF = APP_BASE_HREF;

var Location =
/** @class */
function () {
  function Location(platformStrategy) {
    var _this = this;
    /** @internal */


    this._subject = new _core.EventEmitter();
    this._platformStrategy = platformStrategy;

    var browserBaseHref = this._platformStrategy.getBaseHref();

    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));

    this._platformStrategy.onPopState(function (ev) {
      _this._subject.emit({
        'url': _this.path(true),
        'pop': true,
        'state': ev.state,
        'type': ev.type
      });
    });
  }
  /**
   * Returns the normalized URL path.
   */
  // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is
  // removed.

  /**
     * Returns the normalized URL path.
     */
  // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is
  // removed.


  Location.prototype.path =
  /**
  * Returns the normalized URL path.
  */
  // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is
  // removed.
  function (includeHash) {
    if (includeHash === void 0) {
      includeHash = false;
    }

    return this.normalize(this._platformStrategy.path(includeHash));
  };
  /**
   * Normalizes the given path and compares to the current normalized path.
   */

  /**
     * Normalizes the given path and compares to the current normalized path.
     */


  Location.prototype.isCurrentPathEqualTo =
  /**
  * Normalizes the given path and compares to the current normalized path.
  */
  function (path, query) {
    if (query === void 0) {
      query = '';
    }

    return this.path() == this.normalize(path + Location.normalizeQueryParams(query));
  };
  /**
   * Given a string representing a URL, returns the normalized URL path without leading or
   * trailing slashes.
   */

  /**
     * Given a string representing a URL, returns the normalized URL path without leading or
     * trailing slashes.
     */


  Location.prototype.normalize =
  /**
  * Given a string representing a URL, returns the normalized URL path without leading or
  * trailing slashes.
  */
  function (url) {
    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));
  };
  /**
   * Given a string representing a URL, returns the platform-specific external URL path.
   * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one
   * before normalizing. This method will also add a hash if `HashLocationStrategy` is
   * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
   */

  /**
     * Given a string representing a URL, returns the platform-specific external URL path.
     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one
     * before normalizing. This method will also add a hash if `HashLocationStrategy` is
     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
     */


  Location.prototype.prepareExternalUrl =
  /**
  * Given a string representing a URL, returns the platform-specific external URL path.
  * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one
  * before normalizing. This method will also add a hash if `HashLocationStrategy` is
  * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
  */
  function (url) {
    if (url && url[0] !== '/') {
      url = '/' + url;
    }

    return this._platformStrategy.prepareExternalUrl(url);
  }; // TODO: rename this method to pushState

  /**
   * Changes the browsers URL to the normalized version of the given URL, and pushes a
   * new item onto the platform's history.
   */
  // TODO: rename this method to pushState

  /**
     * Changes the browsers URL to the normalized version of the given URL, and pushes a
     * new item onto the platform's history.
     */


  Location.prototype.go = // TODO: rename this method to pushState

  /**
     * Changes the browsers URL to the normalized version of the given URL, and pushes a
     * new item onto the platform's history.
     */
  function (path, query, state) {
    if (query === void 0) {
      query = '';
    }

    if (state === void 0) {
      state = null;
    }

    this._platformStrategy.pushState(state, '', path, query);
  };
  /**
   * Changes the browsers URL to the normalized version of the given URL, and replaces
   * the top item on the platform's history stack.
   */

  /**
     * Changes the browsers URL to the normalized version of the given URL, and replaces
     * the top item on the platform's history stack.
     */


  Location.prototype.replaceState =
  /**
  * Changes the browsers URL to the normalized version of the given URL, and replaces
  * the top item on the platform's history stack.
  */
  function (path, query, state) {
    if (query === void 0) {
      query = '';
    }

    if (state === void 0) {
      state = null;
    }

    this._platformStrategy.replaceState(state, '', path, query);
  };
  /**
   * Navigates forward in the platform's history.
   */

  /**
     * Navigates forward in the platform's history.
     */


  Location.prototype.forward =
  /**
  * Navigates forward in the platform's history.
  */
  function () {
    this._platformStrategy.forward();
  };
  /**
   * Navigates back in the platform's history.
   */

  /**
     * Navigates back in the platform's history.
     */


  Location.prototype.back =
  /**
  * Navigates back in the platform's history.
  */
  function () {
    this._platformStrategy.back();
  };
  /**
   * Subscribe to the platform's `popState` events.
   */

  /**
     * Subscribe to the platform's `popState` events.
     */


  Location.prototype.subscribe =
  /**
  * Subscribe to the platform's `popState` events.
  */
  function (onNext, onThrow, onReturn) {
    return this._subject.subscribe({
      next: onNext,
      error: onThrow,
      complete: onReturn
    });
  };
  /**
   * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as
   * is.
   */

  /**
     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as
     * is.
     */


  Location.normalizeQueryParams =
  /**
  * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as
  * is.
  */
  function (params) {
    return params && params[0] !== '?' ? '?' + params : params;
  };
  /**
   * Given 2 parts of a url, join them with a slash if needed.
   */

  /**
     * Given 2 parts of a url, join them with a slash if needed.
     */


  Location.joinWithSlash =
  /**
  * Given 2 parts of a url, join them with a slash if needed.
  */
  function (start, end) {
    if (start.length == 0) {
      return end;
    }

    if (end.length == 0) {
      return start;
    }

    var slashes = 0;

    if (start.endsWith('/')) {
      slashes++;
    }

    if (end.startsWith('/')) {
      slashes++;
    }

    if (slashes == 2) {
      return start + end.substring(1);
    }

    if (slashes == 1) {
      return start + end;
    }

    return start + '/' + end;
  };
  /**
   * If url has a trailing slash, remove it, otherwise return url as is. This
   * method looks for the first occurrence of either #, ?, or the end of the
   * line as `/` characters after any of these should not be replaced.
   */

  /**
     * If url has a trailing slash, remove it, otherwise return url as is. This
     * method looks for the first occurrence of either #, ?, or the end of the
     * line as `/` characters after any of these should not be replaced.
     */


  Location.stripTrailingSlash =
  /**
  * If url has a trailing slash, remove it, otherwise return url as is. This
  * method looks for the first occurrence of either #, ?, or the end of the
  * line as `/` characters after any of these should not be replaced.
  */
  function (url) {
    var match = url.match(/#|\?|$/);
    var pathEndIdx = match && match.index || url.length;
    var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);
    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);
  };

  Location.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  Location.ctorParameters = function () {
    return [{
      type: LocationStrategy
    }];
  };

  return Location;
}();

exports.Location = Location;

function _stripBaseHref(baseHref, url) {
  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;
}

function _stripIndexHtml(url) {
  return url.replace(/\/index.html$/, '');
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * A {@link LocationStrategy} used to configure the {@link Location} service to
 * represent its state in the
 * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)
 * of the browser's URL.
 *
 * For instance, if you call `location.go('/foo')`, the browser's URL will become
 * `example.com#/foo`.
 *
 * ### Example
 *
 * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}
 *
 *
 */


var HashLocationStrategy =
/** @class */
function (_super) {
  (0, _tslib.__extends)(HashLocationStrategy, _super);

  function HashLocationStrategy(_platformLocation, _baseHref) {
    var _this = _super.call(this) || this;

    _this._platformLocation = _platformLocation;
    _this._baseHref = '';

    if (_baseHref != null) {
      _this._baseHref = _baseHref;
    }

    return _this;
  }

  HashLocationStrategy.prototype.onPopState = function (fn) {
    this._platformLocation.onPopState(fn);

    this._platformLocation.onHashChange(fn);
  };

  HashLocationStrategy.prototype.getBaseHref = function () {
    return this._baseHref;
  };

  HashLocationStrategy.prototype.path = function (includeHash) {
    if (includeHash === void 0) {
      includeHash = false;
    } // the hash value is always prefixed with a `#`
    // and if it is empty then it will stay empty


    var path = this._platformLocation.hash;
    if (path == null) path = '#';
    return path.length > 0 ? path.substring(1) : path;
  };

  HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {
    var url = Location.joinWithSlash(this._baseHref, internal);
    return url.length > 0 ? '#' + url : url;
  };

  HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {
    var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));

    if (url.length == 0) {
      url = this._platformLocation.pathname;
    }

    this._platformLocation.pushState(state, title, url);
  };

  HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {
    var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));

    if (url.length == 0) {
      url = this._platformLocation.pathname;
    }

    this._platformLocation.replaceState(state, title, url);
  };

  HashLocationStrategy.prototype.forward = function () {
    this._platformLocation.forward();
  };

  HashLocationStrategy.prototype.back = function () {
    this._platformLocation.back();
  };

  HashLocationStrategy.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  HashLocationStrategy.ctorParameters = function () {
    return [{
      type: PlatformLocation
    }, {
      type: undefined,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Inject,
        args: [APP_BASE_HREF]
      }]
    }];
  };

  return HashLocationStrategy;
}(LocationStrategy);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 * A {@link LocationStrategy} used to configure the {@link Location} service to
 * represent its state in the
 * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the
 * browser's URL.
 *
 * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}
 * or add a base element to the document. This URL prefix that will be preserved
 * when generating and recognizing URLs.
 *
 * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * Similarly, if you add `<base href='/my/app'/>` to the document and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * ### Example
 *
 * {@example common/location/ts/path_location_component.ts region='LocationComponent'}
 *
 *
 */


exports.HashLocationStrategy = HashLocationStrategy;

var PathLocationStrategy =
/** @class */
function (_super) {
  (0, _tslib.__extends)(PathLocationStrategy, _super);

  function PathLocationStrategy(_platformLocation, href) {
    var _this = _super.call(this) || this;

    _this._platformLocation = _platformLocation;

    if (href == null) {
      href = _this._platformLocation.getBaseHrefFromDOM();
    }

    if (href == null) {
      throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");
    }

    _this._baseHref = href;
    return _this;
  }

  PathLocationStrategy.prototype.onPopState = function (fn) {
    this._platformLocation.onPopState(fn);

    this._platformLocation.onHashChange(fn);
  };

  PathLocationStrategy.prototype.getBaseHref = function () {
    return this._baseHref;
  };

  PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {
    return Location.joinWithSlash(this._baseHref, internal);
  };

  PathLocationStrategy.prototype.path = function (includeHash) {
    if (includeHash === void 0) {
      includeHash = false;
    }

    var pathname = this._platformLocation.pathname + Location.normalizeQueryParams(this._platformLocation.search);
    var hash = this._platformLocation.hash;
    return hash && includeHash ? "" + pathname + hash : pathname;
  };

  PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {
    var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));

    this._platformLocation.pushState(state, title, externalUrl);
  };

  PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {
    var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));

    this._platformLocation.replaceState(state, title, externalUrl);
  };

  PathLocationStrategy.prototype.forward = function () {
    this._platformLocation.forward();
  };

  PathLocationStrategy.prototype.back = function () {
    this._platformLocation.back();
  };

  PathLocationStrategy.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  PathLocationStrategy.ctorParameters = function () {
    return [{
      type: PlatformLocation
    }, {
      type: undefined,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Inject,
        args: [APP_BASE_HREF]
      }]
    }];
  };

  return PathLocationStrategy;
}(LocationStrategy);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// THIS CODE IS GENERATED - DO NOT MODIFY
// See angular/tools/gulp-tasks/cldr/extract.js


exports.PathLocationStrategy = PathLocationStrategy;
var u = undefined;

function plural(n) {
  var i = Math.floor(Math.abs(n)),
      v = n.toString().replace(/^[^.]*\.?/, '').length;
  if (i === 1 && v === 0) return 1;
  return 5;
}

var localeEn = ['en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u], [['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'], ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'], ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']], u, [['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'], ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']], u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0], ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'], ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \'at\' {0}', u], ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'], ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @experimental i18n support is experimental.
 */

var LOCALE_DATA = {};
/**
 * Register global data to be used internally by Angular. See the
 * {@linkDocs guide/i18n#i18n-pipes "I18n guide"} to know how to import additional locale data.
 *
 * @experimental i18n support is experimental.
 */
// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1

function registerLocaleData(data, localeId, extraData) {
  if (typeof localeId !== 'string') {
    extraData = localeId;
    localeId = data[0
    /* LocaleId */
    ];
  }

  localeId = localeId.toLowerCase().replace(/_/g, '-');
  LOCALE_DATA[localeId] = data;

  if (extraData) {
    LOCALE_DATA[localeId][19
    /* ExtraData */
    ] = extraData;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @internal */


var CURRENCIES_EN = {
  'ADP': [undefined, undefined, 0],
  'AFN': [undefined, undefined, 0],
  'ALL': [undefined, undefined, 0],
  'AMD': [undefined, undefined, 0],
  'AOA': [undefined, 'Kz'],
  'ARS': [undefined, '$'],
  'AUD': ['A$', '$'],
  'BAM': [undefined, 'KM'],
  'BBD': [undefined, '$'],
  'BDT': [undefined, '৳'],
  'BHD': [undefined, undefined, 3],
  'BIF': [undefined, undefined, 0],
  'BMD': [undefined, '$'],
  'BND': [undefined, '$'],
  'BOB': [undefined, 'Bs'],
  'BRL': ['R$'],
  'BSD': [undefined, '$'],
  'BWP': [undefined, 'P'],
  'BYN': [undefined, 'р.', 2],
  'BYR': [undefined, undefined, 0],
  'BZD': [undefined, '$'],
  'CAD': ['CA$', '$', 2],
  'CHF': [undefined, undefined, 2],
  'CLF': [undefined, undefined, 4],
  'CLP': [undefined, '$', 0],
  'CNY': ['CN¥', '¥'],
  'COP': [undefined, '$', 0],
  'CRC': [undefined, '₡', 2],
  'CUC': [undefined, '$'],
  'CUP': [undefined, '$'],
  'CZK': [undefined, 'Kč', 2],
  'DJF': [undefined, undefined, 0],
  'DKK': [undefined, 'kr', 2],
  'DOP': [undefined, '$'],
  'EGP': [undefined, 'E£'],
  'ESP': [undefined, '₧', 0],
  'EUR': ['€'],
  'FJD': [undefined, '$'],
  'FKP': [undefined, '£'],
  'GBP': ['£'],
  'GEL': [undefined, '₾'],
  'GIP': [undefined, '£'],
  'GNF': [undefined, 'FG', 0],
  'GTQ': [undefined, 'Q'],
  'GYD': [undefined, '$', 0],
  'HKD': ['HK$', '$'],
  'HNL': [undefined, 'L'],
  'HRK': [undefined, 'kn'],
  'HUF': [undefined, 'Ft', 2],
  'IDR': [undefined, 'Rp', 0],
  'ILS': ['₪'],
  'INR': ['₹'],
  'IQD': [undefined, undefined, 0],
  'IRR': [undefined, undefined, 0],
  'ISK': [undefined, 'kr', 0],
  'ITL': [undefined, undefined, 0],
  'JMD': [undefined, '$'],
  'JOD': [undefined, undefined, 3],
  'JPY': ['¥', undefined, 0],
  'KHR': [undefined, '៛'],
  'KMF': [undefined, 'CF', 0],
  'KPW': [undefined, '₩', 0],
  'KRW': ['₩', undefined, 0],
  'KWD': [undefined, undefined, 3],
  'KYD': [undefined, '$'],
  'KZT': [undefined, '₸'],
  'LAK': [undefined, '₭', 0],
  'LBP': [undefined, 'L£', 0],
  'LKR': [undefined, 'Rs'],
  'LRD': [undefined, '$'],
  'LTL': [undefined, 'Lt'],
  'LUF': [undefined, undefined, 0],
  'LVL': [undefined, 'Ls'],
  'LYD': [undefined, undefined, 3],
  'MGA': [undefined, 'Ar', 0],
  'MGF': [undefined, undefined, 0],
  'MMK': [undefined, 'K', 0],
  'MNT': [undefined, '₮', 0],
  'MRO': [undefined, undefined, 0],
  'MUR': [undefined, 'Rs', 0],
  'MXN': ['MX$', '$'],
  'MYR': [undefined, 'RM'],
  'NAD': [undefined, '$'],
  'NGN': [undefined, '₦'],
  'NIO': [undefined, 'C$'],
  'NOK': [undefined, 'kr', 2],
  'NPR': [undefined, 'Rs'],
  'NZD': ['NZ$', '$'],
  'OMR': [undefined, undefined, 3],
  'PHP': [undefined, '₱'],
  'PKR': [undefined, 'Rs', 0],
  'PLN': [undefined, 'zł'],
  'PYG': [undefined, '₲', 0],
  'RON': [undefined, 'lei'],
  'RSD': [undefined, undefined, 0],
  'RUB': [undefined, '₽'],
  'RUR': [undefined, 'р.'],
  'RWF': [undefined, 'RF', 0],
  'SBD': [undefined, '$'],
  'SEK': [undefined, 'kr', 2],
  'SGD': [undefined, '$'],
  'SHP': [undefined, '£'],
  'SLL': [undefined, undefined, 0],
  'SOS': [undefined, undefined, 0],
  'SRD': [undefined, '$'],
  'SSP': [undefined, '£'],
  'STD': [undefined, undefined, 0],
  'STN': [undefined, 'Db'],
  'SYP': [undefined, '£', 0],
  'THB': [undefined, '฿'],
  'TMM': [undefined, undefined, 0],
  'TND': [undefined, undefined, 3],
  'TOP': [undefined, 'T$'],
  'TRL': [undefined, undefined, 0],
  'TRY': [undefined, '₺'],
  'TTD': [undefined, '$'],
  'TWD': ['NT$', '$', 2],
  'TZS': [undefined, undefined, 0],
  'UAH': [undefined, '₴'],
  'UGX': [undefined, undefined, 0],
  'USD': ['$'],
  'UYI': [undefined, undefined, 0],
  'UYU': [undefined, '$'],
  'UZS': [undefined, undefined, 0],
  'VEF': [undefined, 'Bs'],
  'VND': ['₫', undefined, 0],
  'VUV': [undefined, undefined, 0],
  'XAF': ['FCFA', undefined, 0],
  'XCD': ['EC$', '$'],
  'XOF': ['CFA', undefined, 0],
  'XPF': ['CFPF', undefined, 0],
  'YER': [undefined, undefined, 0],
  'ZAR': [undefined, 'R'],
  'ZMK': [undefined, undefined, 0],
  'ZMW': [undefined, 'ZK'],
  'ZWD': [undefined, undefined, 0]
};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The different format styles that can be used to represent numbers.
 * Used by the function {@link getLocaleNumberFormat}.
 *
 * @experimental i18n support is experimental.
 */

/**
 * The different format styles that can be used to represent numbers.
 * Used by the function {@link getLocaleNumberFormat}.
 *
 * @experimental i18n support is experimental.
 */

var NumberFormatStyle;
/**
 * The different format styles that can be used to represent numbers.
 * Used by the function {@link getLocaleNumberFormat}.
 *
 * @experimental i18n support is experimental.
 */

exports.NumberFormatStyle = NumberFormatStyle;

(function (NumberFormatStyle) {
  NumberFormatStyle[NumberFormatStyle["Decimal"] = 0] = "Decimal";
  NumberFormatStyle[NumberFormatStyle["Percent"] = 1] = "Percent";
  NumberFormatStyle[NumberFormatStyle["Currency"] = 2] = "Currency";
  NumberFormatStyle[NumberFormatStyle["Scientific"] = 3] = "Scientific";
})(NumberFormatStyle || (exports.NumberFormatStyle = NumberFormatStyle = {}));
/** @experimental */

/** @experimental */


var Plural;
/** @experimental */

exports.Plural = Plural;

(function (Plural) {
  Plural[Plural["Zero"] = 0] = "Zero";
  Plural[Plural["One"] = 1] = "One";
  Plural[Plural["Two"] = 2] = "Two";
  Plural[Plural["Few"] = 3] = "Few";
  Plural[Plural["Many"] = 4] = "Many";
  Plural[Plural["Other"] = 5] = "Other";
})(Plural || (exports.Plural = Plural = {}));
/**
 * Some languages use two different forms of strings (standalone and format) depending on the
 * context.
 * Typically the standalone version is the nominative form of the word, and the format version is in
 * the genitive.
 * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.
 *
 * @experimental i18n support is experimental.
 */

/**
 * Some languages use two different forms of strings (standalone and format) depending on the
 * context.
 * Typically the standalone version is the nominative form of the word, and the format version is in
 * the genitive.
 * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.
 *
 * @experimental i18n support is experimental.
 */


var FormStyle;
/**
 * Some languages use two different forms of strings (standalone and format) depending on the
 * context.
 * Typically the standalone version is the nominative form of the word, and the format version is in
 * the genitive.
 * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.
 *
 * @experimental i18n support is experimental.
 */

exports.FormStyle = FormStyle;

(function (FormStyle) {
  FormStyle[FormStyle["Format"] = 0] = "Format";
  FormStyle[FormStyle["Standalone"] = 1] = "Standalone";
})(FormStyle || (exports.FormStyle = FormStyle = {}));
/**
 * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),
 * wide (full length), and short (2 characters, only for days).
 *
 * For example the day `Sunday` will be:
 * - Narrow: `S`
 * - Short: `Su`
 * - Abbreviated: `Sun`
 * - Wide: `Sunday`
 *
 * @experimental i18n support is experimental.
 */

/**
 * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),
 * wide (full length), and short (2 characters, only for days).
 *
 * For example the day `Sunday` will be:
 * - Narrow: `S`
 * - Short: `Su`
 * - Abbreviated: `Sun`
 * - Wide: `Sunday`
 *
 * @experimental i18n support is experimental.
 */


var TranslationWidth;
/**
 * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),
 * wide (full length), and short (2 characters, only for days).
 *
 * For example the day `Sunday` will be:
 * - Narrow: `S`
 * - Short: `Su`
 * - Abbreviated: `Sun`
 * - Wide: `Sunday`
 *
 * @experimental i18n support is experimental.
 */

exports.TranslationWidth = TranslationWidth;

(function (TranslationWidth) {
  TranslationWidth[TranslationWidth["Narrow"] = 0] = "Narrow";
  TranslationWidth[TranslationWidth["Abbreviated"] = 1] = "Abbreviated";
  TranslationWidth[TranslationWidth["Wide"] = 2] = "Wide";
  TranslationWidth[TranslationWidth["Short"] = 3] = "Short";
})(TranslationWidth || (exports.TranslationWidth = TranslationWidth = {}));
/**
 * Multiple widths are available for formats: short (minimal amount of data), medium (small amount
 * of data), long (complete amount of data), full (complete amount of data and extra information).
 *
 * For example the date-time formats for the english locale will be:
 *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)
 *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)
 *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)
 *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at
 * 9:03:01 AM GMT+01:00`)
 *
 * @experimental i18n support is experimental.
 */

/**
 * Multiple widths are available for formats: short (minimal amount of data), medium (small amount
 * of data), long (complete amount of data), full (complete amount of data and extra information).
 *
 * For example the date-time formats for the english locale will be:
 *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)
 *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)
 *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)
 *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at
 * 9:03:01 AM GMT+01:00`)
 *
 * @experimental i18n support is experimental.
 */


var FormatWidth;
/**
 * Multiple widths are available for formats: short (minimal amount of data), medium (small amount
 * of data), long (complete amount of data), full (complete amount of data and extra information).
 *
 * For example the date-time formats for the english locale will be:
 *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)
 *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)
 *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)
 *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at
 * 9:03:01 AM GMT+01:00`)
 *
 * @experimental i18n support is experimental.
 */

exports.FormatWidth = FormatWidth;

(function (FormatWidth) {
  FormatWidth[FormatWidth["Short"] = 0] = "Short";
  FormatWidth[FormatWidth["Medium"] = 1] = "Medium";
  FormatWidth[FormatWidth["Long"] = 2] = "Long";
  FormatWidth[FormatWidth["Full"] = 3] = "Full";
})(FormatWidth || (exports.FormatWidth = FormatWidth = {}));
/**
 * Number symbol that can be used to replace placeholders in number patterns.
 * The placeholders are based on english values:
 *
 * | Name                   | Example for en-US | Meaning                                     |
 * |------------------------|-------------------|---------------------------------------------|
 * | decimal                | 2,345`.`67        | decimal separator                           |
 * | group                  | 2`,`345.67        | grouping separator, typically for thousands |
 * | plusSign               | `+`23             | the plus sign used with numbers             |
 * | minusSign              | `-`23             | the minus sign used with numbers            |
 * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |
 * | perMille               | 234`‰`            | the permille sign (out of 1000)             |
 * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |
 * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |
 * | infinity               | `∞`               | used in +∞ and -∞.                          |
 * | nan                    | `NaN`             | "not a number".                             |
 * | timeSeparator          | 10`:`52           | symbol used between time units              |
 * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to "decimal"    |
 * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to "group"     |
 *
 * @experimental i18n support is experimental.
 */

/**
 * Number symbol that can be used to replace placeholders in number patterns.
 * The placeholders are based on english values:
 *
 * | Name                   | Example for en-US | Meaning                                     |
 * |------------------------|-------------------|---------------------------------------------|
 * | decimal                | 2,345`.`67        | decimal separator                           |
 * | group                  | 2`,`345.67        | grouping separator, typically for thousands |
 * | plusSign               | `+`23             | the plus sign used with numbers             |
 * | minusSign              | `-`23             | the minus sign used with numbers            |
 * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |
 * | perMille               | 234`‰`            | the permille sign (out of 1000)             |
 * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |
 * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |
 * | infinity               | `∞`               | used in +∞ and -∞.                          |
 * | nan                    | `NaN`             | "not a number".                             |
 * | timeSeparator          | 10`:`52           | symbol used between time units              |
 * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to "decimal"    |
 * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to "group"     |
 *
 * @experimental i18n support is experimental.
 */


var NumberSymbol;
/**
 * Number symbol that can be used to replace placeholders in number patterns.
 * The placeholders are based on english values:
 *
 * | Name                   | Example for en-US | Meaning                                     |
 * |------------------------|-------------------|---------------------------------------------|
 * | decimal                | 2,345`.`67        | decimal separator                           |
 * | group                  | 2`,`345.67        | grouping separator, typically for thousands |
 * | plusSign               | `+`23             | the plus sign used with numbers             |
 * | minusSign              | `-`23             | the minus sign used with numbers            |
 * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |
 * | perMille               | 234`‰`            | the permille sign (out of 1000)             |
 * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |
 * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |
 * | infinity               | `∞`               | used in +∞ and -∞.                          |
 * | nan                    | `NaN`             | "not a number".                             |
 * | timeSeparator          | 10`:`52           | symbol used between time units              |
 * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to "decimal"    |
 * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to "group"     |
 *
 * @experimental i18n support is experimental.
 */

exports.NumberSymbol = NumberSymbol;

(function (NumberSymbol) {
  NumberSymbol[NumberSymbol["Decimal"] = 0] = "Decimal";
  NumberSymbol[NumberSymbol["Group"] = 1] = "Group";
  NumberSymbol[NumberSymbol["List"] = 2] = "List";
  NumberSymbol[NumberSymbol["PercentSign"] = 3] = "PercentSign";
  NumberSymbol[NumberSymbol["PlusSign"] = 4] = "PlusSign";
  NumberSymbol[NumberSymbol["MinusSign"] = 5] = "MinusSign";
  NumberSymbol[NumberSymbol["Exponential"] = 6] = "Exponential";
  NumberSymbol[NumberSymbol["SuperscriptingExponent"] = 7] = "SuperscriptingExponent";
  NumberSymbol[NumberSymbol["PerMille"] = 8] = "PerMille";
  NumberSymbol[NumberSymbol["Infinity"] = 9] = "Infinity";
  NumberSymbol[NumberSymbol["NaN"] = 10] = "NaN";
  NumberSymbol[NumberSymbol["TimeSeparator"] = 11] = "TimeSeparator";
  NumberSymbol[NumberSymbol["CurrencyDecimal"] = 12] = "CurrencyDecimal";
  NumberSymbol[NumberSymbol["CurrencyGroup"] = 13] = "CurrencyGroup";
})(NumberSymbol || (exports.NumberSymbol = NumberSymbol = {}));
/**
 * The value for each day of the week, based on the en-US locale
 *
 * @experimental
 */

/**
 * The value for each day of the week, based on the en-US locale
 *
 * @experimental
 */


var WeekDay;
/**
 * The value for each day of the week, based on the en-US locale
 *
 * @experimental
 */

exports.WeekDay = WeekDay;

(function (WeekDay) {
  WeekDay[WeekDay["Sunday"] = 0] = "Sunday";
  WeekDay[WeekDay["Monday"] = 1] = "Monday";
  WeekDay[WeekDay["Tuesday"] = 2] = "Tuesday";
  WeekDay[WeekDay["Wednesday"] = 3] = "Wednesday";
  WeekDay[WeekDay["Thursday"] = 4] = "Thursday";
  WeekDay[WeekDay["Friday"] = 5] = "Friday";
  WeekDay[WeekDay["Saturday"] = 6] = "Saturday";
})(WeekDay || (exports.WeekDay = WeekDay = {}));
/**
 * The locale id for the chosen locale (e.g `en-GB`).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleId(locale) {
  return findLocaleData(locale)[0
  /* LocaleId */
  ];
}
/**
 * Periods of the day (e.g. `[AM, PM]` for en-US).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDayPeriods(locale, formStyle, width) {
  var data = findLocaleData(locale);
  var amPmData = [data[1
  /* DayPeriodsFormat */
  ], data[2
  /* DayPeriodsStandalone */
  ]];
  var amPm = getLastDefinedValue(amPmData, formStyle);
  return getLastDefinedValue(amPm, width);
}
/**
 * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDayNames(locale, formStyle, width) {
  var data = findLocaleData(locale);
  var daysData = [data[3
  /* DaysFormat */
  ], data[4
  /* DaysStandalone */
  ]];
  var days = getLastDefinedValue(daysData, formStyle);
  return getLastDefinedValue(days, width);
}
/**
 * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleMonthNames(locale, formStyle, width) {
  var data = findLocaleData(locale);
  var monthsData = [data[5
  /* MonthsFormat */
  ], data[6
  /* MonthsStandalone */
  ]];
  var months = getLastDefinedValue(monthsData, formStyle);
  return getLastDefinedValue(months, width);
}
/**
 * Eras for the Gregorian calendar (e.g. AD/BC).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleEraNames(locale, width) {
  var data = findLocaleData(locale);
  var erasData = data[7
  /* Eras */
  ];
  return getLastDefinedValue(erasData, width);
}
/**
 * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).
 * For example in french the value would be 1 because the first day of the week is Monday.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleFirstDayOfWeek(locale) {
  var data = findLocaleData(locale);
  return data[8
  /* FirstDayOfWeek */
  ];
}
/**
 * Range of days in the week that represent the week-end for this locale, based on english days
 * (Sunday = 0, Monday = 1, ...).
 * For example in english the value would be [6,0] for Saturday to Sunday.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleWeekEndRange(locale) {
  var data = findLocaleData(locale);
  return data[9
  /* WeekendRange */
  ];
}
/**
 * Date format that depends on the locale.
 *
 * There are four basic date formats:
 * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).
 *
 *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like
 *  "Tuesday, September 14, 1999".
 *
 * - `long` should contain year, long-month, day.
 *
 *  For example, `MMMM d, y`, corresponding to a date like "September 14, 1999".
 *
 * - `medium` should contain year, abbreviated-month (MMM), day.
 *
 *  For example, `MMM d, y`, corresponding to a date like "Sep 14, 1999".
 *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,
 *  `y/MM/dd`, corresponding to a date like "1999/09/14".
 *
 * - `short` should contain year, numeric-month (MM/M), and day.
 *
 *  For example, `M/d/yy`, corresponding to a date like "9/14/99".
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDateFormat(locale, width) {
  var data = findLocaleData(locale);
  return getLastDefinedValue(data[10
  /* DateFormat */
  ], width);
}
/**
 * Time format that depends on the locale.
 *
 * The standard formats include four basic time formats:
 * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).
 * - `long` should contain hour, minute, second, and zone (z)
 * - `medium` should contain hour, minute, second.
 * - `short` should contain hour, minute.
 *
 * Note: The patterns depend on whether the main country using your language uses 12-hour time or
 * not:
 * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running
 * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle
 * running 0 through 11 (midnight plus 1 minute is 0:01).
 * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0
 * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running
 * 1 through 24 (midnight plus 1 minute is 24:01).
 *
 * @experimental i18n support is experimental.
 */


function getLocaleTimeFormat(locale, width) {
  var data = findLocaleData(locale);
  return getLastDefinedValue(data[11
  /* TimeFormat */
  ], width);
}
/**
 * Date-time format that depends on the locale.
 *
 * The date-time pattern shows how to combine separate patterns for date (represented by {1})
 * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.
 * What you want to pay attention to are:
 * - possibly removing a space for languages that don't use it, such as many East Asian languages
 * - possibly adding a comma, other punctuation, or a combining word
 *
 * For example:
 * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses
 *  `{1}{0}`.
 * - An English formatted date-time using the combining pattern `{1}, {0}` could be
 *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time
 *  portion.
 *
 * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use
 * is normally based on the date style. For example, if the date has a full month and weekday
 * name, the full combining pattern will be used to combine that with a time. If the date has
 * numeric month, the short version of the combining pattern will be used to combine that with a
 * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short
 * styles.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleDateTimeFormat(locale, width) {
  var data = findLocaleData(locale);
  var dateTimeFormatData = data[12
  /* DateTimeFormat */
  ];
  return getLastDefinedValue(dateTimeFormatData, width);
}
/**
 * Number symbol that can be used to replace placeholders in number formats.
 * See {@link NumberSymbol} for more information.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleNumberSymbol(locale, symbol) {
  var data = findLocaleData(locale);
  var res = data[13
  /* NumberSymbols */
  ][symbol];

  if (typeof res === 'undefined') {
    if (symbol === NumberSymbol.CurrencyDecimal) {
      return data[13
      /* NumberSymbols */
      ][NumberSymbol.Decimal];
    } else if (symbol === NumberSymbol.CurrencyGroup) {
      return data[13
      /* NumberSymbols */
      ][NumberSymbol.Group];
    }
  }

  return res;
}
/**
 * Number format that depends on the locale.
 *
 * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`
 * when used to format the number 12345.678 could result in "12'345,67". That would happen if the
 * grouping separator for your language is an apostrophe, and the decimal separator is a comma.
 *
 * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;
 * they stand for the decimal separator, and so on, and are NOT real characters.
 * You must NOT "translate" the placeholders; for example, don't change `.` to `,` even though in
 * your language the decimal point is written with a comma. The symbols should be replaced by the
 * local equivalents, using the Number Symbols for your language.
 *
 * Here are the special characters used in number patterns:
 *
 * | Symbol | Meaning |
 * |--------|---------|
 * | . | Replaced automatically by the character used for the decimal point. |
 * | , | Replaced by the "grouping" (thousands) separator. |
 * | 0 | Replaced by a digit (or zero if there aren't enough digits). |
 * | # | Replaced by a digit (or nothing if there aren't enough). |
 * | ¤ | This will be replaced by a currency symbol, such as $ or USD. |
 * | % | This marks a percent format. The % symbol may change position, but must be retained. |
 * | E | This marks a scientific format. The E symbol may change position, but must be retained. |
 * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |
 *
 * You can find more information
 * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)
 *
 * @experimental i18n support is experimental.
 */


function getLocaleNumberFormat(locale, type) {
  var data = findLocaleData(locale);
  return data[14
  /* NumberFormats */
  ][type];
}
/**
 * The symbol used to represent the currency for the main country using this locale (e.g. $ for
 * the locale en-US).
 * The symbol will be `null` if the main country cannot be determined.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleCurrencySymbol(locale) {
  var data = findLocaleData(locale);
  return data[15
  /* CurrencySymbol */
  ] || null;
}
/**
 * The name of the currency for the main country using this locale (e.g. USD for the locale
 * en-US).
 * The name will be `null` if the main country cannot be determined.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleCurrencyName(locale) {
  var data = findLocaleData(locale);
  return data[16
  /* CurrencyName */
  ] || null;
}
/**
 * Returns the currency values for the locale
 */


function getLocaleCurrencies(locale) {
  var data = findLocaleData(locale);
  return data[17
  /* Currencies */
  ];
}
/**
 * The locale plural function used by ICU expressions to determine the plural case to use.
 * See {@link NgPlural} for more information.
 *
 * @experimental i18n support is experimental.
 */


function getLocalePluralCase(locale) {
  var data = findLocaleData(locale);
  return data[18
  /* PluralCase */
  ];
}

function checkFullData(data) {
  if (!data[19
  /* ExtraData */
  ]) {
    throw new Error("Missing extra locale data for the locale \"" + data[0
    /* LocaleId */
    ] + "\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.");
  }
}
/**
 * Rules used to determine which day period to use (See `dayPeriods` below).
 * The rules can either be an array or a single value. If it's an array, consider it as "from"
 * and "to". If it's a single value then it means that the period is only valid at this exact
 * value.
 * There is always the same number of rules as the number of day periods, which means that the
 * first rule is applied to the first day period and so on.
 * You should fallback to AM/PM when there are no rules available.
 *
 * Note: this is only available if you load the full locale data.
 * See the {@linkDocs guide/i18n#i18n-pipes "I18n guide"} to know how to import additional locale
 * data.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleExtraDayPeriodRules(locale) {
  var data = findLocaleData(locale);
  checkFullData(data);
  var rules = data[19
  /* ExtraData */
  ][2
  /* ExtraDayPeriodsRules */
  ] || [];
  return rules.map(function (rule) {
    if (typeof rule === 'string') {
      return extractTime(rule);
    }

    return [extractTime(rule[0]), extractTime(rule[1])];
  });
}
/**
 * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,
 * noon, afternoon, midnight, ...).
 * You should use the function {@link getLocaleExtraDayPeriodRules} to determine which period to
 * use.
 * You should fallback to AM/PM when there are no day periods available.
 *
 * Note: this is only available if you load the full locale data.
 * See the {@linkDocs guide/i18n#i18n-pipes "I18n guide"} to know how to import additional locale
 * data.
 *
 * @experimental i18n support is experimental.
 */


function getLocaleExtraDayPeriods(locale, formStyle, width) {
  var data = findLocaleData(locale);
  checkFullData(data);
  var dayPeriodsData = [data[19
  /* ExtraData */
  ][0
  /* ExtraDayPeriodFormats */
  ], data[19
  /* ExtraData */
  ][1
  /* ExtraDayPeriodStandalone */
  ]];
  var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];
  return getLastDefinedValue(dayPeriods, width) || [];
}
/**
 * Returns the first value that is defined in an array, going backwards.
 *
 * To avoid repeating the same data (e.g. when "format" and "standalone" are the same) we only
 * add the first one to the locale data arrays, the other ones are only defined when different.
 * We use this function to retrieve the first defined value.
 *
 * @experimental i18n support is experimental.
 */


function getLastDefinedValue(data, index) {
  for (var i = index; i > -1; i--) {
    if (typeof data[i] !== 'undefined') {
      return data[i];
    }
  }

  throw new Error('Locale data API: locale data undefined');
}
/**
 * Extract the hours and minutes from a string like "15:45"
 */


function extractTime(time) {
  var _a = (0, _tslib.__read)(time.split(':'), 2),
      h = _a[0],
      m = _a[1];

  return {
    hours: +h,
    minutes: +m
  };
}
/**
 * Finds the locale data for a locale id
 *
 * @experimental i18n support is experimental.
 */


function findLocaleData(locale) {
  var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');
  var match = LOCALE_DATA[normalizedLocale];

  if (match) {
    return match;
  } // let's try to find a parent locale


  var parentLocale = normalizedLocale.split('-')[0];
  match = LOCALE_DATA[parentLocale];

  if (match) {
    return match;
  }

  if (parentLocale === 'en') {
    return localeEn;
  }

  throw new Error("Missing locale data for the locale \"" + locale + "\".");
}
/**
 * Returns the currency symbol for a given currency code, or the code if no symbol available
 * (e.g.: format narrow = $, format wide = US$, code = USD)
 * If no locale is provided, it uses the locale "en" by default
 *
 * @experimental i18n support is experimental.
 */


function getCurrencySymbol(code, format, locale) {
  if (locale === void 0) {
    locale = 'en';
  }

  var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];
  var symbolNarrow = currency[1
  /* SymbolNarrow */
  ];

  if (format === 'narrow' && typeof symbolNarrow === 'string') {
    return symbolNarrow;
  }

  return currency[0
  /* Symbol */
  ] || code;
} // Most currencies have cents, that's why the default is 2


var DEFAULT_NB_OF_CURRENCY_DIGITS = 2;
/**
 * Returns the number of decimal digits for the given currency.
 * Its value depends upon the presence of cents in that particular currency.
 *
 * @experimental i18n support is experimental.
 */

function getNumberOfCurrencyDigits(code) {
  var digits;
  var currency = CURRENCIES_EN[code];

  if (currency) {
    digits = currency[2
    /* NbOfDigits */
    ];
  }

  return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ISO8601_DATE_REGEX = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/; //    1        2       3         4          5          6          7          8  9     10      11

var NAMED_FORMATS = {};
var DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
var ZoneWidth;

(function (ZoneWidth) {
  ZoneWidth[ZoneWidth["Short"] = 0] = "Short";
  ZoneWidth[ZoneWidth["ShortGMT"] = 1] = "ShortGMT";
  ZoneWidth[ZoneWidth["Long"] = 2] = "Long";
  ZoneWidth[ZoneWidth["Extended"] = 3] = "Extended";
})(ZoneWidth || (ZoneWidth = {}));

var DateType;

(function (DateType) {
  DateType[DateType["FullYear"] = 0] = "FullYear";
  DateType[DateType["Month"] = 1] = "Month";
  DateType[DateType["Date"] = 2] = "Date";
  DateType[DateType["Hours"] = 3] = "Hours";
  DateType[DateType["Minutes"] = 4] = "Minutes";
  DateType[DateType["Seconds"] = 5] = "Seconds";
  DateType[DateType["Milliseconds"] = 6] = "Milliseconds";
  DateType[DateType["Day"] = 7] = "Day";
})(DateType || (DateType = {}));

var TranslationType;

(function (TranslationType) {
  TranslationType[TranslationType["DayPeriods"] = 0] = "DayPeriods";
  TranslationType[TranslationType["Days"] = 1] = "Days";
  TranslationType[TranslationType["Months"] = 2] = "Months";
  TranslationType[TranslationType["Eras"] = 3] = "Eras";
})(TranslationType || (TranslationType = {}));
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a date according to locale rules.
 *
 * Where:
 * - `value` is a Date, a number (milliseconds since UTC epoch) or an ISO string
 *   (https://www.w3.org/TR/NOTE-datetime).
 * - `format` indicates which date/time components to include. See {@link DatePipe} for more
 *   details.
 * - `locale` is a `string` defining the locale to use.
 * - `timezone` to be used for formatting. It understands UTC/GMT and the continental US time zone
 *   abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).
 *   If not specified, host system settings are used.
 *
 * See {@link DatePipe} for more details.
 *
 *
 */


function formatDate(value, format, locale, timezone) {
  var date = toDate(value);
  var namedFormat = getNamedFormat(locale, format);
  format = namedFormat || format;
  var parts = [];
  var match;

  while (format) {
    match = DATE_FORMATS_SPLIT.exec(format);

    if (match) {
      parts = parts.concat(match.slice(1));
      var part = parts.pop();

      if (!part) {
        break;
      }

      format = part;
    } else {
      parts.push(format);
      break;
    }
  }

  var dateTimezoneOffset = date.getTimezoneOffset();

  if (timezone) {
    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
    date = convertTimezoneToLocal(date, timezone, true);
  }

  var text = '';
  parts.forEach(function (value) {
    var dateFormatter = getDateFormatter(value);
    text += dateFormatter ? dateFormatter(date, locale, dateTimezoneOffset) : value === '\'\'' ? '\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
  });
  return text;
}

function getNamedFormat(locale, format) {
  var localeId = getLocaleId(locale);
  NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};

  if (NAMED_FORMATS[localeId][format]) {
    return NAMED_FORMATS[localeId][format];
  }

  var formatValue = '';

  switch (format) {
    case 'shortDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Short);
      break;

    case 'mediumDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);
      break;

    case 'longDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Long);
      break;

    case 'fullDate':
      formatValue = getLocaleDateFormat(locale, FormatWidth.Full);
      break;

    case 'shortTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);
      break;

    case 'mediumTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);
      break;

    case 'longTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);
      break;

    case 'fullTime':
      formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);
      break;

    case 'short':
      var shortTime = getNamedFormat(locale, 'shortTime');
      var shortDate = getNamedFormat(locale, 'shortDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);
      break;

    case 'medium':
      var mediumTime = getNamedFormat(locale, 'mediumTime');
      var mediumDate = getNamedFormat(locale, 'mediumDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);
      break;

    case 'long':
      var longTime = getNamedFormat(locale, 'longTime');
      var longDate = getNamedFormat(locale, 'longDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);
      break;

    case 'full':
      var fullTime = getNamedFormat(locale, 'fullTime');
      var fullDate = getNamedFormat(locale, 'fullDate');
      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);
      break;
  }

  if (formatValue) {
    NAMED_FORMATS[localeId][format] = formatValue;
  }

  return formatValue;
}

function formatDateTime(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{([^}]+)}/g, function (match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }

  return str;
}

function padNumber(num, digits, minusSign, trim, negWrap) {
  if (minusSign === void 0) {
    minusSign = '-';
  }

  var neg = '';

  if (num < 0 || negWrap && num <= 0) {
    if (negWrap) {
      num = -num + 1;
    } else {
      num = -num;
      neg = minusSign;
    }
  }

  var strNum = String(num);

  while (strNum.length < digits) {
    strNum = '0' + strNum;
  }

  if (trim) {
    strNum = strNum.substr(strNum.length - digits);
  }

  return neg + strNum;
}
/**
 * Returns a date formatter that transforms a date into its locale digit representation
 */


function dateGetter(name, size, offset, trim, negWrap) {
  if (offset === void 0) {
    offset = 0;
  }

  if (trim === void 0) {
    trim = false;
  }

  if (negWrap === void 0) {
    negWrap = false;
  }

  return function (date, locale) {
    var part = getDatePart(name, date, size);

    if (offset > 0 || part > -offset) {
      part += offset;
    }

    if (name === DateType.Hours && part === 0 && offset === -12) {
      part = 12;
    }

    return padNumber(part, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign), trim, negWrap);
  };
}

function getDatePart(name, date, size) {
  switch (name) {
    case DateType.FullYear:
      return date.getFullYear();

    case DateType.Month:
      return date.getMonth();

    case DateType.Date:
      return date.getDate();

    case DateType.Hours:
      return date.getHours();

    case DateType.Minutes:
      return date.getMinutes();

    case DateType.Seconds:
      return date.getSeconds();

    case DateType.Milliseconds:
      var div = size === 1 ? 100 : size === 2 ? 10 : 1;
      return Math.round(date.getMilliseconds() / div);

    case DateType.Day:
      return date.getDay();

    default:
      throw new Error("Unknown DateType value \"" + name + "\".");
  }
}
/**
 * Returns a date formatter that transforms a date into its locale string representation
 */


function dateStrGetter(name, width, form, extended) {
  if (form === void 0) {
    form = FormStyle.Format;
  }

  if (extended === void 0) {
    extended = false;
  }

  return function (date, locale) {
    return getDateTranslation(date, locale, name, width, form, extended);
  };
}
/**
 * Returns the locale translation of a date for a given form, type and width
 */


function getDateTranslation(date, locale, name, width, form, extended) {
  switch (name) {
    case TranslationType.Months:
      return getLocaleMonthNames(locale, form, width)[date.getMonth()];

    case TranslationType.Days:
      return getLocaleDayNames(locale, form, width)[date.getDay()];

    case TranslationType.DayPeriods:
      var currentHours_1 = date.getHours();
      var currentMinutes_1 = date.getMinutes();

      if (extended) {
        var rules = getLocaleExtraDayPeriodRules(locale);
        var dayPeriods_1 = getLocaleExtraDayPeriods(locale, form, width);
        var result_1;
        rules.forEach(function (rule, index) {
          if (Array.isArray(rule)) {
            // morning, afternoon, evening, night
            var _a = rule[0],
                hoursFrom = _a.hours,
                minutesFrom = _a.minutes;
            var _b = rule[1],
                hoursTo = _b.hours,
                minutesTo = _b.minutes;

            if (currentHours_1 >= hoursFrom && currentMinutes_1 >= minutesFrom && (currentHours_1 < hoursTo || currentHours_1 === hoursTo && currentMinutes_1 < minutesTo)) {
              result_1 = dayPeriods_1[index];
            }
          } else {
            // noon or midnight
            var hours = rule.hours,
                minutes = rule.minutes;

            if (hours === currentHours_1 && minutes === currentMinutes_1) {
              result_1 = dayPeriods_1[index];
            }
          }
        });

        if (result_1) {
          return result_1;
        }
      } // if no rules for the day periods, we use am/pm by default


      return getLocaleDayPeriods(locale, form, width)[currentHours_1 < 12 ? 0 : 1];

    case TranslationType.Eras:
      return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];

    default:
      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.
      // However Closure Compiler does not understand that and reports an error in typed mode.
      // The `throw new Error` below works around the problem, and the unexpected: never variable
      // makes sure tsc still checks this code is unreachable.
      var unexpected = name;
      throw new Error("unexpected translation type " + unexpected);
  }
}
/**
 * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or
 * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,
 * extended = +04:30)
 */


function timeZoneGetter(width) {
  return function (date, locale, offset) {
    var zone = -1 * offset;
    var minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);
    var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);

    switch (width) {
      case ZoneWidth.Short:
        return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + padNumber(Math.abs(zone % 60), 2, minusSign);

      case ZoneWidth.ShortGMT:
        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 1, minusSign);

      case ZoneWidth.Long:
        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);

      case ZoneWidth.Extended:
        if (offset === 0) {
          return 'Z';
        } else {
          return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);
        }

      default:
        throw new Error("Unknown zone width \"" + width + "\"");
    }
  };
}

var JANUARY = 0;
var THURSDAY = 4;

function getFirstThursdayOfYear(year) {
  var firstDayOfYear = new Date(year, JANUARY, 1).getDay();
  return new Date(year, 0, 1 + (firstDayOfYear <= THURSDAY ? THURSDAY : THURSDAY + 7) - firstDayOfYear);
}

function getThursdayThisWeek(datetime) {
  return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));
}

function weekGetter(size, monthBased) {
  if (monthBased === void 0) {
    monthBased = false;
  }

  return function (date, locale) {
    var result;

    if (monthBased) {
      var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;
      var today = date.getDate();
      result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);
    } else {
      var firstThurs = getFirstThursdayOfYear(date.getFullYear());
      var thisThurs = getThursdayThisWeek(date);
      var diff = thisThurs.getTime() - firstThurs.getTime();
      result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week
    }

    return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  };
}

var DATE_FORMATS = {}; // Based on CLDR formats:
// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
// See also explanations: http://cldr.unicode.org/translation/date-time
// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x

function getDateFormatter(format) {
  if (DATE_FORMATS[format]) {
    return DATE_FORMATS[format];
  }

  var formatter;

  switch (format) {
    // Era name (AD/BC)
    case 'G':
    case 'GG':
    case 'GGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);
      break;

    case 'GGGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);
      break;

    case 'GGGGG':
      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);
      break;
    // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)

    case 'y':
      formatter = dateGetter(DateType.FullYear, 1, 0, false, true);
      break;
    // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)

    case 'yy':
      formatter = dateGetter(DateType.FullYear, 2, 0, true, true);
      break;
    // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)

    case 'yyy':
      formatter = dateGetter(DateType.FullYear, 3, 0, false, true);
      break;
    // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)

    case 'yyyy':
      formatter = dateGetter(DateType.FullYear, 4, 0, false, true);
      break;
    // Month of the year (1-12), numeric

    case 'M':
    case 'L':
      formatter = dateGetter(DateType.Month, 1, 1);
      break;

    case 'MM':
    case 'LL':
      formatter = dateGetter(DateType.Month, 2, 1);
      break;
    // Month of the year (January, ...), string, format

    case 'MMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);
      break;

    case 'MMMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);
      break;

    case 'MMMMM':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);
      break;
    // Month of the year (January, ...), string, standalone

    case 'LLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);
      break;

    case 'LLLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);
      break;

    case 'LLLLL':
      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);
      break;
    // Week of the year (1, ... 52)

    case 'w':
      formatter = weekGetter(1);
      break;

    case 'ww':
      formatter = weekGetter(2);
      break;
    // Week of the month (1, ...)

    case 'W':
      formatter = weekGetter(1, true);
      break;
    // Day of the month (1-31)

    case 'd':
      formatter = dateGetter(DateType.Date, 1);
      break;

    case 'dd':
      formatter = dateGetter(DateType.Date, 2);
      break;
    // Day of the Week

    case 'E':
    case 'EE':
    case 'EEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);
      break;

    case 'EEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);
      break;

    case 'EEEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);
      break;

    case 'EEEEEE':
      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);
      break;
    // Generic period of the day (am-pm)

    case 'a':
    case 'aa':
    case 'aaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);
      break;

    case 'aaaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);
      break;

    case 'aaaaa':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);
      break;
    // Extended period of the day (midnight, at night, ...), standalone

    case 'b':
    case 'bb':
    case 'bbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);
      break;

    case 'bbbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);
      break;

    case 'bbbbb':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);
      break;
    // Extended period of the day (midnight, night, ...), standalone

    case 'B':
    case 'BB':
    case 'BBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);
      break;

    case 'BBBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);
      break;

    case 'BBBBB':
      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);
      break;
    // Hour in AM/PM, (1-12)

    case 'h':
      formatter = dateGetter(DateType.Hours, 1, -12);
      break;

    case 'hh':
      formatter = dateGetter(DateType.Hours, 2, -12);
      break;
    // Hour of the day (0-23)

    case 'H':
      formatter = dateGetter(DateType.Hours, 1);
      break;
    // Hour in day, padded (00-23)

    case 'HH':
      formatter = dateGetter(DateType.Hours, 2);
      break;
    // Minute of the hour (0-59)

    case 'm':
      formatter = dateGetter(DateType.Minutes, 1);
      break;

    case 'mm':
      formatter = dateGetter(DateType.Minutes, 2);
      break;
    // Second of the minute (0-59)

    case 's':
      formatter = dateGetter(DateType.Seconds, 1);
      break;

    case 'ss':
      formatter = dateGetter(DateType.Seconds, 2);
      break;
    // Fractional second padded (0-9)

    case 'S':
      formatter = dateGetter(DateType.Milliseconds, 1);
      break;

    case 'SS':
      formatter = dateGetter(DateType.Milliseconds, 2);
      break;
    // = millisecond

    case 'SSS':
      formatter = dateGetter(DateType.Milliseconds, 3);
      break;
    // Timezone ISO8601 short format (-0430)

    case 'Z':
    case 'ZZ':
    case 'ZZZ':
      formatter = timeZoneGetter(ZoneWidth.Short);
      break;
    // Timezone ISO8601 extended format (-04:30)

    case 'ZZZZZ':
      formatter = timeZoneGetter(ZoneWidth.Extended);
      break;
    // Timezone GMT short format (GMT+4)

    case 'O':
    case 'OO':
    case 'OOO': // Should be location, but fallback to format O instead because we don't have the data yet

    case 'z':
    case 'zz':
    case 'zzz':
      formatter = timeZoneGetter(ZoneWidth.ShortGMT);
      break;
    // Timezone GMT long format (GMT+0430)

    case 'OOOO':
    case 'ZZZZ': // Should be location, but fallback to format O instead because we don't have the data yet

    case 'zzzz':
      formatter = timeZoneGetter(ZoneWidth.Long);
      break;

    default:
      return null;
  }

  DATE_FORMATS[format] = formatter;
  return formatter;
}

function timezoneToOffset(timezone, fallback) {
  // Support: IE 9-11 only, Edge 13-15+
  // IE/Edge do not "understand" colon (`:`) in timezone
  timezone = timezone.replace(/:/g, '');
  var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;
  return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;
}

function addDateMinutes(date, minutes) {
  date = new Date(date.getTime());
  date.setMinutes(date.getMinutes() + minutes);
  return date;
}

function convertTimezoneToLocal(date, timezone, reverse) {
  var reverseValue = reverse ? -1 : 1;
  var dateTimezoneOffset = date.getTimezoneOffset();
  var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
  return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));
}
/**
 * Converts a value to date.
 *
 * Supported input formats:
 * - `Date`
 * - number: timestamp
 * - string: numeric (e.g. "1234"), ISO and date strings in a format supported by
 *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).
 *   Note: ISO strings without time return a date without timeoffset.
 *
 * Throws if unable to convert to a date.
 */


function toDate(value) {
  if (isDate(value)) {
    return value;
  }

  if (typeof value === 'number' && !isNaN(value)) {
    return new Date(value);
  }

  if (typeof value === 'string') {
    value = value.trim();
    var parsedNb = parseFloat(value); // any string that only contains numbers, like "1234" but not like "1234hello"

    if (!isNaN(value - parsedNb)) {
      return new Date(parsedNb);
    }

    if (/^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)) {
      /* For ISO Strings without time the day, month and year must be extracted from the ISO String
            before Date creation to avoid time offset and errors in the new Date.
            If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
            date, some browsers (e.g. IE 9) will throw an invalid Date error.
            If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the timeoffset
            is applied.
            Note: ISO months are 0 for January, 1 for February, ... */
      var _a = (0, _tslib.__read)(value.split('-').map(function (val) {
        return +val;
      }), 3),
          y = _a[0],
          m = _a[1],
          d = _a[2];

      return new Date(y, m - 1, d);
    }

    var match = void 0;

    if (match = value.match(ISO8601_DATE_REGEX)) {
      return isoStringToDate(match);
    }
  }

  var date = new Date(value);

  if (!isDate(date)) {
    throw new Error("Unable to convert \"" + value + "\" into a date");
  }

  return date;
}
/**
 * Converts a date in ISO8601 to a Date.
 * Used instead of `Date.parse` because of browser discrepancies.
 */


function isoStringToDate(match) {
  var date = new Date(0);
  var tzHour = 0;
  var tzMin = 0; // match[8] means that the string contains "Z" (UTC) or a timezone like "+01:00" or "+0100"

  var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;
  var timeSetter = match[8] ? date.setUTCHours : date.setHours; // if there is a timezone defined like "+01:00" or "+0100"

  if (match[9]) {
    tzHour = Number(match[9] + match[10]);
    tzMin = Number(match[9] + match[11]);
  }

  dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));
  var h = Number(match[4] || 0) - tzHour;
  var m = Number(match[5] || 0) - tzMin;
  var s = Number(match[6] || 0);
  var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);
  timeSetter.call(date, h, m, s, ms);
  return date;
}

function isDate(value) {
  return value instanceof Date && !isNaN(value.valueOf());
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NUMBER_FORMAT_REGEXP = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
var MAX_DIGITS = 22;
var DECIMAL_SEP = '.';
var ZERO_CHAR = '0';
var PATTERN_SEP = ';';
var GROUP_SEP = ',';
var DIGIT_CHAR = '#';
var CURRENCY_CHAR = '¤';
var PERCENT_CHAR = '%';
/**
 * Transforms a number to a locale string based on a style and a format
 */

function formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent) {
  if (isPercent === void 0) {
    isPercent = false;
  }

  var formattedText = '';
  var isZero = false;

  if (!isFinite(value)) {
    formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);
  } else {
    var parsedNumber = parseNumber(value);

    if (isPercent) {
      parsedNumber = toPercent(parsedNumber);
    }

    var minInt = pattern.minInt;
    var minFraction = pattern.minFrac;
    var maxFraction = pattern.maxFrac;

    if (digitsInfo) {
      var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);

      if (parts === null) {
        throw new Error(digitsInfo + " is not a valid digit info");
      }

      var minIntPart = parts[1];
      var minFractionPart = parts[3];
      var maxFractionPart = parts[5];

      if (minIntPart != null) {
        minInt = parseIntAutoRadix(minIntPart);
      }

      if (minFractionPart != null) {
        minFraction = parseIntAutoRadix(minFractionPart);
      }

      if (maxFractionPart != null) {
        maxFraction = parseIntAutoRadix(maxFractionPart);
      } else if (minFractionPart != null && minFraction > maxFraction) {
        maxFraction = minFraction;
      }
    }

    roundNumber(parsedNumber, minFraction, maxFraction);
    var digits = parsedNumber.digits;
    var integerLen = parsedNumber.integerLen;
    var exponent = parsedNumber.exponent;
    var decimals = [];
    isZero = digits.every(function (d) {
      return !d;
    }); // pad zeros for small numbers

    for (; integerLen < minInt; integerLen++) {
      digits.unshift(0);
    } // pad zeros for small numbers


    for (; integerLen < 0; integerLen++) {
      digits.unshift(0);
    } // extract decimals digits


    if (integerLen > 0) {
      decimals = digits.splice(integerLen, digits.length);
    } else {
      decimals = digits;
      digits = [0];
    } // format the integer digits with grouping separators


    var groups = [];

    if (digits.length >= pattern.lgSize) {
      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));
    }

    while (digits.length > pattern.gSize) {
      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));
    }

    if (digits.length) {
      groups.unshift(digits.join(''));
    }

    formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol)); // append the decimal digits

    if (decimals.length) {
      formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');
    }

    if (exponent) {
      formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;
    }
  }

  if (value < 0 && !isZero) {
    formattedText = pattern.negPre + formattedText + pattern.negSuf;
  } else {
    formattedText = pattern.posPre + formattedText + pattern.posSuf;
  }

  return formattedText;
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as currency using locale rules.
 *
 * Use `currency` to format a number as currency.
 *
 * Where:
 * - `value` is a number.
 * - `locale` is a `string` defining the locale to use.
 * - `currency` is the string that represents the currency, it can be its symbol or its name.
 * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such
 *    as `USD` for the US dollar and `EUR` for the euro.
 * - `digitInfo` See {@link DecimalPipe} for more details.
 *
 *
 */


function formatCurrency(value, locale, currency, currencyCode, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);
  pattern.maxFrac = pattern.minFrac;
  var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);
  return res.replace(CURRENCY_CHAR, currency).replace(CURRENCY_CHAR, '');
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as a percentage according to locale rules.
 *
 * Where:
 * - `value` is a number.
 * - `locale` is a `string` defining the locale to use.
 * - `digitInfo` See {@link DecimalPipe} for more details.
 *
 *
 */


function formatPercent(value, locale, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);
  return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));
}
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as text. Group sizing and separator and other locale-specific
 * configurations are based on the locale.
 *
 * Where:
 * - `value` is a number.
 * - `locale` is a `string` defining the locale to use.
 * - `digitInfo` See {@link DecimalPipe} for more details.
 *
 *
 */


function formatNumber(value, locale, digitsInfo) {
  var format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);
  var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));
  return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);
}

function parseNumberFormat(format, minusSign) {
  if (minusSign === void 0) {
    minusSign = '-';
  }

  var p = {
    minInt: 1,
    minFrac: 0,
    maxFrac: 0,
    posPre: '',
    posSuf: '',
    negPre: '',
    negSuf: '',
    gSize: 0,
    lgSize: 0
  };
  var patternParts = format.split(PATTERN_SEP);
  var positive = patternParts[0];
  var negative = patternParts[1];
  var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ? positive.split(DECIMAL_SEP) : [positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1), positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)],
      integer = positiveParts[0],
      fraction = positiveParts[1] || '';
  p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));

  for (var i = 0; i < fraction.length; i++) {
    var ch = fraction.charAt(i);

    if (ch === ZERO_CHAR) {
      p.minFrac = p.maxFrac = i + 1;
    } else if (ch === DIGIT_CHAR) {
      p.maxFrac = i + 1;
    } else {
      p.posSuf += ch;
    }
  }

  var groups = integer.split(GROUP_SEP);
  p.gSize = groups[1] ? groups[1].length : 0;
  p.lgSize = groups[2] || groups[1] ? (groups[2] || groups[1]).length : 0;

  if (negative) {
    var trunkLen = positive.length - p.posPre.length - p.posSuf.length,
        pos = negative.indexOf(DIGIT_CHAR);
    p.negPre = negative.substr(0, pos).replace(/'/g, '');
    p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');
  } else {
    p.negPre = minusSign + p.posPre;
    p.negSuf = p.posSuf;
  }

  return p;
} // Transforms a parsed number into a percentage by multiplying it by 100


function toPercent(parsedNumber) {
  // if the number is 0, don't do anything
  if (parsedNumber.digits[0] === 0) {
    return parsedNumber;
  } // Getting the current number of decimals


  var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;

  if (parsedNumber.exponent) {
    parsedNumber.exponent += 2;
  } else {
    if (fractionLen === 0) {
      parsedNumber.digits.push(0, 0);
    } else if (fractionLen === 1) {
      parsedNumber.digits.push(0);
    }

    parsedNumber.integerLen += 2;
  }

  return parsedNumber;
}
/**
 * Parses a number.
 * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/
 */


function parseNumber(num) {
  var numStr = Math.abs(num) + '';
  var exponent = 0,
      digits,
      integerLen;
  var i, j, zeros; // Decimal point?

  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {
    numStr = numStr.replace(DECIMAL_SEP, '');
  } // Exponential form?


  if ((i = numStr.search(/e/i)) > 0) {
    // Work out the exponent.
    if (integerLen < 0) integerLen = i;
    integerLen += +numStr.slice(i + 1);
    numStr = numStr.substring(0, i);
  } else if (integerLen < 0) {
    // There was no decimal point or exponent so it is an integer.
    integerLen = numStr.length;
  } // Count the number of leading zeros.


  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) {
    /* empty */
  }

  if (i === (zeros = numStr.length)) {
    // The digits are all zero.
    digits = [0];
    integerLen = 1;
  } else {
    // Count the number of trailing zeros
    zeros--;

    while (numStr.charAt(zeros) === ZERO_CHAR) {
      zeros--;
    } // Trailing zeros are insignificant so ignore them


    integerLen -= i;
    digits = []; // Convert string to array of digits without leading/trailing zeros.

    for (j = 0; i <= zeros; i++, j++) {
      digits[j] = Number(numStr.charAt(i));
    }
  } // If the number overflows the maximum allowed digits then use an exponent.


  if (integerLen > MAX_DIGITS) {
    digits = digits.splice(0, MAX_DIGITS - 1);
    exponent = integerLen - 1;
    integerLen = 1;
  }

  return {
    digits: digits,
    exponent: exponent,
    integerLen: integerLen
  };
}
/**
 * Round the parsed number to the specified number of decimal places
 * This function changes the parsedNumber in-place
 */


function roundNumber(parsedNumber, minFrac, maxFrac) {
  if (minFrac > maxFrac) {
    throw new Error("The minimum number of digits after fraction (" + minFrac + ") is higher than the maximum (" + maxFrac + ").");
  }

  var digits = parsedNumber.digits;
  var fractionLen = digits.length - parsedNumber.integerLen;
  var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac); // The index of the digit to where rounding is to occur

  var roundAt = fractionSize + parsedNumber.integerLen;
  var digit = digits[roundAt];

  if (roundAt > 0) {
    // Drop fractional digits beyond `roundAt`
    digits.splice(Math.max(parsedNumber.integerLen, roundAt)); // Set non-fractional digits beyond `roundAt` to 0

    for (var j = roundAt; j < digits.length; j++) {
      digits[j] = 0;
    }
  } else {
    // We rounded to zero so reset the parsedNumber
    fractionLen = Math.max(0, fractionLen);
    parsedNumber.integerLen = 1;
    digits.length = Math.max(1, roundAt = fractionSize + 1);
    digits[0] = 0;

    for (var i = 1; i < roundAt; i++) {
      digits[i] = 0;
    }
  }

  if (digit >= 5) {
    if (roundAt - 1 < 0) {
      for (var k = 0; k > roundAt; k--) {
        digits.unshift(0);
        parsedNumber.integerLen++;
      }

      digits.unshift(1);
      parsedNumber.integerLen++;
    } else {
      digits[roundAt - 1]++;
    }
  } // Pad out with zeros to get the required fraction length


  for (; fractionLen < Math.max(0, fractionSize); fractionLen++) {
    digits.push(0);
  }

  var dropTrailingZeros = fractionSize !== 0; // Minimal length = nb of decimals required + current nb of integers
  // Any number besides that is optional and can be removed if it's a trailing 0

  var minLen = minFrac + parsedNumber.integerLen; // Do any carrying, e.g. a digit was rounded up to 10

  var carry = digits.reduceRight(function (carry, d, i, digits) {
    d = d + carry;
    digits[i] = d < 10 ? d : d - 10; // d % 10

    if (dropTrailingZeros) {
      // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)
      if (digits[i] === 0 && i >= minLen) {
        digits.pop();
      } else {
        dropTrailingZeros = false;
      }
    }

    return d >= 10 ? 1 : 0; // Math.floor(d / 10);
  }, 0);

  if (carry) {
    digits.unshift(carry);
    parsedNumber.integerLen++;
  }
}

function parseIntAutoRadix(text) {
  var result = parseInt(text);

  if (isNaN(result)) {
    throw new Error('Invalid integer literal when parsing ' + text);
  }

  return result;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @deprecated from v5
 */


var DEPRECATED_PLURAL_FN = new _core.InjectionToken('UseV4Plurals');
/**
 * @experimental
 */

exports.ɵangular_packages_common_common_a = DEPRECATED_PLURAL_FN;

var NgLocalization =
/** @class */
function () {
  function NgLocalization() {}

  return NgLocalization;
}();
/**
 * Returns the plural category for a given value.
 * - "=value" when the case exists,
 * - the plural category otherwise
 */


exports.NgLocalization = NgLocalization;

function getPluralCategory(value, cases, ngLocalization, locale) {
  var key = "=" + value;

  if (cases.indexOf(key) > -1) {
    return key;
  }

  key = ngLocalization.getPluralCategory(value, locale);

  if (cases.indexOf(key) > -1) {
    return key;
  }

  if (cases.indexOf('other') > -1) {
    return 'other';
  }

  throw new Error("No plural message found for value \"" + value + "\"");
}
/**
 * Returns the plural case based on the locale
 *
 * @experimental
 */


var NgLocaleLocalization =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NgLocaleLocalization, _super);

  function NgLocaleLocalization(locale,
  /** @deprecated from v5 */
  deprecatedPluralFn) {
    var _this = _super.call(this) || this;

    _this.locale = locale;
    _this.deprecatedPluralFn = deprecatedPluralFn;
    return _this;
  }

  NgLocaleLocalization.prototype.getPluralCategory = function (value, locale) {
    var plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) : getLocalePluralCase(locale || this.locale)(value);

    switch (plural) {
      case Plural.Zero:
        return 'zero';

      case Plural.One:
        return 'one';

      case Plural.Two:
        return 'two';

      case Plural.Few:
        return 'few';

      case Plural.Many:
        return 'many';

      default:
        return 'other';
    }
  };

  NgLocaleLocalization.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  NgLocaleLocalization.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Inject,
        args: [DEPRECATED_PLURAL_FN]
      }]
    }];
  };

  return NgLocaleLocalization;
}(NgLocalization);
/**
 * Returns the plural case based on the locale
 *
 * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts
 * @experimental
 */


exports.NgLocaleLocalization = NgLocaleLocalization;

function getPluralCase(locale, nLike) {
  // TODO(vicb): lazy compute
  if (typeof nLike === 'string') {
    nLike = parseInt(nLike, 10);
  }

  var n = nLike;
  var nDecimal = n.toString().replace(/^[^.]*\.?/, '');
  var i = Math.floor(Math.abs(n));
  var v = nDecimal.length;
  var f = parseInt(nDecimal, 10);
  var t = parseInt(n.toString().replace(/^[^.]*\.?|0+$/g, ''), 10) || 0;
  var lang = locale.split('-')[0].toLowerCase();

  switch (lang) {
    case 'af':
    case 'asa':
    case 'az':
    case 'bem':
    case 'bez':
    case 'bg':
    case 'brx':
    case 'ce':
    case 'cgg':
    case 'chr':
    case 'ckb':
    case 'ee':
    case 'el':
    case 'eo':
    case 'es':
    case 'eu':
    case 'fo':
    case 'fur':
    case 'gsw':
    case 'ha':
    case 'haw':
    case 'hu':
    case 'jgo':
    case 'jmc':
    case 'ka':
    case 'kk':
    case 'kkj':
    case 'kl':
    case 'ks':
    case 'ksb':
    case 'ky':
    case 'lb':
    case 'lg':
    case 'mas':
    case 'mgo':
    case 'ml':
    case 'mn':
    case 'nb':
    case 'nd':
    case 'ne':
    case 'nn':
    case 'nnh':
    case 'nyn':
    case 'om':
    case 'or':
    case 'os':
    case 'ps':
    case 'rm':
    case 'rof':
    case 'rwk':
    case 'saq':
    case 'seh':
    case 'sn':
    case 'so':
    case 'sq':
    case 'ta':
    case 'te':
    case 'teo':
    case 'tk':
    case 'tr':
    case 'ug':
    case 'uz':
    case 'vo':
    case 'vun':
    case 'wae':
    case 'xog':
      if (n === 1) return Plural.One;
      return Plural.Other;

    case 'ak':
    case 'ln':
    case 'mg':
    case 'pa':
    case 'ti':
      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;
      return Plural.Other;

    case 'am':
    case 'as':
    case 'bn':
    case 'fa':
    case 'gu':
    case 'hi':
    case 'kn':
    case 'mr':
    case 'zu':
      if (i === 0 || n === 1) return Plural.One;
      return Plural.Other;

    case 'ar':
      if (n === 0) return Plural.Zero;
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;
      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;
      return Plural.Other;

    case 'ast':
    case 'ca':
    case 'de':
    case 'en':
    case 'et':
    case 'fi':
    case 'fy':
    case 'gl':
    case 'it':
    case 'nl':
    case 'sv':
    case 'sw':
    case 'ur':
    case 'yi':
      if (i === 1 && v === 0) return Plural.One;
      return Plural.Other;

    case 'be':
      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;
      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 && !(n % 100 >= 12 && n % 100 <= 14)) return Plural.Few;
      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14) return Plural.Many;
      return Plural.Other;

    case 'br':
      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;
      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;
      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) && !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 || n % 100 >= 90 && n % 100 <= 99)) return Plural.Few;
      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;
      return Plural.Other;

    case 'bs':
    case 'hr':
    case 'sr':
      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11)) return Plural.One;
      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && !(i % 100 >= 12 && i % 100 <= 14) || f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 && !(f % 100 >= 12 && f % 100 <= 14)) return Plural.Few;
      return Plural.Other;

    case 'cs':
    case 'sk':
      if (i === 1 && v === 0) return Plural.One;
      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;
      if (!(v === 0)) return Plural.Many;
      return Plural.Other;

    case 'cy':
      if (n === 0) return Plural.Zero;
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      if (n === 3) return Plural.Few;
      if (n === 6) return Plural.Many;
      return Plural.Other;

    case 'da':
      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;
      return Plural.Other;

    case 'dsb':
    case 'hsb':
      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;
      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;
      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4) return Plural.Few;
      return Plural.Other;

    case 'ff':
    case 'fr':
    case 'hy':
    case 'kab':
      if (i === 0 || i === 1) return Plural.One;
      return Plural.Other;

    case 'fil':
      if (v === 0 && (i === 1 || i === 2 || i === 3) || v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) || !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9)) return Plural.One;
      return Plural.Other;

    case 'ga':
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;
      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;
      return Plural.Other;

    case 'gd':
      if (n === 1 || n === 11) return Plural.One;
      if (n === 2 || n === 12) return Plural.Two;
      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;
      return Plural.Other;

    case 'gv':
      if (v === 0 && i % 10 === 1) return Plural.One;
      if (v === 0 && i % 10 === 2) return Plural.Two;
      if (v === 0 && (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80)) return Plural.Few;
      if (!(v === 0)) return Plural.Many;
      return Plural.Other;

    case 'he':
      if (i === 1 && v === 0) return Plural.One;
      if (i === 2 && v === 0) return Plural.Two;
      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;
      return Plural.Other;

    case 'is':
      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;
      return Plural.Other;

    case 'ksh':
      if (n === 0) return Plural.Zero;
      if (n === 1) return Plural.One;
      return Plural.Other;

    case 'kw':
    case 'naq':
    case 'se':
    case 'smn':
      if (n === 1) return Plural.One;
      if (n === 2) return Plural.Two;
      return Plural.Other;

    case 'lag':
      if (n === 0) return Plural.Zero;
      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;
      return Plural.Other;

    case 'lt':
      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;
      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.Few;
      if (!(f === 0)) return Plural.Many;
      return Plural.Other;

    case 'lv':
    case 'prg':
      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 || v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19) return Plural.Zero;
      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) || !(v === 2) && f % 10 === 1) return Plural.One;
      return Plural.Other;

    case 'mk':
      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;
      return Plural.Other;

    case 'mt':
      if (n === 1) return Plural.One;
      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10) return Plural.Few;
      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;
      return Plural.Other;

    case 'pl':
      if (i === 1 && v === 0) return Plural.One;
      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && !(i % 100 >= 12 && i % 100 <= 14)) return Plural.Few;
      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 || v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 || v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14) return Plural.Many;
      return Plural.Other;

    case 'pt':
      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;
      return Plural.Other;

    case 'ro':
      if (i === 1 && v === 0) return Plural.One;
      if (!(v === 0) || n === 0 || !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19) return Plural.Few;
      return Plural.Other;

    case 'ru':
    case 'uk':
      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;
      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && !(i % 100 >= 12 && i % 100 <= 14)) return Plural.Few;
      if (v === 0 && i % 10 === 0 || v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 || v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14) return Plural.Many;
      return Plural.Other;

    case 'shi':
      if (i === 0 || n === 1) return Plural.One;
      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;
      return Plural.Other;

    case 'si':
      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;
      return Plural.Other;

    case 'sl':
      if (v === 0 && i % 100 === 1) return Plural.One;
      if (v === 0 && i % 100 === 2) return Plural.Two;
      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0)) return Plural.Few;
      return Plural.Other;

    case 'tzm':
      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99) return Plural.One;
      return Plural.Other;
    // When there is no specification, the default is always "other"
    // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules
    // > other (required—general plural form — also used if the language only has a single form)

    default:
      return Plural.Other;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function parseCookieValue(cookieStr, name) {
  name = encodeURIComponent(name);

  try {
    for (var _a = (0, _tslib.__values)(cookieStr.split(';')), _b = _a.next(); !_b.done; _b = _a.next()) {
      var cookie = _b.value;
      var eqIndex = cookie.indexOf('=');

      var _c = (0, _tslib.__read)(eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], 2),
          cookieName = _c[0],
          cookieValue = _c[1];

      if (cookieName.trim() === name) {
        return decodeURIComponent(cookieValue);
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return null;

  var e_1, _d;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 *     <some-element [ngClass]="'first second'">...</some-element>
 *
 *     <some-element [ngClass]="['first', 'second']">...</some-element>
 *
 *     <some-element [ngClass]="{'first': true, 'second': true, 'third': false}">...</some-element>
 *
 *     <some-element [ngClass]="stringExp|arrayExp|objExp">...</some-element>
 *
 *     <some-element [ngClass]="{'class1 class2 class3' : true}">...</some-element>
 * ```
 *
 * @description
 *
 * Adds and removes CSS classes on an HTML element.
 *
 * The CSS classes are updated as follows, depending on the type of the expression evaluation:
 * - `string` - the CSS classes listed in the string (space delimited) are added,
 * - `Array` - the CSS classes declared as Array elements are added,
 * - `Object` - keys are CSS classes that get added when the expression given in the value
 *              evaluates to a truthy value, otherwise they are removed.
 *
 *
 */


var NgClass =
/** @class */
function () {
  function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {
    this._iterableDiffers = _iterableDiffers;
    this._keyValueDiffers = _keyValueDiffers;
    this._ngEl = _ngEl;
    this._renderer = _renderer;
    this._initialClasses = [];
  }

  Object.defineProperty(NgClass.prototype, "klass", {
    set: function set(v) {
      this._removeClasses(this._initialClasses);

      this._initialClasses = typeof v === 'string' ? v.split(/\s+/) : [];

      this._applyClasses(this._initialClasses);

      this._applyClasses(this._rawClass);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgClass.prototype, "ngClass", {
    set: function set(v) {
      this._removeClasses(this._rawClass);

      this._applyClasses(this._initialClasses);

      this._iterableDiffer = null;
      this._keyValueDiffer = null;
      this._rawClass = typeof v === 'string' ? v.split(/\s+/) : v;

      if (this._rawClass) {
        if ((0, _core.ɵisListLikeIterable)(this._rawClass)) {
          this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();
        } else {
          this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();
        }
      }
    },
    enumerable: true,
    configurable: true
  });

  NgClass.prototype.ngDoCheck = function () {
    if (this._iterableDiffer) {
      var iterableChanges = this._iterableDiffer.diff(this._rawClass);

      if (iterableChanges) {
        this._applyIterableChanges(iterableChanges);
      }
    } else if (this._keyValueDiffer) {
      var keyValueChanges = this._keyValueDiffer.diff(this._rawClass);

      if (keyValueChanges) {
        this._applyKeyValueChanges(keyValueChanges);
      }
    }
  };

  NgClass.prototype._applyKeyValueChanges = function (changes) {
    var _this = this;

    changes.forEachAddedItem(function (record) {
      return _this._toggleClass(record.key, record.currentValue);
    });
    changes.forEachChangedItem(function (record) {
      return _this._toggleClass(record.key, record.currentValue);
    });
    changes.forEachRemovedItem(function (record) {
      if (record.previousValue) {
        _this._toggleClass(record.key, false);
      }
    });
  };

  NgClass.prototype._applyIterableChanges = function (changes) {
    var _this = this;

    changes.forEachAddedItem(function (record) {
      if (typeof record.item === 'string') {
        _this._toggleClass(record.item, true);
      } else {
        throw new Error("NgClass can only toggle CSS classes expressed as strings, got " + (0, _core.ɵstringify)(record.item));
      }
    });
    changes.forEachRemovedItem(function (record) {
      return _this._toggleClass(record.item, false);
    });
  };
  /**
   * Applies a collection of CSS classes to the DOM element.
   *
   * For argument of type Set and Array CSS class names contained in those collections are always
   * added.
   * For argument of type Map CSS class name in the map's key is toggled based on the value (added
   * for truthy and removed for falsy).
   */

  /**
     * Applies a collection of CSS classes to the DOM element.
     *
     * For argument of type Set and Array CSS class names contained in those collections are always
     * added.
     * For argument of type Map CSS class name in the map's key is toggled based on the value (added
     * for truthy and removed for falsy).
     */


  NgClass.prototype._applyClasses =
  /**
  * Applies a collection of CSS classes to the DOM element.
  *
  * For argument of type Set and Array CSS class names contained in those collections are always
  * added.
  * For argument of type Map CSS class name in the map's key is toggled based on the value (added
  * for truthy and removed for falsy).
  */
  function (rawClassVal) {
    var _this = this;

    if (rawClassVal) {
      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {
        rawClassVal.forEach(function (klass) {
          return _this._toggleClass(klass, true);
        });
      } else {
        Object.keys(rawClassVal).forEach(function (klass) {
          return _this._toggleClass(klass, !!rawClassVal[klass]);
        });
      }
    }
  };
  /**
   * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup
   * purposes.
   */

  /**
     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup
     * purposes.
     */


  NgClass.prototype._removeClasses =
  /**
  * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup
  * purposes.
  */
  function (rawClassVal) {
    var _this = this;

    if (rawClassVal) {
      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {
        rawClassVal.forEach(function (klass) {
          return _this._toggleClass(klass, false);
        });
      } else {
        Object.keys(rawClassVal).forEach(function (klass) {
          return _this._toggleClass(klass, false);
        });
      }
    }
  };

  NgClass.prototype._toggleClass = function (klass, enabled) {
    var _this = this;

    klass = klass.trim();

    if (klass) {
      klass.split(/\s+/g).forEach(function (klass) {
        if (enabled) {
          _this._renderer.addClass(_this._ngEl.nativeElement, klass);
        } else {
          _this._renderer.removeClass(_this._ngEl.nativeElement, klass);
        }
      });
    }
  };

  NgClass.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngClass]'
    }]
  }];
  /** @nocollapse */

  NgClass.ctorParameters = function () {
    return [{
      type: _core.IterableDiffers
    }, {
      type: _core.KeyValueDiffers
    }, {
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }];
  };

  NgClass.propDecorators = {
    "klass": [{
      type: _core.Input,
      args: ['class']
    }],
    "ngClass": [{
      type: _core.Input
    }]
  };
  return NgClass;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Instantiates a single {@link Component} type and inserts its Host View into current View.
 * `NgComponentOutlet` provides a declarative approach for dynamic component creation.
 *
 * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and
 * any existing component will get destroyed.
 *
 * ### Fine tune control
 *
 * You can control the component creation process by using the following optional attributes:
 *
 * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for
 * the Component. Defaults to the injector of the current view container.
 *
 * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content
 * section of the component, if exists.
 *
 * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other
 * module, then load a component from that module.
 *
 * ### Syntax
 *
 * Simple
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression"></ng-container>
 * ```
 *
 * Customized injector/content
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   injector: injectorExpression;
 *                                   content: contentNodesExpression;">
 * </ng-container>
 * ```
 *
 * Customized ngModuleFactory
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   ngModuleFactory: moduleFactory;">
 * </ng-container>
 * ```
 * ## Example
 *
 * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}
 *
 * A more complete example with additional options:
 *
 * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}

 * A more complete example with ngModuleFactory:
 *
 * {@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}
 *
 * @experimental
 */


exports.NgClass = NgClass;

var NgComponentOutlet =
/** @class */
function () {
  function NgComponentOutlet(_viewContainerRef) {
    this._viewContainerRef = _viewContainerRef;
    this._componentRef = null;
    this._moduleRef = null;
  }

  NgComponentOutlet.prototype.ngOnChanges = function (changes) {
    this._viewContainerRef.clear();

    this._componentRef = null;

    if (this.ngComponentOutlet) {
      var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;

      if (changes['ngComponentOutletNgModuleFactory']) {
        if (this._moduleRef) this._moduleRef.destroy();

        if (this.ngComponentOutletNgModuleFactory) {
          var parentModule = elInjector.get(_core.NgModuleRef);
          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);
        } else {
          this._moduleRef = null;
        }
      }

      var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver : elInjector.get(_core.ComponentFactoryResolver);
      var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);
      this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);
    }
  };

  NgComponentOutlet.prototype.ngOnDestroy = function () {
    if (this._moduleRef) this._moduleRef.destroy();
  };

  NgComponentOutlet.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngComponentOutlet]'
    }]
  }];
  /** @nocollapse */

  NgComponentOutlet.ctorParameters = function () {
    return [{
      type: _core.ViewContainerRef
    }];
  };

  NgComponentOutlet.propDecorators = {
    "ngComponentOutlet": [{
      type: _core.Input
    }],
    "ngComponentOutletInjector": [{
      type: _core.Input
    }],
    "ngComponentOutletContent": [{
      type: _core.Input
    }],
    "ngComponentOutletNgModuleFactory": [{
      type: _core.Input
    }]
  };
  return NgComponentOutlet;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 */


exports.NgComponentOutlet = NgComponentOutlet;

var NgForOfContext =
/** @class */
function () {
  function NgForOfContext($implicit, ngForOf, index, count) {
    this.$implicit = $implicit;
    this.ngForOf = ngForOf;
    this.index = index;
    this.count = count;
  }

  Object.defineProperty(NgForOfContext.prototype, "first", {
    get: function get() {
      return this.index === 0;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOfContext.prototype, "last", {
    get: function get() {
      return this.index === this.count - 1;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOfContext.prototype, "even", {
    get: function get() {
      return this.index % 2 === 0;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOfContext.prototype, "odd", {
    get: function get() {
      return !this.even;
    },
    enumerable: true,
    configurable: true
  });
  return NgForOfContext;
}();
/**
 * The `NgForOf` directive instantiates a template once per item from an iterable. The context
 * for each instantiated template inherits from the outer context with the given loop variable
 * set to the current item from the iterable.
 *
 * ### Local Variables
 *
 * `NgForOf` provides several exported values that can be aliased to local variables:
 *
 * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).
 * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is
 * more complex then a property access, for example when using the async pipe (`userStreams |
 * async`).
 * - `index: number`: The index of the current item in the iterable.
 * - `first: boolean`: True when the item is the first item in the iterable.
 * - `last: boolean`: True when the item is the last item in the iterable.
 * - `even: boolean`: True when the item has an even index in the iterable.
 * - `odd: boolean`: True when the item has an odd index in the iterable.
 *
 * ```
 * <li *ngFor="let user of userObservable | async as users; index as i; first as isFirst">
 *    {{i}}/{{users.length}}. {{user}} <span *ngIf="isFirst">default</span>
 * </li>
 * ```
 *
 * ### Change Propagation
 *
 * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:
 *
 * * When an item is added, a new instance of the template is added to the DOM.
 * * When an item is removed, its template instance is removed from the DOM.
 * * When items are reordered, their respective templates are reordered in the DOM.
 * * Otherwise, the DOM element for that item will remain the same.
 *
 * Angular uses object identity to track insertions and deletions within the iterator and reproduce
 * those changes in the DOM. This has important implications for animations and any stateful
 * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can
 * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state
 * such as user input.
 *
 * It is possible for the identities of elements in the iterator to change while the data does not.
 * This can happen, for example, if the iterator produced from an RPC to the server, and that
 * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with
 * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old
 * elements were deleted and all new elements inserted). This is an expensive operation and should
 * be avoided if possible.
 *
 * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.
 * `trackBy` takes a function which has two arguments: `index` and `item`.
 * If `trackBy` is given, Angular tracks changes by the return value of the function.
 *
 * ### Syntax
 *
 * - `<li *ngFor="let item of items; index as i; trackBy: trackByFn">...</li>`
 *
 * With `<ng-template>` element:
 *
 * ```
 * <ng-template ngFor let-item [ngForOf]="items" let-i="index" [ngForTrackBy]="trackByFn">
 *   <li>...</li>
 * </ng-template>
 * ```
 *
 * ### Example
 *
 * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed
 * example.
 *
 *
 */


exports.NgForOfContext = NgForOfContext;

var NgForOf =
/** @class */
function () {
  function NgForOf(_viewContainer, _template, _differs) {
    this._viewContainer = _viewContainer;
    this._template = _template;
    this._differs = _differs;
    this._differ = null;
  }

  Object.defineProperty(NgForOf.prototype, "ngForTrackBy", {
    get: function get() {
      return this._trackByFn;
    },
    set: function set(fn) {
      if ((0, _core.isDevMode)() && fn != null && typeof fn !== 'function') {
        // TODO(vicb): use a log service once there is a public one available
        if (console && console.warn) {
          console.warn("trackBy must be a function, but received " + JSON.stringify(fn) + ". " + "See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.");
        }
      }

      this._trackByFn = fn;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForOf.prototype, "ngForTemplate", {
    set: function set(value) {
      // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1
      // The current type is too restrictive; a template that just uses index, for example,
      // should be acceptable.
      if (value) {
        this._template = value;
      }
    },
    enumerable: true,
    configurable: true
  });

  NgForOf.prototype.ngOnChanges = function (changes) {
    if ('ngForOf' in changes) {
      // React on ngForOf changes only once all inputs have been initialized
      var value = changes['ngForOf'].currentValue;

      if (!this._differ && value) {
        try {
          this._differ = this._differs.find(value).create(this.ngForTrackBy);
        } catch (e) {
          throw new Error("Cannot find a differ supporting object '" + value + "' of type '" + getTypeNameForDebugging(value) + "'. NgFor only supports binding to Iterables such as Arrays.");
        }
      }
    }
  };

  NgForOf.prototype.ngDoCheck = function () {
    if (this._differ) {
      var changes = this._differ.diff(this.ngForOf);

      if (changes) this._applyChanges(changes);
    }
  };

  NgForOf.prototype._applyChanges = function (changes) {
    var _this = this;

    var insertTuples = [];
    changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {
      if (item.previousIndex == null) {
        var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext(null, _this.ngForOf, -1, -1), currentIndex);

        var tuple = new RecordViewTuple(item, view);
        insertTuples.push(tuple);
      } else if (currentIndex == null) {
        _this._viewContainer.remove(adjustedPreviousIndex);
      } else {
        var view = _this._viewContainer.get(adjustedPreviousIndex);

        _this._viewContainer.move(view, currentIndex);

        var tuple = new RecordViewTuple(item, view);
        insertTuples.push(tuple);
      }
    });

    for (var i = 0; i < insertTuples.length; i++) {
      this._perViewChange(insertTuples[i].view, insertTuples[i].record);
    }

    for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {
      var viewRef = this._viewContainer.get(i);

      viewRef.context.index = i;
      viewRef.context.count = ilen;
    }

    changes.forEachIdentityChange(function (record) {
      var viewRef = _this._viewContainer.get(record.currentIndex);

      viewRef.context.$implicit = record.item;
    });
  };

  NgForOf.prototype._perViewChange = function (view, record) {
    view.context.$implicit = record.item;
  };

  NgForOf.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngFor][ngForOf]'
    }]
  }];
  /** @nocollapse */

  NgForOf.ctorParameters = function () {
    return [{
      type: _core.ViewContainerRef
    }, {
      type: _core.TemplateRef
    }, {
      type: _core.IterableDiffers
    }];
  };

  NgForOf.propDecorators = {
    "ngForOf": [{
      type: _core.Input
    }],
    "ngForTrackBy": [{
      type: _core.Input
    }],
    "ngForTemplate": [{
      type: _core.Input
    }]
  };
  return NgForOf;
}();

exports.NgForOf = NgForOf;

var RecordViewTuple =
/** @class */
function () {
  function RecordViewTuple(record, view) {
    this.record = record;
    this.view = view;
  }

  return RecordViewTuple;
}();

function getTypeNameForDebugging(type) {
  return type['name'] || _typeof(type);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Conditionally includes a template based on the value of an `expression`.
 *
 * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place
 * when expression is truthy or falsy respectively. Typically the:
 *  - `then` template is the inline template of `ngIf` unless bound to a different value.
 *  - `else` template is blank unless it is bound.
 *
 * ## Most common usage
 *
 * The most common usage of the `ngIf` directive is to conditionally show the inline template as
 * seen in this example:
 * {@example common/ngIf/ts/module.ts region='NgIfSimple'}
 *
 * ## Showing an alternative template using `else`
 *
 * If it is necessary to display a template when the `expression` is falsy use the `else` template
 * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.
 * The template can be defined anywhere in the component view but is typically placed right after
 * `ngIf` for readability.
 *
 * {@example common/ngIf/ts/module.ts region='NgIfElse'}
 *
 * ## Using non-inlined `then` template
 *
 * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using
 * a binding (just like `else`). Because `then` and `else` are bindings, the template references can
 * change at runtime as shown in this example.
 *
 * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}
 *
 * ## Storing conditional result in a variable
 *
 * A common pattern is that we need to show a set of properties from the same object. If the
 * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against
 * dereferencing a `null` value. This is especially the case when waiting on async data such as
 * when using the `async` pipe as shown in following example:
 *
 * ```
 * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!
 * ```
 *
 * There are several inefficiencies in the above example:
 *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the
 *    example above.
 *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.
 *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.
 *  - We have to place the `async` pipe in parenthesis.
 *
 * A better way to do this is to use `ngIf` and store the result of the condition in a local
 * variable as shown in the the example below:
 *
 * {@example common/ngIf/ts/module.ts region='NgIfAs'}
 *
 * Notice that:
 *  - We use only one `async` pipe and hence only one subscription gets created.
 *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.
 *  - The local `user` can then be bound repeatedly in a more efficient way.
 *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only
 *    display the data if `userStream` returns a value.
 *  - We can display an alternative template while waiting for the data.
 *
 * ### Syntax
 *
 * Simple form:
 * - `<div *ngIf="condition">...</div>`
 * - `<ng-template [ngIf]="condition"><div>...</div></ng-template>`
 *
 * Form with an else block:
 * ```
 * <div *ngIf="condition; else elseBlock">...</div>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * Form with a `then` and `else` block:
 * ```
 * <div *ngIf="condition; then thenBlock else elseBlock"></div>
 * <ng-template #thenBlock>...</ng-template>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * Form with storing the value locally:
 * ```
 * <div *ngIf="condition as value; else elseBlock">{{value}}</div>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 *
 */


var NgIf =
/** @class */
function () {
  function NgIf(_viewContainer, templateRef) {
    this._viewContainer = _viewContainer;
    this._context = new NgIfContext();
    this._thenTemplateRef = null;
    this._elseTemplateRef = null;
    this._thenViewRef = null;
    this._elseViewRef = null;
    this._thenTemplateRef = templateRef;
  }

  Object.defineProperty(NgIf.prototype, "ngIf", {
    set: function set(condition) {
      this._context.$implicit = this._context.ngIf = condition;

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgIf.prototype, "ngIfThen", {
    set: function set(templateRef) {
      assertTemplate('ngIfThen', templateRef);
      this._thenTemplateRef = templateRef;
      this._thenViewRef = null; // clear previous view if any.

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgIf.prototype, "ngIfElse", {
    set: function set(templateRef) {
      assertTemplate('ngIfElse', templateRef);
      this._elseTemplateRef = templateRef;
      this._elseViewRef = null; // clear previous view if any.

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });

  NgIf.prototype._updateView = function () {
    if (this._context.$implicit) {
      if (!this._thenViewRef) {
        this._viewContainer.clear();

        this._elseViewRef = null;

        if (this._thenTemplateRef) {
          this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);
        }
      }
    } else {
      if (!this._elseViewRef) {
        this._viewContainer.clear();

        this._thenViewRef = null;

        if (this._elseTemplateRef) {
          this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);
        }
      }
    }
  };

  NgIf.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngIf]'
    }]
  }];
  /** @nocollapse */

  NgIf.ctorParameters = function () {
    return [{
      type: _core.ViewContainerRef
    }, {
      type: _core.TemplateRef
    }];
  };

  NgIf.propDecorators = {
    "ngIf": [{
      type: _core.Input
    }],
    "ngIfThen": [{
      type: _core.Input
    }],
    "ngIfElse": [{
      type: _core.Input
    }]
  };
  return NgIf;
}();
/**
 *
 */


exports.NgIf = NgIf;

var NgIfContext =
/** @class */
function () {
  function NgIfContext() {
    this.$implicit = null;
    this.ngIf = null;
  }

  return NgIfContext;
}();

exports.NgIfContext = NgIfContext;

function assertTemplate(property, templateRef) {
  var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);

  if (!isTemplateRefOrNull) {
    throw new Error(property + " must be a TemplateRef, but received '" + (0, _core.ɵstringify)(templateRef) + "'.");
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SwitchView =
/** @class */
function () {
  function SwitchView(_viewContainerRef, _templateRef) {
    this._viewContainerRef = _viewContainerRef;
    this._templateRef = _templateRef;
    this._created = false;
  }

  SwitchView.prototype.create = function () {
    this._created = true;

    this._viewContainerRef.createEmbeddedView(this._templateRef);
  };

  SwitchView.prototype.destroy = function () {
    this._created = false;

    this._viewContainerRef.clear();
  };

  SwitchView.prototype.enforceState = function (created) {
    if (created && !this._created) {
      this.create();
    } else if (!created && this._created) {
      this.destroy();
    }
  };

  return SwitchView;
}();
/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 *     <container-element [ngSwitch]="switch_expression">
 *       <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *       <some-element *ngSwitchCase="match_expression_2">...</some-element>
 *       <some-other-element *ngSwitchCase="match_expression_3">...</some-other-element>
 *       <ng-container *ngSwitchCase="match_expression_3">
 *         <!-- use a ng-container to group multiple root nodes -->
 *         <inner-element></inner-element>
 *         <inner-other-element></inner-other-element>
 *       </ng-container>
 *       <some-element *ngSwitchDefault>...</some-element>
 *     </container-element>
 * ```
 * @description
 *
 * Adds / removes DOM sub-trees when the nest match expressions matches the switch expression.
 *
 * `NgSwitch` stamps out nested views when their match expression value matches the value of the
 * switch expression.
 *
 * In other words:
 * - you define a container element (where you place the directive with a switch expression on the
 * `[ngSwitch]="..."` attribute)
 * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view
 * root elements.
 *
 * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will
 * be preserved at the location.
 *
 * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the
 * expression is evaluated.
 * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is
 * stamped out.
 *
 *
 */


var NgSwitch =
/** @class */
function () {
  function NgSwitch() {
    this._defaultUsed = false;
    this._caseCount = 0;
    this._lastCaseCheckIndex = 0;
    this._lastCasesMatched = false;
  }

  Object.defineProperty(NgSwitch.prototype, "ngSwitch", {
    set: function set(newValue) {
      this._ngSwitch = newValue;

      if (this._caseCount === 0) {
        this._updateDefaultCases(true);
      }
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  /** @internal */

  NgSwitch.prototype._addCase =
  /** @internal */
  function () {
    return this._caseCount++;
  };
  /** @internal */

  /** @internal */


  NgSwitch.prototype._addDefault =
  /** @internal */
  function (view) {
    if (!this._defaultViews) {
      this._defaultViews = [];
    }

    this._defaultViews.push(view);
  };
  /** @internal */

  /** @internal */


  NgSwitch.prototype._matchCase =
  /** @internal */
  function (value) {
    var matched = value == this._ngSwitch;
    this._lastCasesMatched = this._lastCasesMatched || matched;
    this._lastCaseCheckIndex++;

    if (this._lastCaseCheckIndex === this._caseCount) {
      this._updateDefaultCases(!this._lastCasesMatched);

      this._lastCaseCheckIndex = 0;
      this._lastCasesMatched = false;
    }

    return matched;
  };

  NgSwitch.prototype._updateDefaultCases = function (useDefault) {
    if (this._defaultViews && useDefault !== this._defaultUsed) {
      this._defaultUsed = useDefault;

      for (var i = 0; i < this._defaultViews.length; i++) {
        var defaultView = this._defaultViews[i];
        defaultView.enforceState(useDefault);
      }
    }
  };

  NgSwitch.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngSwitch]'
    }]
  }];
  /** @nocollapse */

  NgSwitch.ctorParameters = function () {
    return [];
  };

  NgSwitch.propDecorators = {
    "ngSwitch": [{
      type: _core.Input
    }]
  };
  return NgSwitch;
}();
/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 * </container-element>
 *```
 * @description
 *
 * Creates a view that will be added/removed from the parent {@link NgSwitch} when the
 * given expression evaluate to respectively the same/different value as the switch
 * expression.
 *
 * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch
 * expression.
 *
 * If multiple match expressions match the switch expression value, all of them are displayed.
 *
 * See {@link NgSwitch} for more details and example.
 *
 *
 */


exports.NgSwitch = NgSwitch;

var NgSwitchCase =
/** @class */
function () {
  function NgSwitchCase(viewContainer, templateRef, ngSwitch) {
    this.ngSwitch = ngSwitch;

    ngSwitch._addCase();

    this._view = new SwitchView(viewContainer, templateRef);
  }

  NgSwitchCase.prototype.ngDoCheck = function () {
    this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
  };

  NgSwitchCase.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngSwitchCase]'
    }]
  }];
  /** @nocollapse */

  NgSwitchCase.ctorParameters = function () {
    return [{
      type: _core.ViewContainerRef
    }, {
      type: _core.TemplateRef
    }, {
      type: NgSwitch,
      decorators: [{
        type: _core.Host
      }]
    }];
  };

  NgSwitchCase.propDecorators = {
    "ngSwitchCase": [{
      type: _core.Input
    }]
  };
  return NgSwitchCase;
}();
/**
 * @ngModule CommonModule
 * @usageNotes
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *   <some-other-element *ngSwitchDefault>...</some-other-element>
 * </container-element>
 * ```
 *
 * @description
 *
 * Creates a view that is added to the parent {@link NgSwitch} when no case expressions
 * match the switch expression.
 *
 * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch
 * expression.
 *
 * See {@link NgSwitch} for more details and example.
 *
 *
 */


exports.NgSwitchCase = NgSwitchCase;

var NgSwitchDefault =
/** @class */
function () {
  function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {
    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));
  }

  NgSwitchDefault.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngSwitchDefault]'
    }]
  }];
  /** @nocollapse */

  NgSwitchDefault.ctorParameters = function () {
    return [{
      type: _core.ViewContainerRef
    }, {
      type: _core.TemplateRef
    }, {
      type: NgSwitch,
      decorators: [{
        type: _core.Host
      }]
    }];
  };

  return NgSwitchDefault;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 * <some-element [ngPlural]="value">
 *   <ng-template ngPluralCase="=0">there is nothing</ng-template>
 *   <ng-template ngPluralCase="=1">there is one</ng-template>
 *   <ng-template ngPluralCase="few">there are a few</ng-template>
 * </some-element>
 * ```
 *
 * @description
 *
 * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.
 *
 * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees
 * that match the switch expression's pluralization category.
 *
 * To use this directive you must provide a container element that sets the `[ngPlural]` attribute
 * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their
 * expression:
 * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value
 *   matches the switch expression exactly,
 * - otherwise, the view will be treated as a "category match", and will only display if exact
 *   value matches aren't found and the value maps to its category for the defined locale.
 *
 * See http://cldr.unicode.org/index/cldr-spec/plural-rules
 *
 * @experimental
 */


exports.NgSwitchDefault = NgSwitchDefault;

var NgPlural =
/** @class */
function () {
  function NgPlural(_localization) {
    this._localization = _localization;
    this._caseViews = {};
  }

  Object.defineProperty(NgPlural.prototype, "ngPlural", {
    set: function set(value) {
      this._switchValue = value;

      this._updateView();
    },
    enumerable: true,
    configurable: true
  });

  NgPlural.prototype.addCase = function (value, switchView) {
    this._caseViews[value] = switchView;
  };

  NgPlural.prototype._updateView = function () {
    this._clearViews();

    var cases = Object.keys(this._caseViews);
    var key = getPluralCategory(this._switchValue, cases, this._localization);

    this._activateView(this._caseViews[key]);
  };

  NgPlural.prototype._clearViews = function () {
    if (this._activeView) this._activeView.destroy();
  };

  NgPlural.prototype._activateView = function (view) {
    if (view) {
      this._activeView = view;

      this._activeView.create();
    }
  };

  NgPlural.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngPlural]'
    }]
  }];
  /** @nocollapse */

  NgPlural.ctorParameters = function () {
    return [{
      type: NgLocalization
    }];
  };

  NgPlural.propDecorators = {
    "ngPlural": [{
      type: _core.Input
    }]
  };
  return NgPlural;
}();
/**
 * @ngModule CommonModule
 *
 * @description
 *
 * Creates a view that will be added/removed from the parent {@link NgPlural} when the
 * given expression matches the plural expression according to CLDR rules.
 *
 * @usageNotes
 * ```
 * <some-element [ngPlural]="value">
 *   <ng-template ngPluralCase="=0">...</ng-template>
 *   <ng-template ngPluralCase="other">...</ng-template>
 * </some-element>
 *```
 *
 * See {@link NgPlural} for more details and example.
 *
 * @experimental
 */


exports.NgPlural = NgPlural;

var NgPluralCase =
/** @class */
function () {
  function NgPluralCase(value, template, viewContainer, ngPlural) {
    this.value = value;
    var isANumber = !isNaN(Number(value));
    ngPlural.addCase(isANumber ? "=" + value : value, new SwitchView(viewContainer, template));
  }

  NgPluralCase.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngPluralCase]'
    }]
  }];
  /** @nocollapse */

  NgPluralCase.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Attribute,
        args: ['ngPluralCase']
      }]
    }, {
      type: _core.TemplateRef
    }, {
      type: _core.ViewContainerRef
    }, {
      type: NgPlural,
      decorators: [{
        type: _core.Host
      }]
    }];
  };

  return NgPluralCase;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 * <some-element [ngStyle]="{'font-style': styleExp}">...</some-element>
 *
 * <some-element [ngStyle]="{'max-width.px': widthExp}">...</some-element>
 *
 * <some-element [ngStyle]="objExp">...</some-element>
 * ```
 *
 * @description
 *
 * Update an HTML element styles.
 *
 * The styles are updated according to the value of the expression evaluation:
 * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),
 * - values are the values assigned to those properties (expressed in the given unit).
 *
 *
 */


exports.NgPluralCase = NgPluralCase;

var NgStyle =
/** @class */
function () {
  function NgStyle(_differs, _ngEl, _renderer) {
    this._differs = _differs;
    this._ngEl = _ngEl;
    this._renderer = _renderer;
  }

  Object.defineProperty(NgStyle.prototype, "ngStyle", {
    set: function set(v) {
      this._ngStyle = v;

      if (!this._differ && v) {
        this._differ = this._differs.find(v).create();
      }
    },
    enumerable: true,
    configurable: true
  });

  NgStyle.prototype.ngDoCheck = function () {
    if (this._differ) {
      var changes = this._differ.diff(this._ngStyle);

      if (changes) {
        this._applyChanges(changes);
      }
    }
  };

  NgStyle.prototype._applyChanges = function (changes) {
    var _this = this;

    changes.forEachRemovedItem(function (record) {
      return _this._setStyle(record.key, null);
    });
    changes.forEachAddedItem(function (record) {
      return _this._setStyle(record.key, record.currentValue);
    });
    changes.forEachChangedItem(function (record) {
      return _this._setStyle(record.key, record.currentValue);
    });
  };

  NgStyle.prototype._setStyle = function (nameAndUnit, value) {
    var _a = (0, _tslib.__read)(nameAndUnit.split('.'), 2),
        name = _a[0],
        unit = _a[1];

    value = value != null && unit ? "" + value + unit : value;

    if (value != null) {
      this._renderer.setStyle(this._ngEl.nativeElement, name, value);
    } else {
      this._renderer.removeStyle(this._ngEl.nativeElement, name);
    }
  };

  NgStyle.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngStyle]'
    }]
  }];
  /** @nocollapse */

  NgStyle.ctorParameters = function () {
    return [{
      type: _core.KeyValueDiffers
    }, {
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }];
  };

  NgStyle.propDecorators = {
    "ngStyle": [{
      type: _core.Input
    }]
  };
  return NgStyle;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 *
 * @usageNotes
 * ```
 * <ng-container *ngTemplateOutlet="templateRefExp; context: contextExp"></ng-container>
 * ```
 *
 * @description
 *
 * Inserts an embedded view from a prepared `TemplateRef`.
 *
 * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.
 * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding
 * by the local template `let` declarations.
 *
 * Note: using the key `$implicit` in the context object will set its value as default.
 *
 * ## Example
 *
 * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}
 *
 *
 */


exports.NgStyle = NgStyle;

var NgTemplateOutlet =
/** @class */
function () {
  function NgTemplateOutlet(_viewContainerRef) {
    this._viewContainerRef = _viewContainerRef;
  }

  NgTemplateOutlet.prototype.ngOnChanges = function (changes) {
    var recreateView = this._shouldRecreateView(changes);

    if (recreateView) {
      if (this._viewRef) {
        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));
      }

      if (this.ngTemplateOutlet) {
        this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);
      }
    } else {
      if (this._viewRef && this.ngTemplateOutletContext) {
        this._updateExistingContext(this.ngTemplateOutletContext);
      }
    }
  };
  /**
   * We need to re-create existing embedded view if:
   * - templateRef has changed
   * - context has changes
   *
   * We mark context object as changed when the corresponding object
   * shape changes (new properties are added or existing properties are removed).
   * In other words we consider context with the same properties as "the same" even
   * if object reference changes (see https://github.com/angular/angular/issues/13407).
   */

  /**
     * We need to re-create existing embedded view if:
     * - templateRef has changed
     * - context has changes
     *
     * We mark context object as changed when the corresponding object
     * shape changes (new properties are added or existing properties are removed).
     * In other words we consider context with the same properties as "the same" even
     * if object reference changes (see https://github.com/angular/angular/issues/13407).
     */


  NgTemplateOutlet.prototype._shouldRecreateView =
  /**
  * We need to re-create existing embedded view if:
  * - templateRef has changed
  * - context has changes
  *
  * We mark context object as changed when the corresponding object
  * shape changes (new properties are added or existing properties are removed).
  * In other words we consider context with the same properties as "the same" even
  * if object reference changes (see https://github.com/angular/angular/issues/13407).
  */
  function (changes) {
    var ctxChange = changes['ngTemplateOutletContext'];
    return !!changes['ngTemplateOutlet'] || ctxChange && this._hasContextShapeChanged(ctxChange);
  };

  NgTemplateOutlet.prototype._hasContextShapeChanged = function (ctxChange) {
    var prevCtxKeys = Object.keys(ctxChange.previousValue || {});
    var currCtxKeys = Object.keys(ctxChange.currentValue || {});

    if (prevCtxKeys.length === currCtxKeys.length) {
      try {
        for (var currCtxKeys_1 = (0, _tslib.__values)(currCtxKeys), currCtxKeys_1_1 = currCtxKeys_1.next(); !currCtxKeys_1_1.done; currCtxKeys_1_1 = currCtxKeys_1.next()) {
          var propName = currCtxKeys_1_1.value;

          if (prevCtxKeys.indexOf(propName) === -1) {
            return true;
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (currCtxKeys_1_1 && !currCtxKeys_1_1.done && (_a = currCtxKeys_1.return)) _a.call(currCtxKeys_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      return false;
    } else {
      return true;
    }

    var e_1, _a;
  };

  NgTemplateOutlet.prototype._updateExistingContext = function (ctx) {
    try {
      for (var _a = (0, _tslib.__values)(Object.keys(ctx)), _b = _a.next(); !_b.done; _b = _a.next()) {
        var propName = _b.value;
        this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    var e_2, _c;
  };

  NgTemplateOutlet.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngTemplateOutlet]'
    }]
  }];
  /** @nocollapse */

  NgTemplateOutlet.ctorParameters = function () {
    return [{
      type: _core.ViewContainerRef
    }];
  };

  NgTemplateOutlet.propDecorators = {
    "ngTemplateOutletContext": [{
      type: _core.Input
    }],
    "ngTemplateOutlet": [{
      type: _core.Input
    }]
  };
  return NgTemplateOutlet;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of Angular directives that are likely to be used in each and every Angular
 * application.
 */


exports.NgTemplateOutlet = NgTemplateOutlet;
var COMMON_DIRECTIVES = [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

exports.ɵangular_packages_common_common_e = COMMON_DIRECTIVES;

function invalidPipeArgumentError(type, value) {
  return Error("InvalidPipeArgument: '" + value + "' for pipe '" + (0, _core.ɵstringify)(type) + "'");
}

var NumberFormatter =
/** @class */
function () {
  function NumberFormatter() {}

  NumberFormatter.format = function (num, locale, style, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var minimumIntegerDigits = opts.minimumIntegerDigits,
        minimumFractionDigits = opts.minimumFractionDigits,
        maximumFractionDigits = opts.maximumFractionDigits,
        currency = opts.currency,
        _a = opts.currencyAsSymbol,
        currencyAsSymbol = _a === void 0 ? false : _a;
    var options = {
      minimumIntegerDigits: minimumIntegerDigits,
      minimumFractionDigits: minimumFractionDigits,
      maximumFractionDigits: maximumFractionDigits,
      style: NumberFormatStyle[style].toLowerCase()
    };

    if (style == NumberFormatStyle.Currency) {
      options.currency = typeof currency == 'string' ? currency : undefined;
      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';
    }

    return new Intl.NumberFormat(locale, options).format(num);
  };

  return NumberFormatter;
}();

var DATE_FORMATS_SPLIT$1 = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;
var PATTERN_ALIASES = {
  // Keys are quoted so they do not get renamed during closure compilation.
  'yMMMdjms': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1), digitCondition('hour', 1), digitCondition('minute', 1), digitCondition('second', 1)])),
  'yMdjm': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1), digitCondition('hour', 1), digitCondition('minute', 1)])),
  'yMMMMEEEEd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4), digitCondition('day', 1)])),
  'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),
  'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),
  'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),
  'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),
  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))
};
var DATE_FORMATS$1 = {
  // Keys are quoted so they do not get renamed.
  'yyyy': datePartGetterFactory(digitCondition('year', 4)),
  'yy': datePartGetterFactory(digitCondition('year', 2)),
  'y': datePartGetterFactory(digitCondition('year', 1)),
  'MMMM': datePartGetterFactory(nameCondition('month', 4)),
  'MMM': datePartGetterFactory(nameCondition('month', 3)),
  'MM': datePartGetterFactory(digitCondition('month', 2)),
  'M': datePartGetterFactory(digitCondition('month', 1)),
  'LLLL': datePartGetterFactory(nameCondition('month', 4)),
  'L': datePartGetterFactory(nameCondition('month', 1)),
  'dd': datePartGetterFactory(digitCondition('day', 2)),
  'd': datePartGetterFactory(digitCondition('day', 1)),
  'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),
  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),
  'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),
  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),
  'jj': datePartGetterFactory(digitCondition('hour', 2)),
  'j': datePartGetterFactory(digitCondition('hour', 1)),
  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),
  'm': datePartGetterFactory(digitCondition('minute', 1)),
  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),
  's': datePartGetterFactory(digitCondition('second', 1)),
  // while ISO 8601 requires fractions to be prefixed with `.` or `,`
  // we can be just safely rely on using `sss` since we currently don't support single or two digit
  // fractions
  'sss': datePartGetterFactory(digitCondition('second', 3)),
  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),
  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),
  'EE': datePartGetterFactory(nameCondition('weekday', 2)),
  'E': datePartGetterFactory(nameCondition('weekday', 1)),
  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),
  'Z': timeZoneGetter$1('short'),
  'z': timeZoneGetter$1('long'),
  'ww': datePartGetterFactory({}),
  // Week of year, padded (00-53). Week 01 is the week with the
  // first Thursday of the year. not support ?
  'w': datePartGetterFactory({}),
  // Week of year (0-53). Week 1 is the week with the first Thursday
  // of the year not support ?
  'G': datePartGetterFactory(nameCondition('era', 1)),
  'GG': datePartGetterFactory(nameCondition('era', 2)),
  'GGG': datePartGetterFactory(nameCondition('era', 3)),
  'GGGG': datePartGetterFactory(nameCondition('era', 4))
};

function digitModifier(inner) {
  return function (date, locale) {
    var result = inner(date, locale);
    return result.length == 1 ? '0' + result : result;
  };
}

function hourClockExtractor(inner) {
  return function (date, locale) {
    return inner(date, locale).split(' ')[1];
  };
}

function hourExtractor(inner) {
  return function (date, locale) {
    return inner(date, locale).split(' ')[0];
  };
}

function intlDateFormat(date, locale, options) {
  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\u200e\u200f]/g, '');
}

function timeZoneGetter$1(timezone) {
  // To workaround `Intl` API restriction for single timezone let format with 24 hours
  var options = {
    hour: '2-digit',
    hour12: false,
    timeZoneName: timezone
  };
  return function (date, locale) {
    var result = intlDateFormat(date, locale, options); // Then extract first 3 letters that related to hours

    return result ? result.substring(3) : '';
  };
}

function hour12Modify(options, value) {
  options.hour12 = value;
  return options;
}

function digitCondition(prop, len) {
  var result = {};
  result[prop] = len === 2 ? '2-digit' : 'numeric';
  return result;
}

function nameCondition(prop, len) {
  var result = {};

  if (len < 4) {
    result[prop] = len > 1 ? 'short' : 'narrow';
  } else {
    result[prop] = 'long';
  }

  return result;
}

function combine(options) {
  return options.reduce(function (merged, opt) {
    return (0, _tslib.__assign)({}, merged, opt);
  }, {});
}

function datePartGetterFactory(ret) {
  return function (date, locale) {
    return intlDateFormat(date, locale, ret);
  };
}

var DATE_FORMATTER_CACHE = new Map();

function dateFormatter(format, date, locale) {
  var fn = PATTERN_ALIASES[format];
  if (fn) return fn(date, locale);
  var cacheKey = format;
  var parts = DATE_FORMATTER_CACHE.get(cacheKey);

  if (!parts) {
    parts = [];
    var match = void 0;
    DATE_FORMATS_SPLIT$1.exec(format);
    var _format = format;

    while (_format) {
      match = DATE_FORMATS_SPLIT$1.exec(_format);

      if (match) {
        parts = parts.concat(match.slice(1));
        _format = parts.pop();
      } else {
        parts.push(_format);
        _format = null;
      }
    }

    DATE_FORMATTER_CACHE.set(cacheKey, parts);
  }

  return parts.reduce(function (text, part) {
    var fn = DATE_FORMATS$1[part];
    return text + (fn ? fn(date, locale) : partToTime(part));
  }, '');
}

function partToTime(part) {
  return part === '\'\'' ? '\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
}

var DateFormatter =
/** @class */
function () {
  function DateFormatter() {}

  DateFormatter.format = function (date, locale, pattern) {
    return dateFormatter(pattern, date, locale);
  };

  return DateFormatter;
}();
/**
* @license
* Copyright Google Inc. All Rights Reserved.
*
* Use of this source code is governed by an MIT-style license that can be
* found in the LICENSE file at https://angular.io/license
  */

/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a date according to locale rules.
 *
 * Where:
 * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string
 * (https://www.w3.org/TR/NOTE-datetime).
 * - `format` indicates which date/time components to include. The format can be predefined as
 *   shown below or custom as shown in the table.
 *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)
 *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)
 *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)
 *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)
 *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)
 *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)
 *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)
 *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)
 *
 *
 *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |
 *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|
 *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |
 *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |
 *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |
 *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |
 *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |
 *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |
 *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|
 *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |
 *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |
 *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |
 *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |
 *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |
 *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |
 *
 * In javascript, only the components specified will be respected (not the ordering,
 * punctuations, ...) and details of the formatting will be dependent on the locale.
 *
 * Timezone of the formatted text will be the local system timezone of the end-user's machine.
 *
 * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not
 * applied and the formatted text will have the same day, month and year of the expression.
 *
 * WARNINGS:
 * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.
 *   Instead users should treat the date as an immutable object and change the reference when the
 *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run
 *   which would be an expensive operation).
 * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera
 *   browsers.
 *
 * ### Examples
 *
 * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)
 * in the _local_ time and locale is 'en-US':
 *
 * {@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}
 *
 *
 */


var DeprecatedDatePipe =
/** @class */
function () {
  function DeprecatedDatePipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedDatePipe.prototype.transform = function (value, pattern) {
    if (pattern === void 0) {
      pattern = 'mediumDate';
    }

    if (value == null || value === '' || value !== value) return null;
    var date;

    if (typeof value === 'string') {
      value = value.trim();
    }

    if (isDate$1(value)) {
      date = value;
    } else if (!isNaN(value - parseFloat(value))) {
      date = new Date(parseFloat(value));
    } else if (typeof value === 'string' && /^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)) {
      /**
             * For ISO Strings without time the day, month and year must be extracted from the ISO String
             * before Date creation to avoid time offset and errors in the new Date.
             * If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
             * date, some browsers (e.g. IE 9) will throw an invalid Date error
             * If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the
             * timeoffset
             * is applied
             * Note: ISO months are 0 for January, 1 for February, ...
             */
      var _a = (0, _tslib.__read)(value.split('-').map(function (val) {
        return parseInt(val, 10);
      }), 3),
          y = _a[0],
          m = _a[1],
          d = _a[2];

      date = new Date(y, m - 1, d);
    } else {
      date = new Date(value);
    }

    if (!isDate$1(date)) {
      var match = void 0;

      if (typeof value === 'string' && (match = value.match(ISO8601_DATE_REGEX))) {
        date = isoStringToDate(match);
      } else {
        throw invalidPipeArgumentError(DeprecatedDatePipe, value);
      }
    }

    return DateFormatter.format(date, this._locale, DeprecatedDatePipe._ALIASES[pattern] || pattern);
  };
  /** @internal */


  DeprecatedDatePipe._ALIASES = {
    'medium': 'yMMMdjms',
    'short': 'yMdjm',
    'fullDate': 'yMMMMEEEEd',
    'longDate': 'yMMMMd',
    'mediumDate': 'yMMMd',
    'shortDate': 'yMd',
    'mediumTime': 'jms',
    'shortTime': 'jm'
  };
  DeprecatedDatePipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'date',
      pure: true
    }]
  }];
  /** @nocollapse */

  DeprecatedDatePipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return DeprecatedDatePipe;
}();

exports.DeprecatedDatePipe = DeprecatedDatePipe;

function isDate$1(value) {
  return value instanceof Date && !isNaN(value.valueOf());
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function formatNumber$1(pipe, locale, value, style, digits, currency, currencyAsSymbol) {
  if (currency === void 0) {
    currency = null;
  }

  if (currencyAsSymbol === void 0) {
    currencyAsSymbol = false;
  }

  if (value == null) return null; // Convert strings to numbers

  value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;

  if (typeof value !== 'number') {
    throw invalidPipeArgumentError(pipe, value);
  }

  var minInt;
  var minFraction;
  var maxFraction;

  if (style !== NumberFormatStyle.Currency) {
    // rely on Intl default for currency
    minInt = 1;
    minFraction = 0;
    maxFraction = 3;
  }

  if (digits) {
    var parts = digits.match(NUMBER_FORMAT_REGEXP);

    if (parts === null) {
      throw new Error(digits + " is not a valid digit info for number pipes");
    }

    if (parts[1] != null) {
      // min integer digits
      minInt = parseIntAutoRadix(parts[1]);
    }

    if (parts[3] != null) {
      // min fraction digits
      minFraction = parseIntAutoRadix(parts[3]);
    }

    if (parts[5] != null) {
      // max fraction digits
      maxFraction = parseIntAutoRadix(parts[5]);
    }
  }

  return NumberFormatter.format(value, locale, style, {
    minimumIntegerDigits: minInt,
    minimumFractionDigits: minFraction,
    maximumFractionDigits: maxFraction,
    currency: currency,
    currencyAsSymbol: currencyAsSymbol
  });
}
/**
 * @ngModule CommonModule
 *
 * Formats a number as text. Group sizing and separator and other locale-specific
 * configurations are based on the active locale.
 *
 * where `expression` is a number:
 *  - `digitInfo` is a `string` which has a following format: <br>
 *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>
 *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.
 *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.
 *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.
 *
 * For more information on the acceptable range for each of these numbers and other
 * details see your native internationalization library.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See [Browser Support](guide/browser-support) for details.
 *
 * ### Example
 *
 * {@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}
 *
 *
 */


var DeprecatedDecimalPipe =
/** @class */
function () {
  function DeprecatedDecimalPipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedDecimalPipe.prototype.transform = function (value, digits) {
    return formatNumber$1(DeprecatedDecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);
  };

  DeprecatedDecimalPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'number'
    }]
  }];
  /** @nocollapse */

  DeprecatedDecimalPipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return DeprecatedDecimalPipe;
}();
/**
 * @ngModule CommonModule
 *
 * @description
 *
 * Formats a number as percentage according to locale rules.
 *
 * - `digitInfo` See {@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See [Browser Support](guide/browser-support) for details.
 *
 * ### Example
 *
 * {@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}
 *
 *
 */


exports.DeprecatedDecimalPipe = DeprecatedDecimalPipe;

var DeprecatedPercentPipe =
/** @class */
function () {
  function DeprecatedPercentPipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedPercentPipe.prototype.transform = function (value, digits) {
    return formatNumber$1(DeprecatedPercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);
  };

  DeprecatedPercentPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'percent'
    }]
  }];
  /** @nocollapse */

  DeprecatedPercentPipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return DeprecatedPercentPipe;
}();
/**
 * @ngModule CommonModule
 * @description
 *
 * Formats a number as currency using locale rules.
 *
 * Use `currency` to format a number as currency.
 *
 * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such
 *    as `USD` for the US dollar and `EUR` for the euro.
 * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.
 *   - `true`: use symbol (e.g. `$`).
 *   - `false`(default): use code (e.g. `USD`).
 * - `digitInfo` See {@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See [Browser Support](guide/browser-support) for details.
 *
 * ### Example
 *
 * {@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}
 *
 *
 */


exports.DeprecatedPercentPipe = DeprecatedPercentPipe;

var DeprecatedCurrencyPipe =
/** @class */
function () {
  function DeprecatedCurrencyPipe(_locale) {
    this._locale = _locale;
  }

  DeprecatedCurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {
    if (currencyCode === void 0) {
      currencyCode = 'USD';
    }

    if (symbolDisplay === void 0) {
      symbolDisplay = false;
    }

    return formatNumber$1(DeprecatedCurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);
  };

  DeprecatedCurrencyPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'currency'
    }]
  }];
  /** @nocollapse */

  DeprecatedCurrencyPipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return DeprecatedCurrencyPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of deprecated i18n pipes that require intl api
 *
 * @deprecated from v5
 */


exports.DeprecatedCurrencyPipe = DeprecatedCurrencyPipe;
var COMMON_DEPRECATED_I18N_PIPES = [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

exports.ɵangular_packages_common_common_g = COMMON_DEPRECATED_I18N_PIPES;

var ObservableStrategy =
/** @class */
function () {
  function ObservableStrategy() {}

  ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {
    return async.subscribe({
      next: updateLatestValue,
      error: function error(e) {
        throw e;
      }
    });
  };

  ObservableStrategy.prototype.dispose = function (subscription) {
    subscription.unsubscribe();
  };

  ObservableStrategy.prototype.onDestroy = function (subscription) {
    subscription.unsubscribe();
  };

  return ObservableStrategy;
}();

var PromiseStrategy =
/** @class */
function () {
  function PromiseStrategy() {}

  PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {
    return async.then(updateLatestValue, function (e) {
      throw e;
    });
  };

  PromiseStrategy.prototype.dispose = function (subscription) {};

  PromiseStrategy.prototype.onDestroy = function (subscription) {};

  return PromiseStrategy;
}();

var _promiseStrategy = new PromiseStrategy();

var _observableStrategy = new ObservableStrategy();
/**
 * @ngModule CommonModule
 * @description
 *
 * Unwraps a value from an asynchronous primitive.
 *
 * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has
 * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for
 * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid
 * potential memory leaks.
 *
 *
 * ## Examples
 *
 * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the
 * promise.
 *
 * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}
 *
 * It's also possible to use `async` with Observables. The example below binds the `time` Observable
 * to the view. The Observable continuously updates the view with the current time.
 *
 * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}
 *
 *
 */


var AsyncPipe =
/** @class */
function () {
  function AsyncPipe(_ref) {
    this._ref = _ref;
    this._latestValue = null;
    this._latestReturnedValue = null;
    this._subscription = null;
    this._obj = null;
    this._strategy = null;
  }

  AsyncPipe.prototype.ngOnDestroy = function () {
    if (this._subscription) {
      this._dispose();
    }
  };

  AsyncPipe.prototype.transform = function (obj) {
    if (!this._obj) {
      if (obj) {
        this._subscribe(obj);
      }

      this._latestReturnedValue = this._latestValue;
      return this._latestValue;
    }

    if (obj !== this._obj) {
      this._dispose();

      return this.transform(obj);
    }

    if (this._latestValue === this._latestReturnedValue) {
      return this._latestReturnedValue;
    }

    this._latestReturnedValue = this._latestValue;
    return _core.WrappedValue.wrap(this._latestValue);
  };

  AsyncPipe.prototype._subscribe = function (obj) {
    var _this = this;

    this._obj = obj;
    this._strategy = this._selectStrategy(obj);
    this._subscription = this._strategy.createSubscription(obj, function (value) {
      return _this._updateLatestValue(obj, value);
    });
  };

  AsyncPipe.prototype._selectStrategy = function (obj) {
    if ((0, _core.ɵisPromise)(obj)) {
      return _promiseStrategy;
    }

    if ((0, _core.ɵisObservable)(obj)) {
      return _observableStrategy;
    }

    throw invalidPipeArgumentError(AsyncPipe, obj);
  };

  AsyncPipe.prototype._dispose = function () {
    this._strategy.dispose(this._subscription);

    this._latestValue = null;
    this._latestReturnedValue = null;
    this._subscription = null;
    this._obj = null;
  };

  AsyncPipe.prototype._updateLatestValue = function (async, value) {
    if (async === this._obj) {
      this._latestValue = value;

      this._ref.markForCheck();
    }
  };

  AsyncPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'async',
      pure: false
    }]
  }];
  /** @nocollapse */

  AsyncPipe.ctorParameters = function () {
    return [{
      type: _core.ChangeDetectorRef
    }];
  };

  return AsyncPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Transforms text to lowercase.
 *
 * {@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }
 *
 *
 */


exports.AsyncPipe = AsyncPipe;

var LowerCasePipe =
/** @class */
function () {
  function LowerCasePipe() {}

  LowerCasePipe.prototype.transform = function (value) {
    if (!value) return value;

    if (typeof value !== 'string') {
      throw invalidPipeArgumentError(LowerCasePipe, value);
    }

    return value.toLowerCase();
  };

  LowerCasePipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'lowercase'
    }]
  }];
  /** @nocollapse */

  LowerCasePipe.ctorParameters = function () {
    return [];
  };

  return LowerCasePipe;
}(); //
// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result
// can be achieved by using /\p{L}\S*/gu and also known as Unicode Property Escapes
// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no
// transpilation of this functionality down to ES5 without external tool, the only solution is
// to use already transpiled form. Example can be found here -
// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1
//


exports.LowerCasePipe = LowerCasePipe;
var unicodeWordMatch = /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;
/**
 * Transforms text to titlecase.
 *
 * The pipe splits up a text into words, capitalizes the first letter of each word and transforms
 * the rest of the word into lowercase. In this case, whitespace characters (such as "space", "\t",
 * "\n", etc) are used as word separators.
 *
 * ## Example
 * {@example common/pipes/ts/titlecase_pipe.ts region='TitleCasePipe'}
 *
 *
 */

var TitleCasePipe =
/** @class */
function () {
  function TitleCasePipe() {}

  TitleCasePipe.prototype.transform = function (value) {
    if (!value) return value;

    if (typeof value !== 'string') {
      throw invalidPipeArgumentError(TitleCasePipe, value);
    }

    return value.replace(unicodeWordMatch, function (txt) {
      return txt[0].toUpperCase() + txt.substr(1).toLowerCase();
    });
  };

  TitleCasePipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'titlecase'
    }]
  }];
  /** @nocollapse */

  TitleCasePipe.ctorParameters = function () {
    return [];
  };

  return TitleCasePipe;
}();
/**
 * Transforms text to uppercase.
 *
 *
 */


exports.TitleCasePipe = TitleCasePipe;

var UpperCasePipe =
/** @class */
function () {
  function UpperCasePipe() {}

  UpperCasePipe.prototype.transform = function (value) {
    if (!value) return value;

    if (typeof value !== 'string') {
      throw invalidPipeArgumentError(UpperCasePipe, value);
    }

    return value.toUpperCase();
  };

  UpperCasePipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'uppercase'
    }]
  }];
  /** @nocollapse */

  UpperCasePipe.ctorParameters = function () {
    return [];
  };

  return UpperCasePipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// clang-format off

/**
 * @ngModule CommonModule
 * @description
 *
 * Uses the function {@link formatDate} to format a date according to locale rules.
 *
 * The following tabled describes the formatting options.
 *
 *  | Field Type         | Format      | Description                                                   | Example Value                                              |
 *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|
 *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |
 *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |
 *  |                    | GGGGG       | Narrow                                                        | A                                                          |
 *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |
 *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |
 *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |
 *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |
 *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |
 *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |
 *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |
 *  |                    | MMMM        | Wide                                                          | September                                                  |
 *  |                    | MMMMM       | Narrow                                                        | S                                                          |
 *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |
 *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |
 *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |
 *  |                    | LLLL        | Wide                                                          | September                                                  |
 *  |                    | LLLLL       | Narrow                                                        | S                                                          |
 *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |
 *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |
 *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |
 *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |
 *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |
 *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |
 *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |
 *  |                    | EEEEE       | Narrow                                                        | T                                                          |
 *  |                    | EEEEEE      | Short                                                         | Tu                                                         |
 *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |
 *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |
 *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |
 *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |
 *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |
 *  |                    | BBBBB       | Narrow                                                        | md                                                         |
 *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |
 *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |
 *  |                    | bbbbb       | Narrow                                                        | md                                                         |
 *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |
 *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |
 *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |
 *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |
 *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |
 *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |
 *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |
 *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |
 *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |
 *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |
 *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |
 *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |
 *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |
 *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |
 *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |
 *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |
 *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |
 *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |
 *
 *
 * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not
 * applied and the formatted text will have the same day, month and year of the expression.
 *
 * WARNINGS:
 * - this pipe has only access to en-US locale data by default. If you want to localize the dates
 *   in another language, you will have to import data for other locales.
 *   See the {@linkDocs guide/i18n#i18n-pipes "I18n guide"} to know how to import additional locale
 *   data.
 * - Fields suffixed with * are only available in the extra dataset.
 *   See the {@linkDocs guide/i18n#i18n-pipes "I18n guide"} to know how to import extra locale
 *   data.
 * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.
 *   Instead users should treat the date as an immutable object and change the reference when the
 *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run
 *   which would be an expensive operation).
 *
 * ### Examples
 *
 * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)
 * in the _local_ time and locale is 'en-US':
 *
 * {@example common/pipes/ts/date_pipe.ts region='DatePipe'}
 *
 *
 */
// clang-format on


exports.UpperCasePipe = UpperCasePipe;

var DatePipe =
/** @class */
function () {
  function DatePipe(locale) {
    this.locale = locale;
  }
  /**
   * @param value a date object or a number (milliseconds since UTC epoch) or an ISO string
   * (https://www.w3.org/TR/NOTE-datetime).
   * @param format indicates which date/time components to include. The format can be predefined as
   *   shown below (all examples are given for `en-US`) or custom as shown in the table.
   *   - `'short'`: equivalent to `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`).
   *   - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`).
   *   - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM
   * GMT+1`).
   *   - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at
   * 9:03:01 AM GMT+01:00`).
   *   - `'shortDate'`: equivalent to `'M/d/yy'` (e.g. `6/15/15`).
   *   - `'mediumDate'`: equivalent to `'MMM d, y'` (e.g. `Jun 15, 2015`).
   *   - `'longDate'`: equivalent to `'MMMM d, y'` (e.g. `June 15, 2015`).
   *   - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (e.g. `Monday, June 15, 2015`).
   *   - `'shortTime'`: equivalent to `'h:mm a'` (e.g. `9:03 AM`).
   *   - `'mediumTime'`: equivalent to `'h:mm:ss a'` (e.g. `9:03:01 AM`).
   *   - `'longTime'`: equivalent to `'h:mm:ss a z'` (e.g. `9:03:01 AM GMT+1`).
   *   - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (e.g. `9:03:01 AM GMT+01:00`).
   * @param timezone to be used for formatting the time. It understands UTC/GMT and the continental
   * US time zone
   *  abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).
   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
   * default).
   */

  /**
     * @param value a date object or a number (milliseconds since UTC epoch) or an ISO string
     * (https://www.w3.org/TR/NOTE-datetime).
     * @param format indicates which date/time components to include. The format can be predefined as
     *   shown below (all examples are given for `en-US`) or custom as shown in the table.
     *   - `'short'`: equivalent to `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`).
     *   - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`).
     *   - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM
     * GMT+1`).
     *   - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at
     * 9:03:01 AM GMT+01:00`).
     *   - `'shortDate'`: equivalent to `'M/d/yy'` (e.g. `6/15/15`).
     *   - `'mediumDate'`: equivalent to `'MMM d, y'` (e.g. `Jun 15, 2015`).
     *   - `'longDate'`: equivalent to `'MMMM d, y'` (e.g. `June 15, 2015`).
     *   - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (e.g. `Monday, June 15, 2015`).
     *   - `'shortTime'`: equivalent to `'h:mm a'` (e.g. `9:03 AM`).
     *   - `'mediumTime'`: equivalent to `'h:mm:ss a'` (e.g. `9:03:01 AM`).
     *   - `'longTime'`: equivalent to `'h:mm:ss a z'` (e.g. `9:03:01 AM GMT+1`).
     *   - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (e.g. `9:03:01 AM GMT+01:00`).
     * @param timezone to be used for formatting the time. It understands UTC/GMT and the continental
     * US time zone
     *  abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).
     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
     * default).
     */


  DatePipe.prototype.transform =
  /**
  * @param value a date object or a number (milliseconds since UTC epoch) or an ISO string
  * (https://www.w3.org/TR/NOTE-datetime).
  * @param format indicates which date/time components to include. The format can be predefined as
  *   shown below (all examples are given for `en-US`) or custom as shown in the table.
  *   - `'short'`: equivalent to `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`).
  *   - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`).
  *   - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM
  * GMT+1`).
  *   - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at
  * 9:03:01 AM GMT+01:00`).
  *   - `'shortDate'`: equivalent to `'M/d/yy'` (e.g. `6/15/15`).
  *   - `'mediumDate'`: equivalent to `'MMM d, y'` (e.g. `Jun 15, 2015`).
  *   - `'longDate'`: equivalent to `'MMMM d, y'` (e.g. `June 15, 2015`).
  *   - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (e.g. `Monday, June 15, 2015`).
  *   - `'shortTime'`: equivalent to `'h:mm a'` (e.g. `9:03 AM`).
  *   - `'mediumTime'`: equivalent to `'h:mm:ss a'` (e.g. `9:03:01 AM`).
  *   - `'longTime'`: equivalent to `'h:mm:ss a z'` (e.g. `9:03:01 AM GMT+1`).
  *   - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (e.g. `9:03:01 AM GMT+01:00`).
  * @param timezone to be used for formatting the time. It understands UTC/GMT and the continental
  * US time zone
  *  abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).
  * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
  * default).
  */
  function (value, format, timezone, locale) {
    if (format === void 0) {
      format = 'mediumDate';
    }

    if (value == null || value === '' || value !== value) return null;

    try {
      return formatDate(value, format, locale || this.locale, timezone);
    } catch (error) {
      throw invalidPipeArgumentError(DatePipe, error.message);
    }
  };

  DatePipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'date',
      pure: true
    }]
  }];
  /** @nocollapse */

  DatePipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return DatePipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.DatePipe = DatePipe;
var _INTERPOLATION_REGEXP = /#/g;
/**
 * @ngModule CommonModule
 * @description
 *
 * Maps a value to a string that pluralizes the value according to locale rules.
 *
 *  ## Example
 *
 * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}
 *
 * @experimental
 */

var I18nPluralPipe =
/** @class */
function () {
  function I18nPluralPipe(_localization) {
    this._localization = _localization;
  }
  /**
   * @param value the number to be formatted
   * @param pluralMap an object that mimics the ICU format, see
   * http://userguide.icu-project.org/formatparse/messages.
   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
   * default).
   */

  /**
     * @param value the number to be formatted
     * @param pluralMap an object that mimics the ICU format, see
     * http://userguide.icu-project.org/formatparse/messages.
     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
     * default).
     */


  I18nPluralPipe.prototype.transform =
  /**
  * @param value the number to be formatted
  * @param pluralMap an object that mimics the ICU format, see
  * http://userguide.icu-project.org/formatparse/messages.
  * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
  * default).
  */
  function (value, pluralMap, locale) {
    if (value == null) return '';

    if (_typeof(pluralMap) !== 'object' || pluralMap === null) {
      throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);
    }

    var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);
    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());
  };

  I18nPluralPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'i18nPlural',
      pure: true
    }]
  }];
  /** @nocollapse */

  I18nPluralPipe.ctorParameters = function () {
    return [{
      type: NgLocalization
    }];
  };

  return I18nPluralPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Generic selector that displays the string that matches the current value.
 *
 * If none of the keys of the `mapping` match the `value`, then the content
 * of the `other` key is returned when present, otherwise an empty string is returned.
 *
 * ## Example
 *
 * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}
 *
 * @experimental
 */


exports.I18nPluralPipe = I18nPluralPipe;

var I18nSelectPipe =
/** @class */
function () {
  function I18nSelectPipe() {}
  /**
   * @param value a string to be internationalized.
   * @param mapping an object that indicates the text that should be displayed
   * for different values of the provided `value`.
   */

  /**
     * @param value a string to be internationalized.
     * @param mapping an object that indicates the text that should be displayed
     * for different values of the provided `value`.
     */


  I18nSelectPipe.prototype.transform =
  /**
  * @param value a string to be internationalized.
  * @param mapping an object that indicates the text that should be displayed
  * for different values of the provided `value`.
  */
  function (value, mapping) {
    if (value == null) return '';

    if (_typeof(mapping) !== 'object' || typeof value !== 'string') {
      throw invalidPipeArgumentError(I18nSelectPipe, mapping);
    }

    if (mapping.hasOwnProperty(value)) {
      return mapping[value];
    }

    if (mapping.hasOwnProperty('other')) {
      return mapping['other'];
    }

    return '';
  };

  I18nSelectPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'i18nSelect',
      pure: true
    }]
  }];
  /** @nocollapse */

  I18nSelectPipe.ctorParameters = function () {
    return [];
  };

  return I18nSelectPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Converts value into string using `JSON.stringify`. Useful for debugging.
 *
 * ### Example
 * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}
 *
 *
 */


exports.I18nSelectPipe = I18nSelectPipe;

var JsonPipe =
/** @class */
function () {
  function JsonPipe() {}

  JsonPipe.prototype.transform = function (value) {
    return JSON.stringify(value, null, 2);
  };

  JsonPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'json',
      pure: false
    }]
  }];
  /** @nocollapse */

  JsonPipe.ctorParameters = function () {
    return [];
  };

  return JsonPipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Uses the function {@link formatNumber} to format a number according to locale rules.
 *
 * Formats a number as text. Group sizing and separator and other locale-specific
 * configurations are based on the locale.
 *
 * ### Example
 *
 * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}
 *
 *
 */


exports.JsonPipe = JsonPipe;

var DecimalPipe =
/** @class */
function () {
  function DecimalPipe(_locale) {
    this._locale = _locale;
  }
  /**
   * @param value a number to be formatted.
   * @param digitsInfo a `string` which has a following format: <br>
   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
   *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.
   *   - `minFractionDigits` is the minimum number of digits after the decimal point. Defaults to
   * `0`.
   *   - `maxFractionDigits` is the maximum number of digits after the decimal point. Defaults to
   * `3`.
   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
   * default).
   */

  /**
     * @param value a number to be formatted.
     * @param digitsInfo a `string` which has a following format: <br>
     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.
     *   - `minFractionDigits` is the minimum number of digits after the decimal point. Defaults to
     * `0`.
     *   - `maxFractionDigits` is the maximum number of digits after the decimal point. Defaults to
     * `3`.
     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
     * default).
     */


  DecimalPipe.prototype.transform =
  /**
  * @param value a number to be formatted.
  * @param digitsInfo a `string` which has a following format: <br>
  * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
  *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.
  *   - `minFractionDigits` is the minimum number of digits after the decimal point. Defaults to
  * `0`.
  *   - `maxFractionDigits` is the maximum number of digits after the decimal point. Defaults to
  * `3`.
  * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
  * default).
  */
  function (value, digitsInfo, locale) {
    if (isEmpty(value)) return null;
    locale = locale || this._locale;

    try {
      var num = strToNumber(value);
      return formatNumber(num, locale, digitsInfo);
    } catch (error) {
      throw invalidPipeArgumentError(DecimalPipe, error.message);
    }
  };

  DecimalPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'number'
    }]
  }];
  /** @nocollapse */

  DecimalPipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return DecimalPipe;
}();
/**
 * @ngModule CommonModule
 * @description
 *
 * Uses the function {@link formatPercent} to format a number as a percentage according
 * to locale rules.
 *
 * ### Example
 *
 * {@example common/pipes/ts/percent_pipe.ts region='PercentPipe'}
 *
 *
 */


exports.DecimalPipe = DecimalPipe;

var PercentPipe =
/** @class */
function () {
  function PercentPipe(_locale) {
    this._locale = _locale;
  }
  /**
   *
   * @param value a number to be formatted as a percentage.
   * @param digitsInfo see {@link DecimalPipe} for more details.
   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
  * default).
   */

  /**
     *
     * @param value a number to be formatted as a percentage.
     * @param digitsInfo see {@link DecimalPipe} for more details.
     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
   * default).
     */


  PercentPipe.prototype.transform =
  /**
  *
  * @param value a number to be formatted as a percentage.
  * @param digitsInfo see {@link DecimalPipe} for more details.
  * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
  * default).
  */
  function (value, digitsInfo, locale) {
    if (isEmpty(value)) return null;
    locale = locale || this._locale;

    try {
      var num = strToNumber(value);
      return formatPercent(num, locale, digitsInfo);
    } catch (error) {
      throw invalidPipeArgumentError(PercentPipe, error.message);
    }
  };

  PercentPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'percent'
    }]
  }];
  /** @nocollapse */

  PercentPipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return PercentPipe;
}();
/**
 * @ngModule CommonModule
 * @description
 *
 * Uses the functions {@link getCurrencySymbol} and {@link formatCurrency} to format a
 * number as currency using locale rules.
 *
 * ### Example
 *
 * {@example common/pipes/ts/currency_pipe.ts region='CurrencyPipe'}
 *
 *
 */


exports.PercentPipe = PercentPipe;

var CurrencyPipe =
/** @class */
function () {
  function CurrencyPipe(_locale) {
    this._locale = _locale;
  }
  /**
   *
   * @param value a number to be formatted as currency.
   * @param currencyCodeis the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,
   * such as `USD` for the US dollar and `EUR` for the euro.
   * @param display indicates whether to show the currency symbol, the code or a custom value:
   *   - `code`: use code (e.g. `USD`).
   *   - `symbol`(default): use symbol (e.g. `$`).
   *   - `symbol-narrow`: some countries have two symbols for their currency, one regular and one
   *     narrow (e.g. the canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`).
   *   - `string`: use this value instead of a code or a symbol.
   *   - boolean (deprecated from v5): `true` for symbol and false for `code`.
   *   If there is no narrow symbol for the chosen currency, the regular symbol will be used.
   * @param digitsInfo see {@link DecimalPipe} for more details.
   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
   * default).
   */

  /**
     *
     * @param value a number to be formatted as currency.
     * @param currencyCodeis the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,
     * such as `USD` for the US dollar and `EUR` for the euro.
     * @param display indicates whether to show the currency symbol, the code or a custom value:
     *   - `code`: use code (e.g. `USD`).
     *   - `symbol`(default): use symbol (e.g. `$`).
     *   - `symbol-narrow`: some countries have two symbols for their currency, one regular and one
     *     narrow (e.g. the canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`).
     *   - `string`: use this value instead of a code or a symbol.
     *   - boolean (deprecated from v5): `true` for symbol and false for `code`.
     *   If there is no narrow symbol for the chosen currency, the regular symbol will be used.
     * @param digitsInfo see {@link DecimalPipe} for more details.
     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
     * default).
     */


  CurrencyPipe.prototype.transform =
  /**
  *
  * @param value a number to be formatted as currency.
  * @param currencyCodeis the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,
  * such as `USD` for the US dollar and `EUR` for the euro.
  * @param display indicates whether to show the currency symbol, the code or a custom value:
  *   - `code`: use code (e.g. `USD`).
  *   - `symbol`(default): use symbol (e.g. `$`).
  *   - `symbol-narrow`: some countries have two symbols for their currency, one regular and one
  *     narrow (e.g. the canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`).
  *   - `string`: use this value instead of a code or a symbol.
  *   - boolean (deprecated from v5): `true` for symbol and false for `code`.
  *   If there is no narrow symbol for the chosen currency, the regular symbol will be used.
  * @param digitsInfo see {@link DecimalPipe} for more details.
  * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
  * default).
  */
  function (value, currencyCode, display, digitsInfo, locale) {
    if (display === void 0) {
      display = 'symbol';
    }

    if (isEmpty(value)) return null;
    locale = locale || this._locale;

    if (typeof display === 'boolean') {
      if (console && console.warn) {
        console.warn("Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".");
      }

      display = display ? 'symbol' : 'code';
    }

    var currency = currencyCode || 'USD';

    if (display !== 'code') {
      if (display === 'symbol' || display === 'symbol-narrow') {
        currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);
      } else {
        currency = display;
      }
    }

    try {
      var num = strToNumber(value);
      return formatCurrency(num, locale, currency, currencyCode, digitsInfo);
    } catch (error) {
      throw invalidPipeArgumentError(CurrencyPipe, error.message);
    }
  };

  CurrencyPipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'currency'
    }]
  }];
  /** @nocollapse */

  CurrencyPipe.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }];
  };

  return CurrencyPipe;
}();

exports.CurrencyPipe = CurrencyPipe;

function isEmpty(value) {
  return value == null || value === '' || value !== value;
}
/**
 * Transforms a string into a number (if needed)
 */


function strToNumber(value) {
  // Convert strings to numbers
  if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {
    return Number(value);
  }

  if (typeof value !== 'number') {
    throw new Error(value + " is not a number");
  }

  return value;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @ngModule CommonModule
 * @description
 *
 * Creates a new `Array` or `String` containing a subset (slice) of the elements.
 *
 * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`
 * and `String.prototype.slice()`.
 *
 * When operating on an `Array`, the returned `Array` is always a copy even when all
 * the elements are being returned.
 *
 * When operating on a blank value, the pipe returns the blank value.
 *
 * ### List Example
 *
 * This `ngFor` example:
 *
 * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}
 *
 * produces the following:
 *
 *     <li>b</li>
 *     <li>c</li>
 *
 * ## String Examples
 *
 * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}
 *
 *
 */


var SlicePipe =
/** @class */
function () {
  function SlicePipe() {}
  /**
   * @param value a list or a string to be sliced.
   * @param start the starting index of the subset to return:
   *   - **a positive integer**: return the item at `start` index and all items after
   *     in the list or string expression.
   *   - **a negative integer**: return the item at `start` index from the end and all items after
   *     in the list or string expression.
   *   - **if positive and greater than the size of the expression**: return an empty list or
   * string.
   *   - **if negative and greater than the size of the expression**: return entire list or string.
   * @param end the ending index of the subset to return:
   *   - **omitted**: return all items until the end.
   *   - **if positive**: return all items before `end` index of the list or string.
   *   - **if negative**: return all items before `end` index from the end of the list or string.
   */

  /**
     * @param value a list or a string to be sliced.
     * @param start the starting index of the subset to return:
     *   - **a positive integer**: return the item at `start` index and all items after
     *     in the list or string expression.
     *   - **a negative integer**: return the item at `start` index from the end and all items after
     *     in the list or string expression.
     *   - **if positive and greater than the size of the expression**: return an empty list or
     * string.
     *   - **if negative and greater than the size of the expression**: return entire list or string.
     * @param end the ending index of the subset to return:
     *   - **omitted**: return all items until the end.
     *   - **if positive**: return all items before `end` index of the list or string.
     *   - **if negative**: return all items before `end` index from the end of the list or string.
     */


  SlicePipe.prototype.transform =
  /**
  * @param value a list or a string to be sliced.
  * @param start the starting index of the subset to return:
  *   - **a positive integer**: return the item at `start` index and all items after
  *     in the list or string expression.
  *   - **a negative integer**: return the item at `start` index from the end and all items after
  *     in the list or string expression.
  *   - **if positive and greater than the size of the expression**: return an empty list or
  * string.
  *   - **if negative and greater than the size of the expression**: return entire list or string.
  * @param end the ending index of the subset to return:
  *   - **omitted**: return all items until the end.
  *   - **if positive**: return all items before `end` index of the list or string.
  *   - **if negative**: return all items before `end` index from the end of the list or string.
  */
  function (value, start, end) {
    if (value == null) return value;

    if (!this.supports(value)) {
      throw invalidPipeArgumentError(SlicePipe, value);
    }

    return value.slice(start, end);
  };

  SlicePipe.prototype.supports = function (obj) {
    return typeof obj === 'string' || Array.isArray(obj);
  };

  SlicePipe.decorators = [{
    type: _core.Pipe,
    args: [{
      name: 'slice',
      pure: false
    }]
  }];
  /** @nocollapse */

  SlicePipe.ctorParameters = function () {
    return [];
  };

  return SlicePipe;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A collection of Angular pipes that are likely to be used in each and every application.
 */


exports.SlicePipe = SlicePipe;
var COMMON_PIPES = [AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Note: This does not contain the location providers,
// as they need some platform specific implementations to work.

/**
 * The module that includes all the basic Angular directives like {@link NgIf}, {@link NgForOf}, ...
 *
 *
 */

exports.ɵangular_packages_common_common_f = COMMON_PIPES;

var CommonModule =
/** @class */
function () {
  function CommonModule() {}

  CommonModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [COMMON_DIRECTIVES, COMMON_PIPES],
      exports: [COMMON_DIRECTIVES, COMMON_PIPES],
      providers: [{
        provide: NgLocalization,
        useClass: NgLocaleLocalization
      }]
    }]
  }];
  /** @nocollapse */

  CommonModule.ctorParameters = function () {
    return [];
  };

  return CommonModule;
}();

exports.CommonModule = CommonModule;
var ɵ0 = getPluralCase;
/**
 * A module that contains the deprecated i18n pipes.
 *
 * @deprecated from v5
 */

var DeprecatedI18NPipesModule =
/** @class */
function () {
  function DeprecatedI18NPipesModule() {}

  DeprecatedI18NPipesModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [COMMON_DEPRECATED_I18N_PIPES],
      exports: [COMMON_DEPRECATED_I18N_PIPES],
      providers: [{
        provide: DEPRECATED_PLURAL_FN,
        useValue: ɵ0
      }]
    }]
  }];
  /** @nocollapse */

  DeprecatedI18NPipesModule.ctorParameters = function () {
    return [];
  };

  return DeprecatedI18NPipesModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A DI Token representing the main rendering context. In a browser this is the DOM Document.
 *
 * Note: Document might not be available in the Application Context when Application and Rendering
 * Contexts are not the same (e.g. when running the application into a Web Worker).
 *
 *
 */


exports.DeprecatedI18NPipesModule = DeprecatedI18NPipesModule;
var DOCUMENT = new _core.InjectionToken('DocumentToken');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

exports.DOCUMENT = DOCUMENT;
var PLATFORM_BROWSER_ID = 'browser';
exports.ɵPLATFORM_BROWSER_ID = PLATFORM_BROWSER_ID;
var PLATFORM_SERVER_ID = 'server';
exports.ɵPLATFORM_SERVER_ID = PLATFORM_SERVER_ID;
var PLATFORM_WORKER_APP_ID = 'browserWorkerApp';
exports.ɵPLATFORM_WORKER_APP_ID = PLATFORM_WORKER_APP_ID;
var PLATFORM_WORKER_UI_ID = 'browserWorkerUi';
/**
 * Returns whether a platform id represents a browser platform.
 * @experimental
 */

exports.ɵPLATFORM_WORKER_UI_ID = PLATFORM_WORKER_UI_ID;

function isPlatformBrowser(platformId) {
  return platformId === PLATFORM_BROWSER_ID;
}
/**
 * Returns whether a platform id represents a server platform.
 * @experimental
 */


function isPlatformServer(platformId) {
  return platformId === PLATFORM_SERVER_ID;
}
/**
 * Returns whether a platform id represents a web worker app platform.
 * @experimental
 */


function isPlatformWorkerApp(platformId) {
  return platformId === PLATFORM_WORKER_APP_ID;
}
/**
 * Returns whether a platform id represents a web worker UI platform.
 * @experimental
 */


function isPlatformWorkerUi(platformId) {
  return platformId === PLATFORM_WORKER_UI_ID;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 */


var VERSION = new _core.Version('6.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */

exports.VERSION = VERSION;

/***/ }),
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toInteger = toInteger;
exports.toString = toString;
exports.getValueInRange = getValueInRange;
exports.isString = isString;
exports.isNumber = isNumber;
exports.isInteger = isInteger;
exports.isDefined = isDefined;
exports.padNumber = padNumber;
exports.regExpEscape = regExpEscape;

function toInteger(value) {
  return parseInt("" + value, 10);
}

function toString(value) {
  return value !== undefined && value !== null ? "" + value : '';
}

function getValueInRange(value, max, min) {
  if (min === void 0) {
    min = 0;
  }

  return Math.max(Math.min(value, max), min);
}

function isString(value) {
  return typeof value === 'string';
}

function isNumber(value) {
  return !isNaN(toInteger(value));
}

function isInteger(value) {
  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
}

function isDefined(value) {
  return value !== undefined && value !== null;
}

function padNumber(value) {
  if (isNumber(value)) {
    return ("0" + value).slice(-2);
  } else {
    return '';
  }
}

function regExpEscape(text) {
  return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Subscription = void 0;

var _isArray = __webpack_require__(20);

var _isObject = __webpack_require__(235);

var _isFunction = __webpack_require__(80);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _UnsubscriptionError = __webpack_require__(232);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var Subscription =
/*@__PURE__*/
function () {
  function Subscription(unsubscribe) {
    this.closed = false;
    this._parent = null;
    this._parents = null;
    this._subscriptions = null;

    if (unsubscribe) {
      this._unsubscribe = unsubscribe;
    }
  }

  Subscription.prototype.unsubscribe = function () {
    var hasErrors = false;
    var errors;

    if (this.closed) {
      return;
    }

    var _a = this,
        _parent = _a._parent,
        _parents = _a._parents,
        _unsubscribe = _a._unsubscribe,
        _subscriptions = _a._subscriptions;

    this.closed = true;
    this._parent = null;
    this._parents = null;
    this._subscriptions = null;
    var index = -1;
    var len = _parents ? _parents.length : 0;

    while (_parent) {
      _parent.remove(this);

      _parent = ++index < len && _parents[index] || null;
    }

    if ((0, _isFunction.isFunction)(_unsubscribe)) {
      var trial = (0, _tryCatch.tryCatch)(_unsubscribe).call(this);

      if (trial === _errorObject.errorObject) {
        hasErrors = true;
        errors = errors || (_errorObject.errorObject.e instanceof _UnsubscriptionError.UnsubscriptionError ? flattenUnsubscriptionErrors(_errorObject.errorObject.e.errors) : [_errorObject.errorObject.e]);
      }
    }

    if ((0, _isArray.isArray)(_subscriptions)) {
      index = -1;
      len = _subscriptions.length;

      while (++index < len) {
        var sub = _subscriptions[index];

        if ((0, _isObject.isObject)(sub)) {
          var trial = (0, _tryCatch.tryCatch)(sub.unsubscribe).call(sub);

          if (trial === _errorObject.errorObject) {
            hasErrors = true;
            errors = errors || [];
            var err = _errorObject.errorObject.e;

            if (err instanceof _UnsubscriptionError.UnsubscriptionError) {
              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));
            } else {
              errors.push(err);
            }
          }
        }
      }
    }

    if (hasErrors) {
      throw new _UnsubscriptionError.UnsubscriptionError(errors);
    }
  };

  Subscription.prototype.add = function (teardown) {
    if (!teardown || teardown === Subscription.EMPTY) {
      return Subscription.EMPTY;
    }

    if (teardown === this) {
      return this;
    }

    var subscription = teardown;

    switch (_typeof(teardown)) {
      case 'function':
        subscription = new Subscription(teardown);

      case 'object':
        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {
          return subscription;
        } else if (this.closed) {
          subscription.unsubscribe();
          return subscription;
        } else if (typeof subscription._addParent !== 'function') {
          var tmp = subscription;
          subscription = new Subscription();
          subscription._subscriptions = [tmp];
        }

        break;

      default:
        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
    }

    var subscriptions = this._subscriptions || (this._subscriptions = []);
    subscriptions.push(subscription);

    subscription._addParent(this);

    return subscription;
  };

  Subscription.prototype.remove = function (subscription) {
    var subscriptions = this._subscriptions;

    if (subscriptions) {
      var subscriptionIndex = subscriptions.indexOf(subscription);

      if (subscriptionIndex !== -1) {
        subscriptions.splice(subscriptionIndex, 1);
      }
    }
  };

  Subscription.prototype._addParent = function (parent) {
    var _a = this,
        _parent = _a._parent,
        _parents = _a._parents;

    if (!_parent || _parent === parent) {
      this._parent = parent;
    } else if (!_parents) {
      this._parents = [parent];
    } else if (_parents.indexOf(parent) === -1) {
      _parents.push(parent);
    }
  };

  Subscription.EMPTY = function (empty) {
    empty.closed = true;
    return empty;
  }(new Subscription());

  return Subscription;
}();

exports.Subscription = Subscription;

function flattenUnsubscriptionErrors(errors) {
  return errors.reduce(function (errs, err) {
    return errs.concat(err instanceof _UnsubscriptionError.UnsubscriptionError ? err.errors : err);
  }, []);
}

/***/ }),
/* 16 */,
/* 17 */,
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnonymousSubject = exports.Subject = exports.SubjectSubscriber = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Observable = __webpack_require__(5);

var _Subscriber = __webpack_require__(3);

var _Subscription = __webpack_require__(15);

var _ObjectUnsubscribedError = __webpack_require__(100);

var _SubjectSubscription = __webpack_require__(214);

var _rxSubscriber = __webpack_require__(138);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */
var SubjectSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SubjectSubscriber, _super);

  function SubjectSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    return _this;
  }

  return SubjectSubscriber;
}(_Subscriber.Subscriber);

exports.SubjectSubscriber = SubjectSubscriber;

var Subject =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(Subject, _super);

  function Subject() {
    var _this = _super.call(this) || this;

    _this.observers = [];
    _this.closed = false;
    _this.isStopped = false;
    _this.hasError = false;
    _this.thrownError = null;
    return _this;
  }

  Subject.prototype[_rxSubscriber.rxSubscriber] = function () {
    return new SubjectSubscriber(this);
  };

  Subject.prototype.lift = function (operator) {
    var subject = new AnonymousSubject(this, this);
    subject.operator = operator;
    return subject;
  };

  Subject.prototype.next = function (value) {
    if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    }

    if (!this.isStopped) {
      var observers = this.observers;
      var len = observers.length;
      var copy = observers.slice();

      for (var i = 0; i < len; i++) {
        copy[i].next(value);
      }
    }
  };

  Subject.prototype.error = function (err) {
    if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    }

    this.hasError = true;
    this.thrownError = err;
    this.isStopped = true;
    var observers = this.observers;
    var len = observers.length;
    var copy = observers.slice();

    for (var i = 0; i < len; i++) {
      copy[i].error(err);
    }

    this.observers.length = 0;
  };

  Subject.prototype.complete = function () {
    if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    }

    this.isStopped = true;
    var observers = this.observers;
    var len = observers.length;
    var copy = observers.slice();

    for (var i = 0; i < len; i++) {
      copy[i].complete();
    }

    this.observers.length = 0;
  };

  Subject.prototype.unsubscribe = function () {
    this.isStopped = true;
    this.closed = true;
    this.observers = null;
  };

  Subject.prototype._trySubscribe = function (subscriber) {
    if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    } else {
      return _super.prototype._trySubscribe.call(this, subscriber);
    }
  };

  Subject.prototype._subscribe = function (subscriber) {
    if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    } else if (this.hasError) {
      subscriber.error(this.thrownError);
      return _Subscription.Subscription.EMPTY;
    } else if (this.isStopped) {
      subscriber.complete();
      return _Subscription.Subscription.EMPTY;
    } else {
      this.observers.push(subscriber);
      return new _SubjectSubscription.SubjectSubscription(this, subscriber);
    }
  };

  Subject.prototype.asObservable = function () {
    var observable = new _Observable.Observable();
    observable.source = this;
    return observable;
  };

  Subject.create = function (destination, source) {
    return new AnonymousSubject(destination, source);
  };

  return Subject;
}(_Observable.Observable);

exports.Subject = Subject;

var AnonymousSubject =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AnonymousSubject, _super);

  function AnonymousSubject(destination, source) {
    var _this = _super.call(this) || this;

    _this.destination = destination;
    _this.source = source;
    return _this;
  }

  AnonymousSubject.prototype.next = function (value) {
    var destination = this.destination;

    if (destination && destination.next) {
      destination.next(value);
    }
  };

  AnonymousSubject.prototype.error = function (err) {
    var destination = this.destination;

    if (destination && destination.error) {
      this.destination.error(err);
    }
  };

  AnonymousSubject.prototype.complete = function () {
    var destination = this.destination;

    if (destination && destination.complete) {
      this.destination.complete();
    }
  };

  AnonymousSubject.prototype._subscribe = function (subscriber) {
    var source = this.source;

    if (source) {
      return this.source.subscribe(subscriber);
    } else {
      return _Subscription.Subscription.EMPTY;
    }
  };

  return AnonymousSubject;
}(Subject);

exports.AnonymousSubject = AnonymousSubject;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.async = void 0;

var _AsyncAction = __webpack_require__(75);

var _AsyncScheduler = __webpack_require__(76);

/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */
var async =
/*@__PURE__*/
new _AsyncScheduler.AsyncScheduler(_AsyncAction.AsyncAction);
exports.async = async;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isArray = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = Array.isArray || function (x) {
  return x && typeof x.length === 'number';
};

exports.isArray = isArray;

/***/ }),
/* 21 */,
/* 22 */,
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.empty = empty;
exports.emptyScheduled = emptyScheduled;
exports.EMPTY = void 0;

var _Observable = __webpack_require__(5);

/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */
var EMPTY =
/*@__PURE__*/
new _Observable.Observable(function (subscriber) {
  return subscriber.complete();
});
exports.EMPTY = EMPTY;

function empty(scheduler) {
  return scheduler ? emptyScheduled(scheduler) : EMPTY;
}

function emptyScheduled(scheduler) {
  return new _Observable.Observable(function (subscriber) {
    return scheduler.schedule(function () {
      return subscriber.complete();
    });
  });
}

/***/ }),
/* 24 */,
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = map;
exports.MapOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function map(project, thisArg) {
  return function mapOperation(source) {
    if (typeof project !== 'function') {
      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
    }

    return source.lift(new MapOperator(project, thisArg));
  };
}

var MapOperator =
/*@__PURE__*/
function () {
  function MapOperator(project, thisArg) {
    this.project = project;
    this.thisArg = thisArg;
  }

  MapOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
  };

  return MapOperator;
}();

exports.MapOperator = MapOperator;

var MapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(MapSubscriber, _super);

  function MapSubscriber(destination, project, thisArg) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.count = 0;
    _this.thisArg = thisArg || _this;
    return _this;
  }

  MapSubscriber.prototype._next = function (value) {
    var result;

    try {
      result = this.project.call(this.thisArg, value, this.count++);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return MapSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.errorObject = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var errorObject = {
  e: {}
};
exports.errorObject = errorObject;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isScheduler = isScheduler;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
  return value && typeof value.schedule === 'function';
}

/***/ }),
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Observable", {
  enumerable: true,
  get: function get() {
    return _Observable.Observable;
  }
});
Object.defineProperty(exports, "ConnectableObservable", {
  enumerable: true,
  get: function get() {
    return _ConnectableObservable.ConnectableObservable;
  }
});
Object.defineProperty(exports, "GroupedObservable", {
  enumerable: true,
  get: function get() {
    return _groupBy.GroupedObservable;
  }
});
Object.defineProperty(exports, "observable", {
  enumerable: true,
  get: function get() {
    return _observable.observable;
  }
});
Object.defineProperty(exports, "Subject", {
  enumerable: true,
  get: function get() {
    return _Subject.Subject;
  }
});
Object.defineProperty(exports, "BehaviorSubject", {
  enumerable: true,
  get: function get() {
    return _BehaviorSubject.BehaviorSubject;
  }
});
Object.defineProperty(exports, "ReplaySubject", {
  enumerable: true,
  get: function get() {
    return _ReplaySubject.ReplaySubject;
  }
});
Object.defineProperty(exports, "AsyncSubject", {
  enumerable: true,
  get: function get() {
    return _AsyncSubject.AsyncSubject;
  }
});
Object.defineProperty(exports, "asapScheduler", {
  enumerable: true,
  get: function get() {
    return _asap.asap;
  }
});
Object.defineProperty(exports, "asyncScheduler", {
  enumerable: true,
  get: function get() {
    return _async.async;
  }
});
Object.defineProperty(exports, "queueScheduler", {
  enumerable: true,
  get: function get() {
    return _queue.queue;
  }
});
Object.defineProperty(exports, "animationFrameScheduler", {
  enumerable: true,
  get: function get() {
    return _animationFrame.animationFrame;
  }
});
Object.defineProperty(exports, "VirtualTimeScheduler", {
  enumerable: true,
  get: function get() {
    return _VirtualTimeScheduler.VirtualTimeScheduler;
  }
});
Object.defineProperty(exports, "VirtualAction", {
  enumerable: true,
  get: function get() {
    return _VirtualTimeScheduler.VirtualAction;
  }
});
Object.defineProperty(exports, "Scheduler", {
  enumerable: true,
  get: function get() {
    return _Scheduler.Scheduler;
  }
});
Object.defineProperty(exports, "Subscription", {
  enumerable: true,
  get: function get() {
    return _Subscription.Subscription;
  }
});
Object.defineProperty(exports, "Subscriber", {
  enumerable: true,
  get: function get() {
    return _Subscriber.Subscriber;
  }
});
Object.defineProperty(exports, "Notification", {
  enumerable: true,
  get: function get() {
    return _Notification.Notification;
  }
});
Object.defineProperty(exports, "pipe", {
  enumerable: true,
  get: function get() {
    return _pipe.pipe;
  }
});
Object.defineProperty(exports, "noop", {
  enumerable: true,
  get: function get() {
    return _noop.noop;
  }
});
Object.defineProperty(exports, "identity", {
  enumerable: true,
  get: function get() {
    return _identity.identity;
  }
});
Object.defineProperty(exports, "isObservable", {
  enumerable: true,
  get: function get() {
    return _isObservable.isObservable;
  }
});
Object.defineProperty(exports, "ArgumentOutOfRangeError", {
  enumerable: true,
  get: function get() {
    return _ArgumentOutOfRangeError.ArgumentOutOfRangeError;
  }
});
Object.defineProperty(exports, "EmptyError", {
  enumerable: true,
  get: function get() {
    return _EmptyError.EmptyError;
  }
});
Object.defineProperty(exports, "ObjectUnsubscribedError", {
  enumerable: true,
  get: function get() {
    return _ObjectUnsubscribedError.ObjectUnsubscribedError;
  }
});
Object.defineProperty(exports, "UnsubscriptionError", {
  enumerable: true,
  get: function get() {
    return _UnsubscriptionError.UnsubscriptionError;
  }
});
Object.defineProperty(exports, "TimeoutError", {
  enumerable: true,
  get: function get() {
    return _TimeoutError.TimeoutError;
  }
});
Object.defineProperty(exports, "bindCallback", {
  enumerable: true,
  get: function get() {
    return _bindCallback.bindCallback;
  }
});
Object.defineProperty(exports, "bindNodeCallback", {
  enumerable: true,
  get: function get() {
    return _bindNodeCallback.bindNodeCallback;
  }
});
Object.defineProperty(exports, "combineLatest", {
  enumerable: true,
  get: function get() {
    return _combineLatest.combineLatest;
  }
});
Object.defineProperty(exports, "concat", {
  enumerable: true,
  get: function get() {
    return _concat.concat;
  }
});
Object.defineProperty(exports, "defer", {
  enumerable: true,
  get: function get() {
    return _defer.defer;
  }
});
Object.defineProperty(exports, "empty", {
  enumerable: true,
  get: function get() {
    return _empty.empty;
  }
});
Object.defineProperty(exports, "EMPTY", {
  enumerable: true,
  get: function get() {
    return _empty.EMPTY;
  }
});
Object.defineProperty(exports, "forkJoin", {
  enumerable: true,
  get: function get() {
    return _forkJoin.forkJoin;
  }
});
Object.defineProperty(exports, "from", {
  enumerable: true,
  get: function get() {
    return _from.from;
  }
});
Object.defineProperty(exports, "fromEvent", {
  enumerable: true,
  get: function get() {
    return _fromEvent.fromEvent;
  }
});
Object.defineProperty(exports, "fromEventPattern", {
  enumerable: true,
  get: function get() {
    return _fromEventPattern.fromEventPattern;
  }
});
Object.defineProperty(exports, "generate", {
  enumerable: true,
  get: function get() {
    return _generate.generate;
  }
});
Object.defineProperty(exports, "iif", {
  enumerable: true,
  get: function get() {
    return _iif.iif;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function get() {
    return _interval.interval;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function get() {
    return _merge.merge;
  }
});
Object.defineProperty(exports, "never", {
  enumerable: true,
  get: function get() {
    return _never.never;
  }
});
Object.defineProperty(exports, "NEVER", {
  enumerable: true,
  get: function get() {
    return _never.NEVER;
  }
});
Object.defineProperty(exports, "of", {
  enumerable: true,
  get: function get() {
    return _of.of;
  }
});
Object.defineProperty(exports, "onErrorResumeNext", {
  enumerable: true,
  get: function get() {
    return _onErrorResumeNext.onErrorResumeNext;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function get() {
    return _pairs.pairs;
  }
});
Object.defineProperty(exports, "race", {
  enumerable: true,
  get: function get() {
    return _race.race;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function get() {
    return _range.range;
  }
});
Object.defineProperty(exports, "throwError", {
  enumerable: true,
  get: function get() {
    return _throwError.throwError;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function get() {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "using", {
  enumerable: true,
  get: function get() {
    return _using.using;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function get() {
    return _zip.zip;
  }
});
Object.defineProperty(exports, "config", {
  enumerable: true,
  get: function get() {
    return _config.config;
  }
});

var _Observable = __webpack_require__(5);

var _ConnectableObservable = __webpack_require__(215);

var _groupBy = __webpack_require__(224);

var _observable = __webpack_require__(61);

var _Subject = __webpack_require__(18);

var _BehaviorSubject = __webpack_require__(211);

var _ReplaySubject = __webpack_require__(125);

var _AsyncSubject = __webpack_require__(93);

var _asap = __webpack_require__(229);

var _async = __webpack_require__(19);

var _queue = __webpack_require__(230);

var _animationFrame = __webpack_require__(611);

var _VirtualTimeScheduler = __webpack_require__(610);

var _Scheduler = __webpack_require__(213);

var _Subscription = __webpack_require__(15);

var _Subscriber = __webpack_require__(3);

var _Notification = __webpack_require__(94);

var _pipe = __webpack_require__(140);

var _noop = __webpack_require__(102);

var _identity = __webpack_require__(62);

var _isObservable = __webpack_require__(615);

var _ArgumentOutOfRangeError = __webpack_require__(78);

var _EmptyError = __webpack_require__(79);

var _ObjectUnsubscribedError = __webpack_require__(100);

var _UnsubscriptionError = __webpack_require__(232);

var _TimeoutError = __webpack_require__(231);

var _bindCallback = __webpack_require__(507);

var _bindNodeCallback = __webpack_require__(508);

var _combineLatest = __webpack_require__(126);

var _concat = __webpack_require__(96);

var _defer = __webpack_require__(127);

var _empty = __webpack_require__(23);

var _forkJoin = __webpack_require__(509);

var _from = __webpack_require__(38);

var _fromEvent = __webpack_require__(510);

var _fromEventPattern = __webpack_require__(511);

var _generate = __webpack_require__(515);

var _iif = __webpack_require__(516);

var _interval = __webpack_require__(517);

var _merge = __webpack_require__(216);

var _never = __webpack_require__(518);

var _of = __webpack_require__(128);

var _onErrorResumeNext = __webpack_require__(519);

var _pairs = __webpack_require__(520);

var _race = __webpack_require__(217);

var _range = __webpack_require__(521);

var _throwError = __webpack_require__(130);

var _timer = __webpack_require__(218);

var _using = __webpack_require__(522);

var _zip = __webpack_require__(131);

var _config = __webpack_require__(95);

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tryCatch = tryCatch;

var _errorObject = __webpack_require__(26);

/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */
var tryCatchTarget;

function tryCatcher() {
  try {
    return tryCatchTarget.apply(this, arguments);
  } catch (e) {
    _errorObject.errorObject.e = e;
    return _errorObject.errorObject;
  }
}

function tryCatch(fn) {
  tryCatchTarget = fn;
  return tryCatcher;
}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "audit", {
  enumerable: true,
  get: function get() {
    return _audit.audit;
  }
});
Object.defineProperty(exports, "auditTime", {
  enumerable: true,
  get: function get() {
    return _auditTime.auditTime;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function get() {
    return _buffer.buffer;
  }
});
Object.defineProperty(exports, "bufferCount", {
  enumerable: true,
  get: function get() {
    return _bufferCount.bufferCount;
  }
});
Object.defineProperty(exports, "bufferTime", {
  enumerable: true,
  get: function get() {
    return _bufferTime.bufferTime;
  }
});
Object.defineProperty(exports, "bufferToggle", {
  enumerable: true,
  get: function get() {
    return _bufferToggle.bufferToggle;
  }
});
Object.defineProperty(exports, "bufferWhen", {
  enumerable: true,
  get: function get() {
    return _bufferWhen.bufferWhen;
  }
});
Object.defineProperty(exports, "catchError", {
  enumerable: true,
  get: function get() {
    return _catchError.catchError;
  }
});
Object.defineProperty(exports, "combineAll", {
  enumerable: true,
  get: function get() {
    return _combineAll.combineAll;
  }
});
Object.defineProperty(exports, "combineLatest", {
  enumerable: true,
  get: function get() {
    return _combineLatest.combineLatest;
  }
});
Object.defineProperty(exports, "concat", {
  enumerable: true,
  get: function get() {
    return _concat.concat;
  }
});
Object.defineProperty(exports, "concatAll", {
  enumerable: true,
  get: function get() {
    return _concatAll.concatAll;
  }
});
Object.defineProperty(exports, "concatMap", {
  enumerable: true,
  get: function get() {
    return _concatMap.concatMap;
  }
});
Object.defineProperty(exports, "concatMapTo", {
  enumerable: true,
  get: function get() {
    return _concatMapTo.concatMapTo;
  }
});
Object.defineProperty(exports, "count", {
  enumerable: true,
  get: function get() {
    return _count.count;
  }
});
Object.defineProperty(exports, "debounce", {
  enumerable: true,
  get: function get() {
    return _debounce.debounce;
  }
});
Object.defineProperty(exports, "debounceTime", {
  enumerable: true,
  get: function get() {
    return _debounceTime.debounceTime;
  }
});
Object.defineProperty(exports, "defaultIfEmpty", {
  enumerable: true,
  get: function get() {
    return _defaultIfEmpty.defaultIfEmpty;
  }
});
Object.defineProperty(exports, "delay", {
  enumerable: true,
  get: function get() {
    return _delay.delay;
  }
});
Object.defineProperty(exports, "delayWhen", {
  enumerable: true,
  get: function get() {
    return _delayWhen.delayWhen;
  }
});
Object.defineProperty(exports, "dematerialize", {
  enumerable: true,
  get: function get() {
    return _dematerialize.dematerialize;
  }
});
Object.defineProperty(exports, "distinct", {
  enumerable: true,
  get: function get() {
    return _distinct.distinct;
  }
});
Object.defineProperty(exports, "distinctUntilChanged", {
  enumerable: true,
  get: function get() {
    return _distinctUntilChanged.distinctUntilChanged;
  }
});
Object.defineProperty(exports, "distinctUntilKeyChanged", {
  enumerable: true,
  get: function get() {
    return _distinctUntilKeyChanged.distinctUntilKeyChanged;
  }
});
Object.defineProperty(exports, "elementAt", {
  enumerable: true,
  get: function get() {
    return _elementAt.elementAt;
  }
});
Object.defineProperty(exports, "endWith", {
  enumerable: true,
  get: function get() {
    return _endWith.endWith;
  }
});
Object.defineProperty(exports, "every", {
  enumerable: true,
  get: function get() {
    return _every.every;
  }
});
Object.defineProperty(exports, "exhaust", {
  enumerable: true,
  get: function get() {
    return _exhaust.exhaust;
  }
});
Object.defineProperty(exports, "exhaustMap", {
  enumerable: true,
  get: function get() {
    return _exhaustMap.exhaustMap;
  }
});
Object.defineProperty(exports, "expand", {
  enumerable: true,
  get: function get() {
    return _expand.expand;
  }
});
Object.defineProperty(exports, "filter", {
  enumerable: true,
  get: function get() {
    return _filter.filter;
  }
});
Object.defineProperty(exports, "finalize", {
  enumerable: true,
  get: function get() {
    return _finalize.finalize;
  }
});
Object.defineProperty(exports, "find", {
  enumerable: true,
  get: function get() {
    return _find.find;
  }
});
Object.defineProperty(exports, "findIndex", {
  enumerable: true,
  get: function get() {
    return _findIndex.findIndex;
  }
});
Object.defineProperty(exports, "first", {
  enumerable: true,
  get: function get() {
    return _first.first;
  }
});
Object.defineProperty(exports, "groupBy", {
  enumerable: true,
  get: function get() {
    return _groupBy.groupBy;
  }
});
Object.defineProperty(exports, "ignoreElements", {
  enumerable: true,
  get: function get() {
    return _ignoreElements.ignoreElements;
  }
});
Object.defineProperty(exports, "isEmpty", {
  enumerable: true,
  get: function get() {
    return _isEmpty.isEmpty;
  }
});
Object.defineProperty(exports, "last", {
  enumerable: true,
  get: function get() {
    return _last.last;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function get() {
    return _map.map;
  }
});
Object.defineProperty(exports, "mapTo", {
  enumerable: true,
  get: function get() {
    return _mapTo.mapTo;
  }
});
Object.defineProperty(exports, "materialize", {
  enumerable: true,
  get: function get() {
    return _materialize.materialize;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function get() {
    return _max.max;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function get() {
    return _merge.merge;
  }
});
Object.defineProperty(exports, "mergeAll", {
  enumerable: true,
  get: function get() {
    return _mergeAll.mergeAll;
  }
});
Object.defineProperty(exports, "mergeMap", {
  enumerable: true,
  get: function get() {
    return _mergeMap.mergeMap;
  }
});
Object.defineProperty(exports, "flatMap", {
  enumerable: true,
  get: function get() {
    return _mergeMap.mergeMap;
  }
});
Object.defineProperty(exports, "mergeMapTo", {
  enumerable: true,
  get: function get() {
    return _mergeMapTo.mergeMapTo;
  }
});
Object.defineProperty(exports, "mergeScan", {
  enumerable: true,
  get: function get() {
    return _mergeScan.mergeScan;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function get() {
    return _min.min;
  }
});
Object.defineProperty(exports, "multicast", {
  enumerable: true,
  get: function get() {
    return _multicast.multicast;
  }
});
Object.defineProperty(exports, "observeOn", {
  enumerable: true,
  get: function get() {
    return _observeOn.observeOn;
  }
});
Object.defineProperty(exports, "onErrorResumeNext", {
  enumerable: true,
  get: function get() {
    return _onErrorResumeNext.onErrorResumeNext;
  }
});
Object.defineProperty(exports, "pairwise", {
  enumerable: true,
  get: function get() {
    return _pairwise.pairwise;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function get() {
    return _partition.partition;
  }
});
Object.defineProperty(exports, "pluck", {
  enumerable: true,
  get: function get() {
    return _pluck.pluck;
  }
});
Object.defineProperty(exports, "publish", {
  enumerable: true,
  get: function get() {
    return _publish.publish;
  }
});
Object.defineProperty(exports, "publishBehavior", {
  enumerable: true,
  get: function get() {
    return _publishBehavior.publishBehavior;
  }
});
Object.defineProperty(exports, "publishLast", {
  enumerable: true,
  get: function get() {
    return _publishLast.publishLast;
  }
});
Object.defineProperty(exports, "publishReplay", {
  enumerable: true,
  get: function get() {
    return _publishReplay.publishReplay;
  }
});
Object.defineProperty(exports, "race", {
  enumerable: true,
  get: function get() {
    return _race.race;
  }
});
Object.defineProperty(exports, "reduce", {
  enumerable: true,
  get: function get() {
    return _reduce.reduce;
  }
});
Object.defineProperty(exports, "repeat", {
  enumerable: true,
  get: function get() {
    return _repeat.repeat;
  }
});
Object.defineProperty(exports, "repeatWhen", {
  enumerable: true,
  get: function get() {
    return _repeatWhen.repeatWhen;
  }
});
Object.defineProperty(exports, "retry", {
  enumerable: true,
  get: function get() {
    return _retry.retry;
  }
});
Object.defineProperty(exports, "retryWhen", {
  enumerable: true,
  get: function get() {
    return _retryWhen.retryWhen;
  }
});
Object.defineProperty(exports, "refCount", {
  enumerable: true,
  get: function get() {
    return _refCount.refCount;
  }
});
Object.defineProperty(exports, "sample", {
  enumerable: true,
  get: function get() {
    return _sample.sample;
  }
});
Object.defineProperty(exports, "sampleTime", {
  enumerable: true,
  get: function get() {
    return _sampleTime.sampleTime;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function get() {
    return _scan.scan;
  }
});
Object.defineProperty(exports, "sequenceEqual", {
  enumerable: true,
  get: function get() {
    return _sequenceEqual.sequenceEqual;
  }
});
Object.defineProperty(exports, "share", {
  enumerable: true,
  get: function get() {
    return _share.share;
  }
});
Object.defineProperty(exports, "shareReplay", {
  enumerable: true,
  get: function get() {
    return _shareReplay.shareReplay;
  }
});
Object.defineProperty(exports, "single", {
  enumerable: true,
  get: function get() {
    return _single.single;
  }
});
Object.defineProperty(exports, "skip", {
  enumerable: true,
  get: function get() {
    return _skip.skip;
  }
});
Object.defineProperty(exports, "skipLast", {
  enumerable: true,
  get: function get() {
    return _skipLast.skipLast;
  }
});
Object.defineProperty(exports, "skipUntil", {
  enumerable: true,
  get: function get() {
    return _skipUntil.skipUntil;
  }
});
Object.defineProperty(exports, "skipWhile", {
  enumerable: true,
  get: function get() {
    return _skipWhile.skipWhile;
  }
});
Object.defineProperty(exports, "startWith", {
  enumerable: true,
  get: function get() {
    return _startWith.startWith;
  }
});
Object.defineProperty(exports, "subscribeOn", {
  enumerable: true,
  get: function get() {
    return _subscribeOn.subscribeOn;
  }
});
Object.defineProperty(exports, "switchAll", {
  enumerable: true,
  get: function get() {
    return _switchAll.switchAll;
  }
});
Object.defineProperty(exports, "switchMap", {
  enumerable: true,
  get: function get() {
    return _switchMap.switchMap;
  }
});
Object.defineProperty(exports, "switchMapTo", {
  enumerable: true,
  get: function get() {
    return _switchMapTo.switchMapTo;
  }
});
Object.defineProperty(exports, "take", {
  enumerable: true,
  get: function get() {
    return _take.take;
  }
});
Object.defineProperty(exports, "takeLast", {
  enumerable: true,
  get: function get() {
    return _takeLast.takeLast;
  }
});
Object.defineProperty(exports, "takeUntil", {
  enumerable: true,
  get: function get() {
    return _takeUntil.takeUntil;
  }
});
Object.defineProperty(exports, "takeWhile", {
  enumerable: true,
  get: function get() {
    return _takeWhile.takeWhile;
  }
});
Object.defineProperty(exports, "tap", {
  enumerable: true,
  get: function get() {
    return _tap.tap;
  }
});
Object.defineProperty(exports, "throttle", {
  enumerable: true,
  get: function get() {
    return _throttle.throttle;
  }
});
Object.defineProperty(exports, "throttleTime", {
  enumerable: true,
  get: function get() {
    return _throttleTime.throttleTime;
  }
});
Object.defineProperty(exports, "throwIfEmpty", {
  enumerable: true,
  get: function get() {
    return _throwIfEmpty.throwIfEmpty;
  }
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function get() {
    return _timeInterval.timeInterval;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function get() {
    return _timeout.timeout;
  }
});
Object.defineProperty(exports, "timeoutWith", {
  enumerable: true,
  get: function get() {
    return _timeoutWith.timeoutWith;
  }
});
Object.defineProperty(exports, "timestamp", {
  enumerable: true,
  get: function get() {
    return _timestamp.timestamp;
  }
});
Object.defineProperty(exports, "toArray", {
  enumerable: true,
  get: function get() {
    return _toArray.toArray;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function get() {
    return _window.window;
  }
});
Object.defineProperty(exports, "windowCount", {
  enumerable: true,
  get: function get() {
    return _windowCount.windowCount;
  }
});
Object.defineProperty(exports, "windowTime", {
  enumerable: true,
  get: function get() {
    return _windowTime.windowTime;
  }
});
Object.defineProperty(exports, "windowToggle", {
  enumerable: true,
  get: function get() {
    return _windowToggle.windowToggle;
  }
});
Object.defineProperty(exports, "windowWhen", {
  enumerable: true,
  get: function get() {
    return _windowWhen.windowWhen;
  }
});
Object.defineProperty(exports, "withLatestFrom", {
  enumerable: true,
  get: function get() {
    return _withLatestFrom.withLatestFrom;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function get() {
    return _zip.zip;
  }
});
Object.defineProperty(exports, "zipAll", {
  enumerable: true,
  get: function get() {
    return _zipAll.zipAll;
  }
});

var _audit = __webpack_require__(219);

var _auditTime = __webpack_require__(523);

var _buffer = __webpack_require__(524);

var _bufferCount = __webpack_require__(525);

var _bufferTime = __webpack_require__(526);

var _bufferToggle = __webpack_require__(527);

var _bufferWhen = __webpack_require__(528);

var _catchError = __webpack_require__(529);

var _combineAll = __webpack_require__(530);

var _combineLatest = __webpack_require__(531);

var _concat = __webpack_require__(532);

var _concatAll = __webpack_require__(220);

var _concatMap = __webpack_require__(221);

var _concatMapTo = __webpack_require__(533);

var _count = __webpack_require__(534);

var _debounce = __webpack_require__(535);

var _debounceTime = __webpack_require__(536);

var _defaultIfEmpty = __webpack_require__(73);

var _delay = __webpack_require__(537);

var _delayWhen = __webpack_require__(538);

var _dematerialize = __webpack_require__(539);

var _distinct = __webpack_require__(540);

var _distinctUntilChanged = __webpack_require__(222);

var _distinctUntilKeyChanged = __webpack_require__(541);

var _elementAt = __webpack_require__(542);

var _endWith = __webpack_require__(543);

var _every = __webpack_require__(544);

var _exhaust = __webpack_require__(545);

var _exhaustMap = __webpack_require__(546);

var _expand = __webpack_require__(547);

var _filter = __webpack_require__(74);

var _finalize = __webpack_require__(548);

var _find = __webpack_require__(223);

var _findIndex = __webpack_require__(549);

var _first = __webpack_require__(550);

var _groupBy = __webpack_require__(224);

var _ignoreElements = __webpack_require__(551);

var _isEmpty = __webpack_require__(552);

var _last = __webpack_require__(553);

var _map = __webpack_require__(25);

var _mapTo = __webpack_require__(554);

var _materialize = __webpack_require__(555);

var _max = __webpack_require__(556);

var _merge = __webpack_require__(557);

var _mergeAll = __webpack_require__(132);

var _mergeMap = __webpack_require__(97);

var _mergeMapTo = __webpack_require__(558);

var _mergeScan = __webpack_require__(559);

var _min = __webpack_require__(560);

var _multicast = __webpack_require__(60);

var _observeOn = __webpack_require__(225);

var _onErrorResumeNext = __webpack_require__(561);

var _pairwise = __webpack_require__(562);

var _partition = __webpack_require__(563);

var _pluck = __webpack_require__(564);

var _publish = __webpack_require__(565);

var _publishBehavior = __webpack_require__(566);

var _publishLast = __webpack_require__(567);

var _publishReplay = __webpack_require__(568);

var _race = __webpack_require__(569);

var _reduce = __webpack_require__(98);

var _repeat = __webpack_require__(570);

var _repeatWhen = __webpack_require__(571);

var _retry = __webpack_require__(572);

var _retryWhen = __webpack_require__(573);

var _refCount = __webpack_require__(133);

var _sample = __webpack_require__(574);

var _sampleTime = __webpack_require__(575);

var _scan = __webpack_require__(134);

var _sequenceEqual = __webpack_require__(576);

var _share = __webpack_require__(577);

var _shareReplay = __webpack_require__(578);

var _single = __webpack_require__(579);

var _skip = __webpack_require__(580);

var _skipLast = __webpack_require__(581);

var _skipUntil = __webpack_require__(582);

var _skipWhile = __webpack_require__(583);

var _startWith = __webpack_require__(584);

var _subscribeOn = __webpack_require__(585);

var _switchAll = __webpack_require__(586);

var _switchMap = __webpack_require__(135);

var _switchMapTo = __webpack_require__(587);

var _take = __webpack_require__(136);

var _takeLast = __webpack_require__(137);

var _takeUntil = __webpack_require__(588);

var _takeWhile = __webpack_require__(589);

var _tap = __webpack_require__(226);

var _throttle = __webpack_require__(227);

var _throttleTime = __webpack_require__(590);

var _throwIfEmpty = __webpack_require__(99);

var _timeInterval = __webpack_require__(591);

var _timeout = __webpack_require__(592);

var _timeoutWith = __webpack_require__(228);

var _timestamp = __webpack_require__(593);

var _toArray = __webpack_require__(594);

var _window = __webpack_require__(595);

var _windowCount = __webpack_require__(596);

var _windowTime = __webpack_require__(597);

var _windowToggle = __webpack_require__(598);

var _windowWhen = __webpack_require__(599);

var _withLatestFrom = __webpack_require__(600);

var _zip = __webpack_require__(601);

var _zipAll = __webpack_require__(602);

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReactiveFormsModule = exports.FormsModule = exports.VERSION = exports.Validators = exports.NG_VALIDATORS = exports.NG_ASYNC_VALIDATORS = exports.FormGroup = exports.FormControl = exports.FormArray = exports.AbstractControl = exports.FormBuilder = exports.RequiredValidator = exports.PatternValidator = exports.MinLengthValidator = exports.MaxLengthValidator = exports.EmailValidator = exports.CheckboxRequiredValidator = exports.SelectMultipleControlValueAccessor = exports.SelectControlValueAccessor = exports.NgSelectOption = exports.FormGroupName = exports.FormArrayName = exports.FormGroupDirective = exports.FormControlName = exports.FormControlDirective = exports.RadioControlValueAccessor = exports.NgModelGroup = exports.NgModel = exports.NgForm = exports.NgControlStatusGroup = exports.NgControlStatus = exports.NgControl = exports.DefaultValueAccessor = exports.COMPOSITION_BUFFER_MODE = exports.NG_VALUE_ACCESSOR = exports.ControlContainer = exports.CheckboxControlValueAccessor = exports.AbstractFormGroupDirective = exports.AbstractControlDirective = exports.ɵangular_packages_forms_forms_s = exports.ɵangular_packages_forms_forms_x = exports.ɵangular_packages_forms_forms_v = exports.ɵangular_packages_forms_forms_w = exports.ɵangular_packages_forms_forms_u = exports.ɵangular_packages_forms_forms_t = exports.ɵangular_packages_forms_forms_q = exports.ɵangular_packages_forms_forms_r = exports.ɵangular_packages_forms_forms_p = exports.ɵangular_packages_forms_forms_n = exports.ɵangular_packages_forms_forms_o = exports.ɵangular_packages_forms_forms_m = exports.ɵangular_packages_forms_forms_l = exports.ɵangular_packages_forms_forms_k = exports.ɵangular_packages_forms_forms_j = exports.ɵangular_packages_forms_forms_bf = exports.ɵangular_packages_forms_forms_be = exports.ɵangular_packages_forms_forms_i = exports.ɵangular_packages_forms_forms_h = exports.ɵangular_packages_forms_forms_bd = exports.ɵangular_packages_forms_forms_bc = exports.ɵangular_packages_forms_forms_bg = exports.ɵangular_packages_forms_forms_g = exports.ɵangular_packages_forms_forms_f = exports.ɵangular_packages_forms_forms_e = exports.ɵangular_packages_forms_forms_d = exports.ɵangular_packages_forms_forms_c = exports.ɵangular_packages_forms_forms_b = exports.ɵangular_packages_forms_forms_a = exports.ɵangular_packages_forms_forms_z = exports.ɵangular_packages_forms_forms_y = exports.ɵangular_packages_forms_forms_ba = exports.ɵangular_packages_forms_forms_bb = void 0;

var _tslib = __webpack_require__(1);

var _core = __webpack_require__(0);

var _rxjs = __webpack_require__(31);

var _operators = __webpack_require__(33);

var _platformBrowser = __webpack_require__(50);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Base class for control directives.
 *
 * Only used internally in the forms module.
 *
 *
 */
var AbstractControlDirective =
/** @class */
function () {
  function AbstractControlDirective() {}

  Object.defineProperty(AbstractControlDirective.prototype, "value", {
    /** The value of the control. */
    get:
    /** The value of the control. */
    function get() {
      return this.control ? this.control.value : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "valid", {
    /**
     * A control is `valid` when its `status === VALID`.
     *
     * In order to have this status, the control must have passed all its
     * validation checks.
     */
    get:
    /**
    * A control is `valid` when its `status === VALID`.
    *
    * In order to have this status, the control must have passed all its
    * validation checks.
    */
    function get() {
      return this.control ? this.control.valid : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "invalid", {
    /**
     * A control is `invalid` when its `status === INVALID`.
     *
     * In order to have this status, the control must have failed
     * at least one of its validation checks.
     */
    get:
    /**
    * A control is `invalid` when its `status === INVALID`.
    *
    * In order to have this status, the control must have failed
    * at least one of its validation checks.
    */
    function get() {
      return this.control ? this.control.invalid : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "pending", {
    /**
     * A control is `pending` when its `status === PENDING`.
     *
     * In order to have this status, the control must be in the
     * middle of conducting a validation check.
     */
    get:
    /**
    * A control is `pending` when its `status === PENDING`.
    *
    * In order to have this status, the control must be in the
    * middle of conducting a validation check.
    */
    function get() {
      return this.control ? this.control.pending : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "disabled", {
    /**
     * A control is `disabled` when its `status === DISABLED`.
     *
     * Disabled controls are exempt from validation checks and
     * are not included in the aggregate value of their ancestor
     * controls.
     */
    get:
    /**
    * A control is `disabled` when its `status === DISABLED`.
    *
    * Disabled controls are exempt from validation checks and
    * are not included in the aggregate value of their ancestor
    * controls.
    */
    function get() {
      return this.control ? this.control.disabled : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "enabled", {
    /**
     * A control is `enabled` as long as its `status !== DISABLED`.
     *
     * In other words, it has a status of `VALID`, `INVALID`, or
     * `PENDING`.
     */
    get:
    /**
    * A control is `enabled` as long as its `status !== DISABLED`.
    *
    * In other words, it has a status of `VALID`, `INVALID`, or
    * `PENDING`.
    */
    function get() {
      return this.control ? this.control.enabled : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "errors", {
    /**
     * Returns any errors generated by failing validation. If there
     * are no errors, it will return null.
     */
    get:
    /**
    * Returns any errors generated by failing validation. If there
    * are no errors, it will return null.
    */
    function get() {
      return this.control ? this.control.errors : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "pristine", {
    /**
     * A control is `pristine` if the user has not yet changed
     * the value in the UI.
     *
     * Note that programmatic changes to a control's value will
     * *not* mark it dirty.
     */
    get:
    /**
    * A control is `pristine` if the user has not yet changed
    * the value in the UI.
    *
    * Note that programmatic changes to a control's value will
    * *not* mark it dirty.
    */
    function get() {
      return this.control ? this.control.pristine : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "dirty", {
    /**
     * A control is `dirty` if the user has changed the value
     * in the UI.
     *
     * Note that programmatic changes to a control's value will
     * *not* mark it dirty.
     */
    get:
    /**
    * A control is `dirty` if the user has changed the value
    * in the UI.
    *
    * Note that programmatic changes to a control's value will
    * *not* mark it dirty.
    */
    function get() {
      return this.control ? this.control.dirty : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "touched", {
    /**
     * A control is marked `touched` once the user has triggered
     * a `blur` event on it.
     */
    get:
    /**
    * A control is marked `touched` once the user has triggered
    * a `blur` event on it.
    */
    function get() {
      return this.control ? this.control.touched : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "status", {
    get: function get() {
      return this.control ? this.control.status : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "untouched", {
    /**
     * A control is `untouched` if the user has not yet triggered
     * a `blur` event on it.
     */
    get:
    /**
    * A control is `untouched` if the user has not yet triggered
    * a `blur` event on it.
    */
    function get() {
      return this.control ? this.control.untouched : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "statusChanges", {
    /**
     * Emits an event every time the validation status of the control
     * is re-calculated.
     */
    get:
    /**
    * Emits an event every time the validation status of the control
    * is re-calculated.
    */
    function get() {
      return this.control ? this.control.statusChanges : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "valueChanges", {
    /**
     * Emits an event every time the value of the control changes, in
     * the UI or programmatically.
     */
    get:
    /**
    * Emits an event every time the value of the control changes, in
    * the UI or programmatically.
    */
    function get() {
      return this.control ? this.control.valueChanges : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlDirective.prototype, "path", {
    /**
     * Returns an array that represents the path from the top-level form
     * to this control. Each index is the string name of the control on
     * that level.
     */
    get:
    /**
    * Returns an array that represents the path from the top-level form
    * to this control. Each index is the string name of the control on
    * that level.
    */
    function get() {
      return null;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Resets the form control. This means by default:
   *
   * * it is marked as `pristine`
   * * it is marked as `untouched`
   * * value is set to null
   *
   * For more information, see `AbstractControl`.
   */

  /**
     * Resets the form control. This means by default:
     *
     * * it is marked as `pristine`
     * * it is marked as `untouched`
     * * value is set to null
     *
     * For more information, see `AbstractControl`.
     */

  AbstractControlDirective.prototype.reset =
  /**
  * Resets the form control. This means by default:
  *
  * * it is marked as `pristine`
  * * it is marked as `untouched`
  * * value is set to null
  *
  * For more information, see `AbstractControl`.
  */
  function (value) {
    if (value === void 0) {
      value = undefined;
    }

    if (this.control) this.control.reset(value);
  };
  /**
   * Returns true if the control with the given path has the error specified. Otherwise
   * returns false.
   *
   * If no path is given, it checks for the error on the present control.
   */

  /**
     * Returns true if the control with the given path has the error specified. Otherwise
     * returns false.
     *
     * If no path is given, it checks for the error on the present control.
     */


  AbstractControlDirective.prototype.hasError =
  /**
  * Returns true if the control with the given path has the error specified. Otherwise
  * returns false.
  *
  * If no path is given, it checks for the error on the present control.
  */
  function (errorCode, path) {
    return this.control ? this.control.hasError(errorCode, path) : false;
  };
  /**
   * Returns error data if the control with the given path has the error specified. Otherwise
   * returns null or undefined.
   *
   * If no path is given, it checks for the error on the present control.
   */

  /**
     * Returns error data if the control with the given path has the error specified. Otherwise
     * returns null or undefined.
     *
     * If no path is given, it checks for the error on the present control.
     */


  AbstractControlDirective.prototype.getError =
  /**
  * Returns error data if the control with the given path has the error specified. Otherwise
  * returns null or undefined.
  *
  * If no path is given, it checks for the error on the present control.
  */
  function (errorCode, path) {
    return this.control ? this.control.getError(errorCode, path) : null;
  };

  return AbstractControlDirective;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A directive that contains multiple `NgControl`s.
 *
 * Only used by the forms module.
 *
 *
 */


exports.AbstractControlDirective = AbstractControlDirective;

var ControlContainer =
/** @class */
function (_super) {
  (0, _tslib.__extends)(ControlContainer, _super);

  function ControlContainer() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(ControlContainer.prototype, "formDirective", {
    /**
     * Get the form to which this container belongs.
     */
    get:
    /**
    * Get the form to which this container belongs.
    */
    function get() {
      return null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ControlContainer.prototype, "path", {
    /**
     * Get the path to this container.
     */
    get:
    /**
    * Get the path to this container.
    */
    function get() {
      return null;
    },
    enumerable: true,
    configurable: true
  });
  return ControlContainer;
}(AbstractControlDirective);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ControlContainer = ControlContainer;

function isEmptyInputValue(value) {
  // we don't check for string here so it also works with arrays
  return value == null || value.length === 0;
}
/**
 * Providers for validators to be used for `FormControl`s in a form.
 *
 * Provide this using `multi: true` to add validators.
 *
 * ### Example
 *
 * ```typescript
 * @Directive({
 *   selector: '[custom-validator]',
 *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]
 * })
 * class CustomValidatorDirective implements Validator {
 *   validate(control: AbstractControl): ValidationErrors | null {
 *     return {"custom": true};
 *   }
 * }
 * ```
 *
 *
 */


var NG_VALIDATORS = new _core.InjectionToken('NgValidators');
/**
 * Providers for asynchronous validators to be used for `FormControl`s
 * in a form.
 *
 * Provide this using `multi: true` to add validators.
 *
 * See `NG_VALIDATORS` for more details.
 *
 *
 */

exports.NG_VALIDATORS = NG_VALIDATORS;
var NG_ASYNC_VALIDATORS = new _core.InjectionToken('NgAsyncValidators');
exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;
var EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;
/**
 * Provides a set of validators used by form controls.
 *
 * A validator is a function that processes a `FormControl` or collection of
 * controls and returns a map of errors. A null map means that validation has passed.
 *
 * ### Example
 *
 * ```typescript
 * var loginControl = new FormControl("", Validators.required)
 * ```
 *
 *
 */

var Validators =
/** @class */
function () {
  function Validators() {}
  /**
   * Validator that requires controls to have a value greater than a number.
   *`min()` exists only as a function, not as a directive. For example,
   * `control = new FormControl('', Validators.min(3));`.
   */

  /**
     * Validator that requires controls to have a value greater than a number.
     *`min()` exists only as a function, not as a directive. For example,
     * `control = new FormControl('', Validators.min(3));`.
     */


  Validators.min =
  /**
  * Validator that requires controls to have a value greater than a number.
  *`min()` exists only as a function, not as a directive. For example,
  * `control = new FormControl('', Validators.min(3));`.
  */
  function (min) {
    return function (control) {
      if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {
        return null; // don't validate empty values to allow optional controls
      }

      var value = parseFloat(control.value); // Controls with NaN values after parsing should be treated as not having a
      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min

      return !isNaN(value) && value < min ? {
        'min': {
          'min': min,
          'actual': control.value
        }
      } : null;
    };
  };
  /**
   * Validator that requires controls to have a value less than a number.
   * `max()` exists only as a function, not as a directive. For example,
   * `control = new FormControl('', Validators.max(15));`.
   */

  /**
     * Validator that requires controls to have a value less than a number.
     * `max()` exists only as a function, not as a directive. For example,
     * `control = new FormControl('', Validators.max(15));`.
     */


  Validators.max =
  /**
  * Validator that requires controls to have a value less than a number.
  * `max()` exists only as a function, not as a directive. For example,
  * `control = new FormControl('', Validators.max(15));`.
  */
  function (max) {
    return function (control) {
      if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {
        return null; // don't validate empty values to allow optional controls
      }

      var value = parseFloat(control.value); // Controls with NaN values after parsing should be treated as not having a
      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max

      return !isNaN(value) && value > max ? {
        'max': {
          'max': max,
          'actual': control.value
        }
      } : null;
    };
  };
  /**
   * Validator that requires controls to have a non-empty value.
   */

  /**
     * Validator that requires controls to have a non-empty value.
     */


  Validators.required =
  /**
  * Validator that requires controls to have a non-empty value.
  */
  function (control) {
    return isEmptyInputValue(control.value) ? {
      'required': true
    } : null;
  };
  /**
   * Validator that requires control value to be true.
   */

  /**
     * Validator that requires control value to be true.
     */


  Validators.requiredTrue =
  /**
  * Validator that requires control value to be true.
  */
  function (control) {
    return control.value === true ? null : {
      'required': true
    };
  };
  /**
   * Validator that performs email validation.
   */

  /**
     * Validator that performs email validation.
     */


  Validators.email =
  /**
  * Validator that performs email validation.
  */
  function (control) {
    if (isEmptyInputValue(control.value)) {
      return null; // don't validate empty values to allow optional controls
    }

    return EMAIL_REGEXP.test(control.value) ? null : {
      'email': true
    };
  };
  /**
   * Validator that requires controls to have a value of a minimum length.
   */

  /**
     * Validator that requires controls to have a value of a minimum length.
     */


  Validators.minLength =
  /**
  * Validator that requires controls to have a value of a minimum length.
  */
  function (minLength) {
    return function (control) {
      if (isEmptyInputValue(control.value)) {
        return null; // don't validate empty values to allow optional controls
      }

      var length = control.value ? control.value.length : 0;
      return length < minLength ? {
        'minlength': {
          'requiredLength': minLength,
          'actualLength': length
        }
      } : null;
    };
  };
  /**
   * Validator that requires controls to have a value of a maximum length.
   */

  /**
     * Validator that requires controls to have a value of a maximum length.
     */


  Validators.maxLength =
  /**
  * Validator that requires controls to have a value of a maximum length.
  */
  function (maxLength) {
    return function (control) {
      var length = control.value ? control.value.length : 0;
      return length > maxLength ? {
        'maxlength': {
          'requiredLength': maxLength,
          'actualLength': length
        }
      } : null;
    };
  };
  /**
   * Validator that requires a control to match a regex to its value.
   */

  /**
     * Validator that requires a control to match a regex to its value.
     */


  Validators.pattern =
  /**
  * Validator that requires a control to match a regex to its value.
  */
  function (pattern) {
    if (!pattern) return Validators.nullValidator;
    var regex;
    var regexStr;

    if (typeof pattern === 'string') {
      regexStr = '';
      if (pattern.charAt(0) !== '^') regexStr += '^';
      regexStr += pattern;
      if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';
      regex = new RegExp(regexStr);
    } else {
      regexStr = pattern.toString();
      regex = pattern;
    }

    return function (control) {
      if (isEmptyInputValue(control.value)) {
        return null; // don't validate empty values to allow optional controls
      }

      var value = control.value;
      return regex.test(value) ? null : {
        'pattern': {
          'requiredPattern': regexStr,
          'actualValue': value
        }
      };
    };
  };
  /**
   * No-op validator.
   */

  /**
     * No-op validator.
     */


  Validators.nullValidator =
  /**
  * No-op validator.
  */
  function (c) {
    return null;
  };

  Validators.compose = function (validators) {
    if (!validators) return null;
    var presentValidators = validators.filter(isPresent);
    if (presentValidators.length == 0) return null;
    return function (control) {
      return _mergeErrors(_executeValidators(control, presentValidators));
    };
  };

  Validators.composeAsync = function (validators) {
    if (!validators) return null;
    var presentValidators = validators.filter(isPresent);
    if (presentValidators.length == 0) return null;
    return function (control) {
      var observables = _executeAsyncValidators(control, presentValidators).map(toObservable);

      return (0, _rxjs.forkJoin)(observables).pipe((0, _operators.map)(_mergeErrors));
    };
  };

  return Validators;
}();

exports.Validators = Validators;

function isPresent(o) {
  return o != null;
}

function toObservable(r) {
  var obs = (0, _core.ɵisPromise)(r) ? (0, _rxjs.from)(r) : r;

  if (!(0, _core.ɵisObservable)(obs)) {
    throw new Error("Expected validator to return Promise or Observable.");
  }

  return obs;
}

function _executeValidators(control, validators) {
  return validators.map(function (v) {
    return v(control);
  });
}

function _executeAsyncValidators(control, validators) {
  return validators.map(function (v) {
    return v(control);
  });
}

function _mergeErrors(arrayOfErrors) {
  var res = arrayOfErrors.reduce(function (res, errors) {
    return errors != null ? (0, _tslib.__assign)({}, res, errors) : res;
  }, {});
  return Object.keys(res).length === 0 ? null : res;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used to provide a `ControlValueAccessor` for form controls.
 *
 * See `DefaultValueAccessor` for how to implement one.
 *
 */


var NG_VALUE_ACCESSOR = new _core.InjectionToken('NgValueAccessor');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;
var CHECKBOX_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return CheckboxControlValueAccessor;
  }),
  multi: true
};
/**
 * The accessor for writing a value and listening to changes on a checkbox input element.
 *
 *  ### Example
 *  ```
 *  <input type="checkbox" name="rememberLogin" ngModel>
 *  ```
 *
 *
 */

exports.ɵangular_packages_forms_forms_a = CHECKBOX_VALUE_ACCESSOR;

var CheckboxControlValueAccessor =
/** @class */
function () {
  function CheckboxControlValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  CheckboxControlValueAccessor.prototype.writeValue = function (value) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);
  };

  CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  CheckboxControlValueAccessor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',
      host: {
        '(change)': 'onChange($event.target.checked)',
        '(blur)': 'onTouched()'
      },
      providers: [CHECKBOX_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  CheckboxControlValueAccessor.ctorParameters = function () {
    return [{
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }];
  };

  return CheckboxControlValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;
var DEFAULT_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return DefaultValueAccessor;
  }),
  multi: true
};
/**
 * We must check whether the agent is Android because composition events
 * behave differently between iOS and Android.
 */

exports.ɵangular_packages_forms_forms_b = DEFAULT_VALUE_ACCESSOR;

function _isAndroid() {
  var userAgent = (0, _platformBrowser.ɵgetDOM)() ? (0, _platformBrowser.ɵgetDOM)().getUserAgent() : '';
  return /android (\d+)/.test(userAgent.toLowerCase());
}
/**
 * Turn this mode on if you want form directives to buffer IME input until compositionend
 * @experimental
 */


var COMPOSITION_BUFFER_MODE = new _core.InjectionToken('CompositionEventMode');
/**
 * The default accessor for writing a value and listening to changes that is used by the
 * `NgModel`, `FormControlDirective`, and `FormControlName` directives.
 *
 *  ### Example
 *  ```
 *  <input type="text" name="searchQuery" ngModel>
 *  ```
 *
 *
 */

exports.COMPOSITION_BUFFER_MODE = COMPOSITION_BUFFER_MODE;

var DefaultValueAccessor =
/** @class */
function () {
  function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    this._compositionMode = _compositionMode;

    this.onChange = function (_) {};

    this.onTouched = function () {};
    /** Whether the user is creating a composition string (IME events). */


    this._composing = false;

    if (this._compositionMode == null) {
      this._compositionMode = !_isAndroid();
    }
  }

  DefaultValueAccessor.prototype.writeValue = function (value) {
    var normalizedValue = value == null ? '' : value;

    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);
  };

  DefaultValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  DefaultValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };
  /** @internal */

  /** @internal */


  DefaultValueAccessor.prototype._handleInput =
  /** @internal */
  function (value) {
    if (!this._compositionMode || this._compositionMode && !this._composing) {
      this.onChange(value);
    }
  };
  /** @internal */

  /** @internal */


  DefaultValueAccessor.prototype._compositionStart =
  /** @internal */
  function () {
    this._composing = true;
  };
  /** @internal */

  /** @internal */


  DefaultValueAccessor.prototype._compositionEnd =
  /** @internal */
  function (value) {
    this._composing = false;
    this._compositionMode && this.onChange(value);
  };

  DefaultValueAccessor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',
      // TODO: vsavkin replace the above selector with the one below it once
      // https://github.com/angular/angular/issues/3011 is implemented
      // selector: '[ngModel],[formControl],[formControlName]',
      host: {
        '(input)': '$any(this)._handleInput($event.target.value)',
        '(blur)': 'onTouched()',
        '(compositionstart)': '$any(this)._compositionStart()',
        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'
      },
      providers: [DEFAULT_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  DefaultValueAccessor.ctorParameters = function () {
    return [{
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }, {
      type: undefined,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Inject,
        args: [COMPOSITION_BUFFER_MODE]
      }]
    }];
  };

  return DefaultValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.DefaultValueAccessor = DefaultValueAccessor;

function normalizeValidator(validator) {
  if (validator.validate) {
    return function (c) {
      return validator.validate(c);
    };
  } else {
    return validator;
  }
}

function normalizeAsyncValidator(validator) {
  if (validator.validate) {
    return function (c) {
      return validator.validate(c);
    };
  } else {
    return validator;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NUMBER_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NumberValueAccessor;
  }),
  multi: true
};
/**
 * The accessor for writing a number value and listening to changes that is used by the
 * `NgModel`, `FormControlDirective`, and `FormControlName` directives.
 *
 *  ### Example
 *  ```
 *  <input type="number" [(ngModel)]="age">
 *  ```
 */

exports.ɵangular_packages_forms_forms_bc = NUMBER_VALUE_ACCESSOR;

var NumberValueAccessor =
/** @class */
function () {
  function NumberValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  NumberValueAccessor.prototype.writeValue = function (value) {
    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null
    var normalizedValue = value == null ? '' : value;

    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);
  };

  NumberValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = function (value) {
      fn(value == '' ? null : parseFloat(value));
    };
  };

  NumberValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  NumberValueAccessor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',
      host: {
        '(change)': 'onChange($event.target.value)',
        '(input)': 'onChange($event.target.value)',
        '(blur)': 'onTouched()'
      },
      providers: [NUMBER_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NumberValueAccessor.ctorParameters = function () {
    return [{
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }];
  };

  return NumberValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵangular_packages_forms_forms_bd = NumberValueAccessor;

function unimplemented() {
  throw new Error('unimplemented');
}
/**
 * A base class that all control directive extend.
 * It binds a `FormControl` object to a DOM element.
 *
 * Used internally by Angular forms.
 *
 *
 */


var NgControl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NgControl, _super);

  function NgControl() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    /** @internal */


    _this._parent = null;
    _this.name = null;
    _this.valueAccessor = null;
    /** @internal */

    _this._rawValidators = [];
    /** @internal */

    _this._rawAsyncValidators = [];
    return _this;
  }

  Object.defineProperty(NgControl.prototype, "validator", {
    get: function get() {
      return unimplemented();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgControl.prototype, "asyncValidator", {
    get: function get() {
      return unimplemented();
    },
    enumerable: true,
    configurable: true
  });
  return NgControl;
}(AbstractControlDirective);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.NgControl = NgControl;
var RADIO_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return RadioControlValueAccessor;
  }),
  multi: true
};
/**
 * Internal class used by Angular to uncheck radio buttons with the matching name.
 */

exports.ɵangular_packages_forms_forms_h = RADIO_VALUE_ACCESSOR;

var RadioControlRegistry =
/** @class */
function () {
  function RadioControlRegistry() {
    this._accessors = [];
  }

  RadioControlRegistry.prototype.add = function (control, accessor) {
    this._accessors.push([control, accessor]);
  };

  RadioControlRegistry.prototype.remove = function (accessor) {
    for (var i = this._accessors.length - 1; i >= 0; --i) {
      if (this._accessors[i][1] === accessor) {
        this._accessors.splice(i, 1);

        return;
      }
    }
  };

  RadioControlRegistry.prototype.select = function (accessor) {
    var _this = this;

    this._accessors.forEach(function (c) {
      if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {
        c[1].fireUncheck(accessor.value);
      }
    });
  };

  RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {
    if (!controlPair[0].control) return false;
    return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;
  };

  RadioControlRegistry.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  RadioControlRegistry.ctorParameters = function () {
    return [];
  };

  return RadioControlRegistry;
}();
/**
 * @description
 *
 * Writes radio control values and listens to radio control changes.
 *
 * Used by `NgModel`, `FormControlDirective`, and `FormControlName`
 * to keep the view synced with the `FormControl` model.
 *
 * If you have imported the `FormsModule` or the `ReactiveFormsModule`, this
 * value accessor will be active on any radio control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * ### How to use radio buttons with form directives
 *
 * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons
 * in the same group have the same `name` attribute.  Radio buttons with different `name`
 * attributes do not affect each other.
 *
 * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}
 *
 * When using radio buttons in a reactive form, radio buttons in the same group should have the
 * same `formControlName`. You can also add a `name` attribute, but it's optional.
 *
 * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}
 *
 *  * **npm package**: `@angular/forms`
 *
 *
 */


exports.ɵangular_packages_forms_forms_i = RadioControlRegistry;

var RadioControlValueAccessor =
/** @class */
function () {
  function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    this._registry = _registry;
    this._injector = _injector;

    this.onChange = function () {};

    this.onTouched = function () {};
  }

  RadioControlValueAccessor.prototype.ngOnInit = function () {
    this._control = this._injector.get(NgControl);

    this._checkName();

    this._registry.add(this._control, this);
  };

  RadioControlValueAccessor.prototype.ngOnDestroy = function () {
    this._registry.remove(this);
  };

  RadioControlValueAccessor.prototype.writeValue = function (value) {
    this._state = value === this.value;

    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);
  };

  RadioControlValueAccessor.prototype.registerOnChange = function (fn) {
    var _this = this;

    this._fn = fn;

    this.onChange = function () {
      fn(_this.value);

      _this._registry.select(_this);
    };
  };

  RadioControlValueAccessor.prototype.fireUncheck = function (value) {
    this.writeValue(value);
  };

  RadioControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  RadioControlValueAccessor.prototype._checkName = function () {
    if (this.name && this.formControlName && this.name !== this.formControlName) {
      this._throwNameError();
    }

    if (!this.name && this.formControlName) this.name = this.formControlName;
  };

  RadioControlValueAccessor.prototype._throwNameError = function () {
    throw new Error("\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    ");
  };

  RadioControlValueAccessor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',
      host: {
        '(change)': 'onChange()',
        '(blur)': 'onTouched()'
      },
      providers: [RADIO_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  RadioControlValueAccessor.ctorParameters = function () {
    return [{
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }, {
      type: RadioControlRegistry
    }, {
      type: _core.Injector
    }];
  };

  RadioControlValueAccessor.propDecorators = {
    "name": [{
      type: _core.Input
    }],
    "formControlName": [{
      type: _core.Input
    }],
    "value": [{
      type: _core.Input
    }]
  };
  return RadioControlValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.RadioControlValueAccessor = RadioControlValueAccessor;
var RANGE_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return RangeValueAccessor;
  }),
  multi: true
};
/**
 * The accessor for writing a range value and listening to changes that is used by the
 * `NgModel`, `FormControlDirective`, and `FormControlName` directives.
 *
 *  ### Example
 *  ```
 *  <input type="range" [(ngModel)]="age" >
 *  ```
 */

exports.ɵangular_packages_forms_forms_be = RANGE_VALUE_ACCESSOR;

var RangeValueAccessor =
/** @class */
function () {
  function RangeValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  RangeValueAccessor.prototype.writeValue = function (value) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));
  };

  RangeValueAccessor.prototype.registerOnChange = function (fn) {
    this.onChange = function (value) {
      fn(value == '' ? null : parseFloat(value));
    };
  };

  RangeValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  RangeValueAccessor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',
      host: {
        '(change)': 'onChange($event.target.value)',
        '(input)': 'onChange($event.target.value)',
        '(blur)': 'onTouched()'
      },
      providers: [RANGE_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  RangeValueAccessor.ctorParameters = function () {
    return [{
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }];
  };

  return RangeValueAccessor;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵangular_packages_forms_forms_bf = RangeValueAccessor;
var FormErrorExamples = {
  formControlName: "\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });",
  formGroupName: "\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });",
  formArrayName: "\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });",
  ngModelGroup: "\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>",
  ngModelWithFormGroup: "\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  "
};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ReactiveErrors =
/** @class */
function () {
  function ReactiveErrors() {}

  ReactiveErrors.controlParentException = function () {
    throw new Error("formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " + FormErrorExamples.formControlName);
  };

  ReactiveErrors.ngModelGroupException = function () {
    throw new Error("formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        " + FormErrorExamples.formGroupName + "\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        " + FormErrorExamples.ngModelGroup);
  };

  ReactiveErrors.missingFormException = function () {
    throw new Error("formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       " + FormErrorExamples.formControlName);
  };

  ReactiveErrors.groupParentException = function () {
    throw new Error("formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " + FormErrorExamples.formGroupName);
  };

  ReactiveErrors.arrayParentException = function () {
    throw new Error("formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        " + FormErrorExamples.formArrayName);
  };

  ReactiveErrors.disabledAttrWarning = function () {
    console.warn("\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    ");
  };

  ReactiveErrors.ngModelWarning = function (directiveName) {
    console.warn("\n    It looks like you're using ngModel on the same form field as " + directiveName + ". \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/" + (directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName') + "#use-with-ngmodel\n    ");
  };

  return ReactiveErrors;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SELECT_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return SelectControlValueAccessor;
  }),
  multi: true
};
exports.ɵangular_packages_forms_forms_p = SELECT_VALUE_ACCESSOR;

function _buildValueString(id, value) {
  if (id == null) return "" + value;
  if (value && _typeof(value) === 'object') value = 'Object';
  return (id + ": " + value).slice(0, 50);
}

function _extractId(valueString) {
  return valueString.split(':')[0];
}
/**
 * @description
 *
 * Writes values and listens to changes on a select element.
 *
 * Used by `NgModel`, `FormControlDirective`, and `FormControlName`
 * to keep the view synced with the `FormControl` model.
 *
 * If you have imported the `FormsModule` or the `ReactiveFormsModule`, this
 * value accessor will be active on any select control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * ### How to use select controls with form directives
 *
 * To use a select in a template-driven form, simply add an `ngModel` and a `name`
 * attribute to the main `<select>` tag.
 *
 * If your option values are simple strings, you can bind to the normal `value` property
 * on the option.  If your option values happen to be objects (and you'd like to save the
 * selection in your form as an object), use `ngValue` instead:
 *
 * {@example forms/ts/selectControl/select_control_example.ts region='Component'}
 *
 * In reactive forms, you'll also want to add your form directive (`formControlName` or
 * `formControl`) on the main `<select>` tag. Like in the former example, you have the
 * choice of binding to the  `value` or `ngValue` property on the select's options.
 *
 * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}
 *
 * ### Caveat: Option selection
 *
 * Angular uses object identity to select option. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.
 * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects option by the return value of the function.
 *
 * #### Syntax
 *
 * ```
 * <select [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 * Note: We listen to the 'change' event because 'input' events aren't fired
 * for selects in Firefox and IE:
 * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350
 * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/
 *
 * * **npm package**: `@angular/forms`
 *
 *
 */


var SelectControlValueAccessor =
/** @class */
function () {
  function SelectControlValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    /** @internal */

    this._optionMap = new Map();
    /** @internal */

    this._idCounter = 0;

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this._compareWith = _core.ɵlooseIdentical;
  }

  Object.defineProperty(SelectControlValueAccessor.prototype, "compareWith", {
    set: function set(fn) {
      if (typeof fn !== 'function') {
        throw new Error("compareWith must be a function, but received " + JSON.stringify(fn));
      }

      this._compareWith = fn;
    },
    enumerable: true,
    configurable: true
  });

  SelectControlValueAccessor.prototype.writeValue = function (value) {
    this.value = value;

    var id = this._getOptionId(value);

    if (id == null) {
      this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);
    }

    var valueString = _buildValueString(id, value);

    this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);
  };

  SelectControlValueAccessor.prototype.registerOnChange = function (fn) {
    var _this = this;

    this.onChange = function (valueString) {
      _this.value = _this._getOptionValue(valueString);
      fn(_this.value);
    };
  };

  SelectControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };
  /** @internal */

  /** @internal */


  SelectControlValueAccessor.prototype._registerOption =
  /** @internal */
  function () {
    return (this._idCounter++).toString();
  };
  /** @internal */

  /** @internal */


  SelectControlValueAccessor.prototype._getOptionId =
  /** @internal */
  function (value) {
    try {
      for (var _a = (0, _tslib.__values)(Array.from(this._optionMap.keys())), _b = _a.next(); !_b.done; _b = _a.next()) {
        var id = _b.value;
        if (this._compareWith(this._optionMap.get(id), value)) return id;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return null;

    var e_1, _c;
  };
  /** @internal */

  /** @internal */


  SelectControlValueAccessor.prototype._getOptionValue =
  /** @internal */
  function (valueString) {
    var id = _extractId(valueString);

    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;
  };

  SelectControlValueAccessor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',
      host: {
        '(change)': 'onChange($event.target.value)',
        '(blur)': 'onTouched()'
      },
      providers: [SELECT_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  SelectControlValueAccessor.ctorParameters = function () {
    return [{
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }];
  };

  SelectControlValueAccessor.propDecorators = {
    "compareWith": [{
      type: _core.Input
    }]
  };
  return SelectControlValueAccessor;
}();
/**
 * @description
 *
 * Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * See docs for `SelectControlValueAccessor` for usage examples.
 *
 *
 */


exports.SelectControlValueAccessor = SelectControlValueAccessor;

var NgSelectOption =
/** @class */
function () {
  function NgSelectOption(_element, _renderer, _select) {
    this._element = _element;
    this._renderer = _renderer;
    this._select = _select;
    if (this._select) this.id = this._select._registerOption();
  }

  Object.defineProperty(NgSelectOption.prototype, "ngValue", {
    set: function set(value) {
      if (this._select == null) return;

      this._select._optionMap.set(this.id, value);

      this._setElementValue(_buildValueString(this.id, value));

      this._select.writeValue(this._select.value);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgSelectOption.prototype, "value", {
    set: function set(value) {
      this._setElementValue(value);

      if (this._select) this._select.writeValue(this._select.value);
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  /** @internal */

  NgSelectOption.prototype._setElementValue =
  /** @internal */
  function (value) {
    this._renderer.setProperty(this._element.nativeElement, 'value', value);
  };

  NgSelectOption.prototype.ngOnDestroy = function () {
    if (this._select) {
      this._select._optionMap.delete(this.id);

      this._select.writeValue(this._select.value);
    }
  };

  NgSelectOption.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'option'
    }]
  }];
  /** @nocollapse */

  NgSelectOption.ctorParameters = function () {
    return [{
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }, {
      type: SelectControlValueAccessor,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Host
      }]
    }];
  };

  NgSelectOption.propDecorators = {
    "ngValue": [{
      type: _core.Input,
      args: ['ngValue']
    }],
    "value": [{
      type: _core.Input,
      args: ['value']
    }]
  };
  return NgSelectOption;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.NgSelectOption = NgSelectOption;
var SELECT_MULTIPLE_VALUE_ACCESSOR = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return SelectMultipleControlValueAccessor;
  }),
  multi: true
};
exports.ɵangular_packages_forms_forms_q = SELECT_MULTIPLE_VALUE_ACCESSOR;

function _buildValueString$1(id, value) {
  if (id == null) return "" + value;
  if (typeof value === 'string') value = "'" + value + "'";
  if (value && _typeof(value) === 'object') value = 'Object';
  return (id + ": " + value).slice(0, 50);
}

function _extractId$1(valueString) {
  return valueString.split(':')[0];
}
/**
 * The accessor for writing a value and listening to changes on a select element.
 *
 *  ### Caveat: Options selection
 *
 * Angular uses object identity to select options. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`
 * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects options by the return value of the function.
 *
 * #### Syntax
 *
 * ```
 * <select multiple [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 *
 */


var SelectMultipleControlValueAccessor =
/** @class */
function () {
  function SelectMultipleControlValueAccessor(_renderer, _elementRef) {
    this._renderer = _renderer;
    this._elementRef = _elementRef;
    /** @internal */

    this._optionMap = new Map();
    /** @internal */

    this._idCounter = 0;

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this._compareWith = _core.ɵlooseIdentical;
  }

  Object.defineProperty(SelectMultipleControlValueAccessor.prototype, "compareWith", {
    set: function set(fn) {
      if (typeof fn !== 'function') {
        throw new Error("compareWith must be a function, but received " + JSON.stringify(fn));
      }

      this._compareWith = fn;
    },
    enumerable: true,
    configurable: true
  });

  SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {
    var _this = this;

    this.value = value;
    var optionSelectedStateSetter;

    if (Array.isArray(value)) {
      // convert values to ids
      var ids_1 = value.map(function (v) {
        return _this._getOptionId(v);
      });

      optionSelectedStateSetter = function optionSelectedStateSetter(opt, o) {
        opt._setSelected(ids_1.indexOf(o.toString()) > -1);
      };
    } else {
      optionSelectedStateSetter = function optionSelectedStateSetter(opt, o) {
        opt._setSelected(false);
      };
    }

    this._optionMap.forEach(optionSelectedStateSetter);
  };

  SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {
    var _this = this;

    this.onChange = function (_) {
      var selected = [];

      if (_.hasOwnProperty('selectedOptions')) {
        var options = _.selectedOptions;

        for (var i = 0; i < options.length; i++) {
          var opt = options.item(i);

          var val = _this._getOptionValue(opt.value);

          selected.push(val);
        }
      } else {
        var options = _.options;

        for (var i = 0; i < options.length; i++) {
          var opt = options.item(i);

          if (opt.selected) {
            var val = _this._getOptionValue(opt.value);

            selected.push(val);
          }
        }
      }

      _this.value = selected;
      fn(selected);
    };
  };

  SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };
  /** @internal */

  /** @internal */


  SelectMultipleControlValueAccessor.prototype._registerOption =
  /** @internal */
  function (value) {
    var id = (this._idCounter++).toString();

    this._optionMap.set(id, value);

    return id;
  };
  /** @internal */

  /** @internal */


  SelectMultipleControlValueAccessor.prototype._getOptionId =
  /** @internal */
  function (value) {
    try {
      for (var _a = (0, _tslib.__values)(Array.from(this._optionMap.keys())), _b = _a.next(); !_b.done; _b = _a.next()) {
        var id = _b.value;
        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return null;

    var e_1, _c;
  };
  /** @internal */

  /** @internal */


  SelectMultipleControlValueAccessor.prototype._getOptionValue =
  /** @internal */
  function (valueString) {
    var id = _extractId$1(valueString);

    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;
  };

  SelectMultipleControlValueAccessor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',
      host: {
        '(change)': 'onChange($event.target)',
        '(blur)': 'onTouched()'
      },
      providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  SelectMultipleControlValueAccessor.ctorParameters = function () {
    return [{
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }];
  };

  SelectMultipleControlValueAccessor.propDecorators = {
    "compareWith": [{
      type: _core.Input
    }]
  };
  return SelectMultipleControlValueAccessor;
}();
/**
 * Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * ### Example
 *
 * ```
 * <select multiple name="city" ngModel>
 *   <option *ngFor="let c of cities" [value]="c"></option>
 * </select>
 * ```
 */


exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;

var NgSelectMultipleOption =
/** @class */
function () {
  function NgSelectMultipleOption(_element, _renderer, _select) {
    this._element = _element;
    this._renderer = _renderer;
    this._select = _select;

    if (this._select) {
      this.id = this._select._registerOption(this);
    }
  }

  Object.defineProperty(NgSelectMultipleOption.prototype, "ngValue", {
    set: function set(value) {
      if (this._select == null) return;
      this._value = value;

      this._setElementValue(_buildValueString$1(this.id, value));

      this._select.writeValue(this._select.value);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgSelectMultipleOption.prototype, "value", {
    set: function set(value) {
      if (this._select) {
        this._value = value;

        this._setElementValue(_buildValueString$1(this.id, value));

        this._select.writeValue(this._select.value);
      } else {
        this._setElementValue(value);
      }
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  /** @internal */

  NgSelectMultipleOption.prototype._setElementValue =
  /** @internal */
  function (value) {
    this._renderer.setProperty(this._element.nativeElement, 'value', value);
  };
  /** @internal */

  /** @internal */


  NgSelectMultipleOption.prototype._setSelected =
  /** @internal */
  function (selected) {
    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);
  };

  NgSelectMultipleOption.prototype.ngOnDestroy = function () {
    if (this._select) {
      this._select._optionMap.delete(this.id);

      this._select.writeValue(this._select.value);
    }
  };

  NgSelectMultipleOption.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'option'
    }]
  }];
  /** @nocollapse */

  NgSelectMultipleOption.ctorParameters = function () {
    return [{
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }, {
      type: SelectMultipleControlValueAccessor,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Host
      }]
    }];
  };

  NgSelectMultipleOption.propDecorators = {
    "ngValue": [{
      type: _core.Input,
      args: ['ngValue']
    }],
    "value": [{
      type: _core.Input,
      args: ['value']
    }]
  };
  return NgSelectMultipleOption;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵangular_packages_forms_forms_r = NgSelectMultipleOption;

function controlPath(name, parent) {
  return (0, _tslib.__spread)(parent.path, [name]);
}

function setUpControl(control, dir) {
  if (!control) _throwError(dir, 'Cannot find control with');
  if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');
  control.validator = Validators.compose([control.validator, dir.validator]);
  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
  dir.valueAccessor.writeValue(control.value);
  setUpViewChangePipeline(control, dir);
  setUpModelChangePipeline(control, dir);
  setUpBlurPipeline(control, dir);

  if (dir.valueAccessor.setDisabledState) {
    control.registerOnDisabledChange(function (isDisabled) {
      dir.valueAccessor.setDisabledState(isDisabled);
    });
  } // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4


  dir._rawValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(function () {
      return control.updateValueAndValidity();
    });
  });

  dir._rawAsyncValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(function () {
      return control.updateValueAndValidity();
    });
  });
}

function cleanUpControl(control, dir) {
  dir.valueAccessor.registerOnChange(function () {
    return _noControlError(dir);
  });
  dir.valueAccessor.registerOnTouched(function () {
    return _noControlError(dir);
  });

  dir._rawValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) {
      validator.registerOnValidatorChange(null);
    }
  });

  dir._rawAsyncValidators.forEach(function (validator) {
    if (validator.registerOnValidatorChange) {
      validator.registerOnValidatorChange(null);
    }
  });

  if (control) control._clearChangeFns();
}

function setUpViewChangePipeline(control, dir) {
  dir.valueAccessor.registerOnChange(function (newValue) {
    control._pendingValue = newValue;
    control._pendingChange = true;
    control._pendingDirty = true;
    if (control.updateOn === 'change') updateControl(control, dir);
  });
}

function setUpBlurPipeline(control, dir) {
  dir.valueAccessor.registerOnTouched(function () {
    control._pendingTouched = true;
    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);
    if (control.updateOn !== 'submit') control.markAsTouched();
  });
}

function updateControl(control, dir) {
  if (control._pendingDirty) control.markAsDirty();
  control.setValue(control._pendingValue, {
    emitModelToViewChange: false
  });
  dir.viewToModelUpdate(control._pendingValue);
  control._pendingChange = false;
}

function setUpModelChangePipeline(control, dir) {
  control.registerOnChange(function (newValue, emitModelEvent) {
    // control -> view
    // control -> view
    dir.valueAccessor.writeValue(newValue); // control -> ngModel

    if (emitModelEvent) dir.viewToModelUpdate(newValue);
  });
}

function setUpFormContainer(control, dir) {
  if (control == null) _throwError(dir, 'Cannot find control with');
  control.validator = Validators.compose([control.validator, dir.validator]);
  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
}

function _noControlError(dir) {
  return _throwError(dir, 'There is no FormControl instance attached to form control element with');
}

function _throwError(dir, message) {
  var messageEnd;

  if (dir.path.length > 1) {
    messageEnd = "path: '" + dir.path.join(' -> ') + "'";
  } else if (dir.path[0]) {
    messageEnd = "name: '" + dir.path + "'";
  } else {
    messageEnd = 'unspecified name attribute';
  }

  throw new Error(message + " " + messageEnd);
}

function composeValidators(validators) {
  return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;
}

function composeAsyncValidators(validators) {
  return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) : null;
}

function isPropertyUpdated(changes, viewModel) {
  if (!changes.hasOwnProperty('model')) return false;
  var change = changes['model'];
  if (change.isFirstChange()) return true;
  return !(0, _core.ɵlooseIdentical)(viewModel, change.currentValue);
}

var BUILTIN_ACCESSORS = [CheckboxControlValueAccessor, RangeValueAccessor, NumberValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor];

function isBuiltInAccessor(valueAccessor) {
  return BUILTIN_ACCESSORS.some(function (a) {
    return valueAccessor.constructor === a;
  });
}

function syncPendingControls(form, directives) {
  form._syncPendingControls();

  directives.forEach(function (dir) {
    var control = dir.control;

    if (control.updateOn === 'submit' && control._pendingChange) {
      dir.viewToModelUpdate(control._pendingValue);
      control._pendingChange = false;
    }
  });
} // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented


function selectValueAccessor(dir, valueAccessors) {
  if (!valueAccessors) return null;
  if (!Array.isArray(valueAccessors)) _throwError(dir, 'Value accessor was not provided as an array for form control with');
  var defaultAccessor = undefined;
  var builtinAccessor = undefined;
  var customAccessor = undefined;
  valueAccessors.forEach(function (v) {
    if (v.constructor === DefaultValueAccessor) {
      defaultAccessor = v;
    } else if (isBuiltInAccessor(v)) {
      if (builtinAccessor) _throwError(dir, 'More than one built-in value accessor matches form control with');
      builtinAccessor = v;
    } else {
      if (customAccessor) _throwError(dir, 'More than one custom value accessor matches form control with');
      customAccessor = v;
    }
  });
  if (customAccessor) return customAccessor;
  if (builtinAccessor) return builtinAccessor;
  if (defaultAccessor) return defaultAccessor;

  _throwError(dir, 'No valid value accessor for form control with');

  return null;
}

function removeDir(list, el) {
  var index = list.indexOf(el);
  if (index > -1) list.splice(index, 1);
} // TODO(kara): remove after deprecation period


function _ngModelWarning(name, type, instance, warningConfig) {
  if (!(0, _core.isDevMode)() || warningConfig === 'never') return;

  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {
    ReactiveErrors.ngModelWarning(name);
    type._ngModelWarningSentOnce = true;
    instance._ngModelWarningSent = true;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This is a base class for code shared between `NgModelGroup` and `FormGroupName`.
 *
 *
 */


var AbstractFormGroupDirective =
/** @class */
function (_super) {
  (0, _tslib.__extends)(AbstractFormGroupDirective, _super);

  function AbstractFormGroupDirective() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AbstractFormGroupDirective.prototype.ngOnInit = function () {
    this._checkParentType();

    this.formDirective.addFormGroup(this);
  };

  AbstractFormGroupDirective.prototype.ngOnDestroy = function () {
    if (this.formDirective) {
      this.formDirective.removeFormGroup(this);
    }
  };

  Object.defineProperty(AbstractFormGroupDirective.prototype, "control", {
    /**
     * Get the `FormGroup` backing this binding.
     */
    get:
    /**
    * Get the `FormGroup` backing this binding.
    */
    function get() {
      return this.formDirective.getFormGroup(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "path", {
    /**
     * Get the path to this control group.
     */
    get:
    /**
    * Get the path to this control group.
    */
    function get() {
      return controlPath(this.name, this._parent);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "formDirective", {
    /**
     * Get the `Form` to which this group belongs.
     */
    get:
    /**
    * Get the `Form` to which this group belongs.
    */
    function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "validator", {
    get: function get() {
      return composeValidators(this._validators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractFormGroupDirective.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._asyncValidators);
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  /** @internal */

  AbstractFormGroupDirective.prototype._checkParentType =
  /** @internal */
  function () {};

  return AbstractFormGroupDirective;
}(ControlContainer);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.AbstractFormGroupDirective = AbstractFormGroupDirective;

var AbstractControlStatus =
/** @class */
function () {
  function AbstractControlStatus(cd) {
    this._cd = cd;
  }

  Object.defineProperty(AbstractControlStatus.prototype, "ngClassUntouched", {
    get: function get() {
      return this._cd.control ? this._cd.control.untouched : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassTouched", {
    get: function get() {
      return this._cd.control ? this._cd.control.touched : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassPristine", {
    get: function get() {
      return this._cd.control ? this._cd.control.pristine : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassDirty", {
    get: function get() {
      return this._cd.control ? this._cd.control.dirty : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassValid", {
    get: function get() {
      return this._cd.control ? this._cd.control.valid : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassInvalid", {
    get: function get() {
      return this._cd.control ? this._cd.control.invalid : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControlStatus.prototype, "ngClassPending", {
    get: function get() {
      return this._cd.control ? this._cd.control.pending : false;
    },
    enumerable: true,
    configurable: true
  });
  return AbstractControlStatus;
}();

exports.ɵangular_packages_forms_forms_c = AbstractControlStatus;
var ngControlStatusHost = {
  '[class.ng-untouched]': 'ngClassUntouched',
  '[class.ng-touched]': 'ngClassTouched',
  '[class.ng-pristine]': 'ngClassPristine',
  '[class.ng-dirty]': 'ngClassDirty',
  '[class.ng-valid]': 'ngClassValid',
  '[class.ng-invalid]': 'ngClassInvalid',
  '[class.ng-pending]': 'ngClassPending'
};
/**
 * Directive automatically applied to Angular form controls that sets CSS classes
 * based on control status. The following classes are applied as the properties
 * become true:
 *
 * * ng-valid
 * * ng-invalid
 * * ng-pending
 * * ng-pristine
 * * ng-dirty
 * * ng-untouched
 * * ng-touched
 *
 *
 */

exports.ɵangular_packages_forms_forms_d = ngControlStatusHost;

var NgControlStatus =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NgControlStatus, _super);

  function NgControlStatus(cd) {
    return _super.call(this, cd) || this;
  }

  NgControlStatus.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[formControlName],[ngModel],[formControl]',
      host: ngControlStatusHost
    }]
  }];
  /** @nocollapse */

  NgControlStatus.ctorParameters = function () {
    return [{
      type: NgControl,
      decorators: [{
        type: _core.Self
      }]
    }];
  };

  return NgControlStatus;
}(AbstractControlStatus);
/**
 * Directive automatically applied to Angular form groups that sets CSS classes
 * based on control status (valid/invalid/dirty/etc).
 *
 *
 */


exports.NgControlStatus = NgControlStatus;

var NgControlStatusGroup =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NgControlStatusGroup, _super);

  function NgControlStatusGroup(cd) {
    return _super.call(this, cd) || this;
  }

  NgControlStatusGroup.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',
      host: ngControlStatusHost
    }]
  }];
  /** @nocollapse */

  NgControlStatusGroup.ctorParameters = function () {
    return [{
      type: ControlContainer,
      decorators: [{
        type: _core.Self
      }]
    }];
  };

  return NgControlStatusGroup;
}(AbstractControlStatus);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.
 */


exports.NgControlStatusGroup = NgControlStatusGroup;
var VALID = 'VALID';
/**
 * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.
 */

var INVALID = 'INVALID';
/**
 * Indicates that a FormControl is pending, i.e. that async validation is occurring and
 * errors are not yet available for the input value.
 */

var PENDING = 'PENDING';
/**
 * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor
 * calculations of validity or value.
 */

var DISABLED = 'DISABLED';

function _find(control, path, delimiter) {
  if (path == null) return null;

  if (!(path instanceof Array)) {
    path = path.split(delimiter);
  }

  if (path instanceof Array && path.length === 0) return null;
  return path.reduce(function (v, name) {
    if (v instanceof FormGroup) {
      return v.controls[name] || null;
    }

    if (v instanceof FormArray) {
      return v.at(name) || null;
    }

    return null;
  }, control);
}

function coerceToValidator(validatorOrOpts) {
  var validator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts;
  return Array.isArray(validator) ? composeValidators(validator) : validator || null;
}

function coerceToAsyncValidator(asyncValidator, validatorOrOpts) {
  var origAsyncValidator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator;
  return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) : origAsyncValidator || null;
}

function isOptionsObj(validatorOrOpts) {
  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && _typeof(validatorOrOpts) === 'object';
}
/**
 * @description
 *
 * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.
 *
 * It provides some of the shared behavior that all controls and groups of controls have, like
 * running validators, calculating status, and resetting state. It also defines the properties
 * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be
 * instantiated directly.
 *
 * @see [Forms Guide](/guide/forms)
 * @see [Reactive Forms Guide](/guide/reactive-forms)
 * @see [Dynamic Forms Guide](/guide/dynamic-form)
 *
 */


var AbstractControl =
/** @class */
function () {
  /**
   * Initialize the AbstractControl instance.
   * @param validator The function that will determine the synchronous validity of this control.
   * @param asyncValidator The function that will determine the asynchronous validity of this
   * control.
   */
  function AbstractControl(validator, asyncValidator) {
    this.validator = validator;
    this.asyncValidator = asyncValidator;
    /** @internal */

    this._onCollectionChange = function () {};
    /**
       * A control is `pristine` if the user has not yet changed
       * the value in the UI.
       *
       * Note that programmatic changes to a control's value will
       * *not* mark it dirty.
       */


    this.pristine = true;
    /**
      * A control is marked `touched` once the user has triggered
      * a `blur` event on it.
      */

    this.touched = false;
    /** @internal */

    this._onDisabledChange = [];
  }

  Object.defineProperty(AbstractControl.prototype, "parent", {
    /**
     * The parent control.
     */
    get:
    /**
    * The parent control.
    */
    function get() {
      return this._parent;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "valid", {
    /**
     * A control is `valid` when its `status === VALID`.
     *
     * In order to have this status, the control must have passed all its
     * validation checks.
     */
    get:
    /**
    * A control is `valid` when its `status === VALID`.
    *
    * In order to have this status, the control must have passed all its
    * validation checks.
    */
    function get() {
      return this.status === VALID;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "invalid", {
    /**
     * A control is `invalid` when its `status === INVALID`.
     *
     * In order to have this status, the control must have failed
     * at least one of its validation checks.
     */
    get:
    /**
    * A control is `invalid` when its `status === INVALID`.
    *
    * In order to have this status, the control must have failed
    * at least one of its validation checks.
    */
    function get() {
      return this.status === INVALID;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "pending", {
    /**
     * A control is `pending` when its `status === PENDING`.
     *
     * In order to have this status, the control must be in the
     * middle of conducting a validation check.
     */
    get:
    /**
    * A control is `pending` when its `status === PENDING`.
    *
    * In order to have this status, the control must be in the
    * middle of conducting a validation check.
    */
    function get() {
      return this.status == PENDING;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "disabled", {
    /**
     * A control is `disabled` when its `status === DISABLED`.
     *
     * Disabled controls are exempt from validation checks and
     * are not included in the aggregate value of their ancestor
     * controls.
     */
    get:
    /**
    * A control is `disabled` when its `status === DISABLED`.
    *
    * Disabled controls are exempt from validation checks and
    * are not included in the aggregate value of their ancestor
    * controls.
    */
    function get() {
      return this.status === DISABLED;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "enabled", {
    /**
     * A control is `enabled` as long as its `status !== DISABLED`.
     *
     * In other words, it has a status of `VALID`, `INVALID`, or
     * `PENDING`.
     */
    get:
    /**
    * A control is `enabled` as long as its `status !== DISABLED`.
    *
    * In other words, it has a status of `VALID`, `INVALID`, or
    * `PENDING`.
    */
    function get() {
      return this.status !== DISABLED;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "dirty", {
    /**
     * A control is `dirty` if the user has changed the value
     * in the UI.
     *
     * Note that programmatic changes to a control's value will
     * *not* mark it dirty.
     */
    get:
    /**
    * A control is `dirty` if the user has changed the value
    * in the UI.
    *
    * Note that programmatic changes to a control's value will
    * *not* mark it dirty.
    */
    function get() {
      return !this.pristine;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "untouched", {
    /**
     * A control is `untouched` if the user has not yet triggered
     * a `blur` event on it.
     */
    get:
    /**
    * A control is `untouched` if the user has not yet triggered
    * a `blur` event on it.
    */
    function get() {
      return !this.touched;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AbstractControl.prototype, "updateOn", {
    /**
     * Returns the update strategy of the `AbstractControl` (i.e.
     * the event on which the control will update itself).
     * Possible values: `'change'` (default) | `'blur'` | `'submit'`
     */
    get:
    /**
    * Returns the update strategy of the `AbstractControl` (i.e.
    * the event on which the control will update itself).
    * Possible values: `'change'` (default) | `'blur'` | `'submit'`
    */
    function get() {
      return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Sets the synchronous validators that are active on this control.  Calling
   * this will overwrite any existing sync validators.
   */

  /**
     * Sets the synchronous validators that are active on this control.  Calling
     * this will overwrite any existing sync validators.
     */

  AbstractControl.prototype.setValidators =
  /**
  * Sets the synchronous validators that are active on this control.  Calling
  * this will overwrite any existing sync validators.
  */
  function (newValidator) {
    this.validator = coerceToValidator(newValidator);
  };
  /**
   * Sets the async validators that are active on this control. Calling this
   * will overwrite any existing async validators.
   */

  /**
     * Sets the async validators that are active on this control. Calling this
     * will overwrite any existing async validators.
     */


  AbstractControl.prototype.setAsyncValidators =
  /**
  * Sets the async validators that are active on this control. Calling this
  * will overwrite any existing async validators.
  */
  function (newValidator) {
    this.asyncValidator = coerceToAsyncValidator(newValidator);
  };
  /**
   * Empties out the sync validator list.
   */

  /**
     * Empties out the sync validator list.
     */


  AbstractControl.prototype.clearValidators =
  /**
  * Empties out the sync validator list.
  */
  function () {
    this.validator = null;
  };
  /**
   * Empties out the async validator list.
   */

  /**
     * Empties out the async validator list.
     */


  AbstractControl.prototype.clearAsyncValidators =
  /**
  * Empties out the async validator list.
  */
  function () {
    this.asyncValidator = null;
  };
  /**
   * Marks the control as `touched`.
   *
   * This will also mark all direct ancestors as `touched` to maintain
   * the model.
   */

  /**
     * Marks the control as `touched`.
     *
     * This will also mark all direct ancestors as `touched` to maintain
     * the model.
     */


  AbstractControl.prototype.markAsTouched =
  /**
  * Marks the control as `touched`.
  *
  * This will also mark all direct ancestors as `touched` to maintain
  * the model.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.touched = true;

    if (this._parent && !opts.onlySelf) {
      this._parent.markAsTouched(opts);
    }
  };
  /**
   * Marks the control as `untouched`.
   *
   * If the control has any children, it will also mark all children as `untouched`
   * to maintain the model, and re-calculate the `touched` status of all parent
   * controls.
   */

  /**
     * Marks the control as `untouched`.
     *
     * If the control has any children, it will also mark all children as `untouched`
     * to maintain the model, and re-calculate the `touched` status of all parent
     * controls.
     */


  AbstractControl.prototype.markAsUntouched =
  /**
  * Marks the control as `untouched`.
  *
  * If the control has any children, it will also mark all children as `untouched`
  * to maintain the model, and re-calculate the `touched` status of all parent
  * controls.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.touched = false;
    this._pendingTouched = false;

    this._forEachChild(function (control) {
      control.markAsUntouched({
        onlySelf: true
      });
    });

    if (this._parent && !opts.onlySelf) {
      this._parent._updateTouched(opts);
    }
  };
  /**
   * Marks the control as `dirty`.
   *
   * This will also mark all direct ancestors as `dirty` to maintain
   * the model.
   */

  /**
     * Marks the control as `dirty`.
     *
     * This will also mark all direct ancestors as `dirty` to maintain
     * the model.
     */


  AbstractControl.prototype.markAsDirty =
  /**
  * Marks the control as `dirty`.
  *
  * This will also mark all direct ancestors as `dirty` to maintain
  * the model.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.pristine = false;

    if (this._parent && !opts.onlySelf) {
      this._parent.markAsDirty(opts);
    }
  };
  /**
   * Marks the control as `pristine`.
   *
   * If the control has any children, it will also mark all children as `pristine`
   * to maintain the model, and re-calculate the `pristine` status of all parent
   * controls.
   */

  /**
     * Marks the control as `pristine`.
     *
     * If the control has any children, it will also mark all children as `pristine`
     * to maintain the model, and re-calculate the `pristine` status of all parent
     * controls.
     */


  AbstractControl.prototype.markAsPristine =
  /**
  * Marks the control as `pristine`.
  *
  * If the control has any children, it will also mark all children as `pristine`
  * to maintain the model, and re-calculate the `pristine` status of all parent
  * controls.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.pristine = true;
    this._pendingDirty = false;

    this._forEachChild(function (control) {
      control.markAsPristine({
        onlySelf: true
      });
    });

    if (this._parent && !opts.onlySelf) {
      this._parent._updatePristine(opts);
    }
  };
  /**
   * Marks the control as `pending`.
   *
   * An event will be emitted by `statusChanges` by default.
   *
   * Passing `false` for `emitEvent` will cause `statusChanges` to not event an event.
   */

  /**
     * Marks the control as `pending`.
     *
     * An event will be emitted by `statusChanges` by default.
     *
     * Passing `false` for `emitEvent` will cause `statusChanges` to not event an event.
     */


  AbstractControl.prototype.markAsPending =
  /**
  * Marks the control as `pending`.
  *
  * An event will be emitted by `statusChanges` by default.
  *
  * Passing `false` for `emitEvent` will cause `statusChanges` to not event an event.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.status = PENDING;

    if (opts.emitEvent !== false) {
      this.statusChanges.emit(this.status);
    }

    if (this._parent && !opts.onlySelf) {
      this._parent.markAsPending(opts);
    }
  };
  /**
   * Disables the control. This means the control will be exempt from validation checks and
   * excluded from the aggregate value of any parent. Its status is `DISABLED`.
   *
   * If the control has children, all children will be disabled to maintain the model.
   */

  /**
     * Disables the control. This means the control will be exempt from validation checks and
     * excluded from the aggregate value of any parent. Its status is `DISABLED`.
     *
     * If the control has children, all children will be disabled to maintain the model.
     */


  AbstractControl.prototype.disable =
  /**
  * Disables the control. This means the control will be exempt from validation checks and
  * excluded from the aggregate value of any parent. Its status is `DISABLED`.
  *
  * If the control has children, all children will be disabled to maintain the model.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.status = DISABLED;
    this.errors = null;

    this._forEachChild(function (control) {
      control.disable((0, _tslib.__assign)({}, opts, {
        onlySelf: true
      }));
    });

    this._updateValue();

    if (opts.emitEvent !== false) {
      this.valueChanges.emit(this.value);
      this.statusChanges.emit(this.status);
    }

    this._updateAncestors(opts);

    this._onDisabledChange.forEach(function (changeFn) {
      return changeFn(true);
    });
  };
  /**
   * Enables the control. This means the control will be included in validation checks and
   * the aggregate value of its parent. Its status is re-calculated based on its value and
   * its validators.
   *
   * If the control has children, all children will be enabled.
   */

  /**
     * Enables the control. This means the control will be included in validation checks and
     * the aggregate value of its parent. Its status is re-calculated based on its value and
     * its validators.
     *
     * If the control has children, all children will be enabled.
     */


  AbstractControl.prototype.enable =
  /**
  * Enables the control. This means the control will be included in validation checks and
  * the aggregate value of its parent. Its status is re-calculated based on its value and
  * its validators.
  *
  * If the control has children, all children will be enabled.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.status = VALID;

    this._forEachChild(function (control) {
      control.enable((0, _tslib.__assign)({}, opts, {
        onlySelf: true
      }));
    });

    this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: opts.emitEvent
    });

    this._updateAncestors(opts);

    this._onDisabledChange.forEach(function (changeFn) {
      return changeFn(false);
    });
  };

  AbstractControl.prototype._updateAncestors = function (opts) {
    if (this._parent && !opts.onlySelf) {
      this._parent.updateValueAndValidity(opts);

      this._parent._updatePristine();

      this._parent._updateTouched();
    }
  };

  AbstractControl.prototype.setParent = function (parent) {
    this._parent = parent;
  };
  /**
   * Re-calculates the value and validation status of the control.
   *
   * By default, it will also update the value and validity of its ancestors.
   */

  /**
     * Re-calculates the value and validation status of the control.
     *
     * By default, it will also update the value and validity of its ancestors.
     */


  AbstractControl.prototype.updateValueAndValidity =
  /**
  * Re-calculates the value and validation status of the control.
  *
  * By default, it will also update the value and validity of its ancestors.
  */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this._setInitialStatus();

    this._updateValue();

    if (this.enabled) {
      this._cancelExistingSubscription();

      this.errors = this._runValidator();
      this.status = this._calculateStatus();

      if (this.status === VALID || this.status === PENDING) {
        this._runAsyncValidator(opts.emitEvent);
      }
    }

    if (opts.emitEvent !== false) {
      this.valueChanges.emit(this.value);
      this.statusChanges.emit(this.status);
    }

    if (this._parent && !opts.onlySelf) {
      this._parent.updateValueAndValidity(opts);
    }
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._updateTreeValidity =
  /** @internal */
  function (opts) {
    if (opts === void 0) {
      opts = {
        emitEvent: true
      };
    }

    this._forEachChild(function (ctrl) {
      return ctrl._updateTreeValidity(opts);
    });

    this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: opts.emitEvent
    });
  };

  AbstractControl.prototype._setInitialStatus = function () {
    this.status = this._allControlsDisabled() ? DISABLED : VALID;
  };

  AbstractControl.prototype._runValidator = function () {
    return this.validator ? this.validator(this) : null;
  };

  AbstractControl.prototype._runAsyncValidator = function (emitEvent) {
    var _this = this;

    if (this.asyncValidator) {
      this.status = PENDING;
      var obs = toObservable(this.asyncValidator(this));
      this._asyncValidationSubscription = obs.subscribe(function (errors) {
        return _this.setErrors(errors, {
          emitEvent: emitEvent
        });
      });
    }
  };

  AbstractControl.prototype._cancelExistingSubscription = function () {
    if (this._asyncValidationSubscription) {
      this._asyncValidationSubscription.unsubscribe();
    }
  };
  /**
   * Sets errors on a form control.
   *
   * This is used when validations are run manually by the user, rather than automatically.
   *
   * Calling `setErrors` will also update the validity of the parent control.
   *
   * ### Example
   *
   * ```
   * const login = new FormControl("someLogin");
   * login.setErrors({
   *   "notUnique": true
   * });
   *
   * expect(login.valid).toEqual(false);
   * expect(login.errors).toEqual({"notUnique": true});
   *
   * login.setValue("someOtherLogin");
   *
   * expect(login.valid).toEqual(true);
   * ```
   */

  /**
     * Sets errors on a form control.
     *
     * This is used when validations are run manually by the user, rather than automatically.
     *
     * Calling `setErrors` will also update the validity of the parent control.
     *
     * ### Example
     *
     * ```
     * const login = new FormControl("someLogin");
     * login.setErrors({
     *   "notUnique": true
     * });
     *
     * expect(login.valid).toEqual(false);
     * expect(login.errors).toEqual({"notUnique": true});
     *
     * login.setValue("someOtherLogin");
     *
     * expect(login.valid).toEqual(true);
     * ```
     */


  AbstractControl.prototype.setErrors =
  /**
  * Sets errors on a form control.
  *
  * This is used when validations are run manually by the user, rather than automatically.
  *
  * Calling `setErrors` will also update the validity of the parent control.
  *
  * ### Example
  *
  * ```
  * const login = new FormControl("someLogin");
  * login.setErrors({
  *   "notUnique": true
  * });
  *
  * expect(login.valid).toEqual(false);
  * expect(login.errors).toEqual({"notUnique": true});
  *
  * login.setValue("someOtherLogin");
  *
  * expect(login.valid).toEqual(true);
  * ```
  */
  function (errors, opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.errors = errors;

    this._updateControlsErrors(opts.emitEvent !== false);
  };
  /**
   * Retrieves a child control given the control's name or path.
   *
   * Paths can be passed in as an array or a string delimited by a dot.
   *
   * To get a control nested within a `person` sub-group:
   *
   * * `this.form.get('person.name');`
   *
   * -OR-
   *
   * * `this.form.get(['person', 'name']);`
   */

  /**
     * Retrieves a child control given the control's name or path.
     *
     * Paths can be passed in as an array or a string delimited by a dot.
     *
     * To get a control nested within a `person` sub-group:
     *
     * * `this.form.get('person.name');`
     *
     * -OR-
     *
     * * `this.form.get(['person', 'name']);`
     */


  AbstractControl.prototype.get =
  /**
  * Retrieves a child control given the control's name or path.
  *
  * Paths can be passed in as an array or a string delimited by a dot.
  *
  * To get a control nested within a `person` sub-group:
  *
  * * `this.form.get('person.name');`
  *
  * -OR-
  *
  * * `this.form.get(['person', 'name']);`
  */
  function (path) {
    return _find(this, path, '.');
  };
  /**
   * Returns error data if the control with the given path has the error specified. Otherwise
   * returns null or undefined.
   *
   * If no path is given, it checks for the error on the present control.
   */

  /**
     * Returns error data if the control with the given path has the error specified. Otherwise
     * returns null or undefined.
     *
     * If no path is given, it checks for the error on the present control.
     */


  AbstractControl.prototype.getError =
  /**
  * Returns error data if the control with the given path has the error specified. Otherwise
  * returns null or undefined.
  *
  * If no path is given, it checks for the error on the present control.
  */
  function (errorCode, path) {
    var control = path ? this.get(path) : this;
    return control && control.errors ? control.errors[errorCode] : null;
  };
  /**
   * Returns true if the control with the given path has the error specified. Otherwise
   * returns false.
   *
   * If no path is given, it checks for the error on the present control.
   */

  /**
     * Returns true if the control with the given path has the error specified. Otherwise
     * returns false.
     *
     * If no path is given, it checks for the error on the present control.
     */


  AbstractControl.prototype.hasError =
  /**
  * Returns true if the control with the given path has the error specified. Otherwise
  * returns false.
  *
  * If no path is given, it checks for the error on the present control.
  */
  function (errorCode, path) {
    return !!this.getError(errorCode, path);
  };

  Object.defineProperty(AbstractControl.prototype, "root", {
    /**
     * Retrieves the top-level ancestor of this control.
     */
    get:
    /**
    * Retrieves the top-level ancestor of this control.
    */
    function get() {
      var x = this;

      while (x._parent) {
        x = x._parent;
      }

      return x;
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  /** @internal */

  AbstractControl.prototype._updateControlsErrors =
  /** @internal */
  function (emitEvent) {
    this.status = this._calculateStatus();

    if (emitEvent) {
      this.statusChanges.emit(this.status);
    }

    if (this._parent) {
      this._parent._updateControlsErrors(emitEvent);
    }
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._initObservables =
  /** @internal */
  function () {
    this.valueChanges = new _core.EventEmitter();
    this.statusChanges = new _core.EventEmitter();
  };

  AbstractControl.prototype._calculateStatus = function () {
    if (this._allControlsDisabled()) return DISABLED;
    if (this.errors) return INVALID;
    if (this._anyControlsHaveStatus(PENDING)) return PENDING;
    if (this._anyControlsHaveStatus(INVALID)) return INVALID;
    return VALID;
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._anyControlsHaveStatus =
  /** @internal */
  function (status) {
    return this._anyControls(function (control) {
      return control.status === status;
    });
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._anyControlsDirty =
  /** @internal */
  function () {
    return this._anyControls(function (control) {
      return control.dirty;
    });
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._anyControlsTouched =
  /** @internal */
  function () {
    return this._anyControls(function (control) {
      return control.touched;
    });
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._updatePristine =
  /** @internal */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.pristine = !this._anyControlsDirty();

    if (this._parent && !opts.onlySelf) {
      this._parent._updatePristine(opts);
    }
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._updateTouched =
  /** @internal */
  function (opts) {
    if (opts === void 0) {
      opts = {};
    }

    this.touched = this._anyControlsTouched();

    if (this._parent && !opts.onlySelf) {
      this._parent._updateTouched(opts);
    }
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._isBoxedValue =
  /** @internal */
  function (formState) {
    return _typeof(formState) === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._registerOnCollectionChange =
  /** @internal */
  function (fn) {
    this._onCollectionChange = fn;
  };
  /** @internal */

  /** @internal */


  AbstractControl.prototype._setUpdateStrategy =
  /** @internal */
  function (opts) {
    if (isOptionsObj(opts) && opts.updateOn != null) {
      this._updateOn = opts.updateOn;
    }
  };

  return AbstractControl;
}();
/**
 * @description
 *
 * Tracks the value and validation status of an individual form control.
 *
 * This is one of the three fundamental building blocks of Angular forms, along with
 * `FormGroup` and `FormArray`.
 *
 * When instantiating a `FormControl`, you can pass in an initial value as the
 * first argument. Example:
 *
 * ```ts
 * const ctrl = new FormControl('some value');
 * console.log(ctrl.value);     // 'some value'
 *```
 *
 * You can also initialize the control with a form state object on instantiation,
 * which includes both the value and whether or not the control is disabled.
 * You can't use the value key without the disabled key; both are required
 * to use this way of initialization.
 *
 * ```ts
 * const ctrl = new FormControl({value: 'n/a', disabled: true});
 * console.log(ctrl.value);     // 'n/a'
 * console.log(ctrl.status);   // 'DISABLED'
 * ```
 *
 * The second `FormControl` argument can accept one of three things:
 * * a sync validator function
 * * an array of sync validator functions
 * * an options object containing validator and/or async validator functions
 *
 * Example of a single sync validator function:
 *
 * ```ts
 * const ctrl = new FormControl('', Validators.required);
 * console.log(ctrl.value);     // ''
 * console.log(ctrl.status);   // 'INVALID'
 * ```
 *
 * Example using options object:
 *
 * ```ts
 * const ctrl = new FormControl('', {
 *    validators: Validators.required,
 *    asyncValidators: myAsyncValidator
 * });
 * ```
 *
 * The options object can also be used to define when the control should update.
 * By default, the value and validity of a control updates whenever the value
 * changes. You can configure it to update on the blur event instead by setting
 * the `updateOn` option to `'blur'`.
 *
 * ```ts
 * const c = new FormControl('', { updateOn: 'blur' });
 * ```
 *
 * You can also set `updateOn` to `'submit'`, which will delay value and validity
 * updates until the parent form of the control fires a submit event.
 *
 * See its superclass, `AbstractControl`, for more properties and methods.
 *
 * * **npm package**: `@angular/forms`
 *
 *
 */


exports.AbstractControl = AbstractControl;

var FormControl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormControl, _super);

  function FormControl(formState, validatorOrOpts, asyncValidator) {
    if (formState === void 0) {
      formState = null;
    }

    var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;
    /** @internal */


    _this._onChange = [];

    _this._applyFormState(formState);

    _this._setUpdateStrategy(validatorOrOpts);

    _this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: false
    });

    _this._initObservables();

    return _this;
  }
  /**
   * Set the value of the form control to `value`.
   *
   * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`
   * and not its parent component. This defaults to false.
   *
   * If `emitEvent` is `true`, this
   * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults
   * to true (as it falls through to `updateValueAndValidity`).
   *
   * If `emitModelToViewChange` is `true`, the view will be notified about the new value
   * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not
   * specified.
   *
   * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the
   * model.  This is the default behavior if `emitViewToModelChange` is not specified.
   */

  /**
     * Set the value of the form control to `value`.
     *
     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`
     * and not its parent component. This defaults to false.
     *
     * If `emitEvent` is `true`, this
     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults
     * to true (as it falls through to `updateValueAndValidity`).
     *
     * If `emitModelToViewChange` is `true`, the view will be notified about the new value
     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not
     * specified.
     *
     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the
     * model.  This is the default behavior if `emitViewToModelChange` is not specified.
     */


  FormControl.prototype.setValue =
  /**
  * Set the value of the form control to `value`.
  *
  * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`
  * and not its parent component. This defaults to false.
  *
  * If `emitEvent` is `true`, this
  * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults
  * to true (as it falls through to `updateValueAndValidity`).
  *
  * If `emitModelToViewChange` is `true`, the view will be notified about the new value
  * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not
  * specified.
  *
  * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the
  * model.  This is the default behavior if `emitViewToModelChange` is not specified.
  */
  function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    this.value = this._pendingValue = value;

    if (this._onChange.length && options.emitModelToViewChange !== false) {
      this._onChange.forEach(function (changeFn) {
        return changeFn(_this.value, options.emitViewToModelChange !== false);
      });
    }

    this.updateValueAndValidity(options);
  };
  /**
   * Patches the value of a control.
   *
   * This function is functionally the same as {@link FormControl#setValue setValue} at this level.
   * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and
   * `FormArrays`, where it does behave differently.
   */

  /**
     * Patches the value of a control.
     *
     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.
     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and
     * `FormArrays`, where it does behave differently.
     */


  FormControl.prototype.patchValue =
  /**
  * Patches the value of a control.
  *
  * This function is functionally the same as {@link FormControl#setValue setValue} at this level.
  * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and
  * `FormArrays`, where it does behave differently.
  */
  function (value, options) {
    if (options === void 0) {
      options = {};
    }

    this.setValue(value, options);
  };
  /**
   * Resets the form control. This means by default:
   *
   * * it is marked as `pristine`
   * * it is marked as `untouched`
   * * value is set to null
   *
   * You can also reset to a specific form state by passing through a standalone
   * value or a form state object that contains both a value and a disabled state
   * (these are the only two properties that cannot be calculated).
   *
   * Ex:
   *
   * ```ts
   * this.control.reset('Nancy');
   *
   * console.log(this.control.value);  // 'Nancy'
   * ```
   *
   * OR
   *
   * ```
   * this.control.reset({value: 'Nancy', disabled: true});
   *
   * console.log(this.control.value);  // 'Nancy'
   * console.log(this.control.status);  // 'DISABLED'
   * ```
   */

  /**
     * Resets the form control. This means by default:
     *
     * * it is marked as `pristine`
     * * it is marked as `untouched`
     * * value is set to null
     *
     * You can also reset to a specific form state by passing through a standalone
     * value or a form state object that contains both a value and a disabled state
     * (these are the only two properties that cannot be calculated).
     *
     * Ex:
     *
     * ```ts
     * this.control.reset('Nancy');
     *
     * console.log(this.control.value);  // 'Nancy'
     * ```
     *
     * OR
     *
     * ```
     * this.control.reset({value: 'Nancy', disabled: true});
     *
     * console.log(this.control.value);  // 'Nancy'
     * console.log(this.control.status);  // 'DISABLED'
     * ```
     */


  FormControl.prototype.reset =
  /**
  * Resets the form control. This means by default:
  *
  * * it is marked as `pristine`
  * * it is marked as `untouched`
  * * value is set to null
  *
  * You can also reset to a specific form state by passing through a standalone
  * value or a form state object that contains both a value and a disabled state
  * (these are the only two properties that cannot be calculated).
  *
  * Ex:
  *
  * ```ts
  * this.control.reset('Nancy');
  *
  * console.log(this.control.value);  // 'Nancy'
  * ```
  *
  * OR
  *
  * ```
  * this.control.reset({value: 'Nancy', disabled: true});
  *
  * console.log(this.control.value);  // 'Nancy'
  * console.log(this.control.status);  // 'DISABLED'
  * ```
  */
  function (formState, options) {
    if (formState === void 0) {
      formState = null;
    }

    if (options === void 0) {
      options = {};
    }

    this._applyFormState(formState);

    this.markAsPristine(options);
    this.markAsUntouched(options);
    this.setValue(this.value, options);
    this._pendingChange = false;
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  FormControl.prototype._updateValue =
  /**
  * @internal
  */
  function () {};
  /**
   * @internal
   */

  /**
     * @internal
     */


  FormControl.prototype._anyControls =
  /**
  * @internal
  */
  function (condition) {
    return false;
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  FormControl.prototype._allControlsDisabled =
  /**
  * @internal
  */
  function () {
    return this.disabled;
  };
  /**
   * Register a listener for change events.
   */

  /**
     * Register a listener for change events.
     */


  FormControl.prototype.registerOnChange =
  /**
  * Register a listener for change events.
  */
  function (fn) {
    this._onChange.push(fn);
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  FormControl.prototype._clearChangeFns =
  /**
  * @internal
  */
  function () {
    this._onChange = [];
    this._onDisabledChange = [];

    this._onCollectionChange = function () {};
  };
  /**
   * Register a listener for disabled events.
   */

  /**
     * Register a listener for disabled events.
     */


  FormControl.prototype.registerOnDisabledChange =
  /**
  * Register a listener for disabled events.
  */
  function (fn) {
    this._onDisabledChange.push(fn);
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  FormControl.prototype._forEachChild =
  /**
  * @internal
  */
  function (cb) {};
  /** @internal */

  /** @internal */


  FormControl.prototype._syncPendingControls =
  /** @internal */
  function () {
    if (this.updateOn === 'submit') {
      if (this._pendingDirty) this.markAsDirty();
      if (this._pendingTouched) this.markAsTouched();

      if (this._pendingChange) {
        this.setValue(this._pendingValue, {
          onlySelf: true,
          emitModelToViewChange: false
        });
        return true;
      }
    }

    return false;
  };

  FormControl.prototype._applyFormState = function (formState) {
    if (this._isBoxedValue(formState)) {
      this.value = this._pendingValue = formState.value;
      formState.disabled ? this.disable({
        onlySelf: true,
        emitEvent: false
      }) : this.enable({
        onlySelf: true,
        emitEvent: false
      });
    } else {
      this.value = this._pendingValue = formState;
    }
  };

  return FormControl;
}(AbstractControl);
/**
 * @description
 *
 * Tracks the value and validity state of a group of `FormControl` instances.
 *
 * A `FormGroup` aggregates the values of each child `FormControl` into one object,
 * with each control name as the key.  It calculates its status by reducing the statuses
 * of its children. For example, if one of the controls in a group is invalid, the entire
 * group becomes invalid.
 *
 * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,
 * along with `FormControl` and `FormArray`.
 *
 * When instantiating a `FormGroup`, pass in a collection of child controls as the first
 * argument. The key for each child will be the name under which it is registered.
 *
 * ### Example
 *
 * ```
 * const form = new FormGroup({
 *   first: new FormControl('Nancy', Validators.minLength(2)),
 *   last: new FormControl('Drew'),
 * });
 *
 * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}
 * console.log(form.status);  // 'VALID'
 * ```
 *
 * You can also include group-level validators as the second arg, or group-level async
 * validators as the third arg. These come in handy when you want to perform validation
 * that considers the value of more than one child control.
 *
 * ### Example
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('', Validators.minLength(2)),
 *   passwordConfirm: new FormControl('', Validators.minLength(2)),
 * }, passwordMatchValidator);
 *
 *
 * function passwordMatchValidator(g: FormGroup) {
 *    return g.get('password').value === g.get('passwordConfirm').value
 *       ? null : {'mismatch': true};
 * }
 * ```
 *
 * Like `FormControl` instances, you can alternatively choose to pass in
 * validators and async validators as part of an options object.
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('')
 *   passwordConfirm: new FormControl('')
 * }, {validators: passwordMatchValidator, asyncValidators: otherValidator});
 * ```
 *
 * The options object can also be used to set a default value for each child
 * control's `updateOn` property. If you set `updateOn` to `'blur'` at the
 * group level, all child controls will default to 'blur', unless the child
 * has explicitly specified a different `updateOn` value.
 *
 * ```ts
 * const c = new FormGroup({
 *    one: new FormControl()
 * }, {updateOn: 'blur'});
 * ```
 *
 * * **npm package**: `@angular/forms`
 *
 *
 */


exports.FormControl = FormControl;

var FormGroup =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormGroup, _super);

  function FormGroup(controls, validatorOrOpts, asyncValidator) {
    var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;

    _this.controls = controls;

    _this._initObservables();

    _this._setUpdateStrategy(validatorOrOpts);

    _this._setUpControls();

    _this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: false
    });

    return _this;
  }
  /**
   * Registers a control with the group's list of controls.
   *
   * This method does not update the value or validity of the control, so for most cases you'll want
   * to use {@link FormGroup#addControl addControl} instead.
   */

  /**
     * Registers a control with the group's list of controls.
     *
     * This method does not update the value or validity of the control, so for most cases you'll want
     * to use {@link FormGroup#addControl addControl} instead.
     */


  FormGroup.prototype.registerControl =
  /**
  * Registers a control with the group's list of controls.
  *
  * This method does not update the value or validity of the control, so for most cases you'll want
  * to use {@link FormGroup#addControl addControl} instead.
  */
  function (name, control) {
    if (this.controls[name]) return this.controls[name];
    this.controls[name] = control;
    control.setParent(this);

    control._registerOnCollectionChange(this._onCollectionChange);

    return control;
  };
  /**
   * Add a control to this group.
   */

  /**
     * Add a control to this group.
     */


  FormGroup.prototype.addControl =
  /**
  * Add a control to this group.
  */
  function (name, control) {
    this.registerControl(name, control);
    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /**
   * Remove a control from this group.
   */

  /**
     * Remove a control from this group.
     */


  FormGroup.prototype.removeControl =
  /**
  * Remove a control from this group.
  */
  function (name) {
    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(function () {});
    delete this.controls[name];
    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /**
   * Replace an existing control.
   */

  /**
     * Replace an existing control.
     */


  FormGroup.prototype.setControl =
  /**
  * Replace an existing control.
  */
  function (name, control) {
    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(function () {});
    delete this.controls[name];
    if (control) this.registerControl(name, control);
    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /**
   * Check whether there is an enabled control with the given name in the group.
   *
   * It will return false for disabled controls. If you'd like to check for existence in the group
   * only, use {@link AbstractControl#get get} instead.
   */

  /**
     * Check whether there is an enabled control with the given name in the group.
     *
     * It will return false for disabled controls. If you'd like to check for existence in the group
     * only, use {@link AbstractControl#get get} instead.
     */


  FormGroup.prototype.contains =
  /**
  * Check whether there is an enabled control with the given name in the group.
  *
  * It will return false for disabled controls. If you'd like to check for existence in the group
  * only, use {@link AbstractControl#get get} instead.
  */
  function (controlName) {
    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;
  };
  /**
   *  Sets the value of the `FormGroup`. It accepts an object that matches
   *  the structure of the group, with control names as keys.
   *
   *  ### Example
   *
   *  ```
   *  const form = new FormGroup({
   *     first: new FormControl(),
   *     last: new FormControl()
   *  });
   *  console.log(form.value);   // {first: null, last: null}
   *
   *  form.setValue({first: 'Nancy', last: 'Drew'});
   *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}
   *
   *  ```
   * @throws This method performs strict checks, so it will throw an error if you try
   * to set the value of a control that doesn't exist or if you exclude the
   * value of a control.
   */

  /**
     *  Sets the value of the `FormGroup`. It accepts an object that matches
     *  the structure of the group, with control names as keys.
     *
     *  ### Example
     *
     *  ```
     *  const form = new FormGroup({
     *     first: new FormControl(),
     *     last: new FormControl()
     *  });
     *  console.log(form.value);   // {first: null, last: null}
     *
     *  form.setValue({first: 'Nancy', last: 'Drew'});
     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}
     *
     *  ```
     * @throws This method performs strict checks, so it will throw an error if you try
     * to set the value of a control that doesn't exist or if you exclude the
     * value of a control.
     */


  FormGroup.prototype.setValue =
  /**
  *  Sets the value of the `FormGroup`. It accepts an object that matches
  *  the structure of the group, with control names as keys.
  *
  *  ### Example
  *
  *  ```
  *  const form = new FormGroup({
  *     first: new FormControl(),
  *     last: new FormControl()
  *  });
  *  console.log(form.value);   // {first: null, last: null}
  *
  *  form.setValue({first: 'Nancy', last: 'Drew'});
  *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}
  *
  *  ```
  * @throws This method performs strict checks, so it will throw an error if you try
  * to set the value of a control that doesn't exist or if you exclude the
  * value of a control.
  */
  function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    this._checkAllValuesPresent(value);

    Object.keys(value).forEach(function (name) {
      _this._throwIfControlMissing(name);

      _this.controls[name].setValue(value[name], {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });
    this.updateValueAndValidity(options);
  };
  /**
   *  Patches the value of the `FormGroup`. It accepts an object with control
   *  names as keys, and will do its best to match the values to the correct controls
   *  in the group.
   *
   *  It accepts both super-sets and sub-sets of the group without throwing an error.
   *
   *  ### Example
   *
   *  ```
   *  const form = new FormGroup({
   *     first: new FormControl(),
   *     last: new FormControl()
   *  });
   *  console.log(form.value);   // {first: null, last: null}
   *
   *  form.patchValue({first: 'Nancy'});
   *  console.log(form.value);   // {first: 'Nancy', last: null}
   *
   *  ```
   */

  /**
     *  Patches the value of the `FormGroup`. It accepts an object with control
     *  names as keys, and will do its best to match the values to the correct controls
     *  in the group.
     *
     *  It accepts both super-sets and sub-sets of the group without throwing an error.
     *
     *  ### Example
     *
     *  ```
     *  const form = new FormGroup({
     *     first: new FormControl(),
     *     last: new FormControl()
     *  });
     *  console.log(form.value);   // {first: null, last: null}
     *
     *  form.patchValue({first: 'Nancy'});
     *  console.log(form.value);   // {first: 'Nancy', last: null}
     *
     *  ```
     */


  FormGroup.prototype.patchValue =
  /**
  *  Patches the value of the `FormGroup`. It accepts an object with control
  *  names as keys, and will do its best to match the values to the correct controls
  *  in the group.
  *
  *  It accepts both super-sets and sub-sets of the group without throwing an error.
  *
  *  ### Example
  *
  *  ```
  *  const form = new FormGroup({
  *     first: new FormControl(),
  *     last: new FormControl()
  *  });
  *  console.log(form.value);   // {first: null, last: null}
  *
  *  form.patchValue({first: 'Nancy'});
  *  console.log(form.value);   // {first: 'Nancy', last: null}
  *
  *  ```
  */
  function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    Object.keys(value).forEach(function (name) {
      if (_this.controls[name]) {
        _this.controls[name].patchValue(value[name], {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      }
    });
    this.updateValueAndValidity(options);
  };
  /**
   * Resets the `FormGroup`. This means by default:
   *
   * * The group and all descendants are marked `pristine`
   * * The group and all descendants are marked `untouched`
   * * The value of all descendants will be null or null maps
   *
   * You can also reset to a specific form state by passing in a map of states
   * that matches the structure of your form, with control names as keys. The state
   * can be a standalone value or a form state object with both a value and a disabled
   * status.
   *
   * ### Example
   *
   * ```ts
   * this.form.reset({first: 'name', last: 'last name'});
   *
   * console.log(this.form.value);  // {first: 'name', last: 'last name'}
   * ```
   *
   * - OR -
   *
   * ```
   * this.form.reset({
   *   first: {value: 'name', disabled: true},
   *   last: 'last'
   * });
   *
   * console.log(this.form.value);  // {first: 'name', last: 'last name'}
   * console.log(this.form.get('first').status);  // 'DISABLED'
   * ```
   */

  /**
     * Resets the `FormGroup`. This means by default:
     *
     * * The group and all descendants are marked `pristine`
     * * The group and all descendants are marked `untouched`
     * * The value of all descendants will be null or null maps
     *
     * You can also reset to a specific form state by passing in a map of states
     * that matches the structure of your form, with control names as keys. The state
     * can be a standalone value or a form state object with both a value and a disabled
     * status.
     *
     * ### Example
     *
     * ```ts
     * this.form.reset({first: 'name', last: 'last name'});
     *
     * console.log(this.form.value);  // {first: 'name', last: 'last name'}
     * ```
     *
     * - OR -
     *
     * ```
     * this.form.reset({
     *   first: {value: 'name', disabled: true},
     *   last: 'last'
     * });
     *
     * console.log(this.form.value);  // {first: 'name', last: 'last name'}
     * console.log(this.form.get('first').status);  // 'DISABLED'
     * ```
     */


  FormGroup.prototype.reset =
  /**
  * Resets the `FormGroup`. This means by default:
  *
  * * The group and all descendants are marked `pristine`
  * * The group and all descendants are marked `untouched`
  * * The value of all descendants will be null or null maps
  *
  * You can also reset to a specific form state by passing in a map of states
  * that matches the structure of your form, with control names as keys. The state
  * can be a standalone value or a form state object with both a value and a disabled
  * status.
  *
  * ### Example
  *
  * ```ts
  * this.form.reset({first: 'name', last: 'last name'});
  *
  * console.log(this.form.value);  // {first: 'name', last: 'last name'}
  * ```
  *
  * - OR -
  *
  * ```
  * this.form.reset({
  *   first: {value: 'name', disabled: true},
  *   last: 'last'
  * });
  *
  * console.log(this.form.value);  // {first: 'name', last: 'last name'}
  * console.log(this.form.get('first').status);  // 'DISABLED'
  * ```
  */
  function (value, options) {
    if (value === void 0) {
      value = {};
    }

    if (options === void 0) {
      options = {};
    }

    this._forEachChild(function (control, name) {
      control.reset(value[name], {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });

    this.updateValueAndValidity(options);

    this._updatePristine(options);

    this._updateTouched(options);
  };
  /**
   * The aggregate value of the `FormGroup`, including any disabled controls.
   *
   * If you'd like to include all values regardless of disabled status, use this method.
   * Otherwise, the `value` property is the best way to get the value of the group.
   */

  /**
     * The aggregate value of the `FormGroup`, including any disabled controls.
     *
     * If you'd like to include all values regardless of disabled status, use this method.
     * Otherwise, the `value` property is the best way to get the value of the group.
     */


  FormGroup.prototype.getRawValue =
  /**
  * The aggregate value of the `FormGroup`, including any disabled controls.
  *
  * If you'd like to include all values regardless of disabled status, use this method.
  * Otherwise, the `value` property is the best way to get the value of the group.
  */
  function () {
    return this._reduceChildren({}, function (acc, control, name) {
      acc[name] = control instanceof FormControl ? control.value : control.getRawValue();
      return acc;
    });
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._syncPendingControls =
  /** @internal */
  function () {
    var subtreeUpdated = this._reduceChildren(false, function (updated, child) {
      return child._syncPendingControls() ? true : updated;
    });

    if (subtreeUpdated) this.updateValueAndValidity({
      onlySelf: true
    });
    return subtreeUpdated;
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._throwIfControlMissing =
  /** @internal */
  function (name) {
    if (!Object.keys(this.controls).length) {
      throw new Error("\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
    }

    if (!this.controls[name]) {
      throw new Error("Cannot find form control with name: " + name + ".");
    }
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._forEachChild =
  /** @internal */
  function (cb) {
    var _this = this;

    Object.keys(this.controls).forEach(function (k) {
      return cb(_this.controls[k], k);
    });
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._setUpControls =
  /** @internal */
  function () {
    var _this = this;

    this._forEachChild(function (control) {
      control.setParent(_this);

      control._registerOnCollectionChange(_this._onCollectionChange);
    });
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._updateValue =
  /** @internal */
  function () {
    this.value = this._reduceValue();
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._anyControls =
  /** @internal */
  function (condition) {
    var _this = this;

    var res = false;

    this._forEachChild(function (control, name) {
      res = res || _this.contains(name) && condition(control);
    });

    return res;
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._reduceValue =
  /** @internal */
  function () {
    var _this = this;

    return this._reduceChildren({}, function (acc, control, name) {
      if (control.enabled || _this.disabled) {
        acc[name] = control.value;
      }

      return acc;
    });
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._reduceChildren =
  /** @internal */
  function (initValue, fn) {
    var res = initValue;

    this._forEachChild(function (control, name) {
      res = fn(res, control, name);
    });

    return res;
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._allControlsDisabled =
  /** @internal */
  function () {
    try {
      for (var _a = (0, _tslib.__values)(Object.keys(this.controls)), _b = _a.next(); !_b.done; _b = _a.next()) {
        var controlName = _b.value;

        if (this.controls[controlName].enabled) {
          return false;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return Object.keys(this.controls).length > 0 || this.disabled;

    var e_1, _c;
  };
  /** @internal */

  /** @internal */


  FormGroup.prototype._checkAllValuesPresent =
  /** @internal */
  function (value) {
    this._forEachChild(function (control, name) {
      if (value[name] === undefined) {
        throw new Error("Must supply a value for form control with name: '" + name + "'.");
      }
    });
  };

  return FormGroup;
}(AbstractControl);
/**
 * @description
 *
 * Tracks the value and validity state of an array of `FormControl`,
 * `FormGroup` or `FormArray` instances.
 *
 * A `FormArray` aggregates the values of each child `FormControl` into an array.
 * It calculates its status by reducing the statuses of its children. For example, if one of
 * the controls in a `FormArray` is invalid, the entire array becomes invalid.
 *
 * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,
 * along with `FormControl` and `FormGroup`.
 *
 * When instantiating a `FormArray`, pass in an array of child controls as the first
 * argument.
 *
 * ### Example
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy', Validators.minLength(2)),
 *   new FormControl('Drew'),
 * ]);
 *
 * console.log(arr.value);   // ['Nancy', 'Drew']
 * console.log(arr.status);  // 'VALID'
 * ```
 *
 * You can also include array-level validators and async validators. These come in handy
 * when you want to perform validation that considers the value of more than one child
 * control.
 *
 * The two types of validators can be passed in separately as the second and third arg
 * respectively, or together as part of an options object.
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy'),
 *   new FormControl('Drew')
 * ], {validators: myValidator, asyncValidators: myAsyncValidator});
 * ```
 *
 * The options object can also be used to set a default value for each child
 * control's `updateOn` property. If you set `updateOn` to `'blur'` at the
 * array level, all child controls will default to 'blur', unless the child
 * has explicitly specified a different `updateOn` value.
 *
 * ```ts
 * const c = new FormArray([
 *    new FormControl()
 * ], {updateOn: 'blur'});
 * ```
 *
 * ### Adding or removing controls
 *
 * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods
 * in `FormArray` itself. These methods ensure the controls are properly tracked in the
 * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate
 * the `FormArray` directly, as that will result in strange and unexpected behavior such
 * as broken change detection.
 *
 * * **npm package**: `@angular/forms`
 *
 *
 */


exports.FormGroup = FormGroup;

var FormArray =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormArray, _super);

  function FormArray(controls, validatorOrOpts, asyncValidator) {
    var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;

    _this.controls = controls;

    _this._initObservables();

    _this._setUpdateStrategy(validatorOrOpts);

    _this._setUpControls();

    _this.updateValueAndValidity({
      onlySelf: true,
      emitEvent: false
    });

    return _this;
  }
  /**
   * Get the `AbstractControl` at the given `index` in the array.
   */

  /**
     * Get the `AbstractControl` at the given `index` in the array.
     */


  FormArray.prototype.at =
  /**
  * Get the `AbstractControl` at the given `index` in the array.
  */
  function (index) {
    return this.controls[index];
  };
  /**
   * Insert a new `AbstractControl` at the end of the array.
   */

  /**
     * Insert a new `AbstractControl` at the end of the array.
     */


  FormArray.prototype.push =
  /**
  * Insert a new `AbstractControl` at the end of the array.
  */
  function (control) {
    this.controls.push(control);

    this._registerControl(control);

    this.updateValueAndValidity();

    this._onCollectionChange();
  };
  /** Insert a new `AbstractControl` at the given `index` in the array. */

  /** Insert a new `AbstractControl` at the given `index` in the array. */


  FormArray.prototype.insert =
  /** Insert a new `AbstractControl` at the given `index` in the array. */
  function (index, control) {
    this.controls.splice(index, 0, control);

    this._registerControl(control);

    this.updateValueAndValidity();
  };
  /** Remove the control at the given `index` in the array. */

  /** Remove the control at the given `index` in the array. */


  FormArray.prototype.removeAt =
  /** Remove the control at the given `index` in the array. */
  function (index) {
    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(function () {});
    this.controls.splice(index, 1);
    this.updateValueAndValidity();
  };
  /**
   * Replace an existing control.
   */

  /**
     * Replace an existing control.
     */


  FormArray.prototype.setControl =
  /**
  * Replace an existing control.
  */
  function (index, control) {
    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(function () {});
    this.controls.splice(index, 1);

    if (control) {
      this.controls.splice(index, 0, control);

      this._registerControl(control);
    }

    this.updateValueAndValidity();

    this._onCollectionChange();
  };

  Object.defineProperty(FormArray.prototype, "length", {
    /**
     * Length of the control array.
     */
    get:
    /**
    * Length of the control array.
    */
    function get() {
      return this.controls.length;
    },
    enumerable: true,
    configurable: true
  });
  /**
   *  Sets the value of the `FormArray`. It accepts an array that matches
   *  the structure of the control.
   *
   * This method performs strict checks, so it will throw an error if you try
   * to set the value of a control that doesn't exist or if you exclude the
   * value of a control.
   *
   *  ### Example
   *
   *  ```
   *  const arr = new FormArray([
   *     new FormControl(),
   *     new FormControl()
   *  ]);
   *  console.log(arr.value);   // [null, null]
   *
   *  arr.setValue(['Nancy', 'Drew']);
   *  console.log(arr.value);   // ['Nancy', 'Drew']
   *  ```
   */

  /**
     *  Sets the value of the `FormArray`. It accepts an array that matches
     *  the structure of the control.
     *
     * This method performs strict checks, so it will throw an error if you try
     * to set the value of a control that doesn't exist or if you exclude the
     * value of a control.
     *
     *  ### Example
     *
     *  ```
     *  const arr = new FormArray([
     *     new FormControl(),
     *     new FormControl()
     *  ]);
     *  console.log(arr.value);   // [null, null]
     *
     *  arr.setValue(['Nancy', 'Drew']);
     *  console.log(arr.value);   // ['Nancy', 'Drew']
     *  ```
     */

  FormArray.prototype.setValue =
  /**
  *  Sets the value of the `FormArray`. It accepts an array that matches
  *  the structure of the control.
  *
  * This method performs strict checks, so it will throw an error if you try
  * to set the value of a control that doesn't exist or if you exclude the
  * value of a control.
  *
  *  ### Example
  *
  *  ```
  *  const arr = new FormArray([
  *     new FormControl(),
  *     new FormControl()
  *  ]);
  *  console.log(arr.value);   // [null, null]
  *
  *  arr.setValue(['Nancy', 'Drew']);
  *  console.log(arr.value);   // ['Nancy', 'Drew']
  *  ```
  */
  function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    this._checkAllValuesPresent(value);

    value.forEach(function (newValue, index) {
      _this._throwIfControlMissing(index);

      _this.at(index).setValue(newValue, {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });
    this.updateValueAndValidity(options);
  };
  /**
   *  Patches the value of the `FormArray`. It accepts an array that matches the
   *  structure of the control, and will do its best to match the values to the correct
   *  controls in the group.
   *
   *  It accepts both super-sets and sub-sets of the array without throwing an error.
   *
   *  ### Example
   *
   *  ```
   *  const arr = new FormArray([
   *     new FormControl(),
   *     new FormControl()
   *  ]);
   *  console.log(arr.value);   // [null, null]
   *
   *  arr.patchValue(['Nancy']);
   *  console.log(arr.value);   // ['Nancy', null]
   *  ```
   */

  /**
     *  Patches the value of the `FormArray`. It accepts an array that matches the
     *  structure of the control, and will do its best to match the values to the correct
     *  controls in the group.
     *
     *  It accepts both super-sets and sub-sets of the array without throwing an error.
     *
     *  ### Example
     *
     *  ```
     *  const arr = new FormArray([
     *     new FormControl(),
     *     new FormControl()
     *  ]);
     *  console.log(arr.value);   // [null, null]
     *
     *  arr.patchValue(['Nancy']);
     *  console.log(arr.value);   // ['Nancy', null]
     *  ```
     */


  FormArray.prototype.patchValue =
  /**
  *  Patches the value of the `FormArray`. It accepts an array that matches the
  *  structure of the control, and will do its best to match the values to the correct
  *  controls in the group.
  *
  *  It accepts both super-sets and sub-sets of the array without throwing an error.
  *
  *  ### Example
  *
  *  ```
  *  const arr = new FormArray([
  *     new FormControl(),
  *     new FormControl()
  *  ]);
  *  console.log(arr.value);   // [null, null]
  *
  *  arr.patchValue(['Nancy']);
  *  console.log(arr.value);   // ['Nancy', null]
  *  ```
  */
  function (value, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    value.forEach(function (newValue, index) {
      if (_this.at(index)) {
        _this.at(index).patchValue(newValue, {
          onlySelf: true,
          emitEvent: options.emitEvent
        });
      }
    });
    this.updateValueAndValidity(options);
  };
  /**
   * Resets the `FormArray`. This means by default:
   *
   * * The array and all descendants are marked `pristine`
   * * The array and all descendants are marked `untouched`
   * * The value of all descendants will be null or null maps
   *
   * You can also reset to a specific form state by passing in an array of states
   * that matches the structure of the control. The state can be a standalone value
   * or a form state object with both a value and a disabled status.
   *
   * ### Example
   *
   * ```ts
   * this.arr.reset(['name', 'last name']);
   *
   * console.log(this.arr.value);  // ['name', 'last name']
   * ```
   *
   * - OR -
   *
   * ```
   * this.arr.reset([
   *   {value: 'name', disabled: true},
   *   'last'
   * ]);
   *
   * console.log(this.arr.value);  // ['name', 'last name']
   * console.log(this.arr.get(0).status);  // 'DISABLED'
   * ```
   */

  /**
     * Resets the `FormArray`. This means by default:
     *
     * * The array and all descendants are marked `pristine`
     * * The array and all descendants are marked `untouched`
     * * The value of all descendants will be null or null maps
     *
     * You can also reset to a specific form state by passing in an array of states
     * that matches the structure of the control. The state can be a standalone value
     * or a form state object with both a value and a disabled status.
     *
     * ### Example
     *
     * ```ts
     * this.arr.reset(['name', 'last name']);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * ```
     *
     * - OR -
     *
     * ```
     * this.arr.reset([
     *   {value: 'name', disabled: true},
     *   'last'
     * ]);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * console.log(this.arr.get(0).status);  // 'DISABLED'
     * ```
     */


  FormArray.prototype.reset =
  /**
  * Resets the `FormArray`. This means by default:
  *
  * * The array and all descendants are marked `pristine`
  * * The array and all descendants are marked `untouched`
  * * The value of all descendants will be null or null maps
  *
  * You can also reset to a specific form state by passing in an array of states
  * that matches the structure of the control. The state can be a standalone value
  * or a form state object with both a value and a disabled status.
  *
  * ### Example
  *
  * ```ts
  * this.arr.reset(['name', 'last name']);
  *
  * console.log(this.arr.value);  // ['name', 'last name']
  * ```
  *
  * - OR -
  *
  * ```
  * this.arr.reset([
  *   {value: 'name', disabled: true},
  *   'last'
  * ]);
  *
  * console.log(this.arr.value);  // ['name', 'last name']
  * console.log(this.arr.get(0).status);  // 'DISABLED'
  * ```
  */
  function (value, options) {
    if (value === void 0) {
      value = [];
    }

    if (options === void 0) {
      options = {};
    }

    this._forEachChild(function (control, index) {
      control.reset(value[index], {
        onlySelf: true,
        emitEvent: options.emitEvent
      });
    });

    this.updateValueAndValidity(options);

    this._updatePristine(options);

    this._updateTouched(options);
  };
  /**
   * The aggregate value of the array, including any disabled controls.
   *
   * If you'd like to include all values regardless of disabled status, use this method.
   * Otherwise, the `value` property is the best way to get the value of the array.
   */

  /**
     * The aggregate value of the array, including any disabled controls.
     *
     * If you'd like to include all values regardless of disabled status, use this method.
     * Otherwise, the `value` property is the best way to get the value of the array.
     */


  FormArray.prototype.getRawValue =
  /**
  * The aggregate value of the array, including any disabled controls.
  *
  * If you'd like to include all values regardless of disabled status, use this method.
  * Otherwise, the `value` property is the best way to get the value of the array.
  */
  function () {
    return this.controls.map(function (control) {
      return control instanceof FormControl ? control.value : control.getRawValue();
    });
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._syncPendingControls =
  /** @internal */
  function () {
    var subtreeUpdated = this.controls.reduce(function (updated, child) {
      return child._syncPendingControls() ? true : updated;
    }, false);
    if (subtreeUpdated) this.updateValueAndValidity({
      onlySelf: true
    });
    return subtreeUpdated;
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._throwIfControlMissing =
  /** @internal */
  function (index) {
    if (!this.controls.length) {
      throw new Error("\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
    }

    if (!this.at(index)) {
      throw new Error("Cannot find form control at index " + index);
    }
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._forEachChild =
  /** @internal */
  function (cb) {
    this.controls.forEach(function (control, index) {
      cb(control, index);
    });
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._updateValue =
  /** @internal */
  function () {
    var _this = this;

    this.value = this.controls.filter(function (control) {
      return control.enabled || _this.disabled;
    }).map(function (control) {
      return control.value;
    });
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._anyControls =
  /** @internal */
  function (condition) {
    return this.controls.some(function (control) {
      return control.enabled && condition(control);
    });
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._setUpControls =
  /** @internal */
  function () {
    var _this = this;

    this._forEachChild(function (control) {
      return _this._registerControl(control);
    });
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._checkAllValuesPresent =
  /** @internal */
  function (value) {
    this._forEachChild(function (control, i) {
      if (value[i] === undefined) {
        throw new Error("Must supply a value for form control at index: " + i + ".");
      }
    });
  };
  /** @internal */

  /** @internal */


  FormArray.prototype._allControlsDisabled =
  /** @internal */
  function () {
    try {
      for (var _a = (0, _tslib.__values)(this.controls), _b = _a.next(); !_b.done; _b = _a.next()) {
        var control = _b.value;
        if (control.enabled) return false;
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return this.controls.length > 0 || this.disabled;

    var e_2, _c;
  };

  FormArray.prototype._registerControl = function (control) {
    control.setParent(this);

    control._registerOnCollectionChange(this._onCollectionChange);
  };

  return FormArray;
}(AbstractControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.FormArray = FormArray;
var formDirectiveProvider = {
  provide: ControlContainer,
  useExisting: (0, _core.forwardRef)(function () {
    return NgForm;
  })
};
exports.ɵangular_packages_forms_forms_e = formDirectiveProvider;
var resolvedPromise = Promise.resolve(null);
/**
 * @description
 *
 * Creates a top-level `FormGroup` instance and binds it to a form
 * to track aggregate form value and validation status.
 *
 * As soon as you import the `FormsModule`, this directive becomes active by default on
 * all `<form>` tags.  You don't need to add a special selector.
 *
 * You can export the directive into a local template variable using `ngForm` as the key
 * (ex: `#myForm="ngForm"`). This is optional, but useful.  Many properties from the underlying
 * `FormGroup` instance are duplicated on the directive itself, so a reference to it
 * will give you access to the aggregate value and validity status of the form, as well as
 * user interaction properties like `dirty` and `touched`.
 *
 * To register child controls with the form, you'll want to use `NgModel` with a
 * `name` attribute.  You can also use `NgModelGroup` if you'd like to create
 * sub-groups within the form.
 *
 * You can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.
 * If you want to import the `FormsModule` but skip its usage in some forms,
 * for example, to use native HTML5 validation, you can add `ngNoForm` and the `<form>`
 * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is
 * unnecessary because the `<form>` tags are inert. In that case, you would
 * refrain from using the `formGroup` directive.
 *
 * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * * **npm package**: `@angular/forms`
 *
 * * **NgModule**: `FormsModule`
 *
 *
 */

var NgForm =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NgForm, _super);

  function NgForm(validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this.submitted = false;
    _this._directives = [];
    _this.ngSubmit = new _core.EventEmitter();
    _this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));
    return _this;
  }

  NgForm.prototype.ngAfterViewInit = function () {
    this._setUpdateStrategy();
  };

  Object.defineProperty(NgForm.prototype, "formDirective", {
    get: function get() {
      return this;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForm.prototype, "control", {
    get: function get() {
      return this.form;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForm.prototype, "path", {
    get: function get() {
      return [];
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgForm.prototype, "controls", {
    get: function get() {
      return this.form.controls;
    },
    enumerable: true,
    configurable: true
  });

  NgForm.prototype.addControl = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      dir.control = container.registerControl(dir.name, dir.control);
      setUpControl(dir.control, dir);
      dir.control.updateValueAndValidity({
        emitEvent: false
      });

      _this._directives.push(dir);
    });
  };

  NgForm.prototype.getControl = function (dir) {
    return this.form.get(dir.path);
  };

  NgForm.prototype.removeControl = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      if (container) {
        container.removeControl(dir.name);
      }

      removeDir(_this._directives, dir);
    });
  };

  NgForm.prototype.addFormGroup = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      var group = new FormGroup({});
      setUpFormContainer(group, dir);
      container.registerControl(dir.name, group);
      group.updateValueAndValidity({
        emitEvent: false
      });
    });
  };

  NgForm.prototype.removeFormGroup = function (dir) {
    var _this = this;

    resolvedPromise.then(function () {
      var container = _this._findContainer(dir.path);

      if (container) {
        container.removeControl(dir.name);
      }
    });
  };

  NgForm.prototype.getFormGroup = function (dir) {
    return this.form.get(dir.path);
  };

  NgForm.prototype.updateModel = function (dir, value) {
    var _this = this;

    resolvedPromise.then(function () {
      var ctrl = _this.form.get(dir.path);

      ctrl.setValue(value);
    });
  };

  NgForm.prototype.setValue = function (value) {
    this.control.setValue(value);
  };

  NgForm.prototype.onSubmit = function ($event) {
    this.submitted = true;
    syncPendingControls(this.form, this._directives);
    this.ngSubmit.emit($event);
    return false;
  };

  NgForm.prototype.onReset = function () {
    this.resetForm();
  };

  NgForm.prototype.resetForm = function (value) {
    if (value === void 0) {
      value = undefined;
    }

    this.form.reset(value);
    this.submitted = false;
  };

  NgForm.prototype._setUpdateStrategy = function () {
    if (this.options && this.options.updateOn != null) {
      this.form._updateOn = this.options.updateOn;
    }
  };
  /** @internal */

  /** @internal */


  NgForm.prototype._findContainer =
  /** @internal */
  function (path) {
    path.pop();
    return path.length ? this.form.get(path) : this.form;
  };

  NgForm.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',
      providers: [formDirectiveProvider],
      host: {
        '(submit)': 'onSubmit($event)',
        '(reset)': 'onReset()'
      },
      outputs: ['ngSubmit'],
      exportAs: 'ngForm'
    }]
  }];
  /** @nocollapse */

  NgForm.ctorParameters = function () {
    return [{
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }];
  };

  NgForm.propDecorators = {
    "options": [{
      type: _core.Input,
      args: ['ngFormOptions']
    }]
  };
  return NgForm;
}(ControlContainer);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.NgForm = NgForm;

var TemplateDrivenErrors =
/** @class */
function () {
  function TemplateDrivenErrors() {}

  TemplateDrivenErrors.modelParentException = function () {
    throw new Error("\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      " + FormErrorExamples.formControlName + "\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      " + FormErrorExamples.ngModelWithFormGroup);
  };

  TemplateDrivenErrors.formGroupNameException = function () {
    throw new Error("\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      " + FormErrorExamples.formGroupName + "\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      " + FormErrorExamples.ngModelGroup);
  };

  TemplateDrivenErrors.missingNameException = function () {
    throw new Error("If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">");
  };

  TemplateDrivenErrors.modelGroupParentException = function () {
    throw new Error("\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      " + FormErrorExamples.formGroupName + "\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      " + FormErrorExamples.ngModelGroup);
  };

  return TemplateDrivenErrors;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var modelGroupProvider = {
  provide: ControlContainer,
  useExisting: (0, _core.forwardRef)(function () {
    return NgModelGroup;
  })
};
/**
 * @description
 *
 * Creates and binds a `FormGroup` instance to a DOM element.
 *
 * This directive can only be used as a child of `NgForm` (or in other words,
 * within `<form>` tags).
 *
 * Use this directive if you'd like to create a sub-group within a form. This can
 * come in handy if you want to validate a sub-group of your form separately from
 * the rest of your form, or if some values in your domain model make more sense to
 * consume together in a nested object.
 *
 * Pass in the name you'd like this sub-group to have and it will become the key
 * for the sub-group in the form's full value. You can also export the directive into
 * a local template variable using `ngModelGroup` (ex: `#myGroup="ngModelGroup"`).
 *
 * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}
 *
 * * **npm package**: `@angular/forms`
 *
 * * **NgModule**: `FormsModule`
 *
 *
 */

exports.ɵangular_packages_forms_forms_g = modelGroupProvider;

var NgModelGroup =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NgModelGroup, _super);

  function NgModelGroup(parent, validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this._parent = parent;
    _this._validators = validators;
    _this._asyncValidators = asyncValidators;
    return _this;
  }
  /** @internal */

  /** @internal */


  NgModelGroup.prototype._checkParentType =
  /** @internal */
  function () {
    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {
      TemplateDrivenErrors.modelGroupParentException();
    }
  };

  NgModelGroup.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngModelGroup]',
      providers: [modelGroupProvider],
      exportAs: 'ngModelGroup'
    }]
  }];
  /** @nocollapse */

  NgModelGroup.ctorParameters = function () {
    return [{
      type: ControlContainer,
      decorators: [{
        type: _core.Host
      }, {
        type: _core.SkipSelf
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }];
  };

  NgModelGroup.propDecorators = {
    "name": [{
      type: _core.Input,
      args: ['ngModelGroup']
    }]
  };
  return NgModelGroup;
}(AbstractFormGroupDirective);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.NgModelGroup = NgModelGroup;
var formControlBinding = {
  provide: NgControl,
  useExisting: (0, _core.forwardRef)(function () {
    return NgModel;
  })
};
/**
 * `ngModel` forces an additional change detection run when its inputs change:
 * E.g.:
 * ```
 * <div>{{myModel.valid}}</div>
 * <input [(ngModel)]="myValue" #myModel="ngModel">
 * ```
 * I.e. `ngModel` can export itself on the element and then be used in the template.
 * Normally, this would result in expressions before the `input` that use the exported directive
 * to have and old value as they have been
 * dirty checked before. As this is a very common case for `ngModel`, we added this second change
 * detection run.
 *
 * Notes:
 * - this is just one extra run no matter how many `ngModel` have been changed.
 * - this is a general problem when using `exportAs` for directives!
 */

exports.ɵangular_packages_forms_forms_f = formControlBinding;
var resolvedPromise$1 = Promise.resolve(null);
/**
 * @description
 *
 * Creates a `FormControl` instance from a domain model and binds it
 * to a form control element.
 *
 * The `FormControl` instance will track the value, user interaction, and
 * validation status of the control and keep the view synced with the model. If used
 * within a parent form, the directive will also register itself with the form as a child
 * control.
 *
 * This directive can be used by itself or as part of a larger form. All you need is the
 * `ngModel` selector to activate it.
 *
 * It accepts a domain model as an optional `Input`. If you have a one-way binding
 * to `ngModel` with `[]` syntax, changing the value of the domain model in the component
 * class will set the value in the view. If you have a two-way binding with `[()]` syntax
 * (also known as 'banana-box syntax'), the value in the UI will always be synced back to
 * the domain model in your class as well.
 *
 * If you wish to inspect the properties of the associated `FormControl` (like
 * validity state), you can also export the directive into a local template variable using
 * `ngModel` as the key (ex: `#myVar="ngModel"`). You can then access the control using the
 * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)
 * will fall through to the control anyway, so you can access them directly. You can see a
 * full list of properties directly available in `AbstractControlDirective`.
 *
 * The following is an example of a simple standalone control using `ngModel`:
 *
 * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}
 *
 * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute
 * so that the control can be registered with the parent form under that name.
 *
 * It's worth noting that in the context of a parent form, you often can skip one-way or
 * two-way binding because the parent form will sync the value for you. You can access
 * its properties by exporting it into a local template variable using `ngForm` (ex:
 * `#f="ngForm"`). Then you can pass it where it needs to go on submit.
 *
 * If you do need to populate initial values into your form, using a one-way binding for
 * `ngModel` tends to be sufficient as long as you use the exported form's value rather
 * than the domain model's value on submit.
 *
 * Take a look at an example of using `ngModel` within a form:
 *
 * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * To see `ngModel` examples with different form control types, see:
 *
 * * Radio buttons: `RadioControlValueAccessor`
 * * Selects: `SelectControlValueAccessor`
 *
 * **npm package**: `@angular/forms`
 *
 * **NgModule**: `FormsModule`
 *
 *
 */

var NgModel =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NgModel, _super);

  function NgModel(parent, validators, asyncValidators, valueAccessors) {
    var _this = _super.call(this) || this;

    _this.control = new FormControl();
    /** @internal */

    _this._registered = false;
    _this.update = new _core.EventEmitter();
    _this._parent = parent;
    _this._rawValidators = validators || [];
    _this._rawAsyncValidators = asyncValidators || [];
    _this.valueAccessor = selectValueAccessor(_this, valueAccessors);
    return _this;
  }

  NgModel.prototype.ngOnChanges = function (changes) {
    this._checkForErrors();

    if (!this._registered) this._setUpControl();

    if ('isDisabled' in changes) {
      this._updateDisabled(changes);
    }

    if (isPropertyUpdated(changes, this.viewModel)) {
      this._updateValue(this.model);

      this.viewModel = this.model;
    }
  };

  NgModel.prototype.ngOnDestroy = function () {
    this.formDirective && this.formDirective.removeControl(this);
  };

  Object.defineProperty(NgModel.prototype, "path", {
    get: function get() {
      return this._parent ? controlPath(this.name, this._parent) : [this.name];
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgModel.prototype, "formDirective", {
    get: function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgModel.prototype, "validator", {
    get: function get() {
      return composeValidators(this._rawValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgModel.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._rawAsyncValidators);
    },
    enumerable: true,
    configurable: true
  });

  NgModel.prototype.viewToModelUpdate = function (newValue) {
    this.viewModel = newValue;
    this.update.emit(newValue);
  };

  NgModel.prototype._setUpControl = function () {
    this._setUpdateStrategy();

    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);
    this._registered = true;
  };

  NgModel.prototype._setUpdateStrategy = function () {
    if (this.options && this.options.updateOn != null) {
      this.control._updateOn = this.options.updateOn;
    }
  };

  NgModel.prototype._isStandalone = function () {
    return !this._parent || !!(this.options && this.options.standalone);
  };

  NgModel.prototype._setUpStandalone = function () {
    setUpControl(this.control, this);
    this.control.updateValueAndValidity({
      emitEvent: false
    });
  };

  NgModel.prototype._checkForErrors = function () {
    if (!this._isStandalone()) {
      this._checkParentType();
    }

    this._checkName();
  };

  NgModel.prototype._checkParentType = function () {
    if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {
      TemplateDrivenErrors.formGroupNameException();
    } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {
      TemplateDrivenErrors.modelParentException();
    }
  };

  NgModel.prototype._checkName = function () {
    if (this.options && this.options.name) this.name = this.options.name;

    if (!this._isStandalone() && !this.name) {
      TemplateDrivenErrors.missingNameException();
    }
  };

  NgModel.prototype._updateValue = function (value) {
    var _this = this;

    resolvedPromise$1.then(function () {
      _this.control.setValue(value, {
        emitViewToModelChange: false
      });
    });
  };

  NgModel.prototype._updateDisabled = function (changes) {
    var _this = this;

    var disabledValue = changes['isDisabled'].currentValue;
    var isDisabled = disabledValue === '' || disabledValue && disabledValue !== 'false';
    resolvedPromise$1.then(function () {
      if (isDisabled && !_this.control.disabled) {
        _this.control.disable();
      } else if (!isDisabled && _this.control.disabled) {
        _this.control.enable();
      }
    });
  };

  NgModel.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngModel]:not([formControlName]):not([formControl])',
      providers: [formControlBinding],
      exportAs: 'ngModel'
    }]
  }];
  /** @nocollapse */

  NgModel.ctorParameters = function () {
    return [{
      type: ControlContainer,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Host
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALUE_ACCESSOR]
      }]
    }];
  };

  NgModel.propDecorators = {
    "name": [{
      type: _core.Input
    }],
    "isDisabled": [{
      type: _core.Input,
      args: ['disabled']
    }],
    "model": [{
      type: _core.Input,
      args: ['ngModel']
    }],
    "options": [{
      type: _core.Input,
      args: ['ngModelOptions']
    }],
    "update": [{
      type: _core.Output,
      args: ['ngModelChange']
    }]
  };
  return NgModel;
}(NgControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Token to provide to turn off the ngModel warning on formControl and formControlName.
 */


exports.NgModel = NgModel;
var NG_MODEL_WITH_FORM_CONTROL_WARNING = new _core.InjectionToken('NgModelWithFormControlWarning');
exports.ɵangular_packages_forms_forms_j = NG_MODEL_WITH_FORM_CONTROL_WARNING;
var formControlBinding$1 = {
  provide: NgControl,
  useExisting: (0, _core.forwardRef)(function () {
    return FormControlDirective;
  })
};
/**
 * @description
 *
 * Syncs a standalone `FormControl` instance to a form control element.
 *
 * This directive ensures that any values written to the `FormControl`
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * `FormControl` instance (view -> model).
 *
 * Use this directive if you'd like to create and manage a `FormControl` instance directly.
 * Simply create a `FormControl`, save it to your component class, and pass it into the
 * `FormControlDirective`.
 *
 * This directive is designed to be used as a standalone control.  Unlike `FormControlName`,
 * it does not require that your `FormControl` instance be part of any parent
 * `FormGroup`, and it won't be registered to any `FormGroupDirective` that
 * exists above it.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * `FormControl` instance. See a full list of available properties in
 * `AbstractControl`.
 *
 * **Set the value**: You can pass in an initial value when instantiating the `FormControl`,
 * or you can set it programmatically later using {@link AbstractControl#setValue setValue} or
 * {@link AbstractControl#patchValue patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {@link AbstractControl#valueChanges valueChanges} event.  You can also listen to
 * {@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}
 *
 * * **npm package**: `@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 * ### Use with ngModel
 *
 * Support for using the `ngModel` input property and `ngModelChange` event with reactive
 * form directives has been deprecated in Angular v6 and will be removed in Angular v7.
 *
 * Now deprecated:
 * ```html
 * <input [formControl]="control" [(ngModel)]="value">
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * This has been deprecated for a few reasons. First, developers have found this pattern
 * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's
 * an input/output property named `ngModel` on the reactive form directive that simply
 * approximates (some of) its behavior. Specifically, it allows getting/setting the value
 * and intercepting value events. However, some of `ngModel`'s other features - like
 * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,
 * which has understandably caused some confusion.
 *
 * In addition, this pattern mixes template-driven and reactive forms strategies, which
 * we generally don't recommend because it doesn't take advantage of the full benefits of
 * either strategy. Setting the value in the template violates the template-agnostic
 * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in
 * the class removes the convenience of defining forms in the template.
 *
 * To update your code before v7, you'll want to decide whether to stick with reactive form
 * directives (and get/set values using reactive forms patterns) or switch over to
 * template-driven directives.
 *
 * After (choice 1 - use reactive forms):
 *
 * ```html
 * <input [formControl]="control">
 * ```
 *
 * ```ts
 * this.control.setValue('some value');
 * ```
 *
 * After (choice 2 - use template-driven forms):
 *
 * ```html
 * <input [(ngModel)]="value">
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * By default, when you use this pattern, you will see a deprecation warning once in dev
 * mode. You can choose to silence this warning by providing a config for
 * `ReactiveFormsModule` at import time:
 *
 * ```ts
 * imports: [
 *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});
 * ]
 * ```
 *
 * Alternatively, you can choose to surface a separate warning for each instance of this
 * pattern with a config value of `"always"`. This may help to track down where in the code
 * the pattern is being used as the code is being updated.
 *
 *
 */

exports.ɵangular_packages_forms_forms_k = formControlBinding$1;

var FormControlDirective =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormControlDirective, _super);

  function FormControlDirective(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {
    var _this = _super.call(this) || this;

    _this._ngModelWarningConfig = _ngModelWarningConfig;
    /** @deprecated as of v6 */

    _this.update = new _core.EventEmitter();
    /**
       * Instance property used to track whether an ngModel warning has been sent out for this
       * particular FormControlDirective instance. Used to support warning config of "always".
       *
       * @internal
       */

    _this._ngModelWarningSent = false;
    _this._rawValidators = validators || [];
    _this._rawAsyncValidators = asyncValidators || [];
    _this.valueAccessor = selectValueAccessor(_this, valueAccessors);
    return _this;
  }

  Object.defineProperty(FormControlDirective.prototype, "isDisabled", {
    set: function set(isDisabled) {
      ReactiveErrors.disabledAttrWarning();
    },
    enumerable: true,
    configurable: true
  });

  FormControlDirective.prototype.ngOnChanges = function (changes) {
    if (this._isControlChanged(changes)) {
      setUpControl(this.form, this);

      if (this.control.disabled && this.valueAccessor.setDisabledState) {
        this.valueAccessor.setDisabledState(true);
      }

      this.form.updateValueAndValidity({
        emitEvent: false
      });
    }

    if (isPropertyUpdated(changes, this.viewModel)) {
      _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);

      this.form.setValue(this.model);
      this.viewModel = this.model;
    }
  };

  Object.defineProperty(FormControlDirective.prototype, "path", {
    get: function get() {
      return [];
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlDirective.prototype, "validator", {
    get: function get() {
      return composeValidators(this._rawValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlDirective.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._rawAsyncValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlDirective.prototype, "control", {
    get: function get() {
      return this.form;
    },
    enumerable: true,
    configurable: true
  });

  FormControlDirective.prototype.viewToModelUpdate = function (newValue) {
    this.viewModel = newValue;
    this.update.emit(newValue);
  };

  FormControlDirective.prototype._isControlChanged = function (changes) {
    return changes.hasOwnProperty('form');
  };
  /**
     * Static property used to track whether any ngModel warnings have been sent across
     * all instances of FormControlDirective. Used to support warning config of "once".
     *
     * @internal
     */


  FormControlDirective._ngModelWarningSentOnce = false;
  FormControlDirective.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[formControl]',
      providers: [formControlBinding$1],
      exportAs: 'ngForm'
    }]
  }];
  /** @nocollapse */

  FormControlDirective.ctorParameters = function () {
    return [{
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALUE_ACCESSOR]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Inject,
        args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]
      }]
    }];
  };

  FormControlDirective.propDecorators = {
    "form": [{
      type: _core.Input,
      args: ['formControl']
    }],
    "isDisabled": [{
      type: _core.Input,
      args: ['disabled']
    }],
    "model": [{
      type: _core.Input,
      args: ['ngModel']
    }],
    "update": [{
      type: _core.Output,
      args: ['ngModelChange']
    }]
  };
  return FormControlDirective;
}(NgControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.FormControlDirective = FormControlDirective;
var formDirectiveProvider$1 = {
  provide: ControlContainer,
  useExisting: (0, _core.forwardRef)(function () {
    return FormGroupDirective;
  })
};
/**
 * @description
 *
 * Binds an existing `FormGroup` to a DOM element.
 *
 * This directive accepts an existing `FormGroup` instance. It will then use this
 * `FormGroup` instance to match any child `FormControl`, `FormGroup`,
 * and `FormArray` instances to child `FormControlName`, `FormGroupName`,
 * and `FormArrayName` directives.
 *
 * **Set value**: You can set the form's initial value when instantiating the
 * `FormGroup`, or you can set it programmatically later using the `FormGroup`'s
 * {@link AbstractControl#setValue setValue} or {@link AbstractControl#patchValue patchValue}
 * methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe
 * to the `FormGroup`'s {@link AbstractControl#valueChanges valueChanges} event.  You can also
 * listen to its {@link AbstractControl#statusChanges statusChanges} event to be notified when the
 * validation status is re-calculated.
 *
 * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * **npm package**: `@angular/forms`
 *
 * **NgModule**: `ReactiveFormsModule`
 *
 *
 */

exports.ɵangular_packages_forms_forms_m = formDirectiveProvider$1;

var FormGroupDirective =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormGroupDirective, _super);

  function FormGroupDirective(_validators, _asyncValidators) {
    var _this = _super.call(this) || this;

    _this._validators = _validators;
    _this._asyncValidators = _asyncValidators;
    _this.submitted = false;
    _this.directives = [];
    _this.form = null;
    _this.ngSubmit = new _core.EventEmitter();
    return _this;
  }

  FormGroupDirective.prototype.ngOnChanges = function (changes) {
    this._checkFormPresent();

    if (changes.hasOwnProperty('form')) {
      this._updateValidators();

      this._updateDomValue();

      this._updateRegistrations();
    }
  };

  Object.defineProperty(FormGroupDirective.prototype, "formDirective", {
    get: function get() {
      return this;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormGroupDirective.prototype, "control", {
    get: function get() {
      return this.form;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormGroupDirective.prototype, "path", {
    get: function get() {
      return [];
    },
    enumerable: true,
    configurable: true
  });

  FormGroupDirective.prototype.addControl = function (dir) {
    var ctrl = this.form.get(dir.path);
    setUpControl(ctrl, dir);
    ctrl.updateValueAndValidity({
      emitEvent: false
    });
    this.directives.push(dir);
    return ctrl;
  };

  FormGroupDirective.prototype.getControl = function (dir) {
    return this.form.get(dir.path);
  };

  FormGroupDirective.prototype.removeControl = function (dir) {
    removeDir(this.directives, dir);
  };

  FormGroupDirective.prototype.addFormGroup = function (dir) {
    var ctrl = this.form.get(dir.path);
    setUpFormContainer(ctrl, dir);
    ctrl.updateValueAndValidity({
      emitEvent: false
    });
  };

  FormGroupDirective.prototype.removeFormGroup = function (dir) {};

  FormGroupDirective.prototype.getFormGroup = function (dir) {
    return this.form.get(dir.path);
  };

  FormGroupDirective.prototype.addFormArray = function (dir) {
    var ctrl = this.form.get(dir.path);
    setUpFormContainer(ctrl, dir);
    ctrl.updateValueAndValidity({
      emitEvent: false
    });
  };

  FormGroupDirective.prototype.removeFormArray = function (dir) {};

  FormGroupDirective.prototype.getFormArray = function (dir) {
    return this.form.get(dir.path);
  };

  FormGroupDirective.prototype.updateModel = function (dir, value) {
    var ctrl = this.form.get(dir.path);
    ctrl.setValue(value);
  };

  FormGroupDirective.prototype.onSubmit = function ($event) {
    this.submitted = true;
    syncPendingControls(this.form, this.directives);
    this.ngSubmit.emit($event);
    return false;
  };

  FormGroupDirective.prototype.onReset = function () {
    this.resetForm();
  };

  FormGroupDirective.prototype.resetForm = function (value) {
    if (value === void 0) {
      value = undefined;
    }

    this.form.reset(value);
    this.submitted = false;
  };
  /** @internal */

  /** @internal */


  FormGroupDirective.prototype._updateDomValue =
  /** @internal */
  function () {
    var _this = this;

    this.directives.forEach(function (dir) {
      var newCtrl = _this.form.get(dir.path);

      if (dir.control !== newCtrl) {
        cleanUpControl(dir.control, dir);
        if (newCtrl) setUpControl(newCtrl, dir);
        dir.control = newCtrl;
      }
    });

    this.form._updateTreeValidity({
      emitEvent: false
    });
  };

  FormGroupDirective.prototype._updateRegistrations = function () {
    var _this = this;

    this.form._registerOnCollectionChange(function () {
      return _this._updateDomValue();
    });

    if (this._oldForm) this._oldForm._registerOnCollectionChange(function () {});
    this._oldForm = this.form;
  };

  FormGroupDirective.prototype._updateValidators = function () {
    var sync = composeValidators(this._validators);
    this.form.validator = Validators.compose([this.form.validator, sync]);
    var async = composeAsyncValidators(this._asyncValidators);
    this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);
  };

  FormGroupDirective.prototype._checkFormPresent = function () {
    if (!this.form) {
      ReactiveErrors.missingFormException();
    }
  };

  FormGroupDirective.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[formGroup]',
      providers: [formDirectiveProvider$1],
      host: {
        '(submit)': 'onSubmit($event)',
        '(reset)': 'onReset()'
      },
      exportAs: 'ngForm'
    }]
  }];
  /** @nocollapse */

  FormGroupDirective.ctorParameters = function () {
    return [{
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }];
  };

  FormGroupDirective.propDecorators = {
    "form": [{
      type: _core.Input,
      args: ['formGroup']
    }],
    "ngSubmit": [{
      type: _core.Output
    }]
  };
  return FormGroupDirective;
}(ControlContainer);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.FormGroupDirective = FormGroupDirective;
var formGroupNameProvider = {
  provide: ControlContainer,
  useExisting: (0, _core.forwardRef)(function () {
    return FormGroupName;
  })
};
/**
 * @description
 *
 * Syncs a nested `FormGroup` to a DOM element.
 *
 * This directive can only be used with a parent `FormGroupDirective` (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested `FormGroup` you want to link, and
 * will look for a `FormGroup` registered with that name in the parent
 * `FormGroup` instance you passed into `FormGroupDirective`.
 *
 * Nested form groups can come in handy when you want to validate a sub-group of a
 * form separately from the rest or when you'd like to group the values of certain
 * controls into their own nested object.
 *
 * **Access the group**: You can access the associated `FormGroup` using the
 * {@link AbstractControl#get get} method. Ex: `this.form.get('name')`.
 *
 * You can also access individual controls within the group using dot syntax.
 * Ex: `this.form.get('name.first')`
 *
 * **Get the value**: the `value` property is always synced and available on the
 * `FormGroup`. See a full list of available properties in `AbstractControl`.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the `FormGroup`, or you can set it programmatically later using
 * {@link AbstractControl#setValue setValue} or {@link AbstractControl#patchValue patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the group, you can
 * subscribe to the {@link AbstractControl#valueChanges valueChanges} event.  You can also listen to
 * {@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}
 *
 * * **npm package**: `@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 *
 */

exports.ɵangular_packages_forms_forms_n = formGroupNameProvider;

var FormGroupName =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormGroupName, _super);

  function FormGroupName(parent, validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this._parent = parent;
    _this._validators = validators;
    _this._asyncValidators = asyncValidators;
    return _this;
  }
  /** @internal */

  /** @internal */


  FormGroupName.prototype._checkParentType =
  /** @internal */
  function () {
    if (_hasInvalidParent(this._parent)) {
      ReactiveErrors.groupParentException();
    }
  };

  FormGroupName.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[formGroupName]',
      providers: [formGroupNameProvider]
    }]
  }];
  /** @nocollapse */

  FormGroupName.ctorParameters = function () {
    return [{
      type: ControlContainer,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Host
      }, {
        type: _core.SkipSelf
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }];
  };

  FormGroupName.propDecorators = {
    "name": [{
      type: _core.Input,
      args: ['formGroupName']
    }]
  };
  return FormGroupName;
}(AbstractFormGroupDirective);

exports.FormGroupName = FormGroupName;
var formArrayNameProvider = {
  provide: ControlContainer,
  useExisting: (0, _core.forwardRef)(function () {
    return FormArrayName;
  })
};
/**
 * @description
 *
 * Syncs a nested `FormArray` to a DOM element.
 *
 * This directive is designed to be used with a parent `FormGroupDirective` (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested `FormArray` you want to link, and
 * will look for a `FormArray` registered with that name in the parent
 * `FormGroup` instance you passed into `FormGroupDirective`.
 *
 * Nested form arrays can come in handy when you have a group of form controls but
 * you're not sure how many there will be. Form arrays allow you to create new
 * form controls dynamically.
 *
 * **Access the array**: You can access the associated `FormArray` using the
 * {@link AbstractControl#get get} method on the parent `FormGroup`.
 * Ex: `this.form.get('cities')`.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * `FormArray`. See a full list of available properties in `AbstractControl`.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the `FormArray`, or you can set the value programmatically later using the
 * `FormArray`'s {@link AbstractControl#setValue setValue} or
 * {@link AbstractControl#patchValue patchValue} methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the array, you can
 * subscribe to the `FormArray`'s {@link AbstractControl#valueChanges valueChanges} event.
 * You can also listen to its {@link AbstractControl#statusChanges statusChanges} event to be
 * notified when the validation status is re-calculated.
 *
 * **Add new controls**: You can add new controls to the `FormArray` dynamically by calling
 * its {@link FormArray#push push} method.
 * Ex: `this.form.get('cities').push(new FormControl());`
 *
 * ### Example
 *
 * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}
 *
 * * **npm package**: `@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 *
 */

exports.ɵangular_packages_forms_forms_o = formArrayNameProvider;

var FormArrayName =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormArrayName, _super);

  function FormArrayName(parent, validators, asyncValidators) {
    var _this = _super.call(this) || this;

    _this._parent = parent;
    _this._validators = validators;
    _this._asyncValidators = asyncValidators;
    return _this;
  }

  FormArrayName.prototype.ngOnInit = function () {
    this._checkParentType();

    this.formDirective.addFormArray(this);
  };

  FormArrayName.prototype.ngOnDestroy = function () {
    if (this.formDirective) {
      this.formDirective.removeFormArray(this);
    }
  };

  Object.defineProperty(FormArrayName.prototype, "control", {
    get: function get() {
      return this.formDirective.getFormArray(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "formDirective", {
    get: function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "path", {
    get: function get() {
      return controlPath(this.name, this._parent);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "validator", {
    get: function get() {
      return composeValidators(this._validators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormArrayName.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._asyncValidators);
    },
    enumerable: true,
    configurable: true
  });

  FormArrayName.prototype._checkParentType = function () {
    if (_hasInvalidParent(this._parent)) {
      ReactiveErrors.arrayParentException();
    }
  };

  FormArrayName.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[formArrayName]',
      providers: [formArrayNameProvider]
    }]
  }];
  /** @nocollapse */

  FormArrayName.ctorParameters = function () {
    return [{
      type: ControlContainer,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Host
      }, {
        type: _core.SkipSelf
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }];
  };

  FormArrayName.propDecorators = {
    "name": [{
      type: _core.Input,
      args: ['formArrayName']
    }]
  };
  return FormArrayName;
}(ControlContainer);

exports.FormArrayName = FormArrayName;

function _hasInvalidParent(parent) {
  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var controlNameBinding = {
  provide: NgControl,
  useExisting: (0, _core.forwardRef)(function () {
    return FormControlName;
  })
};
/**
 * @description
 *
 * Syncs a `FormControl` in an existing `FormGroup` to a form control
 * element by name.
 *
 * This directive ensures that any values written to the `FormControl`
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * `FormControl` instance (view -> model).
 *
 * This directive is designed to be used with a parent `FormGroupDirective` (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the `FormControl` instance you want to
 * link, and will look for a `FormControl` registered with that name in the
 * closest `FormGroup` or `FormArray` above it.
 *
 * **Access the control**: You can access the `FormControl` associated with
 * this directive by using the {@link AbstractControl#get get} method.
 * Ex: `this.form.get('first');`
 *
 * **Get value**: the `value` property is always synced and available on the `FormControl`.
 * See a full list of available properties in `AbstractControl`.
 *
 *  **Set value**: You can set an initial value for the control when instantiating the
 *  `FormControl`, or you can set it programmatically later using
 *  {@link AbstractControl#setValue setValue} or {@link AbstractControl#patchValue patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {@link AbstractControl#valueChanges valueChanges} event.  You can also listen to
 * {@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * To see `formControlName` examples with different form control types, see:
 *
 * * Radio buttons: `RadioControlValueAccessor`
 * * Selects: `SelectControlValueAccessor`
 *
 * **npm package**: `@angular/forms`
 *
 * **NgModule**: `ReactiveFormsModule`
 *
 * ### Use with ngModel
 *
 * Support for using the `ngModel` input property and `ngModelChange` event with reactive
 * form directives has been deprecated in Angular v6 and will be removed in Angular v7.
 *
 * Now deprecated:
 * ```html
 * <form [formGroup]="form">
 *   <input formControlName="first" [(ngModel)]="value">
 * </form>
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * This has been deprecated for a few reasons. First, developers have found this pattern
 * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's
 * an input/output property named `ngModel` on the reactive form directive that simply
 * approximates (some of) its behavior. Specifically, it allows getting/setting the value
 * and intercepting value events. However, some of `ngModel`'s other features - like
 * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,
 * which has understandably caused some confusion.
 *
 * In addition, this pattern mixes template-driven and reactive forms strategies, which
 * we generally don't recommend because it doesn't take advantage of the full benefits of
 * either strategy. Setting the value in the template violates the template-agnostic
 * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in
 * the class removes the convenience of defining forms in the template.
 *
 * To update your code before v7, you'll want to decide whether to stick with reactive form
 * directives (and get/set values using reactive forms patterns) or switch over to
 * template-driven directives.
 *
 * After (choice 1 - use reactive forms):
 *
 * ```html
 * <form [formGroup]="form">
 *   <input formControlName="first">
 * </form>
 * ```
 *
 * ```ts
 * this.form.get('first').setValue('some value');
 * ```
 *
 * After (choice 2 - use template-driven forms):
 *
 * ```html
 * <input [(ngModel)]="value">
 * ```
 *
 * ```ts
 * this.value = 'some value';
 * ```
 *
 * By default, when you use this pattern, you will see a deprecation warning once in dev
 * mode. You can choose to silence this warning by providing a config for
 * `ReactiveFormsModule` at import time:
 *
 * ```ts
 * imports: [
 *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});
 * ]
 * ```
 *
 * Alternatively, you can choose to surface a separate warning for each instance of this
 * pattern with a config value of `"always"`. This may help to track down where in the code
 * the pattern is being used as the code is being updated.
 *
 *
 */

exports.ɵangular_packages_forms_forms_l = controlNameBinding;

var FormControlName =
/** @class */
function (_super) {
  (0, _tslib.__extends)(FormControlName, _super);

  function FormControlName(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {
    var _this = _super.call(this) || this;

    _this._ngModelWarningConfig = _ngModelWarningConfig;
    _this._added = false;
    /** @deprecated as of v6 */

    _this.update = new _core.EventEmitter();
    /**
       * Instance property used to track whether an ngModel warning has been sent out for this
       * particular FormControlName instance. Used to support warning config of "always".
       *
       * @internal
       */

    _this._ngModelWarningSent = false;
    _this._parent = parent;
    _this._rawValidators = validators || [];
    _this._rawAsyncValidators = asyncValidators || [];
    _this.valueAccessor = selectValueAccessor(_this, valueAccessors);
    return _this;
  }

  Object.defineProperty(FormControlName.prototype, "isDisabled", {
    set: function set(isDisabled) {
      ReactiveErrors.disabledAttrWarning();
    },
    enumerable: true,
    configurable: true
  });

  FormControlName.prototype.ngOnChanges = function (changes) {
    if (!this._added) this._setUpControl();

    if (isPropertyUpdated(changes, this.viewModel)) {
      _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);

      this.viewModel = this.model;
      this.formDirective.updateModel(this, this.model);
    }
  };

  FormControlName.prototype.ngOnDestroy = function () {
    if (this.formDirective) {
      this.formDirective.removeControl(this);
    }
  };

  FormControlName.prototype.viewToModelUpdate = function (newValue) {
    this.viewModel = newValue;
    this.update.emit(newValue);
  };

  Object.defineProperty(FormControlName.prototype, "path", {
    get: function get() {
      return controlPath(this.name, this._parent);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlName.prototype, "formDirective", {
    get: function get() {
      return this._parent ? this._parent.formDirective : null;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlName.prototype, "validator", {
    get: function get() {
      return composeValidators(this._rawValidators);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(FormControlName.prototype, "asyncValidator", {
    get: function get() {
      return composeAsyncValidators(this._rawAsyncValidators);
    },
    enumerable: true,
    configurable: true
  });

  FormControlName.prototype._checkParentType = function () {
    if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {
      ReactiveErrors.ngModelGroupException();
    } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {
      ReactiveErrors.controlParentException();
    }
  };

  FormControlName.prototype._setUpControl = function () {
    this._checkParentType();

    this.control = this.formDirective.addControl(this);

    if (this.control.disabled && this.valueAccessor.setDisabledState) {
      this.valueAccessor.setDisabledState(true);
    }

    this._added = true;
  };
  /**
     * Static property used to track whether any ngModel warnings have been sent across
     * all instances of FormControlName. Used to support warning config of "once".
     *
     * @internal
     */


  FormControlName._ngModelWarningSentOnce = false;
  FormControlName.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[formControlName]',
      providers: [controlNameBinding]
    }]
  }];
  /** @nocollapse */

  FormControlName.ctorParameters = function () {
    return [{
      type: ControlContainer,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Host
      }, {
        type: _core.SkipSelf
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_ASYNC_VALIDATORS]
      }]
    }, {
      type: Array,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Self
      }, {
        type: _core.Inject,
        args: [NG_VALUE_ACCESSOR]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Inject,
        args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]
      }]
    }];
  };

  FormControlName.propDecorators = {
    "name": [{
      type: _core.Input,
      args: ['formControlName']
    }],
    "isDisabled": [{
      type: _core.Input,
      args: ['disabled']
    }],
    "model": [{
      type: _core.Input,
      args: ['ngModel']
    }],
    "update": [{
      type: _core.Output,
      args: ['ngModelChange']
    }]
  };
  return FormControlName;
}(NgControl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.FormControlName = FormControlName;
var REQUIRED_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: (0, _core.forwardRef)(function () {
    return RequiredValidator;
  }),
  multi: true
};
exports.ɵangular_packages_forms_forms_s = REQUIRED_VALIDATOR;
var CHECKBOX_REQUIRED_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: (0, _core.forwardRef)(function () {
    return CheckboxRequiredValidator;
  }),
  multi: true
};
/**
 * A Directive that adds the `required` validator to any controls marked with the
 * `required` attribute, via the `NG_VALIDATORS` binding.
 *
 * ### Example
 *
 * ```
 * <input name="fullName" ngModel required>
 * ```
 *
 *
 */

exports.ɵangular_packages_forms_forms_t = CHECKBOX_REQUIRED_VALIDATOR;

var RequiredValidator =
/** @class */
function () {
  function RequiredValidator() {}

  Object.defineProperty(RequiredValidator.prototype, "required", {
    get: function get() {
      return this._required;
    },
    set: function set(value) {
      this._required = value != null && value !== false && "" + value !== 'false';
      if (this._onChange) this._onChange();
    },
    enumerable: true,
    configurable: true
  });

  RequiredValidator.prototype.validate = function (c) {
    return this.required ? Validators.required(c) : null;
  };

  RequiredValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  RequiredValidator.decorators = [{
    type: _core.Directive,
    args: [{
      selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',
      providers: [REQUIRED_VALIDATOR],
      host: {
        '[attr.required]': 'required ? "" : null'
      }
    }]
  }];
  /** @nocollapse */

  RequiredValidator.ctorParameters = function () {
    return [];
  };

  RequiredValidator.propDecorators = {
    "required": [{
      type: _core.Input
    }]
  };
  return RequiredValidator;
}();
/**
 * A Directive that adds the `required` validator to checkbox controls marked with the
 * `required` attribute, via the `NG_VALIDATORS` binding.
 *
 * ### Example
 *
 * ```
 * <input type="checkbox" name="active" ngModel required>
 * ```
 *
 * @experimental
 */


exports.RequiredValidator = RequiredValidator;

var CheckboxRequiredValidator =
/** @class */
function (_super) {
  (0, _tslib.__extends)(CheckboxRequiredValidator, _super);

  function CheckboxRequiredValidator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CheckboxRequiredValidator.prototype.validate = function (c) {
    return this.required ? Validators.requiredTrue(c) : null;
  };

  CheckboxRequiredValidator.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',
      providers: [CHECKBOX_REQUIRED_VALIDATOR],
      host: {
        '[attr.required]': 'required ? "" : null'
      }
    }]
  }];
  /** @nocollapse */

  CheckboxRequiredValidator.ctorParameters = function () {
    return [];
  };

  return CheckboxRequiredValidator;
}(RequiredValidator);
/**
 * Provider which adds `EmailValidator` to `NG_VALIDATORS`.
 */


exports.CheckboxRequiredValidator = CheckboxRequiredValidator;
var EMAIL_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: (0, _core.forwardRef)(function () {
    return EmailValidator;
  }),
  multi: true
};
/**
 * A Directive that adds the `email` validator to controls marked with the
 * `email` attribute, via the `NG_VALIDATORS` binding.
 *
 * ### Example
 *
 * ```
 * <input type="email" name="email" ngModel email>
 * <input type="email" name="email" ngModel email="true">
 * <input type="email" name="email" ngModel [email]="true">
 * ```
 *
 * @experimental
 */

exports.ɵangular_packages_forms_forms_u = EMAIL_VALIDATOR;

var EmailValidator =
/** @class */
function () {
  function EmailValidator() {}

  Object.defineProperty(EmailValidator.prototype, "email", {
    set: function set(value) {
      this._enabled = value === '' || value === true || value === 'true';
      if (this._onChange) this._onChange();
    },
    enumerable: true,
    configurable: true
  });

  EmailValidator.prototype.validate = function (c) {
    return this._enabled ? Validators.email(c) : null;
  };

  EmailValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  EmailValidator.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[email][formControlName],[email][formControl],[email][ngModel]',
      providers: [EMAIL_VALIDATOR]
    }]
  }];
  /** @nocollapse */

  EmailValidator.ctorParameters = function () {
    return [];
  };

  EmailValidator.propDecorators = {
    "email": [{
      type: _core.Input
    }]
  };
  return EmailValidator;
}();
/**
 * Provider which adds `MinLengthValidator` to `NG_VALIDATORS`.
 *
 * ## Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='min'}
 */


exports.EmailValidator = EmailValidator;
var MIN_LENGTH_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: (0, _core.forwardRef)(function () {
    return MinLengthValidator;
  }),
  multi: true
};
/**
 * A directive which installs the `MinLengthValidator` for any `formControlName`,
 * `formControl`, or control with `ngModel` that also has a `minlength` attribute.
 *
 *
 */

exports.ɵangular_packages_forms_forms_v = MIN_LENGTH_VALIDATOR;

var MinLengthValidator =
/** @class */
function () {
  function MinLengthValidator() {}

  MinLengthValidator.prototype.ngOnChanges = function (changes) {
    if ('minlength' in changes) {
      this._createValidator();

      if (this._onChange) this._onChange();
    }
  };

  MinLengthValidator.prototype.validate = function (c) {
    return this.minlength == null ? null : this._validator(c);
  };

  MinLengthValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  MinLengthValidator.prototype._createValidator = function () {
    this._validator = Validators.minLength(parseInt(this.minlength, 10));
  };

  MinLengthValidator.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',
      providers: [MIN_LENGTH_VALIDATOR],
      host: {
        '[attr.minlength]': 'minlength ? minlength : null'
      }
    }]
  }];
  /** @nocollapse */

  MinLengthValidator.ctorParameters = function () {
    return [];
  };

  MinLengthValidator.propDecorators = {
    "minlength": [{
      type: _core.Input
    }]
  };
  return MinLengthValidator;
}();
/**
 * Provider which adds `MaxLengthValidator` to `NG_VALIDATORS`.
 *
 * ## Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='max'}
 */


exports.MinLengthValidator = MinLengthValidator;
var MAX_LENGTH_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: (0, _core.forwardRef)(function () {
    return MaxLengthValidator;
  }),
  multi: true
};
/**
 * A directive which installs the `MaxLengthValidator` for any `formControlName,
 * `formControl`,
 * or control with `ngModel` that also has a `maxlength` attribute.
 *
 *
 */

exports.ɵangular_packages_forms_forms_w = MAX_LENGTH_VALIDATOR;

var MaxLengthValidator =
/** @class */
function () {
  function MaxLengthValidator() {}

  MaxLengthValidator.prototype.ngOnChanges = function (changes) {
    if ('maxlength' in changes) {
      this._createValidator();

      if (this._onChange) this._onChange();
    }
  };

  MaxLengthValidator.prototype.validate = function (c) {
    return this.maxlength != null ? this._validator(c) : null;
  };

  MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  MaxLengthValidator.prototype._createValidator = function () {
    this._validator = Validators.maxLength(parseInt(this.maxlength, 10));
  };

  MaxLengthValidator.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',
      providers: [MAX_LENGTH_VALIDATOR],
      host: {
        '[attr.maxlength]': 'maxlength ? maxlength : null'
      }
    }]
  }];
  /** @nocollapse */

  MaxLengthValidator.ctorParameters = function () {
    return [];
  };

  MaxLengthValidator.propDecorators = {
    "maxlength": [{
      type: _core.Input
    }]
  };
  return MaxLengthValidator;
}();

exports.MaxLengthValidator = MaxLengthValidator;
var PATTERN_VALIDATOR = {
  provide: NG_VALIDATORS,
  useExisting: (0, _core.forwardRef)(function () {
    return PatternValidator;
  }),
  multi: true
};
/**
 * A Directive that adds the `pattern` validator to any controls marked with the
 * `pattern` attribute, via the `NG_VALIDATORS` binding. Uses attribute value
 * as the regex to validate Control value against.  Follows pattern attribute
 * semantics; i.e. regex must match entire Control value.
 *
 * ### Example
 *
 * ```
 * <input [name]="fullName" pattern="[a-zA-Z ]*" ngModel>
 * ```
 *
 */

exports.ɵangular_packages_forms_forms_x = PATTERN_VALIDATOR;

var PatternValidator =
/** @class */
function () {
  function PatternValidator() {}

  PatternValidator.prototype.ngOnChanges = function (changes) {
    if ('pattern' in changes) {
      this._createValidator();

      if (this._onChange) this._onChange();
    }
  };

  PatternValidator.prototype.validate = function (c) {
    return this._validator(c);
  };

  PatternValidator.prototype.registerOnValidatorChange = function (fn) {
    this._onChange = fn;
  };

  PatternValidator.prototype._createValidator = function () {
    this._validator = Validators.pattern(this.pattern);
  };

  PatternValidator.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',
      providers: [PATTERN_VALIDATOR],
      host: {
        '[attr.pattern]': 'pattern ? pattern : null'
      }
    }]
  }];
  /** @nocollapse */

  PatternValidator.ctorParameters = function () {
    return [];
  };

  PatternValidator.propDecorators = {
    "pattern": [{
      type: _core.Input
    }]
  };
  return PatternValidator;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Creates an `AbstractControl` from a user-specified configuration.
 *
 * This is essentially syntactic sugar that shortens the `new FormGroup()`,
 * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger
 * forms.
 *
 * To use, inject `FormBuilder` into your component class. You can then call its methods
 * directly.
 *
 * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}
 *
 *  * **npm package**: `@angular/forms`
 *
 *  * **NgModule**: `ReactiveFormsModule`
 *
 *
 */


exports.PatternValidator = PatternValidator;

var FormBuilder =
/** @class */
function () {
  function FormBuilder() {}
  /**
   * Construct a new `FormGroup` with the given map of configuration.
   * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.
   *
   * See the `FormGroup` constructor for more details.
   */

  /**
     * Construct a new `FormGroup` with the given map of configuration.
     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.
     *
     * See the `FormGroup` constructor for more details.
     */


  FormBuilder.prototype.group =
  /**
  * Construct a new `FormGroup` with the given map of configuration.
  * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.
  *
  * See the `FormGroup` constructor for more details.
  */
  function (controlsConfig, extra) {
    if (extra === void 0) {
      extra = null;
    }

    var controls = this._reduceControls(controlsConfig);

    var validator = extra != null ? extra['validator'] : null;
    var asyncValidator = extra != null ? extra['asyncValidator'] : null;
    return new FormGroup(controls, validator, asyncValidator);
  };
  /**
   * Construct a new `FormControl` with the given `formState`,`validator`, and
   * `asyncValidator`.
   *
   * `formState` can either be a standalone value for the form control or an object
   * that contains both a value and a disabled status.
   *
   */

  /**
     * Construct a new `FormControl` with the given `formState`,`validator`, and
     * `asyncValidator`.
     *
     * `formState` can either be a standalone value for the form control or an object
     * that contains both a value and a disabled status.
     *
     */


  FormBuilder.prototype.control =
  /**
  * Construct a new `FormControl` with the given `formState`,`validator`, and
  * `asyncValidator`.
  *
  * `formState` can either be a standalone value for the form control or an object
  * that contains both a value and a disabled status.
  *
  */
  function (formState, validator, asyncValidator) {
    return new FormControl(formState, validator, asyncValidator);
  };
  /**
   * Construct a `FormArray` from the given `controlsConfig` array of
   * configuration, with the given optional `validator` and `asyncValidator`.
   */

  /**
     * Construct a `FormArray` from the given `controlsConfig` array of
     * configuration, with the given optional `validator` and `asyncValidator`.
     */


  FormBuilder.prototype.array =
  /**
  * Construct a `FormArray` from the given `controlsConfig` array of
  * configuration, with the given optional `validator` and `asyncValidator`.
  */
  function (controlsConfig, validator, asyncValidator) {
    var _this = this;

    var controls = controlsConfig.map(function (c) {
      return _this._createControl(c);
    });
    return new FormArray(controls, validator, asyncValidator);
  };
  /** @internal */

  /** @internal */


  FormBuilder.prototype._reduceControls =
  /** @internal */
  function (controlsConfig) {
    var _this = this;

    var controls = {};
    Object.keys(controlsConfig).forEach(function (controlName) {
      controls[controlName] = _this._createControl(controlsConfig[controlName]);
    });
    return controls;
  };
  /** @internal */

  /** @internal */


  FormBuilder.prototype._createControl =
  /** @internal */
  function (controlConfig) {
    if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup || controlConfig instanceof FormArray) {
      return controlConfig;
    } else if (Array.isArray(controlConfig)) {
      var value = controlConfig[0];
      var validator = controlConfig.length > 1 ? controlConfig[1] : null;
      var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;
      return this.control(value, validator, asyncValidator);
    } else {
      return this.control(controlConfig);
    }
  };

  FormBuilder.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  FormBuilder.ctorParameters = function () {
    return [];
  };

  return FormBuilder;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 */


exports.FormBuilder = FormBuilder;
var VERSION = new _core.Version('6.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Adds `novalidate` attribute to all forms by default.
 *
 * `novalidate` is used to disable browser's native form validation.
 *
 * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:
 *
 * ```
 * <form ngNativeValidate></form>
 * ```
 *
 * @experimental
 */

exports.VERSION = VERSION;

var NgNoValidate =
/** @class */
function () {
  function NgNoValidate() {}

  NgNoValidate.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'form:not([ngNoForm]):not([ngNativeValidate])',
      host: {
        'novalidate': ''
      }
    }]
  }];
  /** @nocollapse */

  NgNoValidate.ctorParameters = function () {
    return [];
  };

  return NgNoValidate;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵangular_packages_forms_forms_bg = NgNoValidate;
var SHARED_FORM_DIRECTIVES = [NgNoValidate, NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator];
exports.ɵangular_packages_forms_forms_y = SHARED_FORM_DIRECTIVES;
var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];
exports.ɵangular_packages_forms_forms_z = TEMPLATE_DRIVEN_DIRECTIVES;
var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];
/**
 * Internal module used for sharing directives between FormsModule and ReactiveFormsModule
 */

exports.ɵangular_packages_forms_forms_ba = REACTIVE_DRIVEN_DIRECTIVES;

var InternalFormsSharedModule =
/** @class */
function () {
  function InternalFormsSharedModule() {}

  InternalFormsSharedModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: SHARED_FORM_DIRECTIVES,
      exports: SHARED_FORM_DIRECTIVES
    }]
  }];
  /** @nocollapse */

  InternalFormsSharedModule.ctorParameters = function () {
    return [];
  };

  return InternalFormsSharedModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The ng module for forms.
 *
 */


exports.ɵangular_packages_forms_forms_bb = InternalFormsSharedModule;

var FormsModule =
/** @class */
function () {
  function FormsModule() {}

  FormsModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: TEMPLATE_DRIVEN_DIRECTIVES,
      providers: [RadioControlRegistry],
      exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]
    }]
  }];
  /** @nocollapse */

  FormsModule.ctorParameters = function () {
    return [];
  };

  return FormsModule;
}();
/**
 * The ng module for reactive forms.
 *
 */


exports.FormsModule = FormsModule;

var ReactiveFormsModule =
/** @class */
function () {
  function ReactiveFormsModule() {}

  ReactiveFormsModule.withConfig = function (opts) {
    return {
      ngModule: ReactiveFormsModule,
      providers: [{
        provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,
        useValue: opts.warnOnNgModelWithFormControl
      }]
    };
  };

  ReactiveFormsModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [REACTIVE_DRIVEN_DIRECTIVES],
      providers: [FormBuilder, RadioControlRegistry],
      exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]
    }]
  }];
  /** @nocollapse */

  ReactiveFormsModule.ctorParameters = function () {
    return [];
  };

  return ReactiveFormsModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */


exports.ReactiveFormsModule = ReactiveFormsModule;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDate = void 0;

var NgbDate =
/** @class */
function () {
  function NgbDate(year, month, day) {
    this.year = year;
    this.month = month;
    this.day = day;
  }

  NgbDate.from = function (date) {
    return date ? new NgbDate(date.year, date.month, date.day ? date.day : 1) : null;
  };

  NgbDate.prototype.equals = function (other) {
    return other && this.year === other.year && this.month === other.month && this.day === other.day;
  };

  NgbDate.prototype.before = function (other) {
    if (!other) {
      return false;
    }

    if (this.year === other.year) {
      if (this.month === other.month) {
        return this.day === other.day ? false : this.day < other.day;
      } else {
        return this.month < other.month;
      }
    } else {
      return this.year < other.year;
    }
  };

  NgbDate.prototype.after = function (other) {
    if (!other) {
      return false;
    }

    if (this.year === other.year) {
      if (this.month === other.month) {
        return this.day === other.day ? false : this.day > other.day;
      } else {
        return this.month > other.month;
      }
    } else {
      return this.year > other.year;
    }
  };

  NgbDate.prototype.toStruct = function () {
    return {
      year: this.year,
      month: this.month,
      day: this.day
    };
  };

  NgbDate.prototype.toString = function () {
    return this.year + "-" + this.month + "-" + this.day;
  };

  return NgbDate;
}();

exports.NgbDate = NgbDate;

/***/ }),
/* 36 */,
/* 37 */,
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.from = from;

var _Observable = __webpack_require__(5);

var _isPromise = __webpack_require__(236);

var _isArrayLike = __webpack_require__(233);

var _isInteropObservable = __webpack_require__(613);

var _isIterable = __webpack_require__(614);

var _fromArray = __webpack_require__(46);

var _fromPromise = __webpack_require__(514);

var _fromIterable = __webpack_require__(512);

var _fromObservable = __webpack_require__(513);

var _subscribeTo = __webpack_require__(237);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function from(input, scheduler) {
  if (!scheduler) {
    if (input instanceof _Observable.Observable) {
      return input;
    }

    return new _Observable.Observable((0, _subscribeTo.subscribeTo)(input));
  }

  if (input != null) {
    if ((0, _isInteropObservable.isInteropObservable)(input)) {
      return (0, _fromObservable.fromObservable)(input, scheduler);
    } else if ((0, _isPromise.isPromise)(input)) {
      return (0, _fromPromise.fromPromise)(input, scheduler);
    } else if ((0, _isArrayLike.isArrayLike)(input)) {
      return (0, _fromArray.fromArray)(input, scheduler);
    } else if ((0, _isIterable.isIterable)(input) || typeof input === 'string') {
      return (0, _fromIterable.fromIterable)(input, scheduler);
    }
  }

  throw new TypeError((input !== null && _typeof(input) || input) + ' is not observable');
}

/***/ }),
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromArray = fromArray;

var _Observable = __webpack_require__(5);

var _Subscription = __webpack_require__(15);

var _subscribeToArray = __webpack_require__(238);

/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */
function fromArray(input, scheduler) {
  if (!scheduler) {
    return new _Observable.Observable((0, _subscribeToArray.subscribeToArray)(input));
  } else {
    return new _Observable.Observable(function (subscriber) {
      var sub = new _Subscription.Subscription();
      var i = 0;
      sub.add(scheduler.schedule(function () {
        if (i === input.length) {
          subscriber.complete();
          return;
        }

        subscriber.next(input[i++]);

        if (!subscriber.closed) {
          sub.add(this.schedule());
        }
      }));
      return sub;
    });
  }
}

/***/ }),
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ɵangular_packages_platform_browser_platform_browser_b = _document;
exports.ɵangular_packages_platform_browser_platform_browser_a = errorHandler;
exports.ɵangular_packages_platform_browser_platform_browser_f = appInitializerFactory;
exports.ɵangular_packages_platform_browser_platform_browser_c = initTransferState;
exports.ɵangular_packages_platform_browser_platform_browser_h = _createNgProbe;
exports.disableDebugTools = disableDebugTools;
exports.enableDebugTools = enableDebugTools;
exports.makeStateKey = makeStateKey;
exports.ɵinitDomAdapter = initDomAdapter;
exports.ɵescapeHtml = escapeHtml;
exports.ɵgetDOM = getDOM;
exports.ɵsetRootDomAdapter = setRootDomAdapter;
exports.ɵflattenStyles = flattenStyles;
exports.ɵshimContentAttribute = shimContentAttribute;
exports.ɵshimHostAttribute = shimHostAttribute;
exports.ɵSharedStylesHost = exports.ɵDomSharedStylesHost = exports.ɵKeyEventsPlugin = exports.ɵHammerGesturesPlugin = exports.ɵDomEventsPlugin = exports.ɵNAMESPACE_URIS = exports.ɵDomRendererFactory2 = exports.ɵDomAdapter = exports.ɵELEMENT_PROBE_PROVIDERS = exports.ɵBrowserGetTestability = exports.ɵTRANSITION_ID = exports.ɵBrowserPlatformLocation = exports.ɵBrowserDomAdapter = exports.ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS = exports.ɵBROWSER_SANITIZATION_PROVIDERS = exports.VERSION = exports.DomSanitizer = exports.HammerGestureConfig = exports.HAMMER_GESTURE_CONFIG = exports.EventManager = exports.EVENT_MANAGER_PLUGINS = exports.DOCUMENT = exports.By = exports.TransferState = exports.BrowserTransferStateModule = exports.Title = exports.Meta = exports.platformBrowser = exports.BrowserModule = exports.ɵangular_packages_platform_browser_platform_browser_e = exports.ɵangular_packages_platform_browser_platform_browser_d = exports.ɵangular_packages_platform_browser_platform_browser_g = exports.ɵangular_packages_platform_browser_platform_browser_i = void 0;

var _common = __webpack_require__(10);

var _core = __webpack_require__(0);

var _tslib = __webpack_require__(1);

/**
 * @license Angular v6.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var _DOM = null;

function getDOM() {
  return _DOM;
}

function setRootDomAdapter(adapter) {
  if (!_DOM) {
    _DOM = adapter;
  }
}
/* tslint:disable:requireParameterType */

/**
 * Provides DOM operations in an environment-agnostic way.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */


var DomAdapter =
/** @class */
function () {
  function DomAdapter() {
    this.resourceLoaderType = null;
  }

  Object.defineProperty(DomAdapter.prototype, "attrToPropMap", {
    /**
     * Maps attribute names to their corresponding property names for cases
     * where attribute name doesn't match property name.
     */
    get:
    /**
    * Maps attribute names to their corresponding property names for cases
    * where attribute name doesn't match property name.
    */
    function get() {
      return this._attrToPropMap;
    },
    set: function set(value) {
      this._attrToPropMap = value;
    },
    enumerable: true,
    configurable: true
  });
  return DomAdapter;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Provides DOM operations in any browser environment.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */


exports.ɵDomAdapter = DomAdapter;

var GenericBrowserDomAdapter =
/** @class */
function (_super) {
  (0, _tslib.__extends)(GenericBrowserDomAdapter, _super);

  function GenericBrowserDomAdapter() {
    var _this = _super.call(this) || this;

    _this._animationPrefix = null;
    _this._transitionEnd = null;

    try {
      var element_1 = _this.createElement('div', document);

      if (_this.getStyle(element_1, 'animationName') != null) {
        _this._animationPrefix = '';
      } else {
        var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];

        for (var i = 0; i < domPrefixes.length; i++) {
          if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {
            _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';
            break;
          }
        }
      }

      var transEndEventNames_1 = {
        WebkitTransition: 'webkitTransitionEnd',
        MozTransition: 'transitionend',
        OTransition: 'oTransitionEnd otransitionend',
        transition: 'transitionend'
      };
      Object.keys(transEndEventNames_1).forEach(function (key) {
        if (_this.getStyle(element_1, key) != null) {
          _this._transitionEnd = transEndEventNames_1[key];
        }
      });
    } catch (e) {
      _this._animationPrefix = null;
      _this._transitionEnd = null;
    }

    return _this;
  }

  GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) {
    return el.getDistributedNodes();
  };

  GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {
    el.href = href == null ? baseUrl : baseUrl + '/../' + href;
  };

  GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () {
    return true;
  };

  GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {
    return typeof document.body.createShadowRoot === 'function';
  };

  GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () {
    return this._animationPrefix ? this._animationPrefix : '';
  };

  GenericBrowserDomAdapter.prototype.getTransitionEnd = function () {
    return this._transitionEnd ? this._transitionEnd : '';
  };

  GenericBrowserDomAdapter.prototype.supportsAnimation = function () {
    return this._animationPrefix != null && this._transitionEnd != null;
  };

  return GenericBrowserDomAdapter;
}(DomAdapter);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵangular_packages_platform_browser_platform_browser_i = GenericBrowserDomAdapter;
var _attrToPropMap = {
  'class': 'className',
  'innerHtml': 'innerHTML',
  'readonly': 'readOnly',
  'tabindex': 'tabIndex'
};
var DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey

var _keyMap = {
  // The following values are here for cross-browser compatibility and to match the W3C standard
  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/
  '\b': 'Backspace',
  '\t': 'Tab',
  '\x7F': 'Delete',
  '\x1B': 'Escape',
  'Del': 'Delete',
  'Esc': 'Escape',
  'Left': 'ArrowLeft',
  'Right': 'ArrowRight',
  'Up': 'ArrowUp',
  'Down': 'ArrowDown',
  'Menu': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'Win': 'OS'
}; // There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...

var _chromeNumKeyPadMap = {
  'A': '1',
  'B': '2',
  'C': '3',
  'D': '4',
  'E': '5',
  'F': '6',
  'G': '7',
  'H': '8',
  'I': '9',
  'J': '*',
  'K': '+',
  'M': '-',
  'N': '.',
  'O': '/',
  '\x60': '0',
  '\x90': 'NumLock'
};
var nodeContains;

if (_core.ɵglobal['Node']) {
  nodeContains = _core.ɵglobal['Node'].prototype.contains || function (node) {
    return !!(this.compareDocumentPosition(node) & 16);
  };
}
/**
 * A `DomAdapter` powered by full browser DOM APIs.
 *
 * @security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 */

/* tslint:disable:requireParameterType no-console */


var BrowserDomAdapter =
/** @class */
function (_super) {
  (0, _tslib.__extends)(BrowserDomAdapter, _super);

  function BrowserDomAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  BrowserDomAdapter.prototype.parse = function (templateHtml) {
    throw new Error('parse not implemented');
  };

  BrowserDomAdapter.makeCurrent = function () {
    setRootDomAdapter(new BrowserDomAdapter());
  };

  BrowserDomAdapter.prototype.hasProperty = function (element, name) {
    return name in element;
  };

  BrowserDomAdapter.prototype.setProperty = function (el, name, value) {
    el[name] = value;
  };

  BrowserDomAdapter.prototype.getProperty = function (el, name) {
    return el[name];
  };

  BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {
    (_a = el)[methodName].apply(_a, (0, _tslib.__spread)(args));

    var _a;
  }; // TODO(tbosch): move this into a separate environment class once we have it
  // TODO(tbosch): move this into a separate environment class once we have it


  BrowserDomAdapter.prototype.logError = // TODO(tbosch): move this into a separate environment class once we have it
  function (error) {
    if (window.console) {
      if (console.error) {
        console.error(error);
      } else {
        console.log(error);
      }
    }
  };

  BrowserDomAdapter.prototype.log = function (error) {
    if (window.console) {
      window.console.log && window.console.log(error);
    }
  };

  BrowserDomAdapter.prototype.logGroup = function (error) {
    if (window.console) {
      window.console.group && window.console.group(error);
    }
  };

  BrowserDomAdapter.prototype.logGroupEnd = function () {
    if (window.console) {
      window.console.groupEnd && window.console.groupEnd();
    }
  };

  Object.defineProperty(BrowserDomAdapter.prototype, "attrToPropMap", {
    get: function get() {
      return _attrToPropMap;
    },
    enumerable: true,
    configurable: true
  });

  BrowserDomAdapter.prototype.contains = function (nodeA, nodeB) {
    return nodeContains.call(nodeA, nodeB);
  };

  BrowserDomAdapter.prototype.querySelector = function (el, selector) {
    return el.querySelector(selector);
  };

  BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) {
    return el.querySelectorAll(selector);
  };

  BrowserDomAdapter.prototype.on = function (el, evt, listener) {
    el.addEventListener(evt, listener, false);
  };

  BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {
    el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of
    // https://code.google.com/p/dart/issues/detail?id=17406

    return function () {
      el.removeEventListener(evt, listener, false);
    };
  };

  BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) {
    el.dispatchEvent(evt);
  };

  BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {
    var evt = this.getDefaultDocument().createEvent('MouseEvent');
    evt.initEvent(eventType, true, true);
    return evt;
  };

  BrowserDomAdapter.prototype.createEvent = function (eventType) {
    var evt = this.getDefaultDocument().createEvent('Event');
    evt.initEvent(eventType, true, true);
    return evt;
  };

  BrowserDomAdapter.prototype.preventDefault = function (evt) {
    evt.preventDefault();
    evt.returnValue = false;
  };

  BrowserDomAdapter.prototype.isPrevented = function (evt) {
    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;
  };

  BrowserDomAdapter.prototype.getInnerHTML = function (el) {
    return el.innerHTML;
  };

  BrowserDomAdapter.prototype.getTemplateContent = function (el) {
    return 'content' in el && this.isTemplateElement(el) ? el.content : null;
  };

  BrowserDomAdapter.prototype.getOuterHTML = function (el) {
    return el.outerHTML;
  };

  BrowserDomAdapter.prototype.nodeName = function (node) {
    return node.nodeName;
  };

  BrowserDomAdapter.prototype.nodeValue = function (node) {
    return node.nodeValue;
  };

  BrowserDomAdapter.prototype.type = function (node) {
    return node.type;
  };

  BrowserDomAdapter.prototype.content = function (node) {
    if (this.hasProperty(node, 'content')) {
      return node.content;
    } else {
      return node;
    }
  };

  BrowserDomAdapter.prototype.firstChild = function (el) {
    return el.firstChild;
  };

  BrowserDomAdapter.prototype.nextSibling = function (el) {
    return el.nextSibling;
  };

  BrowserDomAdapter.prototype.parentElement = function (el) {
    return el.parentNode;
  };

  BrowserDomAdapter.prototype.childNodes = function (el) {
    return el.childNodes;
  };

  BrowserDomAdapter.prototype.childNodesAsList = function (el) {
    var childNodes = el.childNodes;
    var res = new Array(childNodes.length);

    for (var i = 0; i < childNodes.length; i++) {
      res[i] = childNodes[i];
    }

    return res;
  };

  BrowserDomAdapter.prototype.clearNodes = function (el) {
    while (el.firstChild) {
      el.removeChild(el.firstChild);
    }
  };

  BrowserDomAdapter.prototype.appendChild = function (el, node) {
    el.appendChild(node);
  };

  BrowserDomAdapter.prototype.removeChild = function (el, node) {
    el.removeChild(node);
  };

  BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) {
    el.replaceChild(newChild, oldChild);
  };

  BrowserDomAdapter.prototype.remove = function (node) {
    if (node.parentNode) {
      node.parentNode.removeChild(node);
    }

    return node;
  };

  BrowserDomAdapter.prototype.insertBefore = function (parent, ref, node) {
    parent.insertBefore(node, ref);
  };

  BrowserDomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) {
    nodes.forEach(function (n) {
      return parent.insertBefore(n, ref);
    });
  };

  BrowserDomAdapter.prototype.insertAfter = function (parent, ref, node) {
    parent.insertBefore(node, ref.nextSibling);
  };

  BrowserDomAdapter.prototype.setInnerHTML = function (el, value) {
    el.innerHTML = value;
  };

  BrowserDomAdapter.prototype.getText = function (el) {
    return el.textContent;
  };

  BrowserDomAdapter.prototype.setText = function (el, value) {
    el.textContent = value;
  };

  BrowserDomAdapter.prototype.getValue = function (el) {
    return el.value;
  };

  BrowserDomAdapter.prototype.setValue = function (el, value) {
    el.value = value;
  };

  BrowserDomAdapter.prototype.getChecked = function (el) {
    return el.checked;
  };

  BrowserDomAdapter.prototype.setChecked = function (el, value) {
    el.checked = value;
  };

  BrowserDomAdapter.prototype.createComment = function (text) {
    return this.getDefaultDocument().createComment(text);
  };

  BrowserDomAdapter.prototype.createTemplate = function (html) {
    var t = this.getDefaultDocument().createElement('template');
    t.innerHTML = html;
    return t;
  };

  BrowserDomAdapter.prototype.createElement = function (tagName, doc) {
    doc = doc || this.getDefaultDocument();
    return doc.createElement(tagName);
  };

  BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {
    doc = doc || this.getDefaultDocument();
    return doc.createElementNS(ns, tagName);
  };

  BrowserDomAdapter.prototype.createTextNode = function (text, doc) {
    doc = doc || this.getDefaultDocument();
    return doc.createTextNode(text);
  };

  BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {
    doc = doc || this.getDefaultDocument();
    var el = doc.createElement('SCRIPT');
    el.setAttribute(attrName, attrValue);
    return el;
  };

  BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {
    doc = doc || this.getDefaultDocument();
    var style = doc.createElement('style');
    this.appendChild(style, this.createTextNode(css, doc));
    return style;
  };

  BrowserDomAdapter.prototype.createShadowRoot = function (el) {
    return el.createShadowRoot();
  };

  BrowserDomAdapter.prototype.getShadowRoot = function (el) {
    return el.shadowRoot;
  };

  BrowserDomAdapter.prototype.getHost = function (el) {
    return el.host;
  };

  BrowserDomAdapter.prototype.clone = function (node) {
    return node.cloneNode(true);
  };

  BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {
    return element.getElementsByClassName(name);
  };

  BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {
    return element.getElementsByTagName(name);
  };

  BrowserDomAdapter.prototype.classList = function (element) {
    return Array.prototype.slice.call(element.classList, 0);
  };

  BrowserDomAdapter.prototype.addClass = function (element, className) {
    element.classList.add(className);
  };

  BrowserDomAdapter.prototype.removeClass = function (element, className) {
    element.classList.remove(className);
  };

  BrowserDomAdapter.prototype.hasClass = function (element, className) {
    return element.classList.contains(className);
  };

  BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {
    element.style[styleName] = styleValue;
  };

  BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {
    // IE requires '' instead of null
    // see https://github.com/angular/angular/issues/7916
    element.style[stylename] = '';
  };

  BrowserDomAdapter.prototype.getStyle = function (element, stylename) {
    return element.style[stylename];
  };

  BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {
    var value = this.getStyle(element, styleName) || '';
    return styleValue ? value == styleValue : value.length > 0;
  };

  BrowserDomAdapter.prototype.tagName = function (element) {
    return element.tagName;
  };

  BrowserDomAdapter.prototype.attributeMap = function (element) {
    var res = new Map();
    var elAttrs = element.attributes;

    for (var i = 0; i < elAttrs.length; i++) {
      var attrib = elAttrs.item(i);
      res.set(attrib.name, attrib.value);
    }

    return res;
  };

  BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {
    return element.hasAttribute(attribute);
  };

  BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {
    return element.hasAttributeNS(ns, attribute);
  };

  BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {
    return element.getAttribute(attribute);
  };

  BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {
    return element.getAttributeNS(ns, name);
  };

  BrowserDomAdapter.prototype.setAttribute = function (element, name, value) {
    element.setAttribute(name, value);
  };

  BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {
    element.setAttributeNS(ns, name, value);
  };

  BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) {
    element.removeAttribute(attribute);
  };

  BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {
    element.removeAttributeNS(ns, name);
  };

  BrowserDomAdapter.prototype.templateAwareRoot = function (el) {
    return this.isTemplateElement(el) ? this.content(el) : el;
  };

  BrowserDomAdapter.prototype.createHtmlDocument = function () {
    return document.implementation.createHTMLDocument('fakeTitle');
  };

  BrowserDomAdapter.prototype.getDefaultDocument = function () {
    return document;
  };

  BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {
    try {
      return el.getBoundingClientRect();
    } catch (e) {
      return {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
        width: 0,
        height: 0
      };
    }
  };

  BrowserDomAdapter.prototype.getTitle = function (doc) {
    return doc.title;
  };

  BrowserDomAdapter.prototype.setTitle = function (doc, newTitle) {
    doc.title = newTitle || '';
  };

  BrowserDomAdapter.prototype.elementMatches = function (n, selector) {
    if (this.isElementNode(n)) {
      return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);
    }

    return false;
  };

  BrowserDomAdapter.prototype.isTemplateElement = function (el) {
    return this.isElementNode(el) && el.nodeName === 'TEMPLATE';
  };

  BrowserDomAdapter.prototype.isTextNode = function (node) {
    return node.nodeType === Node.TEXT_NODE;
  };

  BrowserDomAdapter.prototype.isCommentNode = function (node) {
    return node.nodeType === Node.COMMENT_NODE;
  };

  BrowserDomAdapter.prototype.isElementNode = function (node) {
    return node.nodeType === Node.ELEMENT_NODE;
  };

  BrowserDomAdapter.prototype.hasShadowRoot = function (node) {
    return node.shadowRoot != null && node instanceof HTMLElement;
  };

  BrowserDomAdapter.prototype.isShadowRoot = function (node) {
    return node instanceof DocumentFragment;
  };

  BrowserDomAdapter.prototype.importIntoDoc = function (node) {
    return document.importNode(this.templateAwareRoot(node), true);
  };

  BrowserDomAdapter.prototype.adoptNode = function (node) {
    return document.adoptNode(node);
  };

  BrowserDomAdapter.prototype.getHref = function (el) {
    return el.getAttribute('href');
  };

  BrowserDomAdapter.prototype.getEventKey = function (event) {
    var key = event.key;

    if (key == null) {
      key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and
      // Safari cf
      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces

      if (key == null) {
        return 'Unidentified';
      }

      if (key.startsWith('U+')) {
        key = String.fromCharCode(parseInt(key.substring(2), 16));

        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {
          // There is a bug in Chrome for numeric keypad keys:
          // https://code.google.com/p/chromium/issues/detail?id=155654
          // 1, 2, 3 ... are reported as A, B, C ...
          key = _chromeNumKeyPadMap[key];
        }
      }
    }

    return _keyMap[key] || key;
  };

  BrowserDomAdapter.prototype.getGlobalEventTarget = function (doc, target) {
    if (target === 'window') {
      return window;
    }

    if (target === 'document') {
      return doc;
    }

    if (target === 'body') {
      return doc.body;
    }

    return null;
  };

  BrowserDomAdapter.prototype.getHistory = function () {
    return window.history;
  };

  BrowserDomAdapter.prototype.getLocation = function () {
    return window.location;
  };

  BrowserDomAdapter.prototype.getBaseHref = function (doc) {
    var href = getBaseElementHref();
    return href == null ? null : relativePath(href);
  };

  BrowserDomAdapter.prototype.resetBaseElement = function () {
    baseElement = null;
  };

  BrowserDomAdapter.prototype.getUserAgent = function () {
    return window.navigator.userAgent;
  };

  BrowserDomAdapter.prototype.setData = function (element, name, value) {
    this.setAttribute(element, 'data-' + name, value);
  };

  BrowserDomAdapter.prototype.getData = function (element, name) {
    return this.getAttribute(element, 'data-' + name);
  };

  BrowserDomAdapter.prototype.getComputedStyle = function (element) {
    return getComputedStyle(element);
  }; // TODO(tbosch): move this into a separate environment class once we have it
  // TODO(tbosch): move this into a separate environment class once we have it


  BrowserDomAdapter.prototype.supportsWebAnimation = // TODO(tbosch): move this into a separate environment class once we have it
  function () {
    return typeof Element.prototype['animate'] === 'function';
  };

  BrowserDomAdapter.prototype.performanceNow = function () {
    // performance.now() is not available in all browsers, see
    // http://caniuse.com/#search=performance.now
    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();
  };

  BrowserDomAdapter.prototype.supportsCookies = function () {
    return true;
  };

  BrowserDomAdapter.prototype.getCookie = function (name) {
    return (0, _common.ɵparseCookieValue)(document.cookie, name);
  };

  BrowserDomAdapter.prototype.setCookie = function (name, value) {
    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does
    // not clear other cookies.
    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);
  };

  return BrowserDomAdapter;
}(GenericBrowserDomAdapter);

exports.ɵBrowserDomAdapter = BrowserDomAdapter;
var baseElement = null;

function getBaseElementHref() {
  if (!baseElement) {
    baseElement = document.querySelector('base');

    if (!baseElement) {
      return null;
    }
  }

  return baseElement.getAttribute('href');
} // based on urlUtils.js in AngularJS 1


var urlParsingNode;

function relativePath(url) {
  if (!urlParsingNode) {
    urlParsingNode = document.createElement('a');
  }

  urlParsingNode.setAttribute('href', url);
  return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A DI Token representing the main rendering context. In a browser this is the DOM Document.
 *
 * Note: Document might not be available in the Application Context when Application and Rendering
 * Contexts are not the same (e.g. when running the application into a Web Worker).
 *
 * @deprecated import from `@angular/common` instead.
 */


var DOCUMENT$1 = _common.DOCUMENT;
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

exports.DOCUMENT = DOCUMENT$1;

function supportsState() {
  return !!window.history.pushState;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * `PlatformLocation` encapsulates all of the direct calls to platform APIs.
 * This class should not be used directly by an application developer. Instead, use
 * {@link Location}.
 */


var BrowserPlatformLocation =
/** @class */
function (_super) {
  (0, _tslib.__extends)(BrowserPlatformLocation, _super);

  function BrowserPlatformLocation(_doc) {
    var _this = _super.call(this) || this;

    _this._doc = _doc;

    _this._init();

    return _this;
  } // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it

  /** @internal */
  // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it

  /** @internal */


  BrowserPlatformLocation.prototype._init = // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it

  /** @internal */
  function () {
    this.location = getDOM().getLocation();
    this._history = getDOM().getHistory();
  };

  BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () {
    return getDOM().getBaseHref(this._doc);
  };

  BrowserPlatformLocation.prototype.onPopState = function (fn) {
    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);
  };

  BrowserPlatformLocation.prototype.onHashChange = function (fn) {
    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);
  };

  Object.defineProperty(BrowserPlatformLocation.prototype, "pathname", {
    get: function get() {
      return this.location.pathname;
    },
    set: function set(newPath) {
      this.location.pathname = newPath;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BrowserPlatformLocation.prototype, "search", {
    get: function get() {
      return this.location.search;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(BrowserPlatformLocation.prototype, "hash", {
    get: function get() {
      return this.location.hash;
    },
    enumerable: true,
    configurable: true
  });

  BrowserPlatformLocation.prototype.pushState = function (state, title, url) {
    if (supportsState()) {
      this._history.pushState(state, title, url);
    } else {
      this.location.hash = url;
    }
  };

  BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {
    if (supportsState()) {
      this._history.replaceState(state, title, url);
    } else {
      this.location.hash = url;
    }
  };

  BrowserPlatformLocation.prototype.forward = function () {
    this._history.forward();
  };

  BrowserPlatformLocation.prototype.back = function () {
    this._history.back();
  };

  BrowserPlatformLocation.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  BrowserPlatformLocation.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }];
  };

  return BrowserPlatformLocation;
}(_common.PlatformLocation);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A service that can be used to get and add meta tags.
 *
 * @experimental
 */


exports.ɵBrowserPlatformLocation = BrowserPlatformLocation;

var Meta =
/** @class */
function () {
  function Meta(_doc) {
    this._doc = _doc;
    this._dom = getDOM();
  }

  Meta.prototype.addTag = function (tag, forceCreation) {
    if (forceCreation === void 0) {
      forceCreation = false;
    }

    if (!tag) return null;
    return this._getOrCreateElement(tag, forceCreation);
  };

  Meta.prototype.addTags = function (tags, forceCreation) {
    var _this = this;

    if (forceCreation === void 0) {
      forceCreation = false;
    }

    if (!tags) return [];
    return tags.reduce(function (result, tag) {
      if (tag) {
        result.push(_this._getOrCreateElement(tag, forceCreation));
      }

      return result;
    }, []);
  };

  Meta.prototype.getTag = function (attrSelector) {
    if (!attrSelector) return null;
    return this._dom.querySelector(this._doc, "meta[" + attrSelector + "]") || null;
  };

  Meta.prototype.getTags = function (attrSelector) {
    if (!attrSelector) return [];

    var list = this._dom.querySelectorAll(this._doc, "meta[" + attrSelector + "]");

    return list ? [].slice.call(list) : [];
  };

  Meta.prototype.updateTag = function (tag, selector) {
    if (!tag) return null;
    selector = selector || this._parseSelector(tag);
    var meta = this.getTag(selector);

    if (meta) {
      return this._setMetaElementAttributes(tag, meta);
    }

    return this._getOrCreateElement(tag, true);
  };

  Meta.prototype.removeTag = function (attrSelector) {
    this.removeTagElement(this.getTag(attrSelector));
  };

  Meta.prototype.removeTagElement = function (meta) {
    if (meta) {
      this._dom.remove(meta);
    }
  };

  Meta.prototype._getOrCreateElement = function (meta, forceCreation) {
    if (forceCreation === void 0) {
      forceCreation = false;
    }

    if (!forceCreation) {
      var selector = this._parseSelector(meta);

      var elem = this.getTag(selector); // It's allowed to have multiple elements with the same name so it's not enough to
      // just check that element with the same name already present on the page. We also need to
      // check if element has tag attributes

      if (elem && this._containsAttributes(meta, elem)) return elem;
    }

    var element = this._dom.createElement('meta');

    this._setMetaElementAttributes(meta, element);

    var head = this._dom.getElementsByTagName(this._doc, 'head')[0];

    this._dom.appendChild(head, element);

    return element;
  };

  Meta.prototype._setMetaElementAttributes = function (tag, el) {
    var _this = this;

    Object.keys(tag).forEach(function (prop) {
      return _this._dom.setAttribute(el, prop, tag[prop]);
    });
    return el;
  };

  Meta.prototype._parseSelector = function (tag) {
    var attr = tag.name ? 'name' : 'property';
    return attr + "=\"" + tag[attr] + "\"";
  };

  Meta.prototype._containsAttributes = function (tag, elem) {
    var _this = this;

    return Object.keys(tag).every(function (key) {
      return _this._dom.getAttribute(elem, key) === tag[key];
    });
  };

  Meta.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  Meta.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }];
  };

  return Meta;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An id that identifies a particular application being bootstrapped, that should
 * match across the client/server boundary.
 */


exports.Meta = Meta;
var TRANSITION_ID = new _core.InjectionToken('TRANSITION_ID');
exports.ɵTRANSITION_ID = TRANSITION_ID;

function appInitializerFactory(transitionId, document, injector) {
  return function () {
    // Wait for all application initializers to be completed before removing the styles set by
    // the server.
    injector.get(_core.ApplicationInitStatus).donePromise.then(function () {
      var dom = getDOM();
      var styles = Array.prototype.slice.apply(dom.querySelectorAll(document, "style[ng-transition]"));
      styles.filter(function (el) {
        return dom.getAttribute(el, 'ng-transition') === transitionId;
      }).forEach(function (el) {
        return dom.remove(el);
      });
    });
  };
}

var SERVER_TRANSITION_PROVIDERS = [{
  provide: _core.APP_INITIALIZER,
  useFactory: appInitializerFactory,
  deps: [TRANSITION_ID, DOCUMENT$1, _core.Injector],
  multi: true
}];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

exports.ɵangular_packages_platform_browser_platform_browser_g = SERVER_TRANSITION_PROVIDERS;

var BrowserGetTestability =
/** @class */
function () {
  function BrowserGetTestability() {}

  BrowserGetTestability.init = function () {
    (0, _core.setTestabilityGetter)(new BrowserGetTestability());
  };

  BrowserGetTestability.prototype.addToWindow = function (registry) {
    _core.ɵglobal['getAngularTestability'] = function (elem, findInAncestors) {
      if (findInAncestors === void 0) {
        findInAncestors = true;
      }

      var testability = registry.findTestabilityInTree(elem, findInAncestors);

      if (testability == null) {
        throw new Error('Could not find testability for element.');
      }

      return testability;
    };

    _core.ɵglobal['getAllAngularTestabilities'] = function () {
      return registry.getAllTestabilities();
    };

    _core.ɵglobal['getAllAngularRootElements'] = function () {
      return registry.getAllRootElements();
    };

    var whenAllStable = function whenAllStable(callback
    /** TODO #9100 */
    ) {
      var testabilities = _core.ɵglobal['getAllAngularTestabilities']();

      var count = testabilities.length;
      var didWork = false;

      var decrement = function decrement(didWork_
      /** TODO #9100 */
      ) {
        didWork = didWork || didWork_;
        count--;

        if (count == 0) {
          callback(didWork);
        }
      };

      testabilities.forEach(function (testability
      /** TODO #9100 */
      ) {
        testability.whenStable(decrement);
      });
    };

    if (!_core.ɵglobal['frameworkStabilizers']) {
      _core.ɵglobal['frameworkStabilizers'] = [];
    }

    _core.ɵglobal['frameworkStabilizers'].push(whenAllStable);
  };

  BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {
    if (elem == null) {
      return null;
    }

    var t = registry.getTestability(elem);

    if (t != null) {
      return t;
    } else if (!findInAncestors) {
      return null;
    }

    if (getDOM().isShadowRoot(elem)) {
      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);
    }

    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);
  };

  return BrowserGetTestability;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A service that can be used to get and set the title of a current HTML document.
 *
 * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)
 * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements
 * (representing the `<title>` tag). Instead, this service can be used to set and get the current
 * title value.
 *
 * @experimental
 */


exports.ɵBrowserGetTestability = BrowserGetTestability;

var Title =
/** @class */
function () {
  function Title(_doc) {
    this._doc = _doc;
  }
  /**
   * Get the title of the current HTML document.
   */

  /**
     * Get the title of the current HTML document.
     */


  Title.prototype.getTitle =
  /**
  * Get the title of the current HTML document.
  */
  function () {
    return getDOM().getTitle(this._doc);
  };
  /**
   * Set the title of the current HTML document.
   * @param newTitle
   */

  /**
     * Set the title of the current HTML document.
     * @param newTitle
     */


  Title.prototype.setTitle =
  /**
  * Set the title of the current HTML document.
  * @param newTitle
  */
  function (newTitle) {
    getDOM().setTitle(this._doc, newTitle);
  };

  Title.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  Title.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }];
  };

  return Title;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if
 * `name` is `'probe'`.
 * @param name Name under which it will be exported. Keep in mind this will be a property of the
 * global `ng` object.
 * @param value The value to export.
 */


exports.Title = Title;

function exportNgVar(name, value) {
  if (typeof COMPILED === 'undefined' || !COMPILED) {
    // Note: we can't export `ng` when using closure enhanced optimization as:
    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global
    // - we can't declare a closure extern as the namespace `ng` is already used within Google
    //   for typings for angularJS (via `goog.provide('ng....')`).
    var ng = _core.ɵglobal['ng'] = _core.ɵglobal['ng'] || {};
    ng[name] = value;
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CORE_TOKENS = {
  'ApplicationRef': _core.ApplicationRef,
  'NgZone': _core.NgZone
};
var INSPECT_GLOBAL_NAME = 'probe';
var CORE_TOKENS_GLOBAL_NAME = 'coreTokens';
/**
 * Returns a {@link DebugElement} for the given native DOM element, or
 * null if the given native element does not have an Angular view associated
 * with it.
 */

function inspectNativeElement(element) {
  return (0, _core.getDebugNode)(element);
}

function _createNgProbe(coreTokens) {
  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);
  exportNgVar(CORE_TOKENS_GLOBAL_NAME, (0, _tslib.__assign)({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));
  return function () {
    return inspectNativeElement;
  };
}

function _ngProbeTokensToMap(tokens) {
  return tokens.reduce(function (prev, t) {
    return prev[t.name] = t.token, prev;
  }, {});
}
/**
 * Providers which support debugging Angular applications (e.g. via `ng.probe`).
 */


var ELEMENT_PROBE_PROVIDERS = [{
  provide: _core.APP_INITIALIZER,
  useFactory: _createNgProbe,
  deps: [[_core.NgProbeToken, new _core.Optional()]],
  multi: true
}];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 */

exports.ɵELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS;
var EVENT_MANAGER_PLUGINS = new _core.InjectionToken('EventManagerPlugins');
/**
 *
 */

exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;

var EventManager =
/** @class */
function () {
  function EventManager(plugins, _zone) {
    var _this = this;

    this._zone = _zone;
    this._eventNameToPlugin = new Map();
    plugins.forEach(function (p) {
      return p.manager = _this;
    });
    this._plugins = plugins.slice().reverse();
  }

  EventManager.prototype.addEventListener = function (element, eventName, handler) {
    var plugin = this._findPluginFor(eventName);

    return plugin.addEventListener(element, eventName, handler);
  };

  EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {
    var plugin = this._findPluginFor(eventName);

    return plugin.addGlobalEventListener(target, eventName, handler);
  };

  EventManager.prototype.getZone = function () {
    return this._zone;
  };
  /** @internal */

  /** @internal */


  EventManager.prototype._findPluginFor =
  /** @internal */
  function (eventName) {
    var plugin = this._eventNameToPlugin.get(eventName);

    if (plugin) {
      return plugin;
    }

    var plugins = this._plugins;

    for (var i = 0; i < plugins.length; i++) {
      var plugin_1 = plugins[i];

      if (plugin_1.supports(eventName)) {
        this._eventNameToPlugin.set(eventName, plugin_1);

        return plugin_1;
      }
    }

    throw new Error("No event manager plugin found for event " + eventName);
  };

  EventManager.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  EventManager.ctorParameters = function () {
    return [{
      type: Array,
      decorators: [{
        type: _core.Inject,
        args: [EVENT_MANAGER_PLUGINS]
      }]
    }, {
      type: _core.NgZone
    }];
  };

  return EventManager;
}();

exports.EventManager = EventManager;

var EventManagerPlugin =
/** @class */
function () {
  function EventManagerPlugin(_doc) {
    this._doc = _doc;
  }

  EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {
    var target = getDOM().getGlobalEventTarget(this._doc, element);

    if (!target) {
      throw new Error("Unsupported event target " + target + " for event " + eventName);
    }

    return this.addEventListener(target, eventName, handler);
  };

  return EventManagerPlugin;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵangular_packages_platform_browser_platform_browser_d = EventManagerPlugin;

var SharedStylesHost =
/** @class */
function () {
  function SharedStylesHost() {
    /** @internal */
    this._stylesSet = new Set();
  }

  SharedStylesHost.prototype.addStyles = function (styles) {
    var _this = this;

    var additions = new Set();
    styles.forEach(function (style) {
      if (!_this._stylesSet.has(style)) {
        _this._stylesSet.add(style);

        additions.add(style);
      }
    });
    this.onStylesAdded(additions);
  };

  SharedStylesHost.prototype.onStylesAdded = function (additions) {};

  SharedStylesHost.prototype.getAllStyles = function () {
    return Array.from(this._stylesSet);
  };

  SharedStylesHost.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  SharedStylesHost.ctorParameters = function () {
    return [];
  };

  return SharedStylesHost;
}();

exports.ɵSharedStylesHost = SharedStylesHost;

var DomSharedStylesHost =
/** @class */
function (_super) {
  (0, _tslib.__extends)(DomSharedStylesHost, _super);

  function DomSharedStylesHost(_doc) {
    var _this = _super.call(this) || this;

    _this._doc = _doc;
    _this._hostNodes = new Set();
    _this._styleNodes = new Set();

    _this._hostNodes.add(_doc.head);

    return _this;
  }

  DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {
    var _this = this;

    styles.forEach(function (style) {
      var styleEl = _this._doc.createElement('style');

      styleEl.textContent = style;

      _this._styleNodes.add(host.appendChild(styleEl));
    });
  };

  DomSharedStylesHost.prototype.addHost = function (hostNode) {
    this._addStylesToHost(this._stylesSet, hostNode);

    this._hostNodes.add(hostNode);
  };

  DomSharedStylesHost.prototype.removeHost = function (hostNode) {
    this._hostNodes.delete(hostNode);
  };

  DomSharedStylesHost.prototype.onStylesAdded = function (additions) {
    var _this = this;

    this._hostNodes.forEach(function (hostNode) {
      return _this._addStylesToHost(additions, hostNode);
    });
  };

  DomSharedStylesHost.prototype.ngOnDestroy = function () {
    this._styleNodes.forEach(function (styleNode) {
      return getDOM().remove(styleNode);
    });
  };

  DomSharedStylesHost.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  DomSharedStylesHost.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }];
  };

  return DomSharedStylesHost;
}(SharedStylesHost);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵDomSharedStylesHost = DomSharedStylesHost;
var NAMESPACE_URIS = {
  'svg': 'http://www.w3.org/2000/svg',
  'xhtml': 'http://www.w3.org/1999/xhtml',
  'xlink': 'http://www.w3.org/1999/xlink',
  'xml': 'http://www.w3.org/XML/1998/namespace',
  'xmlns': 'http://www.w3.org/2000/xmlns/'
};
exports.ɵNAMESPACE_URIS = NAMESPACE_URIS;
var COMPONENT_REGEX = /%COMP%/g;
var COMPONENT_VARIABLE = '%COMP%';
var HOST_ATTR = "_nghost-" + COMPONENT_VARIABLE;
var CONTENT_ATTR = "_ngcontent-" + COMPONENT_VARIABLE;

function shimContentAttribute(componentShortId) {
  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);
}

function shimHostAttribute(componentShortId) {
  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);
}

function flattenStyles(compId, styles, target) {
  for (var i = 0; i < styles.length; i++) {
    var style = styles[i];

    if (Array.isArray(style)) {
      flattenStyles(compId, style, target);
    } else {
      style = style.replace(COMPONENT_REGEX, compId);
      target.push(style);
    }
  }

  return target;
}

function decoratePreventDefault(eventHandler) {
  return function (event) {
    var allowDefaultBehavior = eventHandler(event);

    if (allowDefaultBehavior === false) {
      // TODO(tbosch): move preventDefault into event plugins...
      event.preventDefault();
      event.returnValue = false;
    }
  };
}

var DomRendererFactory2 =
/** @class */
function () {
  function DomRendererFactory2(eventManager, sharedStylesHost) {
    this.eventManager = eventManager;
    this.sharedStylesHost = sharedStylesHost;
    this.rendererByCompId = new Map();
    this.defaultRenderer = new DefaultDomRenderer2(eventManager);
  }

  DomRendererFactory2.prototype.createRenderer = function (element, type) {
    if (!element || !type) {
      return this.defaultRenderer;
    }

    switch (type.encapsulation) {
      case _core.ViewEncapsulation.Emulated:
        {
          var renderer = this.rendererByCompId.get(type.id);

          if (!renderer) {
            renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);
            this.rendererByCompId.set(type.id, renderer);
          }

          renderer.applyToHost(element);
          return renderer;
        }

      case _core.ViewEncapsulation.Native:
        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);

      default:
        {
          if (!this.rendererByCompId.has(type.id)) {
            var styles = flattenStyles(type.id, type.styles, []);
            this.sharedStylesHost.addStyles(styles);
            this.rendererByCompId.set(type.id, this.defaultRenderer);
          }

          return this.defaultRenderer;
        }
    }
  };

  DomRendererFactory2.prototype.begin = function () {};

  DomRendererFactory2.prototype.end = function () {};

  DomRendererFactory2.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  DomRendererFactory2.ctorParameters = function () {
    return [{
      type: EventManager
    }, {
      type: DomSharedStylesHost
    }];
  };

  return DomRendererFactory2;
}();

exports.ɵDomRendererFactory2 = DomRendererFactory2;

var DefaultDomRenderer2 =
/** @class */
function () {
  function DefaultDomRenderer2(eventManager) {
    this.eventManager = eventManager;
    this.data = Object.create(null);
  }

  DefaultDomRenderer2.prototype.destroy = function () {};

  DefaultDomRenderer2.prototype.createElement = function (name, namespace) {
    if (namespace) {
      return document.createElementNS(NAMESPACE_URIS[namespace], name);
    }

    return document.createElement(name);
  };

  DefaultDomRenderer2.prototype.createComment = function (value) {
    return document.createComment(value);
  };

  DefaultDomRenderer2.prototype.createText = function (value) {
    return document.createTextNode(value);
  };

  DefaultDomRenderer2.prototype.appendChild = function (parent, newChild) {
    parent.appendChild(newChild);
  };

  DefaultDomRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {
    if (parent) {
      parent.insertBefore(newChild, refChild);
    }
  };

  DefaultDomRenderer2.prototype.removeChild = function (parent, oldChild) {
    if (parent) {
      parent.removeChild(oldChild);
    }
  };

  DefaultDomRenderer2.prototype.selectRootElement = function (selectorOrNode) {
    var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;

    if (!el) {
      throw new Error("The selector \"" + selectorOrNode + "\" did not match any elements");
    }

    el.textContent = '';
    return el;
  };

  DefaultDomRenderer2.prototype.parentNode = function (node) {
    return node.parentNode;
  };

  DefaultDomRenderer2.prototype.nextSibling = function (node) {
    return node.nextSibling;
  };

  DefaultDomRenderer2.prototype.setAttribute = function (el, name, value, namespace) {
    if (namespace) {
      name = namespace + ":" + name;
      var namespaceUri = NAMESPACE_URIS[namespace];

      if (namespaceUri) {
        el.setAttributeNS(namespaceUri, name, value);
      } else {
        el.setAttribute(name, value);
      }
    } else {
      el.setAttribute(name, value);
    }
  };

  DefaultDomRenderer2.prototype.removeAttribute = function (el, name, namespace) {
    if (namespace) {
      var namespaceUri = NAMESPACE_URIS[namespace];

      if (namespaceUri) {
        el.removeAttributeNS(namespaceUri, name);
      } else {
        el.removeAttribute(namespace + ":" + name);
      }
    } else {
      el.removeAttribute(name);
    }
  };

  DefaultDomRenderer2.prototype.addClass = function (el, name) {
    el.classList.add(name);
  };

  DefaultDomRenderer2.prototype.removeClass = function (el, name) {
    el.classList.remove(name);
  };

  DefaultDomRenderer2.prototype.setStyle = function (el, style, value, flags) {
    if (flags & _core.RendererStyleFlags2.DashCase) {
      el.style.setProperty(style, value, !!(flags & _core.RendererStyleFlags2.Important) ? 'important' : '');
    } else {
      el.style[style] = value;
    }
  };

  DefaultDomRenderer2.prototype.removeStyle = function (el, style, flags) {
    if (flags & _core.RendererStyleFlags2.DashCase) {
      el.style.removeProperty(style);
    } else {
      // IE requires '' instead of null
      // see https://github.com/angular/angular/issues/7916
      el.style[style] = '';
    }
  };

  DefaultDomRenderer2.prototype.setProperty = function (el, name, value) {
    checkNoSyntheticProp(name, 'property');
    el[name] = value;
  };

  DefaultDomRenderer2.prototype.setValue = function (node, value) {
    node.nodeValue = value;
  };

  DefaultDomRenderer2.prototype.listen = function (target, event, callback) {
    checkNoSyntheticProp(event, 'listener');

    if (typeof target === 'string') {
      return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));
    }

    return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));
  };

  return DefaultDomRenderer2;
}();

var AT_CHARCODE = '@'.charCodeAt(0);

function checkNoSyntheticProp(name, nameKind) {
  if (name.charCodeAt(0) === AT_CHARCODE) {
    throw new Error("Found the synthetic " + nameKind + " " + name + ". Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.");
  }
}

var EmulatedEncapsulationDomRenderer2 =
/** @class */
function (_super) {
  (0, _tslib.__extends)(EmulatedEncapsulationDomRenderer2, _super);

  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component) {
    var _this = _super.call(this, eventManager) || this;

    _this.component = component;
    var styles = flattenStyles(component.id, component.styles, []);
    sharedStylesHost.addStyles(styles);
    _this.contentAttr = shimContentAttribute(component.id);
    _this.hostAttr = shimHostAttribute(component.id);
    return _this;
  }

  EmulatedEncapsulationDomRenderer2.prototype.applyToHost = function (element) {
    _super.prototype.setAttribute.call(this, element, this.hostAttr, '');
  };

  EmulatedEncapsulationDomRenderer2.prototype.createElement = function (parent, name) {
    var el = _super.prototype.createElement.call(this, parent, name);

    _super.prototype.setAttribute.call(this, el, this.contentAttr, '');

    return el;
  };

  return EmulatedEncapsulationDomRenderer2;
}(DefaultDomRenderer2);

var ShadowDomRenderer =
/** @class */
function (_super) {
  (0, _tslib.__extends)(ShadowDomRenderer, _super);

  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {
    var _this = _super.call(this, eventManager) || this;

    _this.sharedStylesHost = sharedStylesHost;
    _this.hostEl = hostEl;
    _this.component = component;
    _this.shadowRoot = hostEl.createShadowRoot();

    _this.sharedStylesHost.addHost(_this.shadowRoot);

    var styles = flattenStyles(component.id, component.styles, []);

    for (var i = 0; i < styles.length; i++) {
      var styleEl = document.createElement('style');
      styleEl.textContent = styles[i];

      _this.shadowRoot.appendChild(styleEl);
    }

    return _this;
  }

  ShadowDomRenderer.prototype.nodeOrShadowRoot = function (node) {
    return node === this.hostEl ? this.shadowRoot : node;
  };

  ShadowDomRenderer.prototype.destroy = function () {
    this.sharedStylesHost.removeHost(this.shadowRoot);
  };

  ShadowDomRenderer.prototype.appendChild = function (parent, newChild) {
    return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);
  };

  ShadowDomRenderer.prototype.insertBefore = function (parent, newChild, refChild) {
    return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);
  };

  ShadowDomRenderer.prototype.removeChild = function (parent, oldChild) {
    return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);
  };

  ShadowDomRenderer.prototype.parentNode = function (node) {
    return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));
  };

  return ShadowDomRenderer;
}(DefaultDomRenderer2);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ɵ0 = function ɵ0(v) {
  return '__zone_symbol__' + v;
};
/**
 * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'
 * since Angular can do much more
 * efficient bookkeeping than Zone can, because we have additional information. This speeds up
 * addEventListener by 3x.
 */


var __symbol__ = typeof Zone !== 'undefined' && Zone['__symbol__'] || ɵ0;

var ADD_EVENT_LISTENER = __symbol__('addEventListener');

var REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');

var symbolNames = {};
var FALSE = 'FALSE';
var ANGULAR = 'ANGULAR';
var NATIVE_ADD_LISTENER = 'addEventListener';
var NATIVE_REMOVE_LISTENER = 'removeEventListener'; // use the same symbol string which is used in zone.js

var stopSymbol = '__zone_symbol__propagationStopped';
var stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';

var blackListedEvents = typeof Zone !== 'undefined' && Zone[__symbol__('BLACK_LISTED_EVENTS')];

var blackListedMap;

if (blackListedEvents) {
  blackListedMap = {};
  blackListedEvents.forEach(function (eventName) {
    blackListedMap[eventName] = eventName;
  });
}

var isBlackListedEvent = function isBlackListedEvent(eventName) {
  if (!blackListedMap) {
    return false;
  }

  return blackListedMap.hasOwnProperty(eventName);
}; // a global listener to handle all dom event,
// so we do not need to create a closure every time


var globalListener = function globalListener(event) {
  var symbolName = symbolNames[event.type];

  if (!symbolName) {
    return;
  }

  var taskDatas = this[symbolName];

  if (!taskDatas) {
    return;
  }

  var args = [event];

  if (taskDatas.length === 1) {
    // if taskDatas only have one element, just invoke it
    var taskData = taskDatas[0];

    if (taskData.zone !== Zone.current) {
      // only use Zone.run when Zone.current not equals to stored zone
      return taskData.zone.run(taskData.handler, this, args);
    } else {
      return taskData.handler.apply(this, args);
    }
  } else {
    // copy tasks as a snapshot to avoid event handlers remove
    // itself or others
    var copiedTasks = taskDatas.slice();

    for (var i = 0; i < copiedTasks.length; i++) {
      // if other listener call event.stopImmediatePropagation
      // just break
      if (event[stopSymbol] === true) {
        break;
      }

      var taskData = copiedTasks[i];

      if (taskData.zone !== Zone.current) {
        // only use Zone.run when Zone.current not equals to stored zone
        taskData.zone.run(taskData.handler, this, args);
      } else {
        taskData.handler.apply(this, args);
      }
    }
  }
};

var DomEventsPlugin =
/** @class */
function (_super) {
  (0, _tslib.__extends)(DomEventsPlugin, _super);

  function DomEventsPlugin(doc, ngZone) {
    var _this = _super.call(this, doc) || this;

    _this.ngZone = ngZone;

    _this.patchEvent();

    return _this;
  }

  DomEventsPlugin.prototype.patchEvent = function () {
    if (!Event || !Event.prototype) {
      return;
    }

    if (Event.prototype[stopMethodSymbol]) {
      // already patched by zone.js
      return;
    }

    var delegate = Event.prototype[stopMethodSymbol] = Event.prototype.stopImmediatePropagation;

    Event.prototype.stopImmediatePropagation = function () {
      if (this) {
        this[stopSymbol] = true;
      } // should call native delegate in case
      // in some environment part of the application
      // will not use the patched Event


      delegate && delegate.apply(this, arguments);
    };
  }; // This plugin should come last in the list of plugins, because it accepts all
  // events.
  // This plugin should come last in the list of plugins, because it accepts all
  // events.


  DomEventsPlugin.prototype.supports = // This plugin should come last in the list of plugins, because it accepts all
  // events.
  function (eventName) {
    return true;
  };

  DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {
    var _this = this;
    /**
         * This code is about to add a listener to the DOM. If Zone.js is present, than
         * `addEventListener` has been patched. The patched code adds overhead in both
         * memory and speed (3x slower) than native. For this reason if we detect that
         * Zone.js is present we use a simple version of zone aware addEventListener instead.
         * The result is faster registration and the zone will be restored.
         * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask
         * will not be invoked
         * We also do manual zone restoration in element.ts renderEventHandlerClosure method.
         *
         * NOTE: it is possible that the element is from different iframe, and so we
         * have to check before we execute the method.
         */


    var zoneJsLoaded = element[ADD_EVENT_LISTENER];
    var callback = handler; // if zonejs is loaded and current zone is not ngZone
    // we keep Zone.current on target for later restoration.

    if (zoneJsLoaded && (!_core.NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {
      var symbolName = symbolNames[eventName];

      if (!symbolName) {
        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);
      }

      var taskDatas = element[symbolName];
      var globalListenerRegistered = taskDatas && taskDatas.length > 0;

      if (!taskDatas) {
        taskDatas = element[symbolName] = [];
      }

      var zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;

      if (taskDatas.length === 0) {
        taskDatas.push({
          zone: zone,
          handler: callback
        });
      } else {
        var callbackRegistered = false;

        for (var i = 0; i < taskDatas.length; i++) {
          if (taskDatas[i].handler === callback) {
            callbackRegistered = true;
            break;
          }
        }

        if (!callbackRegistered) {
          taskDatas.push({
            zone: zone,
            handler: callback
          });
        }
      }

      if (!globalListenerRegistered) {
        element[ADD_EVENT_LISTENER](eventName, globalListener, false);
      }
    } else {
      element[NATIVE_ADD_LISTENER](eventName, callback, false);
    }

    return function () {
      return _this.removeEventListener(element, eventName, callback);
    };
  };

  DomEventsPlugin.prototype.removeEventListener = function (target, eventName, callback) {
    var underlyingRemove = target[REMOVE_EVENT_LISTENER]; // zone.js not loaded, use native removeEventListener

    if (!underlyingRemove) {
      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);
    }

    var symbolName = symbolNames[eventName];
    var taskDatas = symbolName && target[symbolName];

    if (!taskDatas) {
      // addEventListener not using patched version
      // just call native removeEventListener
      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);
    } // fix issue 20532, should be able to remove
    // listener which was added inside of ngZone


    var found = false;

    for (var i = 0; i < taskDatas.length; i++) {
      // remove listener from taskDatas if the callback equals
      if (taskDatas[i].handler === callback) {
        found = true;
        taskDatas.splice(i, 1);
        break;
      }
    }

    if (found) {
      if (taskDatas.length === 0) {
        // all listeners are removed, we can remove the globalListener from target
        underlyingRemove.apply(target, [eventName, globalListener, false]);
      }
    } else {
      // not found in taskDatas, the callback may be added inside of ngZone
      // use native remove listener to remove the callback
      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);
    }
  };

  DomEventsPlugin.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  DomEventsPlugin.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }, {
      type: _core.NgZone
    }];
  };

  return DomEventsPlugin;
}(EventManagerPlugin);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵDomEventsPlugin = DomEventsPlugin;
var EVENT_NAMES = {
  // pan
  'pan': true,
  'panstart': true,
  'panmove': true,
  'panend': true,
  'pancancel': true,
  'panleft': true,
  'panright': true,
  'panup': true,
  'pandown': true,
  // pinch
  'pinch': true,
  'pinchstart': true,
  'pinchmove': true,
  'pinchend': true,
  'pinchcancel': true,
  'pinchin': true,
  'pinchout': true,
  // press
  'press': true,
  'pressup': true,
  // rotate
  'rotate': true,
  'rotatestart': true,
  'rotatemove': true,
  'rotateend': true,
  'rotatecancel': true,
  // swipe
  'swipe': true,
  'swipeleft': true,
  'swiperight': true,
  'swipeup': true,
  'swipedown': true,
  // tap
  'tap': true
};
/**
 * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure
 * Hammer gestures.
 *
 * @experimental
 */

var HAMMER_GESTURE_CONFIG = new _core.InjectionToken('HammerGestureConfig');
/**
 * @experimental
 */

exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;

var HammerGestureConfig =
/** @class */
function () {
  function HammerGestureConfig() {
    this.events = [];
    this.overrides = {};
  }

  HammerGestureConfig.prototype.buildHammer = function (element) {
    var mc = new Hammer(element, this.options);
    mc.get('pinch').set({
      enable: true
    });
    mc.get('rotate').set({
      enable: true
    });

    for (var eventName in this.overrides) {
      mc.get(eventName).set(this.overrides[eventName]);
    }

    return mc;
  };

  HammerGestureConfig.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  HammerGestureConfig.ctorParameters = function () {
    return [];
  };

  return HammerGestureConfig;
}();

exports.HammerGestureConfig = HammerGestureConfig;

var HammerGesturesPlugin =
/** @class */
function (_super) {
  (0, _tslib.__extends)(HammerGesturesPlugin, _super);

  function HammerGesturesPlugin(doc, _config, console) {
    var _this = _super.call(this, doc) || this;

    _this._config = _config;
    _this.console = console;
    return _this;
  }

  HammerGesturesPlugin.prototype.supports = function (eventName) {
    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {
      return false;
    }

    if (!window.Hammer) {
      this.console.warn("Hammer.js is not loaded, can not bind '" + eventName + "' event.");
      return false;
    }

    return true;
  };

  HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {
    var _this = this;

    var zone = this.manager.getZone();
    eventName = eventName.toLowerCase();
    return zone.runOutsideAngular(function () {
      // Creating the manager bind events, must be done outside of angular
      var mc = _this._config.buildHammer(element);

      var callback = function callback(eventObj) {
        zone.runGuarded(function () {
          handler(eventObj);
        });
      };

      mc.on(eventName, callback);
      return function () {
        return mc.off(eventName, callback);
      };
    });
  };

  HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) {
    return this._config.events.indexOf(eventName) > -1;
  };

  HammerGesturesPlugin.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  HammerGesturesPlugin.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }, {
      type: HammerGestureConfig,
      decorators: [{
        type: _core.Inject,
        args: [HAMMER_GESTURE_CONFIG]
      }]
    }, {
      type: _core.ɵConsole
    }];
  };

  return HammerGesturesPlugin;
}(EventManagerPlugin);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵHammerGesturesPlugin = HammerGesturesPlugin;
var MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];

var ɵ0$1 = function ɵ0$1(event) {
  return event.altKey;
};

var ɵ1$1 = function ɵ1$1(event) {
  return event.ctrlKey;
};

var ɵ2$1 = function ɵ2$1(event) {
  return event.metaKey;
};

var ɵ3 = function ɵ3(event) {
  return event.shiftKey;
};

var MODIFIER_KEY_GETTERS = {
  'alt': ɵ0$1,
  'control': ɵ1$1,
  'meta': ɵ2$1,
  'shift': ɵ3
};
/**
 * @experimental
 */

var KeyEventsPlugin =
/** @class */
function (_super) {
  (0, _tslib.__extends)(KeyEventsPlugin, _super);

  function KeyEventsPlugin(doc) {
    return _super.call(this, doc) || this;
  }

  KeyEventsPlugin.prototype.supports = function (eventName) {
    return KeyEventsPlugin.parseEventName(eventName) != null;
  };

  KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {
    var parsedEvent = KeyEventsPlugin.parseEventName(eventName);
    var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());
    return this.manager.getZone().runOutsideAngular(function () {
      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);
    });
  };

  KeyEventsPlugin.parseEventName = function (eventName) {
    var parts = eventName.toLowerCase().split('.');
    var domEventName = parts.shift();

    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {
      return null;
    }

    var key = KeyEventsPlugin._normalizeKey(parts.pop());

    var fullKey = '';
    MODIFIER_KEYS.forEach(function (modifierName) {
      var index = parts.indexOf(modifierName);

      if (index > -1) {
        parts.splice(index, 1);
        fullKey += modifierName + '.';
      }
    });
    fullKey += key;

    if (parts.length != 0 || key.length === 0) {
      // returning null instead of throwing to let another plugin process the event
      return null;
    }

    var result = {};
    result['domEventName'] = domEventName;
    result['fullKey'] = fullKey;
    return result;
  };

  KeyEventsPlugin.getEventFullKey = function (event) {
    var fullKey = '';
    var key = getDOM().getEventKey(event);
    key = key.toLowerCase();

    if (key === ' ') {
      key = 'space'; // for readability
    } else if (key === '.') {
      key = 'dot'; // because '.' is used as a separator in event names
    }

    MODIFIER_KEYS.forEach(function (modifierName) {
      if (modifierName != key) {
        var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];

        if (modifierGetter(event)) {
          fullKey += modifierName + '.';
        }
      }
    });
    fullKey += key;
    return fullKey;
  };

  KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {
    return function (event
    /** TODO #9100 */
    ) {
      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {
        zone.runGuarded(function () {
          return handler(event);
        });
      }
    };
  };
  /** @internal */

  /** @internal */


  KeyEventsPlugin._normalizeKey =
  /** @internal */
  function (keyName) {
    // TODO: switch to a Map if the mapping grows too much
    switch (keyName) {
      case 'esc':
        return 'escape';

      default:
        return keyName;
    }
  };

  KeyEventsPlugin.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  KeyEventsPlugin.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }];
  };

  return KeyEventsPlugin;
}(EventManagerPlugin);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing
 * values to be safe to use in the different DOM contexts.
 *
 * For example, when binding a URL in an `<a [href]="someValue">` hyperlink, `someValue` will be
 * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on
 * the website.
 *
 * In specific situations, it might be necessary to disable sanitization, for example if the
 * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.
 * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`
 * methods, and then binding to that value from the template.
 *
 * These situations should be very rare, and extraordinary care must be taken to avoid creating a
 * Cross Site Scripting (XSS) security bug!
 *
 * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as
 * close as possible to the source of the value, to make it easy to verify no security bug is
 * created by its use.
 *
 * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that
 * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous
 * code. The sanitizer leaves safe values intact.
 *
 * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in
 * sanitization for the value passed in. Carefully check and audit all values and code paths going
 * into this call. Make sure any user data is appropriately escaped for this security context.
 * For more detail, see the [Security Guide](http://g.co/ng/security).
 *
 *
 */


exports.ɵKeyEventsPlugin = KeyEventsPlugin;

var DomSanitizer =
/** @class */
function () {
  function DomSanitizer() {}

  return DomSanitizer;
}();

exports.DomSanitizer = DomSanitizer;

var DomSanitizerImpl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(DomSanitizerImpl, _super);

  function DomSanitizerImpl(_doc) {
    var _this = _super.call(this) || this;

    _this._doc = _doc;
    return _this;
  }

  DomSanitizerImpl.prototype.sanitize = function (ctx, value) {
    if (value == null) return null;

    switch (ctx) {
      case _core.SecurityContext.NONE:
        return value;

      case _core.SecurityContext.HTML:
        if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;
        this.checkNotSafeValue(value, 'HTML');
        return (0, _core.ɵ_sanitizeHtml)(this._doc, String(value));

      case _core.SecurityContext.STYLE:
        if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;
        this.checkNotSafeValue(value, 'Style');
        return (0, _core.ɵ_sanitizeStyle)(value);

      case _core.SecurityContext.SCRIPT:
        if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;
        this.checkNotSafeValue(value, 'Script');
        throw new Error('unsafe value used in a script context');

      case _core.SecurityContext.URL:
        if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {
          // Allow resource URLs in URL contexts, they are strictly more trusted.
          return value.changingThisBreaksApplicationSecurity;
        }

        this.checkNotSafeValue(value, 'URL');
        return (0, _core.ɵ_sanitizeUrl)(String(value));

      case _core.SecurityContext.RESOURCE_URL:
        if (value instanceof SafeResourceUrlImpl) {
          return value.changingThisBreaksApplicationSecurity;
        }

        this.checkNotSafeValue(value, 'ResourceURL');
        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');

      default:
        throw new Error("Unexpected SecurityContext " + ctx + " (see http://g.co/ng/security#xss)");
    }
  };

  DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {
    if (value instanceof SafeValueImpl) {
      throw new Error("Required a safe " + expectedType + ", got a " + value.getTypeName() + " " + "(see http://g.co/ng/security#xss)");
    }
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) {
    return new SafeHtmlImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) {
    return new SafeStyleImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) {
    return new SafeScriptImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) {
    return new SafeUrlImpl(value);
  };

  DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {
    return new SafeResourceUrlImpl(value);
  };

  DomSanitizerImpl.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  DomSanitizerImpl.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [DOCUMENT$1]
      }]
    }];
  };

  return DomSanitizerImpl;
}(DomSanitizer);

exports.ɵangular_packages_platform_browser_platform_browser_e = DomSanitizerImpl;

var SafeValueImpl =
/** @class */
function () {
  function SafeValueImpl(changingThisBreaksApplicationSecurity) {
    // empty
    this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;
  }

  SafeValueImpl.prototype.toString = function () {
    return "SafeValue must use [property]=binding: " + this.changingThisBreaksApplicationSecurity + " (see http://g.co/ng/security#xss)";
  };

  return SafeValueImpl;
}();

var SafeHtmlImpl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(SafeHtmlImpl, _super);

  function SafeHtmlImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeHtmlImpl.prototype.getTypeName = function () {
    return 'HTML';
  };

  return SafeHtmlImpl;
}(SafeValueImpl);

var SafeStyleImpl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(SafeStyleImpl, _super);

  function SafeStyleImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeStyleImpl.prototype.getTypeName = function () {
    return 'Style';
  };

  return SafeStyleImpl;
}(SafeValueImpl);

var SafeScriptImpl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(SafeScriptImpl, _super);

  function SafeScriptImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeScriptImpl.prototype.getTypeName = function () {
    return 'Script';
  };

  return SafeScriptImpl;
}(SafeValueImpl);

var SafeUrlImpl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(SafeUrlImpl, _super);

  function SafeUrlImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeUrlImpl.prototype.getTypeName = function () {
    return 'URL';
  };

  return SafeUrlImpl;
}(SafeValueImpl);

var SafeResourceUrlImpl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(SafeResourceUrlImpl, _super);

  function SafeResourceUrlImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  SafeResourceUrlImpl.prototype.getTypeName = function () {
    return 'ResourceURL';
  };

  return SafeResourceUrlImpl;
}(SafeValueImpl);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{
  provide: _core.PLATFORM_ID,
  useValue: _common.ɵPLATFORM_BROWSER_ID
}, {
  provide: _core.PLATFORM_INITIALIZER,
  useValue: initDomAdapter,
  multi: true
}, {
  provide: _common.PlatformLocation,
  useClass: BrowserPlatformLocation,
  deps: [DOCUMENT$1]
}, {
  provide: DOCUMENT$1,
  useFactory: _document,
  deps: []
}];
/**
 * @security Replacing built-in sanitization providers exposes the application to XSS risks.
 * Attacker-controlled data introduced by an unsanitized provider could expose your
 * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).
 * @experimental
 */

exports.ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS = INTERNAL_BROWSER_PLATFORM_PROVIDERS;
var BROWSER_SANITIZATION_PROVIDERS = [{
  provide: _core.Sanitizer,
  useExisting: DomSanitizer
}, {
  provide: DomSanitizer,
  useClass: DomSanitizerImpl,
  deps: [DOCUMENT$1]
}];
/**
 *
 */

exports.ɵBROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS;
var platformBrowser = (0, _core.createPlatformFactory)(_core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);
exports.platformBrowser = platformBrowser;

function initDomAdapter() {
  BrowserDomAdapter.makeCurrent();
  BrowserGetTestability.init();
}

function errorHandler() {
  return new _core.ErrorHandler();
}

function _document() {
  return document;
}
/**
 * The ng module for the browser.
 *
 *
 */


var BrowserModule =
/** @class */
function () {
  function BrowserModule(parentModule) {
    if (parentModule) {
      throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.");
    }
  }
  /**
   * Configures a browser-based application to transition from a server-rendered app, if
   * one is present on the page. The specified parameters must include an application id,
   * which must match between the client and server applications.
   *
   * @experimental
   */

  /**
     * Configures a browser-based application to transition from a server-rendered app, if
     * one is present on the page. The specified parameters must include an application id,
     * which must match between the client and server applications.
     *
     * @experimental
     */


  BrowserModule.withServerTransition =
  /**
  * Configures a browser-based application to transition from a server-rendered app, if
  * one is present on the page. The specified parameters must include an application id,
  * which must match between the client and server applications.
  *
  * @experimental
  */
  function (params) {
    return {
      ngModule: BrowserModule,
      providers: [{
        provide: _core.APP_ID,
        useValue: params.appId
      }, {
        provide: TRANSITION_ID,
        useExisting: _core.APP_ID
      }, SERVER_TRANSITION_PROVIDERS]
    };
  };

  BrowserModule.decorators = [{
    type: _core.NgModule,
    args: [{
      providers: [BROWSER_SANITIZATION_PROVIDERS, {
        provide: _core.ɵAPP_ROOT,
        useValue: true
      }, {
        provide: _core.ErrorHandler,
        useFactory: errorHandler,
        deps: []
      }, {
        provide: EVENT_MANAGER_PLUGINS,
        useClass: DomEventsPlugin,
        multi: true
      }, {
        provide: EVENT_MANAGER_PLUGINS,
        useClass: KeyEventsPlugin,
        multi: true
      }, {
        provide: EVENT_MANAGER_PLUGINS,
        useClass: HammerGesturesPlugin,
        multi: true
      }, {
        provide: HAMMER_GESTURE_CONFIG,
        useClass: HammerGestureConfig
      }, DomRendererFactory2, {
        provide: _core.RendererFactory2,
        useExisting: DomRendererFactory2
      }, {
        provide: SharedStylesHost,
        useExisting: DomSharedStylesHost
      }, DomSharedStylesHost, _core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Meta, Title],
      exports: [_common.CommonModule, _core.ApplicationModule]
    }]
  }];
  /** @nocollapse */

  BrowserModule.ctorParameters = function () {
    return [{
      type: BrowserModule,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.SkipSelf
      }]
    }];
  };

  return BrowserModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.BrowserModule = BrowserModule;
var win = typeof window !== 'undefined' && window || {};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var ChangeDetectionPerfRecord =
/** @class */
function () {
  function ChangeDetectionPerfRecord(msPerTick, numTicks) {
    this.msPerTick = msPerTick;
    this.numTicks = numTicks;
  }

  return ChangeDetectionPerfRecord;
}();
/**
 * Entry point for all Angular profiling-related debug tools. This object
 * corresponds to the `ng.profiler` in the dev console.
 */


var AngularProfiler =
/** @class */
function () {
  function AngularProfiler(ref) {
    this.appRef = ref.injector.get(_core.ApplicationRef);
  } // tslint:disable:no-console

  /**
   * Exercises change detection in a loop and then prints the average amount of
   * time in milliseconds how long a single round of change detection takes for
   * the current state of the UI. It runs a minimum of 5 rounds for a minimum
   * of 500 milliseconds.
   *
   * Optionally, a user may pass a `config` parameter containing a map of
   * options. Supported options are:
   *
   * `record` (boolean) - causes the profiler to record a CPU profile while
   * it exercises the change detector. Example:
   *
   * ```
   * ng.profiler.timeChangeDetection({record: true})
   * ```
   */
  // tslint:disable:no-console

  /**
     * Exercises change detection in a loop and then prints the average amount of
     * time in milliseconds how long a single round of change detection takes for
     * the current state of the UI. It runs a minimum of 5 rounds for a minimum
     * of 500 milliseconds.
     *
     * Optionally, a user may pass a `config` parameter containing a map of
     * options. Supported options are:
     *
     * `record` (boolean) - causes the profiler to record a CPU profile while
     * it exercises the change detector. Example:
     *
     * ```
     * ng.profiler.timeChangeDetection({record: true})
     * ```
     */


  AngularProfiler.prototype.timeChangeDetection = // tslint:disable:no-console

  /**
     * Exercises change detection in a loop and then prints the average amount of
     * time in milliseconds how long a single round of change detection takes for
     * the current state of the UI. It runs a minimum of 5 rounds for a minimum
     * of 500 milliseconds.
     *
     * Optionally, a user may pass a `config` parameter containing a map of
     * options. Supported options are:
     *
     * `record` (boolean) - causes the profiler to record a CPU profile while
     * it exercises the change detector. Example:
     *
     * ```
     * ng.profiler.timeChangeDetection({record: true})
     * ```
     */
  function (config) {
    var record = config && config['record'];
    var profileName = 'Change Detection'; // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened

    var isProfilerAvailable = win.console.profile != null;

    if (record && isProfilerAvailable) {
      win.console.profile(profileName);
    }

    var start = getDOM().performanceNow();
    var numTicks = 0;

    while (numTicks < 5 || getDOM().performanceNow() - start < 500) {
      this.appRef.tick();
      numTicks++;
    }

    var end = getDOM().performanceNow();

    if (record && isProfilerAvailable) {
      // need to cast to <any> because type checker thinks there's no argument
      // while in fact there is:
      //
      // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd
      // need to cast to <any> because type checker thinks there's no argument
      // while in fact there is:
      //
      // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd
      win.console.profileEnd(profileName);
    }

    var msPerTick = (end - start) / numTicks;
    win.console.log("ran " + numTicks + " change detection cycles");
    win.console.log(msPerTick.toFixed(2) + " ms per check");
    return new ChangeDetectionPerfRecord(msPerTick, numTicks);
  };

  return AngularProfiler;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var PROFILER_GLOBAL_NAME = 'profiler';
/**
 * Enabled Angular debug tools that are accessible via your browser's
 * developer console.
 *
 * Usage:
 *
 * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)
 * 1. Type `ng.` (usually the console will show auto-complete suggestion)
 * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`
 *    then hit Enter.
 *
 * @experimental All debugging apis are currently experimental.
 */

function enableDebugTools(ref) {
  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));
  return ref;
}
/**
 * Disables Angular tools.
 *
 * @experimental All debugging apis are currently experimental.
 */


function disableDebugTools() {
  exportNgVar(PROFILER_GLOBAL_NAME, null);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function escapeHtml(text) {
  var escapedText = {
    '&': '&a;',
    '"': '&q;',
    '\'': '&s;',
    '<': '&l;',
    '>': '&g;'
  };
  return text.replace(/[&"'<>]/g, function (s) {
    return escapedText[s];
  });
}

function unescapeHtml(text) {
  var unescapedText = {
    '&a;': '&',
    '&q;': '"',
    '&s;': '\'',
    '&l;': '<',
    '&g;': '>'
  };
  return text.replace(/&[^;]+;/g, function (s) {
    return unescapedText[s];
  });
}
/**
 * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.
 *
 * Example:
 *
 * ```
 * const COUNTER_KEY = makeStateKey<number>('counter');
 * let value = 10;
 *
 * transferState.set(COUNTER_KEY, value);
 * ```
 *
 * @experimental
 */


function makeStateKey(key) {
  return key;
}
/**
 * A key value store that is transferred from the application on the server side to the application
 * on the client side.
 *
 * `TransferState` will be available as an injectable token. To use it import
 * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.
 *
 * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only
 * boolean, number, string, null and non-class objects will be serialized and deserialzied in a
 * non-lossy manner.
 *
 * @experimental
 */


var TransferState =
/** @class */
function () {
  function TransferState() {
    this.store = {};
    this.onSerializeCallbacks = {};
  }
  /** @internal */

  /** @internal */


  TransferState.init =
  /** @internal */
  function (initState) {
    var transferState = new TransferState();
    transferState.store = initState;
    return transferState;
  };
  /**
   * Get the value corresponding to a key. Return `defaultValue` if key is not found.
   */

  /**
     * Get the value corresponding to a key. Return `defaultValue` if key is not found.
     */


  TransferState.prototype.get =
  /**
  * Get the value corresponding to a key. Return `defaultValue` if key is not found.
  */
  function (key, defaultValue) {
    return this.store[key] !== undefined ? this.store[key] : defaultValue;
  };
  /**
   * Set the value corresponding to a key.
   */

  /**
     * Set the value corresponding to a key.
     */


  TransferState.prototype.set =
  /**
  * Set the value corresponding to a key.
  */
  function (key, value) {
    this.store[key] = value;
  };
  /**
   * Remove a key from the store.
   */

  /**
     * Remove a key from the store.
     */


  TransferState.prototype.remove =
  /**
  * Remove a key from the store.
  */
  function (key) {
    delete this.store[key];
  };
  /**
   * Test whether a key exists in the store.
   */

  /**
     * Test whether a key exists in the store.
     */


  TransferState.prototype.hasKey =
  /**
  * Test whether a key exists in the store.
  */
  function (key) {
    return this.store.hasOwnProperty(key);
  };
  /**
   * Register a callback to provide the value for a key when `toJson` is called.
   */

  /**
     * Register a callback to provide the value for a key when `toJson` is called.
     */


  TransferState.prototype.onSerialize =
  /**
  * Register a callback to provide the value for a key when `toJson` is called.
  */
  function (key, callback) {
    this.onSerializeCallbacks[key] = callback;
  };
  /**
   * Serialize the current state of the store to JSON.
   */

  /**
     * Serialize the current state of the store to JSON.
     */


  TransferState.prototype.toJson =
  /**
  * Serialize the current state of the store to JSON.
  */
  function () {
    // Call the onSerialize callbacks and put those values into the store.
    for (var key in this.onSerializeCallbacks) {
      if (this.onSerializeCallbacks.hasOwnProperty(key)) {
        try {
          this.store[key] = this.onSerializeCallbacks[key]();
        } catch (e) {
          console.warn('Exception in onSerialize callback: ', e);
        }
      }
    }

    return JSON.stringify(this.store);
  };

  TransferState.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  TransferState.ctorParameters = function () {
    return [];
  };

  return TransferState;
}();

exports.TransferState = TransferState;

function initTransferState(doc, appId) {
  // Locate the script tag with the JSON data transferred from the server.
  // The id of the script tag is set to the Angular appId + 'state'.
  var script = doc.getElementById(appId + '-state');
  var initialState = {};

  if (script && script.textContent) {
    try {
      initialState = JSON.parse(unescapeHtml(script.textContent));
    } catch (e) {
      console.warn('Exception while restoring TransferState for app ' + appId, e);
    }
  }

  return TransferState.init(initialState);
}
/**
 * NgModule to install on the client side while using the `TransferState` to transfer state from
 * server to client.
 *
 * @experimental
 */


var BrowserTransferStateModule =
/** @class */
function () {
  function BrowserTransferStateModule() {}

  BrowserTransferStateModule.decorators = [{
    type: _core.NgModule,
    args: [{
      providers: [{
        provide: TransferState,
        useFactory: initTransferState,
        deps: [DOCUMENT$1, _core.APP_ID]
      }]
    }]
  }];
  /** @nocollapse */

  BrowserTransferStateModule.ctorParameters = function () {
    return [];
  };

  return BrowserTransferStateModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Predicates for use with {@link DebugElement}'s query functions.
 *
 * @experimental All debugging apis are currently experimental.
 */


exports.BrowserTransferStateModule = BrowserTransferStateModule;

var By =
/** @class */
function () {
  function By() {}
  /**
   * Match all elements.
   *
   * ## Example
   *
   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
   */

  /**
     * Match all elements.
     *
     * ## Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
     */


  By.all =
  /**
  * Match all elements.
  *
  * ## Example
  *
  * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
  */
  function () {
    return function (debugElement) {
      return true;
    };
  };
  /**
   * Match elements by the given CSS selector.
   *
   * ## Example
   *
   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
   */

  /**
     * Match elements by the given CSS selector.
     *
     * ## Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
     */


  By.css =
  /**
  * Match elements by the given CSS selector.
  *
  * ## Example
  *
  * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
  */
  function (selector) {
    return function (debugElement) {
      return debugElement.nativeElement != null ? getDOM().elementMatches(debugElement.nativeElement, selector) : false;
    };
  };
  /**
   * Match elements that have the given directive present.
   *
   * ## Example
   *
   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
   */

  /**
     * Match elements that have the given directive present.
     *
     * ## Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
     */


  By.directive =
  /**
  * Match elements that have the given directive present.
  *
  * ## Example
  *
  * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
  */
  function (type) {
    return function (debugElement) {
      return debugElement.providerTokens.indexOf(type) !== -1;
    };
  };

  return By;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 */


exports.By = By;
var VERSION = new _core.Version('6.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */

exports.VERSION = VERSION;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerI18nDefault = exports.NgbDatepickerI18n = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 * Type of the service supplying month and weekday names to to NgbDatepicker component.
 * The default implementation of this service honors the Angular locale, and uses the registered locale data,
 * as explained in the Angular i18n guide.
 * See the i18n demo for how to extend this class and define a custom provider for i18n.
 */
var NgbDatepickerI18n =
/** @class */
function () {
  function NgbDatepickerI18n() {}

  NgbDatepickerI18n.decorators = [{
    type: _core.Injectable
  }];
  return NgbDatepickerI18n;
}();

exports.NgbDatepickerI18n = NgbDatepickerI18n;

var NgbDatepickerI18nDefault =
/** @class */
function (_super) {
  __extends(NgbDatepickerI18nDefault, _super);

  function NgbDatepickerI18nDefault(_locale, _datePipe) {
    var _this = _super.call(this) || this;

    _this._locale = _locale;
    _this._datePipe = _datePipe;
    var weekdaysStartingOnSunday = (0, _common.getLocaleDayNames)(_locale, _common.FormStyle.Standalone, _common.TranslationWidth.Short);
    _this._weekdaysShort = weekdaysStartingOnSunday.map(function (day, index) {
      return weekdaysStartingOnSunday[(index + 1) % 7];
    });
    _this._monthsShort = (0, _common.getLocaleMonthNames)(_locale, _common.FormStyle.Standalone, _common.TranslationWidth.Abbreviated);
    _this._monthsFull = (0, _common.getLocaleMonthNames)(_locale, _common.FormStyle.Standalone, _common.TranslationWidth.Wide);
    return _this;
  }

  NgbDatepickerI18nDefault.prototype.getWeekdayShortName = function (weekday) {
    return this._weekdaysShort[weekday - 1];
  };

  NgbDatepickerI18nDefault.prototype.getMonthShortName = function (month) {
    return this._monthsShort[month - 1];
  };

  NgbDatepickerI18nDefault.prototype.getMonthFullName = function (month) {
    return this._monthsFull[month - 1];
  };

  NgbDatepickerI18nDefault.prototype.getDayAriaLabel = function (date) {
    var jsDate = new Date(date.year, date.month - 1, date.day);
    return this._datePipe.transform(jsDate, 'fullDate', null, this._locale);
  };

  NgbDatepickerI18nDefault.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  NgbDatepickerI18nDefault.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_core.LOCALE_ID]
      }]
    }, {
      type: _common.DatePipe
    }];
  };

  return NgbDatepickerI18nDefault;
}(NgbDatepickerI18n);

exports.NgbDatepickerI18nDefault = NgbDatepickerI18nDefault;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbCalendarGregorian = exports.NgbCalendar = void 0;

var _ngbDate = __webpack_require__(35);

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

function fromJSDate(jsDate) {
  return new _ngbDate.NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());
}

function toJSDate(date) {
  var jsDate = new Date(date.year, date.month - 1, date.day, 12); // this is done avoid 30 -> 1930 conversion

  if (!isNaN(jsDate.getTime())) {
    jsDate.setFullYear(date.year);
  }

  return jsDate;
}

var NgbCalendar =
/** @class */
function () {
  function NgbCalendar() {}

  NgbCalendar.decorators = [{
    type: _core.Injectable
  }];
  return NgbCalendar;
}();

exports.NgbCalendar = NgbCalendar;

var NgbCalendarGregorian =
/** @class */
function (_super) {
  __extends(NgbCalendarGregorian, _super);

  function NgbCalendarGregorian() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  NgbCalendarGregorian.prototype.getDaysPerWeek = function () {
    return 7;
  };

  NgbCalendarGregorian.prototype.getMonths = function () {
    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
  };

  NgbCalendarGregorian.prototype.getWeeksPerMonth = function () {
    return 6;
  };

  NgbCalendarGregorian.prototype.getNext = function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    var jsDate = toJSDate(date);

    switch (period) {
      case 'y':
        return new _ngbDate.NgbDate(date.year + number, 1, 1);

      case 'm':
        jsDate = new Date(date.year, date.month + number - 1, 1, 12);
        break;

      case 'd':
        jsDate.setDate(jsDate.getDate() + number);
        break;

      default:
        return date;
    }

    return fromJSDate(jsDate);
  };

  NgbCalendarGregorian.prototype.getPrev = function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    return this.getNext(date, period, -number);
  };

  NgbCalendarGregorian.prototype.getWeekday = function (date) {
    var jsDate = toJSDate(date);
    var day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7

    return day === 0 ? 7 : day;
  };

  NgbCalendarGregorian.prototype.getWeekNumber = function (week, firstDayOfWeek) {
    // in JS Date Sun=0, in ISO 8601 Sun=7
    if (firstDayOfWeek === 7) {
      firstDayOfWeek = 0;
    }

    var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;
    var date = week[thursdayIndex];
    var jsDate = toJSDate(date);
    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday

    var time = jsDate.getTime();
    jsDate.setMonth(0); // Compare with Jan 1

    jsDate.setDate(1);
    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;
  };

  NgbCalendarGregorian.prototype.getToday = function () {
    return fromJSDate(new Date());
  };

  NgbCalendarGregorian.prototype.isValid = function (date) {
    if (!date || !(0, _util.isInteger)(date.year) || !(0, _util.isInteger)(date.month) || !(0, _util.isInteger)(date.day)) {
      return false;
    }

    var jsDate = toJSDate(date);
    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;
  };

  NgbCalendarGregorian.decorators = [{
    type: _core.Injectable
  }];
  return NgbCalendarGregorian;
}(NgbCalendar);

exports.NgbCalendarGregorian = NgbCalendarGregorian;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Key = void 0;
var Key;
exports.Key = Key;

(function (Key) {
  Key[Key["Tab"] = 9] = "Tab";
  Key[Key["Enter"] = 13] = "Enter";
  Key[Key["Escape"] = 27] = "Escape";
  Key[Key["Space"] = 32] = "Space";
  Key[Key["PageUp"] = 33] = "PageUp";
  Key[Key["PageDown"] = 34] = "PageDown";
  Key[Key["End"] = 35] = "End";
  Key[Key["Home"] = 36] = "Home";
  Key[Key["ArrowLeft"] = 37] = "ArrowLeft";
  Key[Key["ArrowUp"] = 38] = "ArrowUp";
  Key[Key["ArrowRight"] = 39] = "ArrowRight";
  Key[Key["ArrowDown"] = 40] = "ArrowDown";
})(Key || (exports.Key = Key = {}));

/***/ }),
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function () {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    var result = [];

    for (var i = 0; i < this.length; i++) {
      var item = this[i];

      if (item[2]) {
        result.push("@media " + item[2] + "{" + item[1] + "}");
      } else {
        result.push(item[1]);
      }
    }

    return result.join("");
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === "string") modules = [[null, modules, ""]];
    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];
      if (typeof id === "number") alreadyImportedModules[id] = true;
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      //  when a module is imported multiple times with different media queries.
      //  I hope this will never occur (Hey this way we have smaller bundles)

      if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
        }

        list.push(item);
      }
    }
  };

  return list;
};

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multicast = multicast;
exports.MulticastOperator = void 0;

var _ConnectableObservable = __webpack_require__(215);

/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */
function multicast(subjectOrSubjectFactory, selector) {
  return function multicastOperatorFunction(source) {
    var subjectFactory;

    if (typeof subjectOrSubjectFactory === 'function') {
      subjectFactory = subjectOrSubjectFactory;
    } else {
      subjectFactory = function subjectFactory() {
        return subjectOrSubjectFactory;
      };
    }

    if (typeof selector === 'function') {
      return source.lift(new MulticastOperator(subjectFactory, selector));
    }

    var connectable = Object.create(source, _ConnectableObservable.connectableObservableDescriptor);
    connectable.source = source;
    connectable.subjectFactory = subjectFactory;
    return connectable;
  };
}

var MulticastOperator =
/*@__PURE__*/
function () {
  function MulticastOperator(subjectFactory, selector) {
    this.subjectFactory = subjectFactory;
    this.selector = selector;
  }

  MulticastOperator.prototype.call = function (subscriber, source) {
    var selector = this.selector;
    var subject = this.subjectFactory();
    var subscription = selector(subject).subscribe(subscriber);
    subscription.add(source.subscribe(subject));
    return subscription;
  };

  return MulticastOperator;
}();

exports.MulticastOperator = MulticastOperator;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.observable = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';
exports.observable = observable;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
  return x;
}

/***/ }),
/* 63 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
	}),
	getHeadElement = memoize(function () {
		return document.head || document.getElementsByTagName("head")[0];
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [];

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the bottom of <head>.
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
}

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var head = getHeadElement();
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			head.insertBefore(styleElement, head.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			head.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		head.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	styleElement.type = "text/css";
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	linkElement.rel = "stylesheet";
	insertStyleElement(options, linkElement);
	return linkElement;
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.positionElements = positionElements;
exports.Positioning = void 0;

// previous version:
// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js
var // previous version:
// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js
Positioning =
/** @class */
function () {
  function Positioning() {}

  Positioning.prototype.getAllStyles = function (element) {
    return window.getComputedStyle(element);
  };

  Positioning.prototype.getStyle = function (element, prop) {
    return this.getAllStyles(element)[prop];
  };

  Positioning.prototype.isStaticPositioned = function (element) {
    return (this.getStyle(element, 'position') || 'static') === 'static';
  };

  Positioning.prototype.offsetParent = function (element) {
    var offsetParentEl = element.offsetParent || document.documentElement;

    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {
      offsetParentEl = offsetParentEl.offsetParent;
    }

    return offsetParentEl || document.documentElement;
  };

  Positioning.prototype.position = function (element, round) {
    if (round === void 0) {
      round = true;
    }

    var elPosition;
    var parentOffset = {
      width: 0,
      height: 0,
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    };

    if (this.getStyle(element, 'position') === 'fixed') {
      elPosition = element.getBoundingClientRect();
    } else {
      var offsetParentEl = this.offsetParent(element);
      elPosition = this.offset(element, false);

      if (offsetParentEl !== document.documentElement) {
        parentOffset = this.offset(offsetParentEl, false);
      }

      parentOffset.top += offsetParentEl.clientTop;
      parentOffset.left += offsetParentEl.clientLeft;
    }

    elPosition.top -= parentOffset.top;
    elPosition.bottom -= parentOffset.top;
    elPosition.left -= parentOffset.left;
    elPosition.right -= parentOffset.left;

    if (round) {
      elPosition.top = Math.round(elPosition.top);
      elPosition.bottom = Math.round(elPosition.bottom);
      elPosition.left = Math.round(elPosition.left);
      elPosition.right = Math.round(elPosition.right);
    }

    return elPosition;
  };

  Positioning.prototype.offset = function (element, round) {
    if (round === void 0) {
      round = true;
    }

    var elBcr = element.getBoundingClientRect();
    var viewportOffset = {
      top: window.pageYOffset - document.documentElement.clientTop,
      left: window.pageXOffset - document.documentElement.clientLeft
    };
    var elOffset = {
      height: elBcr.height || element.offsetHeight,
      width: elBcr.width || element.offsetWidth,
      top: elBcr.top + viewportOffset.top,
      bottom: elBcr.bottom + viewportOffset.top,
      left: elBcr.left + viewportOffset.left,
      right: elBcr.right + viewportOffset.left
    };

    if (round) {
      elOffset.height = Math.round(elOffset.height);
      elOffset.width = Math.round(elOffset.width);
      elOffset.top = Math.round(elOffset.top);
      elOffset.bottom = Math.round(elOffset.bottom);
      elOffset.left = Math.round(elOffset.left);
      elOffset.right = Math.round(elOffset.right);
    }

    return elOffset;
  };

  Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {
    var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);
    var targetElStyles = this.getAllStyles(targetElement);
    var targetElBCR = targetElement.getBoundingClientRect();
    var placementPrimary = placement.split('-')[0] || 'top';
    var placementSecondary = placement.split('-')[1] || 'center';
    var targetElPosition = {
      'height': targetElBCR.height || targetElement.offsetHeight,
      'width': targetElBCR.width || targetElement.offsetWidth,
      'top': 0,
      'bottom': targetElBCR.height || targetElement.offsetHeight,
      'left': 0,
      'right': targetElBCR.width || targetElement.offsetWidth
    };

    switch (placementPrimary) {
      case 'top':
        targetElPosition.top = hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));
        break;

      case 'bottom':
        targetElPosition.top = hostElPosition.top + hostElPosition.height;
        break;

      case 'left':
        targetElPosition.left = hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));
        break;

      case 'right':
        targetElPosition.left = hostElPosition.left + hostElPosition.width;
        break;
    }

    switch (placementSecondary) {
      case 'top':
        targetElPosition.top = hostElPosition.top;
        break;

      case 'bottom':
        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;
        break;

      case 'left':
        targetElPosition.left = hostElPosition.left;
        break;

      case 'right':
        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;
        break;

      case 'center':
        if (placementPrimary === 'top' || placementPrimary === 'bottom') {
          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;
        } else {
          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;
        }

        break;
    }

    targetElPosition.top = Math.round(targetElPosition.top);
    targetElPosition.bottom = Math.round(targetElPosition.bottom);
    targetElPosition.left = Math.round(targetElPosition.left);
    targetElPosition.right = Math.round(targetElPosition.right);
    return targetElPosition;
  }; // get the availble placements of the target element in the viewport dependeing on the host element
  // get the availble placements of the target element in the viewport dependeing on the host element


  Positioning.prototype.getAvailablePlacements = // get the availble placements of the target element in the viewport dependeing on the host element
  function (hostElement, targetElement) {
    var availablePlacements = [];
    var hostElemClientRect = hostElement.getBoundingClientRect();
    var targetElemClientRect = targetElement.getBoundingClientRect();
    var html = document.documentElement;
    var windowHeight = window.innerHeight || html.clientHeight;
    var windowWidth = window.innerWidth || html.clientWidth;
    var hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;
    var hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2; // left: check if target width can be placed between host left and viewport start and also height of target is
    // inside viewport

    if (targetElemClientRect.width < hostElemClientRect.left) {
      // check for left only
      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 && windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'left');
      } // check for left-top and left-bottom


      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);
    } // top: target height is less than host top


    if (targetElemClientRect.height < hostElemClientRect.top) {
      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 && windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'top');
      }

      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);
    } // right: check if target width can be placed between host right and viewport end and also height of target is
    // inside viewport


    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {
      // check for right only
      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 && windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'right');
      } // check for right-top and right-bottom


      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);
    } // bottom: check if there is enough space between host bottom and viewport end for target height


    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {
      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 && windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {
        availablePlacements.splice(availablePlacements.length, 1, 'bottom');
      }

      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);
    }

    return availablePlacements;
  };
  /**
   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom
   * primaryplacement: left|right
   * availablePlacementArr: array in which available placemets to be set
   */

  /**
     * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom
     * primaryplacement: left|right
     * availablePlacementArr: array in which available placemets to be set
     */


  Positioning.prototype.setSecondaryPlacementForLeftRight =
  /**
  * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom
  * primaryplacement: left|right
  * availablePlacementArr: array in which available placemets to be set
  */
  function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {
    var html = document.documentElement; // check for left-bottom

    if (targetElemClientRect.height <= hostElemClientRect.bottom) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');
    }

    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');
    }
  };
  /**
   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right
   * primaryplacement: top|bottom
   * availablePlacementArr: array in which available placemets to be set
   */

  /**
     * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right
     * primaryplacement: top|bottom
     * availablePlacementArr: array in which available placemets to be set
     */


  Positioning.prototype.setSecondaryPlacementForTopBottom =
  /**
  * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right
  * primaryplacement: top|bottom
  * availablePlacementArr: array in which available placemets to be set
  */
  function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {
    var html = document.documentElement; // check for left-bottom

    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');
    }

    if (targetElemClientRect.width <= hostElemClientRect.right) {
      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');
    }
  };

  return Positioning;
}(); // previous version:
// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js


exports.Positioning = Positioning;
var positionService = new Positioning();
/*
 * Accept the placement array and applies the appropriate placement dependent on the viewport.
 * Returns the applied placement.
 * In case of auto placement, placements are selected in order
 *   'top', 'bottom', 'left', 'right',
 *   'top-left', 'top-right',
 *   'bottom-left', 'bottom-right',
 *   'left-top', 'left-bottom',
 *   'right-top', 'right-bottom'.
 * */

function positionElements(hostElement, targetElement, placement, appendToBody) {
  var placementVals = Array.isArray(placement) ? placement : [placement]; // replace auto placement with other placements

  var hasAuto = placementVals.findIndex(function (val) {
    return val === 'auto';
  });

  if (hasAuto >= 0) {
    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'].forEach(function (obj) {
      if (placementVals.find(function (val) {
        return val.search('^' + obj) !== -1;
      }) == null) {
        placementVals.splice(hasAuto++, 1, obj);
      }
    });
  } // coordinates where to position


  var topVal = 0,
      leftVal = 0;
  var appliedPlacement; // get available placements

  var availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);

  var _loop_1 = function _loop_1(item, index) {
    // check if passed placement is present in the available placement or otherwise apply the last placement in the
    // passed placement list
    if (availablePlacements.find(function (val) {
      return val === item;
    }) != null || placementVals.length === index + 1) {
      appliedPlacement = item;
      var pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);
      topVal = pos.top;
      leftVal = pos.left;
      return "break";
    }
  }; // iterate over all the passed placements


  for (var _i = 0, _a = toItemIndexes(placementVals); _i < _a.length; _i++) {
    var _b = _a[_i],
        item = _b.item,
        index = _b.index;

    var state_1 = _loop_1(item, index);

    if (state_1 === "break") break;
  }

  targetElement.style.top = topVal + "px";
  targetElement.style.left = leftVal + "px";
  return appliedPlacement;
} // function to get index and item of an array


function toItemIndexes(a) {
  return a.map(function (item, index) {
    return {
      item: item,
      index: index
    };
  });
}

/***/ }),
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultIfEmpty = defaultIfEmpty;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function defaultIfEmpty(defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = null;
  }

  return function (source) {
    return source.lift(new DefaultIfEmptyOperator(defaultValue));
  };
}

var DefaultIfEmptyOperator =
/*@__PURE__*/
function () {
  function DefaultIfEmptyOperator(defaultValue) {
    this.defaultValue = defaultValue;
  }

  DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
  };

  return DefaultIfEmptyOperator;
}();

var DefaultIfEmptySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DefaultIfEmptySubscriber, _super);

  function DefaultIfEmptySubscriber(destination, defaultValue) {
    var _this = _super.call(this, destination) || this;

    _this.defaultValue = defaultValue;
    _this.isEmpty = true;
    return _this;
  }

  DefaultIfEmptySubscriber.prototype._next = function (value) {
    this.isEmpty = false;
    this.destination.next(value);
  };

  DefaultIfEmptySubscriber.prototype._complete = function () {
    if (this.isEmpty) {
      this.destination.next(this.defaultValue);
    }

    this.destination.complete();
  };

  return DefaultIfEmptySubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filter = filter;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function filter(predicate, thisArg) {
  return function filterOperatorFunction(source) {
    return source.lift(new FilterOperator(predicate, thisArg));
  };
}

var FilterOperator =
/*@__PURE__*/
function () {
  function FilterOperator(predicate, thisArg) {
    this.predicate = predicate;
    this.thisArg = thisArg;
  }

  FilterOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
  };

  return FilterOperator;
}();

var FilterSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(FilterSubscriber, _super);

  function FilterSubscriber(destination, predicate, thisArg) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.thisArg = thisArg;
    _this.count = 0;
    return _this;
  }

  FilterSubscriber.prototype._next = function (value) {
    var result;

    try {
      result = this.predicate.call(this.thisArg, value, this.count++);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    if (result) {
      this.destination.next(value);
    }
  };

  return FilterSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncAction = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Action = __webpack_require__(603);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */
var AsyncAction =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AsyncAction, _super);

  function AsyncAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    _this.pending = false;
    return _this;
  }

  AsyncAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (this.closed) {
      return this;
    }

    this.state = state;
    var id = this.id;
    var scheduler = this.scheduler;

    if (id != null) {
      this.id = this.recycleAsyncId(scheduler, id, delay);
    }

    this.pending = true;
    this.delay = delay;
    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
    return this;
  };

  AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return setInterval(scheduler.flush.bind(scheduler, this), delay);
  };

  AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && this.delay === delay && this.pending === false) {
      return id;
    }

    return clearInterval(id) && undefined || undefined;
  };

  AsyncAction.prototype.execute = function (state, delay) {
    if (this.closed) {
      return new Error('executing a cancelled action');
    }

    this.pending = false;

    var error = this._execute(state, delay);

    if (error) {
      return error;
    } else if (this.pending === false && this.id != null) {
      this.id = this.recycleAsyncId(this.scheduler, this.id, null);
    }
  };

  AsyncAction.prototype._execute = function (state, delay) {
    var errored = false;
    var errorValue = undefined;

    try {
      this.work(state);
    } catch (e) {
      errored = true;
      errorValue = !!e && e || new Error(e);
    }

    if (errored) {
      this.unsubscribe();
      return errorValue;
    }
  };

  AsyncAction.prototype._unsubscribe = function () {
    var id = this.id;
    var scheduler = this.scheduler;
    var actions = scheduler.actions;
    var index = actions.indexOf(this);
    this.work = null;
    this.state = null;
    this.pending = false;
    this.scheduler = null;

    if (index !== -1) {
      actions.splice(index, 1);
    }

    if (id != null) {
      this.id = this.recycleAsyncId(scheduler, id, null);
    }

    this.delay = null;
  };

  return AsyncAction;
}(_Action.Action);

exports.AsyncAction = AsyncAction;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncScheduler = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Scheduler = __webpack_require__(213);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */
var AsyncScheduler =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AsyncScheduler, _super);

  function AsyncScheduler(SchedulerAction, now) {
    if (now === void 0) {
      now = _Scheduler.Scheduler.now;
    }

    var _this = _super.call(this, SchedulerAction, function () {
      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
        return AsyncScheduler.delegate.now();
      } else {
        return now();
      }
    }) || this;

    _this.actions = [];
    _this.active = false;
    _this.scheduled = undefined;
    return _this;
  }

  AsyncScheduler.prototype.schedule = function (work, delay, state) {
    if (delay === void 0) {
      delay = 0;
    }

    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
      return AsyncScheduler.delegate.schedule(work, delay, state);
    } else {
      return _super.prototype.schedule.call(this, work, delay, state);
    }
  };

  AsyncScheduler.prototype.flush = function (action) {
    var actions = this.actions;

    if (this.active) {
      actions.push(action);
      return;
    }

    var error;
    this.active = true;

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (action = actions.shift());

    this.active = false;

    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AsyncScheduler;
}(_Scheduler.Scheduler);

exports.AsyncScheduler = AsyncScheduler;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSymbolIterator = getSymbolIterator;
exports.$$iterator = exports.iterator = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
  if (typeof Symbol !== 'function' || !Symbol.iterator) {
    return '@@iterator';
  }

  return Symbol.iterator;
}

var iterator =
/*@__PURE__*/
getSymbolIterator();
exports.iterator = iterator;
var $$iterator = iterator;
exports.$$iterator = $$iterator;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArgumentOutOfRangeError = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */
var ArgumentOutOfRangeError =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ArgumentOutOfRangeError, _super);

  function ArgumentOutOfRangeError() {
    var _this = _super.call(this, 'argument out of range') || this;

    _this.name = 'ArgumentOutOfRangeError';
    Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);
    return _this;
  }

  return ArgumentOutOfRangeError;
}(Error);

exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmptyError = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */
var EmptyError =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(EmptyError, _super);

  function EmptyError() {
    var _this = _super.call(this, 'no elements in sequence') || this;

    _this.name = 'EmptyError';
    Object.setPrototypeOf(_this, EmptyError.prototype);
    return _this;
  }

  return EmptyError;
}(Error);

exports.EmptyError = EmptyError;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFunction = isFunction;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
  return typeof x === 'function';
}

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbAccordionModule", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbAccordionModule;
  }
});
Object.defineProperty(exports, "NgbAccordionConfig", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbAccordionConfig;
  }
});
Object.defineProperty(exports, "NgbAccordion", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbAccordion;
  }
});
Object.defineProperty(exports, "NgbPanel", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbPanel;
  }
});
Object.defineProperty(exports, "NgbPanelTitle", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbPanelTitle;
  }
});
Object.defineProperty(exports, "NgbPanelContent", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbPanelContent;
  }
});
Object.defineProperty(exports, "NgbAlertModule", {
  enumerable: true,
  get: function get() {
    return _alert.NgbAlertModule;
  }
});
Object.defineProperty(exports, "NgbAlertConfig", {
  enumerable: true,
  get: function get() {
    return _alert.NgbAlertConfig;
  }
});
Object.defineProperty(exports, "NgbAlert", {
  enumerable: true,
  get: function get() {
    return _alert.NgbAlert;
  }
});
Object.defineProperty(exports, "NgbButtonsModule", {
  enumerable: true,
  get: function get() {
    return _buttons.NgbButtonsModule;
  }
});
Object.defineProperty(exports, "NgbCheckBox", {
  enumerable: true,
  get: function get() {
    return _buttons.NgbCheckBox;
  }
});
Object.defineProperty(exports, "NgbRadioGroup", {
  enumerable: true,
  get: function get() {
    return _buttons.NgbRadioGroup;
  }
});
Object.defineProperty(exports, "NgbCarouselModule", {
  enumerable: true,
  get: function get() {
    return _carousel.NgbCarouselModule;
  }
});
Object.defineProperty(exports, "NgbCarouselConfig", {
  enumerable: true,
  get: function get() {
    return _carousel.NgbCarouselConfig;
  }
});
Object.defineProperty(exports, "NgbCarousel", {
  enumerable: true,
  get: function get() {
    return _carousel.NgbCarousel;
  }
});
Object.defineProperty(exports, "NgbSlide", {
  enumerable: true,
  get: function get() {
    return _carousel.NgbSlide;
  }
});
Object.defineProperty(exports, "NgbCollapseModule", {
  enumerable: true,
  get: function get() {
    return _collapse.NgbCollapseModule;
  }
});
Object.defineProperty(exports, "NgbCollapse", {
  enumerable: true,
  get: function get() {
    return _collapse.NgbCollapse;
  }
});
Object.defineProperty(exports, "NgbCalendar", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbCalendar;
  }
});
Object.defineProperty(exports, "NgbCalendarIslamicCivil", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbCalendarIslamicCivil;
  }
});
Object.defineProperty(exports, "NgbCalendarIslamicUmalqura", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbCalendarIslamicUmalqura;
  }
});
Object.defineProperty(exports, "NgbDatepickerModule", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDatepickerModule;
  }
});
Object.defineProperty(exports, "NgbDatepickerI18n", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDatepickerI18n;
  }
});
Object.defineProperty(exports, "NgbDatepickerConfig", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDatepickerConfig;
  }
});
Object.defineProperty(exports, "NgbDateParserFormatter", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDateParserFormatter;
  }
});
Object.defineProperty(exports, "NgbDateAdapter", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDateAdapter;
  }
});
Object.defineProperty(exports, "NgbDateNativeAdapter", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDateNativeAdapter;
  }
});
Object.defineProperty(exports, "NgbDatepicker", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDatepicker;
  }
});
Object.defineProperty(exports, "NgbInputDatepicker", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbInputDatepicker;
  }
});
Object.defineProperty(exports, "NgbDropdownModule", {
  enumerable: true,
  get: function get() {
    return _dropdown.NgbDropdownModule;
  }
});
Object.defineProperty(exports, "NgbDropdownConfig", {
  enumerable: true,
  get: function get() {
    return _dropdown.NgbDropdownConfig;
  }
});
Object.defineProperty(exports, "NgbDropdown", {
  enumerable: true,
  get: function get() {
    return _dropdown.NgbDropdown;
  }
});
Object.defineProperty(exports, "NgbModalModule", {
  enumerable: true,
  get: function get() {
    return _modal.NgbModalModule;
  }
});
Object.defineProperty(exports, "NgbModal", {
  enumerable: true,
  get: function get() {
    return _modal.NgbModal;
  }
});
Object.defineProperty(exports, "NgbActiveModal", {
  enumerable: true,
  get: function get() {
    return _modal.NgbActiveModal;
  }
});
Object.defineProperty(exports, "NgbModalRef", {
  enumerable: true,
  get: function get() {
    return _modal.NgbModalRef;
  }
});
Object.defineProperty(exports, "ModalDismissReasons", {
  enumerable: true,
  get: function get() {
    return _modal.ModalDismissReasons;
  }
});
Object.defineProperty(exports, "NgbPaginationModule", {
  enumerable: true,
  get: function get() {
    return _pagination.NgbPaginationModule;
  }
});
Object.defineProperty(exports, "NgbPaginationConfig", {
  enumerable: true,
  get: function get() {
    return _pagination.NgbPaginationConfig;
  }
});
Object.defineProperty(exports, "NgbPagination", {
  enumerable: true,
  get: function get() {
    return _pagination.NgbPagination;
  }
});
Object.defineProperty(exports, "NgbPopoverModule", {
  enumerable: true,
  get: function get() {
    return _popover.NgbPopoverModule;
  }
});
Object.defineProperty(exports, "NgbPopoverConfig", {
  enumerable: true,
  get: function get() {
    return _popover.NgbPopoverConfig;
  }
});
Object.defineProperty(exports, "NgbPopover", {
  enumerable: true,
  get: function get() {
    return _popover.NgbPopover;
  }
});
Object.defineProperty(exports, "NgbProgressbarModule", {
  enumerable: true,
  get: function get() {
    return _progressbar.NgbProgressbarModule;
  }
});
Object.defineProperty(exports, "NgbProgressbarConfig", {
  enumerable: true,
  get: function get() {
    return _progressbar.NgbProgressbarConfig;
  }
});
Object.defineProperty(exports, "NgbProgressbar", {
  enumerable: true,
  get: function get() {
    return _progressbar.NgbProgressbar;
  }
});
Object.defineProperty(exports, "NgbRatingModule", {
  enumerable: true,
  get: function get() {
    return _rating.NgbRatingModule;
  }
});
Object.defineProperty(exports, "NgbRatingConfig", {
  enumerable: true,
  get: function get() {
    return _rating.NgbRatingConfig;
  }
});
Object.defineProperty(exports, "NgbRating", {
  enumerable: true,
  get: function get() {
    return _rating.NgbRating;
  }
});
Object.defineProperty(exports, "NgbTabsetModule", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabsetModule;
  }
});
Object.defineProperty(exports, "NgbTabsetConfig", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabsetConfig;
  }
});
Object.defineProperty(exports, "NgbTabset", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabset;
  }
});
Object.defineProperty(exports, "NgbTab", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTab;
  }
});
Object.defineProperty(exports, "NgbTabContent", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabContent;
  }
});
Object.defineProperty(exports, "NgbTabTitle", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabTitle;
  }
});
Object.defineProperty(exports, "NgbTimepickerModule", {
  enumerable: true,
  get: function get() {
    return _timepicker.NgbTimepickerModule;
  }
});
Object.defineProperty(exports, "NgbTimepickerConfig", {
  enumerable: true,
  get: function get() {
    return _timepicker.NgbTimepickerConfig;
  }
});
Object.defineProperty(exports, "NgbTimepicker", {
  enumerable: true,
  get: function get() {
    return _timepicker.NgbTimepicker;
  }
});
Object.defineProperty(exports, "NgbTimeAdapter", {
  enumerable: true,
  get: function get() {
    return _timepicker.NgbTimeAdapter;
  }
});
Object.defineProperty(exports, "NgbTooltipModule", {
  enumerable: true,
  get: function get() {
    return _tooltip.NgbTooltipModule;
  }
});
Object.defineProperty(exports, "NgbTooltipConfig", {
  enumerable: true,
  get: function get() {
    return _tooltip.NgbTooltipConfig;
  }
});
Object.defineProperty(exports, "NgbTooltip", {
  enumerable: true,
  get: function get() {
    return _tooltip.NgbTooltip;
  }
});
Object.defineProperty(exports, "NgbHighlight", {
  enumerable: true,
  get: function get() {
    return _typeahead.NgbHighlight;
  }
});
Object.defineProperty(exports, "NgbTypeaheadModule", {
  enumerable: true,
  get: function get() {
    return _typeahead.NgbTypeaheadModule;
  }
});
Object.defineProperty(exports, "NgbTypeaheadConfig", {
  enumerable: true,
  get: function get() {
    return _typeahead.NgbTypeaheadConfig;
  }
});
Object.defineProperty(exports, "NgbTypeahead", {
  enumerable: true,
  get: function get() {
    return _typeahead.NgbTypeahead;
  }
});
exports.NgbModule = exports.NgbRootModule = void 0;

var _core = __webpack_require__(0);

var _accordion = __webpack_require__(324);

var _alert = __webpack_require__(326);

var _buttons = __webpack_require__(327);

var _carousel = __webpack_require__(331);

var _collapse = __webpack_require__(333);

var _datepicker = __webpack_require__(341);

var _dropdown = __webpack_require__(344);

var _modal = __webpack_require__(346);

var _pagination = __webpack_require__(348);

var _popover = __webpack_require__(350);

var _progressbar = __webpack_require__(352);

var _rating = __webpack_require__(354);

var _tabset = __webpack_require__(356);

var _timepicker = __webpack_require__(359);

var _tooltip = __webpack_require__(361);

var _typeahead = __webpack_require__(364);

var NGB_MODULES = [_accordion.NgbAccordionModule, _alert.NgbAlertModule, _buttons.NgbButtonsModule, _carousel.NgbCarouselModule, _collapse.NgbCollapseModule, _datepicker.NgbDatepickerModule, _dropdown.NgbDropdownModule, _modal.NgbModalModule, _pagination.NgbPaginationModule, _popover.NgbPopoverModule, _progressbar.NgbProgressbarModule, _rating.NgbRatingModule, _tabset.NgbTabsetModule, _timepicker.NgbTimepickerModule, _tooltip.NgbTooltipModule, _typeahead.NgbTypeaheadModule];

var NgbRootModule =
/** @class */
function () {
  function NgbRootModule() {}

  NgbRootModule.decorators = [{
    type: _core.NgModule,
    args: [{
      imports: [_alert.NgbAlertModule.forRoot(), _buttons.NgbButtonsModule.forRoot(), _collapse.NgbCollapseModule.forRoot(), _progressbar.NgbProgressbarModule.forRoot(), _tooltip.NgbTooltipModule.forRoot(), _typeahead.NgbTypeaheadModule.forRoot(), _accordion.NgbAccordionModule.forRoot(), _carousel.NgbCarouselModule.forRoot(), _datepicker.NgbDatepickerModule.forRoot(), _dropdown.NgbDropdownModule.forRoot(), _modal.NgbModalModule.forRoot(), _pagination.NgbPaginationModule.forRoot(), _popover.NgbPopoverModule.forRoot(), _progressbar.NgbProgressbarModule.forRoot(), _rating.NgbRatingModule.forRoot(), _tabset.NgbTabsetModule.forRoot(), _timepicker.NgbTimepickerModule.forRoot(), _tooltip.NgbTooltipModule.forRoot()],
      exports: NGB_MODULES
    }]
  }];
  return NgbRootModule;
}();

exports.NgbRootModule = NgbRootModule;

var NgbModule =
/** @class */
function () {
  function NgbModule() {}

  NgbModule.forRoot = function () {
    return {
      ngModule: NgbRootModule
    };
  };

  NgbModule.decorators = [{
    type: _core.NgModule,
    args: [{
      imports: NGB_MODULES,
      exports: NGB_MODULES
    }]
  }];
  return NgbModule;
}();

exports.NgbModule = NgbModule;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDateStructAdapter = exports.NgbDateAdapter = void 0;

var _core = __webpack_require__(0);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 * Abstract type serving as a DI token for the service converting from your application Date model to internal
 * NgbDateStruct model.
 * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,
 * but you can provide another implementation to use an alternative format, ie for using with native Date Object.
 */
var NgbDateAdapter =
/** @class */
function () {
  function NgbDateAdapter() {}

  NgbDateAdapter.decorators = [{
    type: _core.Injectable
  }];
  return NgbDateAdapter;
}();

exports.NgbDateAdapter = NgbDateAdapter;

var NgbDateStructAdapter =
/** @class */
function (_super) {
  __extends(NgbDateStructAdapter, _super);

  function NgbDateStructAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * Converts a NgbDateStruct value into NgbDateStruct value
   * @param  {NgbDateStruct} value
   * @return {NgbDateStruct}
   */

  /**
     * Converts a NgbDateStruct value into NgbDateStruct value
     * @param  {NgbDateStruct} value
     * @return {NgbDateStruct}
     */


  NgbDateStructAdapter.prototype.fromModel =
  /**
  * Converts a NgbDateStruct value into NgbDateStruct value
  * @param  {NgbDateStruct} value
  * @return {NgbDateStruct}
  */
  function (date) {
    return date && date.year && date.month && date.day ? {
      year: date.year,
      month: date.month,
      day: date.day
    } : null;
  };
  /**
   * Converts a NgbDateStruct value into NgbDateStruct value
   * @param  {NgbDateStruct} value
   * @return {NgbDateStruct}
   */

  /**
     * Converts a NgbDateStruct value into NgbDateStruct value
     * @param  {NgbDateStruct} value
     * @return {NgbDateStruct}
     */


  NgbDateStructAdapter.prototype.toModel =
  /**
  * Converts a NgbDateStruct value into NgbDateStruct value
  * @param  {NgbDateStruct} value
  * @return {NgbDateStruct}
  */
  function (date) {
    return date && date.year && date.month && date.day ? {
      year: date.year,
      month: date.month,
      day: date.day
    } : null;
  };

  NgbDateStructAdapter.decorators = [{
    type: _core.Injectable
  }];
  return NgbDateStructAdapter;
}(NgbDateAdapter);

exports.NgbDateStructAdapter = NgbDateStructAdapter;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopupService = exports.ContentRef = void 0;

var _core = __webpack_require__(0);

var ContentRef =
/** @class */
function () {
  function ContentRef(nodes, viewRef, componentRef) {
    this.nodes = nodes;
    this.viewRef = viewRef;
    this.componentRef = componentRef;
  }

  return ContentRef;
}();

exports.ContentRef = ContentRef;

var PopupService =
/** @class */
function () {
  function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver) {
    this._type = _type;
    this._injector = _injector;
    this._viewContainerRef = _viewContainerRef;
    this._renderer = _renderer;
    this._componentFactoryResolver = _componentFactoryResolver;
  }

  PopupService.prototype.open = function (content, context) {
    if (!this._windowRef) {
      this._contentRef = this._getContentRef(content, context);
      this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);
    }

    return this._windowRef;
  };

  PopupService.prototype.close = function () {
    if (this._windowRef) {
      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));

      this._windowRef = null;

      if (this._contentRef.viewRef) {
        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));

        this._contentRef = null;
      }
    }
  };

  PopupService.prototype._getContentRef = function (content, context) {
    if (!content) {
      return new ContentRef([]);
    } else if (content instanceof _core.TemplateRef) {
      var viewRef = this._viewContainerRef.createEmbeddedView(content, context);

      return new ContentRef([viewRef.rootNodes], viewRef);
    } else {
      return new ContentRef([[this._renderer.createText("" + content)]]);
    }
  };

  return PopupService;
}();

exports.PopupService = PopupService;

/***/ }),
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncSubject = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _Subscription = __webpack_require__(15);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */
var AsyncSubject =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AsyncSubject, _super);

  function AsyncSubject() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.value = null;
    _this.hasNext = false;
    _this.hasCompleted = false;
    return _this;
  }

  AsyncSubject.prototype._subscribe = function (subscriber) {
    if (this.hasError) {
      subscriber.error(this.thrownError);
      return _Subscription.Subscription.EMPTY;
    } else if (this.hasCompleted && this.hasNext) {
      subscriber.next(this.value);
      subscriber.complete();
      return _Subscription.Subscription.EMPTY;
    }

    return _super.prototype._subscribe.call(this, subscriber);
  };

  AsyncSubject.prototype.next = function (value) {
    if (!this.hasCompleted) {
      this.value = value;
      this.hasNext = true;
    }
  };

  AsyncSubject.prototype.error = function (error) {
    if (!this.hasCompleted) {
      _super.prototype.error.call(this, error);
    }
  };

  AsyncSubject.prototype.complete = function () {
    this.hasCompleted = true;

    if (this.hasNext) {
      _super.prototype.next.call(this, this.value);
    }

    _super.prototype.complete.call(this);
  };

  return AsyncSubject;
}(_Subject.Subject);

exports.AsyncSubject = AsyncSubject;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Notification = void 0;

var _empty = __webpack_require__(23);

var _of = __webpack_require__(128);

var _throwError = __webpack_require__(130);

/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */
var Notification =
/*@__PURE__*/
function () {
  function Notification(kind, value, error) {
    this.kind = kind;
    this.value = value;
    this.error = error;
    this.hasValue = kind === 'N';
  }

  Notification.prototype.observe = function (observer) {
    switch (this.kind) {
      case 'N':
        return observer.next && observer.next(this.value);

      case 'E':
        return observer.error && observer.error(this.error);

      case 'C':
        return observer.complete && observer.complete();
    }
  };

  Notification.prototype.do = function (next, error, complete) {
    var kind = this.kind;

    switch (kind) {
      case 'N':
        return next && next(this.value);

      case 'E':
        return error && error(this.error);

      case 'C':
        return complete && complete();
    }
  };

  Notification.prototype.accept = function (nextOrObserver, error, complete) {
    if (nextOrObserver && typeof nextOrObserver.next === 'function') {
      return this.observe(nextOrObserver);
    } else {
      return this.do(nextOrObserver, error, complete);
    }
  };

  Notification.prototype.toObservable = function () {
    var kind = this.kind;

    switch (kind) {
      case 'N':
        return (0, _of.of)(this.value);

      case 'E':
        return (0, _throwError.throwError)(this.error);

      case 'C':
        return (0, _empty.empty)();
    }

    throw new Error('unexpected notification kind value');
  };

  Notification.createNext = function (value) {
    if (typeof value !== 'undefined') {
      return new Notification('N', value);
    }

    return Notification.undefinedValueNotification;
  };

  Notification.createError = function (err) {
    return new Notification('E', undefined, err);
  };

  Notification.createComplete = function () {
    return Notification.completeNotification;
  };

  Notification.completeNotification = new Notification('C');
  Notification.undefinedValueNotification = new Notification('N', undefined);
  return Notification;
}();

exports.Notification = Notification;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.config = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
  Promise: undefined,

  set useDeprecatedSynchronousErrorHandling(value) {
    if (value) {
      var error =
      /*@__PURE__*/
      new Error();
      /*@__PURE__*/

      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {
      /*@__PURE__*/
      console.log('RxJS: Back to a better error behavior. Thank you. <3');
    }

    _enable_super_gross_mode_that_will_cause_bad_things = value;
  },

  get useDeprecatedSynchronousErrorHandling() {
    return _enable_super_gross_mode_that_will_cause_bad_things;
  }

};
exports.config = config;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = concat;

var _isScheduler = __webpack_require__(27);

var _of = __webpack_require__(128);

var _from = __webpack_require__(38);

var _concatAll = __webpack_require__(220);

/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */
function concat() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  if (observables.length === 1 || observables.length === 2 && (0, _isScheduler.isScheduler)(observables[1])) {
    return (0, _from.from)(observables[0]);
  }

  return (0, _concatAll.concatAll)()(_of.of.apply(void 0, observables));
}

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeMap = mergeMap;
exports.MergeMapSubscriber = exports.MergeMapOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _subscribeToResult = __webpack_require__(7);

var _OuterSubscriber = __webpack_require__(6);

var _map = __webpack_require__(25);

var _from = __webpack_require__(38);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_map,_observable_from PURE_IMPORTS_END */
function mergeMap(project, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  if (typeof resultSelector === 'function') {
    return function (source) {
      return source.pipe(mergeMap(function (a, i) {
        return (0, _from.from)(project(a, i)).pipe((0, _map.map)(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }, concurrent));
    };
  } else if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return function (source) {
    return source.lift(new MergeMapOperator(project, concurrent));
  };
}

var MergeMapOperator =
/*@__PURE__*/
function () {
  function MergeMapOperator(project, concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }

    this.project = project;
    this.concurrent = concurrent;
  }

  MergeMapOperator.prototype.call = function (observer, source) {
    return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
  };

  return MergeMapOperator;
}();

exports.MergeMapOperator = MergeMapOperator;

var MergeMapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(MergeMapSubscriber, _super);

  function MergeMapSubscriber(destination, project, concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }

    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.concurrent = concurrent;
    _this.hasCompleted = false;
    _this.buffer = [];
    _this.active = 0;
    _this.index = 0;
    return _this;
  }

  MergeMapSubscriber.prototype._next = function (value) {
    if (this.active < this.concurrent) {
      this._tryNext(value);
    } else {
      this.buffer.push(value);
    }
  };

  MergeMapSubscriber.prototype._tryNext = function (value) {
    var result;
    var index = this.index++;

    try {
      result = this.project(value, index);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.active++;

    this._innerSub(result, value, index);
  };

  MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
    this.add((0, _subscribeToResult.subscribeToResult)(this, ish, value, index));
  };

  MergeMapSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (this.active === 0 && this.buffer.length === 0) {
      this.destination.complete();
    }
  };

  MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
    var buffer = this.buffer;
    this.remove(innerSub);
    this.active--;

    if (buffer.length > 0) {
      this._next(buffer.shift());
    } else if (this.active === 0 && this.hasCompleted) {
      this.destination.complete();
    }
  };

  return MergeMapSubscriber;
}(_OuterSubscriber.OuterSubscriber);

exports.MergeMapSubscriber = MergeMapSubscriber;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reduce = reduce;

var _scan = __webpack_require__(134);

var _takeLast = __webpack_require__(137);

var _defaultIfEmpty = __webpack_require__(73);

var _pipe = __webpack_require__(140);

/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */
function reduce(accumulator, seed) {
  if (arguments.length >= 2) {
    return function reduceOperatorFunctionWithSeed(source) {
      return (0, _pipe.pipe)((0, _scan.scan)(accumulator, seed), (0, _takeLast.takeLast)(1), (0, _defaultIfEmpty.defaultIfEmpty)(seed))(source);
    };
  }

  return function reduceOperatorFunction(source) {
    return (0, _pipe.pipe)((0, _scan.scan)(function (acc, value, index) {
      return accumulator(acc, value, index + 1);
    }), (0, _takeLast.takeLast)(1))(source);
  };
}

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throwIfEmpty = void 0;

var _tap = __webpack_require__(226);

var _EmptyError = __webpack_require__(79);

/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */
var throwIfEmpty = function throwIfEmpty(errorFactory) {
  if (errorFactory === void 0) {
    errorFactory = defaultErrorFactory;
  }

  return (0, _tap.tap)({
    hasValue: false,
    next: function next() {
      this.hasValue = true;
    },
    complete: function complete() {
      if (!this.hasValue) {
        throw errorFactory();
      }
    }
  });
};

exports.throwIfEmpty = throwIfEmpty;

function defaultErrorFactory() {
  return new _EmptyError.EmptyError();
}

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObjectUnsubscribedError = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */
var ObjectUnsubscribedError =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ObjectUnsubscribedError, _super);

  function ObjectUnsubscribedError() {
    var _this = _super.call(this, 'object unsubscribed') || this;

    _this.name = 'ObjectUnsubscribedError';
    Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);
    return _this;
  }

  return ObjectUnsubscribedError;
}(Error);

exports.ObjectUnsubscribedError = ObjectUnsubscribedError;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNumeric = isNumeric;

var _isArray = __webpack_require__(20);

/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */
function isNumeric(val) {
  return !(0, _isArray.isArray)(val) && val - parseFloat(val) + 1 >= 0;
}

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.noop = noop;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() {}

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ɵangular_packages_router_router_h = getAppInitializer;
exports.ɵangular_packages_router_router_i = getBootstrapListener;
exports.ɵangular_packages_router_router_d = provideForRootGuard;
exports.ɵangular_packages_router_router_c = provideLocationStrategy;
exports.ɵangular_packages_router_router_j = provideRouterInitializer;
exports.ɵangular_packages_router_router_f = rootRoute;
exports.ɵangular_packages_router_router_b = routerNgProbeToken;
exports.ɵangular_packages_router_router_e = setupRouter;
exports.provideRoutes = provideRoutes;
exports.convertToParamMap = convertToParamMap;
exports.ɵflatten = flatten;
exports.ɵROUTER_PROVIDERS = exports.VERSION = exports.UrlTree = exports.UrlSerializer = exports.UrlSegmentGroup = exports.UrlSegment = exports.DefaultUrlSerializer = exports.UrlHandlingStrategy = exports.PRIMARY_OUTLET = exports.RouterStateSnapshot = exports.RouterState = exports.ActivatedRouteSnapshot = exports.ActivatedRoute = exports.RouterPreloader = exports.PreloadingStrategy = exports.PreloadAllModules = exports.NoPreloading = exports.OutletContext = exports.ChildrenOutletContexts = exports.RouterModule = exports.ROUTER_INITIALIZER = exports.ROUTER_CONFIGURATION = exports.ROUTES = exports.Router = exports.RouteReuseStrategy = exports.RoutesRecognized = exports.RouterEvent = exports.RouteConfigLoadStart = exports.RouteConfigLoadEnd = exports.ResolveStart = exports.ResolveEnd = exports.NavigationStart = exports.NavigationError = exports.NavigationEnd = exports.NavigationCancel = exports.GuardsCheckStart = exports.GuardsCheckEnd = exports.ChildActivationStart = exports.ChildActivationEnd = exports.ActivationStart = exports.ActivationEnd = exports.RouterOutlet = exports.RouterLinkActive = exports.RouterLinkWithHref = exports.RouterLink = exports.ɵangular_packages_router_router_l = exports.ɵangular_packages_router_router_k = exports.ɵangular_packages_router_router_g = exports.ɵangular_packages_router_router_a = void 0;

var _common = __webpack_require__(10);

var _core = __webpack_require__(0);

var _tslib = __webpack_require__(1);

var _rxjs = __webpack_require__(31);

var _operators = __webpack_require__(33);

var _platformBrowser = __webpack_require__(50);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Base for events the Router goes through, as opposed to events tied to a specific
 * Route. `RouterEvent`s will only be fired one time for any given navigation.
 *
 * Example:
 *
 * ```
 * class MyService {
 *   constructor(public router: Router, logger: Logger) {
 *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {
 *       logger.log(e.id, e.url);
 *     });
 *   }
 * }
 * ```
 *
 * @experimental
 */
var RouterEvent =
/** @class */
function () {
  function RouterEvent(
  /** @docsNotRequired */
  id,
  /** @docsNotRequired */
  url) {
    this.id = id;
    this.url = url;
  }

  return RouterEvent;
}();
/**
 * @description
 *
 * Represents an event triggered when a navigation starts.
 *
 *
 */


exports.RouterEvent = RouterEvent;

var NavigationStart =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NavigationStart, _super);

  function NavigationStart(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */

  /** @docsNotRequired */
  navigationTrigger,
  /** @docsNotRequired */

  /** @docsNotRequired */
  restoredState) {
    /** @docsNotRequired */
    if (navigationTrigger === void 0) {
      navigationTrigger = 'imperative';
    }
    /** @docsNotRequired */


    if (restoredState === void 0) {
      restoredState = null;
    }

    var _this = _super.call(this, id, url) || this;

    _this.navigationTrigger = navigationTrigger;
    _this.restoredState = restoredState;
    return _this;
  }
  /** @docsNotRequired */

  /** @docsNotRequired */


  NavigationStart.prototype.toString =
  /** @docsNotRequired */
  function () {
    return "NavigationStart(id: " + this.id + ", url: '" + this.url + "')";
  };

  return NavigationStart;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when a navigation ends successfully.
 *
 *
 */


exports.NavigationStart = NavigationStart;

var NavigationEnd =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NavigationEnd, _super);

  function NavigationEnd(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    return _this;
  }
  /** @docsNotRequired */

  /** @docsNotRequired */


  NavigationEnd.prototype.toString =
  /** @docsNotRequired */
  function () {
    return "NavigationEnd(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "')";
  };

  return NavigationEnd;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when a navigation is canceled.
 *
 *
 */


exports.NavigationEnd = NavigationEnd;

var NavigationCancel =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NavigationCancel, _super);

  function NavigationCancel(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  reason) {
    var _this = _super.call(this, id, url) || this;

    _this.reason = reason;
    return _this;
  }
  /** @docsNotRequired */

  /** @docsNotRequired */


  NavigationCancel.prototype.toString =
  /** @docsNotRequired */
  function () {
    return "NavigationCancel(id: " + this.id + ", url: '" + this.url + "')";
  };

  return NavigationCancel;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when a navigation fails due to an unexpected error.
 *
 *
 */


exports.NavigationCancel = NavigationCancel;

var NavigationError =
/** @class */
function (_super) {
  (0, _tslib.__extends)(NavigationError, _super);

  function NavigationError(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  error) {
    var _this = _super.call(this, id, url) || this;

    _this.error = error;
    return _this;
  }
  /** @docsNotRequired */

  /** @docsNotRequired */


  NavigationError.prototype.toString =
  /** @docsNotRequired */
  function () {
    return "NavigationError(id: " + this.id + ", url: '" + this.url + "', error: " + this.error + ")";
  };

  return NavigationError;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered when routes are recognized.
 *
 *
 */


exports.NavigationError = NavigationError;

var RoutesRecognized =
/** @class */
function (_super) {
  (0, _tslib.__extends)(RoutesRecognized, _super);

  function RoutesRecognized(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }
  /** @docsNotRequired */

  /** @docsNotRequired */


  RoutesRecognized.prototype.toString =
  /** @docsNotRequired */
  function () {
    return "RoutesRecognized(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return RoutesRecognized;
}(RouterEvent);
/**
 * @description
 *
 * Represents the start of the Guard phase of routing.
 *
 * @experimental
 */


exports.RoutesRecognized = RoutesRecognized;

var GuardsCheckStart =
/** @class */
function (_super) {
  (0, _tslib.__extends)(GuardsCheckStart, _super);

  function GuardsCheckStart(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }

  GuardsCheckStart.prototype.toString = function () {
    return "GuardsCheckStart(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return GuardsCheckStart;
}(RouterEvent);
/**
 * @description
 *
 * Represents the end of the Guard phase of routing.
 *
 * @experimental
 */


exports.GuardsCheckStart = GuardsCheckStart;

var GuardsCheckEnd =
/** @class */
function (_super) {
  (0, _tslib.__extends)(GuardsCheckEnd, _super);

  function GuardsCheckEnd(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state,
  /** @docsNotRequired */
  shouldActivate) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    _this.shouldActivate = shouldActivate;
    return _this;
  }

  GuardsCheckEnd.prototype.toString = function () {
    return "GuardsCheckEnd(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ", shouldActivate: " + this.shouldActivate + ")";
  };

  return GuardsCheckEnd;
}(RouterEvent);
/**
 * @description
 *
 * Represents the start of the Resolve phase of routing. The timing of this
 * event may change, thus it's experimental. In the current iteration it will run
 * in the "resolve" phase whether there's things to resolve or not. In the future this
 * behavior may change to only run when there are things to be resolved.
 *
 * @experimental
 */


exports.GuardsCheckEnd = GuardsCheckEnd;

var ResolveStart =
/** @class */
function (_super) {
  (0, _tslib.__extends)(ResolveStart, _super);

  function ResolveStart(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }

  ResolveStart.prototype.toString = function () {
    return "ResolveStart(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return ResolveStart;
}(RouterEvent);
/**
 * @description
 *
 * Represents the end of the Resolve phase of routing. See note on
 * `ResolveStart` for use of this experimental API.
 *
 * @experimental
 */


exports.ResolveStart = ResolveStart;

var ResolveEnd =
/** @class */
function (_super) {
  (0, _tslib.__extends)(ResolveEnd, _super);

  function ResolveEnd(
  /** @docsNotRequired */

  /** @docsNotRequired */
  id,
  /** @docsNotRequired */

  /** @docsNotRequired */
  url,
  /** @docsNotRequired */
  urlAfterRedirects,
  /** @docsNotRequired */
  state) {
    var _this = _super.call(this, id, url) || this;

    _this.urlAfterRedirects = urlAfterRedirects;
    _this.state = state;
    return _this;
  }

  ResolveEnd.prototype.toString = function () {
    return "ResolveEnd(id: " + this.id + ", url: '" + this.url + "', urlAfterRedirects: '" + this.urlAfterRedirects + "', state: " + this.state + ")";
  };

  return ResolveEnd;
}(RouterEvent);
/**
 * @description
 *
 * Represents an event triggered before lazy loading a route config.
 *
 * @experimental
 */


exports.ResolveEnd = ResolveEnd;

var RouteConfigLoadStart =
/** @class */
function () {
  function RouteConfigLoadStart(
  /** @docsNotRequired */
  route) {
    this.route = route;
  }

  RouteConfigLoadStart.prototype.toString = function () {
    return "RouteConfigLoadStart(path: " + this.route.path + ")";
  };

  return RouteConfigLoadStart;
}();
/**
 * @description
 *
 * Represents an event triggered when a route has been lazy loaded.
 *
 * @experimental
 */


exports.RouteConfigLoadStart = RouteConfigLoadStart;

var RouteConfigLoadEnd =
/** @class */
function () {
  function RouteConfigLoadEnd(
  /** @docsNotRequired */
  route) {
    this.route = route;
  }

  RouteConfigLoadEnd.prototype.toString = function () {
    return "RouteConfigLoadEnd(path: " + this.route.path + ")";
  };

  return RouteConfigLoadEnd;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ChildActivationEnd` for use of this experimental API.
 *
 * @experimental
 */


exports.RouteConfigLoadEnd = RouteConfigLoadEnd;

var ChildActivationStart =
/** @class */
function () {
  function ChildActivationStart(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ChildActivationStart.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ChildActivationStart(path: '" + path + "')";
  };

  return ChildActivationStart;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ChildActivationStart` for use of this experimental API.
 *
 * @experimental
 */


exports.ChildActivationStart = ChildActivationStart;

var ChildActivationEnd =
/** @class */
function () {
  function ChildActivationEnd(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ChildActivationEnd.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ChildActivationEnd(path: '" + path + "')";
  };

  return ChildActivationEnd;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ActivationEnd` for use of this experimental API.
 *
 * @experimental
 */


exports.ChildActivationEnd = ChildActivationEnd;

var ActivationStart =
/** @class */
function () {
  function ActivationStart(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ActivationStart.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ActivationStart(path: '" + path + "')";
  };

  return ActivationStart;
}();
/**
 * @description
 *
 * Represents the start of end of the Resolve phase of routing. See note on
 * `ActivationStart` for use of this experimental API.
 *
 * @experimental
 */


exports.ActivationStart = ActivationStart;

var ActivationEnd =
/** @class */
function () {
  function ActivationEnd(
  /** @docsNotRequired */
  snapshot) {
    this.snapshot = snapshot;
  }

  ActivationEnd.prototype.toString = function () {
    var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';
    return "ActivationEnd(path: '" + path + "')";
  };

  return ActivationEnd;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Name of the primary outlet.
 *
 *
 */


exports.ActivationEnd = ActivationEnd;
var PRIMARY_OUTLET = 'primary';
exports.PRIMARY_OUTLET = PRIMARY_OUTLET;

var ParamsAsMap =
/** @class */
function () {
  function ParamsAsMap(params) {
    this.params = params || {};
  }

  ParamsAsMap.prototype.has = function (name) {
    return this.params.hasOwnProperty(name);
  };

  ParamsAsMap.prototype.get = function (name) {
    if (this.has(name)) {
      var v = this.params[name];
      return Array.isArray(v) ? v[0] : v;
    }

    return null;
  };

  ParamsAsMap.prototype.getAll = function (name) {
    if (this.has(name)) {
      var v = this.params[name];
      return Array.isArray(v) ? v : [v];
    }

    return [];
  };

  Object.defineProperty(ParamsAsMap.prototype, "keys", {
    get: function get() {
      return Object.keys(this.params);
    },
    enumerable: true,
    configurable: true
  });
  return ParamsAsMap;
}();
/**
 * Convert a `Params` instance to a `ParamMap`.
 *
 *
 */


function convertToParamMap(params) {
  return new ParamsAsMap(params);
}

var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';

function navigationCancelingError(message) {
  var error = Error('NavigationCancelingError: ' + message);
  error[NAVIGATION_CANCELING_ERROR] = true;
  return error;
}

function isNavigationCancelingError(error) {
  return error && error[NAVIGATION_CANCELING_ERROR];
} // Matches the route configuration (`route`) against the actual URL (`segments`).


function defaultUrlMatcher(segments, segmentGroup, route) {
  var parts = route.path.split('/');

  if (parts.length > segments.length) {
    // The actual URL is shorter than the config, no match
    return null;
  }

  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {
    // The config is longer than the actual URL but we are looking for a full match, return null
    return null;
  }

  var posParams = {}; // Check each config part against the actual URL

  for (var index = 0; index < parts.length; index++) {
    var part = parts[index];
    var segment = segments[index];
    var isParameter = part.startsWith(':');

    if (isParameter) {
      posParams[part.substring(1)] = segment;
    } else if (part !== segment.path) {
      // The actual URL part does not match the config, no match
      return null;
    }
  }

  return {
    consumed: segments.slice(0, parts.length),
    posParams: posParams
  };
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var LoadedRouterConfig =
/** @class */
function () {
  function LoadedRouterConfig(routes, module) {
    this.routes = routes;
    this.module = module;
  }

  return LoadedRouterConfig;
}();

function validateConfig(config, parentPath) {
  if (parentPath === void 0) {
    parentPath = '';
  } // forEach doesn't iterate undefined values


  for (var i = 0; i < config.length; i++) {
    var route = config[i];
    var fullPath = getFullPath(parentPath, route);
    validateNode(route, fullPath);
  }
}

function validateNode(route, fullPath) {
  if (!route) {
    throw new Error("\n      Invalid configuration of route '" + fullPath + "': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    ");
  }

  if (Array.isArray(route)) {
    throw new Error("Invalid configuration of route '" + fullPath + "': Array cannot be specified");
  }

  if (!route.component && route.outlet && route.outlet !== PRIMARY_OUTLET) {
    throw new Error("Invalid configuration of route '" + fullPath + "': a componentless route cannot have a named outlet set");
  }

  if (route.redirectTo && route.children) {
    throw new Error("Invalid configuration of route '" + fullPath + "': redirectTo and children cannot be used together");
  }

  if (route.redirectTo && route.loadChildren) {
    throw new Error("Invalid configuration of route '" + fullPath + "': redirectTo and loadChildren cannot be used together");
  }

  if (route.children && route.loadChildren) {
    throw new Error("Invalid configuration of route '" + fullPath + "': children and loadChildren cannot be used together");
  }

  if (route.redirectTo && route.component) {
    throw new Error("Invalid configuration of route '" + fullPath + "': redirectTo and component cannot be used together");
  }

  if (route.path && route.matcher) {
    throw new Error("Invalid configuration of route '" + fullPath + "': path and matcher cannot be used together");
  }

  if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {
    throw new Error("Invalid configuration of route '" + fullPath + "'. One of the following must be provided: component, redirectTo, children or loadChildren");
  }

  if (route.path === void 0 && route.matcher === void 0) {
    throw new Error("Invalid configuration of route '" + fullPath + "': routes must have either a path or a matcher specified");
  }

  if (typeof route.path === 'string' && route.path.charAt(0) === '/') {
    throw new Error("Invalid configuration of route '" + fullPath + "': path cannot start with a slash");
  }

  if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {
    var exp = "The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.";
    throw new Error("Invalid configuration of route '{path: \"" + fullPath + "\", redirectTo: \"" + route.redirectTo + "\"}': please provide 'pathMatch'. " + exp);
  }

  if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {
    throw new Error("Invalid configuration of route '" + fullPath + "': pathMatch can only be set to 'prefix' or 'full'");
  }

  if (route.children) {
    validateConfig(route.children, fullPath);
  }
}

function getFullPath(parentPath, currentRoute) {
  if (!currentRoute) {
    return parentPath;
  }

  if (!parentPath && !currentRoute.path) {
    return '';
  } else if (parentPath && !currentRoute.path) {
    return parentPath + "/";
  } else if (!parentPath && currentRoute.path) {
    return currentRoute.path;
  } else {
    return parentPath + "/" + currentRoute.path;
  }
}

function copyConfig(r) {
  var children = r.children && r.children.map(copyConfig);
  return children ? (0, _tslib.__assign)({}, r, {
    children: children
  }) : (0, _tslib.__assign)({}, r);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function shallowEqualArrays(a, b) {
  if (a.length !== b.length) return false;

  for (var i = 0; i < a.length; ++i) {
    if (!shallowEqual(a[i], b[i])) return false;
  }

  return true;
}

function shallowEqual(a, b) {
  var k1 = Object.keys(a);
  var k2 = Object.keys(b);

  if (k1.length != k2.length) {
    return false;
  }

  var key;

  for (var i = 0; i < k1.length; i++) {
    key = k1[i];

    if (a[key] !== b[key]) {
      return false;
    }
  }

  return true;
}
/**
 * Flattens single-level nested arrays.
 */


function flatten(arr) {
  return Array.prototype.concat.apply([], arr);
}
/**
 * Return the last element of an array.
 */


function last$1(a) {
  return a.length > 0 ? a[a.length - 1] : null;
}
/**
 * Verifys all booleans in an array are `true`.
 */


function forEach(map$$1, callback) {
  for (var prop in map$$1) {
    if (map$$1.hasOwnProperty(prop)) {
      callback(map$$1[prop], prop);
    }
  }
}

function waitForMap(obj, fn) {
  if (Object.keys(obj).length === 0) {
    return (0, _rxjs.of)({});
  }

  var waitHead = [];
  var waitTail = [];
  var res = {};
  forEach(obj, function (a, k) {
    var mapped = fn(k, a).pipe((0, _operators.map)(function (r) {
      return res[k] = r;
    }));

    if (k === PRIMARY_OUTLET) {
      waitHead.push(mapped);
    } else {
      waitTail.push(mapped);
    }
  }); // Closure compiler has problem with using spread operator here. So just using Array.concat.

  return _rxjs.of.apply(null, waitHead.concat(waitTail)).pipe((0, _operators.concatAll)(), (0, _operators.last)(), (0, _operators.map)(function () {
    return res;
  }));
}
/**
 * ANDs Observables by merging all input observables, reducing to an Observable verifying all
 * input Observables return `true`.
 */


function andObservables(observables) {
  return observables.pipe((0, _operators.mergeAll)(), (0, _operators.every)(function (result) {
    return result === true;
  }));
}

function wrapIntoObservable(value) {
  if ((0, _core.ɵisObservable)(value)) {
    return value;
  }

  if ((0, _core.ɵisPromise)(value)) {
    // Use `Promise.resolve()` to wrap promise-like instances.
    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the
    // change detection.
    return (0, _rxjs.from)(Promise.resolve(value));
  }

  return (0, _rxjs.of)(value);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createEmptyUrlTree() {
  return new UrlTree(new UrlSegmentGroup([], {}), {}, null);
}

function containsTree(container, containee, exact) {
  if (exact) {
    return equalQueryParams(container.queryParams, containee.queryParams) && equalSegmentGroups(container.root, containee.root);
  }

  return containsQueryParams(container.queryParams, containee.queryParams) && containsSegmentGroup(container.root, containee.root);
}

function equalQueryParams(container, containee) {
  return shallowEqual(container, containee);
}

function equalSegmentGroups(container, containee) {
  if (!equalPath(container.segments, containee.segments)) return false;
  if (container.numberOfChildren !== containee.numberOfChildren) return false;

  for (var c in containee.children) {
    if (!container.children[c]) return false;
    if (!equalSegmentGroups(container.children[c], containee.children[c])) return false;
  }

  return true;
}

function containsQueryParams(container, containee) {
  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(function (key) {
    return containee[key] === container[key];
  });
}

function containsSegmentGroup(container, containee) {
  return containsSegmentGroupHelper(container, containee, containee.segments);
}

function containsSegmentGroupHelper(container, containee, containeePaths) {
  if (container.segments.length > containeePaths.length) {
    var current = container.segments.slice(0, containeePaths.length);
    if (!equalPath(current, containeePaths)) return false;
    if (containee.hasChildren()) return false;
    return true;
  } else if (container.segments.length === containeePaths.length) {
    if (!equalPath(container.segments, containeePaths)) return false;

    for (var c in containee.children) {
      if (!container.children[c]) return false;
      if (!containsSegmentGroup(container.children[c], containee.children[c])) return false;
    }

    return true;
  } else {
    var current = containeePaths.slice(0, container.segments.length);
    var next = containeePaths.slice(container.segments.length);
    if (!equalPath(container.segments, current)) return false;
    if (!container.children[PRIMARY_OUTLET]) return false;
    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);
  }
}
/**
 * @description
 *
 * Represents the parsed URL.
 *
 * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a
 * serialized tree.
 * UrlTree is a data structure that provides a lot of affordances in dealing with URLs
 *
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree =
 *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');
 *     const f = tree.fragment; // return 'fragment'
 *     const q = tree.queryParams; // returns {debug: 'true'}
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'
 *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'
 *     g.children['support'].segments; // return 1 segment 'help'
 *   }
 * }
 * ```
 *
 *
 */


var UrlTree =
/** @class */
function () {
  /** @internal */
  function UrlTree(
  /** The root segment group of the URL tree */
  root,
  /** The query params of the URL */
  queryParams,
  /** The fragment of the URL */
  fragment) {
    this.root = root;
    this.queryParams = queryParams;
    this.fragment = fragment;
  }

  Object.defineProperty(UrlTree.prototype, "queryParamMap", {
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = convertToParamMap(this.queryParams);
      }

      return this._queryParamMap;
    },
    enumerable: true,
    configurable: true
  });
  /** @docsNotRequired */

  /** @docsNotRequired */

  UrlTree.prototype.toString =
  /** @docsNotRequired */
  function () {
    return DEFAULT_SERIALIZER.serialize(this);
  };

  return UrlTree;
}();
/**
 * @description
 *
 * Represents the parsed URL segment group.
 *
 * See `UrlTree` for more information.
 *
 *
 */


exports.UrlTree = UrlTree;

var UrlSegmentGroup =
/** @class */
function () {
  function UrlSegmentGroup(
  /** The URL segments of this group. See `UrlSegment` for more information */
  segments,
  /** The list of children of this group */
  children) {
    var _this = this;

    this.segments = segments;
    this.children = children;
    /** The parent node in the url tree */

    this.parent = null;
    forEach(children, function (v, k) {
      return v.parent = _this;
    });
  }
  /** Whether the segment has child segments */

  /** Whether the segment has child segments */


  UrlSegmentGroup.prototype.hasChildren =
  /** Whether the segment has child segments */
  function () {
    return this.numberOfChildren > 0;
  };

  Object.defineProperty(UrlSegmentGroup.prototype, "numberOfChildren", {
    /** Number of child segments */
    get:
    /** Number of child segments */
    function get() {
      return Object.keys(this.children).length;
    },
    enumerable: true,
    configurable: true
  });
  /** @docsNotRequired */

  /** @docsNotRequired */

  UrlSegmentGroup.prototype.toString =
  /** @docsNotRequired */
  function () {
    return serializePaths(this);
  };

  return UrlSegmentGroup;
}();
/**
 * @description
 *
 * Represents a single URL segment.
 *
 * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix
 * parameters associated with the segment.
 *
 * ## Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree = router.parseUrl('/team;id=33');
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments;
 *     s[0].path; // returns 'team'
 *     s[0].parameters; // returns {id: 33}
 *   }
 * }
 * ```
 *
 *
 */


exports.UrlSegmentGroup = UrlSegmentGroup;

var UrlSegment =
/** @class */
function () {
  function UrlSegment(
  /** The path part of a URL segment */
  path,
  /** The matrix parameters associated with a segment */
  parameters) {
    this.path = path;
    this.parameters = parameters;
  }

  Object.defineProperty(UrlSegment.prototype, "parameterMap", {
    get: function get() {
      if (!this._parameterMap) {
        this._parameterMap = convertToParamMap(this.parameters);
      }

      return this._parameterMap;
    },
    enumerable: true,
    configurable: true
  });
  /** @docsNotRequired */

  /** @docsNotRequired */

  UrlSegment.prototype.toString =
  /** @docsNotRequired */
  function () {
    return serializePath(this);
  };

  return UrlSegment;
}();

exports.UrlSegment = UrlSegment;

function equalSegments(as, bs) {
  return equalPath(as, bs) && as.every(function (a, i) {
    return shallowEqual(a.parameters, bs[i].parameters);
  });
}

function equalPath(as, bs) {
  if (as.length !== bs.length) return false;
  return as.every(function (a, i) {
    return a.path === bs[i].path;
  });
}

function mapChildrenIntoArray(segment, fn) {
  var res = [];
  forEach(segment.children, function (child, childOutlet) {
    if (childOutlet === PRIMARY_OUTLET) {
      res = res.concat(fn(child, childOutlet));
    }
  });
  forEach(segment.children, function (child, childOutlet) {
    if (childOutlet !== PRIMARY_OUTLET) {
      res = res.concat(fn(child, childOutlet));
    }
  });
  return res;
}
/**
 * @description
 *
 * Serializes and deserializes a URL string into a URL tree.
 *
 * The url serialization strategy is customizable. You can
 * make all URLs case insensitive by providing a custom UrlSerializer.
 *
 * See `DefaultUrlSerializer` for an example of a URL serializer.
 *
 *
 */


var UrlSerializer =
/** @class */
function () {
  function UrlSerializer() {}

  return UrlSerializer;
}();
/**
 * @description
 *
 * A default implementation of the `UrlSerializer`.
 *
 * Example URLs:
 *
 * ```
 * /inbox/33(popup:compose)
 * /inbox/33;open=true/messages/44
 * ```
 *
 * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the
 * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to
 * specify route specific parameters.
 *
 *
 */


exports.UrlSerializer = UrlSerializer;

var DefaultUrlSerializer =
/** @class */
function () {
  function DefaultUrlSerializer() {}
  /** Parses a url into a `UrlTree` */

  /** Parses a url into a `UrlTree` */


  DefaultUrlSerializer.prototype.parse =
  /** Parses a url into a `UrlTree` */
  function (url) {
    var p = new UrlParser(url);
    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());
  };
  /** Converts a `UrlTree` into a url */

  /** Converts a `UrlTree` into a url */


  DefaultUrlSerializer.prototype.serialize =
  /** Converts a `UrlTree` into a url */
  function (tree) {
    var segment = "/" + serializeSegment(tree.root, true);
    var query = serializeQueryParams(tree.queryParams);
    var fragment = typeof tree.fragment === "string" ? "#" + encodeUriFragment(tree.fragment) : '';
    return "" + segment + query + fragment;
  };

  return DefaultUrlSerializer;
}();

exports.DefaultUrlSerializer = DefaultUrlSerializer;
var DEFAULT_SERIALIZER = new DefaultUrlSerializer();

function serializePaths(segment) {
  return segment.segments.map(function (p) {
    return serializePath(p);
  }).join('/');
}

function serializeSegment(segment, root) {
  if (!segment.hasChildren()) {
    return serializePaths(segment);
  }

  if (root) {
    var primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';
    var children_1 = [];
    forEach(segment.children, function (v, k) {
      if (k !== PRIMARY_OUTLET) {
        children_1.push(k + ":" + serializeSegment(v, false));
      }
    });
    return children_1.length > 0 ? primary + "(" + children_1.join('//') + ")" : primary;
  } else {
    var children = mapChildrenIntoArray(segment, function (v, k) {
      if (k === PRIMARY_OUTLET) {
        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];
      }

      return [k + ":" + serializeSegment(v, false)];
    });
    return serializePaths(segment) + "/(" + children.join('//') + ")";
  }
}
/**
 * Encodes a URI string with the default encoding. This function will only ever be called from
 * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need
 * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't
 * have to be encoded per https://url.spec.whatwg.org.
 */


function encodeUriString(s) {
  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');
}
/**
 * This function should be used to encode both keys and values in a query string key/value. In
 * the following URL, you need to call encodeUriQuery on "k" and "v":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriQuery(s) {
  return encodeUriString(s).replace(/%3B/gi, ';');
}
/**
 * This function should be used to encode a URL fragment. In the following URL, you need to call
 * encodeUriFragment on "f":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriFragment(s) {
  return encodeURI(s);
}
/**
 * This function should be run on any URI segment as well as the key and value in a key/value
 * pair for matrix params. In the following URL, you need to call encodeUriSegment on "html",
 * "mk", and "mv":
 *
 * http://www.site.org/html;mk=mv?k=v#f
 */


function encodeUriSegment(s) {
  return encodeUriString(s).replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/%26/gi, '&');
}

function decode(s) {
  return decodeURIComponent(s);
} // Query keys/values should have the "+" replaced first, as "+" in a query string is " ".
// decodeURIComponent function will not decode "+" as a space.


function decodeQuery(s) {
  return decode(s.replace(/\+/g, '%20'));
}

function serializePath(path) {
  return "" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);
}

function serializeMatrixParams(params) {
  return Object.keys(params).map(function (key) {
    return ";" + encodeUriSegment(key) + "=" + encodeUriSegment(params[key]);
  }).join('');
}

function serializeQueryParams(params) {
  var strParams = Object.keys(params).map(function (name) {
    var value = params[name];
    return Array.isArray(value) ? value.map(function (v) {
      return encodeUriQuery(name) + "=" + encodeUriQuery(v);
    }).join('&') : encodeUriQuery(name) + "=" + encodeUriQuery(value);
  });
  return strParams.length ? "?" + strParams.join("&") : '';
}

var SEGMENT_RE = /^[^\/()?;=&#]+/;

function matchSegments(str) {
  var match = str.match(SEGMENT_RE);
  return match ? match[0] : '';
}

var QUERY_PARAM_RE = /^[^=?&#]+/; // Return the name of the query param at the start of the string or an empty string

function matchQueryParams(str) {
  var match = str.match(QUERY_PARAM_RE);
  return match ? match[0] : '';
}

var QUERY_PARAM_VALUE_RE = /^[^?&#]+/; // Return the value of the query param at the start of the string or an empty string

function matchUrlQueryParamValue(str) {
  var match = str.match(QUERY_PARAM_VALUE_RE);
  return match ? match[0] : '';
}

var UrlParser =
/** @class */
function () {
  function UrlParser(url) {
    this.url = url;
    this.remaining = url;
  }

  UrlParser.prototype.parseRootSegment = function () {
    this.consumeOptional('/');

    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {
      return new UrlSegmentGroup([], {});
    } // The root segment group never has segments


    return new UrlSegmentGroup([], this.parseChildren());
  };

  UrlParser.prototype.parseQueryParams = function () {
    var params = {};

    if (this.consumeOptional('?')) {
      do {
        this.parseQueryParam(params);
      } while (this.consumeOptional('&'));
    }

    return params;
  };

  UrlParser.prototype.parseFragment = function () {
    return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;
  };

  UrlParser.prototype.parseChildren = function () {
    if (this.remaining === '') {
      return {};
    }

    this.consumeOptional('/');
    var segments = [];

    if (!this.peekStartsWith('(')) {
      segments.push(this.parseSegment());
    }

    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {
      this.capture('/');
      segments.push(this.parseSegment());
    }

    var children = {};

    if (this.peekStartsWith('/(')) {
      this.capture('/');
      children = this.parseParens(true);
    }

    var res = {};

    if (this.peekStartsWith('(')) {
      res = this.parseParens(false);
    }

    if (segments.length > 0 || Object.keys(children).length > 0) {
      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);
    }

    return res;
  }; // parse a segment with its matrix parameters
  // ie `name;k1=v1;k2`
  // parse a segment with its matrix parameters
  // ie `name;k1=v1;k2`


  UrlParser.prototype.parseSegment = // parse a segment with its matrix parameters
  // ie `name;k1=v1;k2`
  function () {
    var path = matchSegments(this.remaining);

    if (path === '' && this.peekStartsWith(';')) {
      throw new Error("Empty path url segment cannot have parameters: '" + this.remaining + "'.");
    }

    this.capture(path);
    return new UrlSegment(decode(path), this.parseMatrixParams());
  };

  UrlParser.prototype.parseMatrixParams = function () {
    var params = {};

    while (this.consumeOptional(';')) {
      this.parseParam(params);
    }

    return params;
  };

  UrlParser.prototype.parseParam = function (params) {
    var key = matchSegments(this.remaining);

    if (!key) {
      return;
    }

    this.capture(key);
    var value = '';

    if (this.consumeOptional('=')) {
      var valueMatch = matchSegments(this.remaining);

      if (valueMatch) {
        value = valueMatch;
        this.capture(value);
      }
    }

    params[decode(key)] = decode(value);
  }; // Parse a single query parameter `name[=value]`
  // Parse a single query parameter `name[=value]`


  UrlParser.prototype.parseQueryParam = // Parse a single query parameter `name[=value]`
  function (params) {
    var key = matchQueryParams(this.remaining);

    if (!key) {
      return;
    }

    this.capture(key);
    var value = '';

    if (this.consumeOptional('=')) {
      var valueMatch = matchUrlQueryParamValue(this.remaining);

      if (valueMatch) {
        value = valueMatch;
        this.capture(value);
      }
    }

    var decodedKey = decodeQuery(key);
    var decodedVal = decodeQuery(value);

    if (params.hasOwnProperty(decodedKey)) {
      // Append to existing values
      var currentVal = params[decodedKey];

      if (!Array.isArray(currentVal)) {
        currentVal = [currentVal];
        params[decodedKey] = currentVal;
      }

      currentVal.push(decodedVal);
    } else {
      // Create a new value
      params[decodedKey] = decodedVal;
    }
  }; // parse `(a/b//outlet_name:c/d)`
  // parse `(a/b//outlet_name:c/d)`


  UrlParser.prototype.parseParens = // parse `(a/b//outlet_name:c/d)`
  function (allowPrimary) {
    var segments = {};
    this.capture('(');

    while (!this.consumeOptional(')') && this.remaining.length > 0) {
      var path = matchSegments(this.remaining);
      var next = this.remaining[path.length]; // if is is not one of these characters, then the segment was unescaped
      // or the group was not closed

      if (next !== '/' && next !== ')' && next !== ';') {
        throw new Error("Cannot parse url '" + this.url + "'");
      }

      var outletName = undefined;

      if (path.indexOf(':') > -1) {
        outletName = path.substr(0, path.indexOf(':'));
        this.capture(outletName);
        this.capture(':');
      } else if (allowPrimary) {
        outletName = PRIMARY_OUTLET;
      }

      var children = this.parseChildren();
      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);
      this.consumeOptional('//');
    }

    return segments;
  };

  UrlParser.prototype.peekStartsWith = function (str) {
    return this.remaining.startsWith(str);
  }; // Consumes the prefix when it is present and returns whether it has been consumed
  // Consumes the prefix when it is present and returns whether it has been consumed


  UrlParser.prototype.consumeOptional = // Consumes the prefix when it is present and returns whether it has been consumed
  function (str) {
    if (this.peekStartsWith(str)) {
      this.remaining = this.remaining.substring(str.length);
      return true;
    }

    return false;
  };

  UrlParser.prototype.capture = function (str) {
    if (!this.consumeOptional(str)) {
      throw new Error("Expected \"" + str + "\".");
    }
  };

  return UrlParser;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NoMatch =
/** @class */
function () {
  function NoMatch(segmentGroup) {
    this.segmentGroup = segmentGroup || null;
  }

  return NoMatch;
}();

var AbsoluteRedirect =
/** @class */
function () {
  function AbsoluteRedirect(urlTree) {
    this.urlTree = urlTree;
  }

  return AbsoluteRedirect;
}();

function noMatch(segmentGroup) {
  return new _rxjs.Observable(function (obs) {
    return obs.error(new NoMatch(segmentGroup));
  });
}

function absoluteRedirect(newTree) {
  return new _rxjs.Observable(function (obs) {
    return obs.error(new AbsoluteRedirect(newTree));
  });
}

function namedOutletsRedirect(redirectTo) {
  return new _rxjs.Observable(function (obs) {
    return obs.error(new Error("Only absolute redirects can have named outlets. redirectTo: '" + redirectTo + "'"));
  });
}

function canLoadFails(route) {
  return new _rxjs.Observable(function (obs) {
    return obs.error(navigationCancelingError("Cannot load children because the guard of the route \"path: '" + route.path + "'\" returned false"));
  });
}
/**
 * Returns the `UrlTree` with the redirection applied.
 *
 * Lazy modules are loaded along the way.
 */


function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {
  return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();
}

var ApplyRedirects =
/** @class */
function () {
  function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {
    this.configLoader = configLoader;
    this.urlSerializer = urlSerializer;
    this.urlTree = urlTree;
    this.config = config;
    this.allowRedirects = true;
    this.ngModule = moduleInjector.get(_core.NgModuleRef);
  }

  ApplyRedirects.prototype.apply = function () {
    var _this = this;

    var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);
    var urlTrees$ = expanded$.pipe((0, _operators.map)(function (rootSegmentGroup) {
      return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment);
    }));
    return urlTrees$.pipe((0, _operators.catchError)(function (e) {
      if (e instanceof AbsoluteRedirect) {
        // after an absolute redirect we do not apply any more redirects!
        // after an absolute redirect we do not apply any more redirects!
        _this.allowRedirects = false; // we need to run matching, so we can fetch all lazy-loaded modules

        return _this.match(e.urlTree);
      }

      if (e instanceof NoMatch) {
        throw _this.noMatchError(e);
      }

      throw e;
    }));
  };

  ApplyRedirects.prototype.match = function (tree) {
    var _this = this;

    var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);
    var mapped$ = expanded$.pipe((0, _operators.map)(function (rootSegmentGroup) {
      return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);
    }));
    return mapped$.pipe((0, _operators.catchError)(function (e) {
      if (e instanceof NoMatch) {
        throw _this.noMatchError(e);
      }

      throw e;
    }));
  };

  ApplyRedirects.prototype.noMatchError = function (e) {
    return new Error("Cannot match any routes. URL Segment: '" + e.segmentGroup + "'");
  };

  ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {
    var root = rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) : rootCandidate;
    return new UrlTree(root, queryParams, fragment);

    var _a;
  };

  ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {
    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
      return this.expandChildren(ngModule, routes, segmentGroup).pipe((0, _operators.map)(function (children) {
        return new UrlSegmentGroup([], children);
      }));
    }

    return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);
  }; // Recursively expand segment groups for all the child outlets
  // Recursively expand segment groups for all the child outlets


  ApplyRedirects.prototype.expandChildren = // Recursively expand segment groups for all the child outlets
  function (ngModule, routes, segmentGroup) {
    var _this = this;

    return waitForMap(segmentGroup.children, function (childOutlet, child) {
      return _this.expandSegmentGroup(ngModule, routes, child, childOutlet);
    });
  };

  ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {
    var _this = this;

    return _rxjs.of.apply(void 0, (0, _tslib.__spread)(routes)).pipe((0, _operators.map)(function (r) {
      var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);

      return expanded$.pipe((0, _operators.catchError)(function (e) {
        if (e instanceof NoMatch) {
          // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -
          // talk to Jason
          return (0, _rxjs.of)(null);
        }

        throw e;
      }));
    }), (0, _operators.concatAll)(), (0, _operators.first)(function (s) {
      return !!s;
    }), (0, _operators.catchError)(function (e, _) {
      if (e instanceof _rxjs.EmptyError || e.name === 'EmptyError') {
        if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {
          return (0, _rxjs.of)(new UrlSegmentGroup([], {}));
        }

        throw new NoMatch(segmentGroup);
      }

      throw e;
    }));
  };

  ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {
    return segments.length === 0 && !segmentGroup.children[outlet];
  };

  ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {
    if (getOutlet(route) !== outlet) {
      return noMatch(segmentGroup);
    }

    if (route.redirectTo === undefined) {
      return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);
    }

    if (allowRedirects && this.allowRedirects) {
      return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);
    }

    return noMatch(segmentGroup);
  };

  ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {
    if (route.path === '**') {
      return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);
    }

    return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);
  };

  ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {
    var _this = this;

    var newTree = this.applyRedirectCommands([], route.redirectTo, {});

    if (route.redirectTo.startsWith('/')) {
      return absoluteRedirect(newTree);
    }

    return this.lineralizeSegments(route, newTree).pipe((0, _operators.mergeMap)(function (newSegments) {
      var group = new UrlSegmentGroup(newSegments, {});
      return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);
    }));
  };

  ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {
    var _this = this;

    var _a = match(segmentGroup, route, segments),
        matched = _a.matched,
        consumedSegments = _a.consumedSegments,
        lastChild = _a.lastChild,
        positionalParamSegments = _a.positionalParamSegments;

    if (!matched) return noMatch(segmentGroup);
    var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);

    if (route.redirectTo.startsWith('/')) {
      return absoluteRedirect(newTree);
    }

    return this.lineralizeSegments(route, newTree).pipe((0, _operators.mergeMap)(function (newSegments) {
      return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);
    }));
  };

  ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {
    var _this = this;

    if (route.path === '**') {
      if (route.loadChildren) {
        return this.configLoader.load(ngModule.injector, route).pipe((0, _operators.map)(function (cfg) {
          route._loadedConfig = cfg;
          return new UrlSegmentGroup(segments, {});
        }));
      }

      return (0, _rxjs.of)(new UrlSegmentGroup(segments, {}));
    }

    var _a = match(rawSegmentGroup, route, segments),
        matched = _a.matched,
        consumedSegments = _a.consumedSegments,
        lastChild = _a.lastChild;

    if (!matched) return noMatch(rawSegmentGroup);
    var rawSlicedSegments = segments.slice(lastChild);
    var childConfig$ = this.getChildConfig(ngModule, route);
    return childConfig$.pipe((0, _operators.mergeMap)(function (routerConfig) {
      var childModule = routerConfig.module;
      var childConfig = routerConfig.routes;

      var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig),
          segmentGroup = _a.segmentGroup,
          slicedSegments = _a.slicedSegments;

      if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {
        var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);

        return expanded$_1.pipe((0, _operators.map)(function (children) {
          return new UrlSegmentGroup(consumedSegments, children);
        }));
      }

      if (childConfig.length === 0 && slicedSegments.length === 0) {
        return (0, _rxjs.of)(new UrlSegmentGroup(consumedSegments, {}));
      }

      var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);

      return expanded$.pipe((0, _operators.map)(function (cs) {
        return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);
      }));
    }));
  };

  ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {
    var _this = this;

    if (route.children) {
      // The children belong to the same module
      return (0, _rxjs.of)(new LoadedRouterConfig(route.children, ngModule));
    }

    if (route.loadChildren) {
      // lazy children belong to the loaded module
      if (route._loadedConfig !== undefined) {
        return (0, _rxjs.of)(route._loadedConfig);
      }

      return runCanLoadGuard(ngModule.injector, route).pipe((0, _operators.mergeMap)(function (shouldLoad) {
        if (shouldLoad) {
          return _this.configLoader.load(ngModule.injector, route).pipe((0, _operators.map)(function (cfg) {
            route._loadedConfig = cfg;
            return cfg;
          }));
        }

        return canLoadFails(route);
      }));
    }

    return (0, _rxjs.of)(new LoadedRouterConfig([], ngModule));
  };

  ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {
    var res = [];
    var c = urlTree.root;

    while (true) {
      res = res.concat(c.segments);

      if (c.numberOfChildren === 0) {
        return (0, _rxjs.of)(res);
      }

      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {
        return namedOutletsRedirect(route.redirectTo);
      }

      c = c.children[PRIMARY_OUTLET];
    }
  };

  ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {
    return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);
  };

  ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {
    var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);
    return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);
  };

  ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {
    var res = {};
    forEach(redirectToParams, function (v, k) {
      var copySourceValue = typeof v === 'string' && v.startsWith(':');

      if (copySourceValue) {
        var sourceName = v.substring(1);
        res[k] = actualParams[sourceName];
      } else {
        res[k] = v;
      }
    });
    return res;
  };

  ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {
    var _this = this;

    var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);
    var children = {};
    forEach(group.children, function (child, name) {
      children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);
    });
    return new UrlSegmentGroup(updatedSegments, children);
  };

  ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {
    var _this = this;

    return redirectToSegments.map(function (s) {
      return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) : _this.findOrReturn(s, actualSegments);
    });
  };

  ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {
    var pos = posParams[redirectToUrlSegment.path.substring(1)];
    if (!pos) throw new Error("Cannot redirect to '" + redirectTo + "'. Cannot find '" + redirectToUrlSegment.path + "'.");
    return pos;
  };

  ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {
    var idx = 0;

    try {
      for (var actualSegments_1 = (0, _tslib.__values)(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {
        var s = actualSegments_1_1.value;

        if (s.path === redirectToUrlSegment.path) {
          actualSegments.splice(idx);
          return s;
        }

        idx++;
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return redirectToUrlSegment;

    var e_1, _a;
  };

  return ApplyRedirects;
}();

function runCanLoadGuard(moduleInjector, route) {
  var canLoad = route.canLoad;
  if (!canLoad || canLoad.length === 0) return (0, _rxjs.of)(true);
  var obs = (0, _rxjs.from)(canLoad).pipe((0, _operators.map)(function (injectionToken) {
    var guard = moduleInjector.get(injectionToken);
    return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));
  }));
  return andObservables(obs);
}

function match(segmentGroup, route, segments) {
  if (route.path === '') {
    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {
      return {
        matched: false,
        consumedSegments: [],
        lastChild: 0,
        positionalParamSegments: {}
      };
    }

    return {
      matched: true,
      consumedSegments: [],
      lastChild: 0,
      positionalParamSegments: {}
    };
  }

  var matcher = route.matcher || defaultUrlMatcher;
  var res = matcher(segments, segmentGroup, route);

  if (!res) {
    return {
      matched: false,
      consumedSegments: [],
      lastChild: 0,
      positionalParamSegments: {}
    };
  }

  return {
    matched: true,
    consumedSegments: res.consumed,
    lastChild: res.consumed.length,
    positionalParamSegments: res.posParams
  };
}

function split(segmentGroup, consumedSegments, slicedSegments, config) {
  if (slicedSegments.length > 0 && containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {
    var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));
    return {
      segmentGroup: mergeTrivialChildren(s),
      slicedSegments: []
    };
  }

  if (slicedSegments.length === 0 && containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {
    var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));
    return {
      segmentGroup: mergeTrivialChildren(s),
      slicedSegments: slicedSegments
    };
  }

  return {
    segmentGroup: segmentGroup,
    slicedSegments: slicedSegments
  };
}

function mergeTrivialChildren(s) {
  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {
    var c = s.children[PRIMARY_OUTLET];
    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);
  }

  return s;
}

function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {
  var res = {};

  try {
    for (var routes_1 = (0, _tslib.__values)(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {
      var r = routes_1_1.value;

      if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {
        res[getOutlet(r)] = new UrlSegmentGroup([], {});
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return (0, _tslib.__assign)({}, children, res);

  var e_2, _a;
}

function createChildrenForEmptySegments(routes, primarySegmentGroup) {
  var res = {};
  res[PRIMARY_OUTLET] = primarySegmentGroup;

  try {
    for (var routes_2 = (0, _tslib.__values)(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {
      var r = routes_2_1.value;

      if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {
        res[getOutlet(r)] = new UrlSegmentGroup([], {});
      }
    }
  } catch (e_3_1) {
    e_3 = {
      error: e_3_1
    };
  } finally {
    try {
      if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);
    } finally {
      if (e_3) throw e_3.error;
    }
  }

  return res;

  var e_3, _a;
}

function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {
  return routes.some(function (r) {
    return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET;
  });
}

function containsEmptyPathRedirects(segmentGroup, segments, routes) {
  return routes.some(function (r) {
    return isEmptyPathRedirect(segmentGroup, segments, r);
  });
}

function isEmptyPathRedirect(segmentGroup, segments, r) {
  if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {
    return false;
  }

  return r.path === '' && r.redirectTo !== undefined;
}

function getOutlet(route) {
  return route.outlet || PRIMARY_OUTLET;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var Tree =
/** @class */
function () {
  function Tree(root) {
    this._root = root;
  }

  Object.defineProperty(Tree.prototype, "root", {
    get: function get() {
      return this._root.value;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * @internal
   */

  /**
     * @internal
     */

  Tree.prototype.parent =
  /**
  * @internal
  */
  function (t) {
    var p = this.pathFromRoot(t);
    return p.length > 1 ? p[p.length - 2] : null;
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  Tree.prototype.children =
  /**
  * @internal
  */
  function (t) {
    var n = findNode(t, this._root);
    return n ? n.children.map(function (t) {
      return t.value;
    }) : [];
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  Tree.prototype.firstChild =
  /**
  * @internal
  */
  function (t) {
    var n = findNode(t, this._root);
    return n && n.children.length > 0 ? n.children[0].value : null;
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  Tree.prototype.siblings =
  /**
  * @internal
  */
  function (t) {
    var p = findPath(t, this._root);
    if (p.length < 2) return [];
    var c = p[p.length - 2].children.map(function (c) {
      return c.value;
    });
    return c.filter(function (cc) {
      return cc !== t;
    });
  };
  /**
   * @internal
   */

  /**
     * @internal
     */


  Tree.prototype.pathFromRoot =
  /**
  * @internal
  */
  function (t) {
    return findPath(t, this._root).map(function (s) {
      return s.value;
    });
  };

  return Tree;
}(); // DFS for the node matching the value


exports.ɵangular_packages_router_router_k = Tree;

function findNode(value, node) {
  if (value === node.value) return node;

  try {
    for (var _a = (0, _tslib.__values)(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {
      var child = _b.value;
      var node_1 = findNode(value, child);
      if (node_1) return node_1;
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return null;

  var e_1, _c;
} // Return the path to the node with the given value using DFS


function findPath(value, node) {
  if (value === node.value) return [node];

  try {
    for (var _a = (0, _tslib.__values)(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {
      var child = _b.value;
      var path = findPath(value, child);

      if (path.length) {
        path.unshift(node);
        return path;
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return [];

  var e_2, _c;
}

var TreeNode =
/** @class */
function () {
  function TreeNode(value, children) {
    this.value = value;
    this.children = children;
  }

  TreeNode.prototype.toString = function () {
    return "TreeNode(" + this.value + ")";
  };

  return TreeNode;
}(); // Return the list of T indexed by outlet name


exports.ɵangular_packages_router_router_l = TreeNode;

function nodeChildrenAsMap(node) {
  var map$$1 = {};

  if (node) {
    node.children.forEach(function (child) {
      return map$$1[child.value.outlet] = child;
    });
  }

  return map$$1;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Represents the state of the router.
 *
 * RouterState is a tree of activated routes. Every node in this tree knows about the "consumed" URL
 * segments, the extracted parameters, and the resolved data.
 *
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const root: ActivatedRoute = state.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * See `ActivatedRoute` for more information.
 *
 *
 */


var RouterState =
/** @class */
function (_super) {
  (0, _tslib.__extends)(RouterState, _super);
  /** @internal */

  function RouterState(root,
  /** The current snapshot of the router state */
  snapshot) {
    var _this = _super.call(this, root) || this;

    _this.snapshot = snapshot;
    setRouterState(_this, root);
    return _this;
  }

  RouterState.prototype.toString = function () {
    return this.snapshot.toString();
  };

  return RouterState;
}(Tree);

exports.RouterState = RouterState;

function createEmptyState(urlTree, rootComponent) {
  var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);
  var emptyUrl = new _rxjs.BehaviorSubject([new UrlSegment('', {})]);
  var emptyParams = new _rxjs.BehaviorSubject({});
  var emptyData = new _rxjs.BehaviorSubject({});
  var emptyQueryParams = new _rxjs.BehaviorSubject({});
  var fragment = new _rxjs.BehaviorSubject('');
  var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);
  activated.snapshot = snapshot.root;
  return new RouterState(new TreeNode(activated, []), snapshot);
}

function createEmptyStateSnapshot(urlTree, rootComponent) {
  var emptyParams = {};
  var emptyData = {};
  var emptyQueryParams = {};
  var fragment = '';
  var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});
  return new RouterStateSnapshot('', new TreeNode(activated, []));
}
/**
 * @description
 *
 * Contains the information about a route associated with a component loaded in an
 * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.
 *
 * ```
 * @Component({...})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: Observable<string> = route.params.map(p => p.id);
 *     const url: Observable<string> = route.url.map(segments => segments.join(''));
 *     // route.data includes both `data` and `resolve`
 *     const user = route.data.map(d => d.user);
 *   }
 * }
 * ```
 *
 *
 */


var ActivatedRoute =
/** @class */
function () {
  /** @internal */
  function ActivatedRoute(
  /** An observable of the URL segments matched by this route */
  url,
  /** An observable of the matrix parameters scoped to this route */
  params,
  /** An observable of the query parameters shared by all the routes */
  queryParams,
  /** An observable of the URL fragment shared by all the routes */
  fragment,
  /** An observable of the static and resolved data of this route. */
  data,
  /** The outlet name of the route. It's a constant */
  outlet,
  /** The component of the route. It's a constant */
  // TODO(vsavkin): remove |string
  component, futureSnapshot) {
    this.url = url;
    this.params = params;
    this.queryParams = queryParams;
    this.fragment = fragment;
    this.data = data;
    this.outlet = outlet;
    this.component = component;
    this._futureSnapshot = futureSnapshot;
  }

  Object.defineProperty(ActivatedRoute.prototype, "routeConfig", {
    /** The configuration used to match this route */
    get:
    /** The configuration used to match this route */
    function get() {
      return this._futureSnapshot.routeConfig;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "root", {
    /** The root of the router state */
    get:
    /** The root of the router state */
    function get() {
      return this._routerState.root;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "parent", {
    /** The parent of this route in the router state tree */
    get:
    /** The parent of this route in the router state tree */
    function get() {
      return this._routerState.parent(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "firstChild", {
    /** The first child of this route in the router state tree */
    get:
    /** The first child of this route in the router state tree */
    function get() {
      return this._routerState.firstChild(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "children", {
    /** The children of this route in the router state tree */
    get:
    /** The children of this route in the router state tree */
    function get() {
      return this._routerState.children(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "pathFromRoot", {
    /** The path from the root of the router state tree to this route */
    get:
    /** The path from the root of the router state tree to this route */
    function get() {
      return this._routerState.pathFromRoot(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "paramMap", {
    get: function get() {
      if (!this._paramMap) {
        this._paramMap = this.params.pipe((0, _operators.map)(function (p) {
          return convertToParamMap(p);
        }));
      }

      return this._paramMap;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRoute.prototype, "queryParamMap", {
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = this.queryParams.pipe((0, _operators.map)(function (p) {
          return convertToParamMap(p);
        }));
      }

      return this._queryParamMap;
    },
    enumerable: true,
    configurable: true
  });

  ActivatedRoute.prototype.toString = function () {
    return this.snapshot ? this.snapshot.toString() : "Future(" + this._futureSnapshot + ")";
  };

  return ActivatedRoute;
}();
/**
 * Returns the inherited params, data, and resolve for a given route.
 * By default, this only inherits values up to the nearest path-less or component-less route.
 * @internal
 */


exports.ActivatedRoute = ActivatedRoute;

function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {
  if (paramsInheritanceStrategy === void 0) {
    paramsInheritanceStrategy = 'emptyOnly';
  }

  var pathFromRoot = route.pathFromRoot;
  var inheritingStartingFrom = 0;

  if (paramsInheritanceStrategy !== 'always') {
    inheritingStartingFrom = pathFromRoot.length - 1;

    while (inheritingStartingFrom >= 1) {
      var current = pathFromRoot[inheritingStartingFrom];
      var parent_1 = pathFromRoot[inheritingStartingFrom - 1]; // current route is an empty path => inherits its parent's params and data

      if (current.routeConfig && current.routeConfig.path === '') {
        inheritingStartingFrom--; // parent is componentless => current route should inherit its params and data
      } else if (!parent_1.component) {
        inheritingStartingFrom--;
      } else {
        break;
      }
    }
  }

  return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));
}
/** @internal */


function flattenInherited(pathFromRoot) {
  return pathFromRoot.reduce(function (res, curr) {
    var params = (0, _tslib.__assign)({}, res.params, curr.params);
    var data = (0, _tslib.__assign)({}, res.data, curr.data);
    var resolve = (0, _tslib.__assign)({}, res.resolve, curr._resolvedData);
    return {
      params: params,
      data: data,
      resolve: resolve
    };
  }, {
    params: {},
    data: {},
    resolve: {}
  });
}
/**
 * @description
 *
 * Contains the information about a route associated with a component loaded in an
 * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to
 * traverse the router state tree.
 *
 * ```
 * @Component({templateUrl:'./my-component.html'})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: string = route.snapshot.params.id;
 *     const url: string = route.snapshot.url.join('');
 *     const user = route.snapshot.data.user;
 *   }
 * }
 * ```
 *
 *
 */


var ActivatedRouteSnapshot =
/** @class */
function () {
  /** @internal */
  function ActivatedRouteSnapshot(
  /** The URL segments matched by this route */
  url,
  /** The matrix parameters scoped to this route */
  params,
  /** The query parameters shared by all the routes */
  queryParams,
  /** The URL fragment shared by all the routes */
  fragment,
  /** The static and resolved data of this route */
  data,
  /** The outlet name of the route */
  outlet,
  /** The component of the route */
  component, routeConfig, urlSegment, lastPathIndex, resolve) {
    this.url = url;
    this.params = params;
    this.queryParams = queryParams;
    this.fragment = fragment;
    this.data = data;
    this.outlet = outlet;
    this.component = component;
    this.routeConfig = routeConfig;
    this._urlSegment = urlSegment;
    this._lastPathIndex = lastPathIndex;
    this._resolve = resolve;
  }

  Object.defineProperty(ActivatedRouteSnapshot.prototype, "root", {
    /** The root of the router state */
    get:
    /** The root of the router state */
    function get() {
      return this._routerState.root;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "parent", {
    /** The parent of this route in the router state tree */
    get:
    /** The parent of this route in the router state tree */
    function get() {
      return this._routerState.parent(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "firstChild", {
    /** The first child of this route in the router state tree */
    get:
    /** The first child of this route in the router state tree */
    function get() {
      return this._routerState.firstChild(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "children", {
    /** The children of this route in the router state tree */
    get:
    /** The children of this route in the router state tree */
    function get() {
      return this._routerState.children(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "pathFromRoot", {
    /** The path from the root of the router state tree to this route */
    get:
    /** The path from the root of the router state tree to this route */
    function get() {
      return this._routerState.pathFromRoot(this);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "paramMap", {
    get: function get() {
      if (!this._paramMap) {
        this._paramMap = convertToParamMap(this.params);
      }

      return this._paramMap;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(ActivatedRouteSnapshot.prototype, "queryParamMap", {
    get: function get() {
      if (!this._queryParamMap) {
        this._queryParamMap = convertToParamMap(this.queryParams);
      }

      return this._queryParamMap;
    },
    enumerable: true,
    configurable: true
  });

  ActivatedRouteSnapshot.prototype.toString = function () {
    var url = this.url.map(function (segment) {
      return segment.toString();
    }).join('/');
    var matched = this.routeConfig ? this.routeConfig.path : '';
    return "Route(url:'" + url + "', path:'" + matched + "')";
  };

  return ActivatedRouteSnapshot;
}();
/**
 * @description
 *
 * Represents the state of the router at a moment in time.
 *
 * This is a tree of activated route snapshots. Every node in this tree knows about
 * the "consumed" URL segments, the extracted parameters, and the resolved data.
 *
 * ### Example
 *
 * ```
 * @Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const snapshot: RouterStateSnapshot = state.snapshot;
 *     const root: ActivatedRouteSnapshot = snapshot.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 *
 */


exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;

var RouterStateSnapshot =
/** @class */
function (_super) {
  (0, _tslib.__extends)(RouterStateSnapshot, _super);
  /** @internal */

  function RouterStateSnapshot(
  /** The url from which this snapshot was created */
  url, root) {
    var _this = _super.call(this, root) || this;

    _this.url = url;
    setRouterState(_this, root);
    return _this;
  }

  RouterStateSnapshot.prototype.toString = function () {
    return serializeNode(this._root);
  };

  return RouterStateSnapshot;
}(Tree);

exports.RouterStateSnapshot = RouterStateSnapshot;

function setRouterState(state, node) {
  node.value._routerState = state;
  node.children.forEach(function (c) {
    return setRouterState(state, c);
  });
}

function serializeNode(node) {
  var c = node.children.length > 0 ? " { " + node.children.map(serializeNode).join(', ') + " } " : '';
  return "" + node.value + c;
}
/**
 * The expectation is that the activate route is created with the right set of parameters.
 * So we push new values into the observables only when they are not the initial values.
 * And we detect that by checking if the snapshot field is set.
 */


function advanceActivatedRoute(route) {
  if (route.snapshot) {
    var currentSnapshot = route.snapshot;
    var nextSnapshot = route._futureSnapshot;
    route.snapshot = nextSnapshot;

    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {
      route.queryParams.next(nextSnapshot.queryParams);
    }

    if (currentSnapshot.fragment !== nextSnapshot.fragment) {
      route.fragment.next(nextSnapshot.fragment);
    }

    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {
      route.params.next(nextSnapshot.params);
    }

    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {
      route.url.next(nextSnapshot.url);
    }

    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {
      route.data.next(nextSnapshot.data);
    }
  } else {
    route.snapshot = route._futureSnapshot; // this is for resolved data
    // this is for resolved data

    route.data.next(route._futureSnapshot.data);
  }
}

function equalParamsAndUrlSegments(a, b) {
  var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);
  var parentsMismatch = !a.parent !== !b.parent;
  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createRouterState(routeReuseStrategy, curr, prevState) {
  var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);
  return new RouterState(root, curr);
}

function createNode(routeReuseStrategy, curr, prevState) {
  // reuse an activated route that is currently displayed on the screen
  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {
    var value = prevState.value;
    value._futureSnapshot = curr.value;
    var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);
    return new TreeNode(value, children); // retrieve an activated route that is used to be displayed, but is not currently displayed
  } else {
    var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);

    if (detachedRouteHandle) {
      var tree = detachedRouteHandle.route;
      setFutureSnapshotsOfActivatedRoutes(curr, tree);
      return tree;
    } else {
      var value = createActivatedRoute(curr.value);
      var children = curr.children.map(function (c) {
        return createNode(routeReuseStrategy, c);
      });
      return new TreeNode(value, children);
    }
  }
}

function setFutureSnapshotsOfActivatedRoutes(curr, result) {
  if (curr.value.routeConfig !== result.value.routeConfig) {
    throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');
  }

  if (curr.children.length !== result.children.length) {
    throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');
  }

  result.value._futureSnapshot = curr.value;

  for (var i = 0; i < curr.children.length; ++i) {
    setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);
  }
}

function createOrReuseChildren(routeReuseStrategy, curr, prevState) {
  return curr.children.map(function (child) {
    try {
      for (var _a = (0, _tslib.__values)(prevState.children), _b = _a.next(); !_b.done; _b = _a.next()) {
        var p = _b.value;

        if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {
          return createNode(routeReuseStrategy, child, p);
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return createNode(routeReuseStrategy, child);

    var e_1, _c;
  });
}

function createActivatedRoute(c) {
  return new ActivatedRoute(new _rxjs.BehaviorSubject(c.url), new _rxjs.BehaviorSubject(c.params), new _rxjs.BehaviorSubject(c.queryParams), new _rxjs.BehaviorSubject(c.fragment), new _rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function createUrlTree(route, urlTree, commands, queryParams, fragment) {
  if (commands.length === 0) {
    return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);
  }

  var nav = computeNavigation(commands);

  if (nav.toRoot()) {
    return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);
  }

  var startingPosition = findStartingPosition(nav, urlTree, route);
  var segmentGroup = startingPosition.processChildren ? updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) : updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);
  return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);
}

function isMatrixParams(command) {
  return _typeof(command) === 'object' && command != null && !command.outlets && !command.segmentPath;
}

function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {
  var qp = {};

  if (queryParams) {
    forEach(queryParams, function (value, name) {
      qp[name] = Array.isArray(value) ? value.map(function (v) {
        return "" + v;
      }) : "" + value;
    });
  }

  if (urlTree.root === oldSegmentGroup) {
    return new UrlTree(newSegmentGroup, qp, fragment);
  }

  return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);
}

function replaceSegment(current, oldSegment, newSegment) {
  var children = {};
  forEach(current.children, function (c, outletName) {
    if (c === oldSegment) {
      children[outletName] = newSegment;
    } else {
      children[outletName] = replaceSegment(c, oldSegment, newSegment);
    }
  });
  return new UrlSegmentGroup(current.segments, children);
}

var Navigation =
/** @class */
function () {
  function Navigation(isAbsolute, numberOfDoubleDots, commands) {
    this.isAbsolute = isAbsolute;
    this.numberOfDoubleDots = numberOfDoubleDots;
    this.commands = commands;

    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {
      throw new Error('Root segment cannot have matrix parameters');
    }

    var cmdWithOutlet = commands.find(function (c) {
      return _typeof(c) === 'object' && c != null && c.outlets;
    });

    if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {
      throw new Error('{outlets:{}} has to be the last command');
    }
  }

  Navigation.prototype.toRoot = function () {
    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';
  };

  return Navigation;
}();
/** Transforms commands to a normalized `Navigation` */


function computeNavigation(commands) {
  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {
    return new Navigation(true, 0, commands);
  }

  var numberOfDoubleDots = 0;
  var isAbsolute = false;
  var res = commands.reduce(function (res, cmd, cmdIdx) {
    if (_typeof(cmd) === 'object' && cmd != null) {
      if (cmd.outlets) {
        var outlets_1 = {};
        forEach(cmd.outlets, function (commands, name) {
          outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;
        });
        return (0, _tslib.__spread)(res, [{
          outlets: outlets_1
        }]);
      }

      if (cmd.segmentPath) {
        return (0, _tslib.__spread)(res, [cmd.segmentPath]);
      }
    }

    if (!(typeof cmd === 'string')) {
      return (0, _tslib.__spread)(res, [cmd]);
    }

    if (cmdIdx === 0) {
      cmd.split('/').forEach(function (urlPart, partIndex) {
        if (partIndex == 0 && urlPart === '.') {// skip './a'
        } else if (partIndex == 0 && urlPart === '') {
          //  '/a'
          isAbsolute = true;
        } else if (urlPart === '..') {
          //  '../a'
          numberOfDoubleDots++;
        } else if (urlPart != '') {
          res.push(urlPart);
        }
      });
      return res;
    }

    return (0, _tslib.__spread)(res, [cmd]);
  }, []);
  return new Navigation(isAbsolute, numberOfDoubleDots, res);
}

var Position =
/** @class */
function () {
  function Position(segmentGroup, processChildren, index) {
    this.segmentGroup = segmentGroup;
    this.processChildren = processChildren;
    this.index = index;
  }

  return Position;
}();

function findStartingPosition(nav, tree, route) {
  if (nav.isAbsolute) {
    return new Position(tree.root, true, 0);
  }

  if (route.snapshot._lastPathIndex === -1) {
    return new Position(route.snapshot._urlSegment, true, 0);
  }

  var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;
  var index = route.snapshot._lastPathIndex + modifier;
  return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);
}

function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {
  var g = group;
  var ci = index;
  var dd = numberOfDoubleDots;

  while (dd > ci) {
    dd -= ci;
    g = g.parent;

    if (!g) {
      throw new Error('Invalid number of \'../\'');
    }

    ci = g.segments.length;
  }

  return new Position(g, false, ci - dd);
}

function getPath(command) {
  if (_typeof(command) === 'object' && command != null && command.outlets) {
    return command.outlets[PRIMARY_OUTLET];
  }

  return "" + command;
}

function getOutlets(commands) {
  if (!(_typeof(commands[0]) === 'object')) return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;
  if (commands[0].outlets === undefined) return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;
  return commands[0].outlets;

  var _a, _b;
}

function updateSegmentGroup(segmentGroup, startIndex, commands) {
  if (!segmentGroup) {
    segmentGroup = new UrlSegmentGroup([], {});
  }

  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);
  }

  var m = prefixedWith(segmentGroup, startIndex, commands);
  var slicedCommands = commands.slice(m.commandIndex);

  if (m.match && m.pathIndex < segmentGroup.segments.length) {
    var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});
    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);
    return updateSegmentGroupChildren(g, 0, slicedCommands);
  } else if (m.match && slicedCommands.length === 0) {
    return new UrlSegmentGroup(segmentGroup.segments, {});
  } else if (m.match && !segmentGroup.hasChildren()) {
    return createNewSegmentGroup(segmentGroup, startIndex, commands);
  } else if (m.match) {
    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);
  } else {
    return createNewSegmentGroup(segmentGroup, startIndex, commands);
  }
}

function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {
  if (commands.length === 0) {
    return new UrlSegmentGroup(segmentGroup.segments, {});
  } else {
    var outlets_2 = getOutlets(commands);
    var children_1 = {};
    forEach(outlets_2, function (commands, outlet) {
      if (commands !== null) {
        children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);
      }
    });
    forEach(segmentGroup.children, function (child, childOutlet) {
      if (outlets_2[childOutlet] === undefined) {
        children_1[childOutlet] = child;
      }
    });
    return new UrlSegmentGroup(segmentGroup.segments, children_1);
  }
}

function prefixedWith(segmentGroup, startIndex, commands) {
  var currentCommandIndex = 0;
  var currentPathIndex = startIndex;
  var noMatch = {
    match: false,
    pathIndex: 0,
    commandIndex: 0
  };

  while (currentPathIndex < segmentGroup.segments.length) {
    if (currentCommandIndex >= commands.length) return noMatch;
    var path = segmentGroup.segments[currentPathIndex];
    var curr = getPath(commands[currentCommandIndex]);
    var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;
    if (currentPathIndex > 0 && curr === undefined) break;

    if (curr && next && _typeof(next) === 'object' && next.outlets === undefined) {
      if (!compare(curr, next, path)) return noMatch;
      currentCommandIndex += 2;
    } else {
      if (!compare(curr, {}, path)) return noMatch;
      currentCommandIndex++;
    }

    currentPathIndex++;
  }

  return {
    match: true,
    pathIndex: currentPathIndex,
    commandIndex: currentCommandIndex
  };
}

function createNewSegmentGroup(segmentGroup, startIndex, commands) {
  var paths = segmentGroup.segments.slice(0, startIndex);
  var i = 0;

  while (i < commands.length) {
    if (_typeof(commands[i]) === 'object' && commands[i].outlets !== undefined) {
      var children = createNewSegmentChildren(commands[i].outlets);
      return new UrlSegmentGroup(paths, children);
    } // if we start with an object literal, we need to reuse the path part from the segment


    if (i === 0 && isMatrixParams(commands[0])) {
      var p = segmentGroup.segments[startIndex];
      paths.push(new UrlSegment(p.path, commands[0]));
      i++;
      continue;
    }

    var curr = getPath(commands[i]);
    var next = i < commands.length - 1 ? commands[i + 1] : null;

    if (curr && next && isMatrixParams(next)) {
      paths.push(new UrlSegment(curr, stringify(next)));
      i += 2;
    } else {
      paths.push(new UrlSegment(curr, {}));
      i++;
    }
  }

  return new UrlSegmentGroup(paths, {});
}

function createNewSegmentChildren(outlets) {
  var children = {};
  forEach(outlets, function (commands, outlet) {
    if (commands !== null) {
      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);
    }
  });
  return children;
}

function stringify(params) {
  var res = {};
  forEach(params, function (v, k) {
    return res[k] = "" + v;
  });
  return res;
}

function compare(path, params, segment) {
  return path == segment.path && shallowEqual(params, segment.parameters);
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CanActivate =
/** @class */
function () {
  function CanActivate(path) {
    this.path = path;
    this.route = this.path[this.path.length - 1];
  }

  return CanActivate;
}();

var CanDeactivate =
/** @class */
function () {
  function CanDeactivate(component, route) {
    this.component = component;
    this.route = route;
  }

  return CanDeactivate;
}();
/**
 * This class bundles the actions involved in preactivation of a route.
 */


var PreActivation =
/** @class */
function () {
  function PreActivation(future, curr, moduleInjector, forwardEvent) {
    this.future = future;
    this.curr = curr;
    this.moduleInjector = moduleInjector;
    this.forwardEvent = forwardEvent;
    this.canActivateChecks = [];
    this.canDeactivateChecks = [];
  }

  PreActivation.prototype.initialize = function (parentContexts) {
    var futureRoot = this.future._root;
    var currRoot = this.curr ? this.curr._root : null;
    this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);
  };

  PreActivation.prototype.checkGuards = function () {
    var _this = this;

    if (!this.isDeactivating() && !this.isActivating()) {
      return (0, _rxjs.of)(true);
    }

    var canDeactivate$ = this.runCanDeactivateChecks();
    return canDeactivate$.pipe((0, _operators.mergeMap)(function (canDeactivate) {
      return canDeactivate ? _this.runCanActivateChecks() : (0, _rxjs.of)(false);
    }));
  };

  PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {
    var _this = this;

    if (!this.isActivating()) return (0, _rxjs.of)(null);
    return (0, _rxjs.from)(this.canActivateChecks).pipe((0, _operators.concatMap)(function (check) {
      return _this.runResolve(check.route, paramsInheritanceStrategy);
    }), (0, _operators.reduce)(function (_, __) {
      return _;
    }));
  };

  PreActivation.prototype.isDeactivating = function () {
    return this.canDeactivateChecks.length !== 0;
  };

  PreActivation.prototype.isActivating = function () {
    return this.canActivateChecks.length !== 0;
  };
  /**
   * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in
   * proper state to run `checkGuards()` method.
   */

  /**
     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in
     * proper state to run `checkGuards()` method.
     */


  PreActivation.prototype.setupChildRouteGuards =
  /**
  * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in
  * proper state to run `checkGuards()` method.
  */
  function (futureNode, currNode, contexts, futurePath) {
    var _this = this;

    var prevChildren = nodeChildrenAsMap(currNode); // Process the children of the future route

    futureNode.children.forEach(function (c) {
      _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));

      delete prevChildren[c.value.outlet];
    }); // Process any children left from the current route (not active for the future route)

    forEach(prevChildren, function (v, k) {
      return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));
    });
  };
  /**
   * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in
   * proper state to run `checkGuards()` method.
   */

  /**
     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in
     * proper state to run `checkGuards()` method.
     */


  PreActivation.prototype.setupRouteGuards =
  /**
  * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in
  * proper state to run `checkGuards()` method.
  */
  function (futureNode, currNode, parentContexts, futurePath) {
    var future = futureNode.value;
    var curr = currNode ? currNode.value : null;
    var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null; // reusing the node

    if (curr && future.routeConfig === curr.routeConfig) {
      var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);

      if (shouldRunGuardsAndResolvers) {
        this.canActivateChecks.push(new CanActivate(futurePath));
      } else {
        // we need to set the data
        future.data = curr.data;
        future._resolvedData = curr._resolvedData;
      } // If we have a component, we need to go through an outlet.


      if (future.component) {
        this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath); // if we have a componentless route, we recurse but keep the same outlet map.
      } else {
        this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);
      }

      if (shouldRunGuardsAndResolvers) {
        var outlet = context.outlet;
        this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));
      }
    } else {
      if (curr) {
        this.deactivateRouteAndItsChildren(currNode, context);
      }

      this.canActivateChecks.push(new CanActivate(futurePath)); // If we have a component, we need to go through an outlet.

      if (future.component) {
        this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath); // if we have a componentless route, we recurse but keep the same outlet map.
      } else {
        this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);
      }
    }
  };

  PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {
    switch (mode) {
      case 'always':
        return true;

      case 'paramsOrQueryParamsChange':
        return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);

      case 'paramsChange':
      default:
        return !equalParamsAndUrlSegments(curr, future);
    }
  };

  PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {
    var _this = this;

    var children = nodeChildrenAsMap(route);
    var r = route.value;
    forEach(children, function (node, childName) {
      if (!r.component) {
        _this.deactivateRouteAndItsChildren(node, context);
      } else if (context) {
        _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));
      } else {
        _this.deactivateRouteAndItsChildren(node, null);
      }
    });

    if (!r.component) {
      this.canDeactivateChecks.push(new CanDeactivate(null, r));
    } else if (context && context.outlet && context.outlet.isActivated) {
      this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));
    } else {
      this.canDeactivateChecks.push(new CanDeactivate(null, r));
    }
  };

  PreActivation.prototype.runCanDeactivateChecks = function () {
    var _this = this;

    return (0, _rxjs.from)(this.canDeactivateChecks).pipe((0, _operators.mergeMap)(function (check) {
      return _this.runCanDeactivate(check.component, check.route);
    }), (0, _operators.every)(function (result) {
      return result === true;
    }));
  };

  PreActivation.prototype.runCanActivateChecks = function () {
    var _this = this;

    return (0, _rxjs.from)(this.canActivateChecks).pipe((0, _operators.concatMap)(function (check) {
      return andObservables((0, _rxjs.from)([_this.fireChildActivationStart(check.route.parent), _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path), _this.runCanActivate(check.route)]));
    }), (0, _operators.every)(function (result) {
      return result === true;
    })); // this.fireChildActivationStart(check.path),
  };
  /**
   * This should fire off `ActivationStart` events for each route being activated at this
   * level.
   * In other words, if you're activating `a` and `b` below, `path` will contain the
   * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always
   * return
   * `true` so checks continue to run.
   */

  /**
     * This should fire off `ActivationStart` events for each route being activated at this
     * level.
     * In other words, if you're activating `a` and `b` below, `path` will contain the
     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always
     * return
     * `true` so checks continue to run.
     */


  PreActivation.prototype.fireActivationStart =
  /**
  * This should fire off `ActivationStart` events for each route being activated at this
  * level.
  * In other words, if you're activating `a` and `b` below, `path` will contain the
  * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always
  * return
  * `true` so checks continue to run.
  */
  function (snapshot) {
    if (snapshot !== null && this.forwardEvent) {
      this.forwardEvent(new ActivationStart(snapshot));
    }

    return (0, _rxjs.of)(true);
  };
  /**
   * This should fire off `ChildActivationStart` events for each route being activated at this
   * level.
   * In other words, if you're activating `a` and `b` below, `path` will contain the
   * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always
   * return
   * `true` so checks continue to run.
   */

  /**
     * This should fire off `ChildActivationStart` events for each route being activated at this
     * level.
     * In other words, if you're activating `a` and `b` below, `path` will contain the
     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always
     * return
     * `true` so checks continue to run.
     */


  PreActivation.prototype.fireChildActivationStart =
  /**
  * This should fire off `ChildActivationStart` events for each route being activated at this
  * level.
  * In other words, if you're activating `a` and `b` below, `path` will contain the
  * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always
  * return
  * `true` so checks continue to run.
  */
  function (snapshot) {
    if (snapshot !== null && this.forwardEvent) {
      this.forwardEvent(new ChildActivationStart(snapshot));
    }

    return (0, _rxjs.of)(true);
  };

  PreActivation.prototype.runCanActivate = function (future) {
    var _this = this;

    var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;
    if (!canActivate || canActivate.length === 0) return (0, _rxjs.of)(true);
    var obs = (0, _rxjs.from)(canActivate).pipe((0, _operators.map)(function (c) {
      var guard = _this.getToken(c, future);

      var observable;

      if (guard.canActivate) {
        observable = wrapIntoObservable(guard.canActivate(future, _this.future));
      } else {
        observable = wrapIntoObservable(guard(future, _this.future));
      }

      return observable.pipe((0, _operators.first)());
    }));
    return andObservables(obs);
  };

  PreActivation.prototype.runCanActivateChild = function (path) {
    var _this = this;

    var future = path[path.length - 1];
    var canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(function (p) {
      return _this.extractCanActivateChild(p);
    }).filter(function (_) {
      return _ !== null;
    });
    return andObservables((0, _rxjs.from)(canActivateChildGuards).pipe((0, _operators.map)(function (d) {
      var obs = (0, _rxjs.from)(d.guards).pipe((0, _operators.map)(function (c) {
        var guard = _this.getToken(c, d.node);

        var observable;

        if (guard.canActivateChild) {
          observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));
        } else {
          observable = wrapIntoObservable(guard(future, _this.future));
        }

        return observable.pipe((0, _operators.first)());
      }));
      return andObservables(obs);
    })));
  };

  PreActivation.prototype.extractCanActivateChild = function (p) {
    var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;
    if (!canActivateChild || canActivateChild.length === 0) return null;
    return {
      node: p,
      guards: canActivateChild
    };
  };

  PreActivation.prototype.runCanDeactivate = function (component, curr) {
    var _this = this;

    var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;
    if (!canDeactivate || canDeactivate.length === 0) return (0, _rxjs.of)(true);
    var canDeactivate$ = (0, _rxjs.from)(canDeactivate).pipe((0, _operators.mergeMap)(function (c) {
      var guard = _this.getToken(c, curr);

      var observable;

      if (guard.canDeactivate) {
        observable = wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));
      } else {
        observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));
      }

      return observable.pipe((0, _operators.first)());
    }));
    return canDeactivate$.pipe((0, _operators.every)(function (result) {
      return result === true;
    }));
  };

  PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {
    var resolve = future._resolve;
    return this.resolveNode(resolve, future).pipe((0, _operators.map)(function (resolvedData) {
      future._resolvedData = resolvedData;
      future.data = (0, _tslib.__assign)({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);
      return null;
    }));
  };

  PreActivation.prototype.resolveNode = function (resolve, future) {
    var _this = this;

    var keys = Object.keys(resolve);

    if (keys.length === 0) {
      return (0, _rxjs.of)({});
    }

    if (keys.length === 1) {
      var key_1 = keys[0];
      return this.getResolver(resolve[key_1], future).pipe((0, _operators.map)(function (value) {
        return _a = {}, _a[key_1] = value, _a;

        var _a;
      }));
    }

    var data = {};
    var runningResolvers$ = (0, _rxjs.from)(keys).pipe((0, _operators.mergeMap)(function (key) {
      return _this.getResolver(resolve[key], future).pipe((0, _operators.map)(function (value) {
        data[key] = value;
        return value;
      }));
    }));
    return runningResolvers$.pipe((0, _operators.last)(), (0, _operators.map)(function () {
      return data;
    }));
  };

  PreActivation.prototype.getResolver = function (injectionToken, future) {
    var resolver = this.getToken(injectionToken, future);
    return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) : wrapIntoObservable(resolver(future, this.future));
  };

  PreActivation.prototype.getToken = function (token, snapshot) {
    var config = closestLoadedConfig(snapshot);
    var injector = config ? config.module.injector : this.moduleInjector;
    return injector.get(token);
  };

  return PreActivation;
}();

function closestLoadedConfig(snapshot) {
  if (!snapshot) return null;

  for (var s = snapshot.parent; s; s = s.parent) {
    var route = s.routeConfig;
    if (route && route._loadedConfig) return route._loadedConfig;
  }

  return null;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var NoMatch$1 =
/** @class */
function () {
  function NoMatch() {}

  return NoMatch;
}();

function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {
  if (paramsInheritanceStrategy === void 0) {
    paramsInheritanceStrategy = 'emptyOnly';
  }

  return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy).recognize();
}

var Recognizer =
/** @class */
function () {
  function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {
    this.rootComponentType = rootComponentType;
    this.config = config;
    this.urlTree = urlTree;
    this.url = url;
    this.paramsInheritanceStrategy = paramsInheritanceStrategy;
  }

  Recognizer.prototype.recognize = function () {
    try {
      var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;
      var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);
      var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});
      var rootNode = new TreeNode(root, children);
      var routeState = new RouterStateSnapshot(this.url, rootNode);
      this.inheritParamsAndData(routeState._root);
      return (0, _rxjs.of)(routeState);
    } catch (e) {
      return new _rxjs.Observable(function (obs) {
        return obs.error(e);
      });
    }
  };

  Recognizer.prototype.inheritParamsAndData = function (routeNode) {
    var _this = this;

    var route = routeNode.value;
    var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);
    route.params = Object.freeze(i.params);
    route.data = Object.freeze(i.data);
    routeNode.children.forEach(function (n) {
      return _this.inheritParamsAndData(n);
    });
  };

  Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {
    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {
      return this.processChildren(config, segmentGroup);
    }

    return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);
  };

  Recognizer.prototype.processChildren = function (config, segmentGroup) {
    var _this = this;

    var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) {
      return _this.processSegmentGroup(config, child, childOutlet);
    });
    checkOutletNameUniqueness(children);
    sortActivatedRouteSnapshots(children);
    return children;
  };

  Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {
    try {
      for (var config_1 = (0, _tslib.__values)(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {
        var r = config_1_1.value;

        try {
          return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);
        } catch (e) {
          if (!(e instanceof NoMatch$1)) throw e;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {
      return [];
    }

    throw new NoMatch$1();

    var e_1, _a;
  };

  Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {
    return segments.length === 0 && !segmentGroup.children[outlet];
  };

  Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {
    if (route.redirectTo) throw new NoMatch$1();
    if ((route.outlet || PRIMARY_OUTLET) !== outlet) throw new NoMatch$1();
    var snapshot;
    var consumedSegments = [];
    var rawSlicedSegments = [];

    if (route.path === '**') {
      var params = segments.length > 0 ? last$1(segments).parameters : {};
      snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));
    } else {
      var result = match$1(rawSegment, route, segments);
      consumedSegments = result.consumedSegments;
      rawSlicedSegments = segments.slice(result.lastChild);
      snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));
    }

    var childConfig = getChildConfig(route);

    var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig),
        segmentGroup = _a.segmentGroup,
        slicedSegments = _a.slicedSegments;

    if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {
      var children_1 = this.processChildren(childConfig, segmentGroup);
      return [new TreeNode(snapshot, children_1)];
    }

    if (childConfig.length === 0 && slicedSegments.length === 0) {
      return [new TreeNode(snapshot, [])];
    }

    var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);
    return [new TreeNode(snapshot, children)];
  };

  return Recognizer;
}();

function sortActivatedRouteSnapshots(nodes) {
  nodes.sort(function (a, b) {
    if (a.value.outlet === PRIMARY_OUTLET) return -1;
    if (b.value.outlet === PRIMARY_OUTLET) return 1;
    return a.value.outlet.localeCompare(b.value.outlet);
  });
}

function getChildConfig(route) {
  if (route.children) {
    return route.children;
  }

  if (route.loadChildren) {
    return route._loadedConfig.routes;
  }

  return [];
}

function match$1(segmentGroup, route, segments) {
  if (route.path === '') {
    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {
      throw new NoMatch$1();
    }

    return {
      consumedSegments: [],
      lastChild: 0,
      parameters: {}
    };
  }

  var matcher = route.matcher || defaultUrlMatcher;
  var res = matcher(segments, segmentGroup, route);
  if (!res) throw new NoMatch$1();
  var posParams = {};
  forEach(res.posParams, function (v, k) {
    posParams[k] = v.path;
  });
  var parameters = res.consumed.length > 0 ? (0, _tslib.__assign)({}, posParams, res.consumed[res.consumed.length - 1].parameters) : posParams;
  return {
    consumedSegments: res.consumed,
    lastChild: res.consumed.length,
    parameters: parameters
  };
}

function checkOutletNameUniqueness(nodes) {
  var names = {};
  nodes.forEach(function (n) {
    var routeWithSameOutletName = names[n.value.outlet];

    if (routeWithSameOutletName) {
      var p = routeWithSameOutletName.url.map(function (s) {
        return s.toString();
      }).join('/');
      var c = n.value.url.map(function (s) {
        return s.toString();
      }).join('/');
      throw new Error("Two segments cannot have the same outlet name: '" + p + "' and '" + c + "'.");
    }

    names[n.value.outlet] = n.value;
  });
}

function getSourceSegmentGroup(segmentGroup) {
  var s = segmentGroup;

  while (s._sourceSegment) {
    s = s._sourceSegment;
  }

  return s;
}

function getPathIndexShift(segmentGroup) {
  var s = segmentGroup;
  var res = s._segmentIndexShift ? s._segmentIndexShift : 0;

  while (s._sourceSegment) {
    s = s._sourceSegment;
    res += s._segmentIndexShift ? s._segmentIndexShift : 0;
  }

  return res - 1;
}

function split$1(segmentGroup, consumedSegments, slicedSegments, config) {
  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {
    var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));
    s_1._sourceSegment = segmentGroup;
    s_1._segmentIndexShift = consumedSegments.length;
    return {
      segmentGroup: s_1,
      slicedSegments: []
    };
  }

  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {
    var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));
    s_2._sourceSegment = segmentGroup;
    s_2._segmentIndexShift = consumedSegments.length;
    return {
      segmentGroup: s_2,
      slicedSegments: slicedSegments
    };
  }

  var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);
  s._sourceSegment = segmentGroup;
  s._segmentIndexShift = consumedSegments.length;
  return {
    segmentGroup: s,
    slicedSegments: slicedSegments
  };
}

function addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {
  var res = {};

  try {
    for (var routes_1 = (0, _tslib.__values)(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {
      var r = routes_1_1.value;

      if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {
        var s = new UrlSegmentGroup([], {});
        s._sourceSegment = segmentGroup;
        s._segmentIndexShift = segmentGroup.segments.length;
        res[getOutlet$1(r)] = s;
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);
    } finally {
      if (e_2) throw e_2.error;
    }
  }

  return (0, _tslib.__assign)({}, children, res);

  var e_2, _a;
}

function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {
  var res = {};
  res[PRIMARY_OUTLET] = primarySegment;
  primarySegment._sourceSegment = segmentGroup;
  primarySegment._segmentIndexShift = consumedSegments.length;

  try {
    for (var routes_2 = (0, _tslib.__values)(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {
      var r = routes_2_1.value;

      if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {
        var s = new UrlSegmentGroup([], {});
        s._sourceSegment = segmentGroup;
        s._segmentIndexShift = consumedSegments.length;
        res[getOutlet$1(r)] = s;
      }
    }
  } catch (e_3_1) {
    e_3 = {
      error: e_3_1
    };
  } finally {
    try {
      if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);
    } finally {
      if (e_3) throw e_3.error;
    }
  }

  return res;

  var e_3, _a;
}

function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {
  return routes.some(function (r) {
    return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET;
  });
}

function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {
  return routes.some(function (r) {
    return emptyPathMatch(segmentGroup, slicedSegments, r);
  });
}

function emptyPathMatch(segmentGroup, slicedSegments, r) {
  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {
    return false;
  }

  return r.path === '' && r.redirectTo === undefined;
}

function getOutlet$1(route) {
  return route.outlet || PRIMARY_OUTLET;
}

function getData(route) {
  return route.data || {};
}

function getResolve(route) {
  return route.resolve || {};
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Provides a way to customize when activated routes get reused.
 *
 * @experimental
 */


var RouteReuseStrategy =
/** @class */
function () {
  function RouteReuseStrategy() {}

  return RouteReuseStrategy;
}();
/**
 * Does not detach any subtrees. Reuses routes as long as their route config is the same.
 */


exports.RouteReuseStrategy = RouteReuseStrategy;

var DefaultRouteReuseStrategy =
/** @class */
function () {
  function DefaultRouteReuseStrategy() {}

  DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) {
    return false;
  };

  DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) {};

  DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) {
    return false;
  };

  DefaultRouteReuseStrategy.prototype.retrieve = function (route) {
    return null;
  };

  DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {
    return future.routeConfig === curr.routeConfig;
  };

  return DefaultRouteReuseStrategy;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @docsNotRequired
 * @experimental
 */


var ROUTES = new _core.InjectionToken('ROUTES');
exports.ROUTES = ROUTES;

var RouterConfigLoader =
/** @class */
function () {
  function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {
    this.loader = loader;
    this.compiler = compiler;
    this.onLoadStartListener = onLoadStartListener;
    this.onLoadEndListener = onLoadEndListener;
  }

  RouterConfigLoader.prototype.load = function (parentInjector, route) {
    var _this = this;

    if (this.onLoadStartListener) {
      this.onLoadStartListener(route);
    }

    var moduleFactory$ = this.loadModuleFactory(route.loadChildren);
    return moduleFactory$.pipe((0, _operators.map)(function (factory) {
      if (_this.onLoadEndListener) {
        _this.onLoadEndListener(route);
      }

      var module = factory.create(parentInjector);
      return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(copyConfig), module);
    }));
  };

  RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {
    var _this = this;

    if (typeof loadChildren === 'string') {
      return (0, _rxjs.from)(this.loader.load(loadChildren));
    } else {
      return wrapIntoObservable(loadChildren()).pipe((0, _operators.mergeMap)(function (t) {
        if (t instanceof _core.NgModuleFactory) {
          return (0, _rxjs.of)(t);
        } else {
          return (0, _rxjs.from)(_this.compiler.compileModuleAsync(t));
        }
      }));
    }
  };

  return RouterConfigLoader;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Provides a way to migrate AngularJS applications to Angular.
 *
 * @experimental
 */


var UrlHandlingStrategy =
/** @class */
function () {
  function UrlHandlingStrategy() {}

  return UrlHandlingStrategy;
}();
/**
 * @experimental
 */


exports.UrlHandlingStrategy = UrlHandlingStrategy;

var DefaultUrlHandlingStrategy =
/** @class */
function () {
  function DefaultUrlHandlingStrategy() {}

  DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) {
    return true;
  };

  DefaultUrlHandlingStrategy.prototype.extract = function (url) {
    return url;
  };

  DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) {
    return newUrlPart;
  };

  return DefaultUrlHandlingStrategy;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function defaultErrorHandler(error) {
  throw error;
}
/**
 * @internal
 */


function defaultRouterHook(snapshot) {
  return (0, _rxjs.of)(null);
}
/**
 * @description
 *
 * Provides the navigation and url manipulation capabilities.
 *
 * See `Routes` for more details and examples.
 *
 * @ngModule RouterModule
 *
 *
 */


var Router =
/** @class */
function () {
  /**
   * Creates the router service.
   */
  // TODO: vsavkin make internal after the final is out.
  function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {
    var _this = this;

    this.rootComponentType = rootComponentType;
    this.urlSerializer = urlSerializer;
    this.rootContexts = rootContexts;
    this.location = location;
    this.config = config;
    this.navigations = new _rxjs.BehaviorSubject(null);
    this.navigationId = 0;
    this.events = new _rxjs.Subject();
    /**
       * Error handler that is invoked when a navigation errors.
       *
       * See `ErrorHandler` for more information.
       */

    this.errorHandler = defaultErrorHandler;
    /**
       * Indicates if at least one navigation happened.
       */

    this.navigated = false;
    this.lastSuccessfulId = -1;
    /**
       * Used by RouterModule. This allows us to
       * pause the navigation either before preactivation or after it.
       * @internal
       */

    this.hooks = {
      beforePreactivation: defaultRouterHook,
      afterPreactivation: defaultRouterHook
    };
    /**
       * Extracts and merges URLs. Used for AngularJS to Angular migrations.
       */

    this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();
    this.routeReuseStrategy = new DefaultRouteReuseStrategy();
    /**
       * Define what the router should do if it receives a navigation request to the current URL.
       * By default, the router will ignore this navigation. However, this prevents features such
       * as a "refresh" button. Use this option to configure the behavior when navigating to the
       * current URL. Default is 'ignore'.
       */

    this.onSameUrlNavigation = 'ignore';
    /**
       * Defines how the router merges params, data and resolved data from parent to child
       * routes. Available options are:
       *
       * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less
       *   routes.
       * - `'always'`, enables unconditional inheritance of parent params.
       */

    this.paramsInheritanceStrategy = 'emptyOnly';

    var onLoadStart = function onLoadStart(r) {
      return _this.triggerEvent(new RouteConfigLoadStart(r));
    };

    var onLoadEnd = function onLoadEnd(r) {
      return _this.triggerEvent(new RouteConfigLoadEnd(r));
    };

    this.ngModule = injector.get(_core.NgModuleRef);
    this.resetConfig(config);
    this.currentUrlTree = createEmptyUrlTree();
    this.rawUrlTree = this.currentUrlTree;
    this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);
    this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);
    this.processNavigations();
  }
  /**
   * @internal
   * TODO: this should be removed once the constructor of the router made internal
   */

  /**
     * @internal
     * TODO: this should be removed once the constructor of the router made internal
     */


  Router.prototype.resetRootComponentType =
  /**
  * @internal
  * TODO: this should be removed once the constructor of the router made internal
  */
  function (rootComponentType) {
    this.rootComponentType = rootComponentType; // TODO: vsavkin router 4.0 should make the root component set to null
    // this will simplify the lifecycle of the router.

    this.routerState.root.component = this.rootComponentType;
  };
  /**
   * Sets up the location change listener and performs the initial navigation.
   */

  /**
     * Sets up the location change listener and performs the initial navigation.
     */


  Router.prototype.initialNavigation =
  /**
  * Sets up the location change listener and performs the initial navigation.
  */
  function () {
    this.setUpLocationChangeListener();

    if (this.navigationId === 0) {
      this.navigateByUrl(this.location.path(true), {
        replaceUrl: true
      });
    }
  };
  /**
   * Sets up the location change listener.
   */

  /**
     * Sets up the location change listener.
     */


  Router.prototype.setUpLocationChangeListener =
  /**
  * Sets up the location change listener.
  */
  function () {
    var _this = this; // Don't need to use Zone.wrap any more, because zone.js
    // already patch onPopState, so location change callback will
    // run into ngZone


    if (!this.locationSubscription) {
      this.locationSubscription = this.location.subscribe(function (change) {
        var rawUrlTree = _this.urlSerializer.parse(change['url']);

        var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';
        var state = change.state && change.state.navigationId ? {
          navigationId: change.state.navigationId
        } : null;
        setTimeout(function () {
          _this.scheduleNavigation(rawUrlTree, source, state, {
            replaceUrl: true
          });
        }, 0);
      });
    }
  };

  Object.defineProperty(Router.prototype, "url", {
    /** The current url */
    get:
    /** The current url */
    function get() {
      return this.serializeUrl(this.currentUrlTree);
    },
    enumerable: true,
    configurable: true
  });
  /** @internal */

  /** @internal */

  Router.prototype.triggerEvent =
  /** @internal */
  function (e) {
    this.events.next(e);
  };
  /**
   * Resets the configuration used for navigation and generating links.
   *
   * ### Usage
   *
   * ```
   * router.resetConfig([
   *  { path: 'team/:id', component: TeamCmp, children: [
   *    { path: 'simple', component: SimpleCmp },
   *    { path: 'user/:name', component: UserCmp }
   *  ]}
   * ]);
   * ```
   */

  /**
     * Resets the configuration used for navigation and generating links.
     *
     * ### Usage
     *
     * ```
     * router.resetConfig([
     *  { path: 'team/:id', component: TeamCmp, children: [
     *    { path: 'simple', component: SimpleCmp },
     *    { path: 'user/:name', component: UserCmp }
     *  ]}
     * ]);
     * ```
     */


  Router.prototype.resetConfig =
  /**
  * Resets the configuration used for navigation and generating links.
  *
  * ### Usage
  *
  * ```
  * router.resetConfig([
  *  { path: 'team/:id', component: TeamCmp, children: [
  *    { path: 'simple', component: SimpleCmp },
  *    { path: 'user/:name', component: UserCmp }
  *  ]}
  * ]);
  * ```
  */
  function (config) {
    validateConfig(config);
    this.config = config.map(copyConfig);
    this.navigated = false;
    this.lastSuccessfulId = -1;
  };
  /** @docsNotRequired */

  /** @docsNotRequired */


  Router.prototype.ngOnDestroy =
  /** @docsNotRequired */
  function () {
    this.dispose();
  };
  /** Disposes of the router */

  /** Disposes of the router */


  Router.prototype.dispose =
  /** Disposes of the router */
  function () {
    if (this.locationSubscription) {
      this.locationSubscription.unsubscribe();
      this.locationSubscription = null;
    }
  };
  /**
   * Applies an array of commands to the current url tree and creates a new url tree.
   *
   * When given an activate route, applies the given commands starting from the route.
   * When not given a route, applies the given command starting from the root.
   *
   * ### Usage
   *
   * ```
   * // create /team/33/user/11
   * router.createUrlTree(['/team', 33, 'user', 11]);
   *
   * // create /team/33;expand=true/user/11
   * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
   *
   * // you can collapse static segments like this (this works only with the first passed-in value):
   * router.createUrlTree(['/team/33/user', userId]);
   *
   * // If the first segment can contain slashes, and you do not want the router to split it, you
   * // can do the following:
   *
   * router.createUrlTree([{segmentPath: '/one/two'}]);
   *
   * // create /team/33/(user/11//right:chat)
   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
   *
   * // remove the right secondary node
   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
   *
   * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
   *
   * // navigate to /team/33/user/11/details
   * router.createUrlTree(['details'], {relativeTo: route});
   *
   * // navigate to /team/33/user/22
   * router.createUrlTree(['../22'], {relativeTo: route});
   *
   * // navigate to /team/44/user/22
   * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
   * ```
   */

  /**
     * Applies an array of commands to the current url tree and creates a new url tree.
     *
     * When given an activate route, applies the given commands starting from the route.
     * When not given a route, applies the given command starting from the root.
     *
     * ### Usage
     *
     * ```
     * // create /team/33/user/11
     * router.createUrlTree(['/team', 33, 'user', 11]);
     *
     * // create /team/33;expand=true/user/11
     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
     *
     * // you can collapse static segments like this (this works only with the first passed-in value):
     * router.createUrlTree(['/team/33/user', userId]);
     *
     * // If the first segment can contain slashes, and you do not want the router to split it, you
     * // can do the following:
     *
     * router.createUrlTree([{segmentPath: '/one/two'}]);
     *
     * // create /team/33/(user/11//right:chat)
     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
     *
     * // remove the right secondary node
     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
     *
     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
     *
     * // navigate to /team/33/user/11/details
     * router.createUrlTree(['details'], {relativeTo: route});
     *
     * // navigate to /team/33/user/22
     * router.createUrlTree(['../22'], {relativeTo: route});
     *
     * // navigate to /team/44/user/22
     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
     * ```
     */


  Router.prototype.createUrlTree =
  /**
  * Applies an array of commands to the current url tree and creates a new url tree.
  *
  * When given an activate route, applies the given commands starting from the route.
  * When not given a route, applies the given command starting from the root.
  *
  * ### Usage
  *
  * ```
  * // create /team/33/user/11
  * router.createUrlTree(['/team', 33, 'user', 11]);
  *
  * // create /team/33;expand=true/user/11
  * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
  *
  * // you can collapse static segments like this (this works only with the first passed-in value):
  * router.createUrlTree(['/team/33/user', userId]);
  *
  * // If the first segment can contain slashes, and you do not want the router to split it, you
  * // can do the following:
  *
  * router.createUrlTree([{segmentPath: '/one/two'}]);
  *
  * // create /team/33/(user/11//right:chat)
  * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
  *
  * // remove the right secondary node
  * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
  *
  * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
  *
  * // navigate to /team/33/user/11/details
  * router.createUrlTree(['details'], {relativeTo: route});
  *
  * // navigate to /team/33/user/22
  * router.createUrlTree(['../22'], {relativeTo: route});
  *
  * // navigate to /team/44/user/22
  * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
  * ```
  */
  function (commands, navigationExtras) {
    if (navigationExtras === void 0) {
      navigationExtras = {};
    }

    var relativeTo = navigationExtras.relativeTo,
        queryParams = navigationExtras.queryParams,
        fragment = navigationExtras.fragment,
        preserveQueryParams = navigationExtras.preserveQueryParams,
        queryParamsHandling = navigationExtras.queryParamsHandling,
        preserveFragment = navigationExtras.preserveFragment;

    if ((0, _core.isDevMode)() && preserveQueryParams && console && console.warn) {
      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');
    }

    var a = relativeTo || this.routerState.root;
    var f = preserveFragment ? this.currentUrlTree.fragment : fragment;
    var q = null;

    if (queryParamsHandling) {
      switch (queryParamsHandling) {
        case 'merge':
          q = (0, _tslib.__assign)({}, this.currentUrlTree.queryParams, queryParams);
          break;

        case 'preserve':
          q = this.currentUrlTree.queryParams;
          break;

        default:
          q = queryParams || null;
      }
    } else {
      q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;
    }

    if (q !== null) {
      q = this.removeEmptyProps(q);
    }

    return createUrlTree(a, this.currentUrlTree, commands, q, f);
  };
  /**
   * Navigate based on the provided url. This navigation is always absolute.
   *
   * Returns a promise that:
   * - resolves to 'true' when navigation succeeds,
   * - resolves to 'false' when navigation fails,
   * - is rejected when an error happens.
   *
   * ### Usage
   *
   * ```
   * router.navigateByUrl("/team/33/user/11");
   *
   * // Navigate without updating the URL
   * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
   * ```
   *
   * In opposite to `navigate`, `navigateByUrl` takes a whole URL
   * and does not apply any delta to the current one.
   */

  /**
     * Navigate based on the provided url. This navigation is always absolute.
     *
     * Returns a promise that:
     * - resolves to 'true' when navigation succeeds,
     * - resolves to 'false' when navigation fails,
     * - is rejected when an error happens.
     *
     * ### Usage
     *
     * ```
     * router.navigateByUrl("/team/33/user/11");
     *
     * // Navigate without updating the URL
     * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
     * ```
     *
     * In opposite to `navigate`, `navigateByUrl` takes a whole URL
     * and does not apply any delta to the current one.
     */


  Router.prototype.navigateByUrl =
  /**
  * Navigate based on the provided url. This navigation is always absolute.
  *
  * Returns a promise that:
  * - resolves to 'true' when navigation succeeds,
  * - resolves to 'false' when navigation fails,
  * - is rejected when an error happens.
  *
  * ### Usage
  *
  * ```
  * router.navigateByUrl("/team/33/user/11");
  *
  * // Navigate without updating the URL
  * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
  * ```
  *
  * In opposite to `navigate`, `navigateByUrl` takes a whole URL
  * and does not apply any delta to the current one.
  */
  function (url, extras) {
    if (extras === void 0) {
      extras = {
        skipLocationChange: false
      };
    }

    var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);
    var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);
    return this.scheduleNavigation(mergedTree, 'imperative', null, extras);
  };
  /**
   * Navigate based on the provided array of commands and a starting point.
   * If no starting route is provided, the navigation is absolute.
   *
   * Returns a promise that:
   * - resolves to 'true' when navigation succeeds,
   * - resolves to 'false' when navigation fails,
   * - is rejected when an error happens.
   *
   * ### Usage
   *
   * ```
   * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
   *
   * // Navigate without updating the URL
   * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
   * ```
   *
   * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current
   * URL.
   */

  /**
     * Navigate based on the provided array of commands and a starting point.
     * If no starting route is provided, the navigation is absolute.
     *
     * Returns a promise that:
     * - resolves to 'true' when navigation succeeds,
     * - resolves to 'false' when navigation fails,
     * - is rejected when an error happens.
     *
     * ### Usage
     *
     * ```
     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
     *
     * // Navigate without updating the URL
     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
     * ```
     *
     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current
     * URL.
     */


  Router.prototype.navigate =
  /**
  * Navigate based on the provided array of commands and a starting point.
  * If no starting route is provided, the navigation is absolute.
  *
  * Returns a promise that:
  * - resolves to 'true' when navigation succeeds,
  * - resolves to 'false' when navigation fails,
  * - is rejected when an error happens.
  *
  * ### Usage
  *
  * ```
  * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
  *
  * // Navigate without updating the URL
  * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
  * ```
  *
  * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current
  * URL.
  */
  function (commands, extras) {
    if (extras === void 0) {
      extras = {
        skipLocationChange: false
      };
    }

    validateCommands(commands);
    return this.navigateByUrl(this.createUrlTree(commands, extras), extras);
  };
  /** Serializes a `UrlTree` into a string */

  /** Serializes a `UrlTree` into a string */


  Router.prototype.serializeUrl =
  /** Serializes a `UrlTree` into a string */
  function (url) {
    return this.urlSerializer.serialize(url);
  };
  /** Parses a string into a `UrlTree` */

  /** Parses a string into a `UrlTree` */


  Router.prototype.parseUrl =
  /** Parses a string into a `UrlTree` */
  function (url) {
    return this.urlSerializer.parse(url);
  };
  /** Returns whether the url is activated */

  /** Returns whether the url is activated */


  Router.prototype.isActive =
  /** Returns whether the url is activated */
  function (url, exact) {
    if (url instanceof UrlTree) {
      return containsTree(this.currentUrlTree, url, exact);
    }

    var urlTree = this.urlSerializer.parse(url);
    return containsTree(this.currentUrlTree, urlTree, exact);
  };

  Router.prototype.removeEmptyProps = function (params) {
    return Object.keys(params).reduce(function (result, key) {
      var value = params[key];

      if (value !== null && value !== undefined) {
        result[key] = value;
      }

      return result;
    }, {});
  };

  Router.prototype.processNavigations = function () {
    var _this = this;

    this.navigations.pipe((0, _operators.concatMap)(function (nav) {
      if (nav) {
        _this.executeScheduledNavigation(nav); // a failed navigation should not stop the router from processing
        // further navigations => the catch


        return nav.promise.catch(function () {});
      } else {
        return (0, _rxjs.of)(null);
      }
    })).subscribe(function () {});
  };

  Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {
    var lastNavigation = this.navigations.value; // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),
    // and that navigation results in 'replaceState' that leads to the same URL,
    // we should skip those.

    if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' && lastNavigation.rawUrl.toString() === rawUrl.toString()) {
      return Promise.resolve(true); // return value is not used
    } // Because of a bug in IE and Edge, the location class fires two events (popstate and
    // hashchange) every single time. The second one should be ignored. Otherwise, the URL will
    // flicker. Handles the case when a popstate was emitted first.


    if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' && lastNavigation.rawUrl.toString() === rawUrl.toString()) {
      return Promise.resolve(true); // return value is not used
    } // Because of a bug in IE and Edge, the location class fires two events (popstate and
    // hashchange) every single time. The second one should be ignored. Otherwise, the URL will
    // flicker. Handles the case when a hashchange was emitted first.


    if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' && lastNavigation.rawUrl.toString() === rawUrl.toString()) {
      return Promise.resolve(true); // return value is not used
    }

    var resolve = null;
    var reject = null;
    var promise = new Promise(function (res, rej) {
      resolve = res;
      reject = rej;
    });
    var id = ++this.navigationId;
    this.navigations.next({
      id: id,
      source: source,
      state: state,
      rawUrl: rawUrl,
      extras: extras,
      resolve: resolve,
      reject: reject,
      promise: promise
    }); // Make sure that the error is propagated even though `processNavigations` catch
    // handler does not rethrow

    return promise.catch(function (e) {
      return Promise.reject(e);
    });
  };

  Router.prototype.executeScheduledNavigation = function (_a) {
    var _this = this;

    var id = _a.id,
        rawUrl = _a.rawUrl,
        extras = _a.extras,
        resolve = _a.resolve,
        reject = _a.reject,
        source = _a.source,
        state = _a.state;
    var url = this.urlHandlingStrategy.extract(rawUrl);
    var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();

    if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {
      this.events.next(new NavigationStart(id, this.serializeUrl(url), source, state));
      Promise.resolve().then(function (_) {
        return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null);
      }).then(resolve, reject); // we cannot process the current URL, but we could process the previous one =>
      // we need to do some cleanup
    } else if (urlTransition && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
      this.events.next(new NavigationStart(id, this.serializeUrl(url), source, state));
      Promise.resolve().then(function (_) {
        return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot);
      }).then(resolve, reject);
    } else {
      this.rawUrlTree = rawUrl;
      resolve(null);
    }
  };

  Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {
    var _this = this;

    if (id !== this.navigationId) {
      this.events.next(new NavigationCancel(id, this.serializeUrl(url), "Navigation ID " + id + " is not equal to the current navigation id " + this.navigationId));
      return Promise.resolve(false);
    }

    return new Promise(function (resolvePromise, rejectPromise) {
      // create an observable of the url and route state snapshot
      // this operation do not result in any side effects
      var urlAndSnapshot$;

      if (!precreatedState) {
        var moduleInjector = _this.ngModule.injector;
        var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);
        urlAndSnapshot$ = redirectsApplied$.pipe((0, _operators.mergeMap)(function (appliedUrl) {
          return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy).pipe((0, _operators.map)(function (snapshot) {
            _this.events.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));

            return {
              appliedUrl: appliedUrl,
              snapshot: snapshot
            };
          }));
        }));
      } else {
        urlAndSnapshot$ = (0, _rxjs.of)({
          appliedUrl: url,
          snapshot: precreatedState
        });
      }

      var beforePreactivationDone$ = urlAndSnapshot$.pipe((0, _operators.mergeMap)(function (p) {
        if (typeof p === 'boolean') return (0, _rxjs.of)(p);
        return _this.hooks.beforePreactivation(p.snapshot).pipe((0, _operators.map)(function () {
          return p;
        }));
      })); // run preactivation: guards and data resolvers

      var preActivation;
      var preactivationSetup$ = beforePreactivationDone$.pipe((0, _operators.map)(function (p) {
        if (typeof p === 'boolean') return p;
        var appliedUrl = p.appliedUrl,
            snapshot = p.snapshot;
        var moduleInjector = _this.ngModule.injector;
        preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) {
          return _this.triggerEvent(evt);
        });
        preActivation.initialize(_this.rootContexts);
        return {
          appliedUrl: appliedUrl,
          snapshot: snapshot
        };
      }));
      var preactivationCheckGuards$ = preactivationSetup$.pipe((0, _operators.mergeMap)(function (p) {
        if (typeof p === 'boolean' || _this.navigationId !== id) return (0, _rxjs.of)(false);
        var appliedUrl = p.appliedUrl,
            snapshot = p.snapshot;

        _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));

        return preActivation.checkGuards().pipe((0, _operators.map)(function (shouldActivate) {
          _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));

          return {
            appliedUrl: appliedUrl,
            snapshot: snapshot,
            shouldActivate: shouldActivate
          };
        }));
      }));
      var preactivationResolveData$ = preactivationCheckGuards$.pipe((0, _operators.mergeMap)(function (p) {
        if (typeof p === 'boolean' || _this.navigationId !== id) return (0, _rxjs.of)(false);

        if (p.shouldActivate && preActivation.isActivating()) {
          _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));

          return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe((0, _operators.map)(function () {
            _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));

            return p;
          }));
        } else {
          return (0, _rxjs.of)(p);
        }
      }));
      var preactivationDone$ = preactivationResolveData$.pipe((0, _operators.mergeMap)(function (p) {
        if (typeof p === 'boolean' || _this.navigationId !== id) return (0, _rxjs.of)(false);
        return _this.hooks.afterPreactivation(p.snapshot).pipe((0, _operators.map)(function () {
          return p;
        }));
      })); // create router state
      // this operation has side effects => route state is being affected

      var routerState$ = preactivationDone$.pipe((0, _operators.map)(function (p) {
        if (typeof p === 'boolean' || _this.navigationId !== id) return false;
        var appliedUrl = p.appliedUrl,
            snapshot = p.snapshot,
            shouldActivate = p.shouldActivate;

        if (shouldActivate) {
          var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);
          return {
            appliedUrl: appliedUrl,
            state: state,
            shouldActivate: shouldActivate
          };
        } else {
          return {
            appliedUrl: appliedUrl,
            state: null,
            shouldActivate: shouldActivate
          };
        }
      }));

      _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);
    });
  };
  /**
   * Performs the logic of activating routes. This is a synchronous process by default. While this
   * is a private method, it could be overridden to make activation asynchronous.
   */

  /**
     * Performs the logic of activating routes. This is a synchronous process by default. While this
     * is a private method, it could be overridden to make activation asynchronous.
     */


  Router.prototype.activateRoutes =
  /**
  * Performs the logic of activating routes. This is a synchronous process by default. While this
  * is a private method, it could be overridden to make activation asynchronous.
  */
  function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {
    var _this = this; // applied the new router state
    // this operation has side effects


    var navigationIsSuccessful;
    state.forEach(function (p) {
      if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {
        navigationIsSuccessful = false;
        return;
      }

      var appliedUrl = p.appliedUrl,
          state = p.state;
      _this.currentUrlTree = appliedUrl;
      _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);
      _this.routerState = state;

      if (!skipLocationChange) {
        var path = _this.urlSerializer.serialize(_this.rawUrlTree);

        if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {
          _this.location.replaceState(path, '', {
            navigationId: id
          });
        } else {
          _this.location.go(path, '', {
            navigationId: id
          });
        }
      }

      new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) {
        return _this.triggerEvent(evt);
      }).activate(_this.rootContexts);
      navigationIsSuccessful = true;
    }).then(function () {
      if (navigationIsSuccessful) {
        _this.navigated = true;
        _this.lastSuccessfulId = id;

        _this.events.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));

        resolvePromise(true);
      } else {
        _this.resetUrlToCurrentUrlTree();

        _this.events.next(new NavigationCancel(id, _this.serializeUrl(url), ''));

        resolvePromise(false);
      }
    }, function (e) {
      if (isNavigationCancelingError(e)) {
        _this.navigated = true;

        _this.resetStateAndUrl(storedState, storedUrl, rawUrl);

        _this.events.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));

        resolvePromise(false);
      } else {
        _this.resetStateAndUrl(storedState, storedUrl, rawUrl);

        _this.events.next(new NavigationError(id, _this.serializeUrl(url), e));

        try {
          resolvePromise(_this.errorHandler(e));
        } catch (ee) {
          rejectPromise(ee);
        }
      }
    });
  };

  Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {
    this.routerState = storedState;
    this.currentUrlTree = storedUrl;
    this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);
    this.resetUrlToCurrentUrlTree();
  };

  Router.prototype.resetUrlToCurrentUrlTree = function () {
    this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', {
      navigationId: this.lastSuccessfulId
    });
  };

  return Router;
}();

exports.Router = Router;

var ActivateRoutes =
/** @class */
function () {
  function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {
    this.routeReuseStrategy = routeReuseStrategy;
    this.futureState = futureState;
    this.currState = currState;
    this.forwardEvent = forwardEvent;
  }

  ActivateRoutes.prototype.activate = function (parentContexts) {
    var futureRoot = this.futureState._root;
    var currRoot = this.currState ? this.currState._root : null;
    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);
    advanceActivatedRoute(this.futureState.root);
    this.activateChildRoutes(futureRoot, currRoot, parentContexts);
  }; // De-activate the child route that are not re-used for the future state
  // De-activate the child route that are not re-used for the future state


  ActivateRoutes.prototype.deactivateChildRoutes = // De-activate the child route that are not re-used for the future state
  function (futureNode, currNode, contexts) {
    var _this = this;

    var children = nodeChildrenAsMap(currNode); // Recurse on the routes active in the future state to de-activate deeper children

    futureNode.children.forEach(function (futureChild) {
      var childOutletName = futureChild.value.outlet;

      _this.deactivateRoutes(futureChild, children[childOutletName], contexts);

      delete children[childOutletName];
    }); // De-activate the routes that will not be re-used

    forEach(children, function (v, childName) {
      _this.deactivateRouteAndItsChildren(v, contexts);
    });
  };

  ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {
    var future = futureNode.value;
    var curr = currNode ? currNode.value : null;

    if (future === curr) {
      // Reusing the node, check to see if the children need to be de-activated
      if (future.component) {
        // If we have a normal route, we need to go through an outlet.
        var context = parentContext.getContext(future.outlet);

        if (context) {
          this.deactivateChildRoutes(futureNode, currNode, context.children);
        }
      } else {
        // if we have a componentless route, we recurse but keep the same outlet map.
        this.deactivateChildRoutes(futureNode, currNode, parentContext);
      }
    } else {
      if (curr) {
        // Deactivate the current route which will not be re-used
        this.deactivateRouteAndItsChildren(currNode, parentContext);
      }
    }
  };

  ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {
    if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {
      this.detachAndStoreRouteSubtree(route, parentContexts);
    } else {
      this.deactivateRouteAndOutlet(route, parentContexts);
    }
  };

  ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {
    var context = parentContexts.getContext(route.value.outlet);

    if (context && context.outlet) {
      var componentRef = context.outlet.detach();
      var contexts = context.children.onOutletDeactivated();
      this.routeReuseStrategy.store(route.value.snapshot, {
        componentRef: componentRef,
        route: route,
        contexts: contexts
      });
    }
  };

  ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {
    var _this = this;

    var context = parentContexts.getContext(route.value.outlet);

    if (context) {
      var children = nodeChildrenAsMap(route);
      var contexts_1 = route.value.component ? context.children : parentContexts;
      forEach(children, function (v, k) {
        return _this.deactivateRouteAndItsChildren(v, contexts_1);
      });

      if (context.outlet) {
        // Destroy the component
        context.outlet.deactivate(); // Destroy the contexts for all the outlets that were in the component

        context.children.onOutletDeactivated();
      }
    }
  };

  ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {
    var _this = this;

    var children = nodeChildrenAsMap(currNode);
    futureNode.children.forEach(function (c) {
      _this.activateRoutes(c, children[c.value.outlet], contexts);

      _this.forwardEvent(new ActivationEnd(c.value.snapshot));
    });

    if (futureNode.children.length) {
      this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));
    }
  };

  ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {
    var future = futureNode.value;
    var curr = currNode ? currNode.value : null;
    advanceActivatedRoute(future); // reusing the node

    if (future === curr) {
      if (future.component) {
        // If we have a normal route, we need to go through an outlet.
        var context = parentContexts.getOrCreateContext(future.outlet);
        this.activateChildRoutes(futureNode, currNode, context.children);
      } else {
        // if we have a componentless route, we recurse but keep the same outlet map.
        this.activateChildRoutes(futureNode, currNode, parentContexts);
      }
    } else {
      if (future.component) {
        // if we have a normal route, we need to place the component into the outlet and recurse.
        var context = parentContexts.getOrCreateContext(future.outlet);

        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {
          var stored = this.routeReuseStrategy.retrieve(future.snapshot);
          this.routeReuseStrategy.store(future.snapshot, null);
          context.children.onOutletReAttached(stored.contexts);
          context.attachRef = stored.componentRef;
          context.route = stored.route.value;

          if (context.outlet) {
            // Attach right away when the outlet has already been instantiated
            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated
            context.outlet.attach(stored.componentRef, stored.route.value);
          }

          advanceActivatedRouteNodeAndItsChildren(stored.route);
        } else {
          var config = parentLoadedConfig(future.snapshot);
          var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;
          context.route = future;
          context.resolver = cmpFactoryResolver;

          if (context.outlet) {
            // Activate the outlet when it has already been instantiated
            // Otherwise it will get activated from its `ngOnInit` when instantiated
            context.outlet.activateWith(future, cmpFactoryResolver);
          }

          this.activateChildRoutes(futureNode, null, context.children);
        }
      } else {
        // if we have a componentless route, we recurse but keep the same outlet map.
        this.activateChildRoutes(futureNode, null, parentContexts);
      }
    }
  };

  return ActivateRoutes;
}();

function advanceActivatedRouteNodeAndItsChildren(node) {
  advanceActivatedRoute(node.value);
  node.children.forEach(advanceActivatedRouteNodeAndItsChildren);
}

function parentLoadedConfig(snapshot) {
  for (var s = snapshot.parent; s; s = s.parent) {
    var route = s.routeConfig;
    if (route && route._loadedConfig) return route._loadedConfig;
    if (route && route.component) return null;
  }

  return null;
}

function validateCommands(commands) {
  for (var i = 0; i < commands.length; i++) {
    var cmd = commands[i];

    if (cmd == null) {
      throw new Error("The requested path contains " + cmd + " segment at index " + i);
    }
  }
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Lets you link to specific routes in your app.
 *
 * Consider the following route configuration:
 * `[{ path: 'user/:name', component: UserCmp }]`.
 * When linking to this `user/:name` route, you use the `RouterLink` directive.
 *
 * If the link is static, you can use the directive as follows:
 * `<a routerLink="/user/bob">link to user component</a>`
 *
 * If you use dynamic values to generate the link, you can pass an array of path
 * segments, followed by the params for each segment.
 *
 * For instance `['/team', teamId, 'user', userName, {details: true}]`
 * means that we want to generate a link to `/team/11/user/bob;details=true`.
 *
 * Multiple static segments can be merged into one
 * (e.g., `['/team/11/user', userName, {details: true}]`).
 *
 * The first segment name can be prepended with `/`, `./`, or `../`:
 * * If the first segment begins with `/`, the router will look up the route from the root of the
 *   app.
 * * If the first segment begins with `./`, or doesn't begin with a slash, the router will
 *   instead look in the children of the current activated route.
 * * And if the first segment begins with `../`, the router will go up one level.
 *
 * You can set query params and fragment as follows:
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" fragment="education">
 *   link to user component
 * </a>
 * ```
 * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.
 *
 * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the
 * directive to preserve the current query params and fragment:
 *
 * ```
 * <a [routerLink]="['/user/bob']" preserveQueryParams preserveFragment>
 *   link to user component
 * </a>
 * ```
 *
 * You can tell the directive to how to handle queryParams, available options are:
 *  - `'merge'`: merge the queryParams into the current queryParams
 *  - `'preserve'`: preserve the current queryParams
 *  - default/`''`: use the queryParams only
 *
 * Same options for {@link NavigationExtras#queryParamsHandling
 * NavigationExtras#queryParamsHandling}.
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" queryParamsHandling="merge">
 *   link to user component
 * </a>
 * ```
 *
 * The router link directive always treats the provided input as a delta to the current url.
 *
 * For instance, if the current url is `/user/(box//aux:team)`.
 *
 * Then the following link `<a [routerLink]="['/user/jim']">Jim</a>` will generate the link
 * `/user/(jim//aux:team)`.
 *
 * See {@link Router#createUrlTree createUrlTree} for more information.
 *
 * @ngModule RouterModule
 *
 *
 */


var RouterLink =
/** @class */
function () {
  function RouterLink(router, route, tabIndex, renderer, el) {
    this.router = router;
    this.route = route;
    this.commands = [];

    if (tabIndex == null) {
      renderer.setAttribute(el.nativeElement, 'tabindex', '0');
    }
  }

  Object.defineProperty(RouterLink.prototype, "routerLink", {
    set: function set(commands) {
      if (commands != null) {
        this.commands = Array.isArray(commands) ? commands : [commands];
      } else {
        this.commands = [];
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterLink.prototype, "preserveQueryParams", {
    set:
    /**
    * @deprecated 4.0.0 use `queryParamsHandling` instead.
    */
    function set(value) {
      if ((0, _core.isDevMode)() && console && console.warn) {
        console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');
      }

      this.preserve = value;
    },
    enumerable: true,
    configurable: true
  });

  RouterLink.prototype.onClick = function () {
    var extras = {
      skipLocationChange: attrBoolValue(this.skipLocationChange),
      replaceUrl: attrBoolValue(this.replaceUrl)
    };
    this.router.navigateByUrl(this.urlTree, extras);
    return true;
  };

  Object.defineProperty(RouterLink.prototype, "urlTree", {
    get: function get() {
      return this.router.createUrlTree(this.commands, {
        relativeTo: this.route,
        queryParams: this.queryParams,
        fragment: this.fragment,
        preserveQueryParams: attrBoolValue(this.preserve),
        queryParamsHandling: this.queryParamsHandling,
        preserveFragment: attrBoolValue(this.preserveFragment)
      });
    },
    enumerable: true,
    configurable: true
  });
  RouterLink.decorators = [{
    type: _core.Directive,
    args: [{
      selector: ':not(a)[routerLink]'
    }]
  }];
  /** @nocollapse */

  RouterLink.ctorParameters = function () {
    return [{
      type: Router
    }, {
      type: ActivatedRoute
    }, {
      type: undefined,
      decorators: [{
        type: _core.Attribute,
        args: ['tabindex']
      }]
    }, {
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }];
  };

  RouterLink.propDecorators = {
    "queryParams": [{
      type: _core.Input
    }],
    "fragment": [{
      type: _core.Input
    }],
    "queryParamsHandling": [{
      type: _core.Input
    }],
    "preserveFragment": [{
      type: _core.Input
    }],
    "skipLocationChange": [{
      type: _core.Input
    }],
    "replaceUrl": [{
      type: _core.Input
    }],
    "routerLink": [{
      type: _core.Input
    }],
    "preserveQueryParams": [{
      type: _core.Input
    }],
    "onClick": [{
      type: _core.HostListener,
      args: ['click']
    }]
  };
  return RouterLink;
}();
/**
 * @description
 *
 * Lets you link to specific routes in your app.
 *
 * See `RouterLink` for more information.
 *
 * @ngModule RouterModule
 *
 *
 */


exports.RouterLink = RouterLink;

var RouterLinkWithHref =
/** @class */
function () {
  function RouterLinkWithHref(router, route, locationStrategy) {
    var _this = this;

    this.router = router;
    this.route = route;
    this.locationStrategy = locationStrategy;
    this.commands = [];
    this.subscription = router.events.subscribe(function (s) {
      if (s instanceof NavigationEnd) {
        _this.updateTargetUrlAndHref();
      }
    });
  }

  Object.defineProperty(RouterLinkWithHref.prototype, "routerLink", {
    set: function set(commands) {
      if (commands != null) {
        this.commands = Array.isArray(commands) ? commands : [commands];
      } else {
        this.commands = [];
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterLinkWithHref.prototype, "preserveQueryParams", {
    set: function set(value) {
      if ((0, _core.isDevMode)() && console && console.warn) {
        console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');
      }

      this.preserve = value;
    },
    enumerable: true,
    configurable: true
  });

  RouterLinkWithHref.prototype.ngOnChanges = function (changes) {
    this.updateTargetUrlAndHref();
  };

  RouterLinkWithHref.prototype.ngOnDestroy = function () {
    this.subscription.unsubscribe();
  };

  RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {
    if (button !== 0 || ctrlKey || metaKey || shiftKey) {
      return true;
    }

    if (typeof this.target === 'string' && this.target != '_self') {
      return true;
    }

    var extras = {
      skipLocationChange: attrBoolValue(this.skipLocationChange),
      replaceUrl: attrBoolValue(this.replaceUrl)
    };
    this.router.navigateByUrl(this.urlTree, extras);
    return false;
  };

  RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {
    this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));
  };

  Object.defineProperty(RouterLinkWithHref.prototype, "urlTree", {
    get: function get() {
      return this.router.createUrlTree(this.commands, {
        relativeTo: this.route,
        queryParams: this.queryParams,
        fragment: this.fragment,
        preserveQueryParams: attrBoolValue(this.preserve),
        queryParamsHandling: this.queryParamsHandling,
        preserveFragment: attrBoolValue(this.preserveFragment)
      });
    },
    enumerable: true,
    configurable: true
  });
  RouterLinkWithHref.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'a[routerLink]'
    }]
  }];
  /** @nocollapse */

  RouterLinkWithHref.ctorParameters = function () {
    return [{
      type: Router
    }, {
      type: ActivatedRoute
    }, {
      type: _common.LocationStrategy
    }];
  };

  RouterLinkWithHref.propDecorators = {
    "target": [{
      type: _core.HostBinding,
      args: ['attr.target']
    }, {
      type: _core.Input
    }],
    "queryParams": [{
      type: _core.Input
    }],
    "fragment": [{
      type: _core.Input
    }],
    "queryParamsHandling": [{
      type: _core.Input
    }],
    "preserveFragment": [{
      type: _core.Input
    }],
    "skipLocationChange": [{
      type: _core.Input
    }],
    "replaceUrl": [{
      type: _core.Input
    }],
    "href": [{
      type: _core.HostBinding
    }],
    "routerLink": [{
      type: _core.Input
    }],
    "preserveQueryParams": [{
      type: _core.Input
    }],
    "onClick": [{
      type: _core.HostListener,
      args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]
    }]
  };
  return RouterLinkWithHref;
}();

exports.RouterLinkWithHref = RouterLinkWithHref;

function attrBoolValue(s) {
  return s === '' || !!s;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 * @description
 *
 * Lets you add a CSS class to an element when the link's route becomes active.
 *
 * This directive lets you add a CSS class to an element when the link's route
 * becomes active.
 *
 * Consider the following example:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link">Bob</a>
 * ```
 *
 * When the url is either '/user' or '/user/bob', the active-link class will
 * be added to the `a` tag. If the url changes, the class will be removed.
 *
 * You can set more than one class, as follows:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="class1 class2">Bob</a>
 * <a routerLink="/user/bob" [routerLinkActive]="['class1', 'class2']">Bob</a>
 * ```
 *
 * You can configure RouterLinkActive by passing `exact: true`. This will add the classes
 * only when the url matches the link exactly.
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link" [routerLinkActiveOptions]="{exact:
 * true}">Bob</a>
 * ```
 *
 * You can assign the RouterLinkActive instance to a template variable and directly check
 * the `isActive` status.
 * ```
 * <a routerLink="/user/bob" routerLinkActive #rla="routerLinkActive">
 *   Bob {{ rla.isActive ? '(already open)' : ''}}
 * </a>
 * ```
 *
 * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.
 *
 * ```
 * <div routerLinkActive="active-link" [routerLinkActiveOptions]="{exact: true}">
 *   <a routerLink="/user/jim">Jim</a>
 *   <a routerLink="/user/bob">Bob</a>
 * </div>
 * ```
 *
 * This will set the active-link class on the div tag if the url is either '/user/jim' or
 * '/user/bob'.
 *
 * @ngModule RouterModule
 *
 *
 */


var RouterLinkActive =
/** @class */
function () {
  function RouterLinkActive(router, element, renderer, cdr) {
    var _this = this;

    this.router = router;
    this.element = element;
    this.renderer = renderer;
    this.cdr = cdr;
    this.classes = [];
    this.isActive = false;
    this.routerLinkActiveOptions = {
      exact: false
    };
    this.subscription = router.events.subscribe(function (s) {
      if (s instanceof NavigationEnd) {
        _this.update();
      }
    });
  }

  RouterLinkActive.prototype.ngAfterContentInit = function () {
    var _this = this;

    this.links.changes.subscribe(function (_) {
      return _this.update();
    });
    this.linksWithHrefs.changes.subscribe(function (_) {
      return _this.update();
    });
    this.update();
  };

  Object.defineProperty(RouterLinkActive.prototype, "routerLinkActive", {
    set: function set(data) {
      var classes = Array.isArray(data) ? data : data.split(' ');
      this.classes = classes.filter(function (c) {
        return !!c;
      });
    },
    enumerable: true,
    configurable: true
  });

  RouterLinkActive.prototype.ngOnChanges = function (changes) {
    this.update();
  };

  RouterLinkActive.prototype.ngOnDestroy = function () {
    this.subscription.unsubscribe();
  };

  RouterLinkActive.prototype.update = function () {
    var _this = this;

    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;
    Promise.resolve().then(function () {
      var hasActiveLinks = _this.hasActiveLinks();

      if (_this.isActive !== hasActiveLinks) {
        _this.isActive = hasActiveLinks;

        _this.classes.forEach(function (c) {
          if (hasActiveLinks) {
            _this.renderer.addClass(_this.element.nativeElement, c);
          } else {
            _this.renderer.removeClass(_this.element.nativeElement, c);
          }
        });
      }
    });
  };

  RouterLinkActive.prototype.isLinkActive = function (router) {
    var _this = this;

    return function (link) {
      return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);
    };
  };

  RouterLinkActive.prototype.hasActiveLinks = function () {
    return this.links.some(this.isLinkActive(this.router)) || this.linksWithHrefs.some(this.isLinkActive(this.router));
  };

  RouterLinkActive.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[routerLinkActive]',
      exportAs: 'routerLinkActive'
    }]
  }];
  /** @nocollapse */

  RouterLinkActive.ctorParameters = function () {
    return [{
      type: Router
    }, {
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }, {
      type: _core.ChangeDetectorRef
    }];
  };

  RouterLinkActive.propDecorators = {
    "links": [{
      type: _core.ContentChildren,
      args: [RouterLink, {
        descendants: true
      }]
    }],
    "linksWithHrefs": [{
      type: _core.ContentChildren,
      args: [RouterLinkWithHref, {
        descendants: true
      }]
    }],
    "routerLinkActiveOptions": [{
      type: _core.Input
    }],
    "routerLinkActive": [{
      type: _core.Input
    }]
  };
  return RouterLinkActive;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Store contextual information about a `RouterOutlet`
 *
 *
 */


exports.RouterLinkActive = RouterLinkActive;

var OutletContext =
/** @class */
function () {
  function OutletContext() {
    this.outlet = null;
    this.route = null;
    this.resolver = null;
    this.children = new ChildrenOutletContexts();
    this.attachRef = null;
  }

  return OutletContext;
}();
/**
 * Store contextual information about the children (= nested) `RouterOutlet`
 *
 *
 */


exports.OutletContext = OutletContext;

var ChildrenOutletContexts =
/** @class */
function () {
  function ChildrenOutletContexts() {
    // contexts for child outlets, by name.
    this.contexts = new Map();
  }
  /** Called when a `RouterOutlet` directive is instantiated */

  /** Called when a `RouterOutlet` directive is instantiated */


  ChildrenOutletContexts.prototype.onChildOutletCreated =
  /** Called when a `RouterOutlet` directive is instantiated */
  function (childName, outlet) {
    var context = this.getOrCreateContext(childName);
    context.outlet = outlet;
    this.contexts.set(childName, context);
  };
  /**
   * Called when a `RouterOutlet` directive is destroyed.
   * We need to keep the context as the outlet could be destroyed inside a NgIf and might be
   * re-created later.
   */

  /**
     * Called when a `RouterOutlet` directive is destroyed.
     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be
     * re-created later.
     */


  ChildrenOutletContexts.prototype.onChildOutletDestroyed =
  /**
  * Called when a `RouterOutlet` directive is destroyed.
  * We need to keep the context as the outlet could be destroyed inside a NgIf and might be
  * re-created later.
  */
  function (childName) {
    var context = this.getContext(childName);

    if (context) {
      context.outlet = null;
    }
  };
  /**
   * Called when the corresponding route is deactivated during navigation.
   * Because the component get destroyed, all children outlet are destroyed.
   */

  /**
     * Called when the corresponding route is deactivated during navigation.
     * Because the component get destroyed, all children outlet are destroyed.
     */


  ChildrenOutletContexts.prototype.onOutletDeactivated =
  /**
  * Called when the corresponding route is deactivated during navigation.
  * Because the component get destroyed, all children outlet are destroyed.
  */
  function () {
    var contexts = this.contexts;
    this.contexts = new Map();
    return contexts;
  };

  ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) {
    this.contexts = contexts;
  };

  ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {
    var context = this.getContext(childName);

    if (!context) {
      context = new OutletContext();
      this.contexts.set(childName, context);
    }

    return context;
  };

  ChildrenOutletContexts.prototype.getContext = function (childName) {
    return this.contexts.get(childName) || null;
  };

  return ChildrenOutletContexts;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Acts as a placeholder that Angular dynamically fills based on the current router state.
 *
 * ```
 * <router-outlet></router-outlet>
 * <router-outlet name='left'></router-outlet>
 * <router-outlet name='right'></router-outlet>
 * ```
 *
 * A router outlet will emit an activate event any time a new component is being instantiated,
 * and a deactivate event when it is being destroyed.
 *
 * ```
 * <router-outlet
 *   (activate)='onActivate($event)'
 *   (deactivate)='onDeactivate($event)'></router-outlet>
 * ```
 * @ngModule RouterModule
 *
 *
 */


exports.ChildrenOutletContexts = ChildrenOutletContexts;

var RouterOutlet =
/** @class */
function () {
  function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {
    this.parentContexts = parentContexts;
    this.location = location;
    this.resolver = resolver;
    this.changeDetector = changeDetector;
    this.activated = null;
    this._activatedRoute = null;
    this.activateEvents = new _core.EventEmitter();
    this.deactivateEvents = new _core.EventEmitter();
    this.name = name || PRIMARY_OUTLET;
    parentContexts.onChildOutletCreated(this.name, this);
  }

  RouterOutlet.prototype.ngOnDestroy = function () {
    this.parentContexts.onChildOutletDestroyed(this.name);
  };

  RouterOutlet.prototype.ngOnInit = function () {
    if (!this.activated) {
      // If the outlet was not instantiated at the time the route got activated we need to populate
      // the outlet when it is initialized (ie inside a NgIf)
      var context = this.parentContexts.getContext(this.name);

      if (context && context.route) {
        if (context.attachRef) {
          // `attachRef` is populated when there is an existing component to mount
          this.attach(context.attachRef, context.route);
        } else {
          // otherwise the component defined in the configuration is created
          this.activateWith(context.route, context.resolver || null);
        }
      }
    }
  };

  Object.defineProperty(RouterOutlet.prototype, "isActivated", {
    get: function get() {
      return !!this.activated;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterOutlet.prototype, "component", {
    get: function get() {
      if (!this.activated) throw new Error('Outlet is not activated');
      return this.activated.instance;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterOutlet.prototype, "activatedRoute", {
    get: function get() {
      if (!this.activated) throw new Error('Outlet is not activated');
      return this._activatedRoute;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(RouterOutlet.prototype, "activatedRouteData", {
    get: function get() {
      if (this._activatedRoute) {
        return this._activatedRoute.snapshot.data;
      }

      return {};
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Called when the `RouteReuseStrategy` instructs to detach the subtree
   */

  /**
     * Called when the `RouteReuseStrategy` instructs to detach the subtree
     */

  RouterOutlet.prototype.detach =
  /**
  * Called when the `RouteReuseStrategy` instructs to detach the subtree
  */
  function () {
    if (!this.activated) throw new Error('Outlet is not activated');
    this.location.detach();
    var cmp = this.activated;
    this.activated = null;
    this._activatedRoute = null;
    return cmp;
  };
  /**
   * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree
   */

  /**
     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree
     */


  RouterOutlet.prototype.attach =
  /**
  * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree
  */
  function (ref, activatedRoute) {
    this.activated = ref;
    this._activatedRoute = activatedRoute;
    this.location.insert(ref.hostView);
  };

  RouterOutlet.prototype.deactivate = function () {
    if (this.activated) {
      var c = this.component;
      this.activated.destroy();
      this.activated = null;
      this._activatedRoute = null;
      this.deactivateEvents.emit(c);
    }
  };

  RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {
    if (this.isActivated) {
      throw new Error('Cannot activate an already activated outlet');
    }

    this._activatedRoute = activatedRoute;
    var snapshot = activatedRoute._futureSnapshot;
    var component = snapshot.routeConfig.component;
    resolver = resolver || this.resolver;
    var factory = resolver.resolveComponentFactory(component);
    var childContexts = this.parentContexts.getOrCreateContext(this.name).children;
    var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);
    this.activated = this.location.createComponent(factory, this.location.length, injector); // Calling `markForCheck` to make sure we will run the change detection when the
    // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.

    this.changeDetector.markForCheck();
    this.activateEvents.emit(this.activated.instance);
  };

  RouterOutlet.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'router-outlet',
      exportAs: 'outlet'
    }]
  }];
  /** @nocollapse */

  RouterOutlet.ctorParameters = function () {
    return [{
      type: ChildrenOutletContexts
    }, {
      type: _core.ViewContainerRef
    }, {
      type: _core.ComponentFactoryResolver
    }, {
      type: undefined,
      decorators: [{
        type: _core.Attribute,
        args: ['name']
      }]
    }, {
      type: _core.ChangeDetectorRef
    }];
  };

  RouterOutlet.propDecorators = {
    "activateEvents": [{
      type: _core.Output,
      args: ['activate']
    }],
    "deactivateEvents": [{
      type: _core.Output,
      args: ['deactivate']
    }]
  };
  return RouterOutlet;
}();

exports.RouterOutlet = RouterOutlet;

var OutletInjector =
/** @class */
function () {
  function OutletInjector(route, childContexts, parent) {
    this.route = route;
    this.childContexts = childContexts;
    this.parent = parent;
  }

  OutletInjector.prototype.get = function (token, notFoundValue) {
    if (token === ActivatedRoute) {
      return this.route;
    }

    if (token === ChildrenOutletContexts) {
      return this.childContexts;
    }

    return this.parent.get(token, notFoundValue);
  };

  return OutletInjector;
}();
/**
*@license
*Copyright Google Inc. All Rights Reserved.
*
*Use of this source code is governed by an MIT-style license that can be
*found in the LICENSE file at https://angular.io/license
*/

/**
 * @description
 *
 * Provides a preloading strategy.
 *
 * @experimental
 */


var PreloadingStrategy =
/** @class */
function () {
  function PreloadingStrategy() {}

  return PreloadingStrategy;
}();
/**
 * @description
 *
 * Provides a preloading strategy that preloads all modules as quickly as possible.
 *
 * ```
 * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})
 * ```
 *
 * @experimental
 */


exports.PreloadingStrategy = PreloadingStrategy;

var PreloadAllModules =
/** @class */
function () {
  function PreloadAllModules() {}

  PreloadAllModules.prototype.preload = function (route, fn) {
    return fn().pipe((0, _operators.catchError)(function () {
      return (0, _rxjs.of)(null);
    }));
  };

  return PreloadAllModules;
}();
/**
 * @description
 *
 * Provides a preloading strategy that does not preload any modules.
 *
 * This strategy is enabled by default.
 *
 * @experimental
 */


exports.PreloadAllModules = PreloadAllModules;

var NoPreloading =
/** @class */
function () {
  function NoPreloading() {}

  NoPreloading.prototype.preload = function (route, fn) {
    return (0, _rxjs.of)(null);
  };

  return NoPreloading;
}();
/**
 * The preloader optimistically loads all router configurations to
 * make navigations into lazily-loaded sections of the application faster.
 *
 * The preloader runs in the background. When the router bootstraps, the preloader
 * starts listening to all navigation events. After every such event, the preloader
 * will check if any configurations can be loaded lazily.
 *
 * If a route is protected by `canLoad` guards, the preloaded will not load it.
 *
 *
 */


exports.NoPreloading = NoPreloading;

var RouterPreloader =
/** @class */
function () {
  function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {
    this.router = router;
    this.injector = injector;
    this.preloadingStrategy = preloadingStrategy;

    var onStartLoad = function onStartLoad(r) {
      return router.triggerEvent(new RouteConfigLoadStart(r));
    };

    var onEndLoad = function onEndLoad(r) {
      return router.triggerEvent(new RouteConfigLoadEnd(r));
    };

    this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);
  }

  RouterPreloader.prototype.setUpPreloading = function () {
    var _this = this;

    this.subscription = this.router.events.pipe((0, _operators.filter)(function (e) {
      return e instanceof NavigationEnd;
    }), (0, _operators.concatMap)(function () {
      return _this.preload();
    })).subscribe(function () {});
  };

  RouterPreloader.prototype.preload = function () {
    var ngModule = this.injector.get(_core.NgModuleRef);
    return this.processRoutes(ngModule, this.router.config);
  }; // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If
  // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This
  // should be refactored.
  // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If
  // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This
  // should be refactored.


  RouterPreloader.prototype.ngOnDestroy = // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If
  // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This
  // should be refactored.
  function () {
    this.subscription.unsubscribe();
  };

  RouterPreloader.prototype.processRoutes = function (ngModule, routes) {
    var res = [];

    try {
      for (var routes_1 = (0, _tslib.__values)(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {
        var route = routes_1_1.value; // we already have the config loaded, just recurse

        if (route.loadChildren && !route.canLoad && route._loadedConfig) {
          var childConfig = route._loadedConfig;
          res.push(this.processRoutes(childConfig.module, childConfig.routes)); // no config loaded, fetch the config
        } else if (route.loadChildren && !route.canLoad) {
          res.push(this.preloadConfig(ngModule, route)); // recurse into children
        } else if (route.children) {
          res.push(this.processRoutes(ngModule, route.children));
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return (0, _rxjs.from)(res).pipe((0, _operators.mergeAll)(), (0, _operators.map)(function (_) {
      return void 0;
    }));

    var e_1, _a;
  };

  RouterPreloader.prototype.preloadConfig = function (ngModule, route) {
    var _this = this;

    return this.preloadingStrategy.preload(route, function () {
      var loaded$ = _this.loader.load(ngModule.injector, route);

      return loaded$.pipe((0, _operators.mergeMap)(function (config) {
        route._loadedConfig = config;
        return _this.processRoutes(config.module, config.routes);
      }));
    });
  };

  RouterPreloader.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  RouterPreloader.ctorParameters = function () {
    return [{
      type: Router
    }, {
      type: _core.NgModuleFactoryLoader
    }, {
      type: _core.Compiler
    }, {
      type: _core.Injector
    }, {
      type: PreloadingStrategy
    }];
  };

  return RouterPreloader;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @description
 *
 * Contains a list of directives
 *
 *
 */


exports.RouterPreloader = RouterPreloader;
var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];
/**
 * @description
 *
 * Is used in DI to configure the router.
 *
 *
 */

var ROUTER_CONFIGURATION = new _core.InjectionToken('ROUTER_CONFIGURATION');
/**
 * @docsNotRequired
 */

exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;
var ROUTER_FORROOT_GUARD = new _core.InjectionToken('ROUTER_FORROOT_GUARD');
exports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;
var ROUTER_PROVIDERS = [_common.Location, {
  provide: UrlSerializer,
  useClass: DefaultUrlSerializer
}, {
  provide: Router,
  useFactory: setupRouter,
  deps: [_core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, _common.Location, _core.Injector, _core.NgModuleFactoryLoader, _core.Compiler, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new _core.Optional()], [RouteReuseStrategy, new _core.Optional()]]
}, ChildrenOutletContexts, {
  provide: ActivatedRoute,
  useFactory: rootRoute,
  deps: [Router]
}, {
  provide: _core.NgModuleFactoryLoader,
  useClass: _core.SystemJsNgModuleLoader
}, RouterPreloader, NoPreloading, PreloadAllModules, {
  provide: ROUTER_CONFIGURATION,
  useValue: {
    enableTracing: false
  }
}];
exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;

function routerNgProbeToken() {
  return new _core.NgProbeToken('Router', Router);
}
/**
 * @usageNotes
 *
 * RouterModule can be imported multiple times: once per lazily-loaded bundle.
 * Since the router deals with a global shared resource--location, we cannot have
 * more than one router service active.
 *
 * That is why there are two ways to create the module: `RouterModule.forRoot` and
 * `RouterModule.forChild`.
 *
 * * `forRoot` creates a module that contains all the directives, the given routes, and the router
 *   service itself.
 * * `forChild` creates a module that contains all the directives and the given routes, but does not
 *   include the router service.
 *
 * When registered at the root, the module should be used as follows
 *
 * ```
 * @NgModule({
 *   imports: [RouterModule.forRoot(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * For submodules and lazy loaded submodules the module should be used as follows:
 *
 * ```
 * @NgModule({
 *   imports: [RouterModule.forChild(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * @description
 *
 * Adds router directives and providers.
 *
 * Managing state transitions is one of the hardest parts of building applications. This is
 * especially true on the web, where you also need to ensure that the state is reflected in the URL.
 * In addition, we often want to split applications into multiple bundles and load them on demand.
 * Doing this transparently is not trivial.
 *
 * The Angular router solves these problems. Using the router, you can declaratively specify
 * application states, manage state transitions while taking care of the URL, and load bundles on
 * demand.
 *
 * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an
 * overview of how the router should be used.
 *
 *
 */


var RouterModule =
/** @class */
function () {
  // Note: We are injecting the Router so it gets created eagerly...
  function RouterModule(guard, router) {}
  /**
   * Creates a module with all the router providers and directives. It also optionally sets up an
   * application listener to perform an initial navigation.
   *
   * Options (see `ExtraOptions`):
   * * `enableTracing` makes the router log all its internal events to the console.
   * * `useHash` enables the location strategy that uses the URL fragment instead of the history
   * API.
   * * `initialNavigation` disables the initial navigation.
   * * `errorHandler` provides a custom error handler.
   * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).
   * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See
   * `ExtraOptions` for more details.
   */

  /**
     * Creates a module with all the router providers and directives. It also optionally sets up an
     * application listener to perform an initial navigation.
     *
     * Options (see `ExtraOptions`):
     * * `enableTracing` makes the router log all its internal events to the console.
     * * `useHash` enables the location strategy that uses the URL fragment instead of the history
     * API.
     * * `initialNavigation` disables the initial navigation.
     * * `errorHandler` provides a custom error handler.
     * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).
     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See
     * `ExtraOptions` for more details.
     */


  RouterModule.forRoot =
  /**
  * Creates a module with all the router providers and directives. It also optionally sets up an
  * application listener to perform an initial navigation.
  *
  * Options (see `ExtraOptions`):
  * * `enableTracing` makes the router log all its internal events to the console.
  * * `useHash` enables the location strategy that uses the URL fragment instead of the history
  * API.
  * * `initialNavigation` disables the initial navigation.
  * * `errorHandler` provides a custom error handler.
  * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).
  * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See
  * `ExtraOptions` for more details.
  */
  function (routes, config) {
    return {
      ngModule: RouterModule,
      providers: [ROUTER_PROVIDERS, provideRoutes(routes), {
        provide: ROUTER_FORROOT_GUARD,
        useFactory: provideForRootGuard,
        deps: [[Router, new _core.Optional(), new _core.SkipSelf()]]
      }, {
        provide: ROUTER_CONFIGURATION,
        useValue: config ? config : {}
      }, {
        provide: _common.LocationStrategy,
        useFactory: provideLocationStrategy,
        deps: [_common.PlatformLocation, [new _core.Inject(_common.APP_BASE_HREF), new _core.Optional()], ROUTER_CONFIGURATION]
      }, {
        provide: PreloadingStrategy,
        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy : NoPreloading
      }, {
        provide: _core.NgProbeToken,
        multi: true,
        useFactory: routerNgProbeToken
      }, provideRouterInitializer()]
    };
  };
  /**
   * Creates a module with all the router directives and a provider registering routes.
   */

  /**
     * Creates a module with all the router directives and a provider registering routes.
     */


  RouterModule.forChild =
  /**
  * Creates a module with all the router directives and a provider registering routes.
  */
  function (routes) {
    return {
      ngModule: RouterModule,
      providers: [provideRoutes(routes)]
    };
  };

  RouterModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: ROUTER_DIRECTIVES,
      exports: ROUTER_DIRECTIVES
    }]
  }];
  /** @nocollapse */

  RouterModule.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Optional
      }, {
        type: _core.Inject,
        args: [ROUTER_FORROOT_GUARD]
      }]
    }, {
      type: Router,
      decorators: [{
        type: _core.Optional
      }]
    }];
  };

  return RouterModule;
}();

exports.RouterModule = RouterModule;

function provideLocationStrategy(platformLocationStrategy, baseHref, options) {
  if (options === void 0) {
    options = {};
  }

  return options.useHash ? new _common.HashLocationStrategy(platformLocationStrategy, baseHref) : new _common.PathLocationStrategy(platformLocationStrategy, baseHref);
}

function provideForRootGuard(router) {
  if (router) {
    throw new Error("RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.");
  }

  return 'guarded';
}
/**
 * @description
 *
 * Registers routes.
 *
 * ### Example
 *
 * ```
 * @NgModule({
 *   imports: [RouterModule.forChild(ROUTES)],
 *   providers: [provideRoutes(EXTRA_ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 *
 */


function provideRoutes(routes) {
  return [{
    provide: _core.ANALYZE_FOR_ENTRY_COMPONENTS,
    multi: true,
    useValue: routes
  }, {
    provide: ROUTES,
    multi: true,
    useValue: routes
  }];
}

function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {
  if (opts === void 0) {
    opts = {};
  }

  var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));

  if (urlHandlingStrategy) {
    router.urlHandlingStrategy = urlHandlingStrategy;
  }

  if (routeReuseStrategy) {
    router.routeReuseStrategy = routeReuseStrategy;
  }

  if (opts.errorHandler) {
    router.errorHandler = opts.errorHandler;
  }

  if (opts.enableTracing) {
    var dom_1 = (0, _platformBrowser.ɵgetDOM)();
    router.events.subscribe(function (e) {
      dom_1.logGroup("Router Event: " + e.constructor.name);
      dom_1.log(e.toString());
      dom_1.log(e);
      dom_1.logGroupEnd();
    });
  }

  if (opts.onSameUrlNavigation) {
    router.onSameUrlNavigation = opts.onSameUrlNavigation;
  }

  if (opts.paramsInheritanceStrategy) {
    router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;
  }

  return router;
}

function rootRoute(router) {
  return router.routerState.root;
}
/**
 * To initialize the router properly we need to do in two steps:
 *
 * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if
 * a resolver or a guards executes asynchronously. Second, we need to actually run
 * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation
 * hook provided by the router to do that.
 *
 * The router navigation starts, reaches the point when preactivation is done, and then
 * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.
 */


var RouterInitializer =
/** @class */
function () {
  function RouterInitializer(injector) {
    this.injector = injector;
    this.initNavigation = false;
    this.resultOfPreactivationDone = new _rxjs.Subject();
  }

  RouterInitializer.prototype.appInitializer = function () {
    var _this = this;

    var p = this.injector.get(_common.LOCATION_INITIALIZED, Promise.resolve(null));
    return p.then(function () {
      var resolve = null;
      var res = new Promise(function (r) {
        return resolve = r;
      });

      var router = _this.injector.get(Router);

      var opts = _this.injector.get(ROUTER_CONFIGURATION);

      if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {
        resolve(true);
      } else if (opts.initialNavigation === 'disabled') {
        router.setUpLocationChangeListener();
        resolve(true);
      } else if (opts.initialNavigation === 'enabled') {
        router.hooks.afterPreactivation = function () {
          // only the initial navigation should be delayed
          if (!_this.initNavigation) {
            _this.initNavigation = true;
            resolve(true);
            return _this.resultOfPreactivationDone; // subsequent navigations should not be delayed
          } else {
            return (0, _rxjs.of)(null);
          }
        };

        router.initialNavigation();
      } else {
        throw new Error("Invalid initialNavigation options: '" + opts.initialNavigation + "'");
      }

      return res;
    });
  };

  RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {
    var opts = this.injector.get(ROUTER_CONFIGURATION);
    var preloader = this.injector.get(RouterPreloader);
    var router = this.injector.get(Router);
    var ref = this.injector.get(_core.ApplicationRef);

    if (bootstrappedComponentRef !== ref.components[0]) {
      return;
    }

    if (this.isLegacyEnabled(opts)) {
      router.initialNavigation();
    } else if (this.isLegacyDisabled(opts)) {
      router.setUpLocationChangeListener();
    }

    preloader.setUpPreloading();
    router.resetRootComponentType(ref.componentTypes[0]);
    this.resultOfPreactivationDone.next(null);
    this.resultOfPreactivationDone.complete();
  };

  RouterInitializer.prototype.isLegacyEnabled = function (opts) {
    return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true || opts.initialNavigation === undefined;
  };

  RouterInitializer.prototype.isLegacyDisabled = function (opts) {
    return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;
  };

  RouterInitializer.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  RouterInitializer.ctorParameters = function () {
    return [{
      type: _core.Injector
    }];
  };

  return RouterInitializer;
}();

exports.ɵangular_packages_router_router_g = RouterInitializer;

function getAppInitializer(r) {
  return r.appInitializer.bind(r);
}

function getBootstrapListener(r) {
  return r.bootstrapListener.bind(r);
}
/**
 * A token for the router initializer that will be called after the app is bootstrapped.
 *
 * @experimental
 */


var ROUTER_INITIALIZER = new _core.InjectionToken('Router Initializer');
exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;

function provideRouterInitializer() {
  return [RouterInitializer, {
    provide: _core.APP_INITIALIZER,
    multi: true,
    useFactory: getAppInitializer,
    deps: [RouterInitializer]
  }, {
    provide: ROUTER_INITIALIZER,
    useFactory: getBootstrapListener,
    deps: [RouterInitializer]
  }, {
    provide: _core.APP_BOOTSTRAP_LISTENER,
    multi: true,
    useExisting: ROUTER_INITIALIZER
  }];
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 */


var VERSION = new _core.Version('6.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */

exports.VERSION = VERSION;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ɵResourceLoaderImpl = exports.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = exports.ɵplatformCoreDynamic = exports.ɵCompilerImpl = exports.JitCompilerFactory = exports.VERSION = exports.platformBrowserDynamic = exports.RESOURCE_CACHE_PROVIDER = exports.ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a = void 0;

var _compiler = __webpack_require__(321);

var _core = __webpack_require__(0);

var _tslib = __webpack_require__(1);

var _common = __webpack_require__(10);

var _platformBrowser = __webpack_require__(50);

/**
 * @license Angular v6.0.0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var MODULE_SUFFIX = '';
var builtinExternalReferences = createBuiltinExternalReferencesMap();

var JitReflector =
/** @class */
function () {
  function JitReflector() {
    this.builtinExternalReferences = new Map();
    this.reflectionCapabilities = new _core.ɵReflectionCapabilities();
  }

  JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {
    var moduleId = cmpMetadata.moduleId;

    if (typeof moduleId === 'string') {
      var scheme = (0, _compiler.getUrlScheme)(moduleId);
      return scheme ? moduleId : "package:" + moduleId + MODULE_SUFFIX;
    } else if (moduleId !== null && moduleId !== void 0) {
      throw (0, _compiler.syntaxError)("moduleId should be a string in \"" + (0, _core.ɵstringify)(type) + "\". See https://goo.gl/wIDDiL for more information.\n" + "If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.");
    }

    return "./" + (0, _core.ɵstringify)(type);
  };

  JitReflector.prototype.parameters = function (typeOrFunc) {
    return this.reflectionCapabilities.parameters(typeOrFunc);
  };

  JitReflector.prototype.tryAnnotations = function (typeOrFunc) {
    return this.annotations(typeOrFunc);
  };

  JitReflector.prototype.annotations = function (typeOrFunc) {
    return this.reflectionCapabilities.annotations(typeOrFunc);
  };

  JitReflector.prototype.shallowAnnotations = function (typeOrFunc) {
    throw new Error('Not supported in JIT mode');
  };

  JitReflector.prototype.propMetadata = function (typeOrFunc) {
    return this.reflectionCapabilities.propMetadata(typeOrFunc);
  };

  JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {
    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);
  };

  JitReflector.prototype.guards = function (type) {
    return this.reflectionCapabilities.guards(type);
  };

  JitReflector.prototype.resolveExternalReference = function (ref) {
    return builtinExternalReferences.get(ref) || ref.runtime;
  };

  return JitReflector;
}();

function createBuiltinExternalReferencesMap() {
  var map = new Map();
  map.set(_compiler.Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, _core.ANALYZE_FOR_ENTRY_COMPONENTS);
  map.set(_compiler.Identifiers.ElementRef, _core.ElementRef);
  map.set(_compiler.Identifiers.NgModuleRef, _core.NgModuleRef);
  map.set(_compiler.Identifiers.ViewContainerRef, _core.ViewContainerRef);
  map.set(_compiler.Identifiers.ChangeDetectorRef, _core.ChangeDetectorRef);
  map.set(_compiler.Identifiers.QueryList, _core.QueryList);
  map.set(_compiler.Identifiers.TemplateRef, _core.TemplateRef);
  map.set(_compiler.Identifiers.CodegenComponentFactoryResolver, _core.ɵCodegenComponentFactoryResolver);
  map.set(_compiler.Identifiers.ComponentFactoryResolver, _core.ComponentFactoryResolver);
  map.set(_compiler.Identifiers.ComponentFactory, _core.ComponentFactory);
  map.set(_compiler.Identifiers.ComponentRef, _core.ComponentRef);
  map.set(_compiler.Identifiers.NgModuleFactory, _core.NgModuleFactory);
  map.set(_compiler.Identifiers.createModuleFactory, _core.ɵcmf);
  map.set(_compiler.Identifiers.moduleDef, _core.ɵmod);
  map.set(_compiler.Identifiers.moduleProviderDef, _core.ɵmpd);
  map.set(_compiler.Identifiers.RegisterModuleFactoryFn, _core.ɵregisterModuleFactory);
  map.set(_compiler.Identifiers.Injector, _core.Injector);
  map.set(_compiler.Identifiers.ViewEncapsulation, _core.ViewEncapsulation);
  map.set(_compiler.Identifiers.ChangeDetectionStrategy, _core.ChangeDetectionStrategy);
  map.set(_compiler.Identifiers.SecurityContext, _core.SecurityContext);
  map.set(_compiler.Identifiers.LOCALE_ID, _core.LOCALE_ID);
  map.set(_compiler.Identifiers.TRANSLATIONS_FORMAT, _core.TRANSLATIONS_FORMAT);
  map.set(_compiler.Identifiers.inlineInterpolate, _core.ɵinlineInterpolate);
  map.set(_compiler.Identifiers.interpolate, _core.ɵinterpolate);
  map.set(_compiler.Identifiers.EMPTY_ARRAY, _core.ɵEMPTY_ARRAY);
  map.set(_compiler.Identifiers.EMPTY_MAP, _core.ɵEMPTY_MAP);
  map.set(_compiler.Identifiers.Renderer, _core.Renderer);
  map.set(_compiler.Identifiers.viewDef, _core.ɵvid);
  map.set(_compiler.Identifiers.elementDef, _core.ɵeld);
  map.set(_compiler.Identifiers.anchorDef, _core.ɵand);
  map.set(_compiler.Identifiers.textDef, _core.ɵted);
  map.set(_compiler.Identifiers.directiveDef, _core.ɵdid);
  map.set(_compiler.Identifiers.providerDef, _core.ɵprd);
  map.set(_compiler.Identifiers.queryDef, _core.ɵqud);
  map.set(_compiler.Identifiers.pureArrayDef, _core.ɵpad);
  map.set(_compiler.Identifiers.pureObjectDef, _core.ɵpod);
  map.set(_compiler.Identifiers.purePipeDef, _core.ɵppd);
  map.set(_compiler.Identifiers.pipeDef, _core.ɵpid);
  map.set(_compiler.Identifiers.nodeValue, _core.ɵnov);
  map.set(_compiler.Identifiers.ngContentDef, _core.ɵncd);
  map.set(_compiler.Identifiers.unwrapValue, _core.ɵunv);
  map.set(_compiler.Identifiers.createRendererType2, _core.ɵcrt);
  map.set(_compiler.Identifiers.createComponentFactory, _core.ɵccf);
  return map;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ERROR_COLLECTOR_TOKEN = new _core.InjectionToken('ErrorCollector');
/**
 * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.
 */

var DEFAULT_PACKAGE_URL_PROVIDER = {
  provide: _core.PACKAGE_ROOT_URL,
  useValue: '/'
};
var _NO_RESOURCE_LOADER = {
  get: function get(url) {
    throw new Error("No ResourceLoader implementation has been provided. Can't read the url \"" + url + "\"");
  }
};
var baseHtmlParser = new _core.InjectionToken('HtmlParser');

var CompilerImpl =
/** @class */
function () {
  function CompilerImpl(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, compilerConfig, console) {
    this._metadataResolver = _metadataResolver;
    this._delegate = new _compiler.JitCompiler(_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));
    this.injector = injector;
  }

  CompilerImpl.prototype.getExtraNgModuleProviders = function () {
    return [this._metadataResolver.getProviderMetadata(new _compiler.ProviderMeta(_core.Compiler, {
      useValue: this
    }))];
  };

  CompilerImpl.prototype.compileModuleSync = function (moduleType) {
    return this._delegate.compileModuleSync(moduleType);
  };

  CompilerImpl.prototype.compileModuleAsync = function (moduleType) {
    return this._delegate.compileModuleAsync(moduleType);
  };

  CompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {
    var result = this._delegate.compileModuleAndAllComponentsSync(moduleType);

    return {
      ngModuleFactory: result.ngModuleFactory,
      componentFactories: result.componentFactories
    };
  };

  CompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {
    return this._delegate.compileModuleAndAllComponentsAsync(moduleType).then(function (result) {
      return {
        ngModuleFactory: result.ngModuleFactory,
        componentFactories: result.componentFactories
      };
    });
  };

  CompilerImpl.prototype.loadAotSummaries = function (summaries) {
    this._delegate.loadAotSummaries(summaries);
  };

  CompilerImpl.prototype.hasAotSummary = function (ref) {
    return this._delegate.hasAotSummary(ref);
  };

  CompilerImpl.prototype.getComponentFactory = function (component) {
    return this._delegate.getComponentFactory(component);
  };

  CompilerImpl.prototype.clearCache = function () {
    this._delegate.clearCache();
  };

  CompilerImpl.prototype.clearCacheFor = function (type) {
    this._delegate.clearCacheFor(type);
  };

  return CompilerImpl;
}();
/**
 * A set of providers that provide `JitCompiler` and its dependencies to use for
 * template compilation.
 */


exports.ɵCompilerImpl = CompilerImpl;
var COMPILER_PROVIDERS = [{
  provide: _compiler.CompileReflector,
  useValue: new JitReflector()
}, {
  provide: _compiler.ResourceLoader,
  useValue: _NO_RESOURCE_LOADER
}, {
  provide: _compiler.JitSummaryResolver,
  deps: []
}, {
  provide: _compiler.SummaryResolver,
  useExisting: _compiler.JitSummaryResolver
}, {
  provide: _core.ɵConsole,
  deps: []
}, {
  provide: _compiler.Lexer,
  deps: []
}, {
  provide: _compiler.Parser,
  deps: [_compiler.Lexer]
}, {
  provide: baseHtmlParser,
  useClass: _compiler.HtmlParser,
  deps: []
}, {
  provide: _compiler.I18NHtmlParser,
  useFactory: function useFactory(parser, translations, format, config, console) {
    translations = translations || '';
    var missingTranslation = translations ? config.missingTranslation : _core.MissingTranslationStrategy.Ignore;
    return new _compiler.I18NHtmlParser(parser, translations, format, missingTranslation, console);
  },
  deps: [baseHtmlParser, [new _core.Optional(), new _core.Inject(_core.TRANSLATIONS)], [new _core.Optional(), new _core.Inject(_core.TRANSLATIONS_FORMAT)], [_compiler.CompilerConfig], [_core.ɵConsole]]
}, {
  provide: _compiler.HtmlParser,
  useExisting: _compiler.I18NHtmlParser
}, {
  provide: _compiler.TemplateParser,
  deps: [_compiler.CompilerConfig, _compiler.CompileReflector, _compiler.Parser, _compiler.ElementSchemaRegistry, _compiler.I18NHtmlParser, _core.ɵConsole]
}, {
  provide: _compiler.DirectiveNormalizer,
  deps: [_compiler.ResourceLoader, _compiler.UrlResolver, _compiler.HtmlParser, _compiler.CompilerConfig]
}, {
  provide: _compiler.CompileMetadataResolver,
  deps: [_compiler.CompilerConfig, _compiler.HtmlParser, _compiler.NgModuleResolver, _compiler.DirectiveResolver, _compiler.PipeResolver, _compiler.SummaryResolver, _compiler.ElementSchemaRegistry, _compiler.DirectiveNormalizer, _core.ɵConsole, [_core.Optional, _compiler.StaticSymbolCache], _compiler.CompileReflector, [_core.Optional, ERROR_COLLECTOR_TOKEN]]
}, DEFAULT_PACKAGE_URL_PROVIDER, {
  provide: _compiler.StyleCompiler,
  deps: [_compiler.UrlResolver]
}, {
  provide: _compiler.ViewCompiler,
  deps: [_compiler.CompileReflector]
}, {
  provide: _compiler.NgModuleCompiler,
  deps: [_compiler.CompileReflector]
}, {
  provide: _compiler.CompilerConfig,
  useValue: new _compiler.CompilerConfig()
}, {
  provide: _core.Compiler,
  useClass: CompilerImpl,
  deps: [_core.Injector, _compiler.CompileMetadataResolver, _compiler.TemplateParser, _compiler.StyleCompiler, _compiler.ViewCompiler, _compiler.NgModuleCompiler, _compiler.SummaryResolver, _compiler.CompileReflector, _compiler.CompilerConfig, _core.ɵConsole]
}, {
  provide: _compiler.DomElementSchemaRegistry,
  deps: []
}, {
  provide: _compiler.ElementSchemaRegistry,
  useExisting: _compiler.DomElementSchemaRegistry
}, {
  provide: _compiler.UrlResolver,
  deps: [_core.PACKAGE_ROOT_URL]
}, {
  provide: _compiler.DirectiveResolver,
  deps: [_compiler.CompileReflector]
}, {
  provide: _compiler.PipeResolver,
  deps: [_compiler.CompileReflector]
}, {
  provide: _compiler.NgModuleResolver,
  deps: [_compiler.CompileReflector]
}];
/**
 * @experimental
 */

var JitCompilerFactory =
/** @class */
function () {
  /* @internal */
  function JitCompilerFactory(defaultOptions) {
    var compilerOptions = {
      useJit: true,
      defaultEncapsulation: _core.ViewEncapsulation.Emulated,
      missingTranslation: _core.MissingTranslationStrategy.Warning
    };
    this._defaultOptions = (0, _tslib.__spread)([compilerOptions], defaultOptions);
  }

  JitCompilerFactory.prototype.createCompiler = function (options) {
    if (options === void 0) {
      options = [];
    }

    var opts = _mergeOptions(this._defaultOptions.concat(options));

    var injector = _core.Injector.create([COMPILER_PROVIDERS, {
      provide: _compiler.CompilerConfig,
      useFactory: function useFactory() {
        return new _compiler.CompilerConfig({
          // let explicit values from the compiler options overwrite options
          // from the app providers
          useJit: opts.useJit,
          jitDevMode: (0, _core.isDevMode)(),
          // let explicit values from the compiler options overwrite options
          // from the app providers
          defaultEncapsulation: opts.defaultEncapsulation,
          missingTranslation: opts.missingTranslation,
          preserveWhitespaces: opts.preserveWhitespaces
        });
      },
      deps: []
    }, opts.providers]);

    return injector.get(_core.Compiler);
  };

  return JitCompilerFactory;
}();

exports.JitCompilerFactory = JitCompilerFactory;

function _mergeOptions(optionsArr) {
  return {
    useJit: _lastDefined(optionsArr.map(function (options) {
      return options.useJit;
    })),
    defaultEncapsulation: _lastDefined(optionsArr.map(function (options) {
      return options.defaultEncapsulation;
    })),
    providers: _mergeArrays(optionsArr.map(function (options) {
      return options.providers;
    })),
    missingTranslation: _lastDefined(optionsArr.map(function (options) {
      return options.missingTranslation;
    })),
    preserveWhitespaces: _lastDefined(optionsArr.map(function (options) {
      return options.preserveWhitespaces;
    }))
  };
}

function _lastDefined(args) {
  for (var i = args.length - 1; i >= 0; i--) {
    if (args[i] !== undefined) {
      return args[i];
    }
  }

  return undefined;
}

function _mergeArrays(parts) {
  var result = [];
  parts.forEach(function (part) {
    return part && result.push.apply(result, (0, _tslib.__spread)(part));
  });
  return result;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A platform that included corePlatform and the compiler.
 *
 * @experimental
 */


var platformCoreDynamic = (0, _core.createPlatformFactory)(_core.platformCore, 'coreDynamic', [{
  provide: _core.COMPILER_OPTIONS,
  useValue: {},
  multi: true
}, {
  provide: _core.CompilerFactory,
  useClass: JitCompilerFactory,
  deps: [_core.COMPILER_OPTIONS]
}]);
exports.ɵplatformCoreDynamic = platformCoreDynamic;

var ResourceLoaderImpl =
/** @class */
function (_super) {
  (0, _tslib.__extends)(ResourceLoaderImpl, _super);

  function ResourceLoaderImpl() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  ResourceLoaderImpl.prototype.get = function (url) {
    var resolve;
    var reject;
    var promise = new Promise(function (res, rej) {
      resolve = res;
      reject = rej;
    });
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'text';

    xhr.onload = function () {
      // responseText is the old-school way of retrieving response (supported by IE8 & 9)
      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported
      // by IE10)
      var response = xhr.response || xhr.responseText; // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)

      var status = xhr.status === 1223 ? 204 : xhr.status; // fix status code when it is 0 (0 status is undocumented).
      // Occurs when accessing file resources or on Android 4.1 stock browser
      // while retrieving files from application cache.

      if (status === 0) {
        status = response ? 200 : 0;
      }

      if (200 <= status && status <= 300) {
        resolve(response);
      } else {
        reject("Failed to load " + url);
      }
    };

    xhr.onerror = function () {
      reject("Failed to load " + url);
    };

    xhr.send();
    return promise;
  };

  ResourceLoaderImpl.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  ResourceLoaderImpl.ctorParameters = function () {
    return [];
  };

  return ResourceLoaderImpl;
}(_compiler.ResourceLoader);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵResourceLoaderImpl = ResourceLoaderImpl;
var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [_platformBrowser.ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, {
  provide: _core.COMPILER_OPTIONS,
  useValue: {
    providers: [{
      provide: _compiler.ResourceLoader,
      useClass: ResourceLoaderImpl,
      deps: []
    }]
  },
  multi: true
}, {
  provide: _core.PLATFORM_ID,
  useValue: _common.ɵPLATFORM_BROWSER_ID
}];
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An implementation of ResourceLoader that uses a template cache to avoid doing an actual
 * ResourceLoader.
 *
 * The template cache needs to be built and loaded into window.$templateCache
 * via a separate mechanism.
 */

exports.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS;

var CachedResourceLoader =
/** @class */
function (_super) {
  (0, _tslib.__extends)(CachedResourceLoader, _super);

  function CachedResourceLoader() {
    var _this = _super.call(this) || this;

    _this._cache = _core.ɵglobal.$templateCache;

    if (_this._cache == null) {
      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');
    }

    return _this;
  }

  CachedResourceLoader.prototype.get = function (url) {
    if (this._cache.hasOwnProperty(url)) {
      return Promise.resolve(this._cache[url]);
    } else {
      return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);
    }
  };

  return CachedResourceLoader;
}(_compiler.ResourceLoader);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 *
 */


exports.ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a = CachedResourceLoader;
var VERSION = new _core.Version('6.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @experimental
 */

exports.VERSION = VERSION;
var RESOURCE_CACHE_PROVIDER = [{
  provide: _compiler.ResourceLoader,
  useClass: CachedResourceLoader,
  deps: []
}];
/**
 *
 */

exports.RESOURCE_CACHE_PROVIDER = RESOURCE_CACHE_PROVIDER;
var platformBrowserDynamic = (0, _core.createPlatformFactory)(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */

exports.platformBrowserDynamic = platformBrowserDynamic;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbButtonLabel = void 0;

var _core = __webpack_require__(0);

var NgbButtonLabel =
/** @class */
function () {
  function NgbButtonLabel() {}

  NgbButtonLabel.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbButtonLabel]',
      host: {
        '[class.btn]': 'true',
        '[class.active]': 'active',
        '[class.disabled]': 'disabled',
        '[class.focus]': 'focused'
      }
    }]
  }];
  return NgbButtonLabel;
}();

exports.NgbButtonLabel = NgbButtonLabel;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerService = void 0;

var _ngbCalendar = __webpack_require__(52);

var _ngbDate = __webpack_require__(35);

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var _rxjs = __webpack_require__(31);

var _datepickerTools = __webpack_require__(148);

var _operators = __webpack_require__(33);

var _datepickerI18n = __webpack_require__(51);

var NgbDatepickerService =
/** @class */
function () {
  function NgbDatepickerService(_calendar, _i18n) {
    this._calendar = _calendar;
    this._i18n = _i18n;
    this._model$ = new _rxjs.Subject();
    this._select$ = new _rxjs.Subject();
    this._state = {
      disabled: false,
      displayMonths: 1,
      firstDayOfWeek: 1,
      focusVisible: false,
      months: [],
      navigation: 'select',
      outsideDays: 'visible',
      prevDisabled: false,
      nextDisabled: false,
      selectBoxes: {
        years: [],
        months: []
      },
      selectedDate: null
    };
  }

  Object.defineProperty(NgbDatepickerService.prototype, "model$", {
    get: function get() {
      return this._model$.pipe((0, _operators.filter)(function (model) {
        return model.months.length > 0;
      }));
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "select$", {
    get: function get() {
      return this._select$.pipe((0, _operators.filter)(function (date) {
        return date !== null;
      }));
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "disabled", {
    set: function set(disabled) {
      if (this._state.disabled !== disabled) {
        this._nextState({
          disabled: disabled
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "displayMonths", {
    set: function set(displayMonths) {
      displayMonths = (0, _util.toInteger)(displayMonths);

      if ((0, _util.isInteger)(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {
        this._nextState({
          displayMonths: displayMonths
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "firstDayOfWeek", {
    set: function set(firstDayOfWeek) {
      firstDayOfWeek = (0, _util.toInteger)(firstDayOfWeek);

      if ((0, _util.isInteger)(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {
        this._nextState({
          firstDayOfWeek: firstDayOfWeek
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "focusVisible", {
    set: function set(focusVisible) {
      if (this._state.focusVisible !== focusVisible && !this._state.disabled) {
        this._nextState({
          focusVisible: focusVisible
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "maxDate", {
    set: function set(date) {
      var maxDate = this.toValidDate(date, null);

      if ((0, _datepickerTools.isChangedDate)(this._state.maxDate, maxDate)) {
        this._nextState({
          maxDate: maxDate
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "markDisabled", {
    set: function set(markDisabled) {
      if (this._state.markDisabled !== markDisabled) {
        this._nextState({
          markDisabled: markDisabled
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "minDate", {
    set: function set(date) {
      var minDate = this.toValidDate(date, null);

      if ((0, _datepickerTools.isChangedDate)(this._state.minDate, minDate)) {
        this._nextState({
          minDate: minDate
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "navigation", {
    set: function set(navigation) {
      if (this._state.navigation !== navigation) {
        this._nextState({
          navigation: navigation
        });
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbDatepickerService.prototype, "outsideDays", {
    set: function set(outsideDays) {
      if (this._state.outsideDays !== outsideDays) {
        this._nextState({
          outsideDays: outsideDays
        });
      }
    },
    enumerable: true,
    configurable: true
  });

  NgbDatepickerService.prototype.focus = function (date) {
    if (!this._state.disabled && this._calendar.isValid(date) && (0, _datepickerTools.isChangedDate)(this._state.focusDate, date)) {
      this._nextState({
        focusDate: date
      });
    }
  };

  NgbDatepickerService.prototype.focusMove = function (period, number) {
    this.focus(this._calendar.getNext(this._state.focusDate, period, number));
  };

  NgbDatepickerService.prototype.focusSelect = function () {
    if ((0, _datepickerTools.isDateSelectable)(this._state.focusDate, this._state)) {
      this.select(this._state.focusDate, {
        emitEvent: true
      });
    }
  };

  NgbDatepickerService.prototype.open = function (date) {
    var firstDate = this.toValidDate(date, this._calendar.getToday());

    if (!this._state.disabled) {
      this._nextState({
        firstDate: firstDate
      });
    }
  };

  NgbDatepickerService.prototype.select = function (date, options) {
    if (options === void 0) {
      options = {};
    }

    var selectedDate = this.toValidDate(date, null);

    if (!this._state.disabled) {
      if ((0, _datepickerTools.isChangedDate)(this._state.selectedDate, selectedDate)) {
        this._nextState({
          selectedDate: selectedDate
        });
      }

      if (options.emitEvent && (0, _datepickerTools.isDateSelectable)(selectedDate, this._state)) {
        this._select$.next(selectedDate);
      }
    }
  };

  NgbDatepickerService.prototype.toValidDate = function (date, defaultValue) {
    var ngbDate = _ngbDate.NgbDate.from(date);

    if (defaultValue === undefined) {
      defaultValue = this._calendar.getToday();
    }

    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;
  };

  NgbDatepickerService.prototype._nextState = function (patch) {
    var newState = this._updateState(patch);

    this._patchContexts(newState);

    this._state = newState;

    this._model$.next(this._state);
  };

  NgbDatepickerService.prototype._patchContexts = function (state) {
    var months = state.months,
        displayMonths = state.displayMonths,
        selectedDate = state.selectedDate,
        focusDate = state.focusDate,
        focusVisible = state.focusVisible,
        disabled = state.disabled,
        outsideDays = state.outsideDays;
    state.months.forEach(function (month) {
      month.weeks.forEach(function (week) {
        week.days.forEach(function (day) {
          // patch focus flag
          if (focusDate) {
            day.context.focused = focusDate.equals(day.date) && focusVisible;
          } // calculating tabindex


          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1; // override context disabled

          if (disabled === true) {
            day.context.disabled = true;
          } // patch selection flag


          if (selectedDate !== undefined) {
            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);
          } // visibility


          if (month.number !== day.date.month) {
            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);
          }
        });
      });
    });
  };

  NgbDatepickerService.prototype._updateState = function (patch) {
    // patching fields
    var state = Object.assign({}, this._state, patch);
    var startDate = state.firstDate; // min/max dates changed

    if ('minDate' in patch || 'maxDate' in patch) {
      (0, _datepickerTools.checkMinBeforeMax)(state.minDate, state.maxDate);
      state.focusDate = (0, _datepickerTools.checkDateInRange)(state.focusDate, state.minDate, state.maxDate);
      state.firstDate = (0, _datepickerTools.checkDateInRange)(state.firstDate, state.minDate, state.maxDate);
      startDate = state.focusDate;
    } // disabled


    if ('disabled' in patch) {
      state.focusVisible = false;
    } // initial rebuild via 'select()'


    if ('selectedDate' in patch && this._state.months.length === 0) {
      startDate = state.selectedDate;
    } // focus date changed


    if ('focusDate' in patch) {
      state.focusDate = (0, _datepickerTools.checkDateInRange)(state.focusDate, state.minDate, state.maxDate);
      startDate = state.focusDate; // nothing to rebuild if only focus changed and it is still visible

      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {
        return state;
      }
    } // first date changed


    if ('firstDate' in patch) {
      state.firstDate = (0, _datepickerTools.checkDateInRange)(state.firstDate, state.minDate, state.maxDate);
      startDate = state.firstDate;
    } // rebuilding months


    if (startDate) {
      var forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;
      var months = (0, _datepickerTools.buildMonths)(this._calendar, startDate, state, this._i18n, forceRebuild); // updating months and boundary dates

      state.months = months;
      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;
      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined; // reset selected date if 'markDisabled' returns true

      if ('selectedDate' in patch && !(0, _datepickerTools.isDateSelectable)(state.selectedDate, state)) {
        state.selectedDate = null;
      } // adjusting focus after months were built


      if ('firstDate' in patch) {
        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {
          state.focusDate = startDate;
        }
      } // adjusting months/years for the select box navigation


      var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;
      var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;

      if (state.navigation === 'select') {
        // years ->  boundaries (min/max were changed)
        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {
          state.selectBoxes.years = (0, _datepickerTools.generateSelectBoxYears)(state.firstDate, state.minDate, state.maxDate);
        } // months -> when current year or boundaries change


        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {
          state.selectBoxes.months = (0, _datepickerTools.generateSelectBoxMonths)(this._calendar, state.firstDate, state.minDate, state.maxDate);
        }
      } else {
        state.selectBoxes = {
          years: [],
          months: []
        };
      } // updating navigation arrows -> boundaries change (min/max) or month/year changes


      if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {
        state.prevDisabled = state.disabled || (0, _datepickerTools.prevMonthDisabled)(this._calendar, state.firstDate, state.minDate);
        state.nextDisabled = state.disabled || (0, _datepickerTools.nextMonthDisabled)(this._calendar, state.lastDate, state.maxDate);
      }
    }

    return state;
  };

  NgbDatepickerService.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  NgbDatepickerService.ctorParameters = function () {
    return [{
      type: _ngbCalendar.NgbCalendar
    }, {
      type: _datepickerI18n.NgbDatepickerI18n
    }];
  };

  return NgbDatepickerService;
}();

exports.NgbDatepickerService = NgbDatepickerService;

/***/ }),
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReplaySubject = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _queue = __webpack_require__(230);

var _Subscription = __webpack_require__(15);

var _observeOn = __webpack_require__(225);

var _ObjectUnsubscribedError = __webpack_require__(100);

var _SubjectSubscription = __webpack_require__(214);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */
var ReplaySubject =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ReplaySubject, _super);

  function ReplaySubject(bufferSize, windowTime, scheduler) {
    if (bufferSize === void 0) {
      bufferSize = Number.POSITIVE_INFINITY;
    }

    if (windowTime === void 0) {
      windowTime = Number.POSITIVE_INFINITY;
    }

    var _this = _super.call(this) || this;

    _this.scheduler = scheduler;
    _this._events = [];
    _this._infiniteTimeWindow = false;
    _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
    _this._windowTime = windowTime < 1 ? 1 : windowTime;

    if (windowTime === Number.POSITIVE_INFINITY) {
      _this._infiniteTimeWindow = true;
      _this.next = _this.nextInfiniteTimeWindow;
    } else {
      _this.next = _this.nextTimeWindow;
    }

    return _this;
  }

  ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
    var _events = this._events;

    _events.push(value);

    if (_events.length > this._bufferSize) {
      _events.shift();
    }

    _super.prototype.next.call(this, value);
  };

  ReplaySubject.prototype.nextTimeWindow = function (value) {
    this._events.push(new ReplayEvent(this._getNow(), value));

    this._trimBufferThenGetEvents();

    _super.prototype.next.call(this, value);
  };

  ReplaySubject.prototype._subscribe = function (subscriber) {
    var _infiniteTimeWindow = this._infiniteTimeWindow;

    var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();

    var scheduler = this.scheduler;
    var len = _events.length;
    var subscription;

    if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    } else if (this.isStopped || this.hasError) {
      subscription = _Subscription.Subscription.EMPTY;
    } else {
      this.observers.push(subscriber);
      subscription = new _SubjectSubscription.SubjectSubscription(this, subscriber);
    }

    if (scheduler) {
      subscriber.add(subscriber = new _observeOn.ObserveOnSubscriber(subscriber, scheduler));
    }

    if (_infiniteTimeWindow) {
      for (var i = 0; i < len && !subscriber.closed; i++) {
        subscriber.next(_events[i]);
      }
    } else {
      for (var i = 0; i < len && !subscriber.closed; i++) {
        subscriber.next(_events[i].value);
      }
    }

    if (this.hasError) {
      subscriber.error(this.thrownError);
    } else if (this.isStopped) {
      subscriber.complete();
    }

    return subscription;
  };

  ReplaySubject.prototype._getNow = function () {
    return (this.scheduler || _queue.queue).now();
  };

  ReplaySubject.prototype._trimBufferThenGetEvents = function () {
    var now = this._getNow();

    var _bufferSize = this._bufferSize;
    var _windowTime = this._windowTime;
    var _events = this._events;
    var eventsCount = _events.length;
    var spliceCount = 0;

    while (spliceCount < eventsCount) {
      if (now - _events[spliceCount].time < _windowTime) {
        break;
      }

      spliceCount++;
    }

    if (eventsCount > _bufferSize) {
      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
    }

    if (spliceCount > 0) {
      _events.splice(0, spliceCount);
    }

    return _events;
  };

  return ReplaySubject;
}(_Subject.Subject);

exports.ReplaySubject = ReplaySubject;

var ReplayEvent =
/*@__PURE__*/
function () {
  function ReplayEvent(time, value) {
    this.time = time;
    this.value = value;
  }

  return ReplayEvent;
}();

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineLatest = combineLatest;
exports.CombineLatestSubscriber = exports.CombineLatestOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _isScheduler = __webpack_require__(27);

var _isArray = __webpack_require__(20);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

var _fromArray = __webpack_require__(46);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */
var NONE = {};

function combineLatest() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var resultSelector = null;
  var scheduler = null;

  if ((0, _isScheduler.isScheduler)(observables[observables.length - 1])) {
    scheduler = observables.pop();
  }

  if (typeof observables[observables.length - 1] === 'function') {
    resultSelector = observables.pop();
  }

  if (observables.length === 1 && (0, _isArray.isArray)(observables[0])) {
    observables = observables[0];
  }

  return (0, _fromArray.fromArray)(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}

var CombineLatestOperator =
/*@__PURE__*/
function () {
  function CombineLatestOperator(resultSelector) {
    this.resultSelector = resultSelector;
  }

  CombineLatestOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
  };

  return CombineLatestOperator;
}();

exports.CombineLatestOperator = CombineLatestOperator;

var CombineLatestSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(CombineLatestSubscriber, _super);

  function CombineLatestSubscriber(destination, resultSelector) {
    var _this = _super.call(this, destination) || this;

    _this.resultSelector = resultSelector;
    _this.active = 0;
    _this.values = [];
    _this.observables = [];
    return _this;
  }

  CombineLatestSubscriber.prototype._next = function (observable) {
    this.values.push(NONE);
    this.observables.push(observable);
  };

  CombineLatestSubscriber.prototype._complete = function () {
    var observables = this.observables;
    var len = observables.length;

    if (len === 0) {
      this.destination.complete();
    } else {
      this.active = len;
      this.toRespond = len;

      for (var i = 0; i < len; i++) {
        var observable = observables[i];
        this.add((0, _subscribeToResult.subscribeToResult)(this, observable, observable, i));
      }
    }
  };

  CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
    if ((this.active -= 1) === 0) {
      this.destination.complete();
    }
  };

  CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var values = this.values;
    var oldVal = values[outerIndex];
    var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;
    values[outerIndex] = innerValue;

    if (toRespond === 0) {
      if (this.resultSelector) {
        this._tryResultSelector(values);
      } else {
        this.destination.next(values.slice());
      }
    }
  };

  CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
    var result;

    try {
      result = this.resultSelector.apply(this, values);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return CombineLatestSubscriber;
}(_OuterSubscriber.OuterSubscriber);

exports.CombineLatestSubscriber = CombineLatestSubscriber;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defer = defer;

var _Observable = __webpack_require__(5);

var _from = __webpack_require__(38);

var _empty = __webpack_require__(23);

/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */
function defer(observableFactory) {
  return new _Observable.Observable(function (subscriber) {
    var input;

    try {
      input = observableFactory();
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var source = input ? (0, _from.from)(input) : (0, _empty.empty)();
    return source.subscribe(subscriber);
  });
}

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.of = of;

var _isScheduler = __webpack_require__(27);

var _fromArray = __webpack_require__(46);

var _empty = __webpack_require__(23);

var _scalar = __webpack_require__(129);

/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */
function of() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var scheduler = args[args.length - 1];

  if ((0, _isScheduler.isScheduler)(scheduler)) {
    args.pop();
  } else {
    scheduler = undefined;
  }

  switch (args.length) {
    case 0:
      return (0, _empty.empty)(scheduler);

    case 1:
      return scheduler ? (0, _fromArray.fromArray)(args, scheduler) : (0, _scalar.scalar)(args[0]);

    default:
      return (0, _fromArray.fromArray)(args, scheduler);
  }
}

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scalar = scalar;

var _Observable = __webpack_require__(5);

/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */
function scalar(value) {
  var result = new _Observable.Observable(function (subscriber) {
    subscriber.next(value);
    subscriber.complete();
  });
  result._isScalar = true;
  result.value = value;
  return result;
}

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throwError = throwError;

var _Observable = __webpack_require__(5);

/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */
function throwError(error, scheduler) {
  if (!scheduler) {
    return new _Observable.Observable(function (subscriber) {
      return subscriber.error(error);
    });
  } else {
    return new _Observable.Observable(function (subscriber) {
      return scheduler.schedule(dispatch, 0, {
        error: error,
        subscriber: subscriber
      });
    });
  }
}

function dispatch(_a) {
  var error = _a.error,
      subscriber = _a.subscriber;
  subscriber.error(error);
}

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zip = zip;
exports.ZipSubscriber = exports.ZipOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _fromArray = __webpack_require__(46);

var _isArray = __webpack_require__(20);

var _Subscriber = __webpack_require__(3);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

var _iterator = __webpack_require__(77);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */
function zip() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var resultSelector = observables[observables.length - 1];

  if (typeof resultSelector === 'function') {
    observables.pop();
  }

  return (0, _fromArray.fromArray)(observables, undefined).lift(new ZipOperator(resultSelector));
}

var ZipOperator =
/*@__PURE__*/
function () {
  function ZipOperator(resultSelector) {
    this.resultSelector = resultSelector;
  }

  ZipOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
  };

  return ZipOperator;
}();

exports.ZipOperator = ZipOperator;

var ZipSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ZipSubscriber, _super);

  function ZipSubscriber(destination, resultSelector, values) {
    if (values === void 0) {
      values = Object.create(null);
    }

    var _this = _super.call(this, destination) || this;

    _this.iterators = [];
    _this.active = 0;
    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : null;
    _this.values = values;
    return _this;
  }

  ZipSubscriber.prototype._next = function (value) {
    var iterators = this.iterators;

    if ((0, _isArray.isArray)(value)) {
      iterators.push(new StaticArrayIterator(value));
    } else if (typeof value[_iterator.iterator] === 'function') {
      iterators.push(new StaticIterator(value[_iterator.iterator]()));
    } else {
      iterators.push(new ZipBufferIterator(this.destination, this, value));
    }
  };

  ZipSubscriber.prototype._complete = function () {
    var iterators = this.iterators;
    var len = iterators.length;

    if (len === 0) {
      this.destination.complete();
      return;
    }

    this.active = len;

    for (var i = 0; i < len; i++) {
      var iterator = iterators[i];

      if (iterator.stillUnsubscribed) {
        this.add(iterator.subscribe(iterator, i));
      } else {
        this.active--;
      }
    }
  };

  ZipSubscriber.prototype.notifyInactive = function () {
    this.active--;

    if (this.active === 0) {
      this.destination.complete();
    }
  };

  ZipSubscriber.prototype.checkIterators = function () {
    var iterators = this.iterators;
    var len = iterators.length;
    var destination = this.destination;

    for (var i = 0; i < len; i++) {
      var iterator = iterators[i];

      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
        return;
      }
    }

    var shouldComplete = false;
    var args = [];

    for (var i = 0; i < len; i++) {
      var iterator = iterators[i];
      var result = iterator.next();

      if (iterator.hasCompleted()) {
        shouldComplete = true;
      }

      if (result.done) {
        destination.complete();
        return;
      }

      args.push(result.value);
    }

    if (this.resultSelector) {
      this._tryresultSelector(args);
    } else {
      destination.next(args);
    }

    if (shouldComplete) {
      destination.complete();
    }
  };

  ZipSubscriber.prototype._tryresultSelector = function (args) {
    var result;

    try {
      result = this.resultSelector.apply(this, args);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return ZipSubscriber;
}(_Subscriber.Subscriber);

exports.ZipSubscriber = ZipSubscriber;

var StaticIterator =
/*@__PURE__*/
function () {
  function StaticIterator(iterator) {
    this.iterator = iterator;
    this.nextResult = iterator.next();
  }

  StaticIterator.prototype.hasValue = function () {
    return true;
  };

  StaticIterator.prototype.next = function () {
    var result = this.nextResult;
    this.nextResult = this.iterator.next();
    return result;
  };

  StaticIterator.prototype.hasCompleted = function () {
    var nextResult = this.nextResult;
    return nextResult && nextResult.done;
  };

  return StaticIterator;
}();

var StaticArrayIterator =
/*@__PURE__*/
function () {
  function StaticArrayIterator(array) {
    this.array = array;
    this.index = 0;
    this.length = 0;
    this.length = array.length;
  }

  StaticArrayIterator.prototype[_iterator.iterator] = function () {
    return this;
  };

  StaticArrayIterator.prototype.next = function (value) {
    var i = this.index++;
    var array = this.array;
    return i < this.length ? {
      value: array[i],
      done: false
    } : {
      value: null,
      done: true
    };
  };

  StaticArrayIterator.prototype.hasValue = function () {
    return this.array.length > this.index;
  };

  StaticArrayIterator.prototype.hasCompleted = function () {
    return this.array.length === this.index;
  };

  return StaticArrayIterator;
}();

var ZipBufferIterator =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ZipBufferIterator, _super);

  function ZipBufferIterator(destination, parent, observable) {
    var _this = _super.call(this, destination) || this;

    _this.parent = parent;
    _this.observable = observable;
    _this.stillUnsubscribed = true;
    _this.buffer = [];
    _this.isComplete = false;
    return _this;
  }

  ZipBufferIterator.prototype[_iterator.iterator] = function () {
    return this;
  };

  ZipBufferIterator.prototype.next = function () {
    var buffer = this.buffer;

    if (buffer.length === 0 && this.isComplete) {
      return {
        value: null,
        done: true
      };
    } else {
      return {
        value: buffer.shift(),
        done: false
      };
    }
  };

  ZipBufferIterator.prototype.hasValue = function () {
    return this.buffer.length > 0;
  };

  ZipBufferIterator.prototype.hasCompleted = function () {
    return this.buffer.length === 0 && this.isComplete;
  };

  ZipBufferIterator.prototype.notifyComplete = function () {
    if (this.buffer.length > 0) {
      this.isComplete = true;
      this.parent.notifyInactive();
    } else {
      this.destination.complete();
    }
  };

  ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.buffer.push(innerValue);
    this.parent.checkIterators();
  };

  ZipBufferIterator.prototype.subscribe = function (value, index) {
    return (0, _subscribeToResult.subscribeToResult)(this, this.observable, this, index);
  };

  return ZipBufferIterator;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeAll = mergeAll;

var _mergeMap = __webpack_require__(97);

var _identity = __webpack_require__(62);

/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */
function mergeAll(concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  return (0, _mergeMap.mergeMap)(_identity.identity, concurrent);
}

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.refCount = refCount;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function refCount() {
  return function refCountOperatorFunction(source) {
    return source.lift(new RefCountOperator(source));
  };
}

var RefCountOperator =
/*@__PURE__*/
function () {
  function RefCountOperator(connectable) {
    this.connectable = connectable;
  }

  RefCountOperator.prototype.call = function (subscriber, source) {
    var connectable = this.connectable;
    connectable._refCount++;
    var refCounter = new RefCountSubscriber(subscriber, connectable);
    var subscription = source.subscribe(refCounter);

    if (!refCounter.closed) {
      refCounter.connection = connectable.connect();
    }

    return subscription;
  };

  return RefCountOperator;
}();

var RefCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(RefCountSubscriber, _super);

  function RefCountSubscriber(destination, connectable) {
    var _this = _super.call(this, destination) || this;

    _this.connectable = connectable;
    return _this;
  }

  RefCountSubscriber.prototype._unsubscribe = function () {
    var connectable = this.connectable;

    if (!connectable) {
      this.connection = null;
      return;
    }

    this.connectable = null;
    var refCount = connectable._refCount;

    if (refCount <= 0) {
      this.connection = null;
      return;
    }

    connectable._refCount = refCount - 1;

    if (refCount > 1) {
      this.connection = null;
      return;
    }

    var connection = this.connection;
    var sharedConnection = connectable._connection;
    this.connection = null;

    if (sharedConnection && (!connection || sharedConnection === connection)) {
      sharedConnection.unsubscribe();
    }
  };

  return RefCountSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scan = scan;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function scan(accumulator, seed) {
  var hasSeed = false;

  if (arguments.length >= 2) {
    hasSeed = true;
  }

  return function scanOperatorFunction(source) {
    return source.lift(new ScanOperator(accumulator, seed, hasSeed));
  };
}

var ScanOperator =
/*@__PURE__*/
function () {
  function ScanOperator(accumulator, seed, hasSeed) {
    if (hasSeed === void 0) {
      hasSeed = false;
    }

    this.accumulator = accumulator;
    this.seed = seed;
    this.hasSeed = hasSeed;
  }

  ScanOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
  };

  return ScanOperator;
}();

var ScanSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ScanSubscriber, _super);

  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
    var _this = _super.call(this, destination) || this;

    _this.accumulator = accumulator;
    _this._seed = _seed;
    _this.hasSeed = hasSeed;
    _this.index = 0;
    return _this;
  }

  Object.defineProperty(ScanSubscriber.prototype, "seed", {
    get: function get() {
      return this._seed;
    },
    set: function set(value) {
      this.hasSeed = true;
      this._seed = value;
    },
    enumerable: true,
    configurable: true
  });

  ScanSubscriber.prototype._next = function (value) {
    if (!this.hasSeed) {
      this.seed = value;
      this.destination.next(value);
    } else {
      return this._tryNext(value);
    }
  };

  ScanSubscriber.prototype._tryNext = function (value) {
    var index = this.index++;
    var result;

    try {
      result = this.accumulator(this.seed, value, index);
    } catch (err) {
      this.destination.error(err);
    }

    this.seed = result;
    this.destination.next(result);
  };

  return ScanSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchMap = switchMap;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

var _map = __webpack_require__(25);

var _from = __webpack_require__(38);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */
function switchMap(project, resultSelector) {
  if (typeof resultSelector === 'function') {
    return function (source) {
      return source.pipe(switchMap(function (a, i) {
        return (0, _from.from)(project(a, i)).pipe((0, _map.map)(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return function (source) {
    return source.lift(new SwitchMapOperator(project));
  };
}

var SwitchMapOperator =
/*@__PURE__*/
function () {
  function SwitchMapOperator(project) {
    this.project = project;
  }

  SwitchMapOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
  };

  return SwitchMapOperator;
}();

var SwitchMapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SwitchMapSubscriber, _super);

  function SwitchMapSubscriber(destination, project) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.index = 0;
    return _this;
  }

  SwitchMapSubscriber.prototype._next = function (value) {
    var result;
    var index = this.index++;

    try {
      result = this.project(value, index);
    } catch (error) {
      this.destination.error(error);
      return;
    }

    this._innerSub(result, value, index);
  };

  SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
    var innerSubscription = this.innerSubscription;

    if (innerSubscription) {
      innerSubscription.unsubscribe();
    }

    this.add(this.innerSubscription = (0, _subscribeToResult.subscribeToResult)(this, result, value, index));
  };

  SwitchMapSubscriber.prototype._complete = function () {
    var innerSubscription = this.innerSubscription;

    if (!innerSubscription || innerSubscription.closed) {
      _super.prototype._complete.call(this);
    }
  };

  SwitchMapSubscriber.prototype._unsubscribe = function () {
    this.innerSubscription = null;
  };

  SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
    this.remove(innerSub);
    this.innerSubscription = null;

    if (this.isStopped) {
      _super.prototype._complete.call(this);
    }
  };

  SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  return SwitchMapSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.take = take;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _ArgumentOutOfRangeError = __webpack_require__(78);

var _empty = __webpack_require__(23);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */
function take(count) {
  return function (source) {
    if (count === 0) {
      return (0, _empty.empty)();
    } else {
      return source.lift(new TakeOperator(count));
    }
  };
}

var TakeOperator =
/*@__PURE__*/
function () {
  function TakeOperator(total) {
    this.total = total;

    if (this.total < 0) {
      throw new _ArgumentOutOfRangeError.ArgumentOutOfRangeError();
    }
  }

  TakeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TakeSubscriber(subscriber, this.total));
  };

  return TakeOperator;
}();

var TakeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(TakeSubscriber, _super);

  function TakeSubscriber(destination, total) {
    var _this = _super.call(this, destination) || this;

    _this.total = total;
    _this.count = 0;
    return _this;
  }

  TakeSubscriber.prototype._next = function (value) {
    var total = this.total;
    var count = ++this.count;

    if (count <= total) {
      this.destination.next(value);

      if (count === total) {
        this.destination.complete();
        this.unsubscribe();
      }
    }
  };

  return TakeSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeLast = takeLast;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _ArgumentOutOfRangeError = __webpack_require__(78);

var _empty = __webpack_require__(23);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */
function takeLast(count) {
  return function takeLastOperatorFunction(source) {
    if (count === 0) {
      return (0, _empty.empty)();
    } else {
      return source.lift(new TakeLastOperator(count));
    }
  };
}

var TakeLastOperator =
/*@__PURE__*/
function () {
  function TakeLastOperator(total) {
    this.total = total;

    if (this.total < 0) {
      throw new _ArgumentOutOfRangeError.ArgumentOutOfRangeError();
    }
  }

  TakeLastOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
  };

  return TakeLastOperator;
}();

var TakeLastSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(TakeLastSubscriber, _super);

  function TakeLastSubscriber(destination, total) {
    var _this = _super.call(this, destination) || this;

    _this.total = total;
    _this.ring = new Array();
    _this.count = 0;
    return _this;
  }

  TakeLastSubscriber.prototype._next = function (value) {
    var ring = this.ring;
    var total = this.total;
    var count = this.count++;

    if (ring.length < total) {
      ring.push(value);
    } else {
      var index = count % total;
      ring[index] = value;
    }
  };

  TakeLastSubscriber.prototype._complete = function () {
    var destination = this.destination;
    var count = this.count;

    if (count > 0) {
      var total = this.count >= this.total ? this.total : this.count;
      var ring = this.ring;

      for (var i = 0; i < total; i++) {
        var idx = count++ % total;
        destination.next(ring[idx]);
      }
    }

    destination.complete();
  };

  return TakeLastSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.$$rxSubscriber = exports.rxSubscriber = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = typeof Symbol === 'function' && typeof Symbol.for === 'function' ?
/*@__PURE__*/
Symbol.for('rxSubscriber') : '@@rxSubscriber';
exports.rxSubscriber = rxSubscriber;
var $$rxSubscriber = rxSubscriber;
exports.$$rxSubscriber = $$rxSubscriber;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hostReportError = hostReportError;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
  setTimeout(function () {
    throw err;
  });
}

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pipe = pipe;
exports.pipeFromArray = pipeFromArray;

var _noop = __webpack_require__(102);

/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */
function pipe() {
  var fns = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    fns[_i] = arguments[_i];
  }

  return pipeFromArray(fns);
}

function pipeFromArray(fns) {
  if (!fns) {
    return _noop.noop;
  }

  if (fns.length === 1) {
    return fns[0];
  }

  return function piped(input) {
    return fns.reduce(function (prev, fn) {
      return fn(prev);
    }, input);
  };
}

/***/ }),
/* 141 */,
/* 142 */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	return new Promise(function(resolve, reject) { reject(new Error("Cannot find module '" + req + "'.")); });
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 142;

/***/ }),
/* 143 */,
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbAccordionConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbAccordion component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the accordions used in the application.
 */
var NgbAccordionConfig =
/** @class */
function () {
  function NgbAccordionConfig() {
    this.closeOthers = false;
  }

  NgbAccordionConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbAccordionConfig;
}();

exports.NgbAccordionConfig = NgbAccordionConfig;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbAlertConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbAlert component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the alerts used in the application.
 */
var NgbAlertConfig =
/** @class */
function () {
  function NgbAlertConfig() {
    this.dismissible = true;
    this.type = 'warning';
  }

  NgbAlertConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbAlertConfig;
}();

exports.NgbAlertConfig = NgbAlertConfig;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbCarouselConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbCarousel component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the carousels used in the application.
 */
var NgbCarouselConfig =
/** @class */
function () {
  function NgbCarouselConfig() {
    this.interval = 5000;
    this.wrap = true;
    this.keyboard = true;
    this.pauseOnHover = true;
    this.showNavigationArrows = true;
    this.showNavigationIndicators = true;
  }

  NgbCarouselConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbCarouselConfig;
}();

exports.NgbCarouselConfig = NgbCarouselConfig;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbDatepicker component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the datepickers used in the application.
 */
var NgbDatepickerConfig =
/** @class */
function () {
  function NgbDatepickerConfig() {
    this.displayMonths = 1;
    this.firstDayOfWeek = 1;
    this.navigation = 'select';
    this.outsideDays = 'visible';
    this.showWeekdays = true;
    this.showWeekNumbers = false;
  }

  NgbDatepickerConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbDatepickerConfig;
}();

exports.NgbDatepickerConfig = NgbDatepickerConfig;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isChangedDate = isChangedDate;
exports.dateComparator = dateComparator;
exports.checkMinBeforeMax = checkMinBeforeMax;
exports.checkDateInRange = checkDateInRange;
exports.isDateSelectable = isDateSelectable;
exports.generateSelectBoxMonths = generateSelectBoxMonths;
exports.generateSelectBoxYears = generateSelectBoxYears;
exports.nextMonthDisabled = nextMonthDisabled;
exports.prevMonthDisabled = prevMonthDisabled;
exports.buildMonths = buildMonths;
exports.buildMonth = buildMonth;
exports.getFirstViewDate = getFirstViewDate;

var _ngbDate = __webpack_require__(35);

var _util = __webpack_require__(14);

function isChangedDate(prev, next) {
  return !dateComparator(prev, next);
}

function dateComparator(prev, next) {
  return !prev && !next || !!prev && !!next && prev.equals(next);
}

function checkMinBeforeMax(minDate, maxDate) {
  if (maxDate && minDate && maxDate.before(minDate)) {
    throw new Error("'maxDate' " + maxDate + " should be greater than 'minDate' " + minDate);
  }
}

function checkDateInRange(date, minDate, maxDate) {
  if (date && minDate && date.before(minDate)) {
    return _ngbDate.NgbDate.from(minDate);
  }

  if (date && maxDate && date.after(maxDate)) {
    return _ngbDate.NgbDate.from(maxDate);
  }

  return date;
}

function isDateSelectable(date, state) {
  var minDate = state.minDate,
      maxDate = state.maxDate,
      disabled = state.disabled,
      markDisabled = state.markDisabled; // clang-format off

  return !(!(0, _util.isDefined)(date) || disabled || markDisabled && markDisabled(date, {
    year: date.year,
    month: date.month
  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate)); // clang-format on
}

function generateSelectBoxMonths(calendar, date, minDate, maxDate) {
  if (!date) {
    return [];
  }

  var months = calendar.getMonths();

  if (minDate && date.year === minDate.year) {
    var index = months.findIndex(function (month) {
      return month === minDate.month;
    });
    months = months.slice(index);
  }

  if (maxDate && date.year === maxDate.year) {
    var index = months.findIndex(function (month) {
      return month === maxDate.month;
    });
    months = months.slice(0, index + 1);
  }

  return months;
}

function generateSelectBoxYears(date, minDate, maxDate) {
  if (!date) {
    return [];
  }

  var start = minDate && minDate.year || date.year - 10;
  var end = maxDate && maxDate.year || date.year + 10;
  return Array.from({
    length: end - start + 1
  }, function (e, i) {
    return start + i;
  });
}

function nextMonthDisabled(calendar, date, maxDate) {
  return maxDate && calendar.getNext(date, 'm').after(maxDate);
}

function prevMonthDisabled(calendar, date, minDate) {
  var prevDate = calendar.getPrev(date, 'm');
  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);
}

function buildMonths(calendar, date, state, i18n, force) {
  var displayMonths = state.displayMonths,
      months = state.months; // move old months to a temporary array

  var monthsToReuse = months.splice(0, months.length); // generate new first dates, nullify or reuse months

  var firstDates = Array.from({
    length: displayMonths
  }, function (_, i) {
    var firstDate = calendar.getNext(date, 'm', i);
    months[i] = null;

    if (!force) {
      var reusedIndex = monthsToReuse.findIndex(function (month) {
        return month.firstDate.equals(firstDate);
      }); // move reused month back to months

      if (reusedIndex !== -1) {
        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];
      }
    }

    return firstDate;
  }); // rebuild nullified months

  firstDates.forEach(function (firstDate, i) {
    if (months[i] === null) {
      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});
    }
  });
  return months;
}

function buildMonth(calendar, date, state, i18n, month) {
  if (month === void 0) {
    month = {};
  }

  var minDate = state.minDate,
      maxDate = state.maxDate,
      firstDayOfWeek = state.firstDayOfWeek,
      markDisabled = state.markDisabled,
      outsideDays = state.outsideDays;
  month.firstDate = null;
  month.lastDate = null;
  month.number = date.month;
  month.year = date.year;
  month.weeks = month.weeks || [];
  month.weekdays = month.weekdays || [];
  date = getFirstViewDate(calendar, date, firstDayOfWeek); // month has weeks

  for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {
    var weekObject = month.weeks[week];

    if (!weekObject) {
      weekObject = month.weeks[week] = {
        number: 0,
        days: [],
        collapsed: true
      };
    }

    var days = weekObject.days; // week has days

    for (var day = 0; day < calendar.getDaysPerWeek(); day++) {
      if (week === 0) {
        month.weekdays[day] = calendar.getWeekday(date);
      }

      var newDate = new _ngbDate.NgbDate(date.year, date.month, date.day);
      var nextDate = calendar.getNext(newDate);
      var ariaLabel = i18n.getDayAriaLabel(newDate); // marking date as disabled

      var disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));

      if (!disabled && markDisabled) {
        disabled = markDisabled(newDate, {
          month: month.number,
          year: month.year
        });
      } // saving first date of the month


      if (month.firstDate === null && newDate.month === month.number) {
        month.firstDate = newDate;
      } // saving last date of the month


      if (newDate.month === month.number && nextDate.month !== month.number) {
        month.lastDate = newDate;
      }

      var dayObject = days[day];

      if (!dayObject) {
        dayObject = days[day] = {};
      }

      dayObject.date = newDate;
      dayObject.context = Object.assign(dayObject.context || {}, {
        date: {
          year: newDate.year,
          month: newDate.month,
          day: newDate.day
        },
        currentMonth: month.number,
        disabled: disabled,
        focused: false,
        selected: false
      });
      dayObject.tabindex = -1;
      dayObject.ariaLabel = ariaLabel;
      dayObject.hidden = false;
      date = nextDate;
    }

    weekObject.number = calendar.getWeekNumber(days.map(function (day) {
      return _ngbDate.NgbDate.from(day.date);
    }), firstDayOfWeek); // marking week as collapsed

    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;
  }

  return month;
}

function getFirstViewDate(calendar, date, firstDayOfWeek) {
  var daysPerWeek = calendar.getDaysPerWeek();
  var firstMonthDate = new _ngbDate.NgbDate(date.year, date.month, 1);
  var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;
  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);
}

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavigationEvent = void 0;
// clang-format on
// clang-format on
var NavigationEvent; // clang-format on

exports.NavigationEvent = NavigationEvent;

(function (NavigationEvent) {
  NavigationEvent[NavigationEvent["PREV"] = 0] = "PREV";
  NavigationEvent[NavigationEvent["NEXT"] = 1] = "NEXT";
})(NavigationEvent || (exports.NavigationEvent = NavigationEvent = {}));

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepicker = void 0;

var _operators = __webpack_require__(33);

var _core = __webpack_require__(0);

var _forms = __webpack_require__(34);

var _ngbCalendar = __webpack_require__(52);

var _ngbDate = __webpack_require__(35);

var _datepickerService = __webpack_require__(106);

var _datepickerKeymapService = __webpack_require__(337);

var _datepickerViewModel = __webpack_require__(149);

var _datepickerConfig = __webpack_require__(147);

var _ngbDateAdapter2 = __webpack_require__(82);

var _datepickerI18n = __webpack_require__(51);

var _datepickerTools = __webpack_require__(148);

var NGB_DATEPICKER_VALUE_ACCESSOR = {
  provide: _forms.NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbDatepicker;
  }),
  multi: true
};
/**
 * A lightweight and highly configurable datepicker directive
 */

var NgbDatepicker =
/** @class */
function () {
  function NgbDatepicker(_keyMapService, _service, _calendar, i18n, config, _cd, _elementRef, _ngbDateAdapter, _ngZone) {
    var _this = this;

    this._keyMapService = _keyMapService;
    this._service = _service;
    this._calendar = _calendar;
    this.i18n = i18n;
    this._cd = _cd;
    this._elementRef = _elementRef;
    this._ngbDateAdapter = _ngbDateAdapter;
    this._ngZone = _ngZone;
    /**
       * An event fired when navigation happens and currently displayed month changes.
       * See NgbDatepickerNavigateEvent for the payload info.
       */

    this.navigate = new _core.EventEmitter();
    /**
       * An event fired when user selects a date using keyboard or mouse.
       * The payload of the event is currently selected NgbDateStruct.
       */

    this.select = new _core.EventEmitter();

    this.onChange = function (_) {};

    this.onTouched = function () {};

    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate'].forEach(function (input) {
      return _this[input] = config[input];
    });
    this._selectSubscription = _service.select$.subscribe(function (date) {
      _this.select.emit(date.toStruct());
    });
    this._subscription = _service.model$.subscribe(function (model) {
      var newDate = model.firstDate;
      var oldDate = _this.model ? _this.model.firstDate : null;
      var newSelectedDate = model.selectedDate;
      var oldSelectedDate = _this.model ? _this.model.selectedDate : null;
      var newFocusedDate = model.focusDate;
      var oldFocusedDate = _this.model ? _this.model.focusDate : null;
      _this.model = model; // handling selection change

      if ((0, _datepickerTools.isChangedDate)(newSelectedDate, oldSelectedDate)) {
        _this.onTouched();

        _this.onChange(_this._ngbDateAdapter.toModel(newSelectedDate));
      } // handling focus change


      if ((0, _datepickerTools.isChangedDate)(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {
        _this.focus();
      } // emitting navigation event if the first month changes


      if (!newDate.equals(oldDate)) {
        _this.navigate.emit({
          current: oldDate ? {
            year: oldDate.year,
            month: oldDate.month
          } : null,
          next: {
            year: newDate.year,
            month: newDate.month
          }
        });
      }

      _cd.markForCheck();
    });
  }
  /**
   * Manually focus the focusable day in the datepicker
   */

  /**
     * Manually focus the focusable day in the datepicker
     */


  NgbDatepicker.prototype.focus =
  /**
  * Manually focus the focusable day in the datepicker
  */
  function () {
    var _this = this;

    this._ngZone.onStable.asObservable().pipe((0, _operators.take)(1)).subscribe(function () {
      var elementToFocus = _this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex="0"]');

      if (elementToFocus) {
        elementToFocus.focus();
      }
    });
  };
  /**
   * Navigates current view to provided date.
   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
   * If nothing or invalid date provided calendar will open current month.
   * Use 'startDate' input as an alternative
   */

  /**
     * Navigates current view to provided date.
     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
     * If nothing or invalid date provided calendar will open current month.
     * Use 'startDate' input as an alternative
     */


  NgbDatepicker.prototype.navigateTo =
  /**
  * Navigates current view to provided date.
  * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
  * If nothing or invalid date provided calendar will open current month.
  * Use 'startDate' input as an alternative
  */
  function (date) {
    this._service.open(_ngbDate.NgbDate.from(date));
  };

  NgbDatepicker.prototype.ngOnDestroy = function () {
    this._subscription.unsubscribe();

    this._selectSubscription.unsubscribe();
  };

  NgbDatepicker.prototype.ngOnInit = function () {
    var _this = this;

    if (this.model === undefined) {
      ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(function (input) {
        return _this._service[input] = _this[input];
      });
      this.navigateTo(this.startDate);
    }
  };

  NgbDatepicker.prototype.ngOnChanges = function (changes) {
    var _this = this;

    ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].filter(function (input) {
      return input in changes;
    }).forEach(function (input) {
      return _this._service[input] = _this[input];
    });

    if ('startDate' in changes) {
      this.navigateTo(this.startDate);
    }
  };

  NgbDatepicker.prototype.onDateSelect = function (date) {
    this._service.focus(date);

    this._service.select(date, {
      emitEvent: true
    });
  };

  NgbDatepicker.prototype.onKeyDown = function (event) {
    this._keyMapService.processKey(event);
  };

  NgbDatepicker.prototype.onNavigateDateSelect = function (date) {
    this._service.open(date);
  };

  NgbDatepicker.prototype.onNavigateEvent = function (event) {
    switch (event) {
      case _datepickerViewModel.NavigationEvent.PREV:
        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));

        break;

      case _datepickerViewModel.NavigationEvent.NEXT:
        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));

        break;
    }
  };

  NgbDatepicker.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  NgbDatepicker.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  NgbDatepicker.prototype.setDisabledState = function (isDisabled) {
    this._service.disabled = isDisabled;
  };

  NgbDatepicker.prototype.showFocus = function (focusVisible) {
    this._service.focusVisible = focusVisible;
  };

  NgbDatepicker.prototype.writeValue = function (value) {
    this._service.select(_ngbDate.NgbDate.from(this._ngbDateAdapter.fromModel(value)));
  };

  NgbDatepicker.decorators = [{
    type: _core.Component,
    args: [{
      exportAs: 'ngbDatepicker',
      selector: 'ngb-datepicker',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      styles: ["\n    :host {\n      border: 1px solid #dfdfdf;\n      border-radius: 0.25rem;\n      display: inline-block;\n    }\n    .ngb-dp-month {\n      pointer-events: none;\n    }\n    .ngb-dp-header {\n      border-bottom: 0;\n      border-radius: 0.25rem 0.25rem 0 0;\n      padding-top: 0.25rem;\n    }\n    ngb-datepicker-month-view {\n      pointer-events: auto;\n    }\n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n      text-align: center;\n    }\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\n      padding-left: 1rem;\n    }\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\n      padding-left: 1rem;\n    }\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\n      padding-right: .25rem;\n    }\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\n      padding-left: .25rem;\n    }\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\n      padding-bottom: .25rem;\n    }\n    .ngb-dp-months {\n      display: -ms-flexbox;\n      display: flex;\n    }\n  "],
      template: "\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n  ",
      providers: [NGB_DATEPICKER_VALUE_ACCESSOR, _datepickerService.NgbDatepickerService, _datepickerKeymapService.NgbDatepickerKeyMapService]
    }]
  }];
  /** @nocollapse */

  NgbDatepicker.ctorParameters = function () {
    return [{
      type: _datepickerKeymapService.NgbDatepickerKeyMapService
    }, {
      type: _datepickerService.NgbDatepickerService
    }, {
      type: _ngbCalendar.NgbCalendar
    }, {
      type: _datepickerI18n.NgbDatepickerI18n
    }, {
      type: _datepickerConfig.NgbDatepickerConfig
    }, {
      type: _core.ChangeDetectorRef
    }, {
      type: _core.ElementRef
    }, {
      type: _ngbDateAdapter2.NgbDateAdapter
    }, {
      type: _core.NgZone
    }];
  };

  NgbDatepicker.propDecorators = {
    "dayTemplate": [{
      type: _core.Input
    }],
    "displayMonths": [{
      type: _core.Input
    }],
    "firstDayOfWeek": [{
      type: _core.Input
    }],
    "markDisabled": [{
      type: _core.Input
    }],
    "maxDate": [{
      type: _core.Input
    }],
    "minDate": [{
      type: _core.Input
    }],
    "navigation": [{
      type: _core.Input
    }],
    "outsideDays": [{
      type: _core.Input
    }],
    "showWeekdays": [{
      type: _core.Input
    }],
    "showWeekNumbers": [{
      type: _core.Input
    }],
    "startDate": [{
      type: _core.Input
    }],
    "navigate": [{
      type: _core.Output
    }],
    "select": [{
      type: _core.Output
    }]
  };
  return NgbDatepicker;
}();

exports.NgbDatepicker = NgbDatepicker;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbCalendarHijri = void 0;

var _ngbCalendar = __webpack_require__(52);

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var NgbCalendarHijri =
/** @class */
function (_super) {
  __extends(NgbCalendarHijri, _super);

  function NgbCalendarHijri() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  NgbCalendarHijri.prototype.getDaysPerWeek = function () {
    return 7;
  };

  NgbCalendarHijri.prototype.getMonths = function () {
    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
  };

  NgbCalendarHijri.prototype.getWeeksPerMonth = function () {
    return 6;
  };

  NgbCalendarHijri.prototype.isValid = function (date) {
    return date && (0, _util.isNumber)(date.year) && (0, _util.isNumber)(date.month) && (0, _util.isNumber)(date.day) && !isNaN(this.toGregorian(date).getTime());
  };

  NgbCalendarHijri.prototype.setDay = function (date, day) {
    day = +day;
    var mDays = this.getDaysInIslamicMonth(date.month, date.year);

    if (day <= 0) {
      while (day <= 0) {
        date = this.setMonth(date, date.month - 1);
        mDays = this.getDaysInIslamicMonth(date.month, date.year);
        day += mDays;
      }
    } else if (day > mDays) {
      while (day > mDays) {
        day -= mDays;
        date = this.setMonth(date, date.month + 1);
        mDays = this.getDaysInIslamicMonth(date.month, date.year);
      }
    }

    date.day = day;
    return date;
  };

  NgbCalendarHijri.prototype.setMonth = function (date, month) {
    month = +month;
    date.year = date.year + Math.floor((month - 1) / 12);
    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;
    return date;
  };

  NgbCalendarHijri.prototype.setYear = function (date, yearValue) {
    date.year = +yearValue;
    return date;
  };

  NgbCalendarHijri.prototype._isIslamicLeapYear = function (year) {
    return (14 + 11 * year) % 30 < 11;
  };
  /**
   * Returns the start of Hijri Month.
   * `month` is 0 for Muharram, 1 for Safar, etc.
   * `year` is any Hijri year.
   */

  /**
     * Returns the start of Hijri Month.
     * `month` is 0 for Muharram, 1 for Safar, etc.
     * `year` is any Hijri year.
     */


  NgbCalendarHijri.prototype._getMonthStart =
  /**
  * Returns the start of Hijri Month.
  * `month` is 0 for Muharram, 1 for Safar, etc.
  * `year` is any Hijri year.
  */
  function (year, month) {
    return Math.ceil(29.5 * month) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);
  };
  /**
   * Returns the start of Hijri year.
   * `year` is any Hijri year.
   */

  /**
     * Returns the start of Hijri year.
     * `year` is any Hijri year.
     */


  NgbCalendarHijri.prototype._getYearStart =
  /**
  * Returns the start of Hijri year.
  * `year` is any Hijri year.
  */
  function (year) {
    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);
  };

  NgbCalendarHijri.decorators = [{
    type: _core.Injectable
  }];
  return NgbCalendarHijri;
}(_ngbCalendar.NgbCalendar);

exports.NgbCalendarHijri = NgbCalendarHijri;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbCalendarIslamicCivil = void 0;

var _ngbCalendarHijri = __webpack_require__(151);

var _ngbDate = __webpack_require__(35);

var _core = __webpack_require__(0);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

function isGregorianLeapYear(date) {
  var year = date.getFullYear();
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}

function mod(a, b) {
  return a - b * Math.floor(a / b);
}
/**
 * The civil calendar is one type of Hijri calendars used in islamic countries.
 * Uses a fixed cycle of alternating 29- and 30-day months,
 * with a leap day added to the last month of 11 out of every 30 years.
 * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types
 * All the calculations here are based on the equations from "Calendrical Calculations" By Edward M. Reingold, Nachum
 * Dershowitz.
 */


var GREGORIAN_EPOCH = 1721425.5;
var ISLAMIC_EPOCH = 1948439.5;

var NgbCalendarIslamicCivil =
/** @class */
function (_super) {
  __extends(NgbCalendarIslamicCivil, _super);

  function NgbCalendarIslamicCivil() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.
   * `gdate` is a JS Date to be converted to Hijri.
   */

  /**
     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.
     * `gdate` is a JS Date to be converted to Hijri.
     */


  NgbCalendarIslamicCivil.prototype.fromGregorian =
  /**
  * Returns the equivalent islamic(civil) date value for a give input Gregorian date.
  * `gdate` is a JS Date to be converted to Hijri.
  */
  function (gdate) {
    var date = new Date(gdate);
    var gYear = date.getFullYear(),
        gMonth = date.getMonth(),
        gDay = date.getDate();
    var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(date) ? -1 : -2) + gDay);
    julianDay = Math.floor(julianDay) + 0.5;
    var days = julianDay - ISLAMIC_EPOCH;
    var hYear = Math.floor((30 * days + 10646) / 10631.0);
    var hMonth = Math.ceil((days - 29 - this._getYearStart(hYear)) / 29.5);
    hMonth = Math.min(hMonth, 11);
    var hDay = Math.ceil(days - this._getMonthStart(hYear, hMonth)) + 1;
    return new _ngbDate.NgbDate(hYear, hMonth + 1, hDay);
  };
  /**
   * Returns the equivalent JS date value for a give input islamic(civil) date.
   * `hijriDate` is an islamic(civil) date to be converted to Gregorian.
   */

  /**
     * Returns the equivalent JS date value for a give input islamic(civil) date.
     * `hijriDate` is an islamic(civil) date to be converted to Gregorian.
     */


  NgbCalendarIslamicCivil.prototype.toGregorian =
  /**
  * Returns the equivalent JS date value for a give input islamic(civil) date.
  * `hijriDate` is an islamic(civil) date to be converted to Gregorian.
  */
  function (hijriDate) {
    var hYear = hijriDate.year;
    var hMonth = hijriDate.month - 1;
    var hDate = hijriDate.day;
    var julianDay = hDate + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;
    var wjd = Math.floor(julianDay - 0.5) + 0.5,
        depoch = wjd - GREGORIAN_EPOCH,
        quadricent = Math.floor(depoch / 146097),
        dqc = mod(depoch, 146097),
        cent = Math.floor(dqc / 36524),
        dcent = mod(dqc, 36524),
        quad = Math.floor(dcent / 1461),
        dquad = mod(dcent, 1461),
        yindex = Math.floor(dquad / 365);
    var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;

    if (!(cent === 4 || yindex === 4)) {
      year++;
    }

    var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);
    var yearday = wjd - gYearStart;
    var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);
    var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;
    var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);
    var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) + 1);
    var day = wjd - tjd2 + 1;
    return new Date(year, month - 1, day);
  };
  /**
   * Returns the number of days in a specific Hijri month.
   * `month` is 1 for Muharram, 2 for Safar, etc.
   * `year` is any Hijri year.
   */

  /**
     * Returns the number of days in a specific Hijri month.
     * `month` is 1 for Muharram, 2 for Safar, etc.
     * `year` is any Hijri year.
     */


  NgbCalendarIslamicCivil.prototype.getDaysInIslamicMonth =
  /**
  * Returns the number of days in a specific Hijri month.
  * `month` is 1 for Muharram, 2 for Safar, etc.
  * `year` is any Hijri year.
  */
  function (month, year) {
    year = year + Math.floor(month / 13);
    month = (month - 1) % 12 + 1;
    var length = 29 + month % 2;

    if (month === 12 && this._isIslamicLeapYear(year)) {
      length++;
    }

    return length;
  };

  NgbCalendarIslamicCivil.prototype.getNext = function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    date = _ngbDate.NgbDate.from(date);

    switch (period) {
      case 'y':
        date = this.setYear(date, date.year + number);
        date.month = 1;
        date.day = 1;
        return date;

      case 'm':
        date = this.setMonth(date, date.month + number);
        date.day = 1;
        return date;

      case 'd':
        return this.setDay(date, date.day + number);

      default:
        return date;
    }
  };

  NgbCalendarIslamicCivil.prototype.getPrev = function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    return this.getNext(date, period, -number);
  };

  NgbCalendarIslamicCivil.prototype.getWeekday = function (date) {
    var day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7

    return day === 0 ? 7 : day;
  };

  NgbCalendarIslamicCivil.prototype.getWeekNumber = function (week, firstDayOfWeek) {
    // in JS Date Sun=0, in ISO 8601 Sun=7
    if (firstDayOfWeek === 7) {
      firstDayOfWeek = 0;
    }

    var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;
    var date = week[thursdayIndex];
    var jsDate = this.toGregorian(date);
    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday

    var time = jsDate.getTime();
    var MuhDate = this.toGregorian(new _ngbDate.NgbDate(date.year, 1, 1)); // Compare with Muharram 1

    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;
  };

  NgbCalendarIslamicCivil.prototype.getToday = function () {
    return this.fromGregorian(new Date());
  };

  NgbCalendarIslamicCivil.decorators = [{
    type: _core.Injectable
  }];
  return NgbCalendarIslamicCivil;
}(_ngbCalendarHijri.NgbCalendarHijri);

exports.NgbCalendarIslamicCivil = NgbCalendarIslamicCivil;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDateISOParserFormatter = exports.NgbDateParserFormatter = void 0;

var _util = __webpack_require__(14);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker
 * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation
 * to use an alternative format.
 */
var
/**
* Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker
* directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation
* to use an alternative format.
*/
NgbDateParserFormatter =
/** @class */
function () {
  function NgbDateParserFormatter() {}

  return NgbDateParserFormatter;
}();
/**
 * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker
 * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation
 * to use an alternative format.
 */


exports.NgbDateParserFormatter = NgbDateParserFormatter;

var NgbDateISOParserFormatter =
/** @class */
function (_super) {
  __extends(NgbDateISOParserFormatter, _super);

  function NgbDateISOParserFormatter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  NgbDateISOParserFormatter.prototype.parse = function (value) {
    if (value) {
      var dateParts = value.trim().split('-');

      if (dateParts.length === 1 && (0, _util.isNumber)(dateParts[0])) {
        return {
          year: (0, _util.toInteger)(dateParts[0]),
          month: null,
          day: null
        };
      } else if (dateParts.length === 2 && (0, _util.isNumber)(dateParts[0]) && (0, _util.isNumber)(dateParts[1])) {
        return {
          year: (0, _util.toInteger)(dateParts[0]),
          month: (0, _util.toInteger)(dateParts[1]),
          day: null
        };
      } else if (dateParts.length === 3 && (0, _util.isNumber)(dateParts[0]) && (0, _util.isNumber)(dateParts[1]) && (0, _util.isNumber)(dateParts[2])) {
        return {
          year: (0, _util.toInteger)(dateParts[0]),
          month: (0, _util.toInteger)(dateParts[1]),
          day: (0, _util.toInteger)(dateParts[2])
        };
      }
    }

    return null;
  };

  NgbDateISOParserFormatter.prototype.format = function (date) {
    return date ? date.year + "-" + ((0, _util.isNumber)(date.month) ? (0, _util.padNumber)(date.month) : '') + "-" + ((0, _util.isNumber)(date.day) ? (0, _util.padNumber)(date.day) : '') : '';
  };

  return NgbDateISOParserFormatter;
}(NgbDateParserFormatter);

exports.NgbDateISOParserFormatter = NgbDateISOParserFormatter;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDropdownConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbDropdown directive.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the dropdowns used in the application.
 */
var NgbDropdownConfig =
/** @class */
function () {
  function NgbDropdownConfig() {
    this.autoClose = true;
    this.placement = 'bottom-left';
  }

  NgbDropdownConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbDropdownConfig;
}();

exports.NgbDropdownConfig = NgbDropdownConfig;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbModalBackdrop = void 0;

var _core = __webpack_require__(0);

var NgbModalBackdrop =
/** @class */
function () {
  function NgbModalBackdrop() {}

  NgbModalBackdrop.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-modal-backdrop',
      template: '',
      host: {
        '[class]': '"modal-backdrop fade show" + (backdropClass ? " " + backdropClass : "")'
      }
    }]
  }];
  /** @nocollapse */

  NgbModalBackdrop.propDecorators = {
    "backdropClass": [{
      type: _core.Input
    }]
  };
  return NgbModalBackdrop;
}();

exports.NgbModalBackdrop = NgbModalBackdrop;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalDismissReasons = void 0;
var ModalDismissReasons;
exports.ModalDismissReasons = ModalDismissReasons;

(function (ModalDismissReasons) {
  ModalDismissReasons[ModalDismissReasons["BACKDROP_CLICK"] = 0] = "BACKDROP_CLICK";
  ModalDismissReasons[ModalDismissReasons["ESC"] = 1] = "ESC";
})(ModalDismissReasons || (exports.ModalDismissReasons = ModalDismissReasons = {}));

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbModalRef = exports.NgbActiveModal = void 0;

/**
 * A reference to an active (currently opened) modal. Instances of this class
 * can be injected into components passed as modal content.
 */
var
/**
* A reference to an active (currently opened) modal. Instances of this class
* can be injected into components passed as modal content.
*/
NgbActiveModal =
/** @class */
function () {
  function NgbActiveModal() {}
  /**
   * Can be used to close a modal, passing an optional result.
   */

  /**
     * Can be used to close a modal, passing an optional result.
     */


  NgbActiveModal.prototype.close =
  /**
  * Can be used to close a modal, passing an optional result.
  */
  function (result) {};
  /**
   * Can be used to dismiss a modal, passing an optional reason.
   */

  /**
     * Can be used to dismiss a modal, passing an optional reason.
     */


  NgbActiveModal.prototype.dismiss =
  /**
  * Can be used to dismiss a modal, passing an optional reason.
  */
  function (reason) {};

  return NgbActiveModal;
}();
/**
 * A reference to an active (currently opened) modal. Instances of this class
 * can be injected into components passed as modal content.
 */


exports.NgbActiveModal = NgbActiveModal;

/**
 * A reference to a newly opened modal.
 */
var
/**
* A reference to a newly opened modal.
*/
NgbModalRef =
/** @class */
function () {
  function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {
    var _this = this;

    this._windowCmptRef = _windowCmptRef;
    this._contentRef = _contentRef;
    this._backdropCmptRef = _backdropCmptRef;
    this._beforeDismiss = _beforeDismiss;

    _windowCmptRef.instance.dismissEvent.subscribe(function (reason) {
      _this.dismiss(reason);
    });

    this.result = new Promise(function (resolve, reject) {
      _this._resolve = resolve;
      _this._reject = reject;
    });
    this.result.then(null, function () {});
  }

  Object.defineProperty(NgbModalRef.prototype, "componentInstance", {
    /**
     * The instance of component used as modal's content.
     * Undefined when a TemplateRef is used as modal's content.
     */
    get:
    /**
    * The instance of component used as modal's content.
    * Undefined when a TemplateRef is used as modal's content.
    */
    function get() {
      if (this._contentRef.componentRef) {
        return this._contentRef.componentRef.instance;
      }
    },
    // only needed to keep TS1.8 compatibility
    set: // only needed to keep TS1.8 compatibility
    function set(instance) {},
    enumerable: true,
    configurable: true
  });
  /**
   * Can be used to close a modal, passing an optional result.
   */

  /**
     * Can be used to close a modal, passing an optional result.
     */

  NgbModalRef.prototype.close =
  /**
  * Can be used to close a modal, passing an optional result.
  */
  function (result) {
    if (this._windowCmptRef) {
      this._resolve(result);

      this._removeModalElements();
    }
  };

  NgbModalRef.prototype._dismiss = function (reason) {
    this._reject(reason);

    this._removeModalElements();
  };
  /**
   * Can be used to dismiss a modal, passing an optional reason.
   */

  /**
     * Can be used to dismiss a modal, passing an optional reason.
     */


  NgbModalRef.prototype.dismiss =
  /**
  * Can be used to dismiss a modal, passing an optional reason.
  */
  function (reason) {
    var _this = this;

    if (this._windowCmptRef) {
      if (!this._beforeDismiss) {
        this._dismiss(reason);
      } else {
        var dismiss = this._beforeDismiss();

        if (dismiss && dismiss.then) {
          dismiss.then(function (result) {
            if (result !== false) {
              _this._dismiss(reason);
            }
          }, function () {});
        } else if (dismiss !== false) {
          this._dismiss(reason);
        }
      }
    }
  };

  NgbModalRef.prototype._removeModalElements = function () {
    var windowNativeEl = this._windowCmptRef.location.nativeElement;
    windowNativeEl.parentNode.removeChild(windowNativeEl);

    this._windowCmptRef.destroy();

    if (this._backdropCmptRef) {
      var backdropNativeEl = this._backdropCmptRef.location.nativeElement;
      backdropNativeEl.parentNode.removeChild(backdropNativeEl);

      this._backdropCmptRef.destroy();
    }

    if (this._contentRef && this._contentRef.viewRef) {
      this._contentRef.viewRef.destroy();
    }

    this._windowCmptRef = null;
    this._backdropCmptRef = null;
    this._contentRef = null;
  };

  return NgbModalRef;
}();
/**
 * A reference to a newly opened modal.
 */


exports.NgbModalRef = NgbModalRef;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbModalStack = void 0;

var _common = __webpack_require__(10);

var _core = __webpack_require__(0);

var _popup = __webpack_require__(83);

var _util = __webpack_require__(14);

var _scrollbar = __webpack_require__(172);

var _modalBackdrop = __webpack_require__(155);

var _modalWindow = __webpack_require__(159);

var _modalRef = __webpack_require__(157);

var NgbModalStack =
/** @class */
function () {
  function NgbModalStack(_applicationRef, _injector, _componentFactoryResolver, _document, _scrollBar) {
    this._applicationRef = _applicationRef;
    this._injector = _injector;
    this._componentFactoryResolver = _componentFactoryResolver;
    this._document = _document;
    this._scrollBar = _scrollBar;
    this._windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];
    this._backdropAttributes = ['backdropClass'];
  }

  NgbModalStack.prototype.open = function (moduleCFR, contentInjector, content, options) {
    var containerEl = (0, _util.isDefined)(options.container) ? this._document.querySelector(options.container) : this._document.body;

    var revertPaddingForScrollBar = this._scrollBar.compensate();

    if (!containerEl) {
      throw new Error("The specified modal container \"" + (options.container || 'body') + "\" was not found in the DOM.");
    }

    var activeModal = new _modalRef.NgbActiveModal();

    var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);

    var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : null;

    var windowCmptRef = this._attachWindowComponent(containerEl, contentRef);

    var ngbModalRef = new _modalRef.NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);
    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);

    activeModal.close = function (result) {
      ngbModalRef.close(result);
    };

    activeModal.dismiss = function (reason) {
      ngbModalRef.dismiss(reason);
    };

    this._applyWindowOptions(windowCmptRef.instance, options);

    if (backdropCmptRef && backdropCmptRef.instance) {
      this._applyBackdropOptions(backdropCmptRef.instance, options);
    }

    return ngbModalRef;
  };

  NgbModalStack.prototype._attachBackdrop = function (containerEl) {
    var backdropFactory = this._componentFactoryResolver.resolveComponentFactory(_modalBackdrop.NgbModalBackdrop);

    var backdropCmptRef = backdropFactory.create(this._injector);

    this._applicationRef.attachView(backdropCmptRef.hostView);

    containerEl.appendChild(backdropCmptRef.location.nativeElement);
    return backdropCmptRef;
  };

  NgbModalStack.prototype._attachWindowComponent = function (containerEl, contentRef) {
    var windowFactory = this._componentFactoryResolver.resolveComponentFactory(_modalWindow.NgbModalWindow);

    var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);

    this._applicationRef.attachView(windowCmptRef.hostView);

    containerEl.appendChild(windowCmptRef.location.nativeElement);
    return windowCmptRef;
  };

  NgbModalStack.prototype._applyWindowOptions = function (windowInstance, options) {
    this._windowAttributes.forEach(function (optionName) {
      if ((0, _util.isDefined)(options[optionName])) {
        windowInstance[optionName] = options[optionName];
      }
    });
  };

  NgbModalStack.prototype._applyBackdropOptions = function (backdropInstance, options) {
    this._backdropAttributes.forEach(function (optionName) {
      if ((0, _util.isDefined)(options[optionName])) {
        backdropInstance[optionName] = options[optionName];
      }
    });
  };

  NgbModalStack.prototype._getContentRef = function (moduleCFR, contentInjector, content, context) {
    if (!content) {
      return new _popup.ContentRef([]);
    } else if (content instanceof _core.TemplateRef) {
      return this._createFromTemplateRef(content, context);
    } else if ((0, _util.isString)(content)) {
      return this._createFromString(content);
    } else {
      return this._createFromComponent(moduleCFR, contentInjector, content, context);
    }
  };

  NgbModalStack.prototype._createFromTemplateRef = function (content, context) {
    var viewRef = content.createEmbeddedView(context);

    this._applicationRef.attachView(viewRef);

    return new _popup.ContentRef([viewRef.rootNodes], viewRef);
  };

  NgbModalStack.prototype._createFromString = function (content) {
    var component = this._document.createTextNode("" + content);

    return new _popup.ContentRef([[component]]);
  };

  NgbModalStack.prototype._createFromComponent = function (moduleCFR, contentInjector, content, context) {
    var contentCmptFactory = moduleCFR.resolveComponentFactory(content);

    var modalContentInjector = _core.Injector.create([{
      provide: _modalRef.NgbActiveModal,
      useValue: context
    }], contentInjector);

    var componentRef = contentCmptFactory.create(modalContentInjector);

    this._applicationRef.attachView(componentRef.hostView);

    return new _popup.ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);
  };

  NgbModalStack.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  NgbModalStack.ctorParameters = function () {
    return [{
      type: _core.ApplicationRef
    }, {
      type: _core.Injector
    }, {
      type: _core.ComponentFactoryResolver
    }, {
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_common.DOCUMENT]
      }]
    }, {
      type: _scrollbar.ScrollBar
    }];
  };

  return NgbModalStack;
}();

exports.NgbModalStack = NgbModalStack;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbModalWindow = void 0;

var _common = __webpack_require__(10);

var _core = __webpack_require__(0);

var _modalDismissReasons = __webpack_require__(156);

var _focusTrap = __webpack_require__(171);

var NgbModalWindow =
/** @class */
function () {
  function NgbModalWindow(document, _elRef, _renderer) {
    this._elRef = _elRef;
    this._renderer = _renderer;
    this.backdrop = true;
    this.keyboard = true;
    this.dismissEvent = new _core.EventEmitter();
    this._document = document;
    (0, _focusTrap.ngbFocusTrap)(this._elRef.nativeElement, this.dismissEvent);
  }

  NgbModalWindow.prototype.backdropClick = function ($event) {
    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {
      this.dismiss(_modalDismissReasons.ModalDismissReasons.BACKDROP_CLICK);
    }
  };

  NgbModalWindow.prototype.escKey = function ($event) {
    if (this.keyboard && !$event.defaultPrevented) {
      this.dismiss(_modalDismissReasons.ModalDismissReasons.ESC);
    }
  };

  NgbModalWindow.prototype.dismiss = function (reason) {
    this.dismissEvent.emit(reason);
  };

  NgbModalWindow.prototype.ngOnInit = function () {
    this._elWithFocus = this._document.activeElement;

    this._renderer.addClass(this._document.body, 'modal-open');
  };

  NgbModalWindow.prototype.ngAfterViewInit = function () {
    if (!this._elRef.nativeElement.contains(document.activeElement)) {
      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);
    }
  };

  NgbModalWindow.prototype.ngOnDestroy = function () {
    var body = this._document.body;
    var elWithFocus = this._elWithFocus;
    var elementToFocus;

    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {
      elementToFocus = elWithFocus;
    } else {
      elementToFocus = body;
    }

    elementToFocus['focus'].apply(elementToFocus, []);
    this._elWithFocus = null;

    this._renderer.removeClass(body, 'modal-open');
  };

  NgbModalWindow.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-modal-window',
      host: {
        '[class]': '"modal fade show d-block" + (windowClass ? " " + windowClass : "")',
        'role': 'dialog',
        'tabindex': '-1',
        '(keyup.esc)': 'escKey($event)',
        '(click)': 'backdropClick($event)',
        '[attr.aria-labelledby]': 'ariaLabelledBy'
      },
      template: "\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    "
    }]
  }];
  /** @nocollapse */

  NgbModalWindow.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_common.DOCUMENT]
      }]
    }, {
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }];
  };

  NgbModalWindow.propDecorators = {
    "ariaLabelledBy": [{
      type: _core.Input
    }],
    "backdrop": [{
      type: _core.Input
    }],
    "centered": [{
      type: _core.Input
    }],
    "keyboard": [{
      type: _core.Input
    }],
    "size": [{
      type: _core.Input
    }],
    "windowClass": [{
      type: _core.Input
    }],
    "dismissEvent": [{
      type: _core.Output,
      args: ['dismiss']
    }]
  };
  return NgbModalWindow;
}();

exports.NgbModalWindow = NgbModalWindow;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbPaginationConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbPagination component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the paginations used in the application.
 */
var NgbPaginationConfig =
/** @class */
function () {
  function NgbPaginationConfig() {
    this.disabled = false;
    this.boundaryLinks = false;
    this.directionLinks = true;
    this.ellipses = true;
    this.maxSize = 0;
    this.pageSize = 10;
    this.rotate = false;
  }

  NgbPaginationConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbPaginationConfig;
}();

exports.NgbPaginationConfig = NgbPaginationConfig;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbPopoverConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbPopover directive.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the popovers used in the application.
 */
var NgbPopoverConfig =
/** @class */
function () {
  function NgbPopoverConfig() {
    this.placement = 'top';
    this.triggers = 'click';
    this.disablePopover = false;
  }

  NgbPopoverConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbPopoverConfig;
}();

exports.NgbPopoverConfig = NgbPopoverConfig;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbProgressbarConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbProgressbar component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the progress bars used in the application.
 */
var NgbProgressbarConfig =
/** @class */
function () {
  function NgbProgressbarConfig() {
    this.max = 100;
    this.animated = false;
    this.striped = false;
    this.showValue = false;
  }

  NgbProgressbarConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbProgressbarConfig;
}();

exports.NgbProgressbarConfig = NgbProgressbarConfig;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbRatingConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbRating component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the ratings used in the application.
 */
var NgbRatingConfig =
/** @class */
function () {
  function NgbRatingConfig() {
    this.max = 10;
    this.readonly = false;
    this.resettable = false;
  }

  NgbRatingConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbRatingConfig;
}();

exports.NgbRatingConfig = NgbRatingConfig;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTabsetConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbTabset component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the tabsets used in the application.
 */
var NgbTabsetConfig =
/** @class */
function () {
  function NgbTabsetConfig() {
    this.justify = 'start';
    this.orientation = 'horizontal';
    this.type = 'tabs';
  }

  NgbTabsetConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbTabsetConfig;
}();

exports.NgbTabsetConfig = NgbTabsetConfig;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTimeStructAdapter = exports.NgbTimeAdapter = void 0;

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 * Abstract type serving as a DI token for the service converting from your application Time model to internal
 * NgbTimeStruct model.
 * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,
 * but you can provide another implementation to use an alternative format, ie for using with native Date Object.
 *
 * @since 2.2.0
 */
var NgbTimeAdapter =
/** @class */
function () {
  function NgbTimeAdapter() {}

  NgbTimeAdapter.decorators = [{
    type: _core.Injectable
  }];
  return NgbTimeAdapter;
}();

exports.NgbTimeAdapter = NgbTimeAdapter;

var NgbTimeStructAdapter =
/** @class */
function (_super) {
  __extends(NgbTimeStructAdapter, _super);

  function NgbTimeStructAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * Converts a NgbTimeStruct value into NgbTimeStruct value
   * @param  {NgbTimeStruct} value
   * @return {NgbTimeStruct}
   */

  /**
     * Converts a NgbTimeStruct value into NgbTimeStruct value
     * @param  {NgbTimeStruct} value
     * @return {NgbTimeStruct}
     */


  NgbTimeStructAdapter.prototype.fromModel =
  /**
  * Converts a NgbTimeStruct value into NgbTimeStruct value
  * @param  {NgbTimeStruct} value
  * @return {NgbTimeStruct}
  */
  function (time) {
    return time && (0, _util.isInteger)(time.hour) && (0, _util.isInteger)(time.minute) ? {
      hour: time.hour,
      minute: time.minute,
      second: (0, _util.isInteger)(time.second) ? time.second : null
    } : null;
  };
  /**
   * Converts a NgbTimeStruct value into NgbTimeStruct value
   * @param  {NgbTimeStruct} value
   * @return {NgbTimeStruct}
   */

  /**
     * Converts a NgbTimeStruct value into NgbTimeStruct value
     * @param  {NgbTimeStruct} value
     * @return {NgbTimeStruct}
     */


  NgbTimeStructAdapter.prototype.toModel =
  /**
  * Converts a NgbTimeStruct value into NgbTimeStruct value
  * @param  {NgbTimeStruct} value
  * @return {NgbTimeStruct}
  */
  function (time) {
    return time && (0, _util.isInteger)(time.hour) && (0, _util.isInteger)(time.minute) ? {
      hour: time.hour,
      minute: time.minute,
      second: (0, _util.isInteger)(time.second) ? time.second : null
    } : null;
  };

  NgbTimeStructAdapter.decorators = [{
    type: _core.Injectable
  }];
  return NgbTimeStructAdapter;
}(NgbTimeAdapter);

exports.NgbTimeStructAdapter = NgbTimeStructAdapter;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTimepickerConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbTimepicker component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the timepickers used in the application.
 */
var NgbTimepickerConfig =
/** @class */
function () {
  function NgbTimepickerConfig() {
    this.meridian = false;
    this.spinners = true;
    this.seconds = false;
    this.hourStep = 1;
    this.minuteStep = 1;
    this.secondStep = 1;
    this.disabled = false;
    this.readonlyInputs = false;
    this.size = 'medium';
  }

  NgbTimepickerConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbTimepickerConfig;
}();

exports.NgbTimepickerConfig = NgbTimepickerConfig;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTooltipConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbTooltip directive.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the tooltips used in the application.
 */
var NgbTooltipConfig =
/** @class */
function () {
  function NgbTooltipConfig() {
    this.placement = 'top';
    this.triggers = 'hover';
    this.disableTooltip = false;
  }

  NgbTooltipConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbTooltipConfig;
}();

exports.NgbTooltipConfig = NgbTooltipConfig;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTypeaheadConfig = void 0;

var _core = __webpack_require__(0);

/**
 * Configuration service for the NgbTypeahead component.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the typeaheads used in the application.
 */
var NgbTypeaheadConfig =
/** @class */
function () {
  function NgbTypeaheadConfig() {
    this.editable = true;
    this.focusFirst = true;
    this.showHint = false;
    this.placement = 'bottom-left';
  }

  NgbTypeaheadConfig.decorators = [{
    type: _core.Injectable
  }];
  return NgbTypeaheadConfig;
}();

exports.NgbTypeaheadConfig = NgbTypeaheadConfig;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTypeaheadWindow = void 0;

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var NgbTypeaheadWindow =
/** @class */
function () {
  function NgbTypeaheadWindow() {
    this.activeIdx = 0;
    /**
       * Flag indicating if the first row should be active initially
       */

    this.focusFirst = true;
    /**
       * A function used to format a given result before display. This function should return a formatted string without any
       * HTML markup
       */

    this.formatter = _util.toString;
    /**
       * Event raised when user selects a particular result row
       */

    this.selectEvent = new _core.EventEmitter();
    this.activeChangeEvent = new _core.EventEmitter();
  }

  NgbTypeaheadWindow.prototype.hasActive = function () {
    return this.activeIdx > -1 && this.activeIdx < this.results.length;
  };

  NgbTypeaheadWindow.prototype.getActive = function () {
    return this.results[this.activeIdx];
  };

  NgbTypeaheadWindow.prototype.markActive = function (activeIdx) {
    this.activeIdx = activeIdx;

    this._activeChanged();
  };

  NgbTypeaheadWindow.prototype.next = function () {
    if (this.activeIdx === this.results.length - 1) {
      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;
    } else {
      this.activeIdx++;
    }

    this._activeChanged();
  };

  NgbTypeaheadWindow.prototype.prev = function () {
    if (this.activeIdx < 0) {
      this.activeIdx = this.results.length - 1;
    } else if (this.activeIdx === 0) {
      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;
    } else {
      this.activeIdx--;
    }

    this._activeChanged();
  };

  NgbTypeaheadWindow.prototype.resetActive = function () {
    this.activeIdx = this.focusFirst ? 0 : -1;

    this._activeChanged();
  };

  NgbTypeaheadWindow.prototype.select = function (item) {
    this.selectEvent.emit(item);
  };

  NgbTypeaheadWindow.prototype.ngOnInit = function () {
    this.resetActive();
  };

  NgbTypeaheadWindow.prototype._activeChanged = function () {
    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);
  };

  NgbTypeaheadWindow.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-typeahead-window',
      exportAs: 'ngbTypeaheadWindow',
      host: {
        'class': 'dropdown-menu show',
        'role': 'listbox',
        '[id]': 'id'
      },
      template: "\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  "
    }]
  }];
  /** @nocollapse */

  NgbTypeaheadWindow.propDecorators = {
    "id": [{
      type: _core.Input
    }],
    "focusFirst": [{
      type: _core.Input
    }],
    "results": [{
      type: _core.Input
    }],
    "term": [{
      type: _core.Input
    }],
    "formatter": [{
      type: _core.Input
    }],
    "resultTemplate": [{
      type: _core.Input
    }],
    "selectEvent": [{
      type: _core.Output,
      args: ['select']
    }],
    "activeChangeEvent": [{
      type: _core.Output,
      args: ['activeChange']
    }]
  };
  return NgbTypeaheadWindow;
}();

exports.NgbTypeaheadWindow = NgbTypeaheadWindow;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Live = exports.DEFAULT_ARIA_LIVE_DELAY = exports.ARIA_LIVE_DELAY = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var ARIA_LIVE_DELAY = new _core.InjectionToken('live announcer delay');
exports.ARIA_LIVE_DELAY = ARIA_LIVE_DELAY;
var DEFAULT_ARIA_LIVE_DELAY = 100;
exports.DEFAULT_ARIA_LIVE_DELAY = DEFAULT_ARIA_LIVE_DELAY;

function getLiveElement(document, lazyCreate) {
  if (lazyCreate === void 0) {
    lazyCreate = false;
  }

  var element = document.body.querySelector('#ngb-live');

  if (element == null && lazyCreate) {
    element = document.createElement('div');
    element.setAttribute('id', 'ngb-live');
    element.setAttribute('aria-live', 'polite');
    element.setAttribute('aria-atomic', 'true');
    element.classList.add('sr-only');
    document.body.appendChild(element);
  }

  return element;
}

var Live =
/** @class */
function () {
  function Live(_document, _delay) {
    this._document = _document;
    this._delay = _delay;
  }

  Live.prototype.ngOnDestroy = function () {
    var element = getLiveElement(this._document);

    if (element) {
      element.parentElement.removeChild(element);
    }
  };

  Live.prototype.say = function (message) {
    var element = getLiveElement(this._document, true);
    var delay = this._delay;
    element.textContent = '';

    var setText = function setText() {
      return element.textContent = message;
    };

    if (delay === null) {
      setText();
    } else {
      setTimeout(setText, delay);
    }
  };

  Live.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  Live.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_common.DOCUMENT]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [ARIA_LIVE_DELAY]
      }]
    }];
  };

  return Live;
}();

exports.Live = Live;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ngbFocusTrap = void 0;

var _rxjs = __webpack_require__(31);

var _operators = __webpack_require__(33);

var _key = __webpack_require__(53);

var FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type="hidden"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex="-1"])'].join(', ');
/**
 * Returns first and last focusable elements inside of a given element based on specific CSS selector
 */

function getFocusableBoundaryElements(element) {
  var list = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);
  return [list[0], list[list.length - 1]];
}
/**
 * Function that enforces browser focus to be trapped inside a DOM element.
 *
 * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element
 *
 * @param element The element around which focus will be trapped inside
 * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners
 * and free internal resources
 */


var ngbFocusTrap = function ngbFocusTrap(element, stopFocusTrap$) {
  // last focused element
  var lastFocusedElement$ = (0, _rxjs.fromEvent)(element, 'focusin').pipe((0, _operators.takeUntil)(stopFocusTrap$), (0, _operators.map)(function (e) {
    return e.target;
  })); // 'tab' / 'shift+tab' stream

  (0, _rxjs.fromEvent)(element, 'keydown').pipe((0, _operators.takeUntil)(stopFocusTrap$), (0, _operators.filter)(function (e) {
    return e.which === _key.Key.Tab;
  }), (0, _operators.withLatestFrom)(lastFocusedElement$)).subscribe(function (_a) {
    var tabEvent = _a[0],
        focusedElement = _a[1];

    var _b = getFocusableBoundaryElements(element),
        first = _b[0],
        last = _b[1];

    if (focusedElement === first && tabEvent.shiftKey) {
      last.focus();
      tabEvent.preventDefault();
    }

    if (focusedElement === last && !tabEvent.shiftKey) {
      first.focus();
      tabEvent.preventDefault();
    }
  }); // inside click

  (0, _rxjs.fromEvent)(element, 'click').pipe((0, _operators.takeUntil)(stopFocusTrap$), (0, _operators.withLatestFrom)(lastFocusedElement$), (0, _operators.map)(function (arr) {
    return arr[1];
  })).subscribe(function (lastFocusedElement) {
    return lastFocusedElement.focus();
  });
};

exports.ngbFocusTrap = ngbFocusTrap;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ɵ0 = exports.ScrollBar = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var noop = function noop() {};

var ɵ0 = noop;
/**
 * Utility to handle the scrollbar.
 *
 * It allows to compensate the lack of a vertical scrollbar by adding an
 * equivalent padding on the right of the body, and to remove this compensation.
 */

exports.ɵ0 = ɵ0;

var ScrollBar =
/** @class */
function () {
  function ScrollBar(_document) {
    this._document = _document;
  }
  /**
   * Detects if a scrollbar is present and if yes, already compensates for its
   * removal by adding an equivalent padding on the right of the body.
   *
   * @return a callback used to revert the compensation (noop if there was none,
   * otherwise a function removing the padding)
   */

  /**
     * Detects if a scrollbar is present and if yes, already compensates for its
     * removal by adding an equivalent padding on the right of the body.
     *
     * @return a callback used to revert the compensation (noop if there was none,
     * otherwise a function removing the padding)
     */


  ScrollBar.prototype.compensate =
  /**
  * Detects if a scrollbar is present and if yes, already compensates for its
  * removal by adding an equivalent padding on the right of the body.
  *
  * @return a callback used to revert the compensation (noop if there was none,
  * otherwise a function removing the padding)
  */
  function () {
    return !this._isPresent() ? noop : this._adjustBody(this._getWidth());
  };
  /**
   * Adds a padding of the given width on the right of the body.
   *
   * @return a callback used to revert the padding to its previous value
   */

  /**
     * Adds a padding of the given width on the right of the body.
     *
     * @return a callback used to revert the padding to its previous value
     */


  ScrollBar.prototype._adjustBody =
  /**
  * Adds a padding of the given width on the right of the body.
  *
  * @return a callback used to revert the padding to its previous value
  */
  function (width) {
    var body = this._document.body;
    var userSetPadding = body.style.paddingRight;
    var paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);
    body.style['padding-right'] = paddingAmount + width + "px";
    return function () {
      return body.style['padding-right'] = userSetPadding;
    };
  };
  /**
   * Tells whether a scrollbar is currently present on the body.
   *
   * @return true if scrollbar is present, false otherwise
   */

  /**
     * Tells whether a scrollbar is currently present on the body.
     *
     * @return true if scrollbar is present, false otherwise
     */


  ScrollBar.prototype._isPresent =
  /**
  * Tells whether a scrollbar is currently present on the body.
  *
  * @return true if scrollbar is present, false otherwise
  */
  function () {
    var rect = this._document.body.getBoundingClientRect();

    return rect.left + rect.right < window.innerWidth;
  };
  /**
   * Calculates and returns the width of a scrollbar.
   *
   * @return the width of a scrollbar on this page
   */

  /**
     * Calculates and returns the width of a scrollbar.
     *
     * @return the width of a scrollbar on this page
     */


  ScrollBar.prototype._getWidth =
  /**
  * Calculates and returns the width of a scrollbar.
  *
  * @return the width of a scrollbar on this page
  */
  function () {
    var measurer = this._document.createElement('div');

    measurer.className = 'modal-scrollbar-measure';
    var body = this._document.body;
    body.appendChild(measurer);
    var width = measurer.getBoundingClientRect().width - measurer.clientWidth;
    body.removeChild(measurer);
    return width;
  };

  ScrollBar.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  ScrollBar.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_common.DOCUMENT]
      }]
    }];
  };

  return ScrollBar;
}();

exports.ScrollBar = ScrollBar;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseTriggers = parseTriggers;
exports.listenToTriggers = listenToTriggers;
exports.ɵ0 = exports.Trigger = void 0;

var Trigger =
/** @class */
function () {
  function Trigger(open, close) {
    this.open = open;
    this.close = close;

    if (!close) {
      this.close = open;
    }
  }

  Trigger.prototype.isManual = function () {
    return this.open === 'manual' || this.close === 'manual';
  };

  return Trigger;
}();

exports.Trigger = Trigger;
var DEFAULT_ALIASES = {
  'hover': ['mouseenter', 'mouseleave']
};

function parseTriggers(triggers, aliases) {
  if (aliases === void 0) {
    aliases = DEFAULT_ALIASES;
  }

  var trimmedTriggers = (triggers || '').trim();

  if (trimmedTriggers.length === 0) {
    return [];
  }

  var parsedTriggers = trimmedTriggers.split(/\s+/).map(function (trigger) {
    return trigger.split(':');
  }).map(function (triggerPair) {
    var alias = aliases[triggerPair[0]] || triggerPair;
    return new Trigger(alias[0], alias[1]);
  });
  var manualTriggers = parsedTriggers.filter(function (triggerPair) {
    return triggerPair.isManual();
  });

  if (manualTriggers.length > 1) {
    throw 'Triggers parse error: only one manual trigger is allowed';
  }

  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {
    throw 'Triggers parse error: manual trigger can\'t be mixed with other triggers';
  }

  return parsedTriggers;
}

var noopFn = function noopFn() {};

var ɵ0 = noopFn;
exports.ɵ0 = ɵ0;

function listenToTriggers(renderer, nativeElement, triggers, openFn, closeFn, toggleFn) {
  var parsedTriggers = parseTriggers(triggers);
  var listeners = [];

  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {
    return noopFn;
  }

  parsedTriggers.forEach(function (trigger) {
    if (trigger.open === trigger.close) {
      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));
    } else {
      listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));
    }
  });
  return function () {
    listeners.forEach(function (unsubscribeFn) {
      return unsubscribeFn();
    });
  };
}

/***/ }),
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BehaviorSubject = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _ObjectUnsubscribedError = __webpack_require__(100);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */
var BehaviorSubject =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(BehaviorSubject, _super);

  function BehaviorSubject(_value) {
    var _this = _super.call(this) || this;

    _this._value = _value;
    return _this;
  }

  Object.defineProperty(BehaviorSubject.prototype, "value", {
    get: function get() {
      return this.getValue();
    },
    enumerable: true,
    configurable: true
  });

  BehaviorSubject.prototype._subscribe = function (subscriber) {
    var subscription = _super.prototype._subscribe.call(this, subscriber);

    if (subscription && !subscription.closed) {
      subscriber.next(this._value);
    }

    return subscription;
  };

  BehaviorSubject.prototype.getValue = function () {
    if (this.hasError) {
      throw this.thrownError;
    } else if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    } else {
      return this._value;
    }
  };

  BehaviorSubject.prototype.next = function (value) {
    _super.prototype.next.call(this, this._value = value);
  };

  return BehaviorSubject;
}(_Subject.Subject);

exports.BehaviorSubject = BehaviorSubject;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.empty = void 0;

var _config = __webpack_require__(95);

var _hostReportError = __webpack_require__(139);

/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */
var empty = {
  closed: true,
  next: function next(value) {},
  error: function error(err) {
    if (_config.config.useDeprecatedSynchronousErrorHandling) {
      throw err;
    } else {
      (0, _hostReportError.hostReportError)(err);
    }
  },
  complete: function complete() {}
};
exports.empty = empty;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scheduler = void 0;

var Scheduler =
/*@__PURE__*/
function () {
  function Scheduler(SchedulerAction, now) {
    if (now === void 0) {
      now = Scheduler.now;
    }

    this.SchedulerAction = SchedulerAction;
    this.now = now;
  }

  Scheduler.prototype.schedule = function (work, delay, state) {
    if (delay === void 0) {
      delay = 0;
    }

    return new this.SchedulerAction(this, work).schedule(state, delay);
  };

  Scheduler.now = function () {
    return Date.now();
  };

  return Scheduler;
}();

exports.Scheduler = Scheduler;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SubjectSubscription = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscription = __webpack_require__(15);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */
var SubjectSubscription =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SubjectSubscription, _super);

  function SubjectSubscription(subject, subscriber) {
    var _this = _super.call(this) || this;

    _this.subject = subject;
    _this.subscriber = subscriber;
    _this.closed = false;
    return _this;
  }

  SubjectSubscription.prototype.unsubscribe = function () {
    if (this.closed) {
      return;
    }

    this.closed = true;
    var subject = this.subject;
    var observers = subject.observers;
    this.subject = null;

    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
      return;
    }

    var subscriberIndex = observers.indexOf(this.subscriber);

    if (subscriberIndex !== -1) {
      observers.splice(subscriberIndex, 1);
    }
  };

  return SubjectSubscription;
}(_Subscription.Subscription);

exports.SubjectSubscription = SubjectSubscription;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectableObservableDescriptor = exports.ConnectableObservable = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _Observable = __webpack_require__(5);

var _Subscriber = __webpack_require__(3);

var _Subscription = __webpack_require__(15);

var _refCount = __webpack_require__(133);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */
var ConnectableObservable =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ConnectableObservable, _super);

  function ConnectableObservable(source, subjectFactory) {
    var _this = _super.call(this) || this;

    _this.source = source;
    _this.subjectFactory = subjectFactory;
    _this._refCount = 0;
    _this._isComplete = false;
    return _this;
  }

  ConnectableObservable.prototype._subscribe = function (subscriber) {
    return this.getSubject().subscribe(subscriber);
  };

  ConnectableObservable.prototype.getSubject = function () {
    var subject = this._subject;

    if (!subject || subject.isStopped) {
      this._subject = this.subjectFactory();
    }

    return this._subject;
  };

  ConnectableObservable.prototype.connect = function () {
    var connection = this._connection;

    if (!connection) {
      this._isComplete = false;
      connection = this._connection = new _Subscription.Subscription();
      connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this)));

      if (connection.closed) {
        this._connection = null;
        connection = _Subscription.Subscription.EMPTY;
      } else {
        this._connection = connection;
      }
    }

    return connection;
  };

  ConnectableObservable.prototype.refCount = function () {
    return (0, _refCount.refCount)()(this);
  };

  return ConnectableObservable;
}(_Observable.Observable);

exports.ConnectableObservable = ConnectableObservable;
var connectableProto = ConnectableObservable.prototype;
var connectableObservableDescriptor = {
  operator: {
    value: null
  },
  _refCount: {
    value: 0,
    writable: true
  },
  _subject: {
    value: null,
    writable: true
  },
  _connection: {
    value: null,
    writable: true
  },
  _subscribe: {
    value: connectableProto._subscribe
  },
  _isComplete: {
    value: connectableProto._isComplete,
    writable: true
  },
  getSubject: {
    value: connectableProto.getSubject
  },
  connect: {
    value: connectableProto.connect
  },
  refCount: {
    value: connectableProto.refCount
  }
};
exports.connectableObservableDescriptor = connectableObservableDescriptor;

var ConnectableSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ConnectableSubscriber, _super);

  function ConnectableSubscriber(destination, connectable) {
    var _this = _super.call(this, destination) || this;

    _this.connectable = connectable;
    return _this;
  }

  ConnectableSubscriber.prototype._error = function (err) {
    this._unsubscribe();

    _super.prototype._error.call(this, err);
  };

  ConnectableSubscriber.prototype._complete = function () {
    this.connectable._isComplete = true;

    this._unsubscribe();

    _super.prototype._complete.call(this);
  };

  ConnectableSubscriber.prototype._unsubscribe = function () {
    var connectable = this.connectable;

    if (connectable) {
      this.connectable = null;
      var connection = connectable._connection;
      connectable._refCount = 0;
      connectable._subject = null;
      connectable._connection = null;

      if (connection) {
        connection.unsubscribe();
      }
    }
  };

  return ConnectableSubscriber;
}(_Subject.SubjectSubscriber);

var RefCountOperator =
/*@__PURE__*/
function () {
  function RefCountOperator(connectable) {
    this.connectable = connectable;
  }

  RefCountOperator.prototype.call = function (subscriber, source) {
    var connectable = this.connectable;
    connectable._refCount++;
    var refCounter = new RefCountSubscriber(subscriber, connectable);
    var subscription = source.subscribe(refCounter);

    if (!refCounter.closed) {
      refCounter.connection = connectable.connect();
    }

    return subscription;
  };

  return RefCountOperator;
}();

var RefCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(RefCountSubscriber, _super);

  function RefCountSubscriber(destination, connectable) {
    var _this = _super.call(this, destination) || this;

    _this.connectable = connectable;
    return _this;
  }

  RefCountSubscriber.prototype._unsubscribe = function () {
    var connectable = this.connectable;

    if (!connectable) {
      this.connection = null;
      return;
    }

    this.connectable = null;
    var refCount = connectable._refCount;

    if (refCount <= 0) {
      this.connection = null;
      return;
    }

    connectable._refCount = refCount - 1;

    if (refCount > 1) {
      this.connection = null;
      return;
    }

    var connection = this.connection;
    var sharedConnection = connectable._connection;
    this.connection = null;

    if (sharedConnection && (!connection || sharedConnection === connection)) {
      sharedConnection.unsubscribe();
    }
  };

  return RefCountSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.merge = merge;

var _Observable = __webpack_require__(5);

var _isScheduler = __webpack_require__(27);

var _mergeAll = __webpack_require__(132);

var _fromArray = __webpack_require__(46);

/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */
function merge() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var concurrent = Number.POSITIVE_INFINITY;
  var scheduler = null;
  var last = observables[observables.length - 1];

  if ((0, _isScheduler.isScheduler)(last)) {
    scheduler = observables.pop();

    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
      concurrent = observables.pop();
    }
  } else if (typeof last === 'number') {
    concurrent = observables.pop();
  }

  if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable.Observable) {
    return observables[0];
  }

  return (0, _mergeAll.mergeAll)(concurrent)((0, _fromArray.fromArray)(observables, scheduler));
}

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.race = race;
exports.RaceSubscriber = exports.RaceOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _isArray = __webpack_require__(20);

var _fromArray = __webpack_require__(46);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function race() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  if (observables.length === 1) {
    if ((0, _isArray.isArray)(observables[0])) {
      observables = observables[0];
    } else {
      return observables[0];
    }
  }

  return (0, _fromArray.fromArray)(observables, undefined).lift(new RaceOperator());
}

var RaceOperator =
/*@__PURE__*/
function () {
  function RaceOperator() {}

  RaceOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RaceSubscriber(subscriber));
  };

  return RaceOperator;
}();

exports.RaceOperator = RaceOperator;

var RaceSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(RaceSubscriber, _super);

  function RaceSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.hasFirst = false;
    _this.observables = [];
    _this.subscriptions = [];
    return _this;
  }

  RaceSubscriber.prototype._next = function (observable) {
    this.observables.push(observable);
  };

  RaceSubscriber.prototype._complete = function () {
    var observables = this.observables;
    var len = observables.length;

    if (len === 0) {
      this.destination.complete();
    } else {
      for (var i = 0; i < len && !this.hasFirst; i++) {
        var observable = observables[i];
        var subscription = (0, _subscribeToResult.subscribeToResult)(this, observable, observable, i);

        if (this.subscriptions) {
          this.subscriptions.push(subscription);
        }

        this.add(subscription);
      }

      this.observables = null;
    }
  };

  RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    if (!this.hasFirst) {
      this.hasFirst = true;

      for (var i = 0; i < this.subscriptions.length; i++) {
        if (i !== outerIndex) {
          var subscription = this.subscriptions[i];
          subscription.unsubscribe();
          this.remove(subscription);
        }
      }

      this.subscriptions = null;
    }

    this.destination.next(innerValue);
  };

  return RaceSubscriber;
}(_OuterSubscriber.OuterSubscriber);

exports.RaceSubscriber = RaceSubscriber;

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timer = timer;

var _Observable = __webpack_require__(5);

var _async = __webpack_require__(19);

var _isNumeric = __webpack_require__(101);

var _isScheduler = __webpack_require__(27);

/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */
function timer(dueTime, periodOrScheduler, scheduler) {
  if (dueTime === void 0) {
    dueTime = 0;
  }

  var period = -1;

  if ((0, _isNumeric.isNumeric)(periodOrScheduler)) {
    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
  } else if ((0, _isScheduler.isScheduler)(periodOrScheduler)) {
    scheduler = periodOrScheduler;
  }

  if (!(0, _isScheduler.isScheduler)(scheduler)) {
    scheduler = _async.async;
  }

  return new _Observable.Observable(function (subscriber) {
    var due = (0, _isNumeric.isNumeric)(dueTime) ? dueTime : +dueTime - scheduler.now();
    return scheduler.schedule(dispatch, due, {
      index: 0,
      period: period,
      subscriber: subscriber
    });
  });
}

function dispatch(state) {
  var index = state.index,
      period = state.period,
      subscriber = state.subscriber;
  subscriber.next(index);

  if (subscriber.closed) {
    return;
  } else if (period === -1) {
    return subscriber.complete();
  }

  state.index = index + 1;
  this.schedule(state, period);
}

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.audit = audit;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function audit(durationSelector) {
  return function auditOperatorFunction(source) {
    return source.lift(new AuditOperator(durationSelector));
  };
}

var AuditOperator =
/*@__PURE__*/
function () {
  function AuditOperator(durationSelector) {
    this.durationSelector = durationSelector;
  }

  AuditOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
  };

  return AuditOperator;
}();

var AuditSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AuditSubscriber, _super);

  function AuditSubscriber(destination, durationSelector) {
    var _this = _super.call(this, destination) || this;

    _this.durationSelector = durationSelector;
    _this.hasValue = false;
    return _this;
  }

  AuditSubscriber.prototype._next = function (value) {
    this.value = value;
    this.hasValue = true;

    if (!this.throttled) {
      var duration = (0, _tryCatch.tryCatch)(this.durationSelector)(value);

      if (duration === _errorObject.errorObject) {
        this.destination.error(_errorObject.errorObject.e);
      } else {
        var innerSubscription = (0, _subscribeToResult.subscribeToResult)(this, duration);

        if (!innerSubscription || innerSubscription.closed) {
          this.clearThrottle();
        } else {
          this.add(this.throttled = innerSubscription);
        }
      }
    }
  };

  AuditSubscriber.prototype.clearThrottle = function () {
    var _a = this,
        value = _a.value,
        hasValue = _a.hasValue,
        throttled = _a.throttled;

    if (throttled) {
      this.remove(throttled);
      this.throttled = null;
      throttled.unsubscribe();
    }

    if (hasValue) {
      this.value = null;
      this.hasValue = false;
      this.destination.next(value);
    }
  };

  AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
    this.clearThrottle();
  };

  AuditSubscriber.prototype.notifyComplete = function () {
    this.clearThrottle();
  };

  return AuditSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatAll = concatAll;

var _mergeAll = __webpack_require__(132);

/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */
function concatAll() {
  return (0, _mergeAll.mergeAll)(1);
}

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatMap = concatMap;

var _mergeMap = __webpack_require__(97);

/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */
function concatMap(project, resultSelector) {
  return (0, _mergeMap.mergeMap)(project, resultSelector, 1);
}

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distinctUntilChanged = distinctUntilChanged;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */
function distinctUntilChanged(compare, keySelector) {
  return function (source) {
    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));
  };
}

var DistinctUntilChangedOperator =
/*@__PURE__*/
function () {
  function DistinctUntilChangedOperator(compare, keySelector) {
    this.compare = compare;
    this.keySelector = keySelector;
  }

  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
  };

  return DistinctUntilChangedOperator;
}();

var DistinctUntilChangedSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DistinctUntilChangedSubscriber, _super);

  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.hasKey = false;

    if (typeof compare === 'function') {
      _this.compare = compare;
    }

    return _this;
  }

  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
    return x === y;
  };

  DistinctUntilChangedSubscriber.prototype._next = function (value) {
    var keySelector = this.keySelector;
    var key = value;

    if (keySelector) {
      key = (0, _tryCatch.tryCatch)(this.keySelector)(value);

      if (key === _errorObject.errorObject) {
        return this.destination.error(_errorObject.errorObject.e);
      }
    }

    var result = false;

    if (this.hasKey) {
      result = (0, _tryCatch.tryCatch)(this.compare)(this.key, key);

      if (result === _errorObject.errorObject) {
        return this.destination.error(_errorObject.errorObject.e);
      }
    } else {
      this.hasKey = true;
    }

    if (Boolean(result) === false) {
      this.key = key;
      this.destination.next(value);
    }
  };

  return DistinctUntilChangedSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.find = find;
exports.FindValueSubscriber = exports.FindValueOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function find(predicate, thisArg) {
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate is not a function');
  }

  return function (source) {
    return source.lift(new FindValueOperator(predicate, source, false, thisArg));
  };
}

var FindValueOperator =
/*@__PURE__*/
function () {
  function FindValueOperator(predicate, source, yieldIndex, thisArg) {
    this.predicate = predicate;
    this.source = source;
    this.yieldIndex = yieldIndex;
    this.thisArg = thisArg;
  }

  FindValueOperator.prototype.call = function (observer, source) {
    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
  };

  return FindValueOperator;
}();

exports.FindValueOperator = FindValueOperator;

var FindValueSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(FindValueSubscriber, _super);

  function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.source = source;
    _this.yieldIndex = yieldIndex;
    _this.thisArg = thisArg;
    _this.index = 0;
    return _this;
  }

  FindValueSubscriber.prototype.notifyComplete = function (value) {
    var destination = this.destination;
    destination.next(value);
    destination.complete();
  };

  FindValueSubscriber.prototype._next = function (value) {
    var _a = this,
        predicate = _a.predicate,
        thisArg = _a.thisArg;

    var index = this.index++;

    try {
      var result = predicate.call(thisArg || this, value, index, this.source);

      if (result) {
        this.notifyComplete(this.yieldIndex ? index : value);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  FindValueSubscriber.prototype._complete = function () {
    this.notifyComplete(this.yieldIndex ? -1 : undefined);
  };

  return FindValueSubscriber;
}(_Subscriber.Subscriber);

exports.FindValueSubscriber = FindValueSubscriber;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.groupBy = groupBy;
exports.GroupedObservable = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _Subscription = __webpack_require__(15);

var _Observable = __webpack_require__(5);

var _Subject = __webpack_require__(18);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */
function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
  return function (source) {
    return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
  };
}

var GroupByOperator =
/*@__PURE__*/
function () {
  function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
    this.keySelector = keySelector;
    this.elementSelector = elementSelector;
    this.durationSelector = durationSelector;
    this.subjectSelector = subjectSelector;
  }

  GroupByOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
  };

  return GroupByOperator;
}();

var GroupBySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(GroupBySubscriber, _super);

  function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.elementSelector = elementSelector;
    _this.durationSelector = durationSelector;
    _this.subjectSelector = subjectSelector;
    _this.groups = null;
    _this.attemptedToUnsubscribe = false;
    _this.count = 0;
    return _this;
  }

  GroupBySubscriber.prototype._next = function (value) {
    var key;

    try {
      key = this.keySelector(value);
    } catch (err) {
      this.error(err);
      return;
    }

    this._group(value, key);
  };

  GroupBySubscriber.prototype._group = function (value, key) {
    var groups = this.groups;

    if (!groups) {
      groups = this.groups = new Map();
    }

    var group = groups.get(key);
    var element;

    if (this.elementSelector) {
      try {
        element = this.elementSelector(value);
      } catch (err) {
        this.error(err);
      }
    } else {
      element = value;
    }

    if (!group) {
      group = this.subjectSelector ? this.subjectSelector() : new _Subject.Subject();
      groups.set(key, group);
      var groupedObservable = new GroupedObservable(key, group, this);
      this.destination.next(groupedObservable);

      if (this.durationSelector) {
        var duration = void 0;

        try {
          duration = this.durationSelector(new GroupedObservable(key, group));
        } catch (err) {
          this.error(err);
          return;
        }

        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
      }
    }

    if (!group.closed) {
      group.next(element);
    }
  };

  GroupBySubscriber.prototype._error = function (err) {
    var groups = this.groups;

    if (groups) {
      groups.forEach(function (group, key) {
        group.error(err);
      });
      groups.clear();
    }

    this.destination.error(err);
  };

  GroupBySubscriber.prototype._complete = function () {
    var groups = this.groups;

    if (groups) {
      groups.forEach(function (group, key) {
        group.complete();
      });
      groups.clear();
    }

    this.destination.complete();
  };

  GroupBySubscriber.prototype.removeGroup = function (key) {
    this.groups.delete(key);
  };

  GroupBySubscriber.prototype.unsubscribe = function () {
    if (!this.closed) {
      this.attemptedToUnsubscribe = true;

      if (this.count === 0) {
        _super.prototype.unsubscribe.call(this);
      }
    }
  };

  return GroupBySubscriber;
}(_Subscriber.Subscriber);

var GroupDurationSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(GroupDurationSubscriber, _super);

  function GroupDurationSubscriber(key, group, parent) {
    var _this = _super.call(this, group) || this;

    _this.key = key;
    _this.group = group;
    _this.parent = parent;
    return _this;
  }

  GroupDurationSubscriber.prototype._next = function (value) {
    this.complete();
  };

  GroupDurationSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        parent = _a.parent,
        key = _a.key;

    this.key = this.parent = null;

    if (parent) {
      parent.removeGroup(key);
    }
  };

  return GroupDurationSubscriber;
}(_Subscriber.Subscriber);

var GroupedObservable =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(GroupedObservable, _super);

  function GroupedObservable(key, groupSubject, refCountSubscription) {
    var _this = _super.call(this) || this;

    _this.key = key;
    _this.groupSubject = groupSubject;
    _this.refCountSubscription = refCountSubscription;
    return _this;
  }

  GroupedObservable.prototype._subscribe = function (subscriber) {
    var subscription = new _Subscription.Subscription();

    var _a = this,
        refCountSubscription = _a.refCountSubscription,
        groupSubject = _a.groupSubject;

    if (refCountSubscription && !refCountSubscription.closed) {
      subscription.add(new InnerRefCountSubscription(refCountSubscription));
    }

    subscription.add(groupSubject.subscribe(subscriber));
    return subscription;
  };

  return GroupedObservable;
}(_Observable.Observable);

exports.GroupedObservable = GroupedObservable;

var InnerRefCountSubscription =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(InnerRefCountSubscription, _super);

  function InnerRefCountSubscription(parent) {
    var _this = _super.call(this) || this;

    _this.parent = parent;
    parent.count++;
    return _this;
  }

  InnerRefCountSubscription.prototype.unsubscribe = function () {
    var parent = this.parent;

    if (!parent.closed && !this.closed) {
      _super.prototype.unsubscribe.call(this);

      parent.count -= 1;

      if (parent.count === 0 && parent.attemptedToUnsubscribe) {
        parent.unsubscribe();
      }
    }
  };

  return InnerRefCountSubscription;
}(_Subscription.Subscription);

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.observeOn = observeOn;
exports.ObserveOnMessage = exports.ObserveOnSubscriber = exports.ObserveOnOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _Notification = __webpack_require__(94);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */
function observeOn(scheduler, delay) {
  if (delay === void 0) {
    delay = 0;
  }

  return function observeOnOperatorFunction(source) {
    return source.lift(new ObserveOnOperator(scheduler, delay));
  };
}

var ObserveOnOperator =
/*@__PURE__*/
function () {
  function ObserveOnOperator(scheduler, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    this.scheduler = scheduler;
    this.delay = delay;
  }

  ObserveOnOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
  };

  return ObserveOnOperator;
}();

exports.ObserveOnOperator = ObserveOnOperator;

var ObserveOnSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ObserveOnSubscriber, _super);

  function ObserveOnSubscriber(destination, scheduler, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    var _this = _super.call(this, destination) || this;

    _this.scheduler = scheduler;
    _this.delay = delay;
    return _this;
  }

  ObserveOnSubscriber.dispatch = function (arg) {
    var notification = arg.notification,
        destination = arg.destination;
    notification.observe(destination);
    this.unsubscribe();
  };

  ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
    this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
  };

  ObserveOnSubscriber.prototype._next = function (value) {
    this.scheduleMessage(_Notification.Notification.createNext(value));
  };

  ObserveOnSubscriber.prototype._error = function (err) {
    this.scheduleMessage(_Notification.Notification.createError(err));
  };

  ObserveOnSubscriber.prototype._complete = function () {
    this.scheduleMessage(_Notification.Notification.createComplete());
  };

  return ObserveOnSubscriber;
}(_Subscriber.Subscriber);

exports.ObserveOnSubscriber = ObserveOnSubscriber;

var ObserveOnMessage =
/*@__PURE__*/
function () {
  function ObserveOnMessage(notification, destination) {
    this.notification = notification;
    this.destination = destination;
  }

  return ObserveOnMessage;
}();

exports.ObserveOnMessage = ObserveOnMessage;

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tap = tap;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _noop = __webpack_require__(102);

var _isFunction = __webpack_require__(80);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */
function tap(nextOrObserver, error, complete) {
  return function tapOperatorFunction(source) {
    return source.lift(new DoOperator(nextOrObserver, error, complete));
  };
}

var DoOperator =
/*@__PURE__*/
function () {
  function DoOperator(nextOrObserver, error, complete) {
    this.nextOrObserver = nextOrObserver;
    this.error = error;
    this.complete = complete;
  }

  DoOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
  };

  return DoOperator;
}();

var TapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(TapSubscriber, _super);

  function TapSubscriber(destination, observerOrNext, error, complete) {
    var _this = _super.call(this, destination) || this;

    _this._tapNext = _noop.noop;
    _this._tapError = _noop.noop;
    _this._tapComplete = _noop.noop;
    _this._tapError = error || _noop.noop;
    _this._tapComplete = complete || _noop.noop;

    if ((0, _isFunction.isFunction)(observerOrNext)) {
      _this._context = _this;
      _this._tapNext = observerOrNext;
    } else if (observerOrNext) {
      _this._context = observerOrNext;
      _this._tapNext = observerOrNext.next || _noop.noop;
      _this._tapError = observerOrNext.error || _noop.noop;
      _this._tapComplete = observerOrNext.complete || _noop.noop;
    }

    return _this;
  }

  TapSubscriber.prototype._next = function (value) {
    try {
      this._tapNext.call(this._context, value);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(value);
  };

  TapSubscriber.prototype._error = function (err) {
    try {
      this._tapError.call(this._context, err);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.error(err);
  };

  TapSubscriber.prototype._complete = function () {
    try {
      this._tapComplete.call(this._context);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    return this.destination.complete();
  };

  return TapSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throttle = throttle;
exports.defaultThrottleConfig = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
var defaultThrottleConfig = {
  leading: true,
  trailing: false
};
exports.defaultThrottleConfig = defaultThrottleConfig;

function throttle(durationSelector, config) {
  if (config === void 0) {
    config = defaultThrottleConfig;
  }

  return function (source) {
    return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));
  };
}

var ThrottleOperator =
/*@__PURE__*/
function () {
  function ThrottleOperator(durationSelector, leading, trailing) {
    this.durationSelector = durationSelector;
    this.leading = leading;
    this.trailing = trailing;
  }

  ThrottleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
  };

  return ThrottleOperator;
}();

var ThrottleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ThrottleSubscriber, _super);

  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.durationSelector = durationSelector;
    _this._leading = _leading;
    _this._trailing = _trailing;
    _this._hasValue = false;
    return _this;
  }

  ThrottleSubscriber.prototype._next = function (value) {
    this._hasValue = true;
    this._sendValue = value;

    if (!this._throttled) {
      if (this._leading) {
        this.send();
      } else {
        this.throttle(value);
      }
    }
  };

  ThrottleSubscriber.prototype.send = function () {
    var _a = this,
        _hasValue = _a._hasValue,
        _sendValue = _a._sendValue;

    if (_hasValue) {
      this.destination.next(_sendValue);
      this.throttle(_sendValue);
    }

    this._hasValue = false;
    this._sendValue = null;
  };

  ThrottleSubscriber.prototype.throttle = function (value) {
    var duration = this.tryDurationSelector(value);

    if (duration) {
      this.add(this._throttled = (0, _subscribeToResult.subscribeToResult)(this, duration));
    }
  };

  ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
    try {
      return this.durationSelector(value);
    } catch (err) {
      this.destination.error(err);
      return null;
    }
  };

  ThrottleSubscriber.prototype.throttlingDone = function () {
    var _a = this,
        _throttled = _a._throttled,
        _trailing = _a._trailing;

    if (_throttled) {
      _throttled.unsubscribe();
    }

    this._throttled = null;

    if (_trailing) {
      this.send();
    }
  };

  ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.throttlingDone();
  };

  ThrottleSubscriber.prototype.notifyComplete = function () {
    this.throttlingDone();
  };

  return ThrottleSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timeoutWith = timeoutWith;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _async = __webpack_require__(19);

var _isDate = __webpack_require__(234);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function timeoutWith(due, withObservable, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  return function (source) {
    var absoluteTimeout = (0, _isDate.isDate)(due);
    var waitFor = absoluteTimeout ? +due - scheduler.now() : Math.abs(due);
    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
  };
}

var TimeoutWithOperator =
/*@__PURE__*/
function () {
  function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
    this.waitFor = waitFor;
    this.absoluteTimeout = absoluteTimeout;
    this.withObservable = withObservable;
    this.scheduler = scheduler;
  }

  TimeoutWithOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
  };

  return TimeoutWithOperator;
}();

var TimeoutWithSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(TimeoutWithSubscriber, _super);

  function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.absoluteTimeout = absoluteTimeout;
    _this.waitFor = waitFor;
    _this.withObservable = withObservable;
    _this.scheduler = scheduler;
    _this.action = null;

    _this.scheduleTimeout();

    return _this;
  }

  TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
    var withObservable = subscriber.withObservable;

    subscriber._unsubscribeAndRecycle();

    subscriber.add((0, _subscribeToResult.subscribeToResult)(subscriber, withObservable));
  };

  TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
    var action = this.action;

    if (action) {
      this.action = action.schedule(this, this.waitFor);
    } else {
      this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
    }
  };

  TimeoutWithSubscriber.prototype._next = function (value) {
    if (!this.absoluteTimeout) {
      this.scheduleTimeout();
    }

    _super.prototype._next.call(this, value);
  };

  TimeoutWithSubscriber.prototype._unsubscribe = function () {
    this.action = null;
    this.scheduler = null;
    this.withObservable = null;
  };

  return TimeoutWithSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asap = void 0;

var _AsapAction = __webpack_require__(606);

var _AsapScheduler = __webpack_require__(607);

/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */
var asap =
/*@__PURE__*/
new _AsapScheduler.AsapScheduler(_AsapAction.AsapAction);
exports.asap = asap;

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.queue = void 0;

var _QueueAction = __webpack_require__(608);

var _QueueScheduler = __webpack_require__(609);

/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */
var queue =
/*@__PURE__*/
new _QueueScheduler.QueueScheduler(_QueueAction.QueueAction);
exports.queue = queue;

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeoutError = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */
var TimeoutError =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(TimeoutError, _super);

  function TimeoutError() {
    var _this = _super.call(this, 'Timeout has occurred') || this;

    _this.name = 'TimeoutError';
    Object.setPrototypeOf(_this, TimeoutError.prototype);
    return _this;
  }

  return TimeoutError;
}(Error);

exports.TimeoutError = TimeoutError;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UnsubscriptionError = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */
var UnsubscriptionError =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(UnsubscriptionError, _super);

  function UnsubscriptionError(errors) {
    var _this = _super.call(this, errors ? errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) {
      return i + 1 + ") " + err.toString();
    }).join('\n  ') : '') || this;

    _this.errors = errors;
    _this.name = 'UnsubscriptionError';
    Object.setPrototypeOf(_this, UnsubscriptionError.prototype);
    return _this;
  }

  return UnsubscriptionError;
}(Error);

exports.UnsubscriptionError = UnsubscriptionError;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isArrayLike = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = function isArrayLike(x) {
  return x && typeof x.length === 'number' && typeof x !== 'function';
};

exports.isArrayLike = isArrayLike;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDate = isDate;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isDate(value) {
  return value instanceof Date && !isNaN(+value);
}

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isObject = isObject;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
  return x != null && _typeof(x) === 'object';
}

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPromise = isPromise;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
  return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeTo = void 0;

var _Observable = __webpack_require__(5);

var _subscribeToArray = __webpack_require__(238);

var _subscribeToPromise = __webpack_require__(241);

var _subscribeToIterable = __webpack_require__(239);

var _subscribeToObservable = __webpack_require__(240);

var _isArrayLike = __webpack_require__(233);

var _isPromise = __webpack_require__(236);

var _isObject = __webpack_require__(235);

var _iterator = __webpack_require__(77);

var _observable = __webpack_require__(61);

/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */
var subscribeTo = function subscribeTo(result) {
  if (result instanceof _Observable.Observable) {
    return function (subscriber) {
      if (result._isScalar) {
        subscriber.next(result.value);
        subscriber.complete();
        return undefined;
      } else {
        return result.subscribe(subscriber);
      }
    };
  } else if (result && typeof result[_observable.observable] === 'function') {
    return (0, _subscribeToObservable.subscribeToObservable)(result);
  } else if ((0, _isArrayLike.isArrayLike)(result)) {
    return (0, _subscribeToArray.subscribeToArray)(result);
  } else if ((0, _isPromise.isPromise)(result)) {
    return (0, _subscribeToPromise.subscribeToPromise)(result);
  } else if (result && typeof result[_iterator.iterator] === 'function') {
    return (0, _subscribeToIterable.subscribeToIterable)(result);
  } else {
    var value = (0, _isObject.isObject)(result) ? 'an invalid object' : "'" + result + "'";
    var msg = "You provided " + value + " where a stream was expected." + ' You can provide an Observable, Promise, Array, or Iterable.';
    throw new TypeError(msg);
  }
};

exports.subscribeTo = subscribeTo;

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeToArray = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function subscribeToArray(array) {
  return function (subscriber) {
    for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
      subscriber.next(array[i]);
    }

    if (!subscriber.closed) {
      subscriber.complete();
    }
  };
};

exports.subscribeToArray = subscribeToArray;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeToIterable = void 0;

var _iterator = __webpack_require__(77);

/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */
var subscribeToIterable = function subscribeToIterable(iterable) {
  return function (subscriber) {
    var iterator = iterable[_iterator.iterator]();

    do {
      var item = iterator.next();

      if (item.done) {
        subscriber.complete();
        break;
      }

      subscriber.next(item.value);

      if (subscriber.closed) {
        break;
      }
    } while (true);

    if (typeof iterator.return === 'function') {
      subscriber.add(function () {
        if (iterator.return) {
          iterator.return();
        }
      });
    }

    return subscriber;
  };
};

exports.subscribeToIterable = subscribeToIterable;

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeToObservable = void 0;

var _observable = __webpack_require__(61);

/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */
var subscribeToObservable = function subscribeToObservable(obj) {
  return function (subscriber) {
    var obs = obj[_observable.observable]();

    if (typeof obs.subscribe !== 'function') {
      throw new TypeError('Provided object does not correctly implement Symbol.observable');
    } else {
      return obs.subscribe(subscriber);
    }
  };
};

exports.subscribeToObservable = subscribeToObservable;

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeToPromise = void 0;

var _hostReportError = __webpack_require__(139);

/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */
var subscribeToPromise = function subscribeToPromise(promise) {
  return function (subscriber) {
    promise.then(function (value) {
      if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
      }
    }, function (err) {
      return subscriber.error(err);
    }).then(null, _hostReportError.hostReportError);
    return subscriber;
  };
};

exports.subscribeToPromise = subscribeToPromise;

/***/ }),
/* 242 */,
/* 243 */,
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ɵangular_packages_http_http_a = _createDefaultCookieXSRFStrategy;
exports.ɵangular_packages_http_http_b = httpFactory;
exports.ɵangular_packages_http_http_c = jsonpFactory;
exports.VERSION = exports.URLSearchParams = exports.QueryEncoder = exports.Response = exports.Request = exports.XSRFStrategy = exports.ConnectionBackend = exports.Connection = exports.JsonpModule = exports.HttpModule = exports.Jsonp = exports.Http = exports.Headers = exports.ResponseType = exports.ResponseContentType = exports.RequestMethod = exports.ReadyState = exports.ResponseOptions = exports.BaseResponseOptions = exports.RequestOptions = exports.BaseRequestOptions = exports.XHRConnection = exports.XHRBackend = exports.CookieXSRFStrategy = exports.JSONPConnection = exports.JSONPBackend = exports.BrowserXhr = exports.ɵangular_packages_http_http_f = exports.ɵangular_packages_http_http_e = void 0;

var _core = __webpack_require__(0);

var _tslib = __webpack_require__(1);

var _rxjs = __webpack_require__(31);

var _platformBrowser = __webpack_require__(50);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A backend for http that uses the `XMLHttpRequest` browser API.
 *
 * Take care not to evaluate this in non-browser contexts.
 *
 * @deprecated use @angular/common/http instead
 */
var BrowserXhr =
/** @class */
function () {
  function BrowserXhr() {}

  BrowserXhr.prototype.build = function () {
    return new XMLHttpRequest();
  };

  BrowserXhr.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  BrowserXhr.ctorParameters = function () {
    return [];
  };

  return BrowserXhr;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Supported http methods.
 * @deprecated use @angular/common/http instead
 */

/**
 * Supported http methods.
 * @deprecated use @angular/common/http instead
 */


exports.BrowserXhr = BrowserXhr;
var RequestMethod;
/**
 * Supported http methods.
 * @deprecated use @angular/common/http instead
 */

exports.RequestMethod = RequestMethod;

(function (RequestMethod) {
  RequestMethod[RequestMethod["Get"] = 0] = "Get";
  RequestMethod[RequestMethod["Post"] = 1] = "Post";
  RequestMethod[RequestMethod["Put"] = 2] = "Put";
  RequestMethod[RequestMethod["Delete"] = 3] = "Delete";
  RequestMethod[RequestMethod["Options"] = 4] = "Options";
  RequestMethod[RequestMethod["Head"] = 5] = "Head";
  RequestMethod[RequestMethod["Patch"] = 6] = "Patch";
})(RequestMethod || (exports.RequestMethod = RequestMethod = {}));
/**
 * All possible states in which a connection can be, based on
 * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an
 * additional "CANCELLED" state.
 * @deprecated use @angular/common/http instead
 */

/**
 * All possible states in which a connection can be, based on
 * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an
 * additional "CANCELLED" state.
 * @deprecated use @angular/common/http instead
 */


var ReadyState;
/**
 * All possible states in which a connection can be, based on
 * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an
 * additional "CANCELLED" state.
 * @deprecated use @angular/common/http instead
 */

exports.ReadyState = ReadyState;

(function (ReadyState) {
  ReadyState[ReadyState["Unsent"] = 0] = "Unsent";
  ReadyState[ReadyState["Open"] = 1] = "Open";
  ReadyState[ReadyState["HeadersReceived"] = 2] = "HeadersReceived";
  ReadyState[ReadyState["Loading"] = 3] = "Loading";
  ReadyState[ReadyState["Done"] = 4] = "Done";
  ReadyState[ReadyState["Cancelled"] = 5] = "Cancelled";
})(ReadyState || (exports.ReadyState = ReadyState = {}));
/**
 * Acceptable response types to be associated with a {@link Response}, based on
 * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.
 * @deprecated use @angular/common/http instead
 */

/**
 * Acceptable response types to be associated with a {@link Response}, based on
 * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.
 * @deprecated use @angular/common/http instead
 */


var ResponseType;
/**
 * Acceptable response types to be associated with a {@link Response}, based on
 * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.
 * @deprecated use @angular/common/http instead
 */

exports.ResponseType = ResponseType;

(function (ResponseType) {
  ResponseType[ResponseType["Basic"] = 0] = "Basic";
  ResponseType[ResponseType["Cors"] = 1] = "Cors";
  ResponseType[ResponseType["Default"] = 2] = "Default";
  ResponseType[ResponseType["Error"] = 3] = "Error";
  ResponseType[ResponseType["Opaque"] = 4] = "Opaque";
})(ResponseType || (exports.ResponseType = ResponseType = {}));
/**
 * Supported content type to be automatically associated with a {@link Request}.
 * @deprecated use @angular/common/http instead
 */

/**
 * Supported content type to be automatically associated with a {@link Request}.
 * @deprecated use @angular/common/http instead
 */


var ContentType;
/**
 * Supported content type to be automatically associated with a {@link Request}.
 * @deprecated use @angular/common/http instead
 */

(function (ContentType) {
  ContentType[ContentType["NONE"] = 0] = "NONE";
  ContentType[ContentType["JSON"] = 1] = "JSON";
  ContentType[ContentType["FORM"] = 2] = "FORM";
  ContentType[ContentType["FORM_DATA"] = 3] = "FORM_DATA";
  ContentType[ContentType["TEXT"] = 4] = "TEXT";
  ContentType[ContentType["BLOB"] = 5] = "BLOB";
  ContentType[ContentType["ARRAY_BUFFER"] = 6] = "ARRAY_BUFFER";
})(ContentType || (ContentType = {}));
/**
 * Define which buffer to use to store the response
 * @deprecated use @angular/common/http instead
 */

/**
 * Define which buffer to use to store the response
 * @deprecated use @angular/common/http instead
 */


var ResponseContentType;
/**
 * Define which buffer to use to store the response
 * @deprecated use @angular/common/http instead
 */

exports.ResponseContentType = ResponseContentType;

(function (ResponseContentType) {
  ResponseContentType[ResponseContentType["Text"] = 0] = "Text";
  ResponseContentType[ResponseContentType["Json"] = 1] = "Json";
  ResponseContentType[ResponseContentType["ArrayBuffer"] = 2] = "ArrayBuffer";
  ResponseContentType[ResponseContentType["Blob"] = 3] = "Blob";
})(ResponseContentType || (exports.ResponseContentType = ResponseContentType = {}));
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as
 * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).
 *
 * The only known difference between this `Headers` implementation and the spec is the
 * lack of an `entries` method.
 *
 * ### Example
 *
 * ```
 * import {Headers} from '@angular/http';
 *
 * var firstHeaders = new Headers();
 * firstHeaders.append('Content-Type', 'image/jpeg');
 * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'
 *
 * // Create headers from Plain Old JavaScript Object
 * var secondHeaders = new Headers({
 *   'X-My-Custom-Header': 'Angular'
 * });
 * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'
 *
 * var thirdHeaders = new Headers(secondHeaders);
 * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'
 * ```
 *
 * @deprecated use @angular/common/http instead
 */


var Headers =
/** @class */
function () {
  // TODO(vicb): any -> string|string[]
  function Headers(headers) {
    var _this = this;
    /** @internal header names are lower case */


    this._headers = new Map();
    /** @internal map lower case names to actual names */

    this._normalizedNames = new Map();

    if (!headers) {
      return;
    }

    if (headers instanceof Headers) {
      headers.forEach(function (values, name) {
        values.forEach(function (value) {
          return _this.append(name, value);
        });
      });
      return;
    }

    Object.keys(headers).forEach(function (name) {
      var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];

      _this.delete(name);

      values.forEach(function (value) {
        return _this.append(name, value);
      });
    });
  }
  /**
   * Returns a new Headers instance from the given DOMString of Response Headers
   */

  /**
     * Returns a new Headers instance from the given DOMString of Response Headers
     */


  Headers.fromResponseHeaderString =
  /**
  * Returns a new Headers instance from the given DOMString of Response Headers
  */
  function (headersString) {
    var headers = new Headers();
    headersString.split('\n').forEach(function (line) {
      var index = line.indexOf(':');

      if (index > 0) {
        var name_1 = line.slice(0, index);
        var value = line.slice(index + 1).trim();
        headers.set(name_1, value);
      }
    });
    return headers;
  };
  /**
   * Appends a header to existing list of header values for a given header name.
   */

  /**
     * Appends a header to existing list of header values for a given header name.
     */


  Headers.prototype.append =
  /**
  * Appends a header to existing list of header values for a given header name.
  */
  function (name, value) {
    var values = this.getAll(name);

    if (values === null) {
      this.set(name, value);
    } else {
      values.push(value);
    }
  };
  /**
   * Deletes all header values for the given name.
   */

  /**
     * Deletes all header values for the given name.
     */


  Headers.prototype.delete =
  /**
  * Deletes all header values for the given name.
  */
  function (name) {
    var lcName = name.toLowerCase();

    this._normalizedNames.delete(lcName);

    this._headers.delete(lcName);
  };

  Headers.prototype.forEach = function (fn) {
    var _this = this;

    this._headers.forEach(function (values, lcName) {
      return fn(values, _this._normalizedNames.get(lcName), _this._headers);
    });
  };
  /**
   * Returns first header that matches given name.
   */

  /**
     * Returns first header that matches given name.
     */


  Headers.prototype.get =
  /**
  * Returns first header that matches given name.
  */
  function (name) {
    var values = this.getAll(name);

    if (values === null) {
      return null;
    }

    return values.length > 0 ? values[0] : null;
  };
  /**
   * Checks for existence of header by given name.
   */

  /**
     * Checks for existence of header by given name.
     */


  Headers.prototype.has =
  /**
  * Checks for existence of header by given name.
  */
  function (name) {
    return this._headers.has(name.toLowerCase());
  };
  /**
   * Returns the names of the headers
   */

  /**
     * Returns the names of the headers
     */


  Headers.prototype.keys =
  /**
  * Returns the names of the headers
  */
  function () {
    return Array.from(this._normalizedNames.values());
  };
  /**
   * Sets or overrides header value for given name.
   */

  /**
     * Sets or overrides header value for given name.
     */


  Headers.prototype.set =
  /**
  * Sets or overrides header value for given name.
  */
  function (name, value) {
    if (Array.isArray(value)) {
      if (value.length) {
        this._headers.set(name.toLowerCase(), [value.join(',')]);
      }
    } else {
      this._headers.set(name.toLowerCase(), [value]);
    }

    this.mayBeSetNormalizedName(name);
  };
  /**
   * Returns values of all headers.
   */

  /**
     * Returns values of all headers.
     */


  Headers.prototype.values =
  /**
  * Returns values of all headers.
  */
  function () {
    return Array.from(this._headers.values());
  };
  /**
   * Returns string of all headers.
   */
  // TODO(vicb): returns {[name: string]: string[]}

  /**
     * Returns string of all headers.
     */
  // TODO(vicb): returns {[name: string]: string[]}


  Headers.prototype.toJSON =
  /**
  * Returns string of all headers.
  */
  // TODO(vicb): returns {[name: string]: string[]}
  function () {
    var _this = this;

    var serialized = {};

    this._headers.forEach(function (values, name) {
      var split = [];
      values.forEach(function (v) {
        return split.push.apply(split, (0, _tslib.__spread)(v.split(',')));
      });
      serialized[_this._normalizedNames.get(name)] = split;
    });

    return serialized;
  };
  /**
   * Returns list of header values for a given name.
   */

  /**
     * Returns list of header values for a given name.
     */


  Headers.prototype.getAll =
  /**
  * Returns list of header values for a given name.
  */
  function (name) {
    return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;
  };
  /**
   * This method is not implemented.
   */

  /**
     * This method is not implemented.
     */


  Headers.prototype.entries =
  /**
  * This method is not implemented.
  */
  function () {
    throw new Error('"entries" method is not implemented on Headers class');
  };

  Headers.prototype.mayBeSetNormalizedName = function (name) {
    var lcName = name.toLowerCase();

    if (!this._normalizedNames.has(lcName)) {
      this._normalizedNames.set(lcName, name);
    }
  };

  return Headers;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Creates a response options object to be optionally provided when instantiating a
 * {@link Response}.
 *
 * This class is based on the `ResponseInit` description in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#responseinit).
 *
 * All values are null by default. Typical defaults can be found in the
 * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.
 *
 * This class may be used in tests to build {@link Response Responses} for
 * mock responses (see {@link MockBackend}).
 *
 * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))
 *
 * ```typescript
 * import {ResponseOptions, Response} from '@angular/http';
 *
 * var options = new ResponseOptions({
 *   body: '{"name":"Jeff"}'
 * });
 * var res = new Response(options);
 *
 * console.log('res.json():', res.json()); // Object {name: "Jeff"}
 * ```
 *
 * @deprecated use @angular/common/http instead
 */


exports.Headers = Headers;

var ResponseOptions =
/** @class */
function () {
  function ResponseOptions(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var body = opts.body,
        status = opts.status,
        headers = opts.headers,
        statusText = opts.statusText,
        type = opts.type,
        url = opts.url;
    this.body = body != null ? body : null;
    this.status = status != null ? status : null;
    this.headers = headers != null ? headers : null;
    this.statusText = statusText != null ? statusText : null;
    this.type = type != null ? type : null;
    this.url = url != null ? url : null;
  }
  /**
   * Creates a copy of the `ResponseOptions` instance, using the optional input as values to
   * override
   * existing values. This method will not change the values of the instance on which it is being
   * called.
   *
   * This may be useful when sharing a base `ResponseOptions` object inside tests,
   * where certain properties may change from test to test.
   *
   * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))
   *
   * ```typescript
   * import {ResponseOptions, Response} from '@angular/http';
   *
   * var options = new ResponseOptions({
   *   body: {name: 'Jeff'}
   * });
   * var res = new Response(options.merge({
   *   url: 'https://google.com'
   * }));
   * console.log('options.url:', options.url); // null
   * console.log('res.json():', res.json()); // Object {name: "Jeff"}
   * console.log('res.url:', res.url); // https://google.com
   * ```
   */

  /**
     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to
     * override
     * existing values. This method will not change the values of the instance on which it is being
     * called.
     *
     * This may be useful when sharing a base `ResponseOptions` object inside tests,
     * where certain properties may change from test to test.
     *
     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))
     *
     * ```typescript
     * import {ResponseOptions, Response} from '@angular/http';
     *
     * var options = new ResponseOptions({
     *   body: {name: 'Jeff'}
     * });
     * var res = new Response(options.merge({
     *   url: 'https://google.com'
     * }));
     * console.log('options.url:', options.url); // null
     * console.log('res.json():', res.json()); // Object {name: "Jeff"}
     * console.log('res.url:', res.url); // https://google.com
     * ```
     */


  ResponseOptions.prototype.merge =
  /**
  * Creates a copy of the `ResponseOptions` instance, using the optional input as values to
  * override
  * existing values. This method will not change the values of the instance on which it is being
  * called.
  *
  * This may be useful when sharing a base `ResponseOptions` object inside tests,
  * where certain properties may change from test to test.
  *
  * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))
  *
  * ```typescript
  * import {ResponseOptions, Response} from '@angular/http';
  *
  * var options = new ResponseOptions({
  *   body: {name: 'Jeff'}
  * });
  * var res = new Response(options.merge({
  *   url: 'https://google.com'
  * }));
  * console.log('options.url:', options.url); // null
  * console.log('res.json():', res.json()); // Object {name: "Jeff"}
  * console.log('res.url:', res.url); // https://google.com
  * ```
  */
  function (options) {
    return new ResponseOptions({
      body: options && options.body != null ? options.body : this.body,
      status: options && options.status != null ? options.status : this.status,
      headers: options && options.headers != null ? options.headers : this.headers,
      statusText: options && options.statusText != null ? options.statusText : this.statusText,
      type: options && options.type != null ? options.type : this.type,
      url: options && options.url != null ? options.url : this.url
    });
  };

  return ResponseOptions;
}();
/**
 * Subclass of {@link ResponseOptions}, with default values.
 *
 * Default values:
 *  * status: 200
 *  * headers: empty {@link Headers} object
 *
 * This class could be extended and bound to the {@link ResponseOptions} class
 * when configuring an {@link Injector}, in order to override the default options
 * used by {@link Http} to create {@link Response Responses}.
 *
 * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))
 *
 * ```typescript
 * import {provide} from '@angular/core';
 * import {bootstrap} from '@angular/platform-browser/browser';
 * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from
 * '@angular/http';
 * import {App} from './myapp';
 *
 * class MyOptions extends BaseResponseOptions {
 *   headers:Headers = new Headers({network: 'github'});
 * }
 *
 * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);
 * ```
 *
 * The options could also be extended when manually creating a {@link Response}
 * object.
 *
 * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))
 *
 * ```
 * import {BaseResponseOptions, Response} from '@angular/http';
 *
 * var options = new BaseResponseOptions();
 * var res = new Response(options.merge({
 *   body: 'Angular',
 *   headers: new Headers({framework: 'angular'})
 * }));
 * console.log('res.headers.get("framework"):', res.headers.get('framework')); // angular
 * console.log('res.text():', res.text()); // Angular;
 * ```
 *
 * @deprecated use @angular/common/http instead
 */


exports.ResponseOptions = ResponseOptions;

var BaseResponseOptions =
/** @class */
function (_super) {
  (0, _tslib.__extends)(BaseResponseOptions, _super);

  function BaseResponseOptions() {
    return _super.call(this, {
      status: 200,
      statusText: 'Ok',
      type: ResponseType.Default,
      headers: new Headers()
    }) || this;
  }

  BaseResponseOptions.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  BaseResponseOptions.ctorParameters = function () {
    return [];
  };

  return BaseResponseOptions;
}(ResponseOptions);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Abstract class from which real backends are derived.
 *
 * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given
 * {@link Request}.
 *
 * @deprecated use @angular/common/http instead
 */


exports.BaseResponseOptions = BaseResponseOptions;

var ConnectionBackend =
/** @class */
function () {
  function ConnectionBackend() {}

  return ConnectionBackend;
}();
/**
 * Abstract class from which real connections are derived.
 *
 * @deprecated use @angular/common/http instead
 */


exports.ConnectionBackend = ConnectionBackend;

var Connection =
/** @class */
function () {
  function Connection() {}

  return Connection;
}();
/**
 * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.
 *
 * @deprecated use @angular/common/http instead
 */


exports.Connection = Connection;

var XSRFStrategy =
/** @class */
function () {
  function XSRFStrategy() {}

  return XSRFStrategy;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.XSRFStrategy = XSRFStrategy;

function normalizeMethodName(method) {
  if (typeof method !== 'string') return method;

  switch (method.toUpperCase()) {
    case 'GET':
      return RequestMethod.Get;

    case 'POST':
      return RequestMethod.Post;

    case 'PUT':
      return RequestMethod.Put;

    case 'DELETE':
      return RequestMethod.Delete;

    case 'OPTIONS':
      return RequestMethod.Options;

    case 'HEAD':
      return RequestMethod.Head;

    case 'PATCH':
      return RequestMethod.Patch;
  }

  throw new Error("Invalid request method. The method \"" + method + "\" is not supported.");
}

var isSuccess = function isSuccess(status) {
  return status >= 200 && status < 300;
};

function getResponseURL(xhr) {
  if ('responseURL' in xhr) {
    return xhr.responseURL;
  }

  if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
    return xhr.getResponseHeader('X-Request-URL');
  }

  return null;
}

function stringToArrayBuffer(input) {
  var view = new Uint16Array(input.length);

  for (var i = 0, strLen = input.length; i < strLen; i++) {
    view[i] = input.charCodeAt(i);
  }

  return view.buffer;
}
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function paramParser(rawParams) {
  if (rawParams === void 0) {
    rawParams = '';
  }

  var map = new Map();

  if (rawParams.length > 0) {
    var params = rawParams.split('&');
    params.forEach(function (param) {
      var eqIdx = param.indexOf('=');

      var _a = (0, _tslib.__read)(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2),
          key = _a[0],
          val = _a[1];

      var list = map.get(key) || [];
      list.push(val);
      map.set(key, list);
    });
  }

  return map;
}
/**
 * @deprecated use @angular/common/http instead
 **/


var QueryEncoder =
/** @class */
function () {
  function QueryEncoder() {}

  QueryEncoder.prototype.encodeKey = function (k) {
    return standardEncoding(k);
  };

  QueryEncoder.prototype.encodeValue = function (v) {
    return standardEncoding(v);
  };

  return QueryEncoder;
}();

exports.QueryEncoder = QueryEncoder;

function standardEncoding(v) {
  return encodeURIComponent(v).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/gi, '$').replace(/%2C/gi, ',').replace(/%3B/gi, ';').replace(/%2B/gi, '+').replace(/%3D/gi, '=').replace(/%3F/gi, '?').replace(/%2F/gi, '/');
}
/**
 * Map-like representation of url search parameters, based on
 * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,
 * with several extensions for merging URLSearchParams objects:
 *   - setAll()
 *   - appendAll()
 *   - replaceAll()
 *
 * This class accepts an optional second parameter of ${@link QueryEncoder},
 * which is used to serialize parameters before making a request. By default,
 * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,
 * and then un-encodes certain characters that are allowed to be part of the query
 * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.
 *
 * These are the characters that are not encoded: `! $ \' ( ) * + , ; A 9 - . _ ~ ? /`
 *
 * If the set of allowed query characters is not acceptable for a particular backend,
 * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.
 *
 * ```
 * import {URLSearchParams, QueryEncoder} from '@angular/http';
 * class MyQueryEncoder extends QueryEncoder {
 *   encodeKey(k: string): string {
 *     return myEncodingFunction(k);
 *   }
 *
 *   encodeValue(v: string): string {
 *     return myEncodingFunction(v);
 *   }
 * }
 *
 * let params = new URLSearchParams('', new MyQueryEncoder());
 * ```
 * @deprecated use @angular/common/http instead
 */


var URLSearchParams =
/** @class */
function () {
  function URLSearchParams(rawParams, queryEncoder) {
    if (rawParams === void 0) {
      rawParams = '';
    }

    if (queryEncoder === void 0) {
      queryEncoder = new QueryEncoder();
    }

    this.rawParams = rawParams;
    this.queryEncoder = queryEncoder;
    this.paramsMap = paramParser(rawParams);
  }

  URLSearchParams.prototype.clone = function () {
    var clone = new URLSearchParams('', this.queryEncoder);
    clone.appendAll(this);
    return clone;
  };

  URLSearchParams.prototype.has = function (param) {
    return this.paramsMap.has(param);
  };

  URLSearchParams.prototype.get = function (param) {
    var storedParam = this.paramsMap.get(param);
    return Array.isArray(storedParam) ? storedParam[0] : null;
  };

  URLSearchParams.prototype.getAll = function (param) {
    return this.paramsMap.get(param) || [];
  };

  URLSearchParams.prototype.set = function (param, val) {
    if (val === void 0 || val === null) {
      this.delete(param);
      return;
    }

    var list = this.paramsMap.get(param) || [];
    list.length = 0;
    list.push(val);
    this.paramsMap.set(param, list);
  }; // A merge operation
  // For each name-values pair in `searchParams`, perform `set(name, values[0])`
  //
  // E.g: "a=[1,2,3], c=[8]" + "a=[4,5,6], b=[7]" = "a=[4], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better
  // A merge operation
  // For each name-values pair in `searchParams`, perform `set(name, values[0])`
  //
  // E.g: "a=[1,2,3], c=[8]" + "a=[4,5,6], b=[7]" = "a=[4], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better


  URLSearchParams.prototype.setAll = // A merge operation
  // For each name-values pair in `searchParams`, perform `set(name, values[0])`
  //
  // E.g: "a=[1,2,3], c=[8]" + "a=[4,5,6], b=[7]" = "a=[4], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better
  function (searchParams) {
    var _this = this;

    searchParams.paramsMap.forEach(function (value, param) {
      var list = _this.paramsMap.get(param) || [];
      list.length = 0;
      list.push(value[0]);

      _this.paramsMap.set(param, list);
    });
  };

  URLSearchParams.prototype.append = function (param, val) {
    if (val === void 0 || val === null) return;
    var list = this.paramsMap.get(param) || [];
    list.push(val);
    this.paramsMap.set(param, list);
  }; // A merge operation
  // For each name-values pair in `searchParams`, perform `append(name, value)`
  // for each value in `values`.
  //
  // E.g: "a=[1,2], c=[8]" + "a=[3,4], b=[7]" = "a=[1,2,3,4], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better
  // A merge operation
  // For each name-values pair in `searchParams`, perform `append(name, value)`
  // for each value in `values`.
  //
  // E.g: "a=[1,2], c=[8]" + "a=[3,4], b=[7]" = "a=[1,2,3,4], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better


  URLSearchParams.prototype.appendAll = // A merge operation
  // For each name-values pair in `searchParams`, perform `append(name, value)`
  // for each value in `values`.
  //
  // E.g: "a=[1,2], c=[8]" + "a=[3,4], b=[7]" = "a=[1,2,3,4], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better
  function (searchParams) {
    var _this = this;

    searchParams.paramsMap.forEach(function (value, param) {
      var list = _this.paramsMap.get(param) || [];

      for (var i = 0; i < value.length; ++i) {
        list.push(value[i]);
      }

      _this.paramsMap.set(param, list);
    });
  }; // A merge operation
  // For each name-values pair in `searchParams`, perform `delete(name)`,
  // followed by `set(name, values)`
  //
  // E.g: "a=[1,2,3], c=[8]" + "a=[4,5,6], b=[7]" = "a=[4,5,6], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better
  // A merge operation
  // For each name-values pair in `searchParams`, perform `delete(name)`,
  // followed by `set(name, values)`
  //
  // E.g: "a=[1,2,3], c=[8]" + "a=[4,5,6], b=[7]" = "a=[4,5,6], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better


  URLSearchParams.prototype.replaceAll = // A merge operation
  // For each name-values pair in `searchParams`, perform `delete(name)`,
  // followed by `set(name, values)`
  //
  // E.g: "a=[1,2,3], c=[8]" + "a=[4,5,6], b=[7]" = "a=[4,5,6], c=[8], b=[7]"
  //
  // TODO(@caitp): document this better
  function (searchParams) {
    var _this = this;

    searchParams.paramsMap.forEach(function (value, param) {
      var list = _this.paramsMap.get(param) || [];
      list.length = 0;

      for (var i = 0; i < value.length; ++i) {
        list.push(value[i]);
      }

      _this.paramsMap.set(param, list);
    });
  };

  URLSearchParams.prototype.toString = function () {
    var _this = this;

    var paramsList = [];
    this.paramsMap.forEach(function (values, k) {
      values.forEach(function (v) {
        return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v));
      });
    });
    return paramsList.join('&');
  };

  URLSearchParams.prototype.delete = function (param) {
    this.paramsMap.delete(param);
  };

  return URLSearchParams;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * HTTP request body used by both {@link Request} and {@link Response}
 * https://fetch.spec.whatwg.org/#body
 */


exports.URLSearchParams = URLSearchParams;

var Body =
/** @class */
function () {
  function Body() {}
  /**
   * Attempts to return body as parsed `JSON` object, or raises an exception.
   */

  /**
     * Attempts to return body as parsed `JSON` object, or raises an exception.
     */


  Body.prototype.json =
  /**
  * Attempts to return body as parsed `JSON` object, or raises an exception.
  */
  function () {
    if (typeof this._body === 'string') {
      return JSON.parse(this._body);
    }

    if (this._body instanceof ArrayBuffer) {
      return JSON.parse(this.text());
    }

    return this._body;
  };
  /**
   * Returns the body as a string, presuming `toString()` can be called on the response body.
   *
   * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the
   * bytes in the buffer will be interpreted. Valid values are:
   *
   * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters
   *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.
   *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken
   *   into consideration. This is the default behavior to avoid breaking apps, but should be
   *   considered deprecated.
   *
   * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).
   */

  /**
     * Returns the body as a string, presuming `toString()` can be called on the response body.
     *
     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the
     * bytes in the buffer will be interpreted. Valid values are:
     *
     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters
     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.
     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken
     *   into consideration. This is the default behavior to avoid breaking apps, but should be
     *   considered deprecated.
     *
     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).
     */


  Body.prototype.text =
  /**
  * Returns the body as a string, presuming `toString()` can be called on the response body.
  *
  * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the
  * bytes in the buffer will be interpreted. Valid values are:
  *
  * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters
  *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.
  *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken
  *   into consideration. This is the default behavior to avoid breaking apps, but should be
  *   considered deprecated.
  *
  * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).
  */
  function (encodingHint) {
    if (encodingHint === void 0) {
      encodingHint = 'legacy';
    }

    if (this._body instanceof URLSearchParams) {
      return this._body.toString();
    }

    if (this._body instanceof ArrayBuffer) {
      switch (encodingHint) {
        case 'legacy':
          return String.fromCharCode.apply(null, new Uint16Array(this._body));

        case 'iso-8859':
          return String.fromCharCode.apply(null, new Uint8Array(this._body));

        default:
          throw new Error("Invalid value for encodingHint: " + encodingHint);
      }
    }

    if (this._body == null) {
      return '';
    }

    if (_typeof(this._body) === 'object') {
      return JSON.stringify(this._body, null, 2);
    }

    return this._body.toString();
  };
  /**
   * Return the body as an ArrayBuffer
   */

  /**
     * Return the body as an ArrayBuffer
     */


  Body.prototype.arrayBuffer =
  /**
  * Return the body as an ArrayBuffer
  */
  function () {
    if (this._body instanceof ArrayBuffer) {
      return this._body;
    }

    return stringToArrayBuffer(this.text());
  };
  /**
    * Returns the request's body as a Blob, assuming that body exists.
    */

  /**
      * Returns the request's body as a Blob, assuming that body exists.
      */


  Body.prototype.blob =
  /**
  * Returns the request's body as a Blob, assuming that body exists.
  */
  function () {
    if (this._body instanceof Blob) {
      return this._body;
    }

    if (this._body instanceof ArrayBuffer) {
      return new Blob([this._body]);
    }

    throw new Error('The request body isn\'t either a blob or an array buffer');
  };

  return Body;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Creates `Response` instances from provided values.
 *
 * Though this object isn't
 * usually instantiated by end-users, it is the primary object interacted with when it comes time to
 * add data to a view.
 *
 * ### Example
 *
 * ```
 * http.request('my-friends.txt').subscribe(response => this.friends = response.text());
 * ```
 *
 * The Response's interface is inspired by the Response constructor defined in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body
 * can be accessed many times. There are other differences in the implementation, but this is the
 * most significant.
 *
 * @deprecated use @angular/common/http instead
 */


exports.ɵangular_packages_http_http_f = Body;

var Response =
/** @class */
function (_super) {
  (0, _tslib.__extends)(Response, _super);

  function Response(responseOptions) {
    var _this = _super.call(this) || this;

    _this._body = responseOptions.body;
    _this.status = responseOptions.status;
    _this.ok = _this.status >= 200 && _this.status <= 299;
    _this.statusText = responseOptions.statusText;
    _this.headers = responseOptions.headers;
    _this.type = responseOptions.type;
    _this.url = responseOptions.url;
    return _this;
  }

  Response.prototype.toString = function () {
    return "Response with status: " + this.status + " " + this.statusText + " for URL: " + this.url;
  };

  return Response;
}(Body);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.Response = Response;
var _nextRequestId = 0;
var JSONP_HOME = '__ng_jsonp__';
var _jsonpConnections = null;

function _getJsonpConnections() {
  var w = (typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object' ? window : {};

  if (_jsonpConnections === null) {
    _jsonpConnections = w[JSONP_HOME] = {};
  }

  return _jsonpConnections;
} // Make sure not to evaluate this in a non-browser environment!


var BrowserJsonp =
/** @class */
function () {
  function BrowserJsonp() {} // Construct a <script> element with the specified URL
  // Construct a <script> element with the specified URL


  BrowserJsonp.prototype.build = // Construct a <script> element with the specified URL
  function (url) {
    var node = document.createElement('script');
    node.src = url;
    return node;
  };

  BrowserJsonp.prototype.nextRequestID = function () {
    return "__req" + _nextRequestId++;
  };

  BrowserJsonp.prototype.requestCallback = function (id) {
    return JSONP_HOME + "." + id + ".finished";
  };

  BrowserJsonp.prototype.exposeConnection = function (id, connection) {
    var connections = _getJsonpConnections();

    connections[id] = connection;
  };

  BrowserJsonp.prototype.removeConnection = function (id) {
    var connections = _getJsonpConnections();

    connections[id] = null;
  }; // Attach the <script> element to the DOM
  // Attach the <script> element to the DOM


  BrowserJsonp.prototype.send = // Attach the <script> element to the DOM
  function (node) {
    document.body.appendChild(node);
  }; // Remove <script> element from the DOM
  // Remove <script> element from the DOM


  BrowserJsonp.prototype.cleanup = // Remove <script> element from the DOM
  function (node) {
    if (node.parentNode) {
      node.parentNode.removeChild(node);
    }
  };

  BrowserJsonp.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  BrowserJsonp.ctorParameters = function () {
    return [];
  };

  return BrowserJsonp;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.ɵangular_packages_http_http_e = BrowserJsonp;
var JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';
var JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';
/**
 * Base class for an in-flight JSONP request.
 *
 * @deprecated use @angular/common/http instead
 */

var JSONPConnection =
/** @class */
function () {
  /** @internal */
  function JSONPConnection(req, _dom, baseResponseOptions) {
    var _this = this;

    this._dom = _dom;
    this.baseResponseOptions = baseResponseOptions;
    this._finished = false;

    if (req.method !== RequestMethod.Get) {
      throw new TypeError(JSONP_ERR_WRONG_METHOD);
    }

    this.request = req;
    this.response = new _rxjs.Observable(function (responseObserver) {
      _this.readyState = ReadyState.Loading;

      var id = _this._id = _dom.nextRequestID();

      _dom.exposeConnection(id, _this); // Workaround Dart
      // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);


      var callback = _dom.requestCallback(_this._id);

      var url = req.url;

      if (url.indexOf('=JSONP_CALLBACK&') > -1) {
        url = url.replace('=JSONP_CALLBACK&', "=" + callback + "&");
      } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {
        url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + ("=" + callback);
      }

      var script = _this._script = _dom.build(url);

      var onLoad = function onLoad(event) {
        if (_this.readyState === ReadyState.Cancelled) return;
        _this.readyState = ReadyState.Done;

        _dom.cleanup(script);

        if (!_this._finished) {
          var responseOptions_1 = new ResponseOptions({
            body: JSONP_ERR_NO_CALLBACK,
            type: ResponseType.Error,
            url: url
          });

          if (baseResponseOptions) {
            responseOptions_1 = baseResponseOptions.merge(responseOptions_1);
          }

          responseObserver.error(new Response(responseOptions_1));
          return;
        }

        var responseOptions = new ResponseOptions({
          body: _this._responseData,
          url: url
        });

        if (_this.baseResponseOptions) {
          responseOptions = _this.baseResponseOptions.merge(responseOptions);
        }

        responseObserver.next(new Response(responseOptions));
        responseObserver.complete();
      };

      var onError = function onError(error) {
        if (_this.readyState === ReadyState.Cancelled) return;
        _this.readyState = ReadyState.Done;

        _dom.cleanup(script);

        var responseOptions = new ResponseOptions({
          body: error.message,
          type: ResponseType.Error
        });

        if (baseResponseOptions) {
          responseOptions = baseResponseOptions.merge(responseOptions);
        }

        responseObserver.error(new Response(responseOptions));
      };

      script.addEventListener('load', onLoad);
      script.addEventListener('error', onError);

      _dom.send(script);

      return function () {
        _this.readyState = ReadyState.Cancelled;
        script.removeEventListener('load', onLoad);
        script.removeEventListener('error', onError);

        _this._dom.cleanup(script);
      };
    });
  }
  /**
   * Callback called when the JSONP request completes, to notify the application
   * of the new data.
   */

  /**
     * Callback called when the JSONP request completes, to notify the application
     * of the new data.
     */


  JSONPConnection.prototype.finished =
  /**
  * Callback called when the JSONP request completes, to notify the application
  * of the new data.
  */
  function (data) {
    // Don't leak connections
    this._finished = true;

    this._dom.removeConnection(this._id);

    if (this.readyState === ReadyState.Cancelled) return;
    this._responseData = data;
  };

  return JSONPConnection;
}();
/**
 * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.
 *
 * @deprecated use @angular/common/http instead
 */


exports.JSONPConnection = JSONPConnection;

var JSONPBackend =
/** @class */
function (_super) {
  (0, _tslib.__extends)(JSONPBackend, _super);
  /** @internal */

  function JSONPBackend(_browserJSONP, _baseResponseOptions) {
    var _this = _super.call(this) || this;

    _this._browserJSONP = _browserJSONP;
    _this._baseResponseOptions = _baseResponseOptions;
    return _this;
  }

  JSONPBackend.prototype.createConnection = function (request) {
    return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);
  };

  JSONPBackend.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  JSONPBackend.ctorParameters = function () {
    return [{
      type: BrowserJsonp
    }, {
      type: ResponseOptions
    }];
  };

  return JSONPBackend;
}(ConnectionBackend);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.JSONPBackend = JSONPBackend;
var XSSI_PREFIX = /^\)\]\}',?\n/;
/**
 * Creates connections using `XMLHttpRequest`. Given a fully-qualified
 * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the
 * request.
 *
 * This class would typically not be created or interacted with directly inside applications, though
 * the {@link MockConnection} may be interacted with in tests.
 *
 * @deprecated use @angular/common/http instead
 */

var XHRConnection =
/** @class */
function () {
  function XHRConnection(req, browserXHR, baseResponseOptions) {
    var _this = this;

    this.request = req;
    this.response = new _rxjs.Observable(function (responseObserver) {
      var _xhr = browserXHR.build();

      _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);

      if (req.withCredentials != null) {
        _xhr.withCredentials = req.withCredentials;
      } // load event handler


      var onLoad = function onLoad() {
        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
        var status = _xhr.status === 1223 ? 204 : _xhr.status;
        var body = null; // HTTP 204 means no content

        if (status !== 204) {
          // responseText is the old-school way of retrieving response (supported by IE8 & 9)
          // response/responseType properties were introduced in ResourceLoader Level2 spec
          // (supported by IE10)
          body = typeof _xhr.response === 'undefined' ? _xhr.responseText : _xhr.response; // Implicitly strip a potential XSSI prefix.

          if (typeof body === 'string') {
            body = body.replace(XSSI_PREFIX, '');
          }
        } // fix status code when it is 0 (0 status is undocumented).
        // Occurs when accessing file resources or on Android 4.1 stock browser
        // while retrieving files from application cache.


        if (status === 0) {
          status = body ? 200 : 0;
        }

        var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders()); // IE 9 does not provide the way to get URL of response

        var url = getResponseURL(_xhr) || req.url;
        var statusText = _xhr.statusText || 'OK';
        var responseOptions = new ResponseOptions({
          body: body,
          status: status,
          headers: headers,
          statusText: statusText,
          url: url
        });

        if (baseResponseOptions != null) {
          responseOptions = baseResponseOptions.merge(responseOptions);
        }

        var response = new Response(responseOptions);
        response.ok = isSuccess(status);

        if (response.ok) {
          responseObserver.next(response); // TODO(gdi2290): defer complete if array buffer until done

          responseObserver.complete();
          return;
        }

        responseObserver.error(response);
      }; // error event handler


      var onError = function onError(err) {
        var responseOptions = new ResponseOptions({
          body: err,
          type: ResponseType.Error,
          status: _xhr.status,
          statusText: _xhr.statusText
        });

        if (baseResponseOptions != null) {
          responseOptions = baseResponseOptions.merge(responseOptions);
        }

        responseObserver.error(new Response(responseOptions));
      };

      _this.setDetectedContentType(req, _xhr);

      if (req.headers == null) {
        req.headers = new Headers();
      }

      if (!req.headers.has('Accept')) {
        req.headers.append('Accept', 'application/json, text/plain, */*');
      }

      req.headers.forEach(function (values, name) {
        return _xhr.setRequestHeader(name, values.join(','));
      }); // Select the correct buffer type to store the response

      if (req.responseType != null && _xhr.responseType != null) {
        switch (req.responseType) {
          case ResponseContentType.ArrayBuffer:
            _xhr.responseType = 'arraybuffer';
            break;

          case ResponseContentType.Json:
            _xhr.responseType = 'json';
            break;

          case ResponseContentType.Text:
            _xhr.responseType = 'text';
            break;

          case ResponseContentType.Blob:
            _xhr.responseType = 'blob';
            break;

          default:
            throw new Error('The selected responseType is not supported');
        }
      }

      _xhr.addEventListener('load', onLoad);

      _xhr.addEventListener('error', onError);

      _xhr.send(_this.request.getBody());

      return function () {
        _xhr.removeEventListener('load', onLoad);

        _xhr.removeEventListener('error', onError);

        _xhr.abort();
      };
    });
  }

  XHRConnection.prototype.setDetectedContentType = function (req
  /** TODO Request */
  , _xhr
  /** XMLHttpRequest */
  ) {
    // Skip if a custom Content-Type header is provided
    if (req.headers != null && req.headers.get('Content-Type') != null) {
      return;
    } // Set the detected content type


    switch (req.contentType) {
      case ContentType.NONE:
        break;

      case ContentType.JSON:
        _xhr.setRequestHeader('content-type', 'application/json');

        break;

      case ContentType.FORM:
        _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');

        break;

      case ContentType.TEXT:
        _xhr.setRequestHeader('content-type', 'text/plain');

        break;

      case ContentType.BLOB:
        var blob = req.blob();

        if (blob.type) {
          _xhr.setRequestHeader('content-type', blob.type);
        }

        break;
    }
  };

  return XHRConnection;
}();
/**
 * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application
 * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)
 * for more information on XSRF.
 *
 * Applications can configure custom cookie and header names by binding an instance of this class
 * with different `cookieName` and `headerName` values. See the main HTTP documentation for more
 * details.
 *
 * @deprecated use @angular/common/http instead
 */


exports.XHRConnection = XHRConnection;

var CookieXSRFStrategy =
/** @class */
function () {
  function CookieXSRFStrategy(_cookieName, _headerName) {
    if (_cookieName === void 0) {
      _cookieName = 'XSRF-TOKEN';
    }

    if (_headerName === void 0) {
      _headerName = 'X-XSRF-TOKEN';
    }

    this._cookieName = _cookieName;
    this._headerName = _headerName;
  }

  CookieXSRFStrategy.prototype.configureRequest = function (req) {
    var xsrfToken = (0, _platformBrowser.ɵgetDOM)().getCookie(this._cookieName);

    if (xsrfToken) {
      req.headers.set(this._headerName, xsrfToken);
    }
  };

  return CookieXSRFStrategy;
}();
/**
 * Creates {@link XHRConnection} instances.
 *
 * This class would typically not be used by end users, but could be
 * overridden if a different backend implementation should be used,
 * such as in a node backend.
 *
 * ### Example
 *
 * ```
 * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';
 * @Component({
 *   viewProviders: [
 *     HTTP_PROVIDERS,
 *     {provide: Http, useFactory: (backend, options) => {
 *       return new Http(backend, options);
 *     }, deps: [MyNodeBackend, BaseRequestOptions]}]
 * })
 * class MyComponent {
 *   constructor(http:Http) {
 *     http.request('people.json').subscribe(res => this.people = res.json());
 *   }
 * }
 * ```
 * @deprecated use @angular/common/http instead
 */


exports.CookieXSRFStrategy = CookieXSRFStrategy;

var XHRBackend =
/** @class */
function () {
  function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {
    this._browserXHR = _browserXHR;
    this._baseResponseOptions = _baseResponseOptions;
    this._xsrfStrategy = _xsrfStrategy;
  }

  XHRBackend.prototype.createConnection = function (request) {
    this._xsrfStrategy.configureRequest(request);

    return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);
  };

  XHRBackend.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  XHRBackend.ctorParameters = function () {
    return [{
      type: BrowserXhr
    }, {
      type: ResponseOptions
    }, {
      type: XSRFStrategy
    }];
  };

  return XHRBackend;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Creates a request options object to be optionally provided when instantiating a
 * {@link Request}.
 *
 * This class is based on the `RequestInit` description in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#requestinit).
 *
 * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}
 * class, which sub-classes `RequestOptions`.
 *
 * ```typescript
 * import {RequestOptions, Request, RequestMethod} from '@angular/http';
 *
 * const options = new RequestOptions({
 *   method: RequestMethod.Post,
 *   url: 'https://google.com'
 * });
 * const req = new Request(options);
 * console.log('req.method:', RequestMethod[req.method]); // Post
 * console.log('options.url:', options.url); // https://google.com
 * ```
 *
 * @deprecated use @angular/common/http instead
 */


exports.XHRBackend = XHRBackend;

var RequestOptions =
/** @class */
function () {
  // TODO(Dzmitry): remove search when this.search is removed
  function RequestOptions(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var method = opts.method,
        headers = opts.headers,
        body = opts.body,
        url = opts.url,
        search = opts.search,
        params = opts.params,
        withCredentials = opts.withCredentials,
        responseType = opts.responseType;
    this.method = method != null ? normalizeMethodName(method) : null;
    this.headers = headers != null ? headers : null;
    this.body = body != null ? body : null;
    this.url = url != null ? url : null;
    this.params = this._mergeSearchParams(params || search);
    this.withCredentials = withCredentials != null ? withCredentials : null;
    this.responseType = responseType != null ? responseType : null;
  }

  Object.defineProperty(RequestOptions.prototype, "search", {
    /**
     * @deprecated from 4.0.0. Use params instead.
     */
    get:
    /**
    * @deprecated from 4.0.0. Use params instead.
    */
    function get() {
      return this.params;
    },

    /**
     * @deprecated from 4.0.0. Use params instead.
     */
    set:
    /**
    * @deprecated from 4.0.0. Use params instead.
    */
    function set(params) {
      this.params = params;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Creates a copy of the `RequestOptions` instance, using the optional input as values to override
   * existing values. This method will not change the values of the instance on which it is being
   * called.
   *
   * Note that `headers` and `search` will override existing values completely if present in
   * the `options` object. If these values should be merged, it should be done prior to calling
   * `merge` on the `RequestOptions` instance.
   *
   * ```typescript
   * import {RequestOptions, Request, RequestMethod} from '@angular/http';
   *
   * const options = new RequestOptions({
   *   method: RequestMethod.Post
   * });
   * const req = new Request(options.merge({
   *   url: 'https://google.com'
   * }));
   * console.log('req.method:', RequestMethod[req.method]); // Post
   * console.log('options.url:', options.url); // null
   * console.log('req.url:', req.url); // https://google.com
   * ```
   */

  /**
     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override
     * existing values. This method will not change the values of the instance on which it is being
     * called.
     *
     * Note that `headers` and `search` will override existing values completely if present in
     * the `options` object. If these values should be merged, it should be done prior to calling
     * `merge` on the `RequestOptions` instance.
     *
     * ```typescript
     * import {RequestOptions, Request, RequestMethod} from '@angular/http';
     *
     * const options = new RequestOptions({
     *   method: RequestMethod.Post
     * });
     * const req = new Request(options.merge({
     *   url: 'https://google.com'
     * }));
     * console.log('req.method:', RequestMethod[req.method]); // Post
     * console.log('options.url:', options.url); // null
     * console.log('req.url:', req.url); // https://google.com
     * ```
     */

  RequestOptions.prototype.merge =
  /**
  * Creates a copy of the `RequestOptions` instance, using the optional input as values to override
  * existing values. This method will not change the values of the instance on which it is being
  * called.
  *
  * Note that `headers` and `search` will override existing values completely if present in
  * the `options` object. If these values should be merged, it should be done prior to calling
  * `merge` on the `RequestOptions` instance.
  *
  * ```typescript
  * import {RequestOptions, Request, RequestMethod} from '@angular/http';
  *
  * const options = new RequestOptions({
  *   method: RequestMethod.Post
  * });
  * const req = new Request(options.merge({
  *   url: 'https://google.com'
  * }));
  * console.log('req.method:', RequestMethod[req.method]); // Post
  * console.log('options.url:', options.url); // null
  * console.log('req.url:', req.url); // https://google.com
  * ```
  */
  function (options) {
    return new RequestOptions({
      method: options && options.method != null ? options.method : this.method,
      headers: options && options.headers != null ? options.headers : new Headers(this.headers),
      body: options && options.body != null ? options.body : this.body,
      url: options && options.url != null ? options.url : this.url,
      params: options && this._mergeSearchParams(options.params || options.search),
      withCredentials: options && options.withCredentials != null ? options.withCredentials : this.withCredentials,
      responseType: options && options.responseType != null ? options.responseType : this.responseType
    });
  };

  RequestOptions.prototype._mergeSearchParams = function (params) {
    if (!params) return this.params;

    if (params instanceof URLSearchParams) {
      return params.clone();
    }

    if (typeof params === 'string') {
      return new URLSearchParams(params);
    }

    return this._parseParams(params);
  };

  RequestOptions.prototype._parseParams = function (objParams) {
    var _this = this;

    if (objParams === void 0) {
      objParams = {};
    }

    var params = new URLSearchParams();
    Object.keys(objParams).forEach(function (key) {
      var value = objParams[key];

      if (Array.isArray(value)) {
        value.forEach(function (item) {
          return _this._appendParam(key, item, params);
        });
      } else {
        _this._appendParam(key, value, params);
      }
    });
    return params;
  };

  RequestOptions.prototype._appendParam = function (key, value, params) {
    if (typeof value !== 'string') {
      value = JSON.stringify(value);
    }

    params.append(key, value);
  };

  return RequestOptions;
}();
/**
 * Subclass of {@link RequestOptions}, with default values.
 *
 * Default values:
 *  * method: {@link RequestMethod RequestMethod.Get}
 *  * headers: empty {@link Headers} object
 *
 * This class could be extended and bound to the {@link RequestOptions} class
 * when configuring an {@link Injector}, in order to override the default options
 * used by {@link Http} to create and send {@link Request Requests}.
 *
 * ```typescript
 * import {BaseRequestOptions, RequestOptions} from '@angular/http';
 *
 * class MyOptions extends BaseRequestOptions {
 *   search: string = 'coreTeam=true';
 * }
 *
 * {provide: RequestOptions, useClass: MyOptions};
 * ```
 *
 * The options could also be extended when manually creating a {@link Request}
 * object.
 *
 * ```
 * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';
 *
 * const options = new BaseRequestOptions();
 * const req = new Request(options.merge({
 *   method: RequestMethod.Post,
 *   url: 'https://google.com'
 * }));
 * console.log('req.method:', RequestMethod[req.method]); // Post
 * console.log('options.url:', options.url); // null
 * console.log('req.url:', req.url); // https://google.com
 * ```
 *
 * @deprecated use @angular/common/http instead
 */


exports.RequestOptions = RequestOptions;

var BaseRequestOptions =
/** @class */
function (_super) {
  (0, _tslib.__extends)(BaseRequestOptions, _super);

  function BaseRequestOptions() {
    return _super.call(this, {
      method: RequestMethod.Get,
      headers: new Headers()
    }) || this;
  }

  BaseRequestOptions.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  BaseRequestOptions.ctorParameters = function () {
    return [];
  };

  return BaseRequestOptions;
}(RequestOptions);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO(jeffbcross): properly implement body accessors

/**
 * Creates `Request` instances from provided values.
 *
 * The Request's interface is inspired by the Request constructor defined in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#request-class),
 * but is considered a static value whose body can be accessed many times. There are other
 * differences in the implementation, but this is the most significant.
 *
 * `Request` instances are typically created by higher-level classes, like {@link Http} and
 * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.
 * One such example is when creating services that wrap higher-level services, like {@link Http},
 * where it may be useful to generate a `Request` with arbitrary headers and search params.
 *
 * ```typescript
 * import {Injectable, Injector} from '@angular/core';
 * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';
 *
 * @Injectable()
 * class AutoAuthenticator {
 *   constructor(public http:Http) {}
 *   request(url:string) {
 *     return this.http.request(new Request({
 *       method: RequestMethod.Get,
 *       url: url,
 *       search: 'password=123'
 *     }));
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);
 * var authenticator = injector.get(AutoAuthenticator);
 * authenticator.request('people.json').subscribe(res => {
 *   //URL should have included '?password=123'
 *   console.log('people', res.json());
 * });
 * ```
 *
 * @deprecated use @angular/common/http instead
 */


exports.BaseRequestOptions = BaseRequestOptions;

var Request =
/** @class */
function (_super) {
  (0, _tslib.__extends)(Request, _super);

  function Request(requestOptions) {
    var _this = _super.call(this) || this; // TODO: assert that url is present


    var url = requestOptions.url;
    _this.url = requestOptions.url;
    var paramsArg = requestOptions.params || requestOptions.search;

    if (paramsArg) {
      var params = void 0;

      if (_typeof(paramsArg) === 'object' && !(paramsArg instanceof URLSearchParams)) {
        params = urlEncodeParams(paramsArg).toString();
      } else {
        params = paramsArg.toString();
      }

      if (params.length > 0) {
        var prefix = '?';

        if (_this.url.indexOf('?') != -1) {
          prefix = _this.url[_this.url.length - 1] == '&' ? '' : '&';
        } // TODO: just delete search-query-looking string in url?
        // TODO: just delete search-query-looking string in url?


        _this.url = url + prefix + params;
      }
    }

    _this._body = requestOptions.body;
    _this.method = normalizeMethodName(requestOptions.method); // TODO(jeffbcross): implement behavior
    // Defaults to 'omit', consistent with browser
    // TODO(jeffbcross): implement behavior
    // Defaults to 'omit', consistent with browser

    _this.headers = new Headers(requestOptions.headers);
    _this.contentType = _this.detectContentType();
    _this.withCredentials = requestOptions.withCredentials;
    _this.responseType = requestOptions.responseType;
    return _this;
  }
  /**
   * Returns the content type enum based on header options.
   */

  /**
     * Returns the content type enum based on header options.
     */


  Request.prototype.detectContentType =
  /**
  * Returns the content type enum based on header options.
  */
  function () {
    switch (this.headers.get('content-type')) {
      case 'application/json':
        return ContentType.JSON;

      case 'application/x-www-form-urlencoded':
        return ContentType.FORM;

      case 'multipart/form-data':
        return ContentType.FORM_DATA;

      case 'text/plain':
      case 'text/html':
        return ContentType.TEXT;

      case 'application/octet-stream':
        return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;

      default:
        return this.detectContentTypeFromBody();
    }
  };
  /**
   * Returns the content type of request's body based on its type.
   */

  /**
     * Returns the content type of request's body based on its type.
     */


  Request.prototype.detectContentTypeFromBody =
  /**
  * Returns the content type of request's body based on its type.
  */
  function () {
    if (this._body == null) {
      return ContentType.NONE;
    } else if (this._body instanceof URLSearchParams) {
      return ContentType.FORM;
    } else if (this._body instanceof FormData) {
      return ContentType.FORM_DATA;
    } else if (this._body instanceof Blob$1) {
      return ContentType.BLOB;
    } else if (this._body instanceof ArrayBuffer$1) {
      return ContentType.ARRAY_BUFFER;
    } else if (this._body && _typeof(this._body) === 'object') {
      return ContentType.JSON;
    } else {
      return ContentType.TEXT;
    }
  };
  /**
   * Returns the request's body according to its type. If body is undefined, return
   * null.
   */

  /**
     * Returns the request's body according to its type. If body is undefined, return
     * null.
     */


  Request.prototype.getBody =
  /**
  * Returns the request's body according to its type. If body is undefined, return
  * null.
  */
  function () {
    switch (this.contentType) {
      case ContentType.JSON:
        return this.text();

      case ContentType.FORM:
        return this.text();

      case ContentType.FORM_DATA:
        return this._body;

      case ContentType.TEXT:
        return this.text();

      case ContentType.BLOB:
        return this.blob();

      case ContentType.ARRAY_BUFFER:
        return this.arrayBuffer();

      default:
        return null;
    }
  };

  return Request;
}(Body);

exports.Request = Request;

function urlEncodeParams(params) {
  var searchParams = new URLSearchParams();
  Object.keys(params).forEach(function (key) {
    var value = params[key];

    if (value && Array.isArray(value)) {
      value.forEach(function (element) {
        return searchParams.append(key, element.toString());
      });
    } else {
      searchParams.append(key, value.toString());
    }
  });
  return searchParams;
}

var noop = function noop() {};

var w = (typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object' ? window : noop;
var FormData = w
/** TODO #9100 */
['FormData'] || noop;
var Blob$1 = w
/** TODO #9100 */
['Blob'] || noop;
var ArrayBuffer$1 = w
/** TODO #9100 */
['ArrayBuffer'] || noop;
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

function httpRequest(backend, request) {
  return backend.createConnection(request).response;
}

function mergeOptions(defaultOpts, providedOpts, method, url) {
  var newOptions = defaultOpts;

  if (providedOpts) {
    // Hack so Dart can used named parameters
    return newOptions.merge(new RequestOptions({
      method: providedOpts.method || method,
      url: providedOpts.url || url,
      search: providedOpts.search,
      params: providedOpts.params,
      headers: providedOpts.headers,
      body: providedOpts.body,
      withCredentials: providedOpts.withCredentials,
      responseType: providedOpts.responseType
    }));
  }

  return newOptions.merge(new RequestOptions({
    method: method,
    url: url
  }));
}
/**
 * Performs http requests using `XMLHttpRequest` as the default backend.
 *
 * `Http` is available as an injectable class, with methods to perform http requests. Calling
 * `request` returns an `Observable` which will emit a single {@link Response} when a
 * response is received.
 *
 * ### Example
 *
 * ```typescript
 * import {Http, HTTP_PROVIDERS} from '@angular/http';
 * import {map} from 'rxjs/operators';
 *
 * @Component({
 *   selector: 'http-app',
 *   viewProviders: [HTTP_PROVIDERS],
 *   templateUrl: 'people.html'
 * })
 * class PeopleComponent {
 *   constructor(http: Http) {
 *     http.get('people.json')
 *       // Call map on the response observable to get the parsed people object
 *       .pipe(map(res => res.json()))
 *       // Subscribe to the observable to get the parsed people object and attach it to the
 *       // component
 *       .subscribe(people => this.people = people);
 *   }
 * }
 * ```
 *
 *
 * ### Example
 *
 * ```
 * http.get('people.json').subscribe((res:Response) => this.people = res.json());
 * ```
 *
 * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a "Backend" (
 * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing
 * the {@link XHRBackend} provider, as in the following example:
 *
 * ### Example
 *
 * ```typescript
 * import {BaseRequestOptions, Http} from '@angular/http';
 * import {MockBackend} from '@angular/http/testing';
 * var injector = Injector.resolveAndCreate([
 *   BaseRequestOptions,
 *   MockBackend,
 *   {provide: Http, useFactory:
 *       function(backend, defaultOptions) {
 *         return new Http(backend, defaultOptions);
 *       },
 *       deps: [MockBackend, BaseRequestOptions]}
 * ]);
 * var http = injector.get(Http);
 * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));
 * ```
 *
 * @deprecated use @angular/common/http instead
 */


var Http =
/** @class */
function () {
  function Http(_backend, _defaultOptions) {
    this._backend = _backend;
    this._defaultOptions = _defaultOptions;
  }
  /**
   * Performs any type of http request. First argument is required, and can either be a url or
   * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}
   * object can be provided as the 2nd argument. The options object will be merged with the values
   * of {@link BaseRequestOptions} before performing the request.
   */

  /**
     * Performs any type of http request. First argument is required, and can either be a url or
     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}
     * object can be provided as the 2nd argument. The options object will be merged with the values
     * of {@link BaseRequestOptions} before performing the request.
     */


  Http.prototype.request =
  /**
  * Performs any type of http request. First argument is required, and can either be a url or
  * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}
  * object can be provided as the 2nd argument. The options object will be merged with the values
  * of {@link BaseRequestOptions} before performing the request.
  */
  function (url, options) {
    var responseObservable;

    if (typeof url === 'string') {
      responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));
    } else if (url instanceof Request) {
      responseObservable = httpRequest(this._backend, url);
    } else {
      throw new Error('First argument must be a url string or Request instance.');
    }

    return responseObservable;
  };
  /**
   * Performs a request with `get` http method.
   */

  /**
     * Performs a request with `get` http method.
     */


  Http.prototype.get =
  /**
  * Performs a request with `get` http method.
  */
  function (url, options) {
    return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));
  };
  /**
   * Performs a request with `post` http method.
   */

  /**
     * Performs a request with `post` http method.
     */


  Http.prototype.post =
  /**
  * Performs a request with `post` http method.
  */
  function (url, body, options) {
    return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({
      body: body
    })), options, RequestMethod.Post, url)));
  };
  /**
   * Performs a request with `put` http method.
   */

  /**
     * Performs a request with `put` http method.
     */


  Http.prototype.put =
  /**
  * Performs a request with `put` http method.
  */
  function (url, body, options) {
    return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({
      body: body
    })), options, RequestMethod.Put, url)));
  };
  /**
   * Performs a request with `delete` http method.
   */

  /**
     * Performs a request with `delete` http method.
     */


  Http.prototype.delete =
  /**
  * Performs a request with `delete` http method.
  */
  function (url, options) {
    return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));
  };
  /**
   * Performs a request with `patch` http method.
   */

  /**
     * Performs a request with `patch` http method.
     */


  Http.prototype.patch =
  /**
  * Performs a request with `patch` http method.
  */
  function (url, body, options) {
    return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({
      body: body
    })), options, RequestMethod.Patch, url)));
  };
  /**
   * Performs a request with `head` http method.
   */

  /**
     * Performs a request with `head` http method.
     */


  Http.prototype.head =
  /**
  * Performs a request with `head` http method.
  */
  function (url, options) {
    return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));
  };
  /**
   * Performs a request with `options` http method.
   */

  /**
     * Performs a request with `options` http method.
     */


  Http.prototype.options =
  /**
  * Performs a request with `options` http method.
  */
  function (url, options) {
    return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));
  };

  Http.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  Http.ctorParameters = function () {
    return [{
      type: ConnectionBackend
    }, {
      type: RequestOptions
    }];
  };

  return Http;
}();
/**
 * @deprecated use @angular/common/http instead
 */


exports.Http = Http;

var Jsonp =
/** @class */
function (_super) {
  (0, _tslib.__extends)(Jsonp, _super);

  function Jsonp(backend, defaultOptions) {
    return _super.call(this, backend, defaultOptions) || this;
  }
  /**
   * Performs any type of http request. First argument is required, and can either be a url or
   * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}
   * object can be provided as the 2nd argument. The options object will be merged with the values
   * of {@link BaseRequestOptions} before performing the request.
   *
   * @security Regular XHR is the safest alternative to JSONP for most applications, and is
   * supported by all current browsers. Because JSONP creates a `<script>` element with
   * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted
   * source could expose your application to XSS risks. Data exposed by JSONP may also be
   * readable by malicious third-party websites. In addition, JSONP introduces potential risk for
   * future security issues (e.g. content sniffing).  For more detail, see the
   * [Security Guide](http://g.co/ng/security).
   */

  /**
     * Performs any type of http request. First argument is required, and can either be a url or
     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}
     * object can be provided as the 2nd argument. The options object will be merged with the values
     * of {@link BaseRequestOptions} before performing the request.
     *
     * @security Regular XHR is the safest alternative to JSONP for most applications, and is
     * supported by all current browsers. Because JSONP creates a `<script>` element with
     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted
     * source could expose your application to XSS risks. Data exposed by JSONP may also be
     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for
     * future security issues (e.g. content sniffing).  For more detail, see the
     * [Security Guide](http://g.co/ng/security).
     */


  Jsonp.prototype.request =
  /**
  * Performs any type of http request. First argument is required, and can either be a url or
  * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}
  * object can be provided as the 2nd argument. The options object will be merged with the values
  * of {@link BaseRequestOptions} before performing the request.
  *
  * @security Regular XHR is the safest alternative to JSONP for most applications, and is
  * supported by all current browsers. Because JSONP creates a `<script>` element with
  * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted
  * source could expose your application to XSS risks. Data exposed by JSONP may also be
  * readable by malicious third-party websites. In addition, JSONP introduces potential risk for
  * future security issues (e.g. content sniffing).  For more detail, see the
  * [Security Guide](http://g.co/ng/security).
  */
  function (url, options) {
    var responseObservable;

    if (typeof url === 'string') {
      url = new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));
    }

    if (url instanceof Request) {
      if (url.method !== RequestMethod.Get) {
        throw new Error('JSONP requests must use GET request method.');
      }

      responseObservable = httpRequest(this._backend, url);
    } else {
      throw new Error('First argument must be a url string or Request instance.');
    }

    return responseObservable;
  };

  Jsonp.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  Jsonp.ctorParameters = function () {
    return [{
      type: ConnectionBackend
    }, {
      type: RequestOptions
    }];
  };

  return Jsonp;
}(Http);
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


exports.Jsonp = Jsonp;

function _createDefaultCookieXSRFStrategy() {
  return new CookieXSRFStrategy();
}

function httpFactory(xhrBackend, requestOptions) {
  return new Http(xhrBackend, requestOptions);
}

function jsonpFactory(jsonpBackend, requestOptions) {
  return new Jsonp(jsonpBackend, requestOptions);
}
/**
 * The module that includes http's providers
 *
 * @deprecated use @angular/common/http instead
 */


var HttpModule =
/** @class */
function () {
  function HttpModule() {}

  HttpModule.decorators = [{
    type: _core.NgModule,
    args: [{
      providers: [// TODO(pascal): use factory type annotations once supported in DI
      // issue: https://github.com/angular/angular/issues/3183
      {
        provide: Http,
        useFactory: httpFactory,
        deps: [XHRBackend, RequestOptions]
      }, BrowserXhr, {
        provide: RequestOptions,
        useClass: BaseRequestOptions
      }, {
        provide: ResponseOptions,
        useClass: BaseResponseOptions
      }, XHRBackend, {
        provide: XSRFStrategy,
        useFactory: _createDefaultCookieXSRFStrategy
      }]
    }]
  }];
  /** @nocollapse */

  HttpModule.ctorParameters = function () {
    return [];
  };

  return HttpModule;
}();
/**
 * The module that includes jsonp's providers
 *
 * @deprecated use @angular/common/http instead
 */


exports.HttpModule = HttpModule;

var JsonpModule =
/** @class */
function () {
  function JsonpModule() {}

  JsonpModule.decorators = [{
    type: _core.NgModule,
    args: [{
      providers: [// TODO(pascal): use factory type annotations once supported in DI
      // issue: https://github.com/angular/angular/issues/3183
      {
        provide: Jsonp,
        useFactory: jsonpFactory,
        deps: [JSONPBackend, RequestOptions]
      }, BrowserJsonp, {
        provide: RequestOptions,
        useClass: BaseRequestOptions
      }, {
        provide: ResponseOptions,
        useClass: BaseResponseOptions
      }, JSONPBackend]
    }]
  }];
  /** @nocollapse */

  JsonpModule.ctorParameters = function () {
    return [];
  };

  return JsonpModule;
}();
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @deprecated use @angular/common/http instead
 */


exports.JsonpModule = JsonpModule;
var VERSION = new _core.Version('6.0.0');
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This file only reexports content of the `src` folder. Keep it that way.

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */

exports.VERSION = VERSION;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function __export(m) {
  for (var p in m) {
    if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
} // Hot Module Replacement


__export(__webpack_require__(322));

/***/ }),
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(501);

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(502);

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Swiper 4.4.1
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://www.idangero.us/swiper/
 *
 * Copyright 2014-2018 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: September 14, 2018
 */
(function (global, factory) {
  ( false ? "undefined" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.Swiper = factory();
})(void 0, function () {
  'use strict';
  /**
   * SSR Window 1.0.1
   * Better handling for window object in SSR environment
   * https://github.com/nolimits4web/ssr-window
   *
   * Copyright 2018, Vladimir Kharlampidi
   *
   * Licensed under MIT
   *
   * Released on: July 18, 2018
   */

  var doc = typeof document === 'undefined' ? {
    body: {},
    addEventListener: function addEventListener() {},
    removeEventListener: function removeEventListener() {},
    activeElement: {
      blur: function blur() {},
      nodeName: ''
    },
    querySelector: function querySelector() {
      return null;
    },
    querySelectorAll: function querySelectorAll() {
      return [];
    },
    getElementById: function getElementById() {
      return null;
    },
    createEvent: function createEvent() {
      return {
        initEvent: function initEvent() {}
      };
    },
    createElement: function createElement() {
      return {
        children: [],
        childNodes: [],
        style: {},
        setAttribute: function setAttribute() {},
        getElementsByTagName: function getElementsByTagName() {
          return [];
        }
      };
    },
    location: {
      hash: ''
    }
  } : document; // eslint-disable-line

  var win = typeof window === 'undefined' ? {
    document: doc,
    navigator: {
      userAgent: ''
    },
    location: {},
    history: {},
    CustomEvent: function CustomEvent() {
      return this;
    },
    addEventListener: function addEventListener() {},
    removeEventListener: function removeEventListener() {},
    getComputedStyle: function getComputedStyle() {
      return {
        getPropertyValue: function getPropertyValue() {
          return '';
        }
      };
    },
    Image: function Image() {},
    Date: function Date() {},
    screen: {},
    setTimeout: function setTimeout() {},
    clearTimeout: function clearTimeout() {}
  } : window; // eslint-disable-line

  /**
   * Dom7 2.1.2
   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
   * http://framework7.io/docs/dom.html
   *
   * Copyright 2018, Vladimir Kharlampidi
   * The iDangero.us
   * http://www.idangero.us/
   *
   * Licensed under MIT
   *
   * Released on: September 13, 2018
   */

  var Dom7 = function Dom7(arr) {
    var self = this; // Create array-like object

    for (var i = 0; i < arr.length; i += 1) {
      self[i] = arr[i];
    }

    self.length = arr.length; // Return collection with methods

    return this;
  };

  function $(selector, context) {
    var arr = [];
    var i = 0;

    if (selector && !context) {
      if (selector instanceof Dom7) {
        return selector;
      }
    }

    if (selector) {
      // String
      if (typeof selector === 'string') {
        var els;
        var tempParent;
        var html = selector.trim();

        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {
          var toCreate = 'div';

          if (html.indexOf('<li') === 0) {
            toCreate = 'ul';
          }

          if (html.indexOf('<tr') === 0) {
            toCreate = 'tbody';
          }

          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {
            toCreate = 'tr';
          }

          if (html.indexOf('<tbody') === 0) {
            toCreate = 'table';
          }

          if (html.indexOf('<option') === 0) {
            toCreate = 'select';
          }

          tempParent = doc.createElement(toCreate);
          tempParent.innerHTML = html;

          for (i = 0; i < tempParent.childNodes.length; i += 1) {
            arr.push(tempParent.childNodes[i]);
          }
        } else {
          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {
            // Pure ID selector
            els = [doc.getElementById(selector.trim().split('#')[1])];
          } else {
            // Other selectors
            els = (context || doc).querySelectorAll(selector.trim());
          }

          for (i = 0; i < els.length; i += 1) {
            if (els[i]) {
              arr.push(els[i]);
            }
          }
        }
      } else if (selector.nodeType || selector === win || selector === doc) {
        // Node/element
        arr.push(selector);
      } else if (selector.length > 0 && selector[0].nodeType) {
        // Array of elements or instance of Dom
        for (i = 0; i < selector.length; i += 1) {
          arr.push(selector[i]);
        }
      }
    }

    return new Dom7(arr);
  }

  $.fn = Dom7.prototype;
  $.Class = Dom7;
  $.Dom7 = Dom7;

  function unique(arr) {
    var uniqueArray = [];

    for (var i = 0; i < arr.length; i += 1) {
      if (uniqueArray.indexOf(arr[i]) === -1) {
        uniqueArray.push(arr[i]);
      }
    }

    return uniqueArray;
  } // Classes and attributes


  function addClass(className) {
    var this$1 = this;

    if (typeof className === 'undefined') {
      return this;
    }

    var classes = className.split(' ');

    for (var i = 0; i < classes.length; i += 1) {
      for (var j = 0; j < this.length; j += 1) {
        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') {
          this$1[j].classList.add(classes[i]);
        }
      }
    }

    return this;
  }

  function removeClass(className) {
    var this$1 = this;
    var classes = className.split(' ');

    for (var i = 0; i < classes.length; i += 1) {
      for (var j = 0; j < this.length; j += 1) {
        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') {
          this$1[j].classList.remove(classes[i]);
        }
      }
    }

    return this;
  }

  function hasClass(className) {
    if (!this[0]) {
      return false;
    }

    return this[0].classList.contains(className);
  }

  function toggleClass(className) {
    var this$1 = this;
    var classes = className.split(' ');

    for (var i = 0; i < classes.length; i += 1) {
      for (var j = 0; j < this.length; j += 1) {
        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') {
          this$1[j].classList.toggle(classes[i]);
        }
      }
    }

    return this;
  }

  function attr(attrs, value) {
    var arguments$1 = arguments;
    var this$1 = this;

    if (arguments.length === 1 && typeof attrs === 'string') {
      // Get attr
      if (this[0]) {
        return this[0].getAttribute(attrs);
      }

      return undefined;
    } // Set attrs


    for (var i = 0; i < this.length; i += 1) {
      if (arguments$1.length === 2) {
        // String
        this$1[i].setAttribute(attrs, value);
      } else {
        // Object
        // eslint-disable-next-line
        for (var attrName in attrs) {
          this$1[i][attrName] = attrs[attrName];
          this$1[i].setAttribute(attrName, attrs[attrName]);
        }
      }
    }

    return this;
  } // eslint-disable-next-line


  function removeAttr(attr) {
    var this$1 = this;

    for (var i = 0; i < this.length; i += 1) {
      this$1[i].removeAttribute(attr);
    }

    return this;
  }

  function data(key, value) {
    var this$1 = this;
    var el;

    if (typeof value === 'undefined') {
      el = this[0]; // Get value

      if (el) {
        if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {
          return el.dom7ElementDataStorage[key];
        }

        var dataKey = el.getAttribute("data-" + key);

        if (dataKey) {
          return dataKey;
        }

        return undefined;
      }

      return undefined;
    } // Set value


    for (var i = 0; i < this.length; i += 1) {
      el = this$1[i];

      if (!el.dom7ElementDataStorage) {
        el.dom7ElementDataStorage = {};
      }

      el.dom7ElementDataStorage[key] = value;
    }

    return this;
  } // Transforms
  // eslint-disable-next-line


  function transform(transform) {
    var this$1 = this;

    for (var i = 0; i < this.length; i += 1) {
      var elStyle = this$1[i].style;
      elStyle.webkitTransform = transform;
      elStyle.transform = transform;
    }

    return this;
  }

  function transition(duration) {
    var this$1 = this;

    if (typeof duration !== 'string') {
      duration = duration + "ms"; // eslint-disable-line
    }

    for (var i = 0; i < this.length; i += 1) {
      var elStyle = this$1[i].style;
      elStyle.webkitTransitionDuration = duration;
      elStyle.transitionDuration = duration;
    }

    return this;
  } // Events


  function on() {
    var this$1 = this;
    var assign;
    var args = [],
        len = arguments.length;

    while (len--) {
      args[len] = arguments[len];
    }

    var eventType = args[0];
    var targetSelector = args[1];
    var listener = args[2];
    var capture = args[3];

    if (typeof args[1] === 'function') {
      assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];
      targetSelector = undefined;
    }

    if (!capture) {
      capture = false;
    }

    function handleLiveEvent(e) {
      var target = e.target;

      if (!target) {
        return;
      }

      var eventData = e.target.dom7EventData || [];

      if (eventData.indexOf(e) < 0) {
        eventData.unshift(e);
      }

      if ($(target).is(targetSelector)) {
        listener.apply(target, eventData);
      } else {
        var parents = $(target).parents(); // eslint-disable-line

        for (var k = 0; k < parents.length; k += 1) {
          if ($(parents[k]).is(targetSelector)) {
            listener.apply(parents[k], eventData);
          }
        }
      }
    }

    function handleEvent(e) {
      var eventData = e && e.target ? e.target.dom7EventData || [] : [];

      if (eventData.indexOf(e) < 0) {
        eventData.unshift(e);
      }

      listener.apply(this, eventData);
    }

    var events = eventType.split(' ');
    var j;

    for (var i = 0; i < this.length; i += 1) {
      var el = this$1[i];

      if (!targetSelector) {
        for (j = 0; j < events.length; j += 1) {
          var event = events[j];

          if (!el.dom7Listeners) {
            el.dom7Listeners = {};
          }

          if (!el.dom7Listeners[event]) {
            el.dom7Listeners[event] = [];
          }

          el.dom7Listeners[event].push({
            listener: listener,
            proxyListener: handleEvent
          });
          el.addEventListener(event, handleEvent, capture);
        }
      } else {
        // Live events
        for (j = 0; j < events.length; j += 1) {
          var event$1 = events[j];

          if (!el.dom7LiveListeners) {
            el.dom7LiveListeners = {};
          }

          if (!el.dom7LiveListeners[event$1]) {
            el.dom7LiveListeners[event$1] = [];
          }

          el.dom7LiveListeners[event$1].push({
            listener: listener,
            proxyListener: handleLiveEvent
          });
          el.addEventListener(event$1, handleLiveEvent, capture);
        }
      }
    }

    return this;
  }

  function off() {
    var this$1 = this;
    var assign;
    var args = [],
        len = arguments.length;

    while (len--) {
      args[len] = arguments[len];
    }

    var eventType = args[0];
    var targetSelector = args[1];
    var listener = args[2];
    var capture = args[3];

    if (typeof args[1] === 'function') {
      assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];
      targetSelector = undefined;
    }

    if (!capture) {
      capture = false;
    }

    var events = eventType.split(' ');

    for (var i = 0; i < events.length; i += 1) {
      var event = events[i];

      for (var j = 0; j < this.length; j += 1) {
        var el = this$1[j];
        var handlers = void 0;

        if (!targetSelector && el.dom7Listeners) {
          handlers = el.dom7Listeners[event];
        } else if (targetSelector && el.dom7LiveListeners) {
          handlers = el.dom7LiveListeners[event];
        }

        if (handlers && handlers.length) {
          for (var k = handlers.length - 1; k >= 0; k -= 1) {
            var handler = handlers[k];

            if (listener && handler.listener === listener) {
              el.removeEventListener(event, handler.proxyListener, capture);
              handlers.splice(k, 1);
            } else if (!listener) {
              el.removeEventListener(event, handler.proxyListener, capture);
              handlers.splice(k, 1);
            }
          }
        }
      }
    }

    return this;
  }

  function trigger() {
    var this$1 = this;
    var args = [],
        len = arguments.length;

    while (len--) {
      args[len] = arguments[len];
    }

    var events = args[0].split(' ');
    var eventData = args[1];

    for (var i = 0; i < events.length; i += 1) {
      var event = events[i];

      for (var j = 0; j < this.length; j += 1) {
        var el = this$1[j];
        var evt = void 0;

        try {
          evt = new win.CustomEvent(event, {
            detail: eventData,
            bubbles: true,
            cancelable: true
          });
        } catch (e) {
          evt = doc.createEvent('Event');
          evt.initEvent(event, true, true);
          evt.detail = eventData;
        } // eslint-disable-next-line


        el.dom7EventData = args.filter(function (data, dataIndex) {
          return dataIndex > 0;
        });
        el.dispatchEvent(evt);
        el.dom7EventData = [];
        delete el.dom7EventData;
      }
    }

    return this;
  }

  function transitionEnd(callback) {
    var events = ['webkitTransitionEnd', 'transitionend'];
    var dom = this;
    var i;

    function fireCallBack(e) {
      /* jshint validthis:true */
      if (e.target !== this) {
        return;
      }

      callback.call(this, e);

      for (i = 0; i < events.length; i += 1) {
        dom.off(events[i], fireCallBack);
      }
    }

    if (callback) {
      for (i = 0; i < events.length; i += 1) {
        dom.on(events[i], fireCallBack);
      }
    }

    return this;
  }

  function outerWidth(includeMargins) {
    if (this.length > 0) {
      if (includeMargins) {
        // eslint-disable-next-line
        var styles = this.styles();
        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));
      }

      return this[0].offsetWidth;
    }

    return null;
  }

  function outerHeight(includeMargins) {
    if (this.length > 0) {
      if (includeMargins) {
        // eslint-disable-next-line
        var styles = this.styles();
        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));
      }

      return this[0].offsetHeight;
    }

    return null;
  }

  function offset() {
    if (this.length > 0) {
      var el = this[0];
      var box = el.getBoundingClientRect();
      var body = doc.body;
      var clientTop = el.clientTop || body.clientTop || 0;
      var clientLeft = el.clientLeft || body.clientLeft || 0;
      var scrollTop = el === win ? win.scrollY : el.scrollTop;
      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;
      return {
        top: box.top + scrollTop - clientTop,
        left: box.left + scrollLeft - clientLeft
      };
    }

    return null;
  }

  function styles() {
    if (this[0]) {
      return win.getComputedStyle(this[0], null);
    }

    return {};
  }

  function css(props, value) {
    var this$1 = this;
    var i;

    if (arguments.length === 1) {
      if (typeof props === 'string') {
        if (this[0]) {
          return win.getComputedStyle(this[0], null).getPropertyValue(props);
        }
      } else {
        for (i = 0; i < this.length; i += 1) {
          // eslint-disable-next-line
          for (var prop in props) {
            this$1[i].style[prop] = props[prop];
          }
        }

        return this;
      }
    }

    if (arguments.length === 2 && typeof props === 'string') {
      for (i = 0; i < this.length; i += 1) {
        this$1[i].style[props] = value;
      }

      return this;
    }

    return this;
  } // Iterate over the collection passing elements to `callback`


  function each(callback) {
    var this$1 = this; // Don't bother continuing without a callback

    if (!callback) {
      return this;
    } // Iterate over the current collection


    for (var i = 0; i < this.length; i += 1) {
      // If the callback returns false
      if (callback.call(this$1[i], i, this$1[i]) === false) {
        // End the loop early
        return this$1;
      }
    } // Return `this` to allow chained DOM operations


    return this;
  } // eslint-disable-next-line


  function html(html) {
    var this$1 = this;

    if (typeof html === 'undefined') {
      return this[0] ? this[0].innerHTML : undefined;
    }

    for (var i = 0; i < this.length; i += 1) {
      this$1[i].innerHTML = html;
    }

    return this;
  } // eslint-disable-next-line


  function text(text) {
    var this$1 = this;

    if (typeof text === 'undefined') {
      if (this[0]) {
        return this[0].textContent.trim();
      }

      return null;
    }

    for (var i = 0; i < this.length; i += 1) {
      this$1[i].textContent = text;
    }

    return this;
  }

  function is(selector) {
    var el = this[0];
    var compareWith;
    var i;

    if (!el || typeof selector === 'undefined') {
      return false;
    }

    if (typeof selector === 'string') {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      }

      compareWith = $(selector);

      for (i = 0; i < compareWith.length; i += 1) {
        if (compareWith[i] === el) {
          return true;
        }
      }

      return false;
    } else if (selector === doc) {
      return el === doc;
    } else if (selector === win) {
      return el === win;
    }

    if (selector.nodeType || selector instanceof Dom7) {
      compareWith = selector.nodeType ? [selector] : selector;

      for (i = 0; i < compareWith.length; i += 1) {
        if (compareWith[i] === el) {
          return true;
        }
      }

      return false;
    }

    return false;
  }

  function index() {
    var child = this[0];
    var i;

    if (child) {
      i = 0; // eslint-disable-next-line

      while ((child = child.previousSibling) !== null) {
        if (child.nodeType === 1) {
          i += 1;
        }
      }

      return i;
    }

    return undefined;
  } // eslint-disable-next-line


  function eq(index) {
    if (typeof index === 'undefined') {
      return this;
    }

    var length = this.length;
    var returnIndex;

    if (index > length - 1) {
      return new Dom7([]);
    }

    if (index < 0) {
      returnIndex = length + index;

      if (returnIndex < 0) {
        return new Dom7([]);
      }

      return new Dom7([this[returnIndex]]);
    }

    return new Dom7([this[index]]);
  }

  function append() {
    var this$1 = this;
    var args = [],
        len = arguments.length;

    while (len--) {
      args[len] = arguments[len];
    }

    var newChild;

    for (var k = 0; k < args.length; k += 1) {
      newChild = args[k];

      for (var i = 0; i < this.length; i += 1) {
        if (typeof newChild === 'string') {
          var tempDiv = doc.createElement('div');
          tempDiv.innerHTML = newChild;

          while (tempDiv.firstChild) {
            this$1[i].appendChild(tempDiv.firstChild);
          }
        } else if (newChild instanceof Dom7) {
          for (var j = 0; j < newChild.length; j += 1) {
            this$1[i].appendChild(newChild[j]);
          }
        } else {
          this$1[i].appendChild(newChild);
        }
      }
    }

    return this;
  }

  function prepend(newChild) {
    var this$1 = this;
    var i;
    var j;

    for (i = 0; i < this.length; i += 1) {
      if (typeof newChild === 'string') {
        var tempDiv = doc.createElement('div');
        tempDiv.innerHTML = newChild;

        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
          this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);
        }
      } else if (newChild instanceof Dom7) {
        for (j = 0; j < newChild.length; j += 1) {
          this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);
        }
      } else {
        this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);
      }
    }

    return this;
  }

  function next(selector) {
    if (this.length > 0) {
      if (selector) {
        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {
          return new Dom7([this[0].nextElementSibling]);
        }

        return new Dom7([]);
      }

      if (this[0].nextElementSibling) {
        return new Dom7([this[0].nextElementSibling]);
      }

      return new Dom7([]);
    }

    return new Dom7([]);
  }

  function nextAll(selector) {
    var nextEls = [];
    var el = this[0];

    if (!el) {
      return new Dom7([]);
    }

    while (el.nextElementSibling) {
      var next = el.nextElementSibling; // eslint-disable-line

      if (selector) {
        if ($(next).is(selector)) {
          nextEls.push(next);
        }
      } else {
        nextEls.push(next);
      }

      el = next;
    }

    return new Dom7(nextEls);
  }

  function prev(selector) {
    if (this.length > 0) {
      var el = this[0];

      if (selector) {
        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {
          return new Dom7([el.previousElementSibling]);
        }

        return new Dom7([]);
      }

      if (el.previousElementSibling) {
        return new Dom7([el.previousElementSibling]);
      }

      return new Dom7([]);
    }

    return new Dom7([]);
  }

  function prevAll(selector) {
    var prevEls = [];
    var el = this[0];

    if (!el) {
      return new Dom7([]);
    }

    while (el.previousElementSibling) {
      var prev = el.previousElementSibling; // eslint-disable-line

      if (selector) {
        if ($(prev).is(selector)) {
          prevEls.push(prev);
        }
      } else {
        prevEls.push(prev);
      }

      el = prev;
    }

    return new Dom7(prevEls);
  }

  function parent(selector) {
    var this$1 = this;
    var parents = []; // eslint-disable-line

    for (var i = 0; i < this.length; i += 1) {
      if (this$1[i].parentNode !== null) {
        if (selector) {
          if ($(this$1[i].parentNode).is(selector)) {
            parents.push(this$1[i].parentNode);
          }
        } else {
          parents.push(this$1[i].parentNode);
        }
      }
    }

    return $(unique(parents));
  }

  function parents(selector) {
    var this$1 = this;
    var parents = []; // eslint-disable-line

    for (var i = 0; i < this.length; i += 1) {
      var parent = this$1[i].parentNode; // eslint-disable-line

      while (parent) {
        if (selector) {
          if ($(parent).is(selector)) {
            parents.push(parent);
          }
        } else {
          parents.push(parent);
        }

        parent = parent.parentNode;
      }
    }

    return $(unique(parents));
  }

  function closest(selector) {
    var closest = this; // eslint-disable-line

    if (typeof selector === 'undefined') {
      return new Dom7([]);
    }

    if (!closest.is(selector)) {
      closest = closest.parents(selector).eq(0);
    }

    return closest;
  }

  function find(selector) {
    var this$1 = this;
    var foundElements = [];

    for (var i = 0; i < this.length; i += 1) {
      var found = this$1[i].querySelectorAll(selector);

      for (var j = 0; j < found.length; j += 1) {
        foundElements.push(found[j]);
      }
    }

    return new Dom7(foundElements);
  }

  function children(selector) {
    var this$1 = this;
    var children = []; // eslint-disable-line

    for (var i = 0; i < this.length; i += 1) {
      var childNodes = this$1[i].childNodes;

      for (var j = 0; j < childNodes.length; j += 1) {
        if (!selector) {
          if (childNodes[j].nodeType === 1) {
            children.push(childNodes[j]);
          }
        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {
          children.push(childNodes[j]);
        }
      }
    }

    return new Dom7(unique(children));
  }

  function remove() {
    var this$1 = this;

    for (var i = 0; i < this.length; i += 1) {
      if (this$1[i].parentNode) {
        this$1[i].parentNode.removeChild(this$1[i]);
      }
    }

    return this;
  }

  function add() {
    var args = [],
        len = arguments.length;

    while (len--) {
      args[len] = arguments[len];
    }

    var dom = this;
    var i;
    var j;

    for (i = 0; i < args.length; i += 1) {
      var toAdd = $(args[i]);

      for (j = 0; j < toAdd.length; j += 1) {
        dom[dom.length] = toAdd[j];
        dom.length += 1;
      }
    }

    return dom;
  }

  var Methods = {
    addClass: addClass,
    removeClass: removeClass,
    hasClass: hasClass,
    toggleClass: toggleClass,
    attr: attr,
    removeAttr: removeAttr,
    data: data,
    transform: transform,
    transition: transition,
    on: on,
    off: off,
    trigger: trigger,
    transitionEnd: transitionEnd,
    outerWidth: outerWidth,
    outerHeight: outerHeight,
    offset: offset,
    css: css,
    each: each,
    html: html,
    text: text,
    is: is,
    index: index,
    eq: eq,
    append: append,
    prepend: prepend,
    next: next,
    nextAll: nextAll,
    prev: prev,
    prevAll: prevAll,
    parent: parent,
    parents: parents,
    closest: closest,
    find: find,
    children: children,
    remove: remove,
    add: add,
    styles: styles
  };
  Object.keys(Methods).forEach(function (methodName) {
    $.fn[methodName] = Methods[methodName];
  });
  var Utils = {
    deleteProps: function deleteProps(obj) {
      var object = obj;
      Object.keys(object).forEach(function (key) {
        try {
          object[key] = null;
        } catch (e) {// no getter for object
        }

        try {
          delete object[key];
        } catch (e) {// something got wrong
        }
      });
    },
    nextTick: function nextTick(callback, delay) {
      if (delay === void 0) delay = 0;
      return setTimeout(callback, delay);
    },
    now: function now() {
      return Date.now();
    },
    getTranslate: function getTranslate(el, axis) {
      if (axis === void 0) axis = 'x';
      var matrix;
      var curTransform;
      var transformMatrix;
      var curStyle = win.getComputedStyle(el, null);

      if (win.WebKitCSSMatrix) {
        curTransform = curStyle.transform || curStyle.webkitTransform;

        if (curTransform.split(',').length > 6) {
          curTransform = curTransform.split(', ').map(function (a) {
            return a.replace(',', '.');
          }).join(', ');
        } // Some old versions of Webkit choke when 'none' is passed; pass
        // empty string instead in this case


        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
      } else {
        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
        matrix = transformMatrix.toString().split(',');
      }

      if (axis === 'x') {
        // Latest Chrome and webkits Fix
        if (win.WebKitCSSMatrix) {
          curTransform = transformMatrix.m41;
        } // Crazy IE10 Matrix
        else if (matrix.length === 16) {
            curTransform = parseFloat(matrix[12]);
          } // Normal Browsers
          else {
              curTransform = parseFloat(matrix[4]);
            }
      }

      if (axis === 'y') {
        // Latest Chrome and webkits Fix
        if (win.WebKitCSSMatrix) {
          curTransform = transformMatrix.m42;
        } // Crazy IE10 Matrix
        else if (matrix.length === 16) {
            curTransform = parseFloat(matrix[13]);
          } // Normal Browsers
          else {
              curTransform = parseFloat(matrix[5]);
            }
      }

      return curTransform || 0;
    },
    parseUrlQuery: function parseUrlQuery(url) {
      var query = {};
      var urlToParse = url || win.location.href;
      var i;
      var params;
      var param;
      var length;

      if (typeof urlToParse === 'string' && urlToParse.length) {
        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\S*\?/, '') : '';
        params = urlToParse.split('&').filter(function (paramsPart) {
          return paramsPart !== '';
        });
        length = params.length;

        for (i = 0; i < length; i += 1) {
          param = params[i].replace(/#\S+/g, '').split('=');
          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';
        }
      }

      return query;
    },
    isObject: function isObject(o) {
      return _typeof(o) === 'object' && o !== null && o.constructor && o.constructor === Object;
    },
    extend: function extend() {
      var args = [],
          len$1 = arguments.length;

      while (len$1--) {
        args[len$1] = arguments[len$1];
      }

      var to = Object(args[0]);

      for (var i = 1; i < args.length; i += 1) {
        var nextSource = args[i];

        if (nextSource !== undefined && nextSource !== null) {
          var keysArray = Object.keys(Object(nextSource));

          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
            var nextKey = keysArray[nextIndex];
            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);

            if (desc !== undefined && desc.enumerable) {
              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
                Utils.extend(to[nextKey], nextSource[nextKey]);
              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
                to[nextKey] = {};
                Utils.extend(to[nextKey], nextSource[nextKey]);
              } else {
                to[nextKey] = nextSource[nextKey];
              }
            }
          }
        }
      }

      return to;
    }
  };

  var Support = function Support() {
    var testDiv = doc.createElement('div');
    return {
      touch: win.Modernizr && win.Modernizr.touch === true || function checkTouch() {
        return !!('ontouchstart' in win || win.DocumentTouch && doc instanceof win.DocumentTouch);
      }(),
      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),
      prefixedPointerEvents: !!win.navigator.msPointerEnabled,
      transition: function checkTransition() {
        var style = testDiv.style;
        return 'transition' in style || 'webkitTransition' in style || 'MozTransition' in style;
      }(),
      transforms3d: win.Modernizr && win.Modernizr.csstransforms3d === true || function checkTransforms3d() {
        var style = testDiv.style;
        return 'webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style;
      }(),
      flexbox: function checkFlexbox() {
        var style = testDiv.style;
        var styles = 'alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient'.split(' ');

        for (var i = 0; i < styles.length; i += 1) {
          if (styles[i] in style) {
            return true;
          }
        }

        return false;
      }(),
      observer: function checkObserver() {
        return 'MutationObserver' in win || 'WebkitMutationObserver' in win;
      }(),
      passiveListener: function checkPassiveListener() {
        var supportsPassive = false;

        try {
          var opts = Object.defineProperty({}, 'passive', {
            // eslint-disable-next-line
            get: function get() {
              supportsPassive = true;
            }
          });
          win.addEventListener('testPassiveListener', null, opts);
        } catch (e) {// No support
        }

        return supportsPassive;
      }(),
      gestures: function checkGestures() {
        return 'ongesturestart' in win;
      }()
    };
  }();

  var SwiperClass = function SwiperClass(params) {
    if (params === void 0) params = {};
    var self = this;
    self.params = params; // Events

    self.eventsListeners = {};

    if (self.params && self.params.on) {
      Object.keys(self.params.on).forEach(function (eventName) {
        self.on(eventName, self.params.on[eventName]);
      });
    }
  };

  var staticAccessors = {
    components: {
      configurable: true
    }
  };

  SwiperClass.prototype.on = function on(events, handler, priority) {
    var self = this;

    if (typeof handler !== 'function') {
      return self;
    }

    var method = priority ? 'unshift' : 'push';
    events.split(' ').forEach(function (event) {
      if (!self.eventsListeners[event]) {
        self.eventsListeners[event] = [];
      }

      self.eventsListeners[event][method](handler);
    });
    return self;
  };

  SwiperClass.prototype.once = function once(events, handler, priority) {
    var self = this;

    if (typeof handler !== 'function') {
      return self;
    }

    function onceHandler() {
      var args = [],
          len = arguments.length;

      while (len--) {
        args[len] = arguments[len];
      }

      handler.apply(self, args);
      self.off(events, onceHandler);
    }

    return self.on(events, onceHandler, priority);
  };

  SwiperClass.prototype.off = function off(events, handler) {
    var self = this;

    if (!self.eventsListeners) {
      return self;
    }

    events.split(' ').forEach(function (event) {
      if (typeof handler === 'undefined') {
        self.eventsListeners[event] = [];
      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {
        self.eventsListeners[event].forEach(function (eventHandler, index) {
          if (eventHandler === handler) {
            self.eventsListeners[event].splice(index, 1);
          }
        });
      }
    });
    return self;
  };

  SwiperClass.prototype.emit = function emit() {
    var args = [],
        len = arguments.length;

    while (len--) {
      args[len] = arguments[len];
    }

    var self = this;

    if (!self.eventsListeners) {
      return self;
    }

    var events;
    var data;
    var context;

    if (typeof args[0] === 'string' || Array.isArray(args[0])) {
      events = args[0];
      data = args.slice(1, args.length);
      context = self;
    } else {
      events = args[0].events;
      data = args[0].data;
      context = args[0].context || self;
    }

    var eventsArray = Array.isArray(events) ? events : events.split(' ');
    eventsArray.forEach(function (event) {
      if (self.eventsListeners && self.eventsListeners[event]) {
        var handlers = [];
        self.eventsListeners[event].forEach(function (eventHandler) {
          handlers.push(eventHandler);
        });
        handlers.forEach(function (eventHandler) {
          eventHandler.apply(context, data);
        });
      }
    });
    return self;
  };

  SwiperClass.prototype.useModulesParams = function useModulesParams(instanceParams) {
    var instance = this;

    if (!instance.modules) {
      return;
    }

    Object.keys(instance.modules).forEach(function (moduleName) {
      var module = instance.modules[moduleName]; // Extend params

      if (module.params) {
        Utils.extend(instanceParams, module.params);
      }
    });
  };

  SwiperClass.prototype.useModules = function useModules(modulesParams) {
    if (modulesParams === void 0) modulesParams = {};
    var instance = this;

    if (!instance.modules) {
      return;
    }

    Object.keys(instance.modules).forEach(function (moduleName) {
      var module = instance.modules[moduleName];
      var moduleParams = modulesParams[moduleName] || {}; // Extend instance methods and props

      if (module.instance) {
        Object.keys(module.instance).forEach(function (modulePropName) {
          var moduleProp = module.instance[modulePropName];

          if (typeof moduleProp === 'function') {
            instance[modulePropName] = moduleProp.bind(instance);
          } else {
            instance[modulePropName] = moduleProp;
          }
        });
      } // Add event listeners


      if (module.on && instance.on) {
        Object.keys(module.on).forEach(function (moduleEventName) {
          instance.on(moduleEventName, module.on[moduleEventName]);
        });
      } // Module create callback


      if (module.create) {
        module.create.bind(instance)(moduleParams);
      }
    });
  };

  staticAccessors.components.set = function (components) {
    var Class = this;

    if (!Class.use) {
      return;
    }

    Class.use(components);
  };

  SwiperClass.installModule = function installModule(module) {
    var params = [],
        len = arguments.length - 1;

    while (len-- > 0) {
      params[len] = arguments[len + 1];
    }

    var Class = this;

    if (!Class.prototype.modules) {
      Class.prototype.modules = {};
    }

    var name = module.name || Object.keys(Class.prototype.modules).length + "_" + Utils.now();
    Class.prototype.modules[name] = module; // Prototype

    if (module.proto) {
      Object.keys(module.proto).forEach(function (key) {
        Class.prototype[key] = module.proto[key];
      });
    } // Class


    if (module.static) {
      Object.keys(module.static).forEach(function (key) {
        Class[key] = module.static[key];
      });
    } // Callback


    if (module.install) {
      module.install.apply(Class, params);
    }

    return Class;
  };

  SwiperClass.use = function use(module) {
    var params = [],
        len = arguments.length - 1;

    while (len-- > 0) {
      params[len] = arguments[len + 1];
    }

    var Class = this;

    if (Array.isArray(module)) {
      module.forEach(function (m) {
        return Class.installModule(m);
      });
      return Class;
    }

    return Class.installModule.apply(Class, [module].concat(params));
  };

  Object.defineProperties(SwiperClass, staticAccessors);

  function updateSize() {
    var swiper = this;
    var width;
    var height;
    var $el = swiper.$el;

    if (typeof swiper.params.width !== 'undefined') {
      width = swiper.params.width;
    } else {
      width = $el[0].clientWidth;
    }

    if (typeof swiper.params.height !== 'undefined') {
      height = swiper.params.height;
    } else {
      height = $el[0].clientHeight;
    }

    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {
      return;
    } // Subtract paddings


    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);
    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);
    Utils.extend(swiper, {
      width: width,
      height: height,
      size: swiper.isHorizontal() ? width : height
    });
  }

  function updateSlides() {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var swiperSize = swiper.size;
    var rtl = swiper.rtlTranslate;
    var wrongRTL = swiper.wrongRTL;
    var isVirtual = swiper.virtual && params.virtual.enabled;
    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;
    var slides = $wrapperEl.children("." + swiper.params.slideClass);
    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
    var snapGrid = [];
    var slidesGrid = [];
    var slidesSizesGrid = [];
    var offsetBefore = params.slidesOffsetBefore;

    if (typeof offsetBefore === 'function') {
      offsetBefore = params.slidesOffsetBefore.call(swiper);
    }

    var offsetAfter = params.slidesOffsetAfter;

    if (typeof offsetAfter === 'function') {
      offsetAfter = params.slidesOffsetAfter.call(swiper);
    }

    var previousSnapGridLength = swiper.snapGrid.length;
    var previousSlidesGridLength = swiper.snapGrid.length;
    var spaceBetween = params.spaceBetween;
    var slidePosition = -offsetBefore;
    var prevSlideSize = 0;
    var index = 0;

    if (typeof swiperSize === 'undefined') {
      return;
    }

    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;
    }

    swiper.virtualSize = -spaceBetween; // reset margins

    if (rtl) {
      slides.css({
        marginLeft: '',
        marginTop: ''
      });
    } else {
      slides.css({
        marginRight: '',
        marginBottom: ''
      });
    }

    var slidesNumberEvenToRows;

    if (params.slidesPerColumn > 1) {
      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {
        slidesNumberEvenToRows = slidesLength;
      } else {
        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;
      }

      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {
        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);
      }
    } // Calc slides


    var slideSize;
    var slidesPerColumn = params.slidesPerColumn;
    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
    var numFullColumns = slidesPerRow - (params.slidesPerColumn * slidesPerRow - slidesLength);

    for (var i = 0; i < slidesLength; i += 1) {
      slideSize = 0;
      var slide = slides.eq(i);

      if (params.slidesPerColumn > 1) {
        // Set slides order
        var newSlideOrderIndex = void 0;
        var column = void 0;
        var row = void 0;

        if (params.slidesPerColumnFill === 'column') {
          column = Math.floor(i / slidesPerColumn);
          row = i - column * slidesPerColumn;

          if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {
            row += 1;

            if (row >= slidesPerColumn) {
              row = 0;
              column += 1;
            }
          }

          newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;
          slide.css({
            '-webkit-box-ordinal-group': newSlideOrderIndex,
            '-moz-box-ordinal-group': newSlideOrderIndex,
            '-ms-flex-order': newSlideOrderIndex,
            '-webkit-order': newSlideOrderIndex,
            order: newSlideOrderIndex
          });
        } else {
          row = Math.floor(i / slidesPerRow);
          column = i - row * slidesPerRow;
        }

        slide.css("margin-" + (swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && params.spaceBetween + "px").attr('data-swiper-column', column).attr('data-swiper-row', row);
      }

      if (slide.css('display') === 'none') {
        continue;
      } // eslint-disable-line


      if (params.slidesPerView === 'auto') {
        var slideStyles = win.getComputedStyle(slide[0], null);
        var currentTransform = slide[0].style.transform;
        var currentWebKitTransform = slide[0].style.webkitTransform;

        if (currentTransform) {
          slide[0].style.transform = 'none';
        }

        if (currentWebKitTransform) {
          slide[0].style.webkitTransform = 'none';
        }

        if (params.roundLengths) {
          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);
        } else {
          // eslint-disable-next-line
          if (swiper.isHorizontal()) {
            slideSize = slide[0].getBoundingClientRect().width + parseFloat(slideStyles.getPropertyValue('margin-left')) + parseFloat(slideStyles.getPropertyValue('margin-right'));
          } else {
            slideSize = slide[0].getBoundingClientRect().height + parseFloat(slideStyles.getPropertyValue('margin-top')) + parseFloat(slideStyles.getPropertyValue('margin-bottom'));
          }
        }

        if (currentTransform) {
          slide[0].style.transform = currentTransform;
        }

        if (currentWebKitTransform) {
          slide[0].style.webkitTransform = currentWebKitTransform;
        }

        if (params.roundLengths) {
          slideSize = Math.floor(slideSize);
        }
      } else {
        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;

        if (params.roundLengths) {
          slideSize = Math.floor(slideSize);
        }

        if (slides[i]) {
          if (swiper.isHorizontal()) {
            slides[i].style.width = slideSize + "px";
          } else {
            slides[i].style.height = slideSize + "px";
          }
        }
      }

      if (slides[i]) {
        slides[i].swiperSlideSize = slideSize;
      }

      slidesSizesGrid.push(slideSize);

      if (params.centeredSlides) {
        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;

        if (prevSlideSize === 0 && i !== 0) {
          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
        }

        if (i === 0) {
          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
        }

        if (Math.abs(slidePosition) < 1 / 1000) {
          slidePosition = 0;
        }

        if (params.roundLengths) {
          slidePosition = Math.floor(slidePosition);
        }

        if (index % params.slidesPerGroup === 0) {
          snapGrid.push(slidePosition);
        }

        slidesGrid.push(slidePosition);
      } else {
        if (params.roundLengths) {
          slidePosition = Math.floor(slidePosition);
        }

        if (index % params.slidesPerGroup === 0) {
          snapGrid.push(slidePosition);
        }

        slidesGrid.push(slidePosition);
        slidePosition = slidePosition + slideSize + spaceBetween;
      }

      swiper.virtualSize += slideSize + spaceBetween;
      prevSlideSize = slideSize;
      index += 1;
    }

    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
    var newSlidesGrid;

    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {
      $wrapperEl.css({
        width: swiper.virtualSize + params.spaceBetween + "px"
      });
    }

    if (!Support.flexbox || params.setWrapperSize) {
      if (swiper.isHorizontal()) {
        $wrapperEl.css({
          width: swiper.virtualSize + params.spaceBetween + "px"
        });
      } else {
        $wrapperEl.css({
          height: swiper.virtualSize + params.spaceBetween + "px"
        });
      }
    }

    if (params.slidesPerColumn > 1) {
      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;
      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;

      if (swiper.isHorizontal()) {
        $wrapperEl.css({
          width: swiper.virtualSize + params.spaceBetween + "px"
        });
      } else {
        $wrapperEl.css({
          height: swiper.virtualSize + params.spaceBetween + "px"
        });
      }

      if (params.centeredSlides) {
        newSlidesGrid = [];

        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {
          var slidesGridItem = snapGrid[i$1];

          if (params.roundLengths) {
            slidesGridItem = Math.floor(slidesGridItem);
          }

          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) {
            newSlidesGrid.push(slidesGridItem);
          }
        }

        snapGrid = newSlidesGrid;
      }
    } // Remove last grid elements depending on width


    if (!params.centeredSlides) {
      newSlidesGrid = [];

      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {
        var slidesGridItem$1 = snapGrid[i$2];

        if (params.roundLengths) {
          slidesGridItem$1 = Math.floor(slidesGridItem$1);
        }

        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {
          newSlidesGrid.push(slidesGridItem$1);
        }
      }

      snapGrid = newSlidesGrid;

      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {
        snapGrid.push(swiper.virtualSize - swiperSize);
      }
    }

    if (snapGrid.length === 0) {
      snapGrid = [0];
    }

    if (params.spaceBetween !== 0) {
      if (swiper.isHorizontal()) {
        if (rtl) {
          slides.css({
            marginLeft: spaceBetween + "px"
          });
        } else {
          slides.css({
            marginRight: spaceBetween + "px"
          });
        }
      } else {
        slides.css({
          marginBottom: spaceBetween + "px"
        });
      }
    }

    if (params.centerInsufficientSlides) {
      var allSlidesSize = 0;
      slidesSizesGrid.forEach(function (slideSizeValue) {
        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
      });
      allSlidesSize -= params.spaceBetween;

      if (allSlidesSize < swiperSize) {
        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;
        snapGrid.forEach(function (snap, snapIndex) {
          snapGrid[snapIndex] = snap - allSlidesOffset;
        });
        slidesGrid.forEach(function (snap, snapIndex) {
          slidesGrid[snapIndex] = snap + allSlidesOffset;
        });
      }
    }

    Utils.extend(swiper, {
      slides: slides,
      snapGrid: snapGrid,
      slidesGrid: slidesGrid,
      slidesSizesGrid: slidesSizesGrid
    });

    if (slidesLength !== previousSlidesLength) {
      swiper.emit('slidesLengthChange');
    }

    if (snapGrid.length !== previousSnapGridLength) {
      if (swiper.params.watchOverflow) {
        swiper.checkOverflow();
      }

      swiper.emit('snapGridLengthChange');
    }

    if (slidesGrid.length !== previousSlidesGridLength) {
      swiper.emit('slidesGridLengthChange');
    }

    if (params.watchSlidesProgress || params.watchSlidesVisibility) {
      swiper.updateSlidesOffset();
    }
  }

  function updateAutoHeight(speed) {
    var swiper = this;
    var activeSlides = [];
    var newHeight = 0;
    var i;

    if (typeof speed === 'number') {
      swiper.setTransition(speed);
    } else if (speed === true) {
      swiper.setTransition(swiper.params.speed);
    } // Find slides currently in view


    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {
      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
        var index = swiper.activeIndex + i;

        if (index > swiper.slides.length) {
          break;
        }

        activeSlides.push(swiper.slides.eq(index)[0]);
      }
    } else {
      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);
    } // Find new height from highest slide in view


    for (i = 0; i < activeSlides.length; i += 1) {
      if (typeof activeSlides[i] !== 'undefined') {
        var height = activeSlides[i].offsetHeight;
        newHeight = height > newHeight ? height : newHeight;
      }
    } // Update Height


    if (newHeight) {
      swiper.$wrapperEl.css('height', newHeight + "px");
    }
  }

  function updateSlidesOffset() {
    var swiper = this;
    var slides = swiper.slides;

    for (var i = 0; i < slides.length; i += 1) {
      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
    }
  }

  function updateSlidesProgress(translate) {
    if (translate === void 0) translate = this && this.translate || 0;
    var swiper = this;
    var params = swiper.params;
    var slides = swiper.slides;
    var rtl = swiper.rtlTranslate;

    if (slides.length === 0) {
      return;
    }

    if (typeof slides[0].swiperSlideOffset === 'undefined') {
      swiper.updateSlidesOffset();
    }

    var offsetCenter = -translate;

    if (rtl) {
      offsetCenter = translate;
    } // Visible Slides


    slides.removeClass(params.slideVisibleClass);
    swiper.visibleSlidesIndexes = [];
    swiper.visibleSlides = [];

    for (var i = 0; i < slides.length; i += 1) {
      var slide = slides[i];
      var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);

      if (params.watchSlidesVisibility) {
        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];
        var isVisible = slideBefore >= 0 && slideBefore < swiper.size || slideAfter > 0 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;

        if (isVisible) {
          swiper.visibleSlides.push(slide);
          swiper.visibleSlidesIndexes.push(i);
          slides.eq(i).addClass(params.slideVisibleClass);
        }
      }

      slide.progress = rtl ? -slideProgress : slideProgress;
    }

    swiper.visibleSlides = $(swiper.visibleSlides);
  }

  function updateProgress(translate) {
    if (translate === void 0) translate = this && this.translate || 0;
    var swiper = this;
    var params = swiper.params;
    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    var progress = swiper.progress;
    var isBeginning = swiper.isBeginning;
    var isEnd = swiper.isEnd;
    var wasBeginning = isBeginning;
    var wasEnd = isEnd;

    if (translatesDiff === 0) {
      progress = 0;
      isBeginning = true;
      isEnd = true;
    } else {
      progress = (translate - swiper.minTranslate()) / translatesDiff;
      isBeginning = progress <= 0;
      isEnd = progress >= 1;
    }

    Utils.extend(swiper, {
      progress: progress,
      isBeginning: isBeginning,
      isEnd: isEnd
    });

    if (params.watchSlidesProgress || params.watchSlidesVisibility) {
      swiper.updateSlidesProgress(translate);
    }

    if (isBeginning && !wasBeginning) {
      swiper.emit('reachBeginning toEdge');
    }

    if (isEnd && !wasEnd) {
      swiper.emit('reachEnd toEdge');
    }

    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {
      swiper.emit('fromEdge');
    }

    swiper.emit('progress', progress);
  }

  function updateSlidesClasses() {
    var swiper = this;
    var slides = swiper.slides;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var activeIndex = swiper.activeIndex;
    var realIndex = swiper.realIndex;
    var isVirtual = swiper.virtual && params.virtual.enabled;
    slides.removeClass(params.slideActiveClass + " " + params.slideNextClass + " " + params.slidePrevClass + " " + params.slideDuplicateActiveClass + " " + params.slideDuplicateNextClass + " " + params.slideDuplicatePrevClass);
    var activeSlide;

    if (isVirtual) {
      activeSlide = swiper.$wrapperEl.find("." + params.slideClass + "[data-swiper-slide-index=\"" + activeIndex + "\"]");
    } else {
      activeSlide = slides.eq(activeIndex);
    } // Active classes


    activeSlide.addClass(params.slideActiveClass);

    if (params.loop) {
      // Duplicate to all looped slides
      if (activeSlide.hasClass(params.slideDuplicateClass)) {
        $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ")[data-swiper-slide-index=\"" + realIndex + "\"]").addClass(params.slideDuplicateActiveClass);
      } else {
        $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + "[data-swiper-slide-index=\"" + realIndex + "\"]").addClass(params.slideDuplicateActiveClass);
      }
    } // Next Slide


    var nextSlide = activeSlide.nextAll("." + params.slideClass).eq(0).addClass(params.slideNextClass);

    if (params.loop && nextSlide.length === 0) {
      nextSlide = slides.eq(0);
      nextSlide.addClass(params.slideNextClass);
    } // Prev Slide


    var prevSlide = activeSlide.prevAll("." + params.slideClass).eq(0).addClass(params.slidePrevClass);

    if (params.loop && prevSlide.length === 0) {
      prevSlide = slides.eq(-1);
      prevSlide.addClass(params.slidePrevClass);
    }

    if (params.loop) {
      // Duplicate to all looped slides
      if (nextSlide.hasClass(params.slideDuplicateClass)) {
        $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ")[data-swiper-slide-index=\"" + nextSlide.attr('data-swiper-slide-index') + "\"]").addClass(params.slideDuplicateNextClass);
      } else {
        $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + "[data-swiper-slide-index=\"" + nextSlide.attr('data-swiper-slide-index') + "\"]").addClass(params.slideDuplicateNextClass);
      }

      if (prevSlide.hasClass(params.slideDuplicateClass)) {
        $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ")[data-swiper-slide-index=\"" + prevSlide.attr('data-swiper-slide-index') + "\"]").addClass(params.slideDuplicatePrevClass);
      } else {
        $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + "[data-swiper-slide-index=\"" + prevSlide.attr('data-swiper-slide-index') + "\"]").addClass(params.slideDuplicatePrevClass);
      }
    }
  }

  function updateActiveIndex(newActiveIndex) {
    var swiper = this;
    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
    var slidesGrid = swiper.slidesGrid;
    var snapGrid = swiper.snapGrid;
    var params = swiper.params;
    var previousIndex = swiper.activeIndex;
    var previousRealIndex = swiper.realIndex;
    var previousSnapIndex = swiper.snapIndex;
    var activeIndex = newActiveIndex;
    var snapIndex;

    if (typeof activeIndex === 'undefined') {
      for (var i = 0; i < slidesGrid.length; i += 1) {
        if (typeof slidesGrid[i + 1] !== 'undefined') {
          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {
            activeIndex = i;
          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {
            activeIndex = i + 1;
          }
        } else if (translate >= slidesGrid[i]) {
          activeIndex = i;
        }
      } // Normalize slideIndex


      if (params.normalizeSlideIndex) {
        if (activeIndex < 0 || typeof activeIndex === 'undefined') {
          activeIndex = 0;
        }
      }
    }

    if (snapGrid.indexOf(translate) >= 0) {
      snapIndex = snapGrid.indexOf(translate);
    } else {
      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);
    }

    if (snapIndex >= snapGrid.length) {
      snapIndex = snapGrid.length - 1;
    }

    if (activeIndex === previousIndex) {
      if (snapIndex !== previousSnapIndex) {
        swiper.snapIndex = snapIndex;
        swiper.emit('snapIndexChange');
      }

      return;
    } // Get real index


    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);
    Utils.extend(swiper, {
      snapIndex: snapIndex,
      realIndex: realIndex,
      previousIndex: previousIndex,
      activeIndex: activeIndex
    });
    swiper.emit('activeIndexChange');
    swiper.emit('snapIndexChange');

    if (previousRealIndex !== realIndex) {
      swiper.emit('realIndexChange');
    }

    swiper.emit('slideChange');
  }

  function updateClickedSlide(e) {
    var swiper = this;
    var params = swiper.params;
    var slide = $(e.target).closest("." + params.slideClass)[0];
    var slideFound = false;

    if (slide) {
      for (var i = 0; i < swiper.slides.length; i += 1) {
        if (swiper.slides[i] === slide) {
          slideFound = true;
        }
      }
    }

    if (slide && slideFound) {
      swiper.clickedSlide = slide;

      if (swiper.virtual && swiper.params.virtual.enabled) {
        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);
      } else {
        swiper.clickedIndex = $(slide).index();
      }
    } else {
      swiper.clickedSlide = undefined;
      swiper.clickedIndex = undefined;
      return;
    }

    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {
      swiper.slideToClickedSlide();
    }
  }

  var update = {
    updateSize: updateSize,
    updateSlides: updateSlides,
    updateAutoHeight: updateAutoHeight,
    updateSlidesOffset: updateSlidesOffset,
    updateSlidesProgress: updateSlidesProgress,
    updateProgress: updateProgress,
    updateSlidesClasses: updateSlidesClasses,
    updateActiveIndex: updateActiveIndex,
    updateClickedSlide: updateClickedSlide
  };

  function getTranslate(axis) {
    if (axis === void 0) axis = this.isHorizontal() ? 'x' : 'y';
    var swiper = this;
    var params = swiper.params;
    var rtl = swiper.rtlTranslate;
    var translate = swiper.translate;
    var $wrapperEl = swiper.$wrapperEl;

    if (params.virtualTranslate) {
      return rtl ? -translate : translate;
    }

    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);

    if (rtl) {
      currentTranslate = -currentTranslate;
    }

    return currentTranslate || 0;
  }

  function setTranslate(translate, byController) {
    var swiper = this;
    var rtl = swiper.rtlTranslate;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var progress = swiper.progress;
    var x = 0;
    var y = 0;
    var z = 0;

    if (swiper.isHorizontal()) {
      x = rtl ? -translate : translate;
    } else {
      y = translate;
    }

    if (params.roundLengths) {
      x = Math.floor(x);
      y = Math.floor(y);
    }

    if (!params.virtualTranslate) {
      if (Support.transforms3d) {
        $wrapperEl.transform("translate3d(" + x + "px, " + y + "px, " + z + "px)");
      } else {
        $wrapperEl.transform("translate(" + x + "px, " + y + "px)");
      }
    }

    swiper.previousTranslate = swiper.translate;
    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress

    var newProgress;
    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();

    if (translatesDiff === 0) {
      newProgress = 0;
    } else {
      newProgress = (translate - swiper.minTranslate()) / translatesDiff;
    }

    if (newProgress !== progress) {
      swiper.updateProgress(translate);
    }

    swiper.emit('setTranslate', swiper.translate, byController);
  }

  function minTranslate() {
    return -this.snapGrid[0];
  }

  function maxTranslate() {
    return -this.snapGrid[this.snapGrid.length - 1];
  }

  var translate = {
    getTranslate: getTranslate,
    setTranslate: setTranslate,
    minTranslate: minTranslate,
    maxTranslate: maxTranslate
  };

  function setTransition(duration, byController) {
    var swiper = this;
    swiper.$wrapperEl.transition(duration);
    swiper.emit('setTransition', duration, byController);
  }

  function transitionStart(runCallbacks, direction) {
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    var activeIndex = swiper.activeIndex;
    var params = swiper.params;
    var previousIndex = swiper.previousIndex;

    if (params.autoHeight) {
      swiper.updateAutoHeight();
    }

    var dir = direction;

    if (!dir) {
      if (activeIndex > previousIndex) {
        dir = 'next';
      } else if (activeIndex < previousIndex) {
        dir = 'prev';
      } else {
        dir = 'reset';
      }
    }

    swiper.emit('transitionStart');

    if (runCallbacks && activeIndex !== previousIndex) {
      if (dir === 'reset') {
        swiper.emit('slideResetTransitionStart');
        return;
      }

      swiper.emit('slideChangeTransitionStart');

      if (dir === 'next') {
        swiper.emit('slideNextTransitionStart');
      } else {
        swiper.emit('slidePrevTransitionStart');
      }
    }
  }

  function transitionEnd$1(runCallbacks, direction) {
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    var activeIndex = swiper.activeIndex;
    var previousIndex = swiper.previousIndex;
    swiper.animating = false;
    swiper.setTransition(0);
    var dir = direction;

    if (!dir) {
      if (activeIndex > previousIndex) {
        dir = 'next';
      } else if (activeIndex < previousIndex) {
        dir = 'prev';
      } else {
        dir = 'reset';
      }
    }

    swiper.emit('transitionEnd');

    if (runCallbacks && activeIndex !== previousIndex) {
      if (dir === 'reset') {
        swiper.emit('slideResetTransitionEnd');
        return;
      }

      swiper.emit('slideChangeTransitionEnd');

      if (dir === 'next') {
        swiper.emit('slideNextTransitionEnd');
      } else {
        swiper.emit('slidePrevTransitionEnd');
      }
    }
  }

  var transition$1 = {
    setTransition: setTransition,
    transitionStart: transitionStart,
    transitionEnd: transitionEnd$1
  };

  function slideTo(index, speed, runCallbacks, internal) {
    if (index === void 0) index = 0;
    if (speed === void 0) speed = this.params.speed;
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    var slideIndex = index;

    if (slideIndex < 0) {
      slideIndex = 0;
    }

    var params = swiper.params;
    var snapGrid = swiper.snapGrid;
    var slidesGrid = swiper.slidesGrid;
    var previousIndex = swiper.previousIndex;
    var activeIndex = swiper.activeIndex;
    var rtl = swiper.rtlTranslate;

    if (swiper.animating && params.preventInteractionOnTransition) {
      return false;
    }

    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);

    if (snapIndex >= snapGrid.length) {
      snapIndex = snapGrid.length - 1;
    }

    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {
      swiper.emit('beforeSlideChangeStart');
    }

    var translate = -snapGrid[snapIndex]; // Update progress

    swiper.updateProgress(translate); // Normalize slideIndex

    if (params.normalizeSlideIndex) {
      for (var i = 0; i < slidesGrid.length; i += 1) {
        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {
          slideIndex = i;
        }
      }
    } // Directions locks


    if (swiper.initialized && slideIndex !== activeIndex) {
      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {
        return false;
      }

      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {
        if ((activeIndex || 0) !== slideIndex) {
          return false;
        }
      }
    }

    var direction;

    if (slideIndex > activeIndex) {
      direction = 'next';
    } else if (slideIndex < activeIndex) {
      direction = 'prev';
    } else {
      direction = 'reset';
    } // Update Index


    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {
      swiper.updateActiveIndex(slideIndex); // Update Height

      if (params.autoHeight) {
        swiper.updateAutoHeight();
      }

      swiper.updateSlidesClasses();

      if (params.effect !== 'slide') {
        swiper.setTranslate(translate);
      }

      if (direction !== 'reset') {
        swiper.transitionStart(runCallbacks, direction);
        swiper.transitionEnd(runCallbacks, direction);
      }

      return false;
    }

    if (speed === 0 || !Support.transition) {
      swiper.setTransition(0);
      swiper.setTranslate(translate);
      swiper.updateActiveIndex(slideIndex);
      swiper.updateSlidesClasses();
      swiper.emit('beforeTransitionStart', speed, internal);
      swiper.transitionStart(runCallbacks, direction);
      swiper.transitionEnd(runCallbacks, direction);
    } else {
      swiper.setTransition(speed);
      swiper.setTranslate(translate);
      swiper.updateActiveIndex(slideIndex);
      swiper.updateSlidesClasses();
      swiper.emit('beforeTransitionStart', speed, internal);
      swiper.transitionStart(runCallbacks, direction);

      if (!swiper.animating) {
        swiper.animating = true;

        if (!swiper.onSlideToWrapperTransitionEnd) {
          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {
            if (!swiper || swiper.destroyed) {
              return;
            }

            if (e.target !== this) {
              return;
            }

            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
            swiper.onSlideToWrapperTransitionEnd = null;
            delete swiper.onSlideToWrapperTransitionEnd;
            swiper.transitionEnd(runCallbacks, direction);
          };
        }

        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
      }
    }

    return true;
  }

  function slideToLoop(index, speed, runCallbacks, internal) {
    if (index === void 0) index = 0;
    if (speed === void 0) speed = this.params.speed;
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    var newIndex = index;

    if (swiper.params.loop) {
      newIndex += swiper.loopedSlides;
    }

    return swiper.slideTo(newIndex, speed, runCallbacks, internal);
  }
  /* eslint no-unused-vars: "off" */


  function slideNext(speed, runCallbacks, internal) {
    if (speed === void 0) speed = this.params.speed;
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    var params = swiper.params;
    var animating = swiper.animating;

    if (params.loop) {
      if (animating) {
        return false;
      }

      swiper.loopFix(); // eslint-disable-next-line

      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
    }

    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
  }
  /* eslint no-unused-vars: "off" */


  function slidePrev(speed, runCallbacks, internal) {
    if (speed === void 0) speed = this.params.speed;
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    var params = swiper.params;
    var animating = swiper.animating;
    var snapGrid = swiper.snapGrid;
    var slidesGrid = swiper.slidesGrid;
    var rtlTranslate = swiper.rtlTranslate;

    if (params.loop) {
      if (animating) {
        return false;
      }

      swiper.loopFix(); // eslint-disable-next-line

      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
    }

    var translate = rtlTranslate ? swiper.translate : -swiper.translate;

    function normalize(val) {
      if (val < 0) {
        return -Math.floor(Math.abs(val));
      }

      return Math.floor(val);
    }

    var normalizedTranslate = normalize(translate);
    var normalizedSnapGrid = snapGrid.map(function (val) {
      return normalize(val);
    });
    var normalizedSlidesGrid = slidesGrid.map(function (val) {
      return normalize(val);
    });
    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];
    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];
    var prevIndex;

    if (typeof prevSnap !== 'undefined') {
      prevIndex = slidesGrid.indexOf(prevSnap);

      if (prevIndex < 0) {
        prevIndex = swiper.activeIndex - 1;
      }
    }

    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
  }
  /* eslint no-unused-vars: "off" */


  function slideReset(speed, runCallbacks, internal) {
    if (speed === void 0) speed = this.params.speed;
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
  }
  /* eslint no-unused-vars: "off" */


  function slideToClosest(speed, runCallbacks, internal) {
    if (speed === void 0) speed = this.params.speed;
    if (runCallbacks === void 0) runCallbacks = true;
    var swiper = this;
    var index = swiper.activeIndex;
    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);

    if (snapIndex < swiper.snapGrid.length - 1) {
      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
      var currentSnap = swiper.snapGrid[snapIndex];
      var nextSnap = swiper.snapGrid[snapIndex + 1];

      if (translate - currentSnap > (nextSnap - currentSnap) / 2) {
        index = swiper.params.slidesPerGroup;
      }
    }

    return swiper.slideTo(index, speed, runCallbacks, internal);
  }

  function slideToClickedSlide() {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;
    var slideToIndex = swiper.clickedIndex;
    var realIndex;

    if (params.loop) {
      if (swiper.animating) {
        return;
      }

      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);

      if (params.centeredSlides) {
        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
          swiper.loopFix();
          slideToIndex = $wrapperEl.children("." + params.slideClass + "[data-swiper-slide-index=\"" + realIndex + "\"]:not(." + params.slideDuplicateClass + ")").eq(0).index();
          Utils.nextTick(function () {
            swiper.slideTo(slideToIndex);
          });
        } else {
          swiper.slideTo(slideToIndex);
        }
      } else if (slideToIndex > swiper.slides.length - slidesPerView) {
        swiper.loopFix();
        slideToIndex = $wrapperEl.children("." + params.slideClass + "[data-swiper-slide-index=\"" + realIndex + "\"]:not(." + params.slideDuplicateClass + ")").eq(0).index();
        Utils.nextTick(function () {
          swiper.slideTo(slideToIndex);
        });
      } else {
        swiper.slideTo(slideToIndex);
      }
    } else {
      swiper.slideTo(slideToIndex);
    }
  }

  var slide = {
    slideTo: slideTo,
    slideToLoop: slideToLoop,
    slideNext: slideNext,
    slidePrev: slidePrev,
    slideReset: slideReset,
    slideToClosest: slideToClosest,
    slideToClickedSlide: slideToClickedSlide
  };

  function loopCreate() {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides

    $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass).remove();
    var slides = $wrapperEl.children("." + params.slideClass);

    if (params.loopFillGroupWithBlank) {
      var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;

      if (blankSlidesNum !== params.slidesPerGroup) {
        for (var i = 0; i < blankSlidesNum; i += 1) {
          var blankNode = $(doc.createElement('div')).addClass(params.slideClass + " " + params.slideBlankClass);
          $wrapperEl.append(blankNode);
        }

        slides = $wrapperEl.children("." + params.slideClass);
      }
    }

    if (params.slidesPerView === 'auto' && !params.loopedSlides) {
      params.loopedSlides = slides.length;
    }

    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);
    swiper.loopedSlides += params.loopAdditionalSlides;

    if (swiper.loopedSlides > slides.length) {
      swiper.loopedSlides = slides.length;
    }

    var prependSlides = [];
    var appendSlides = [];
    slides.each(function (index, el) {
      var slide = $(el);

      if (index < swiper.loopedSlides) {
        appendSlides.push(el);
      }

      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {
        prependSlides.push(el);
      }

      slide.attr('data-swiper-slide-index', index);
    });

    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {
      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));
    }

    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {
      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));
    }
  }

  function loopFix() {
    var swiper = this;
    var params = swiper.params;
    var activeIndex = swiper.activeIndex;
    var slides = swiper.slides;
    var loopedSlides = swiper.loopedSlides;
    var allowSlidePrev = swiper.allowSlidePrev;
    var allowSlideNext = swiper.allowSlideNext;
    var snapGrid = swiper.snapGrid;
    var rtl = swiper.rtlTranslate;
    var newIndex;
    swiper.allowSlidePrev = true;
    swiper.allowSlideNext = true;
    var snapTranslate = -snapGrid[activeIndex];
    var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding

    if (activeIndex < loopedSlides) {
      newIndex = slides.length - loopedSlides * 3 + activeIndex;
      newIndex += loopedSlides;
      var slideChanged = swiper.slideTo(newIndex, 0, false, true);

      if (slideChanged && diff !== 0) {
        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
      }
    } else if (params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2 || activeIndex >= slides.length - loopedSlides) {
      // Fix For Positive Oversliding
      newIndex = -slides.length + activeIndex + loopedSlides;
      newIndex += loopedSlides;
      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);

      if (slideChanged$1 && diff !== 0) {
        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
      }
    }

    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
  }

  function loopDestroy() {
    var swiper = this;
    var $wrapperEl = swiper.$wrapperEl;
    var params = swiper.params;
    var slides = swiper.slides;
    $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass).remove();
    slides.removeAttr('data-swiper-slide-index');
  }

  var loop = {
    loopCreate: loopCreate,
    loopFix: loopFix,
    loopDestroy: loopDestroy
  };

  function setGrabCursor(moving) {
    var swiper = this;

    if (Support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked) {
      return;
    }

    var el = swiper.el;
    el.style.cursor = 'move';
    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';
    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';
    el.style.cursor = moving ? 'grabbing' : 'grab';
  }

  function unsetGrabCursor() {
    var swiper = this;

    if (Support.touch || swiper.params.watchOverflow && swiper.isLocked) {
      return;
    }

    swiper.el.style.cursor = '';
  }

  var grabCursor = {
    setGrabCursor: setGrabCursor,
    unsetGrabCursor: unsetGrabCursor
  };

  function appendSlide(slides) {
    var swiper = this;
    var $wrapperEl = swiper.$wrapperEl;
    var params = swiper.params;

    if (params.loop) {
      swiper.loopDestroy();
    }

    if (_typeof(slides) === 'object' && 'length' in slides) {
      for (var i = 0; i < slides.length; i += 1) {
        if (slides[i]) {
          $wrapperEl.append(slides[i]);
        }
      }
    } else {
      $wrapperEl.append(slides);
    }

    if (params.loop) {
      swiper.loopCreate();
    }

    if (!(params.observer && Support.observer)) {
      swiper.update();
    }
  }

  function prependSlide(slides) {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var activeIndex = swiper.activeIndex;

    if (params.loop) {
      swiper.loopDestroy();
    }

    var newActiveIndex = activeIndex + 1;

    if (_typeof(slides) === 'object' && 'length' in slides) {
      for (var i = 0; i < slides.length; i += 1) {
        if (slides[i]) {
          $wrapperEl.prepend(slides[i]);
        }
      }

      newActiveIndex = activeIndex + slides.length;
    } else {
      $wrapperEl.prepend(slides);
    }

    if (params.loop) {
      swiper.loopCreate();
    }

    if (!(params.observer && Support.observer)) {
      swiper.update();
    }

    swiper.slideTo(newActiveIndex, 0, false);
  }

  function addSlide(index, slides) {
    var swiper = this;
    var $wrapperEl = swiper.$wrapperEl;
    var params = swiper.params;
    var activeIndex = swiper.activeIndex;
    var activeIndexBuffer = activeIndex;

    if (params.loop) {
      activeIndexBuffer -= swiper.loopedSlides;
      swiper.loopDestroy();
      swiper.slides = $wrapperEl.children("." + params.slideClass);
    }

    var baseLength = swiper.slides.length;

    if (index <= 0) {
      swiper.prependSlide(slides);
      return;
    }

    if (index >= baseLength) {
      swiper.appendSlide(slides);
      return;
    }

    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;
    var slidesBuffer = [];

    for (var i = baseLength - 1; i >= index; i -= 1) {
      var currentSlide = swiper.slides.eq(i);
      currentSlide.remove();
      slidesBuffer.unshift(currentSlide);
    }

    if (_typeof(slides) === 'object' && 'length' in slides) {
      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {
        if (slides[i$1]) {
          $wrapperEl.append(slides[i$1]);
        }
      }

      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;
    } else {
      $wrapperEl.append(slides);
    }

    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {
      $wrapperEl.append(slidesBuffer[i$2]);
    }

    if (params.loop) {
      swiper.loopCreate();
    }

    if (!(params.observer && Support.observer)) {
      swiper.update();
    }

    if (params.loop) {
      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
    } else {
      swiper.slideTo(newActiveIndex, 0, false);
    }
  }

  function removeSlide(slidesIndexes) {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var activeIndex = swiper.activeIndex;
    var activeIndexBuffer = activeIndex;

    if (params.loop) {
      activeIndexBuffer -= swiper.loopedSlides;
      swiper.loopDestroy();
      swiper.slides = $wrapperEl.children("." + params.slideClass);
    }

    var newActiveIndex = activeIndexBuffer;
    var indexToRemove;

    if (_typeof(slidesIndexes) === 'object' && 'length' in slidesIndexes) {
      for (var i = 0; i < slidesIndexes.length; i += 1) {
        indexToRemove = slidesIndexes[i];

        if (swiper.slides[indexToRemove]) {
          swiper.slides.eq(indexToRemove).remove();
        }

        if (indexToRemove < newActiveIndex) {
          newActiveIndex -= 1;
        }
      }

      newActiveIndex = Math.max(newActiveIndex, 0);
    } else {
      indexToRemove = slidesIndexes;

      if (swiper.slides[indexToRemove]) {
        swiper.slides.eq(indexToRemove).remove();
      }

      if (indexToRemove < newActiveIndex) {
        newActiveIndex -= 1;
      }

      newActiveIndex = Math.max(newActiveIndex, 0);
    }

    if (params.loop) {
      swiper.loopCreate();
    }

    if (!(params.observer && Support.observer)) {
      swiper.update();
    }

    if (params.loop) {
      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
    } else {
      swiper.slideTo(newActiveIndex, 0, false);
    }
  }

  function removeAllSlides() {
    var swiper = this;
    var slidesIndexes = [];

    for (var i = 0; i < swiper.slides.length; i += 1) {
      slidesIndexes.push(i);
    }

    swiper.removeSlide(slidesIndexes);
  }

  var manipulation = {
    appendSlide: appendSlide,
    prependSlide: prependSlide,
    addSlide: addSlide,
    removeSlide: removeSlide,
    removeAllSlides: removeAllSlides
  };

  var Device = function Device() {
    var ua = win.navigator.userAgent;
    var device = {
      ios: false,
      android: false,
      androidChrome: false,
      desktop: false,
      windows: false,
      iphone: false,
      ipod: false,
      ipad: false,
      cordova: win.cordova || win.phonegap,
      phonegap: win.cordova || win.phonegap
    };
    var windows = ua.match(/(Windows Phone);?[\s\/]+([\d.]+)?/); // eslint-disable-line

    var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/); // eslint-disable-line

    var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
    var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
    var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/); // Windows

    if (windows) {
      device.os = 'windows';
      device.osVersion = windows[2];
      device.windows = true;
    } // Android


    if (android && !windows) {
      device.os = 'android';
      device.osVersion = android[2];
      device.android = true;
      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;
    }

    if (ipad || iphone || ipod) {
      device.os = 'ios';
      device.ios = true;
    } // iOS


    if (iphone && !ipod) {
      device.osVersion = iphone[2].replace(/_/g, '.');
      device.iphone = true;
    }

    if (ipad) {
      device.osVersion = ipad[2].replace(/_/g, '.');
      device.ipad = true;
    }

    if (ipod) {
      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
      device.iphone = true;
    } // iOS 8+ changed UA


    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {
      if (device.osVersion.split('.')[0] === '10') {
        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];
      }
    } // Desktop


    device.desktop = !(device.os || device.android || device.webView); // Webview

    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i); // Minimal UI

    if (device.os && device.os === 'ios') {
      var osVersionArr = device.osVersion.split('.');
      var metaViewport = doc.querySelector('meta[name="viewport"]');
      device.minimalUi = !device.webView && (ipod || iphone) && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;
    } // Pixel Ratio


    device.pixelRatio = win.devicePixelRatio || 1; // Export object

    return device;
  }();

  function onTouchStart(event) {
    var swiper = this;
    var data = swiper.touchEventsData;
    var params = swiper.params;
    var touches = swiper.touches;

    if (swiper.animating && params.preventInteractionOnTransition) {
      return;
    }

    var e = event;

    if (e.originalEvent) {
      e = e.originalEvent;
    }

    data.isTouchEvent = e.type === 'touchstart';

    if (!data.isTouchEvent && 'which' in e && e.which === 3) {
      return;
    }

    if (!data.isTouchEvent && 'button' in e && e.button > 0) {
      return;
    }

    if (data.isTouched && data.isMoved) {
      return;
    }

    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : "." + params.noSwipingClass)[0]) {
      swiper.allowClick = true;
      return;
    }

    if (params.swipeHandler) {
      if (!$(e).closest(params.swipeHandler)[0]) {
        return;
      }
    }

    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
    var startX = touches.currentX;
    var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore

    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;
    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;

    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= win.screen.width - edgeSwipeThreshold)) {
      return;
    }

    Utils.extend(data, {
      isTouched: true,
      isMoved: false,
      allowTouchCallbacks: true,
      isScrolling: undefined,
      startMoving: undefined
    });
    touches.startX = startX;
    touches.startY = startY;
    data.touchStartTime = Utils.now();
    swiper.allowClick = true;
    swiper.updateSize();
    swiper.swipeDirection = undefined;

    if (params.threshold > 0) {
      data.allowThresholdMove = false;
    }

    if (e.type !== 'touchstart') {
      var preventDefault = true;

      if ($(e.target).is(data.formElements)) {
        preventDefault = false;
      }

      if (doc.activeElement && $(doc.activeElement).is(data.formElements) && doc.activeElement !== e.target) {
        doc.activeElement.blur();
      }

      if (preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault) {
        e.preventDefault();
      }
    }

    swiper.emit('touchStart', e);
  }

  function onTouchMove(event) {
    var swiper = this;
    var data = swiper.touchEventsData;
    var params = swiper.params;
    var touches = swiper.touches;
    var rtl = swiper.rtlTranslate;
    var e = event;

    if (e.originalEvent) {
      e = e.originalEvent;
    }

    if (!data.isTouched) {
      if (data.startMoving && data.isScrolling) {
        swiper.emit('touchMoveOpposite', e);
      }

      return;
    }

    if (data.isTouchEvent && e.type === 'mousemove') {
      return;
    }

    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

    if (e.preventedByNestedSwiper) {
      touches.startX = pageX;
      touches.startY = pageY;
      return;
    }

    if (!swiper.allowTouchMove) {
      // isMoved = true;
      swiper.allowClick = false;

      if (data.isTouched) {
        Utils.extend(touches, {
          startX: pageX,
          startY: pageY,
          currentX: pageX,
          currentY: pageY
        });
        data.touchStartTime = Utils.now();
      }

      return;
    }

    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
      if (swiper.isVertical()) {
        // Vertical
        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {
          data.isTouched = false;
          data.isMoved = false;
          return;
        }
      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {
        return;
      }
    }

    if (data.isTouchEvent && doc.activeElement) {
      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {
        data.isMoved = true;
        swiper.allowClick = false;
        return;
      }
    }

    if (data.allowTouchCallbacks) {
      swiper.emit('touchMove', e);
    }

    if (e.targetTouches && e.targetTouches.length > 1) {
      return;
    }

    touches.currentX = pageX;
    touches.currentY = pageY;
    var diffX = touches.currentX - touches.startX;
    var diffY = touches.currentY - touches.startY;

    if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) {
      return;
    }

    if (typeof data.isScrolling === 'undefined') {
      var touchAngle;

      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {
        data.isScrolling = false;
      } else {
        // eslint-disable-next-line
        if (diffX * diffX + diffY * diffY >= 25) {
          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;
          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
        }
      }
    }

    if (data.isScrolling) {
      swiper.emit('touchMoveOpposite', e);
    }

    if (typeof data.startMoving === 'undefined') {
      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {
        data.startMoving = true;
      }
    }

    if (data.isScrolling) {
      data.isTouched = false;
      return;
    }

    if (!data.startMoving) {
      return;
    }

    swiper.allowClick = false;
    e.preventDefault();

    if (params.touchMoveStopPropagation && !params.nested) {
      e.stopPropagation();
    }

    if (!data.isMoved) {
      if (params.loop) {
        swiper.loopFix();
      }

      data.startTranslate = swiper.getTranslate();
      swiper.setTransition(0);

      if (swiper.animating) {
        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');
      }

      data.allowMomentumBounce = false; // Grab Cursor

      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
        swiper.setGrabCursor(true);
      }

      swiper.emit('sliderFirstMove', e);
    }

    swiper.emit('sliderMove', e);
    data.isMoved = true;
    var diff = swiper.isHorizontal() ? diffX : diffY;
    touches.diff = diff;
    diff *= params.touchRatio;

    if (rtl) {
      diff = -diff;
    }

    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';
    data.currentTranslate = diff + data.startTranslate;
    var disableParentSwiper = true;
    var resistanceRatio = params.resistanceRatio;

    if (params.touchReleaseOnEdges) {
      resistanceRatio = 0;
    }

    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {
      disableParentSwiper = false;

      if (params.resistance) {
        data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);
      }
    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {
      disableParentSwiper = false;

      if (params.resistance) {
        data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);
      }
    }

    if (disableParentSwiper) {
      e.preventedByNestedSwiper = true;
    } // Directions locks


    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {
      data.currentTranslate = data.startTranslate;
    }

    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {
      data.currentTranslate = data.startTranslate;
    } // Threshold


    if (params.threshold > 0) {
      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
        if (!data.allowThresholdMove) {
          data.allowThresholdMove = true;
          touches.startX = touches.currentX;
          touches.startY = touches.currentY;
          data.currentTranslate = data.startTranslate;
          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
          return;
        }
      } else {
        data.currentTranslate = data.startTranslate;
        return;
      }
    }

    if (!params.followFinger) {
      return;
    } // Update active index in free mode


    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }

    if (params.freeMode) {
      // Velocity
      if (data.velocities.length === 0) {
        data.velocities.push({
          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],
          time: data.touchStartTime
        });
      }

      data.velocities.push({
        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],
        time: Utils.now()
      });
    } // Update progress


    swiper.updateProgress(data.currentTranslate); // Update translate

    swiper.setTranslate(data.currentTranslate);
  }

  function onTouchEnd(event) {
    var swiper = this;
    var data = swiper.touchEventsData;
    var params = swiper.params;
    var touches = swiper.touches;
    var rtl = swiper.rtlTranslate;
    var $wrapperEl = swiper.$wrapperEl;
    var slidesGrid = swiper.slidesGrid;
    var snapGrid = swiper.snapGrid;
    var e = event;

    if (e.originalEvent) {
      e = e.originalEvent;
    }

    if (data.allowTouchCallbacks) {
      swiper.emit('touchEnd', e);
    }

    data.allowTouchCallbacks = false;

    if (!data.isTouched) {
      if (data.isMoved && params.grabCursor) {
        swiper.setGrabCursor(false);
      }

      data.isMoved = false;
      data.startMoving = false;
      return;
    } // Return Grab Cursor


    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
      swiper.setGrabCursor(false);
    } // Time diff


    var touchEndTime = Utils.now();
    var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click

    if (swiper.allowClick) {
      swiper.updateClickedSlide(e);
      swiper.emit('tap', e);

      if (timeDiff < 300 && touchEndTime - data.lastClickTime > 300) {
        if (data.clickTimeout) {
          clearTimeout(data.clickTimeout);
        }

        data.clickTimeout = Utils.nextTick(function () {
          if (!swiper || swiper.destroyed) {
            return;
          }

          swiper.emit('click', e);
        }, 300);
      }

      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {
        if (data.clickTimeout) {
          clearTimeout(data.clickTimeout);
        }

        swiper.emit('doubleTap', e);
      }
    }

    data.lastClickTime = Utils.now();
    Utils.nextTick(function () {
      if (!swiper.destroyed) {
        swiper.allowClick = true;
      }
    });

    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {
      data.isTouched = false;
      data.isMoved = false;
      data.startMoving = false;
      return;
    }

    data.isTouched = false;
    data.isMoved = false;
    data.startMoving = false;
    var currentPos;

    if (params.followFinger) {
      currentPos = rtl ? swiper.translate : -swiper.translate;
    } else {
      currentPos = -data.currentTranslate;
    }

    if (params.freeMode) {
      if (currentPos < -swiper.minTranslate()) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }

      if (currentPos > -swiper.maxTranslate()) {
        if (swiper.slides.length < snapGrid.length) {
          swiper.slideTo(snapGrid.length - 1);
        } else {
          swiper.slideTo(swiper.slides.length - 1);
        }

        return;
      }

      if (params.freeModeMomentum) {
        if (data.velocities.length > 1) {
          var lastMoveEvent = data.velocities.pop();
          var velocityEvent = data.velocities.pop();
          var distance = lastMoveEvent.position - velocityEvent.position;
          var time = lastMoveEvent.time - velocityEvent.time;
          swiper.velocity = distance / time;
          swiper.velocity /= 2;

          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {
            swiper.velocity = 0;
          } // this implies that the user stopped moving a finger then released.
          // There would be no events with distance zero, so the last event is stale.


          if (time > 150 || Utils.now() - lastMoveEvent.time > 300) {
            swiper.velocity = 0;
          }
        } else {
          swiper.velocity = 0;
        }

        swiper.velocity *= params.freeModeMomentumVelocityRatio;
        data.velocities.length = 0;
        var momentumDuration = 1000 * params.freeModeMomentumRatio;
        var momentumDistance = swiper.velocity * momentumDuration;
        var newPosition = swiper.translate + momentumDistance;

        if (rtl) {
          newPosition = -newPosition;
        }

        var doBounce = false;
        var afterBouncePosition;
        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;
        var needsLoopFix;

        if (newPosition < swiper.maxTranslate()) {
          if (params.freeModeMomentumBounce) {
            if (newPosition + swiper.maxTranslate() < -bounceAmount) {
              newPosition = swiper.maxTranslate() - bounceAmount;
            }

            afterBouncePosition = swiper.maxTranslate();
            doBounce = true;
            data.allowMomentumBounce = true;
          } else {
            newPosition = swiper.maxTranslate();
          }

          if (params.loop && params.centeredSlides) {
            needsLoopFix = true;
          }
        } else if (newPosition > swiper.minTranslate()) {
          if (params.freeModeMomentumBounce) {
            if (newPosition - swiper.minTranslate() > bounceAmount) {
              newPosition = swiper.minTranslate() + bounceAmount;
            }

            afterBouncePosition = swiper.minTranslate();
            doBounce = true;
            data.allowMomentumBounce = true;
          } else {
            newPosition = swiper.minTranslate();
          }

          if (params.loop && params.centeredSlides) {
            needsLoopFix = true;
          }
        } else if (params.freeModeSticky) {
          var nextSlide;

          for (var j = 0; j < snapGrid.length; j += 1) {
            if (snapGrid[j] > -newPosition) {
              nextSlide = j;
              break;
            }
          }

          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {
            newPosition = snapGrid[nextSlide];
          } else {
            newPosition = snapGrid[nextSlide - 1];
          }

          newPosition = -newPosition;
        }

        if (needsLoopFix) {
          swiper.once('transitionEnd', function () {
            swiper.loopFix();
          });
        } // Fix duration


        if (swiper.velocity !== 0) {
          if (rtl) {
            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);
          } else {
            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
          }
        } else if (params.freeModeSticky) {
          swiper.slideToClosest();
          return;
        }

        if (params.freeModeMomentumBounce && doBounce) {
          swiper.updateProgress(afterBouncePosition);
          swiper.setTransition(momentumDuration);
          swiper.setTranslate(newPosition);
          swiper.transitionStart(true, swiper.swipeDirection);
          swiper.animating = true;
          $wrapperEl.transitionEnd(function () {
            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) {
              return;
            }

            swiper.emit('momentumBounce');
            swiper.setTransition(params.speed);
            swiper.setTranslate(afterBouncePosition);
            $wrapperEl.transitionEnd(function () {
              if (!swiper || swiper.destroyed) {
                return;
              }

              swiper.transitionEnd();
            });
          });
        } else if (swiper.velocity) {
          swiper.updateProgress(newPosition);
          swiper.setTransition(momentumDuration);
          swiper.setTranslate(newPosition);
          swiper.transitionStart(true, swiper.swipeDirection);

          if (!swiper.animating) {
            swiper.animating = true;
            $wrapperEl.transitionEnd(function () {
              if (!swiper || swiper.destroyed) {
                return;
              }

              swiper.transitionEnd();
            });
          }
        } else {
          swiper.updateProgress(newPosition);
        }

        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      } else if (params.freeModeSticky) {
        swiper.slideToClosest();
        return;
      }

      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {
        swiper.updateProgress();
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }

      return;
    } // Find current slide


    var stopIndex = 0;
    var groupSize = swiper.slidesSizesGrid[0];

    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {
      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {
        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {
          stopIndex = i;
          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];
        }
      } else if (currentPos >= slidesGrid[i]) {
        stopIndex = i;
        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
      }
    } // Find current slide size


    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;

    if (timeDiff > params.longSwipesMs) {
      // Long touches
      if (!params.longSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }

      if (swiper.swipeDirection === 'next') {
        if (ratio >= params.longSwipesRatio) {
          swiper.slideTo(stopIndex + params.slidesPerGroup);
        } else {
          swiper.slideTo(stopIndex);
        }
      }

      if (swiper.swipeDirection === 'prev') {
        if (ratio > 1 - params.longSwipesRatio) {
          swiper.slideTo(stopIndex + params.slidesPerGroup);
        } else {
          swiper.slideTo(stopIndex);
        }
      }
    } else {
      // Short swipes
      if (!params.shortSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }

      if (swiper.swipeDirection === 'next') {
        swiper.slideTo(stopIndex + params.slidesPerGroup);
      }

      if (swiper.swipeDirection === 'prev') {
        swiper.slideTo(stopIndex);
      }
    }
  }

  function onResize() {
    var swiper = this;
    var params = swiper.params;
    var el = swiper.el;

    if (el && el.offsetWidth === 0) {
      return;
    } // Breakpoints


    if (params.breakpoints) {
      swiper.setBreakpoint();
    } // Save locks


    var allowSlideNext = swiper.allowSlideNext;
    var allowSlidePrev = swiper.allowSlidePrev;
    var snapGrid = swiper.snapGrid; // Disable locks on resize

    swiper.allowSlideNext = true;
    swiper.allowSlidePrev = true;
    swiper.updateSize();
    swiper.updateSlides();

    if (params.freeMode) {
      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());
      swiper.setTranslate(newTranslate);
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();

      if (params.autoHeight) {
        swiper.updateAutoHeight();
      }
    } else {
      swiper.updateSlidesClasses();

      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
        swiper.slideTo(swiper.slides.length - 1, 0, false, true);
      } else {
        swiper.slideTo(swiper.activeIndex, 0, false, true);
      }
    } // Return locks after resize


    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;

    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
      swiper.checkOverflow();
    }
  }

  function onClick(e) {
    var swiper = this;

    if (!swiper.allowClick) {
      if (swiper.params.preventClicks) {
        e.preventDefault();
      }

      if (swiper.params.preventClicksPropagation && swiper.animating) {
        e.stopPropagation();
        e.stopImmediatePropagation();
      }
    }
  }

  function attachEvents() {
    var swiper = this;
    var params = swiper.params;
    var touchEvents = swiper.touchEvents;
    var el = swiper.el;
    var wrapperEl = swiper.wrapperEl;
    {
      swiper.onTouchStart = onTouchStart.bind(swiper);
      swiper.onTouchMove = onTouchMove.bind(swiper);
      swiper.onTouchEnd = onTouchEnd.bind(swiper);
    }
    swiper.onClick = onClick.bind(swiper);
    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;
    var capture = !!params.nested; // Touch Events

    {
      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);
        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);
        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);
      } else {
        if (Support.touch) {
          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? {
            passive: true,
            capture: false
          } : false;
          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? {
            passive: false,
            capture: capture
          } : capture);
          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
        }

        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
          target.addEventListener('mousedown', swiper.onTouchStart, false);
          doc.addEventListener('mousemove', swiper.onTouchMove, capture);
          doc.addEventListener('mouseup', swiper.onTouchEnd, false);
        }
      } // Prevent Links Clicks


      if (params.preventClicks || params.preventClicksPropagation) {
        target.addEventListener('click', swiper.onClick, true);
      }
    } // Resize handler

    swiper.on(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);
  }

  function detachEvents() {
    var swiper = this;
    var params = swiper.params;
    var touchEvents = swiper.touchEvents;
    var el = swiper.el;
    var wrapperEl = swiper.wrapperEl;
    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;
    var capture = !!params.nested; // Touch Events

    {
      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);
        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);
      } else {
        if (Support.touch) {
          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? {
            passive: true,
            capture: false
          } : false;
          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
        }

        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
          target.removeEventListener('mousedown', swiper.onTouchStart, false);
          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);
          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);
        }
      } // Prevent Links Clicks


      if (params.preventClicks || params.preventClicksPropagation) {
        target.removeEventListener('click', swiper.onClick, true);
      }
    } // Resize handler

    swiper.off(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);
  }

  var events = {
    attachEvents: attachEvents,
    detachEvents: detachEvents
  };

  function setBreakpoint() {
    var swiper = this;
    var activeIndex = swiper.activeIndex;
    var initialized = swiper.initialized;
    var loopedSlides = swiper.loopedSlides;
    if (loopedSlides === void 0) loopedSlides = 0;
    var params = swiper.params;
    var breakpoints = params.breakpoints;

    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) {
      return;
    } // Set breakpoint for window width and update parameters


    var breakpoint = swiper.getBreakpoint(breakpoints);

    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {
      var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;
      var needsReLoop = params.loop && breakPointsParams.slidesPerView !== params.slidesPerView;
      Utils.extend(swiper.params, breakPointsParams);
      Utils.extend(swiper, {
        allowTouchMove: swiper.params.allowTouchMove,
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev
      });
      swiper.currentBreakpoint = breakpoint;

      if (needsReLoop && initialized) {
        swiper.loopDestroy();
        swiper.loopCreate();
        swiper.updateSlides();
        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);
      }

      swiper.emit('breakpoint', breakPointsParams);
    }
  }

  function getBreakpoint(breakpoints) {
    var swiper = this; // Get breakpoint for window width

    if (!breakpoints) {
      return undefined;
    }

    var breakpoint = false;
    var points = [];
    Object.keys(breakpoints).forEach(function (point) {
      points.push(point);
    });
    points.sort(function (a, b) {
      return parseInt(a, 10) - parseInt(b, 10);
    });

    for (var i = 0; i < points.length; i += 1) {
      var point = points[i];

      if (swiper.params.breakpointsInverse) {
        if (point <= win.innerWidth) {
          breakpoint = point;
        }
      } else if (point >= win.innerWidth && !breakpoint) {
        breakpoint = point;
      }
    }

    return breakpoint || 'max';
  }

  var breakpoints = {
    setBreakpoint: setBreakpoint,
    getBreakpoint: getBreakpoint
  };

  var Browser = function Browser() {
    function isSafari() {
      var ua = win.navigator.userAgent.toLowerCase();
      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;
    }

    return {
      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),
      isEdge: !!win.navigator.userAgent.match(/Edge/g),
      isSafari: isSafari(),
      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent)
    };
  }();

  function addClasses() {
    var swiper = this;
    var classNames = swiper.classNames;
    var params = swiper.params;
    var rtl = swiper.rtl;
    var $el = swiper.$el;
    var suffixes = [];
    suffixes.push(params.direction);

    if (params.freeMode) {
      suffixes.push('free-mode');
    }

    if (!Support.flexbox) {
      suffixes.push('no-flexbox');
    }

    if (params.autoHeight) {
      suffixes.push('autoheight');
    }

    if (rtl) {
      suffixes.push('rtl');
    }

    if (params.slidesPerColumn > 1) {
      suffixes.push('multirow');
    }

    if (Device.android) {
      suffixes.push('android');
    }

    if (Device.ios) {
      suffixes.push('ios');
    } // WP8 Touch Events Fix


    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {
      suffixes.push("wp8-" + params.direction);
    }

    suffixes.forEach(function (suffix) {
      classNames.push(params.containerModifierClass + suffix);
    });
    $el.addClass(classNames.join(' '));
  }

  function removeClasses() {
    var swiper = this;
    var $el = swiper.$el;
    var classNames = swiper.classNames;
    $el.removeClass(classNames.join(' '));
  }

  var classes = {
    addClasses: addClasses,
    removeClasses: removeClasses
  };

  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {
    var image;

    function onReady() {
      if (callback) {
        callback();
      }
    }

    if (!imageEl.complete || !checkForComplete) {
      if (src) {
        image = new win.Image();
        image.onload = onReady;
        image.onerror = onReady;

        if (sizes) {
          image.sizes = sizes;
        }

        if (srcset) {
          image.srcset = srcset;
        }

        if (src) {
          image.src = src;
        }
      } else {
        onReady();
      }
    } else {
      // image already loaded...
      onReady();
    }
  }

  function preloadImages() {
    var swiper = this;
    swiper.imagesToLoad = swiper.$el.find('img');

    function onReady() {
      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) {
        return;
      }

      if (swiper.imagesLoaded !== undefined) {
        swiper.imagesLoaded += 1;
      }

      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
        if (swiper.params.updateOnImagesReady) {
          swiper.update();
        }

        swiper.emit('imagesReady');
      }
    }

    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {
      var imageEl = swiper.imagesToLoad[i];
      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);
    }
  }

  var images = {
    loadImage: loadImage,
    preloadImages: preloadImages
  };

  function checkOverflow() {
    var swiper = this;
    var wasLocked = swiper.isLocked;
    swiper.isLocked = swiper.snapGrid.length === 1;
    swiper.allowSlideNext = !swiper.isLocked;
    swiper.allowSlidePrev = !swiper.isLocked; // events

    if (wasLocked !== swiper.isLocked) {
      swiper.emit(swiper.isLocked ? 'lock' : 'unlock');
    }

    if (wasLocked && wasLocked !== swiper.isLocked) {
      swiper.isEnd = false;
      swiper.navigation.update();
    }
  }

  var checkOverflow$1 = {
    checkOverflow: checkOverflow
  };
  var defaults = {
    init: true,
    direction: 'horizontal',
    touchEventsTarget: 'container',
    initialSlide: 0,
    speed: 300,
    //
    preventInteractionOnTransition: false,
    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).
    edgeSwipeDetection: false,
    edgeSwipeThreshold: 20,
    // Free mode
    freeMode: false,
    freeModeMomentum: true,
    freeModeMomentumRatio: 1,
    freeModeMomentumBounce: true,
    freeModeMomentumBounceRatio: 1,
    freeModeMomentumVelocityRatio: 1,
    freeModeSticky: false,
    freeModeMinimumVelocity: 0.02,
    // Autoheight
    autoHeight: false,
    // Set wrapper width
    setWrapperSize: false,
    // Virtual Translate
    virtualTranslate: false,
    // Effects
    effect: 'slide',
    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
    // Breakpoints
    breakpoints: undefined,
    breakpointsInverse: false,
    // Slides grid
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerColumn: 1,
    slidesPerColumnFill: 'column',
    slidesPerGroup: 1,
    centeredSlides: false,
    slidesOffsetBefore: 0,
    // in px
    slidesOffsetAfter: 0,
    // in px
    normalizeSlideIndex: true,
    centerInsufficientSlides: false,
    // Disable swiper and hide navigation when container not overflow
    watchOverflow: false,
    // Round length
    roundLengths: false,
    // Touches
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: true,
    shortSwipes: true,
    longSwipes: true,
    longSwipesRatio: 0.5,
    longSwipesMs: 300,
    followFinger: true,
    allowTouchMove: true,
    threshold: 0,
    touchMoveStopPropagation: true,
    touchStartPreventDefault: true,
    touchReleaseOnEdges: false,
    // Unique Navigation Elements
    uniqueNavElements: true,
    // Resistance
    resistance: true,
    resistanceRatio: 0.85,
    // Progress
    watchSlidesProgress: false,
    watchSlidesVisibility: false,
    // Cursor
    grabCursor: false,
    // Clicks
    preventClicks: true,
    preventClicksPropagation: true,
    slideToClickedSlide: false,
    // Images
    preloadImages: true,
    updateOnImagesReady: true,
    // loop
    loop: false,
    loopAdditionalSlides: 0,
    loopedSlides: null,
    loopFillGroupWithBlank: false,
    // Swiping/no swiping
    allowSlidePrev: true,
    allowSlideNext: true,
    swipeHandler: null,
    // '.swipe-handler',
    noSwiping: true,
    noSwipingClass: 'swiper-no-swiping',
    noSwipingSelector: null,
    // Passive Listeners
    passiveListeners: true,
    // NS
    containerModifierClass: 'swiper-container-',
    // NEW
    slideClass: 'swiper-slide',
    slideBlankClass: 'swiper-slide-invisible-blank',
    slideActiveClass: 'swiper-slide-active',
    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
    slideVisibleClass: 'swiper-slide-visible',
    slideDuplicateClass: 'swiper-slide-duplicate',
    slideNextClass: 'swiper-slide-next',
    slideDuplicateNextClass: 'swiper-slide-duplicate-next',
    slidePrevClass: 'swiper-slide-prev',
    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
    wrapperClass: 'swiper-wrapper',
    // Callbacks
    runCallbacksOnInit: true
  };
  var prototypes = {
    update: update,
    translate: translate,
    transition: transition$1,
    slide: slide,
    loop: loop,
    grabCursor: grabCursor,
    manipulation: manipulation,
    events: events,
    breakpoints: breakpoints,
    checkOverflow: checkOverflow$1,
    classes: classes,
    images: images
  };
  var extendedDefaults = {};

  var Swiper = function (SwiperClass$$1) {
    function Swiper() {
      var assign;
      var args = [],
          len = arguments.length;

      while (len--) {
        args[len] = arguments[len];
      }

      var el;
      var params;

      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {
        params = args[0];
      } else {
        assign = args, el = assign[0], params = assign[1];
      }

      if (!params) {
        params = {};
      }

      params = Utils.extend({}, params);

      if (el && !params.el) {
        params.el = el;
      }

      SwiperClass$$1.call(this, params);
      Object.keys(prototypes).forEach(function (prototypeGroup) {
        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {
          if (!Swiper.prototype[protoMethod]) {
            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
          }
        });
      }); // Swiper Instance

      var swiper = this;

      if (typeof swiper.modules === 'undefined') {
        swiper.modules = {};
      }

      Object.keys(swiper.modules).forEach(function (moduleName) {
        var module = swiper.modules[moduleName];

        if (module.params) {
          var moduleParamName = Object.keys(module.params)[0];
          var moduleParams = module.params[moduleParamName];

          if (_typeof(moduleParams) !== 'object' || moduleParams === null) {
            return;
          }

          if (!(moduleParamName in params && 'enabled' in moduleParams)) {
            return;
          }

          if (params[moduleParamName] === true) {
            params[moduleParamName] = {
              enabled: true
            };
          }

          if (_typeof(params[moduleParamName]) === 'object' && !('enabled' in params[moduleParamName])) {
            params[moduleParamName].enabled = true;
          }

          if (!params[moduleParamName]) {
            params[moduleParamName] = {
              enabled: false
            };
          }
        }
      }); // Extend defaults with modules params

      var swiperParams = Utils.extend({}, defaults);
      swiper.useModulesParams(swiperParams); // Extend defaults with passed params

      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);
      swiper.originalParams = Utils.extend({}, swiper.params);
      swiper.passedParams = Utils.extend({}, params); // Save Dom lib

      swiper.$ = $; // Find el

      var $el = $(swiper.params.el);
      el = $el[0];

      if (!el) {
        return undefined;
      }

      if ($el.length > 1) {
        var swipers = [];
        $el.each(function (index, containerEl) {
          var newParams = Utils.extend({}, params, {
            el: containerEl
          });
          swipers.push(new Swiper(newParams));
        });
        return swipers;
      }

      el.swiper = swiper;
      $el.data('swiper', swiper); // Find Wrapper

      var $wrapperEl = $el.children("." + swiper.params.wrapperClass); // Extend Swiper

      Utils.extend(swiper, {
        $el: $el,
        el: el,
        $wrapperEl: $wrapperEl,
        wrapperEl: $wrapperEl[0],
        // Classes
        classNames: [],
        // Slides
        slides: $(),
        slidesGrid: [],
        snapGrid: [],
        slidesSizesGrid: [],
        // isDirection
        isHorizontal: function isHorizontal() {
          return swiper.params.direction === 'horizontal';
        },
        isVertical: function isVertical() {
          return swiper.params.direction === 'vertical';
        },
        // RTL
        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',
        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),
        wrongRTL: $wrapperEl.css('display') === '-webkit-box',
        // Indexes
        activeIndex: 0,
        realIndex: 0,
        //
        isBeginning: true,
        isEnd: false,
        // Props
        translate: 0,
        previousTranslate: 0,
        progress: 0,
        velocity: 0,
        animating: false,
        // Locks
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev,
        // Touch Events
        touchEvents: function touchEvents() {
          var touch = ['touchstart', 'touchmove', 'touchend'];
          var desktop = ['mousedown', 'mousemove', 'mouseup'];

          if (Support.pointerEvents) {
            desktop = ['pointerdown', 'pointermove', 'pointerup'];
          } else if (Support.prefixedPointerEvents) {
            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];
          }

          swiper.touchEventsTouch = {
            start: touch[0],
            move: touch[1],
            end: touch[2]
          };
          swiper.touchEventsDesktop = {
            start: desktop[0],
            move: desktop[1],
            end: desktop[2]
          };
          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;
        }(),
        touchEventsData: {
          isTouched: undefined,
          isMoved: undefined,
          allowTouchCallbacks: undefined,
          touchStartTime: undefined,
          isScrolling: undefined,
          currentTranslate: undefined,
          startTranslate: undefined,
          allowThresholdMove: undefined,
          // Form elements to match
          formElements: 'input, select, option, textarea, button, video',
          // Last click time
          lastClickTime: Utils.now(),
          clickTimeout: undefined,
          // Velocities
          velocities: [],
          allowMomentumBounce: undefined,
          isTouchEvent: undefined,
          startMoving: undefined
        },
        // Clicks
        allowClick: true,
        // Touches
        allowTouchMove: swiper.params.allowTouchMove,
        touches: {
          startX: 0,
          startY: 0,
          currentX: 0,
          currentY: 0,
          diff: 0
        },
        // Images
        imagesToLoad: [],
        imagesLoaded: 0
      }); // Install Modules

      swiper.useModules(); // Init

      if (swiper.params.init) {
        swiper.init();
      } // Return app instance


      return swiper;
    }

    if (SwiperClass$$1) Swiper.__proto__ = SwiperClass$$1;
    Swiper.prototype = Object.create(SwiperClass$$1 && SwiperClass$$1.prototype);
    Swiper.prototype.constructor = Swiper;
    var staticAccessors = {
      extendedDefaults: {
        configurable: true
      },
      defaults: {
        configurable: true
      },
      Class: {
        configurable: true
      },
      $: {
        configurable: true
      }
    };

    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic() {
      var swiper = this;
      var params = swiper.params;
      var slides = swiper.slides;
      var slidesGrid = swiper.slidesGrid;
      var swiperSize = swiper.size;
      var activeIndex = swiper.activeIndex;
      var spv = 1;

      if (params.centeredSlides) {
        var slideSize = slides[activeIndex].swiperSlideSize;
        var breakLoop;

        for (var i = activeIndex + 1; i < slides.length; i += 1) {
          if (slides[i] && !breakLoop) {
            slideSize += slides[i].swiperSlideSize;
            spv += 1;

            if (slideSize > swiperSize) {
              breakLoop = true;
            }
          }
        }

        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {
          if (slides[i$1] && !breakLoop) {
            slideSize += slides[i$1].swiperSlideSize;
            spv += 1;

            if (slideSize > swiperSize) {
              breakLoop = true;
            }
          }
        }
      } else {
        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {
          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {
            spv += 1;
          }
        }
      }

      return spv;
    };

    Swiper.prototype.update = function update$$1() {
      var swiper = this;

      if (!swiper || swiper.destroyed) {
        return;
      }

      var snapGrid = swiper.snapGrid;
      var params = swiper.params; // Breakpoints

      if (params.breakpoints) {
        swiper.setBreakpoint();
      }

      swiper.updateSize();
      swiper.updateSlides();
      swiper.updateProgress();
      swiper.updateSlidesClasses();

      function setTranslate() {
        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;
        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
        swiper.setTranslate(newTranslate);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }

      var translated;

      if (swiper.params.freeMode) {
        setTranslate();

        if (swiper.params.autoHeight) {
          swiper.updateAutoHeight();
        }
      } else {
        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);
        } else {
          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
        }

        if (!translated) {
          setTranslate();
        }
      }

      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
        swiper.checkOverflow();
      }

      swiper.emit('update');
    };

    Swiper.prototype.init = function init() {
      var swiper = this;

      if (swiper.initialized) {
        return;
      }

      swiper.emit('beforeInit'); // Set breakpoint

      if (swiper.params.breakpoints) {
        swiper.setBreakpoint();
      } // Add Classes


      swiper.addClasses(); // Create loop

      if (swiper.params.loop) {
        swiper.loopCreate();
      } // Update size


      swiper.updateSize(); // Update slides

      swiper.updateSlides();

      if (swiper.params.watchOverflow) {
        swiper.checkOverflow();
      } // Set Grab Cursor


      if (swiper.params.grabCursor) {
        swiper.setGrabCursor();
      }

      if (swiper.params.preloadImages) {
        swiper.preloadImages();
      } // Slide To Initial Slide


      if (swiper.params.loop) {
        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);
      } else {
        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);
      } // Attach events


      swiper.attachEvents(); // Init Flag

      swiper.initialized = true; // Emit

      swiper.emit('init');
    };

    Swiper.prototype.destroy = function destroy(deleteInstance, cleanStyles) {
      if (deleteInstance === void 0) deleteInstance = true;
      if (cleanStyles === void 0) cleanStyles = true;
      var swiper = this;
      var params = swiper.params;
      var $el = swiper.$el;
      var $wrapperEl = swiper.$wrapperEl;
      var slides = swiper.slides;

      if (typeof swiper.params === 'undefined' || swiper.destroyed) {
        return null;
      }

      swiper.emit('beforeDestroy'); // Init Flag

      swiper.initialized = false; // Detach events

      swiper.detachEvents(); // Destroy loop

      if (params.loop) {
        swiper.loopDestroy();
      } // Cleanup styles


      if (cleanStyles) {
        swiper.removeClasses();
        $el.removeAttr('style');
        $wrapperEl.removeAttr('style');

        if (slides && slides.length) {
          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index').removeAttr('data-swiper-column').removeAttr('data-swiper-row');
        }
      }

      swiper.emit('destroy'); // Detach emitter events

      Object.keys(swiper.eventsListeners).forEach(function (eventName) {
        swiper.off(eventName);
      });

      if (deleteInstance !== false) {
        swiper.$el[0].swiper = null;
        swiper.$el.data('swiper', null);
        Utils.deleteProps(swiper);
      }

      swiper.destroyed = true;
      return null;
    };

    Swiper.extendDefaults = function extendDefaults(newDefaults) {
      Utils.extend(extendedDefaults, newDefaults);
    };

    staticAccessors.extendedDefaults.get = function () {
      return extendedDefaults;
    };

    staticAccessors.defaults.get = function () {
      return defaults;
    };

    staticAccessors.Class.get = function () {
      return SwiperClass$$1;
    };

    staticAccessors.$.get = function () {
      return $;
    };

    Object.defineProperties(Swiper, staticAccessors);
    return Swiper;
  }(SwiperClass);

  var Device$1 = {
    name: 'device',
    proto: {
      device: Device
    },
    static: {
      device: Device
    }
  };
  var Support$1 = {
    name: 'support',
    proto: {
      support: Support
    },
    static: {
      support: Support
    }
  };
  var Browser$1 = {
    name: 'browser',
    proto: {
      browser: Browser
    },
    static: {
      browser: Browser
    }
  };
  var Resize = {
    name: 'resize',
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        resize: {
          resizeHandler: function resizeHandler() {
            if (!swiper || swiper.destroyed || !swiper.initialized) {
              return;
            }

            swiper.emit('beforeResize');
            swiper.emit('resize');
          },
          orientationChangeHandler: function orientationChangeHandler() {
            if (!swiper || swiper.destroyed || !swiper.initialized) {
              return;
            }

            swiper.emit('orientationchange');
          }
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this; // Emit resize

        win.addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange

        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);
      },
      destroy: function destroy() {
        var swiper = this;
        win.removeEventListener('resize', swiper.resize.resizeHandler);
        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);
      }
    }
  };
  var Observer = {
    func: win.MutationObserver || win.WebkitMutationObserver,
    attach: function attach(target, options) {
      if (options === void 0) options = {};
      var swiper = this;
      var ObserverFunc = Observer.func;
      var observer = new ObserverFunc(function (mutations) {
        // The observerUpdate event should only be triggered
        // once despite the number of mutations.  Additional
        // triggers are redundant and are very costly
        if (mutations.length === 1) {
          swiper.emit('observerUpdate', mutations[0]);
          return;
        }

        var observerUpdate = function observerUpdate() {
          swiper.emit('observerUpdate', mutations[0]);
        };

        if (win.requestAnimationFrame) {
          win.requestAnimationFrame(observerUpdate);
        } else {
          win.setTimeout(observerUpdate, 0);
        }
      });
      observer.observe(target, {
        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
        childList: typeof options.childList === 'undefined' ? true : options.childList,
        characterData: typeof options.characterData === 'undefined' ? true : options.characterData
      });
      swiper.observer.observers.push(observer);
    },
    init: function init() {
      var swiper = this;

      if (!Support.observer || !swiper.params.observer) {
        return;
      }

      if (swiper.params.observeParents) {
        var containerParents = swiper.$el.parents();

        for (var i = 0; i < containerParents.length; i += 1) {
          swiper.observer.attach(containerParents[i]);
        }
      } // Observe container


      swiper.observer.attach(swiper.$el[0], {
        childList: false
      }); // Observe wrapper

      swiper.observer.attach(swiper.$wrapperEl[0], {
        attributes: false
      });
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.observer.observers.forEach(function (observer) {
        observer.disconnect();
      });
      swiper.observer.observers = [];
    }
  };
  var Observer$1 = {
    name: 'observer',
    params: {
      observer: false,
      observeParents: false
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        observer: {
          init: Observer.init.bind(swiper),
          attach: Observer.attach.bind(swiper),
          destroy: Observer.destroy.bind(swiper),
          observers: []
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.observer.init();
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.observer.destroy();
      }
    }
  };
  var Virtual = {
    update: function update(force) {
      var swiper = this;
      var ref = swiper.params;
      var slidesPerView = ref.slidesPerView;
      var slidesPerGroup = ref.slidesPerGroup;
      var centeredSlides = ref.centeredSlides;
      var ref$1 = swiper.params.virtual;
      var addSlidesBefore = ref$1.addSlidesBefore;
      var addSlidesAfter = ref$1.addSlidesAfter;
      var ref$2 = swiper.virtual;
      var previousFrom = ref$2.from;
      var previousTo = ref$2.to;
      var slides = ref$2.slides;
      var previousSlidesGrid = ref$2.slidesGrid;
      var renderSlide = ref$2.renderSlide;
      var previousOffset = ref$2.offset;
      swiper.updateActiveIndex();
      var activeIndex = swiper.activeIndex || 0;
      var offsetProp;

      if (swiper.rtlTranslate) {
        offsetProp = 'right';
      } else {
        offsetProp = swiper.isHorizontal() ? 'left' : 'top';
      }

      var slidesAfter;
      var slidesBefore;

      if (centeredSlides) {
        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;
        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;
      } else {
        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;
        slidesBefore = slidesPerGroup + addSlidesAfter;
      }

      var from = Math.max((activeIndex || 0) - slidesBefore, 0);
      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);
      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);
      Utils.extend(swiper.virtual, {
        from: from,
        to: to,
        offset: offset,
        slidesGrid: swiper.slidesGrid
      });

      function onRendered() {
        swiper.updateSlides();
        swiper.updateProgress();
        swiper.updateSlidesClasses();

        if (swiper.lazy && swiper.params.lazy.enabled) {
          swiper.lazy.load();
        }
      }

      if (previousFrom === from && previousTo === to && !force) {
        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {
          swiper.slides.css(offsetProp, offset + "px");
        }

        swiper.updateProgress();
        return;
      }

      if (swiper.params.virtual.renderExternal) {
        swiper.params.virtual.renderExternal.call(swiper, {
          offset: offset,
          from: from,
          to: to,
          slides: function getSlides() {
            var slidesToRender = [];

            for (var i = from; i <= to; i += 1) {
              slidesToRender.push(slides[i]);
            }

            return slidesToRender;
          }()
        });
        onRendered();
        return;
      }

      var prependIndexes = [];
      var appendIndexes = [];

      if (force) {
        swiper.$wrapperEl.find("." + swiper.params.slideClass).remove();
      } else {
        for (var i = previousFrom; i <= previousTo; i += 1) {
          if (i < from || i > to) {
            swiper.$wrapperEl.find("." + swiper.params.slideClass + "[data-swiper-slide-index=\"" + i + "\"]").remove();
          }
        }
      }

      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {
        if (i$1 >= from && i$1 <= to) {
          if (typeof previousTo === 'undefined' || force) {
            appendIndexes.push(i$1);
          } else {
            if (i$1 > previousTo) {
              appendIndexes.push(i$1);
            }

            if (i$1 < previousFrom) {
              prependIndexes.push(i$1);
            }
          }
        }
      }

      appendIndexes.forEach(function (index) {
        swiper.$wrapperEl.append(renderSlide(slides[index], index));
      });
      prependIndexes.sort(function (a, b) {
        return a < b;
      }).forEach(function (index) {
        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));
      });
      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + "px");
      onRendered();
    },
    renderSlide: function renderSlide(slide, index) {
      var swiper = this;
      var params = swiper.params.virtual;

      if (params.cache && swiper.virtual.cache[index]) {
        return swiper.virtual.cache[index];
      }

      var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $("<div class=\"" + swiper.params.slideClass + "\" data-swiper-slide-index=\"" + index + "\">" + slide + "</div>");

      if (!$slideEl.attr('data-swiper-slide-index')) {
        $slideEl.attr('data-swiper-slide-index', index);
      }

      if (params.cache) {
        swiper.virtual.cache[index] = $slideEl;
      }

      return $slideEl;
    },
    appendSlide: function appendSlide(slide) {
      var swiper = this;
      swiper.virtual.slides.push(slide);
      swiper.virtual.update(true);
    },
    prependSlide: function prependSlide(slide) {
      var swiper = this;
      swiper.virtual.slides.unshift(slide);

      if (swiper.params.virtual.cache) {
        var cache = swiper.virtual.cache;
        var newCache = {};
        Object.keys(cache).forEach(function (cachedIndex) {
          newCache[cachedIndex + 1] = cache[cachedIndex];
        });
        swiper.virtual.cache = newCache;
      }

      swiper.virtual.update(true);
      swiper.slideNext(0);
    }
  };
  var Virtual$1 = {
    name: 'virtual',
    params: {
      virtual: {
        enabled: false,
        slides: [],
        cache: true,
        renderSlide: null,
        renderExternal: null,
        addSlidesBefore: 0,
        addSlidesAfter: 0
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        virtual: {
          update: Virtual.update.bind(swiper),
          appendSlide: Virtual.appendSlide.bind(swiper),
          prependSlide: Virtual.prependSlide.bind(swiper),
          renderSlide: Virtual.renderSlide.bind(swiper),
          slides: swiper.params.virtual.slides,
          cache: {}
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;

        if (!swiper.params.virtual.enabled) {
          return;
        }

        swiper.classNames.push(swiper.params.containerModifierClass + "virtual");
        var overwriteParams = {
          watchSlidesProgress: true
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);
        swiper.virtual.update();
      },
      setTranslate: function setTranslate() {
        var swiper = this;

        if (!swiper.params.virtual.enabled) {
          return;
        }

        swiper.virtual.update();
      }
    }
  };
  var Keyboard = {
    handle: function handle(event) {
      var swiper = this;
      var rtl = swiper.rtlTranslate;
      var e = event;

      if (e.originalEvent) {
        e = e.originalEvent;
      } // jquery fix


      var kc = e.keyCode || e.charCode; // Directions locks

      if (!swiper.allowSlideNext && (swiper.isHorizontal() && kc === 39 || swiper.isVertical() && kc === 40)) {
        return false;
      }

      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && kc === 37 || swiper.isVertical() && kc === 38)) {
        return false;
      }

      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
        return undefined;
      }

      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {
        return undefined;
      }

      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {
        var inView = false; // Check that swiper should be inside of visible area of window

        if (swiper.$el.parents("." + swiper.params.slideClass).length > 0 && swiper.$el.parents("." + swiper.params.slideActiveClass).length === 0) {
          return undefined;
        }

        var windowWidth = win.innerWidth;
        var windowHeight = win.innerHeight;
        var swiperOffset = swiper.$el.offset();

        if (rtl) {
          swiperOffset.left -= swiper.$el[0].scrollLeft;
        }

        var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];

        for (var i = 0; i < swiperCoord.length; i += 1) {
          var point = swiperCoord[i];

          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {
            inView = true;
          }
        }

        if (!inView) {
          return undefined;
        }
      }

      if (swiper.isHorizontal()) {
        if (kc === 37 || kc === 39) {
          if (e.preventDefault) {
            e.preventDefault();
          } else {
            e.returnValue = false;
          }
        }

        if (kc === 39 && !rtl || kc === 37 && rtl) {
          swiper.slideNext();
        }

        if (kc === 37 && !rtl || kc === 39 && rtl) {
          swiper.slidePrev();
        }
      } else {
        if (kc === 38 || kc === 40) {
          if (e.preventDefault) {
            e.preventDefault();
          } else {
            e.returnValue = false;
          }
        }

        if (kc === 40) {
          swiper.slideNext();
        }

        if (kc === 38) {
          swiper.slidePrev();
        }
      }

      swiper.emit('keyPress', kc);
      return undefined;
    },
    enable: function enable() {
      var swiper = this;

      if (swiper.keyboard.enabled) {
        return;
      }

      $(doc).on('keydown', swiper.keyboard.handle);
      swiper.keyboard.enabled = true;
    },
    disable: function disable() {
      var swiper = this;

      if (!swiper.keyboard.enabled) {
        return;
      }

      $(doc).off('keydown', swiper.keyboard.handle);
      swiper.keyboard.enabled = false;
    }
  };
  var Keyboard$1 = {
    name: 'keyboard',
    params: {
      keyboard: {
        enabled: false,
        onlyInViewport: true
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        keyboard: {
          enabled: false,
          enable: Keyboard.enable.bind(swiper),
          disable: Keyboard.disable.bind(swiper),
          handle: Keyboard.handle.bind(swiper)
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;

        if (swiper.params.keyboard.enabled) {
          swiper.keyboard.enable();
        }
      },
      destroy: function destroy() {
        var swiper = this;

        if (swiper.keyboard.enabled) {
          swiper.keyboard.disable();
        }
      }
    }
  };

  function isEventSupported() {
    var eventName = 'onwheel';
    var isSupported = eventName in doc;

    if (!isSupported) {
      var element = doc.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }

    if (!isSupported && doc.implementation && doc.implementation.hasFeature // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    && doc.implementation.hasFeature('', '') !== true) {
      // This is the only way to test support for the `wheel` event in IE9+.
      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');
    }

    return isSupported;
  }

  var Mousewheel = {
    lastScrollTime: Utils.now(),
    event: function getEvent() {
      if (win.navigator.userAgent.indexOf('firefox') > -1) {
        return 'DOMMouseScroll';
      }

      return isEventSupported() ? 'wheel' : 'mousewheel';
    }(),
    normalize: function normalize(e) {
      // Reasonable defaults
      var PIXEL_STEP = 10;
      var LINE_HEIGHT = 40;
      var PAGE_HEIGHT = 800;
      var sX = 0;
      var sY = 0; // spinX, spinY

      var pX = 0;
      var pY = 0; // pixelX, pixelY
      // Legacy

      if ('detail' in e) {
        sY = e.detail;
      }

      if ('wheelDelta' in e) {
        sY = -e.wheelDelta / 120;
      }

      if ('wheelDeltaY' in e) {
        sY = -e.wheelDeltaY / 120;
      }

      if ('wheelDeltaX' in e) {
        sX = -e.wheelDeltaX / 120;
      } // side scrolling on FF with DOMMouseScroll


      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {
        sX = sY;
        sY = 0;
      }

      pX = sX * PIXEL_STEP;
      pY = sY * PIXEL_STEP;

      if ('deltaY' in e) {
        pY = e.deltaY;
      }

      if ('deltaX' in e) {
        pX = e.deltaX;
      }

      if ((pX || pY) && e.deltaMode) {
        if (e.deltaMode === 1) {
          // delta in LINE units
          pX *= LINE_HEIGHT;
          pY *= LINE_HEIGHT;
        } else {
          // delta in PAGE units
          pX *= PAGE_HEIGHT;
          pY *= PAGE_HEIGHT;
        }
      } // Fall-back if spin cannot be determined


      if (pX && !sX) {
        sX = pX < 1 ? -1 : 1;
      }

      if (pY && !sY) {
        sY = pY < 1 ? -1 : 1;
      }

      return {
        spinX: sX,
        spinY: sY,
        pixelX: pX,
        pixelY: pY
      };
    },
    handleMouseEnter: function handleMouseEnter() {
      var swiper = this;
      swiper.mouseEntered = true;
    },
    handleMouseLeave: function handleMouseLeave() {
      var swiper = this;
      swiper.mouseEntered = false;
    },
    handle: function handle(event) {
      var e = event;
      var swiper = this;
      var params = swiper.params.mousewheel;

      if (!swiper.mouseEntered && !params.releaseOnEdges) {
        return true;
      }

      if (e.originalEvent) {
        e = e.originalEvent;
      } // jquery fix


      var delta = 0;
      var rtlFactor = swiper.rtlTranslate ? -1 : 1;
      var data = Mousewheel.normalize(e);

      if (params.forceToAxis) {
        if (swiper.isHorizontal()) {
          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) {
            delta = data.pixelX * rtlFactor;
          } else {
            return true;
          }
        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) {
          delta = data.pixelY;
        } else {
          return true;
        }
      } else {
        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;
      }

      if (delta === 0) {
        return true;
      }

      if (params.invert) {
        delta = -delta;
      }

      if (!swiper.params.freeMode) {
        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {
          if (delta < 0) {
            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
              swiper.slideNext();
              swiper.emit('scroll', e);
            } else if (params.releaseOnEdges) {
              return true;
            }
          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {
            swiper.slidePrev();
            swiper.emit('scroll', e);
          } else if (params.releaseOnEdges) {
            return true;
          }
        }

        swiper.mousewheel.lastScrollTime = new win.Date().getTime();
      } else {
        // Freemode or scrollContainer:
        if (swiper.params.loop) {
          swiper.loopFix();
        }

        var position = swiper.getTranslate() + delta * params.sensitivity;
        var wasBeginning = swiper.isBeginning;
        var wasEnd = swiper.isEnd;

        if (position >= swiper.minTranslate()) {
          position = swiper.minTranslate();
        }

        if (position <= swiper.maxTranslate()) {
          position = swiper.maxTranslate();
        }

        swiper.setTransition(0);
        swiper.setTranslate(position);
        swiper.updateProgress();
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();

        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {
          swiper.updateSlidesClasses();
        }

        if (swiper.params.freeModeSticky) {
          clearTimeout(swiper.mousewheel.timeout);
          swiper.mousewheel.timeout = Utils.nextTick(function () {
            swiper.slideToClosest();
          }, 300);
        } // Emit event


        swiper.emit('scroll', e); // Stop autoplay

        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) {
          swiper.autoplay.stop();
        } // Return page scroll on edge positions


        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) {
          return true;
        }
      }

      if (e.preventDefault) {
        e.preventDefault();
      } else {
        e.returnValue = false;
      }

      return false;
    },
    enable: function enable() {
      var swiper = this;

      if (!Mousewheel.event) {
        return false;
      }

      if (swiper.mousewheel.enabled) {
        return false;
      }

      var target = swiper.$el;

      if (swiper.params.mousewheel.eventsTarged !== 'container') {
        target = $(swiper.params.mousewheel.eventsTarged);
      }

      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);
      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);
      target.on(Mousewheel.event, swiper.mousewheel.handle);
      swiper.mousewheel.enabled = true;
      return true;
    },
    disable: function disable() {
      var swiper = this;

      if (!Mousewheel.event) {
        return false;
      }

      if (!swiper.mousewheel.enabled) {
        return false;
      }

      var target = swiper.$el;

      if (swiper.params.mousewheel.eventsTarged !== 'container') {
        target = $(swiper.params.mousewheel.eventsTarged);
      }

      target.off(Mousewheel.event, swiper.mousewheel.handle);
      swiper.mousewheel.enabled = false;
      return true;
    }
  };
  var Mousewheel$1 = {
    name: 'mousewheel',
    params: {
      mousewheel: {
        enabled: false,
        releaseOnEdges: false,
        invert: false,
        forceToAxis: false,
        sensitivity: 1,
        eventsTarged: 'container'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        mousewheel: {
          enabled: false,
          enable: Mousewheel.enable.bind(swiper),
          disable: Mousewheel.disable.bind(swiper),
          handle: Mousewheel.handle.bind(swiper),
          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),
          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),
          lastScrollTime: Utils.now()
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;

        if (swiper.params.mousewheel.enabled) {
          swiper.mousewheel.enable();
        }
      },
      destroy: function destroy() {
        var swiper = this;

        if (swiper.mousewheel.enabled) {
          swiper.mousewheel.disable();
        }
      }
    }
  };
  var Navigation = {
    update: function update() {
      // Update Navigation Buttons
      var swiper = this;
      var params = swiper.params.navigation;

      if (swiper.params.loop) {
        return;
      }

      var ref = swiper.navigation;
      var $nextEl = ref.$nextEl;
      var $prevEl = ref.$prevEl;

      if ($prevEl && $prevEl.length > 0) {
        if (swiper.isBeginning) {
          $prevEl.addClass(params.disabledClass);
        } else {
          $prevEl.removeClass(params.disabledClass);
        }

        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
      }

      if ($nextEl && $nextEl.length > 0) {
        if (swiper.isEnd) {
          $nextEl.addClass(params.disabledClass);
        } else {
          $nextEl.removeClass(params.disabledClass);
        }

        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
      }
    },
    init: function init() {
      var swiper = this;
      var params = swiper.params.navigation;

      if (!(params.nextEl || params.prevEl)) {
        return;
      }

      var $nextEl;
      var $prevEl;

      if (params.nextEl) {
        $nextEl = $(params.nextEl);

        if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {
          $nextEl = swiper.$el.find(params.nextEl);
        }
      }

      if (params.prevEl) {
        $prevEl = $(params.prevEl);

        if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {
          $prevEl = swiper.$el.find(params.prevEl);
        }
      }

      if ($nextEl && $nextEl.length > 0) {
        $nextEl.on('click', function (e) {
          e.preventDefault();

          if (swiper.isEnd && !swiper.params.loop) {
            return;
          }

          swiper.slideNext();
        });
      }

      if ($prevEl && $prevEl.length > 0) {
        $prevEl.on('click', function (e) {
          e.preventDefault();

          if (swiper.isBeginning && !swiper.params.loop) {
            return;
          }

          swiper.slidePrev();
        });
      }

      Utils.extend(swiper.navigation, {
        $nextEl: $nextEl,
        nextEl: $nextEl && $nextEl[0],
        $prevEl: $prevEl,
        prevEl: $prevEl && $prevEl[0]
      });
    },
    destroy: function destroy() {
      var swiper = this;
      var ref = swiper.navigation;
      var $nextEl = ref.$nextEl;
      var $prevEl = ref.$prevEl;

      if ($nextEl && $nextEl.length) {
        $nextEl.off('click');
        $nextEl.removeClass(swiper.params.navigation.disabledClass);
      }

      if ($prevEl && $prevEl.length) {
        $prevEl.off('click');
        $prevEl.removeClass(swiper.params.navigation.disabledClass);
      }
    }
  };
  var Navigation$1 = {
    name: 'navigation',
    params: {
      navigation: {
        nextEl: null,
        prevEl: null,
        hideOnClick: false,
        disabledClass: 'swiper-button-disabled',
        hiddenClass: 'swiper-button-hidden',
        lockClass: 'swiper-button-lock'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        navigation: {
          init: Navigation.init.bind(swiper),
          update: Navigation.update.bind(swiper),
          destroy: Navigation.destroy.bind(swiper)
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.navigation.init();
        swiper.navigation.update();
      },
      toEdge: function toEdge() {
        var swiper = this;
        swiper.navigation.update();
      },
      fromEdge: function fromEdge() {
        var swiper = this;
        swiper.navigation.update();
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.navigation.destroy();
      },
      click: function click(e) {
        var swiper = this;
        var ref = swiper.navigation;
        var $nextEl = ref.$nextEl;
        var $prevEl = ref.$prevEl;

        if (swiper.params.navigation.hideOnClick && !$(e.target).is($prevEl) && !$(e.target).is($nextEl)) {
          if ($nextEl) {
            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
          }

          if ($prevEl) {
            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
          }
        }
      }
    }
  };
  var Pagination = {
    update: function update() {
      // Render || Update Pagination bullets/items
      var swiper = this;
      var rtl = swiper.rtl;
      var params = swiper.params.pagination;

      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {
        return;
      }

      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
      var $el = swiper.pagination.$el; // Current/Total

      var current;
      var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

      if (swiper.params.loop) {
        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);

        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {
          current -= slidesLength - swiper.loopedSlides * 2;
        }

        if (current > total - 1) {
          current -= total;
        }

        if (current < 0 && swiper.params.paginationType !== 'bullets') {
          current = total + current;
        }
      } else if (typeof swiper.snapIndex !== 'undefined') {
        current = swiper.snapIndex;
      } else {
        current = swiper.activeIndex || 0;
      } // Types


      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
        var bullets = swiper.pagination.bullets;
        var firstIndex;
        var lastIndex;
        var midIndex;

        if (params.dynamicBullets) {
          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);
          $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + "px");

          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {
            swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;

            if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {
              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;
            } else if (swiper.pagination.dynamicBulletIndex < 0) {
              swiper.pagination.dynamicBulletIndex = 0;
            }
          }

          firstIndex = current - swiper.pagination.dynamicBulletIndex;
          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);
          midIndex = (lastIndex + firstIndex) / 2;
        }

        bullets.removeClass(params.bulletActiveClass + " " + params.bulletActiveClass + "-next " + params.bulletActiveClass + "-next-next " + params.bulletActiveClass + "-prev " + params.bulletActiveClass + "-prev-prev " + params.bulletActiveClass + "-main");

        if ($el.length > 1) {
          bullets.each(function (index, bullet) {
            var $bullet = $(bullet);
            var bulletIndex = $bullet.index();

            if (bulletIndex === current) {
              $bullet.addClass(params.bulletActiveClass);
            }

            if (params.dynamicBullets) {
              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
                $bullet.addClass(params.bulletActiveClass + "-main");
              }

              if (bulletIndex === firstIndex) {
                $bullet.prev().addClass(params.bulletActiveClass + "-prev").prev().addClass(params.bulletActiveClass + "-prev-prev");
              }

              if (bulletIndex === lastIndex) {
                $bullet.next().addClass(params.bulletActiveClass + "-next").next().addClass(params.bulletActiveClass + "-next-next");
              }
            }
          });
        } else {
          var $bullet = bullets.eq(current);
          $bullet.addClass(params.bulletActiveClass);

          if (params.dynamicBullets) {
            var $firstDisplayedBullet = bullets.eq(firstIndex);
            var $lastDisplayedBullet = bullets.eq(lastIndex);

            for (var i = firstIndex; i <= lastIndex; i += 1) {
              bullets.eq(i).addClass(params.bulletActiveClass + "-main");
            }

            $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + "-prev").prev().addClass(params.bulletActiveClass + "-prev-prev");
            $lastDisplayedBullet.next().addClass(params.bulletActiveClass + "-next").next().addClass(params.bulletActiveClass + "-next-next");
          }
        }

        if (params.dynamicBullets) {
          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);
          var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;
          var offsetProp = rtl ? 'right' : 'left';
          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + "px");
        }
      }

      if (params.type === 'fraction') {
        $el.find("." + params.currentClass).text(params.formatFractionCurrent(current + 1));
        $el.find("." + params.totalClass).text(params.formatFractionTotal(total));
      }

      if (params.type === 'progressbar') {
        var progressbarDirection;

        if (params.progressbarOpposite) {
          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';
        } else {
          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';
        }

        var scale = (current + 1) / total;
        var scaleX = 1;
        var scaleY = 1;

        if (progressbarDirection === 'horizontal') {
          scaleX = scale;
        } else {
          scaleY = scale;
        }

        $el.find("." + params.progressbarFillClass).transform("translate3d(0,0,0) scaleX(" + scaleX + ") scaleY(" + scaleY + ")").transition(swiper.params.speed);
      }

      if (params.type === 'custom' && params.renderCustom) {
        $el.html(params.renderCustom(swiper, current + 1, total));
        swiper.emit('paginationRender', swiper, $el[0]);
      } else {
        swiper.emit('paginationUpdate', swiper, $el[0]);
      }

      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
    },
    render: function render() {
      // Render Container
      var swiper = this;
      var params = swiper.params.pagination;

      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {
        return;
      }

      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
      var $el = swiper.pagination.$el;
      var paginationHTML = '';

      if (params.type === 'bullets') {
        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

        for (var i = 0; i < numberOfBullets; i += 1) {
          if (params.renderBullet) {
            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);
          } else {
            paginationHTML += "<" + params.bulletElement + " class=\"" + params.bulletClass + "\"></" + params.bulletElement + ">";
          }
        }

        $el.html(paginationHTML);
        swiper.pagination.bullets = $el.find("." + params.bulletClass);
      }

      if (params.type === 'fraction') {
        if (params.renderFraction) {
          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
        } else {
          paginationHTML = "<span class=\"" + params.currentClass + "\"></span>" + ' / ' + "<span class=\"" + params.totalClass + "\"></span>";
        }

        $el.html(paginationHTML);
      }

      if (params.type === 'progressbar') {
        if (params.renderProgressbar) {
          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
        } else {
          paginationHTML = "<span class=\"" + params.progressbarFillClass + "\"></span>";
        }

        $el.html(paginationHTML);
      }

      if (params.type !== 'custom') {
        swiper.emit('paginationRender', swiper.pagination.$el[0]);
      }
    },
    init: function init() {
      var swiper = this;
      var params = swiper.params.pagination;

      if (!params.el) {
        return;
      }

      var $el = $(params.el);

      if ($el.length === 0) {
        return;
      }

      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && swiper.$el.find(params.el).length === 1) {
        $el = swiper.$el.find(params.el);
      }

      if (params.type === 'bullets' && params.clickable) {
        $el.addClass(params.clickableClass);
      }

      $el.addClass(params.modifierClass + params.type);

      if (params.type === 'bullets' && params.dynamicBullets) {
        $el.addClass("" + params.modifierClass + params.type + "-dynamic");
        swiper.pagination.dynamicBulletIndex = 0;

        if (params.dynamicMainBullets < 1) {
          params.dynamicMainBullets = 1;
        }
      }

      if (params.type === 'progressbar' && params.progressbarOpposite) {
        $el.addClass(params.progressbarOppositeClass);
      }

      if (params.clickable) {
        $el.on('click', "." + params.bulletClass, function onClick(e) {
          e.preventDefault();
          var index = $(this).index() * swiper.params.slidesPerGroup;

          if (swiper.params.loop) {
            index += swiper.loopedSlides;
          }

          swiper.slideTo(index);
        });
      }

      Utils.extend(swiper.pagination, {
        $el: $el,
        el: $el[0]
      });
    },
    destroy: function destroy() {
      var swiper = this;
      var params = swiper.params.pagination;

      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {
        return;
      }

      var $el = swiper.pagination.$el;
      $el.removeClass(params.hiddenClass);
      $el.removeClass(params.modifierClass + params.type);

      if (swiper.pagination.bullets) {
        swiper.pagination.bullets.removeClass(params.bulletActiveClass);
      }

      if (params.clickable) {
        $el.off('click', "." + params.bulletClass);
      }
    }
  };
  var Pagination$1 = {
    name: 'pagination',
    params: {
      pagination: {
        el: null,
        bulletElement: 'span',
        clickable: false,
        hideOnClick: false,
        renderBullet: null,
        renderProgressbar: null,
        renderFraction: null,
        renderCustom: null,
        progressbarOpposite: false,
        type: 'bullets',
        // 'bullets' or 'progressbar' or 'fraction' or 'custom'
        dynamicBullets: false,
        dynamicMainBullets: 1,
        formatFractionCurrent: function formatFractionCurrent(number) {
          return number;
        },
        formatFractionTotal: function formatFractionTotal(number) {
          return number;
        },
        bulletClass: 'swiper-pagination-bullet',
        bulletActiveClass: 'swiper-pagination-bullet-active',
        modifierClass: 'swiper-pagination-',
        // NEW
        currentClass: 'swiper-pagination-current',
        totalClass: 'swiper-pagination-total',
        hiddenClass: 'swiper-pagination-hidden',
        progressbarFillClass: 'swiper-pagination-progressbar-fill',
        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',
        clickableClass: 'swiper-pagination-clickable',
        // NEW
        lockClass: 'swiper-pagination-lock'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        pagination: {
          init: Pagination.init.bind(swiper),
          render: Pagination.render.bind(swiper),
          update: Pagination.update.bind(swiper),
          destroy: Pagination.destroy.bind(swiper),
          dynamicBulletIndex: 0
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.pagination.init();
        swiper.pagination.render();
        swiper.pagination.update();
      },
      activeIndexChange: function activeIndexChange() {
        var swiper = this;

        if (swiper.params.loop) {
          swiper.pagination.update();
        } else if (typeof swiper.snapIndex === 'undefined') {
          swiper.pagination.update();
        }
      },
      snapIndexChange: function snapIndexChange() {
        var swiper = this;

        if (!swiper.params.loop) {
          swiper.pagination.update();
        }
      },
      slidesLengthChange: function slidesLengthChange() {
        var swiper = this;

        if (swiper.params.loop) {
          swiper.pagination.render();
          swiper.pagination.update();
        }
      },
      snapGridLengthChange: function snapGridLengthChange() {
        var swiper = this;

        if (!swiper.params.loop) {
          swiper.pagination.render();
          swiper.pagination.update();
        }
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.pagination.destroy();
      },
      click: function click(e) {
        var swiper = this;

        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {
          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);
        }
      }
    }
  };
  var Scrollbar = {
    setTranslate: function setTranslate() {
      var swiper = this;

      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {
        return;
      }

      var scrollbar = swiper.scrollbar;
      var rtl = swiper.rtlTranslate;
      var progress = swiper.progress;
      var dragSize = scrollbar.dragSize;
      var trackSize = scrollbar.trackSize;
      var $dragEl = scrollbar.$dragEl;
      var $el = scrollbar.$el;
      var params = swiper.params.scrollbar;
      var newSize = dragSize;
      var newPos = (trackSize - dragSize) * progress;

      if (rtl) {
        newPos = -newPos;

        if (newPos > 0) {
          newSize = dragSize - newPos;
          newPos = 0;
        } else if (-newPos + dragSize > trackSize) {
          newSize = trackSize + newPos;
        }
      } else if (newPos < 0) {
        newSize = dragSize + newPos;
        newPos = 0;
      } else if (newPos + dragSize > trackSize) {
        newSize = trackSize - newPos;
      }

      if (swiper.isHorizontal()) {
        if (Support.transforms3d) {
          $dragEl.transform("translate3d(" + newPos + "px, 0, 0)");
        } else {
          $dragEl.transform("translateX(" + newPos + "px)");
        }

        $dragEl[0].style.width = newSize + "px";
      } else {
        if (Support.transforms3d) {
          $dragEl.transform("translate3d(0px, " + newPos + "px, 0)");
        } else {
          $dragEl.transform("translateY(" + newPos + "px)");
        }

        $dragEl[0].style.height = newSize + "px";
      }

      if (params.hide) {
        clearTimeout(swiper.scrollbar.timeout);
        $el[0].style.opacity = 1;
        swiper.scrollbar.timeout = setTimeout(function () {
          $el[0].style.opacity = 0;
          $el.transition(400);
        }, 1000);
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;

      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {
        return;
      }

      swiper.scrollbar.$dragEl.transition(duration);
    },
    updateSize: function updateSize() {
      var swiper = this;

      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {
        return;
      }

      var scrollbar = swiper.scrollbar;
      var $dragEl = scrollbar.$dragEl;
      var $el = scrollbar.$el;
      $dragEl[0].style.width = '';
      $dragEl[0].style.height = '';
      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;
      var divider = swiper.size / swiper.virtualSize;
      var moveDivider = divider * (trackSize / swiper.size);
      var dragSize;

      if (swiper.params.scrollbar.dragSize === 'auto') {
        dragSize = trackSize * divider;
      } else {
        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
      }

      if (swiper.isHorizontal()) {
        $dragEl[0].style.width = dragSize + "px";
      } else {
        $dragEl[0].style.height = dragSize + "px";
      }

      if (divider >= 1) {
        $el[0].style.display = 'none';
      } else {
        $el[0].style.display = '';
      }

      if (swiper.params.scrollbarHide) {
        $el[0].style.opacity = 0;
      }

      Utils.extend(scrollbar, {
        trackSize: trackSize,
        divider: divider,
        moveDivider: moveDivider,
        dragSize: dragSize
      });
      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);
    },
    setDragPosition: function setDragPosition(e) {
      var swiper = this;
      var scrollbar = swiper.scrollbar;
      var rtl = swiper.rtlTranslate;
      var $el = scrollbar.$el;
      var dragSize = scrollbar.dragSize;
      var trackSize = scrollbar.trackSize;
      var pointerPosition;

      if (swiper.isHorizontal()) {
        pointerPosition = e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX || e.clientX;
      } else {
        pointerPosition = e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY || e.clientY;
      }

      var positionRatio;
      positionRatio = (pointerPosition - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - dragSize / 2) / (trackSize - dragSize);
      positionRatio = Math.max(Math.min(positionRatio, 1), 0);

      if (rtl) {
        positionRatio = 1 - positionRatio;
      }

      var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;
      swiper.updateProgress(position);
      swiper.setTranslate(position);
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    },
    onDragStart: function onDragStart(e) {
      var swiper = this;
      var params = swiper.params.scrollbar;
      var scrollbar = swiper.scrollbar;
      var $wrapperEl = swiper.$wrapperEl;
      var $el = scrollbar.$el;
      var $dragEl = scrollbar.$dragEl;
      swiper.scrollbar.isTouched = true;
      e.preventDefault();
      e.stopPropagation();
      $wrapperEl.transition(100);
      $dragEl.transition(100);
      scrollbar.setDragPosition(e);
      clearTimeout(swiper.scrollbar.dragTimeout);
      $el.transition(0);

      if (params.hide) {
        $el.css('opacity', 1);
      }

      swiper.emit('scrollbarDragStart', e);
    },
    onDragMove: function onDragMove(e) {
      var swiper = this;
      var scrollbar = swiper.scrollbar;
      var $wrapperEl = swiper.$wrapperEl;
      var $el = scrollbar.$el;
      var $dragEl = scrollbar.$dragEl;

      if (!swiper.scrollbar.isTouched) {
        return;
      }

      if (e.preventDefault) {
        e.preventDefault();
      } else {
        e.returnValue = false;
      }

      scrollbar.setDragPosition(e);
      $wrapperEl.transition(0);
      $el.transition(0);
      $dragEl.transition(0);
      swiper.emit('scrollbarDragMove', e);
    },
    onDragEnd: function onDragEnd(e) {
      var swiper = this;
      var params = swiper.params.scrollbar;
      var scrollbar = swiper.scrollbar;
      var $el = scrollbar.$el;

      if (!swiper.scrollbar.isTouched) {
        return;
      }

      swiper.scrollbar.isTouched = false;

      if (params.hide) {
        clearTimeout(swiper.scrollbar.dragTimeout);
        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {
          $el.css('opacity', 0);
          $el.transition(400);
        }, 1000);
      }

      swiper.emit('scrollbarDragEnd', e);

      if (params.snapOnRelease) {
        swiper.slideToClosest();
      }
    },
    enableDraggable: function enableDraggable() {
      var swiper = this;

      if (!swiper.params.scrollbar.el) {
        return;
      }

      var scrollbar = swiper.scrollbar;
      var touchEvents = swiper.touchEvents;
      var touchEventsDesktop = swiper.touchEventsDesktop;
      var params = swiper.params;
      var $el = scrollbar.$el;
      var target = $el[0];
      var activeListener = Support.passiveListener && params.passiveListeners ? {
        passive: false,
        capture: false
      } : false;
      var passiveListener = Support.passiveListener && params.passiveListeners ? {
        passive: true,
        capture: false
      } : false;

      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);
        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);
        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);
      } else {
        if (Support.touch) {
          target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);
          target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);
          target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);
        }

        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
          target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);
          doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);
          doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);
        }
      }
    },
    disableDraggable: function disableDraggable() {
      var swiper = this;

      if (!swiper.params.scrollbar.el) {
        return;
      }

      var scrollbar = swiper.scrollbar;
      var touchEvents = swiper.touchEvents;
      var touchEventsDesktop = swiper.touchEventsDesktop;
      var params = swiper.params;
      var $el = scrollbar.$el;
      var target = $el[0];
      var activeListener = Support.passiveListener && params.passiveListeners ? {
        passive: false,
        capture: false
      } : false;
      var passiveListener = Support.passiveListener && params.passiveListeners ? {
        passive: true,
        capture: false
      } : false;

      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);
        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);
        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);
      } else {
        if (Support.touch) {
          target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);
          target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);
          target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);
        }

        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {
          target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);
          doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);
          doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);
        }
      }
    },
    init: function init() {
      var swiper = this;

      if (!swiper.params.scrollbar.el) {
        return;
      }

      var scrollbar = swiper.scrollbar;
      var $swiperEl = swiper.$el;
      var params = swiper.params.scrollbar;
      var $el = $(params.el);

      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {
        $el = $swiperEl.find(params.el);
      }

      var $dragEl = $el.find("." + swiper.params.scrollbar.dragClass);

      if ($dragEl.length === 0) {
        $dragEl = $("<div class=\"" + swiper.params.scrollbar.dragClass + "\"></div>");
        $el.append($dragEl);
      }

      Utils.extend(scrollbar, {
        $el: $el,
        el: $el[0],
        $dragEl: $dragEl,
        dragEl: $dragEl[0]
      });

      if (params.draggable) {
        scrollbar.enableDraggable();
      }
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.scrollbar.disableDraggable();
    }
  };
  var Scrollbar$1 = {
    name: 'scrollbar',
    params: {
      scrollbar: {
        el: null,
        dragSize: 'auto',
        hide: false,
        draggable: false,
        snapOnRelease: true,
        lockClass: 'swiper-scrollbar-lock',
        dragClass: 'swiper-scrollbar-drag'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        scrollbar: {
          init: Scrollbar.init.bind(swiper),
          destroy: Scrollbar.destroy.bind(swiper),
          updateSize: Scrollbar.updateSize.bind(swiper),
          setTranslate: Scrollbar.setTranslate.bind(swiper),
          setTransition: Scrollbar.setTransition.bind(swiper),
          enableDraggable: Scrollbar.enableDraggable.bind(swiper),
          disableDraggable: Scrollbar.disableDraggable.bind(swiper),
          setDragPosition: Scrollbar.setDragPosition.bind(swiper),
          onDragStart: Scrollbar.onDragStart.bind(swiper),
          onDragMove: Scrollbar.onDragMove.bind(swiper),
          onDragEnd: Scrollbar.onDragEnd.bind(swiper),
          isTouched: false,
          timeout: null,
          dragTimeout: null
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.scrollbar.init();
        swiper.scrollbar.updateSize();
        swiper.scrollbar.setTranslate();
      },
      update: function update() {
        var swiper = this;
        swiper.scrollbar.updateSize();
      },
      resize: function resize() {
        var swiper = this;
        swiper.scrollbar.updateSize();
      },
      observerUpdate: function observerUpdate() {
        var swiper = this;
        swiper.scrollbar.updateSize();
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        swiper.scrollbar.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        swiper.scrollbar.setTransition(duration);
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.scrollbar.destroy();
      }
    }
  };
  var Parallax = {
    setTransform: function setTransform(el, progress) {
      var swiper = this;
      var rtl = swiper.rtl;
      var $el = $(el);
      var rtlFactor = rtl ? -1 : 1;
      var p = $el.attr('data-swiper-parallax') || '0';
      var x = $el.attr('data-swiper-parallax-x');
      var y = $el.attr('data-swiper-parallax-y');
      var scale = $el.attr('data-swiper-parallax-scale');
      var opacity = $el.attr('data-swiper-parallax-opacity');

      if (x || y) {
        x = x || '0';
        y = y || '0';
      } else if (swiper.isHorizontal()) {
        x = p;
        y = '0';
      } else {
        y = p;
        x = '0';
      }

      if (x.indexOf('%') >= 0) {
        x = parseInt(x, 10) * progress * rtlFactor + "%";
      } else {
        x = x * progress * rtlFactor + "px";
      }

      if (y.indexOf('%') >= 0) {
        y = parseInt(y, 10) * progress + "%";
      } else {
        y = y * progress + "px";
      }

      if (typeof opacity !== 'undefined' && opacity !== null) {
        var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));
        $el[0].style.opacity = currentOpacity;
      }

      if (typeof scale === 'undefined' || scale === null) {
        $el.transform("translate3d(" + x + ", " + y + ", 0px)");
      } else {
        var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));
        $el.transform("translate3d(" + x + ", " + y + ", 0px) scale(" + currentScale + ")");
      }
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      var $el = swiper.$el;
      var slides = swiper.slides;
      var progress = swiper.progress;
      var snapGrid = swiper.snapGrid;
      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function (index, el) {
        swiper.parallax.setTransform(el, progress);
      });
      slides.each(function (slideIndex, slideEl) {
        var slideProgress = slideEl.progress;

        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {
          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);
        }

        slideProgress = Math.min(Math.max(slideProgress, -1), 1);
        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function (index, el) {
          swiper.parallax.setTransform(el, slideProgress);
        });
      });
    },
    setTransition: function setTransition(duration) {
      if (duration === void 0) duration = this.params.speed;
      var swiper = this;
      var $el = swiper.$el;
      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function (index, parallaxEl) {
        var $parallaxEl = $(parallaxEl);
        var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;

        if (duration === 0) {
          parallaxDuration = 0;
        }

        $parallaxEl.transition(parallaxDuration);
      });
    }
  };
  var Parallax$1 = {
    name: 'parallax',
    params: {
      parallax: {
        enabled: false
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        parallax: {
          setTransform: Parallax.setTransform.bind(swiper),
          setTranslate: Parallax.setTranslate.bind(swiper),
          setTransition: Parallax.setTransition.bind(swiper)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;

        if (!swiper.params.parallax.enabled) {
          return;
        }

        swiper.params.watchSlidesProgress = true;
        swiper.originalParams.watchSlidesProgress = true;
      },
      init: function init() {
        var swiper = this;

        if (!swiper.params.parallax) {
          return;
        }

        swiper.parallax.setTranslate();
      },
      setTranslate: function setTranslate() {
        var swiper = this;

        if (!swiper.params.parallax) {
          return;
        }

        swiper.parallax.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;

        if (!swiper.params.parallax) {
          return;
        }

        swiper.parallax.setTransition(duration);
      }
    }
  };
  var Zoom = {
    // Calc Scale From Multi-touches
    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
      if (e.targetTouches.length < 2) {
        return 1;
      }

      var x1 = e.targetTouches[0].pageX;
      var y1 = e.targetTouches[0].pageY;
      var x2 = e.targetTouches[1].pageX;
      var y2 = e.targetTouches[1].pageY;
      var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
      return distance;
    },
    // Events
    onGestureStart: function onGestureStart(e) {
      var swiper = this;
      var params = swiper.params.zoom;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      zoom.fakeGestureTouched = false;
      zoom.fakeGestureMoved = false;

      if (!Support.gestures) {
        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {
          return;
        }

        zoom.fakeGestureTouched = true;
        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);
      }

      if (!gesture.$slideEl || !gesture.$slideEl.length) {
        gesture.$slideEl = $(e.target).closest('.swiper-slide');

        if (gesture.$slideEl.length === 0) {
          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
        }

        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
        gesture.$imageWrapEl = gesture.$imageEl.parent("." + params.containerClass);
        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

        if (gesture.$imageWrapEl.length === 0) {
          gesture.$imageEl = undefined;
          return;
        }
      }

      gesture.$imageEl.transition(0);
      swiper.zoom.isScaling = true;
    },
    onGestureChange: function onGestureChange(e) {
      var swiper = this;
      var params = swiper.params.zoom;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;

      if (!Support.gestures) {
        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {
          return;
        }

        zoom.fakeGestureMoved = true;
        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);
      }

      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
        return;
      }

      if (Support.gestures) {
        swiper.zoom.scale = e.scale * zoom.currentScale;
      } else {
        zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;
      }

      if (zoom.scale > gesture.maxRatio) {
        zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);
      }

      if (zoom.scale < params.minRatio) {
        zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);
      }

      gesture.$imageEl.transform("translate3d(0,0,0) scale(" + zoom.scale + ")");
    },
    onGestureEnd: function onGestureEnd(e) {
      var swiper = this;
      var params = swiper.params.zoom;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;

      if (!Support.gestures) {
        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {
          return;
        }

        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android) {
          return;
        }

        zoom.fakeGestureTouched = false;
        zoom.fakeGestureMoved = false;
      }

      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
        return;
      }

      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);
      gesture.$imageEl.transition(swiper.params.speed).transform("translate3d(0,0,0) scale(" + zoom.scale + ")");
      zoom.currentScale = zoom.scale;
      zoom.isScaling = false;

      if (zoom.scale === 1) {
        gesture.$slideEl = undefined;
      }
    },
    onTouchStart: function onTouchStart(e) {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;

      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
        return;
      }

      if (image.isTouched) {
        return;
      }

      if (Device.android) {
        e.preventDefault();
      }

      image.isTouched = true;
      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
    },
    onTouchMove: function onTouchMove(e) {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;
      var velocity = zoom.velocity;

      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
        return;
      }

      swiper.allowClick = false;

      if (!image.isTouched || !gesture.$slideEl) {
        return;
      }

      if (!image.isMoved) {
        image.width = gesture.$imageEl[0].offsetWidth;
        image.height = gesture.$imageEl[0].offsetHeight;
        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;
        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;
        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;
        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;
        gesture.$imageWrapEl.transition(0);

        if (swiper.rtl) {
          image.startX = -image.startX;
          image.startY = -image.startY;
        }
      } // Define if we need image drag


      var scaledWidth = image.width * zoom.scale;
      var scaledHeight = image.height * zoom.scale;

      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) {
        return;
      }

      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
      image.maxX = -image.minX;
      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
      image.maxY = -image.minY;
      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

      if (!image.isMoved && !zoom.isScaling) {
        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {
          image.isTouched = false;
          return;
        }

        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {
          image.isTouched = false;
          return;
        }
      }

      e.preventDefault();
      e.stopPropagation();
      image.isMoved = true;
      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;
      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;

      if (image.currentX < image.minX) {
        image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);
      }

      if (image.currentX > image.maxX) {
        image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);
      }

      if (image.currentY < image.minY) {
        image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);
      }

      if (image.currentY > image.maxY) {
        image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);
      } // Velocity


      if (!velocity.prevPositionX) {
        velocity.prevPositionX = image.touchesCurrent.x;
      }

      if (!velocity.prevPositionY) {
        velocity.prevPositionY = image.touchesCurrent.y;
      }

      if (!velocity.prevTime) {
        velocity.prevTime = Date.now();
      }

      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;
      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;

      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) {
        velocity.x = 0;
      }

      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) {
        velocity.y = 0;
      }

      velocity.prevPositionX = image.touchesCurrent.x;
      velocity.prevPositionY = image.touchesCurrent.y;
      velocity.prevTime = Date.now();
      gesture.$imageWrapEl.transform("translate3d(" + image.currentX + "px, " + image.currentY + "px,0)");
    },
    onTouchEnd: function onTouchEnd() {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;
      var velocity = zoom.velocity;

      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
        return;
      }

      if (!image.isTouched || !image.isMoved) {
        image.isTouched = false;
        image.isMoved = false;
        return;
      }

      image.isTouched = false;
      image.isMoved = false;
      var momentumDurationX = 300;
      var momentumDurationY = 300;
      var momentumDistanceX = velocity.x * momentumDurationX;
      var newPositionX = image.currentX + momentumDistanceX;
      var momentumDistanceY = velocity.y * momentumDurationY;
      var newPositionY = image.currentY + momentumDistanceY; // Fix duration

      if (velocity.x !== 0) {
        momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);
      }

      if (velocity.y !== 0) {
        momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);
      }

      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);
      image.currentX = newPositionX;
      image.currentY = newPositionY; // Define if we need image drag

      var scaledWidth = image.width * zoom.scale;
      var scaledHeight = image.height * zoom.scale;
      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
      image.maxX = -image.minX;
      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
      image.maxY = -image.minY;
      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);
      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);
      gesture.$imageWrapEl.transition(momentumDuration).transform("translate3d(" + image.currentX + "px, " + image.currentY + "px,0)");
    },
    onTransitionEnd: function onTransitionEnd() {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;

      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {
        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');
        gesture.$imageWrapEl.transform('translate3d(0,0,0)');
        gesture.$slideEl = undefined;
        gesture.$imageEl = undefined;
        gesture.$imageWrapEl = undefined;
        zoom.scale = 1;
        zoom.currentScale = 1;
      }
    },
    // Toggle Zoom
    toggle: function toggle(e) {
      var swiper = this;
      var zoom = swiper.zoom;

      if (zoom.scale && zoom.scale !== 1) {
        // Zoom Out
        zoom.out();
      } else {
        // Zoom In
        zoom.in(e);
      }
    },
    in: function in$1(e) {
      var swiper = this;
      var zoom = swiper.zoom;
      var params = swiper.params.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;

      if (!gesture.$slideEl) {
        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
        gesture.$imageWrapEl = gesture.$imageEl.parent("." + params.containerClass);
      }

      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
        return;
      }

      gesture.$slideEl.addClass("" + params.zoomedSlideClass);
      var touchX;
      var touchY;
      var offsetX;
      var offsetY;
      var diffX;
      var diffY;
      var translateX;
      var translateY;
      var imageWidth;
      var imageHeight;
      var scaledWidth;
      var scaledHeight;
      var translateMinX;
      var translateMinY;
      var translateMaxX;
      var translateMaxY;
      var slideWidth;
      var slideHeight;

      if (typeof image.touchesStart.x === 'undefined' && e) {
        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;
        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;
      } else {
        touchX = image.touchesStart.x;
        touchY = image.touchesStart.y;
      }

      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;
      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

      if (e) {
        slideWidth = gesture.$slideEl[0].offsetWidth;
        slideHeight = gesture.$slideEl[0].offsetHeight;
        offsetX = gesture.$slideEl.offset().left;
        offsetY = gesture.$slideEl.offset().top;
        diffX = offsetX + slideWidth / 2 - touchX;
        diffY = offsetY + slideHeight / 2 - touchY;
        imageWidth = gesture.$imageEl[0].offsetWidth;
        imageHeight = gesture.$imageEl[0].offsetHeight;
        scaledWidth = imageWidth * zoom.scale;
        scaledHeight = imageHeight * zoom.scale;
        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
        translateMaxX = -translateMinX;
        translateMaxY = -translateMinY;
        translateX = diffX * zoom.scale;
        translateY = diffY * zoom.scale;

        if (translateX < translateMinX) {
          translateX = translateMinX;
        }

        if (translateX > translateMaxX) {
          translateX = translateMaxX;
        }

        if (translateY < translateMinY) {
          translateY = translateMinY;
        }

        if (translateY > translateMaxY) {
          translateY = translateMaxY;
        }
      } else {
        translateX = 0;
        translateY = 0;
      }

      gesture.$imageWrapEl.transition(300).transform("translate3d(" + translateX + "px, " + translateY + "px,0)");
      gesture.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + zoom.scale + ")");
    },
    out: function out() {
      var swiper = this;
      var zoom = swiper.zoom;
      var params = swiper.params.zoom;
      var gesture = zoom.gesture;

      if (!gesture.$slideEl) {
        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
        gesture.$imageWrapEl = gesture.$imageEl.parent("." + params.containerClass);
      }

      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
        return;
      }

      zoom.scale = 1;
      zoom.currentScale = 1;
      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');
      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');
      gesture.$slideEl.removeClass("" + params.zoomedSlideClass);
      gesture.$slideEl = undefined;
    },
    // Attach/Detach Events
    enable: function enable() {
      var swiper = this;
      var zoom = swiper.zoom;

      if (zoom.enabled) {
        return;
      }

      zoom.enabled = true;
      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {
        passive: true,
        capture: false
      } : false; // Scale image

      if (Support.gestures) {
        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);
      } else if (swiper.touchEvents.start === 'touchstart') {
        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);
      } // Move image


      swiper.$wrapperEl.on(swiper.touchEvents.move, "." + swiper.params.zoom.containerClass, zoom.onTouchMove);
    },
    disable: function disable() {
      var swiper = this;
      var zoom = swiper.zoom;

      if (!zoom.enabled) {
        return;
      }

      swiper.zoom.enabled = false;
      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {
        passive: true,
        capture: false
      } : false; // Scale image

      if (Support.gestures) {
        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);
      } else if (swiper.touchEvents.start === 'touchstart') {
        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);
      } // Move image


      swiper.$wrapperEl.off(swiper.touchEvents.move, "." + swiper.params.zoom.containerClass, zoom.onTouchMove);
    }
  };
  var Zoom$1 = {
    name: 'zoom',
    params: {
      zoom: {
        enabled: false,
        maxRatio: 3,
        minRatio: 1,
        toggle: true,
        containerClass: 'swiper-zoom-container',
        zoomedSlideClass: 'swiper-slide-zoomed'
      }
    },
    create: function create() {
      var swiper = this;
      var zoom = {
        enabled: false,
        scale: 1,
        currentScale: 1,
        isScaling: false,
        gesture: {
          $slideEl: undefined,
          slideWidth: undefined,
          slideHeight: undefined,
          $imageEl: undefined,
          $imageWrapEl: undefined,
          maxRatio: 3
        },
        image: {
          isTouched: undefined,
          isMoved: undefined,
          currentX: undefined,
          currentY: undefined,
          minX: undefined,
          minY: undefined,
          maxX: undefined,
          maxY: undefined,
          width: undefined,
          height: undefined,
          startX: undefined,
          startY: undefined,
          touchesStart: {},
          touchesCurrent: {}
        },
        velocity: {
          x: undefined,
          y: undefined,
          prevPositionX: undefined,
          prevPositionY: undefined,
          prevTime: undefined
        }
      };
      'onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out'.split(' ').forEach(function (methodName) {
        zoom[methodName] = Zoom[methodName].bind(swiper);
      });
      Utils.extend(swiper, {
        zoom: zoom
      });
    },
    on: {
      init: function init() {
        var swiper = this;

        if (swiper.params.zoom.enabled) {
          swiper.zoom.enable();
        }
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.zoom.disable();
      },
      touchStart: function touchStart(e) {
        var swiper = this;

        if (!swiper.zoom.enabled) {
          return;
        }

        swiper.zoom.onTouchStart(e);
      },
      touchEnd: function touchEnd(e) {
        var swiper = this;

        if (!swiper.zoom.enabled) {
          return;
        }

        swiper.zoom.onTouchEnd(e);
      },
      doubleTap: function doubleTap(e) {
        var swiper = this;

        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {
          swiper.zoom.toggle(e);
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;

        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
          swiper.zoom.onTransitionEnd();
        }
      }
    }
  };
  var Lazy = {
    loadInSlide: function loadInSlide(index, loadInDuplicate) {
      if (loadInDuplicate === void 0) loadInDuplicate = true;
      var swiper = this;
      var params = swiper.params.lazy;

      if (typeof index === 'undefined') {
        return;
      }

      if (swiper.slides.length === 0) {
        return;
      }

      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
      var $slideEl = isVirtual ? swiper.$wrapperEl.children("." + swiper.params.slideClass + "[data-swiper-slide-index=\"" + index + "\"]") : swiper.slides.eq(index);
      var $images = $slideEl.find("." + params.elementClass + ":not(." + params.loadedClass + "):not(." + params.loadingClass + ")");

      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {
        $images = $images.add($slideEl[0]);
      }

      if ($images.length === 0) {
        return;
      }

      $images.each(function (imageIndex, imageEl) {
        var $imageEl = $(imageEl);
        $imageEl.addClass(params.loadingClass);
        var background = $imageEl.attr('data-background');
        var src = $imageEl.attr('data-src');
        var srcset = $imageEl.attr('data-srcset');
        var sizes = $imageEl.attr('data-sizes');
        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {
          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) {
            return;
          }

          if (background) {
            $imageEl.css('background-image', "url(\"" + background + "\")");
            $imageEl.removeAttr('data-background');
          } else {
            if (srcset) {
              $imageEl.attr('srcset', srcset);
              $imageEl.removeAttr('data-srcset');
            }

            if (sizes) {
              $imageEl.attr('sizes', sizes);
              $imageEl.removeAttr('data-sizes');
            }

            if (src) {
              $imageEl.attr('src', src);
              $imageEl.removeAttr('data-src');
            }
          }

          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
          $slideEl.find("." + params.preloaderClass).remove();

          if (swiper.params.loop && loadInDuplicate) {
            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');

            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
              var originalSlide = swiper.$wrapperEl.children("[data-swiper-slide-index=\"" + slideOriginalIndex + "\"]:not(." + swiper.params.slideDuplicateClass + ")");
              swiper.lazy.loadInSlide(originalSlide.index(), false);
            } else {
              var duplicatedSlide = swiper.$wrapperEl.children("." + swiper.params.slideDuplicateClass + "[data-swiper-slide-index=\"" + slideOriginalIndex + "\"]");
              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);
            }
          }

          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);
        });
        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);
      });
    },
    load: function load() {
      var swiper = this;
      var $wrapperEl = swiper.$wrapperEl;
      var swiperParams = swiper.params;
      var slides = swiper.slides;
      var activeIndex = swiper.activeIndex;
      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;
      var params = swiperParams.lazy;
      var slidesPerView = swiperParams.slidesPerView;

      if (slidesPerView === 'auto') {
        slidesPerView = 0;
      }

      function slideExist(index) {
        if (isVirtual) {
          if ($wrapperEl.children("." + swiperParams.slideClass + "[data-swiper-slide-index=\"" + index + "\"]").length) {
            return true;
          }
        } else if (slides[index]) {
          return true;
        }

        return false;
      }

      function slideIndex(slideEl) {
        if (isVirtual) {
          return $(slideEl).attr('data-swiper-slide-index');
        }

        return $(slideEl).index();
      }

      if (!swiper.lazy.initialImageLoaded) {
        swiper.lazy.initialImageLoaded = true;
      }

      if (swiper.params.watchSlidesVisibility) {
        $wrapperEl.children("." + swiperParams.slideVisibleClass).each(function (elIndex, slideEl) {
          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();
          swiper.lazy.loadInSlide(index);
        });
      } else if (slidesPerView > 1) {
        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {
          if (slideExist(i)) {
            swiper.lazy.loadInSlide(i);
          }
        }
      } else {
        swiper.lazy.loadInSlide(activeIndex);
      }

      if (params.loadPrevNext) {
        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {
          var amount = params.loadPrevNextAmount;
          var spv = slidesPerView;
          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides

          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {
            if (slideExist(i$1)) {
              swiper.lazy.loadInSlide(i$1);
            }
          } // Prev Slides


          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {
            if (slideExist(i$2)) {
              swiper.lazy.loadInSlide(i$2);
            }
          }
        } else {
          var nextSlide = $wrapperEl.children("." + swiperParams.slideNextClass);

          if (nextSlide.length > 0) {
            swiper.lazy.loadInSlide(slideIndex(nextSlide));
          }

          var prevSlide = $wrapperEl.children("." + swiperParams.slidePrevClass);

          if (prevSlide.length > 0) {
            swiper.lazy.loadInSlide(slideIndex(prevSlide));
          }
        }
      }
    }
  };
  var Lazy$1 = {
    name: 'lazy',
    params: {
      lazy: {
        enabled: false,
        loadPrevNext: false,
        loadPrevNextAmount: 1,
        loadOnTransitionStart: false,
        elementClass: 'swiper-lazy',
        loadingClass: 'swiper-lazy-loading',
        loadedClass: 'swiper-lazy-loaded',
        preloaderClass: 'swiper-lazy-preloader'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        lazy: {
          initialImageLoaded: false,
          load: Lazy.load.bind(swiper),
          loadInSlide: Lazy.loadInSlide.bind(swiper)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;

        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {
          swiper.params.preloadImages = false;
        }
      },
      init: function init() {
        var swiper = this;

        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {
          swiper.lazy.load();
        }
      },
      scroll: function scroll() {
        var swiper = this;

        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {
          swiper.lazy.load();
        }
      },
      resize: function resize() {
        var swiper = this;

        if (swiper.params.lazy.enabled) {
          swiper.lazy.load();
        }
      },
      scrollbarDragMove: function scrollbarDragMove() {
        var swiper = this;

        if (swiper.params.lazy.enabled) {
          swiper.lazy.load();
        }
      },
      transitionStart: function transitionStart() {
        var swiper = this;

        if (swiper.params.lazy.enabled) {
          if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {
            swiper.lazy.load();
          }
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;

        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {
          swiper.lazy.load();
        }
      }
    }
  };
  /* eslint no-bitwise: ["error", { "allow": [">>"] }] */

  var Controller = {
    LinearSpline: function LinearSpline(x, y) {
      var binarySearch = function search() {
        var maxIndex;
        var minIndex;
        var guess;
        return function (array, val) {
          minIndex = -1;
          maxIndex = array.length;

          while (maxIndex - minIndex > 1) {
            guess = maxIndex + minIndex >> 1;

            if (array[guess] <= val) {
              minIndex = guess;
            } else {
              maxIndex = guess;
            }
          }

          return maxIndex;
        };
      }();

      this.x = x;
      this.y = y;
      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:
      // (x1,y1) is the known point before given value,
      // (x3,y3) is the known point after given value.

      var i1;
      var i3;

      this.interpolate = function interpolate(x2) {
        if (!x2) {
          return 0;
        } // Get the indexes of x1 and x3 (the array indexes before and after given x2):


        i3 = binarySearch(this.x, x2);
        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:
        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1

        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];
      };

      return this;
    },
    // xxx: for now i will just save one spline function to to
    getInterpolateFunction: function getInterpolateFunction(c) {
      var swiper = this;

      if (!swiper.controller.spline) {
        swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);
      }
    },
    setTranslate: function setTranslate(setTranslate$1, byController) {
      var swiper = this;
      var controlled = swiper.controller.control;
      var multiplier;
      var controlledTranslate;

      function setControlledTranslate(c) {
        // this will create an Interpolate function based on the snapGrids
        // x is the Grid of the scrolled scroller and y will be the controlled scroller
        // it makes sense to create this only once and recall it for the interpolation
        // the function does a lot of value caching for performance
        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;

        if (swiper.params.controller.by === 'slide') {
          swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
          // but it did not work out

          controlledTranslate = -swiper.controller.spline.interpolate(-translate);
        }

        if (!controlledTranslate || swiper.params.controller.by === 'container') {
          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());
          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();
        }

        if (swiper.params.controller.inverse) {
          controlledTranslate = c.maxTranslate() - controlledTranslate;
        }

        c.updateProgress(controlledTranslate);
        c.setTranslate(controlledTranslate, swiper);
        c.updateActiveIndex();
        c.updateSlidesClasses();
      }

      if (Array.isArray(controlled)) {
        for (var i = 0; i < controlled.length; i += 1) {
          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
            setControlledTranslate(controlled[i]);
          }
        }
      } else if (controlled instanceof Swiper && byController !== controlled) {
        setControlledTranslate(controlled);
      }
    },
    setTransition: function setTransition(duration, byController) {
      var swiper = this;
      var controlled = swiper.controller.control;
      var i;

      function setControlledTransition(c) {
        c.setTransition(duration, swiper);

        if (duration !== 0) {
          c.transitionStart();

          if (c.params.autoHeight) {
            Utils.nextTick(function () {
              c.updateAutoHeight();
            });
          }

          c.$wrapperEl.transitionEnd(function () {
            if (!controlled) {
              return;
            }

            if (c.params.loop && swiper.params.controller.by === 'slide') {
              c.loopFix();
            }

            c.transitionEnd();
          });
        }
      }

      if (Array.isArray(controlled)) {
        for (i = 0; i < controlled.length; i += 1) {
          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
            setControlledTransition(controlled[i]);
          }
        }
      } else if (controlled instanceof Swiper && byController !== controlled) {
        setControlledTransition(controlled);
      }
    }
  };
  var Controller$1 = {
    name: 'controller',
    params: {
      controller: {
        control: undefined,
        inverse: false,
        by: 'slide' // or 'container'

      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        controller: {
          control: swiper.params.controller.control,
          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),
          setTranslate: Controller.setTranslate.bind(swiper),
          setTransition: Controller.setTransition.bind(swiper)
        }
      });
    },
    on: {
      update: function update() {
        var swiper = this;

        if (!swiper.controller.control) {
          return;
        }

        if (swiper.controller.spline) {
          swiper.controller.spline = undefined;
          delete swiper.controller.spline;
        }
      },
      resize: function resize() {
        var swiper = this;

        if (!swiper.controller.control) {
          return;
        }

        if (swiper.controller.spline) {
          swiper.controller.spline = undefined;
          delete swiper.controller.spline;
        }
      },
      observerUpdate: function observerUpdate() {
        var swiper = this;

        if (!swiper.controller.control) {
          return;
        }

        if (swiper.controller.spline) {
          swiper.controller.spline = undefined;
          delete swiper.controller.spline;
        }
      },
      setTranslate: function setTranslate(translate, byController) {
        var swiper = this;

        if (!swiper.controller.control) {
          return;
        }

        swiper.controller.setTranslate(translate, byController);
      },
      setTransition: function setTransition(duration, byController) {
        var swiper = this;

        if (!swiper.controller.control) {
          return;
        }

        swiper.controller.setTransition(duration, byController);
      }
    }
  };
  var a11y = {
    makeElFocusable: function makeElFocusable($el) {
      $el.attr('tabIndex', '0');
      return $el;
    },
    addElRole: function addElRole($el, role) {
      $el.attr('role', role);
      return $el;
    },
    addElLabel: function addElLabel($el, label) {
      $el.attr('aria-label', label);
      return $el;
    },
    disableEl: function disableEl($el) {
      $el.attr('aria-disabled', true);
      return $el;
    },
    enableEl: function enableEl($el) {
      $el.attr('aria-disabled', false);
      return $el;
    },
    onEnterKey: function onEnterKey(e) {
      var swiper = this;
      var params = swiper.params.a11y;

      if (e.keyCode !== 13) {
        return;
      }

      var $targetEl = $(e.target);

      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {
        if (!(swiper.isEnd && !swiper.params.loop)) {
          swiper.slideNext();
        }

        if (swiper.isEnd) {
          swiper.a11y.notify(params.lastSlideMessage);
        } else {
          swiper.a11y.notify(params.nextSlideMessage);
        }
      }

      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {
        if (!(swiper.isBeginning && !swiper.params.loop)) {
          swiper.slidePrev();
        }

        if (swiper.isBeginning) {
          swiper.a11y.notify(params.firstSlideMessage);
        } else {
          swiper.a11y.notify(params.prevSlideMessage);
        }
      }

      if (swiper.pagination && $targetEl.is("." + swiper.params.pagination.bulletClass)) {
        $targetEl[0].click();
      }
    },
    notify: function notify(message) {
      var swiper = this;
      var notification = swiper.a11y.liveRegion;

      if (notification.length === 0) {
        return;
      }

      notification.html('');
      notification.html(message);
    },
    updateNavigation: function updateNavigation() {
      var swiper = this;

      if (swiper.params.loop) {
        return;
      }

      var ref = swiper.navigation;
      var $nextEl = ref.$nextEl;
      var $prevEl = ref.$prevEl;

      if ($prevEl && $prevEl.length > 0) {
        if (swiper.isBeginning) {
          swiper.a11y.disableEl($prevEl);
        } else {
          swiper.a11y.enableEl($prevEl);
        }
      }

      if ($nextEl && $nextEl.length > 0) {
        if (swiper.isEnd) {
          swiper.a11y.disableEl($nextEl);
        } else {
          swiper.a11y.enableEl($nextEl);
        }
      }
    },
    updatePagination: function updatePagination() {
      var swiper = this;
      var params = swiper.params.a11y;

      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {
          var $bulletEl = $(bulletEl);
          swiper.a11y.makeElFocusable($bulletEl);
          swiper.a11y.addElRole($bulletEl, 'button');
          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));
        });
      }
    },
    init: function init() {
      var swiper = this;
      swiper.$el.append(swiper.a11y.liveRegion); // Navigation

      var params = swiper.params.a11y;
      var $nextEl;
      var $prevEl;

      if (swiper.navigation && swiper.navigation.$nextEl) {
        $nextEl = swiper.navigation.$nextEl;
      }

      if (swiper.navigation && swiper.navigation.$prevEl) {
        $prevEl = swiper.navigation.$prevEl;
      }

      if ($nextEl) {
        swiper.a11y.makeElFocusable($nextEl);
        swiper.a11y.addElRole($nextEl, 'button');
        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);
        $nextEl.on('keydown', swiper.a11y.onEnterKey);
      }

      if ($prevEl) {
        swiper.a11y.makeElFocusable($prevEl);
        swiper.a11y.addElRole($prevEl, 'button');
        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);
        $prevEl.on('keydown', swiper.a11y.onEnterKey);
      } // Pagination


      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
        swiper.pagination.$el.on('keydown', "." + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);
      }
    },
    destroy: function destroy() {
      var swiper = this;

      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) {
        swiper.a11y.liveRegion.remove();
      }

      var $nextEl;
      var $prevEl;

      if (swiper.navigation && swiper.navigation.$nextEl) {
        $nextEl = swiper.navigation.$nextEl;
      }

      if (swiper.navigation && swiper.navigation.$prevEl) {
        $prevEl = swiper.navigation.$prevEl;
      }

      if ($nextEl) {
        $nextEl.off('keydown', swiper.a11y.onEnterKey);
      }

      if ($prevEl) {
        $prevEl.off('keydown', swiper.a11y.onEnterKey);
      } // Pagination


      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
        swiper.pagination.$el.off('keydown', "." + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);
      }
    }
  };
  var A11y = {
    name: 'a11y',
    params: {
      a11y: {
        enabled: true,
        notificationClass: 'swiper-notification',
        prevSlideMessage: 'Previous slide',
        nextSlideMessage: 'Next slide',
        firstSlideMessage: 'This is the first slide',
        lastSlideMessage: 'This is the last slide',
        paginationBulletMessage: 'Go to slide {{index}}'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        a11y: {
          liveRegion: $("<span class=\"" + swiper.params.a11y.notificationClass + "\" aria-live=\"assertive\" aria-atomic=\"true\"></span>")
        }
      });
      Object.keys(a11y).forEach(function (methodName) {
        swiper.a11y[methodName] = a11y[methodName].bind(swiper);
      });
    },
    on: {
      init: function init() {
        var swiper = this;

        if (!swiper.params.a11y.enabled) {
          return;
        }

        swiper.a11y.init();
        swiper.a11y.updateNavigation();
      },
      toEdge: function toEdge() {
        var swiper = this;

        if (!swiper.params.a11y.enabled) {
          return;
        }

        swiper.a11y.updateNavigation();
      },
      fromEdge: function fromEdge() {
        var swiper = this;

        if (!swiper.params.a11y.enabled) {
          return;
        }

        swiper.a11y.updateNavigation();
      },
      paginationUpdate: function paginationUpdate() {
        var swiper = this;

        if (!swiper.params.a11y.enabled) {
          return;
        }

        swiper.a11y.updatePagination();
      },
      destroy: function destroy() {
        var swiper = this;

        if (!swiper.params.a11y.enabled) {
          return;
        }

        swiper.a11y.destroy();
      }
    }
  };
  var History = {
    init: function init() {
      var swiper = this;

      if (!swiper.params.history) {
        return;
      }

      if (!win.history || !win.history.pushState) {
        swiper.params.history.enabled = false;
        swiper.params.hashNavigation.enabled = true;
        return;
      }

      var history = swiper.history;
      history.initialized = true;
      history.paths = History.getPathValues();

      if (!history.paths.key && !history.paths.value) {
        return;
      }

      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);

      if (!swiper.params.history.replaceState) {
        win.addEventListener('popstate', swiper.history.setHistoryPopState);
      }
    },
    destroy: function destroy() {
      var swiper = this;

      if (!swiper.params.history.replaceState) {
        win.removeEventListener('popstate', swiper.history.setHistoryPopState);
      }
    },
    setHistoryPopState: function setHistoryPopState() {
      var swiper = this;
      swiper.history.paths = History.getPathValues();
      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);
    },
    getPathValues: function getPathValues() {
      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) {
        return part !== '';
      });
      var total = pathArray.length;
      var key = pathArray[total - 2];
      var value = pathArray[total - 1];
      return {
        key: key,
        value: value
      };
    },
    setHistory: function setHistory(key, index) {
      var swiper = this;

      if (!swiper.history.initialized || !swiper.params.history.enabled) {
        return;
      }

      var slide = swiper.slides.eq(index);
      var value = History.slugify(slide.attr('data-history'));

      if (!win.location.pathname.includes(key)) {
        value = key + "/" + value;
      }

      var currentState = win.history.state;

      if (currentState && currentState.value === value) {
        return;
      }

      if (swiper.params.history.replaceState) {
        win.history.replaceState({
          value: value
        }, null, value);
      } else {
        win.history.pushState({
          value: value
        }, null, value);
      }
    },
    slugify: function slugify(text) {
      return text.toString().toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');
    },
    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {
      var swiper = this;

      if (value) {
        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
          var slide = swiper.slides.eq(i);
          var slideHistory = History.slugify(slide.attr('data-history'));

          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {
            var index = slide.index();
            swiper.slideTo(index, speed, runCallbacks);
          }
        }
      } else {
        swiper.slideTo(0, speed, runCallbacks);
      }
    }
  };
  var History$1 = {
    name: 'history',
    params: {
      history: {
        enabled: false,
        replaceState: false,
        key: 'slides'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        history: {
          init: History.init.bind(swiper),
          setHistory: History.setHistory.bind(swiper),
          setHistoryPopState: History.setHistoryPopState.bind(swiper),
          scrollToSlide: History.scrollToSlide.bind(swiper),
          destroy: History.destroy.bind(swiper)
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;

        if (swiper.params.history.enabled) {
          swiper.history.init();
        }
      },
      destroy: function destroy() {
        var swiper = this;

        if (swiper.params.history.enabled) {
          swiper.history.destroy();
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;

        if (swiper.history.initialized) {
          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);
        }
      }
    }
  };
  var HashNavigation = {
    onHashCange: function onHashCange() {
      var swiper = this;
      var newHash = doc.location.hash.replace('#', '');
      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');

      if (newHash !== activeSlideHash) {
        var newIndex = swiper.$wrapperEl.children("." + swiper.params.slideClass + "[data-hash=\"" + newHash + "\"]").index();

        if (typeof newIndex === 'undefined') {
          return;
        }

        swiper.slideTo(newIndex);
      }
    },
    setHash: function setHash() {
      var swiper = this;

      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) {
        return;
      }

      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {
        win.history.replaceState(null, null, "#" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || '');
      } else {
        var slide = swiper.slides.eq(swiper.activeIndex);
        var hash = slide.attr('data-hash') || slide.attr('data-history');
        doc.location.hash = hash || '';
      }
    },
    init: function init() {
      var swiper = this;

      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) {
        return;
      }

      swiper.hashNavigation.initialized = true;
      var hash = doc.location.hash.replace('#', '');

      if (hash) {
        var speed = 0;

        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
          var slide = swiper.slides.eq(i);
          var slideHash = slide.attr('data-hash') || slide.attr('data-history');

          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {
            var index = slide.index();
            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);
          }
        }
      }

      if (swiper.params.hashNavigation.watchState) {
        $(win).on('hashchange', swiper.hashNavigation.onHashCange);
      }
    },
    destroy: function destroy() {
      var swiper = this;

      if (swiper.params.hashNavigation.watchState) {
        $(win).off('hashchange', swiper.hashNavigation.onHashCange);
      }
    }
  };
  var HashNavigation$1 = {
    name: 'hash-navigation',
    params: {
      hashNavigation: {
        enabled: false,
        replaceState: false,
        watchState: false
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        hashNavigation: {
          initialized: false,
          init: HashNavigation.init.bind(swiper),
          destroy: HashNavigation.destroy.bind(swiper),
          setHash: HashNavigation.setHash.bind(swiper),
          onHashCange: HashNavigation.onHashCange.bind(swiper)
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;

        if (swiper.params.hashNavigation.enabled) {
          swiper.hashNavigation.init();
        }
      },
      destroy: function destroy() {
        var swiper = this;

        if (swiper.params.hashNavigation.enabled) {
          swiper.hashNavigation.destroy();
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;

        if (swiper.hashNavigation.initialized) {
          swiper.hashNavigation.setHash();
        }
      }
    }
  };
  /* eslint no-underscore-dangle: "off" */

  var Autoplay = {
    run: function run() {
      var swiper = this;
      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);
      var delay = swiper.params.autoplay.delay;

      if ($activeSlideEl.attr('data-swiper-autoplay')) {
        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;
      }

      swiper.autoplay.timeout = Utils.nextTick(function () {
        if (swiper.params.autoplay.reverseDirection) {
          if (swiper.params.loop) {
            swiper.loopFix();
            swiper.slidePrev(swiper.params.speed, true, true);
            swiper.emit('autoplay');
          } else if (!swiper.isBeginning) {
            swiper.slidePrev(swiper.params.speed, true, true);
            swiper.emit('autoplay');
          } else if (!swiper.params.autoplay.stopOnLastSlide) {
            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);
            swiper.emit('autoplay');
          } else {
            swiper.autoplay.stop();
          }
        } else if (swiper.params.loop) {
          swiper.loopFix();
          swiper.slideNext(swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else if (!swiper.isEnd) {
          swiper.slideNext(swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else if (!swiper.params.autoplay.stopOnLastSlide) {
          swiper.slideTo(0, swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else {
          swiper.autoplay.stop();
        }
      }, delay);
    },
    start: function start() {
      var swiper = this;

      if (typeof swiper.autoplay.timeout !== 'undefined') {
        return false;
      }

      if (swiper.autoplay.running) {
        return false;
      }

      swiper.autoplay.running = true;
      swiper.emit('autoplayStart');
      swiper.autoplay.run();
      return true;
    },
    stop: function stop() {
      var swiper = this;

      if (!swiper.autoplay.running) {
        return false;
      }

      if (typeof swiper.autoplay.timeout === 'undefined') {
        return false;
      }

      if (swiper.autoplay.timeout) {
        clearTimeout(swiper.autoplay.timeout);
        swiper.autoplay.timeout = undefined;
      }

      swiper.autoplay.running = false;
      swiper.emit('autoplayStop');
      return true;
    },
    pause: function pause(speed) {
      var swiper = this;

      if (!swiper.autoplay.running) {
        return;
      }

      if (swiper.autoplay.paused) {
        return;
      }

      if (swiper.autoplay.timeout) {
        clearTimeout(swiper.autoplay.timeout);
      }

      swiper.autoplay.paused = true;

      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
        swiper.autoplay.paused = false;
        swiper.autoplay.run();
      } else {
        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);
        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);
      }
    }
  };
  var Autoplay$1 = {
    name: 'autoplay',
    params: {
      autoplay: {
        enabled: false,
        delay: 3000,
        waitForTransition: true,
        disableOnInteraction: true,
        stopOnLastSlide: false,
        reverseDirection: false
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        autoplay: {
          running: false,
          paused: false,
          run: Autoplay.run.bind(swiper),
          start: Autoplay.start.bind(swiper),
          stop: Autoplay.stop.bind(swiper),
          pause: Autoplay.pause.bind(swiper),
          onTransitionEnd: function onTransitionEnd(e) {
            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) {
              return;
            }

            if (e.target !== this) {
              return;
            }

            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);
            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);
            swiper.autoplay.paused = false;

            if (!swiper.autoplay.running) {
              swiper.autoplay.stop();
            } else {
              swiper.autoplay.run();
            }
          }
        }
      });
    },
    on: {
      init: function init() {
        var swiper = this;

        if (swiper.params.autoplay.enabled) {
          swiper.autoplay.start();
        }
      },
      beforeTransitionStart: function beforeTransitionStart(speed, internal) {
        var swiper = this;

        if (swiper.autoplay.running) {
          if (internal || !swiper.params.autoplay.disableOnInteraction) {
            swiper.autoplay.pause(speed);
          } else {
            swiper.autoplay.stop();
          }
        }
      },
      sliderFirstMove: function sliderFirstMove() {
        var swiper = this;

        if (swiper.autoplay.running) {
          if (swiper.params.autoplay.disableOnInteraction) {
            swiper.autoplay.stop();
          } else {
            swiper.autoplay.pause();
          }
        }
      },
      destroy: function destroy() {
        var swiper = this;

        if (swiper.autoplay.running) {
          swiper.autoplay.stop();
        }
      }
    }
  };
  var Fade = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var slides = swiper.slides;

      for (var i = 0; i < slides.length; i += 1) {
        var $slideEl = swiper.slides.eq(i);
        var offset = $slideEl[0].swiperSlideOffset;
        var tx = -offset;

        if (!swiper.params.virtualTranslate) {
          tx -= swiper.translate;
        }

        var ty = 0;

        if (!swiper.isHorizontal()) {
          ty = tx;
          tx = 0;
        }

        var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
        $slideEl.css({
          opacity: slideOpacity
        }).transform("translate3d(" + tx + "px, " + ty + "px, 0px)");
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      var slides = swiper.slides;
      var $wrapperEl = swiper.$wrapperEl;
      slides.transition(duration);

      if (swiper.params.virtualTranslate && duration !== 0) {
        var eventTriggered = false;
        slides.transitionEnd(function () {
          if (eventTriggered) {
            return;
          }

          if (!swiper || swiper.destroyed) {
            return;
          }

          eventTriggered = true;
          swiper.animating = false;
          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];

          for (var i = 0; i < triggerEvents.length; i += 1) {
            $wrapperEl.trigger(triggerEvents[i]);
          }
        });
      }
    }
  };
  var EffectFade = {
    name: 'effect-fade',
    params: {
      fadeEffect: {
        crossFade: false
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        fadeEffect: {
          setTranslate: Fade.setTranslate.bind(swiper),
          setTransition: Fade.setTransition.bind(swiper)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;

        if (swiper.params.effect !== 'fade') {
          return;
        }

        swiper.classNames.push(swiper.params.containerModifierClass + "fade");
        var overwriteParams = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: true,
          spaceBetween: 0,
          virtualTranslate: true
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);
      },
      setTranslate: function setTranslate() {
        var swiper = this;

        if (swiper.params.effect !== 'fade') {
          return;
        }

        swiper.fadeEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;

        if (swiper.params.effect !== 'fade') {
          return;
        }

        swiper.fadeEffect.setTransition(duration);
      }
    }
  };
  var Cube = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var $el = swiper.$el;
      var $wrapperEl = swiper.$wrapperEl;
      var slides = swiper.slides;
      var swiperWidth = swiper.width;
      var swiperHeight = swiper.height;
      var rtl = swiper.rtlTranslate;
      var swiperSize = swiper.size;
      var params = swiper.params.cubeEffect;
      var isHorizontal = swiper.isHorizontal();
      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
      var wrapperRotate = 0;
      var $cubeShadowEl;

      if (params.shadow) {
        if (isHorizontal) {
          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');

          if ($cubeShadowEl.length === 0) {
            $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
            $wrapperEl.append($cubeShadowEl);
          }

          $cubeShadowEl.css({
            height: swiperWidth + "px"
          });
        } else {
          $cubeShadowEl = $el.find('.swiper-cube-shadow');

          if ($cubeShadowEl.length === 0) {
            $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
            $el.append($cubeShadowEl);
          }
        }
      }

      for (var i = 0; i < slides.length; i += 1) {
        var $slideEl = slides.eq(i);
        var slideIndex = i;

        if (isVirtual) {
          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);
        }

        var slideAngle = slideIndex * 90;
        var round = Math.floor(slideAngle / 360);

        if (rtl) {
          slideAngle = -slideAngle;
          round = Math.floor(-slideAngle / 360);
        }

        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
        var tx = 0;
        var ty = 0;
        var tz = 0;

        if (slideIndex % 4 === 0) {
          tx = -round * 4 * swiperSize;
          tz = 0;
        } else if ((slideIndex - 1) % 4 === 0) {
          tx = 0;
          tz = -round * 4 * swiperSize;
        } else if ((slideIndex - 2) % 4 === 0) {
          tx = swiperSize + round * 4 * swiperSize;
          tz = swiperSize;
        } else if ((slideIndex - 3) % 4 === 0) {
          tx = -swiperSize;
          tz = 3 * swiperSize + swiperSize * 4 * round;
        }

        if (rtl) {
          tx = -tx;
        }

        if (!isHorizontal) {
          ty = tx;
          tx = 0;
        }

        var transform = "rotateX(" + (isHorizontal ? 0 : -slideAngle) + "deg) rotateY(" + (isHorizontal ? slideAngle : 0) + "deg) translate3d(" + tx + "px, " + ty + "px, " + tz + "px)";

        if (progress <= 1 && progress > -1) {
          wrapperRotate = slideIndex * 90 + progress * 90;

          if (rtl) {
            wrapperRotate = -slideIndex * 90 - progress * 90;
          }
        }

        $slideEl.transform(transform);

        if (params.slideShadows) {
          // Set shadows
          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

          if (shadowBefore.length === 0) {
            shadowBefore = $("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'left' : 'top') + "\"></div>");
            $slideEl.append(shadowBefore);
          }

          if (shadowAfter.length === 0) {
            shadowAfter = $("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'right' : 'bottom') + "\"></div>");
            $slideEl.append(shadowAfter);
          }

          if (shadowBefore.length) {
            shadowBefore[0].style.opacity = Math.max(-progress, 0);
          }

          if (shadowAfter.length) {
            shadowAfter[0].style.opacity = Math.max(progress, 0);
          }
        }
      }

      $wrapperEl.css({
        '-webkit-transform-origin': "50% 50% -" + swiperSize / 2 + "px",
        '-moz-transform-origin': "50% 50% -" + swiperSize / 2 + "px",
        '-ms-transform-origin': "50% 50% -" + swiperSize / 2 + "px",
        'transform-origin': "50% 50% -" + swiperSize / 2 + "px"
      });

      if (params.shadow) {
        if (isHorizontal) {
          $cubeShadowEl.transform("translate3d(0px, " + (swiperWidth / 2 + params.shadowOffset) + "px, " + -swiperWidth / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + params.shadowScale + ")");
        } else {
          var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
          var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
          var scale1 = params.shadowScale;
          var scale2 = params.shadowScale / multiplier;
          var offset = params.shadowOffset;
          $cubeShadowEl.transform("scale3d(" + scale1 + ", 1, " + scale2 + ") translate3d(0px, " + (swiperHeight / 2 + offset) + "px, " + -swiperHeight / 2 / scale2 + "px) rotateX(-90deg)");
        }
      }

      var zFactor = Browser.isSafari || Browser.isUiWebView ? -swiperSize / 2 : 0;
      $wrapperEl.transform("translate3d(0px,0," + zFactor + "px) rotateX(" + (swiper.isHorizontal() ? 0 : wrapperRotate) + "deg) rotateY(" + (swiper.isHorizontal() ? -wrapperRotate : 0) + "deg)");
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      var $el = swiper.$el;
      var slides = swiper.slides;
      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);

      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
        $el.find('.swiper-cube-shadow').transition(duration);
      }
    }
  };
  var EffectCube = {
    name: 'effect-cube',
    params: {
      cubeEffect: {
        slideShadows: true,
        shadow: true,
        shadowOffset: 20,
        shadowScale: 0.94
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        cubeEffect: {
          setTranslate: Cube.setTranslate.bind(swiper),
          setTransition: Cube.setTransition.bind(swiper)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;

        if (swiper.params.effect !== 'cube') {
          return;
        }

        swiper.classNames.push(swiper.params.containerModifierClass + "cube");
        swiper.classNames.push(swiper.params.containerModifierClass + "3d");
        var overwriteParams = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: true,
          resistanceRatio: 0,
          spaceBetween: 0,
          centeredSlides: false,
          virtualTranslate: true
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);
      },
      setTranslate: function setTranslate() {
        var swiper = this;

        if (swiper.params.effect !== 'cube') {
          return;
        }

        swiper.cubeEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;

        if (swiper.params.effect !== 'cube') {
          return;
        }

        swiper.cubeEffect.setTransition(duration);
      }
    }
  };
  var Flip = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var slides = swiper.slides;
      var rtl = swiper.rtlTranslate;

      for (var i = 0; i < slides.length; i += 1) {
        var $slideEl = slides.eq(i);
        var progress = $slideEl[0].progress;

        if (swiper.params.flipEffect.limitRotation) {
          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
        }

        var offset = $slideEl[0].swiperSlideOffset;
        var rotate = -180 * progress;
        var rotateY = rotate;
        var rotateX = 0;
        var tx = -offset;
        var ty = 0;

        if (!swiper.isHorizontal()) {
          ty = tx;
          tx = 0;
          rotateX = -rotateY;
          rotateY = 0;
        } else if (rtl) {
          rotateY = -rotateY;
        }

        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;

        if (swiper.params.flipEffect.slideShadows) {
          // Set shadows
          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

          if (shadowBefore.length === 0) {
            shadowBefore = $("<div class=\"swiper-slide-shadow-" + (swiper.isHorizontal() ? 'left' : 'top') + "\"></div>");
            $slideEl.append(shadowBefore);
          }

          if (shadowAfter.length === 0) {
            shadowAfter = $("<div class=\"swiper-slide-shadow-" + (swiper.isHorizontal() ? 'right' : 'bottom') + "\"></div>");
            $slideEl.append(shadowAfter);
          }

          if (shadowBefore.length) {
            shadowBefore[0].style.opacity = Math.max(-progress, 0);
          }

          if (shadowAfter.length) {
            shadowAfter[0].style.opacity = Math.max(progress, 0);
          }
        }

        $slideEl.transform("translate3d(" + tx + "px, " + ty + "px, 0px) rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)");
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      var slides = swiper.slides;
      var activeIndex = swiper.activeIndex;
      var $wrapperEl = swiper.$wrapperEl;
      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);

      if (swiper.params.virtualTranslate && duration !== 0) {
        var eventTriggered = false; // eslint-disable-next-line

        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {
          if (eventTriggered) {
            return;
          }

          if (!swiper || swiper.destroyed) {
            return;
          } // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;


          eventTriggered = true;
          swiper.animating = false;
          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];

          for (var i = 0; i < triggerEvents.length; i += 1) {
            $wrapperEl.trigger(triggerEvents[i]);
          }
        });
      }
    }
  };
  var EffectFlip = {
    name: 'effect-flip',
    params: {
      flipEffect: {
        slideShadows: true,
        limitRotation: true
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        flipEffect: {
          setTranslate: Flip.setTranslate.bind(swiper),
          setTransition: Flip.setTransition.bind(swiper)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;

        if (swiper.params.effect !== 'flip') {
          return;
        }

        swiper.classNames.push(swiper.params.containerModifierClass + "flip");
        swiper.classNames.push(swiper.params.containerModifierClass + "3d");
        var overwriteParams = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: true,
          spaceBetween: 0,
          virtualTranslate: true
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);
      },
      setTranslate: function setTranslate() {
        var swiper = this;

        if (swiper.params.effect !== 'flip') {
          return;
        }

        swiper.flipEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;

        if (swiper.params.effect !== 'flip') {
          return;
        }

        swiper.flipEffect.setTransition(duration);
      }
    }
  };
  var Coverflow = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var swiperWidth = swiper.width;
      var swiperHeight = swiper.height;
      var slides = swiper.slides;
      var $wrapperEl = swiper.$wrapperEl;
      var slidesSizesGrid = swiper.slidesSizesGrid;
      var params = swiper.params.coverflowEffect;
      var isHorizontal = swiper.isHorizontal();
      var transform = swiper.translate;
      var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;
      var rotate = isHorizontal ? params.rotate : -params.rotate;
      var translate = params.depth; // Each slide offset from center

      for (var i = 0, length = slides.length; i < length; i += 1) {
        var $slideEl = slides.eq(i);
        var slideSize = slidesSizesGrid[i];
        var slideOffset = $slideEl[0].swiperSlideOffset;
        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;
        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0

        var translateZ = -translate * Math.abs(offsetMultiplier);
        var translateY = isHorizontal ? 0 : params.stretch * offsetMultiplier;
        var translateX = isHorizontal ? params.stretch * offsetMultiplier : 0; // Fix for ultra small values

        if (Math.abs(translateX) < 0.001) {
          translateX = 0;
        }

        if (Math.abs(translateY) < 0.001) {
          translateY = 0;
        }

        if (Math.abs(translateZ) < 0.001) {
          translateZ = 0;
        }

        if (Math.abs(rotateY) < 0.001) {
          rotateY = 0;
        }

        if (Math.abs(rotateX) < 0.001) {
          rotateX = 0;
        }

        var slideTransform = "translate3d(" + translateX + "px," + translateY + "px," + translateZ + "px)  rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)";
        $slideEl.transform(slideTransform);
        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;

        if (params.slideShadows) {
          // Set shadows
          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

          if ($shadowBeforeEl.length === 0) {
            $shadowBeforeEl = $("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'left' : 'top') + "\"></div>");
            $slideEl.append($shadowBeforeEl);
          }

          if ($shadowAfterEl.length === 0) {
            $shadowAfterEl = $("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'right' : 'bottom') + "\"></div>");
            $slideEl.append($shadowAfterEl);
          }

          if ($shadowBeforeEl.length) {
            $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
          }

          if ($shadowAfterEl.length) {
            $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
          }
        }
      } // Set correct perspective for IE10


      if (Support.pointerEvents || Support.prefixedPointerEvents) {
        var ws = $wrapperEl[0].style;
        ws.perspectiveOrigin = center + "px 50%";
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
    }
  };
  var EffectCoverflow = {
    name: 'effect-coverflow',
    params: {
      coverflowEffect: {
        rotate: 50,
        stretch: 0,
        depth: 100,
        modifier: 1,
        slideShadows: true
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        coverflowEffect: {
          setTranslate: Coverflow.setTranslate.bind(swiper),
          setTransition: Coverflow.setTransition.bind(swiper)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;

        if (swiper.params.effect !== 'coverflow') {
          return;
        }

        swiper.classNames.push(swiper.params.containerModifierClass + "coverflow");
        swiper.classNames.push(swiper.params.containerModifierClass + "3d");
        swiper.params.watchSlidesProgress = true;
        swiper.originalParams.watchSlidesProgress = true;
      },
      setTranslate: function setTranslate() {
        var swiper = this;

        if (swiper.params.effect !== 'coverflow') {
          return;
        }

        swiper.coverflowEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;

        if (swiper.params.effect !== 'coverflow') {
          return;
        }

        swiper.coverflowEffect.setTransition(duration);
      }
    }
  };
  var Thumbs = {
    init: function init() {
      var swiper = this;
      var ref = swiper.params;
      var thumbsParams = ref.thumbs;
      var SwiperClass = swiper.constructor;

      if (thumbsParams.swiper instanceof SwiperClass) {
        swiper.thumbs.swiper = thumbsParams.swiper;
        Utils.extend(swiper.thumbs.swiper.originalParams, {
          watchSlidesProgress: true,
          slideToClickedSlide: false
        });
        Utils.extend(swiper.thumbs.swiper.params, {
          watchSlidesProgress: true,
          slideToClickedSlide: false
        });
      } else if (Utils.isObject(thumbsParams.swiper)) {
        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {
          watchSlidesVisibility: true,
          watchSlidesProgress: true,
          slideToClickedSlide: false
        }));
        swiper.thumbs.swiperCreated = true;
      }

      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);
      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);
    },
    onThumbClick: function onThumbClick() {
      var swiper = this;
      var thumbsSwiper = swiper.thumbs.swiper;

      if (!thumbsSwiper) {
        return;
      }

      var clickedIndex = thumbsSwiper.clickedIndex;

      if (typeof clickedIndex === 'undefined' || clickedIndex === null) {
        return;
      }

      var slideToIndex;

      if (thumbsSwiper.params.loop) {
        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);
      } else {
        slideToIndex = clickedIndex;
      }

      if (swiper.params.loop) {
        var currentIndex = swiper.activeIndex;

        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {
          swiper.loopFix(); // eslint-disable-next-line

          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
          currentIndex = swiper.activeIndex;
        }

        var prevIndex = swiper.slides.eq(currentIndex).prevAll("[data-swiper-slide-index=\"" + slideToIndex + "\"]").eq(0).index();
        var nextIndex = swiper.slides.eq(currentIndex).nextAll("[data-swiper-slide-index=\"" + slideToIndex + "\"]").eq(0).index();

        if (typeof prevIndex === 'undefined') {
          slideToIndex = nextIndex;
        } else if (typeof nextIndex === 'undefined') {
          slideToIndex = prevIndex;
        } else if (nextIndex - currentIndex < currentIndex - prevIndex) {
          slideToIndex = nextIndex;
        } else {
          slideToIndex = prevIndex;
        }
      }

      swiper.slideTo(slideToIndex);
    },
    update: function update(initial) {
      var swiper = this;
      var thumbsSwiper = swiper.thumbs.swiper;

      if (!thumbsSwiper) {
        return;
      }

      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;

      if (swiper.realIndex !== thumbsSwiper.realIndex) {
        var currentThumbsIndex = thumbsSwiper.activeIndex;
        var newThumbsIndex;

        if (thumbsSwiper.params.loop) {
          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {
            thumbsSwiper.loopFix(); // eslint-disable-next-line

            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;
            currentThumbsIndex = thumbsSwiper.activeIndex;
          } // Find actual thumbs index to slide to


          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll("[data-swiper-slide-index=\"" + swiper.realIndex + "\"]").eq(0).index();
          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll("[data-swiper-slide-index=\"" + swiper.realIndex + "\"]").eq(0).index();

          if (typeof prevThumbsIndex === 'undefined') {
            newThumbsIndex = nextThumbsIndex;
          } else if (typeof nextThumbsIndex === 'undefined') {
            newThumbsIndex = prevThumbsIndex;
          } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {
            newThumbsIndex = nextThumbsIndex;
          } else {
            newThumbsIndex = prevThumbsIndex;
          }
        } else {
          newThumbsIndex = swiper.realIndex;
        }

        if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {
          if (thumbsSwiper.params.centeredSlides) {
            if (newThumbsIndex > currentThumbsIndex) {
              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;
            } else {
              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;
            }
          } else if (newThumbsIndex > currentThumbsIndex) {
            newThumbsIndex = newThumbsIndex - slidesPerView + 1;
          }

          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);
        }
      } // Activate thumbs


      var thumbsToActivate = 1;
      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;

      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {
        thumbsToActivate = swiper.params.slidesPerView;
      }

      thumbsSwiper.slides.removeClass(thumbActiveClass);

      if (thumbsSwiper.params.loop) {
        for (var i = 0; i < thumbsToActivate; i += 1) {
          thumbsSwiper.$wrapperEl.children("[data-swiper-slide-index=\"" + (swiper.realIndex + i) + "\"]").addClass(thumbActiveClass);
        }
      } else {
        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {
          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);
        }
      }
    }
  };
  var Thumbs$1 = {
    name: 'thumbs',
    params: {
      thumbs: {
        swiper: null,
        slideThumbActiveClass: 'swiper-slide-thumb-active',
        thumbsContainerClass: 'swiper-container-thumbs'
      }
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        thumbs: {
          swiper: null,
          init: Thumbs.init.bind(swiper),
          update: Thumbs.update.bind(swiper),
          onThumbClick: Thumbs.onThumbClick.bind(swiper)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        var ref = swiper.params;
        var thumbs = ref.thumbs;

        if (!thumbs || !thumbs.swiper) {
          return;
        }

        swiper.thumbs.init();
        swiper.thumbs.update(true);
      },
      slideChange: function slideChange() {
        var swiper = this;

        if (!swiper.thumbs.swiper) {
          return;
        }

        swiper.thumbs.update();
      },
      update: function update() {
        var swiper = this;

        if (!swiper.thumbs.swiper) {
          return;
        }

        swiper.thumbs.update();
      },
      resize: function resize() {
        var swiper = this;

        if (!swiper.thumbs.swiper) {
          return;
        }

        swiper.thumbs.update();
      },
      observerUpdate: function observerUpdate() {
        var swiper = this;

        if (!swiper.thumbs.swiper) {
          return;
        }

        swiper.thumbs.update();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        var thumbsSwiper = swiper.thumbs.swiper;

        if (!thumbsSwiper) {
          return;
        }

        thumbsSwiper.setTransition(duration);
      },
      beforeDestroy: function beforeDestroy() {
        var swiper = this;
        var thumbsSwiper = swiper.thumbs.swiper;

        if (!thumbsSwiper) {
          return;
        }

        if (swiper.thumbs.swiperCreated && thumbsSwiper) {
          thumbsSwiper.destroy();
        }
      }
    }
  }; // Swiper Class

  var components = [Device$1, Support$1, Browser$1, Resize, Observer$1, Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];

  if (typeof Swiper.use === 'undefined') {
    Swiper.use = Swiper.Class.use;
    Swiper.installModule = Swiper.Class.installModule;
  }

  Swiper.use(components);
  return Swiper;
});

/***/ }),
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(620);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(63)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../css-loader/index.js??ref--4-1!./boosted.css", function() {
			var newContent = require("!!../../../css-loader/index.js??ref--4-1!./boosted.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(621);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(63)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../css-loader/index.js??ref--4-1!./orangeHelvetica.css", function() {
			var newContent = require("!!../../../css-loader/index.js??ref--4-1!./orangeHelvetica.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(622);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(63)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../css-loader/index.js??ref--4-1!./orangeIcons.css", function() {
			var newContent = require("!!../../../css-loader/index.js??ref--4-1!./orangeIcons.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(623);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(63)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../css-loader/index.js??ref--4-1!./prism.css", function() {
			var newContent = require("!!../../css-loader/index.js??ref--4-1!./prism.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(624);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(63)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../css-loader/index.js??ref--4-1!./swiper.css", function() {
			var newContent = require("!!../../../css-loader/index.js??ref--4-1!./swiper.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// For vendors for example jQuery, Lodash, angular2-jwt just import them here unless you plan on
// chunking vendors files for async loading. You would need to import the async loaded vendors
// at the entry point of the async loaded file. Also see custom-typings.d.ts as you also need to
// run `typings install x` where `x` is your module
Object.defineProperty(exports, "__esModule", { value: true });
// Angular 2
__webpack_require__(50);
__webpack_require__(104);
__webpack_require__(0);
__webpack_require__(10);
__webpack_require__(34);
__webpack_require__(244);
__webpack_require__(103);
// AngularClass
__webpack_require__(245);
// RxJS
__webpack_require__(263);
__webpack_require__(264);
// Ng-bootstrap
__webpack_require__(81);
__webpack_require__(273);
// Swiper
__webpack_require__(274);
__webpack_require__(265);
// Boosted
__webpack_require__(271);
__webpack_require__(272);
__webpack_require__(270);
if (false) {
    // Production
}
else {
    // Development
}


/***/ }),
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports,"__esModule",{value:true});exports.preserveWhitespacesDefault=preserveWhitespacesDefault;exports.isLoweredSymbol=isLoweredSymbol;exports.createLoweredSymbol=createLoweredSymbol;exports.collectExternalReferences=collectExternalReferences;exports.getParseErrors=getParseErrors;exports.isSyntaxError=isSyntaxError;exports.syntaxError=syntaxError;exports.templateVisitAll=templateVisitAll;exports.sanitizeIdentifier=sanitizeIdentifier;exports.identifierName=identifierName;exports.identifierModuleUrl=identifierModuleUrl;exports.viewClassName=viewClassName;exports.rendererTypeName=rendererTypeName;exports.hostViewClassName=hostViewClassName;exports.componentFactoryName=componentFactoryName;exports.tokenName=tokenName;exports.tokenReference=tokenReference;exports.flatten=flatten;exports.templateSourceUrl=templateSourceUrl;exports.sharedStylesheetJitUrl=sharedStylesheetJitUrl;exports.ngModuleJitUrl=ngModuleJitUrl;exports.templateJitUrl=templateJitUrl;exports.createAotUrlResolver=createAotUrlResolver;exports.createAotCompiler=createAotCompiler;exports.analyzeNgModules=analyzeNgModules;exports.analyzeAndValidateNgModules=analyzeAndValidateNgModules;exports.analyzeFile=analyzeFile;exports.analyzeFileForInjectables=analyzeFileForInjectables;exports.mergeAnalyzedFiles=mergeAnalyzedFiles;exports.toTypeScript=toTypeScript;exports.formattedError=formattedError;exports.isFormattedError=isFormattedError;exports.unescapeIdentifier=unescapeIdentifier;exports.unwrapResolvedMetadata=unwrapResolvedMetadata;exports.createUrlResolverWithoutPackagePrefix=createUrlResolverWithoutPackagePrefix;exports.createOfflineCompileUrlResolver=createOfflineCompileUrlResolver;exports.getUrlScheme=getUrlScheme;exports.visitAstChildren=visitAstChildren;exports.isIdentifier=isIdentifier;exports.isQuote=isQuote;exports.visitAll=visitAll;exports.findNode=findNode;exports.getHtmlTagDefinition=getHtmlTagDefinition;exports.splitNsName=splitNsName;exports.isNgContainer=isNgContainer;exports.isNgContent=isNgContent;exports.isNgTemplate=isNgTemplate;exports.getNsPrefix=getNsPrefix;exports.mergeNsAndName=mergeNsAndName;exports.debugOutputAstAsTypeScript=debugOutputAstAsTypeScript;exports.typeSourceSpan=typeSourceSpan;exports.splitClasses=splitClasses;exports.createElementCssSelector=createElementCssSelector;exports.removeSummaryDuplicates=removeSummaryDuplicates;exports.Xmb=exports.Xliff2=exports.Xliff=exports.Serializer=exports.MessageBundle=exports.I18NHtmlParser=exports.Extractor=exports.ElementSchemaRegistry=exports.ResourceLoader=exports.UrlResolver=exports.CompileReflector=exports.JitSummaryResolver=exports.SummaryResolver=exports.AstPath=exports.AotSummaryResolver=exports.StaticSymbolResolver=exports.ResolvedStaticSymbol=exports.StaticSymbolCache=exports.StaticSymbol=exports.StaticReflector=exports.GeneratedFile=exports.AotCompiler=exports.ProviderMeta=exports.TransitiveCompileNgModuleMetadata=exports.CompileNgModuleMetadata=exports.CompileShallowModuleMetadata=exports.CompilePipeMetadata=exports.CompileDirectiveMetadata=exports.CompileTemplateMetadata=exports.CompileStylesheetMetadata=exports.CompileSummaryKind=exports.RecursiveTemplateAstVisitor=exports.NullTemplateVisitor=exports.PropertyBindingType=exports.NgContentAst=exports.ProviderAstType=exports.ProviderAst=exports.DirectiveAst=exports.BoundDirectivePropertyAst=exports.EmbeddedTemplateAst=exports.ElementAst=exports.VariableAst=exports.ReferenceAst=exports.BoundEventAst=exports.BoundElementPropertyAst=exports.AttrAst=exports.BoundTextAst=exports.TextAst=exports.VERSION=exports.Version=exports.ViewCompiler=exports.EmitterVisitorContext=exports.Statement=exports.StmtModifier=exports.WriteVarExpr=exports.WritePropExpr=exports.WriteKeyExpr=exports.TryCatchStmt=exports.ThrowStmt=exports.ReturnStatement=exports.ReadVarExpr=exports.ReadPropExpr=exports.ReadKeyExpr=exports.NotExpr=exports.LiteralMapExpr=exports.LiteralExpr=exports.LiteralArrayExpr=exports.JSDocCommentStmt=exports.InvokeMethodExpr=exports.InvokeFunctionExpr=exports.InstantiateExpr=exports.IfStmt=exports.FunctionExpr=exports.ExternalReference=exports.ExternalExpr=exports.ExpressionStatement=exports.DeclareVarStmt=exports.DeclareFunctionStmt=exports.ConditionalExpr=exports.CommentStmt=exports.CommaExpr=exports.ClassStmt=exports.ClassMethod=exports.ClassField=exports.CastExpr=exports.BuiltinVar=exports.BuiltinMethod=exports.BinaryOperatorExpr=exports.BinaryOperator=exports.AssertNotNull=exports.NgModuleCompiler=exports.InterpolationConfig=exports.DEFAULT_INTERPOLATION_CONFIG=exports.NgModuleResolver=exports.PipeResolver=exports.DirectiveResolver=exports.JitCompiler=exports.Identifiers=exports.CompilerConfig=exports.core=void 0;exports.TemplateParser=exports.TemplateParseResult=exports.TemplateParseError=exports.StyleCompiler=exports.CompiledStylesheet=exports.StylesCompileDependency=exports.SelectorContext=exports.SelectorListContext=exports.SelectorMatcher=exports.CssSelector=exports.DomElementSchemaRegistry=exports.ParseError=exports.ParseErrorLevel=exports.ParseSourceSpan=exports.ParseSourceFile=exports.ParseLocation=exports.TypeScriptEmitter=exports.NGSP_UNICODE=exports.NAMED_ENTITIES=exports.TagContentType=exports.HtmlTagDefinition=exports.TreeError=exports.ParseTreeResult=exports.HtmlParser=exports.RecursiveVisitor=exports.Comment=exports.Element=exports.Attribute=exports.ExpansionCase=exports.Expansion=exports.Text=exports.CompileMetadataResolver=exports.ERROR_COMPONENT_TYPE=exports._ParseAST=exports.Parser=exports.TemplateBindingParseResult=exports.SplitInterpolation=exports.EOF=exports.Token=exports.Lexer=exports.TokenType=exports.AstMemoryEfficientTransformer=exports.AstTransformer=exports.RecursiveAstVisitor=exports.NullAstVisitor=exports.TemplateBinding=exports.ASTWithSource=exports.FunctionCall=exports.SafeMethodCall=exports.MethodCall=exports.NonNullAssert=exports.PrefixNot=exports.Binary=exports.Interpolation=exports.LiteralMap=exports.LiteralArray=exports.LiteralPrimitive=exports.BindingPipe=exports.KeyedWrite=exports.KeyedRead=exports.SafePropertyRead=exports.PropertyWrite=exports.PropertyRead=exports.Conditional=exports.Chain=exports.ImplicitReceiver=exports.EmptyExpr=exports.Quote=exports.AST=exports.ParseSpan=exports.ParserError=exports.DirectiveNormalizer=exports.Xtb=void 0;var _tslib=__webpack_require__(1);function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var createInject=makeMetadataFactory('Inject',function(token){return{token:token};});var createInjectionToken=makeMetadataFactory('InjectionToken',function(desc){return{_desc:desc,ngInjectableDef:undefined};});var createAttribute=makeMetadataFactory('Attribute',function(attributeName){return{attributeName:attributeName};});var createContentChildren=makeMetadataFactory('ContentChildren',function(selector,data){if(data===void 0){data={};}return(0,_tslib.__assign)({selector:selector,first:false,isViewQuery:false,descendants:false},data);});var createContentChild=makeMetadataFactory('ContentChild',function(selector,data){if(data===void 0){data={};}return(0,_tslib.__assign)({selector:selector,first:true,isViewQuery:false,descendants:true},data);});var createViewChildren=makeMetadataFactory('ViewChildren',function(selector,data){if(data===void 0){data={};}return(0,_tslib.__assign)({selector:selector,first:false,isViewQuery:true,descendants:true},data);});var createViewChild=makeMetadataFactory('ViewChild',function(selector,data){return(0,_tslib.__assign)({selector:selector,first:true,isViewQuery:true,descendants:true},data);});var createDirective=makeMetadataFactory('Directive',function(dir){if(dir===void 0){dir={};}return dir;});var ViewEncapsulation;(function(ViewEncapsulation){ViewEncapsulation[ViewEncapsulation["Emulated"]=0]="Emulated";ViewEncapsulation[ViewEncapsulation["Native"]=1]="Native";ViewEncapsulation[ViewEncapsulation["None"]=2]="None";})(ViewEncapsulation||(ViewEncapsulation={}));var ChangeDetectionStrategy;(function(ChangeDetectionStrategy){ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"]=0]="OnPush";ChangeDetectionStrategy[ChangeDetectionStrategy["Default"]=1]="Default";})(ChangeDetectionStrategy||(ChangeDetectionStrategy={}));var createComponent=makeMetadataFactory('Component',function(c){if(c===void 0){c={};}return(0,_tslib.__assign)({changeDetection:ChangeDetectionStrategy.Default},c);});var createPipe=makeMetadataFactory('Pipe',function(p){return(0,_tslib.__assign)({pure:true},p);});var createInput=makeMetadataFactory('Input',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});var createOutput=makeMetadataFactory('Output',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});var createHostBinding=makeMetadataFactory('HostBinding',function(hostPropertyName){return{hostPropertyName:hostPropertyName};});var createHostListener=makeMetadataFactory('HostListener',function(eventName,args){return{eventName:eventName,args:args};});var createNgModule=makeMetadataFactory('NgModule',function(ngModule){return ngModule;});var createInjectable=makeMetadataFactory('Injectable',function(injectable){if(injectable===void 0){injectable={};}return injectable;});var CUSTOM_ELEMENTS_SCHEMA={name:'custom-elements'};var NO_ERRORS_SCHEMA={name:'no-errors-schema'};var createOptional=makeMetadataFactory('Optional');var createSelf=makeMetadataFactory('Self');var createSkipSelf=makeMetadataFactory('SkipSelf');var createHost=makeMetadataFactory('Host');var Type=Function;var SecurityContext;(function(SecurityContext){SecurityContext[SecurityContext["NONE"]=0]="NONE";SecurityContext[SecurityContext["HTML"]=1]="HTML";SecurityContext[SecurityContext["STYLE"]=2]="STYLE";SecurityContext[SecurityContext["SCRIPT"]=3]="SCRIPT";SecurityContext[SecurityContext["URL"]=4]="URL";SecurityContext[SecurityContext["RESOURCE_URL"]=5]="RESOURCE_URL";})(SecurityContext||(SecurityContext={}));var MissingTranslationStrategy;(function(MissingTranslationStrategy){MissingTranslationStrategy[MissingTranslationStrategy["Error"]=0]="Error";MissingTranslationStrategy[MissingTranslationStrategy["Warning"]=1]="Warning";MissingTranslationStrategy[MissingTranslationStrategy["Ignore"]=2]="Ignore";})(MissingTranslationStrategy||(MissingTranslationStrategy={}));function makeMetadataFactory(name,props){var factory=function factory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var values=props?props.apply(void 0,(0,_tslib.__spread)(args)):{};return(0,_tslib.__assign)({ngMetadataName:name},values);};factory.isTypeOf=function(obj){return obj&&obj.ngMetadataName===name;};factory.ngMetadataName=name;return factory;}var core=Object.freeze({createInject:createInject,createInjectionToken:createInjectionToken,createAttribute:createAttribute,createContentChildren:createContentChildren,createContentChild:createContentChild,createViewChildren:createViewChildren,createViewChild:createViewChild,createDirective:createDirective,get ViewEncapsulation(){return ViewEncapsulation;},get ChangeDetectionStrategy(){return ChangeDetectionStrategy;},createComponent:createComponent,createPipe:createPipe,createInput:createInput,createOutput:createOutput,createHostBinding:createHostBinding,createHostListener:createHostListener,createNgModule:createNgModule,createInjectable:createInjectable,CUSTOM_ELEMENTS_SCHEMA:CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA:NO_ERRORS_SCHEMA,createOptional:createOptional,createSelf:createSelf,createSkipSelf:createSkipSelf,createHost:createHost,Type:Type,get SecurityContext(){return SecurityContext;},get MissingTranslationStrategy(){return MissingTranslationStrategy;}});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.core=core;var DASH_CASE_REGEXP=/-+([a-z0-9])/g;function dashCaseToCamelCase(input){return input.replace(DASH_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return m[1].toUpperCase();});}function splitAtColon(input,defaultValues){return _splitAt(input,':',defaultValues);}function splitAtPeriod(input,defaultValues){return _splitAt(input,'.',defaultValues);}function _splitAt(input,character,defaultValues){var characterIndex=input.indexOf(character);if(characterIndex==-1)return defaultValues;return[input.slice(0,characterIndex).trim(),input.slice(characterIndex+1).trim()];}function visitValue(value,visitor,context){if(Array.isArray(value)){return visitor.visitArray(value,context);}if(isStrictStringMap(value)){return visitor.visitStringMap(value,context);}if(value==null||typeof value=='string'||typeof value=='number'||typeof value=='boolean'){return visitor.visitPrimitive(value,context);}return visitor.visitOther(value,context);}function isDefined(val){return val!==null&&val!==undefined;}function noUndefined(val){return val===undefined?null:val;}var ValueTransformer=/** @class */function(){function ValueTransformer(){}ValueTransformer.prototype.visitArray=function(arr,context){var _this=this;return arr.map(function(value){return visitValue(value,_this,context);});};ValueTransformer.prototype.visitStringMap=function(map,context){var _this=this;var result={};Object.keys(map).forEach(function(key){result[key]=visitValue(map[key],_this,context);});return result;};ValueTransformer.prototype.visitPrimitive=function(value,context){return value;};ValueTransformer.prototype.visitOther=function(value,context){return value;};return ValueTransformer;}();var SyncAsync={assertSync:function assertSync(value){if(isPromise(value)){throw new Error("Illegal state: value cannot be a promise");}return value;},then:function then(value,cb){return isPromise(value)?value.then(cb):cb(value);},all:function all(syncAsyncValues){return syncAsyncValues.some(isPromise)?Promise.all(syncAsyncValues):syncAsyncValues;}};function error(msg){throw new Error("Internal Error: "+msg);}function syntaxError(msg,parseErrors){var error=Error(msg);error[ERROR_SYNTAX_ERROR]=true;if(parseErrors)error[ERROR_PARSE_ERRORS]=parseErrors;return error;}var ERROR_SYNTAX_ERROR='ngSyntaxError';var ERROR_PARSE_ERRORS='ngParseErrors';function isSyntaxError(error){return error[ERROR_SYNTAX_ERROR];}function getParseErrors(error){return error[ERROR_PARSE_ERRORS]||[];}// Escape characters that have a special meaning in Regular Expressions
function escapeRegExp(s){return s.replace(/([.*+?^=!:${}()|[\]\/\\])/g,'\\$1');}var STRING_MAP_PROTO=Object.getPrototypeOf({});function isStrictStringMap(obj){return _typeof(obj)==='object'&&obj!==null&&Object.getPrototypeOf(obj)===STRING_MAP_PROTO;}function utf8Encode(str){var encoded='';for(var index=0;index<str.length;index++){var codePoint=str.charCodeAt(index);// decode surrogate
// see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
if(codePoint>=0xd800&&codePoint<=0xdbff&&str.length>index+1){var low=str.charCodeAt(index+1);if(low>=0xdc00&&low<=0xdfff){index++;codePoint=(codePoint-0xd800<<10)+low-0xdc00+0x10000;}}if(codePoint<=0x7f){encoded+=String.fromCharCode(codePoint);}else if(codePoint<=0x7ff){encoded+=String.fromCharCode(codePoint>>6&0x1F|0xc0,codePoint&0x3f|0x80);}else if(codePoint<=0xffff){encoded+=String.fromCharCode(codePoint>>12|0xe0,codePoint>>6&0x3f|0x80,codePoint&0x3f|0x80);}else if(codePoint<=0x1fffff){encoded+=String.fromCharCode(codePoint>>18&0x07|0xf0,codePoint>>12&0x3f|0x80,codePoint>>6&0x3f|0x80,codePoint&0x3f|0x80);}}return encoded;}function stringify(token){if(typeof token==='string'){return token;}if(token instanceof Array){return'['+token.map(stringify).join(', ')+']';}if(token==null){return''+token;}if(token.overriddenName){return""+token.overriddenName;}if(token.name){return""+token.name;}// WARNING: do not try to `JSON.stringify(token)` here
// see https://github.com/angular/angular/issues/23440
var res=token.toString();if(res==null){return''+res;}var newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * Lazily retrieves the reference value from a forwardRef.
 */function resolveForwardRef(type){if(typeof type==='function'&&type.hasOwnProperty('__forward_ref__')){return type();}else{return type;}}/**
 * Determine if the argument is shaped like a Promise
 */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}var Version=/** @class */function(){function Version(full){this.full=full;var splits=full.split('.');this.major=splits[0];this.minor=splits[1];this.patch=splits.slice(2).join('.');}return Version;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @module
 * @description
 * Entry point for all public APIs of the common package.
 */ /**
 *
 */exports.Version=Version;var VERSION=new Version('6.0.0');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A segment of text within the template.
 */exports.VERSION=VERSION;var TextAst=/** @class */function(){function TextAst(value,ngContentIndex,sourceSpan){this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}TextAst.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return TextAst;}();/**
 * A bound expression within the text of a template.
 */exports.TextAst=TextAst;var BoundTextAst=/** @class */function(){function BoundTextAst(value,ngContentIndex,sourceSpan){this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}BoundTextAst.prototype.visit=function(visitor,context){return visitor.visitBoundText(this,context);};return BoundTextAst;}();/**
 * A plain attribute on an element.
 */exports.BoundTextAst=BoundTextAst;var AttrAst=/** @class */function(){function AttrAst(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}AttrAst.prototype.visit=function(visitor,context){return visitor.visitAttr(this,context);};return AttrAst;}();/**
 * A binding for an element property (e.g. `[property]="expression"`) or an animation trigger (e.g.
 * `[@trigger]="stateExp"`)
 */exports.AttrAst=AttrAst;var BoundElementPropertyAst=/** @class */function(){function BoundElementPropertyAst(name,type,securityContext,value,unit,sourceSpan){this.name=name;this.type=type;this.securityContext=securityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;this.isAnimation=this.type===PropertyBindingType.Animation;}BoundElementPropertyAst.prototype.visit=function(visitor,context){return visitor.visitElementProperty(this,context);};return BoundElementPropertyAst;}();/**
 * A binding for an element event (e.g. `(event)="handler()"`) or an animation trigger event (e.g.
 * `(@trigger.phase)="callback($event)"`).
 */exports.BoundElementPropertyAst=BoundElementPropertyAst;var BoundEventAst=/** @class */function(){function BoundEventAst(name,target,phase,handler,sourceSpan){this.name=name;this.target=target;this.phase=phase;this.handler=handler;this.sourceSpan=sourceSpan;this.fullName=BoundEventAst.calcFullName(this.name,this.target,this.phase);this.isAnimation=!!this.phase;}BoundEventAst.calcFullName=function(name,target,phase){if(target){return target+":"+name;}else if(phase){return"@"+name+"."+phase;}else{return name;}};BoundEventAst.prototype.visit=function(visitor,context){return visitor.visitEvent(this,context);};return BoundEventAst;}();/**
 * A reference declaration on an element (e.g. `let someName="expression"`).
 */exports.BoundEventAst=BoundEventAst;var ReferenceAst=/** @class */function(){function ReferenceAst(name,value,originalValue,sourceSpan){this.name=name;this.value=value;this.originalValue=originalValue;this.sourceSpan=sourceSpan;}ReferenceAst.prototype.visit=function(visitor,context){return visitor.visitReference(this,context);};return ReferenceAst;}();/**
 * A variable declaration on a <ng-template> (e.g. `var-someName="someLocalName"`).
 */exports.ReferenceAst=ReferenceAst;var VariableAst=/** @class */function(){function VariableAst(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}VariableAst.prototype.visit=function(visitor,context){return visitor.visitVariable(this,context);};return VariableAst;}();/**
 * An element declaration in a template.
 */exports.VariableAst=VariableAst;var ElementAst=/** @class */function(){function ElementAst(name,attrs,inputs,outputs,references,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan,endSourceSpan){this.name=name;this.attrs=attrs;this.inputs=inputs;this.outputs=outputs;this.references=references;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;this.endSourceSpan=endSourceSpan;}ElementAst.prototype.visit=function(visitor,context){return visitor.visitElement(this,context);};return ElementAst;}();/**
 * A `<ng-template>` element included in an Angular template.
 */exports.ElementAst=ElementAst;var EmbeddedTemplateAst=/** @class */function(){function EmbeddedTemplateAst(attrs,outputs,references,variables,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan){this.attrs=attrs;this.outputs=outputs;this.references=references;this.variables=variables;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}EmbeddedTemplateAst.prototype.visit=function(visitor,context){return visitor.visitEmbeddedTemplate(this,context);};return EmbeddedTemplateAst;}();/**
 * A directive property with a bound value (e.g. `*ngIf="condition").
 */exports.EmbeddedTemplateAst=EmbeddedTemplateAst;var BoundDirectivePropertyAst=/** @class */function(){function BoundDirectivePropertyAst(directiveName,templateName,value,sourceSpan){this.directiveName=directiveName;this.templateName=templateName;this.value=value;this.sourceSpan=sourceSpan;}BoundDirectivePropertyAst.prototype.visit=function(visitor,context){return visitor.visitDirectiveProperty(this,context);};return BoundDirectivePropertyAst;}();/**
 * A directive declared on an element.
 */exports.BoundDirectivePropertyAst=BoundDirectivePropertyAst;var DirectiveAst=/** @class */function(){function DirectiveAst(directive,inputs,hostProperties,hostEvents,contentQueryStartId,sourceSpan){this.directive=directive;this.inputs=inputs;this.hostProperties=hostProperties;this.hostEvents=hostEvents;this.contentQueryStartId=contentQueryStartId;this.sourceSpan=sourceSpan;}DirectiveAst.prototype.visit=function(visitor,context){return visitor.visitDirective(this,context);};return DirectiveAst;}();/**
 * A provider declared on an element
 */exports.DirectiveAst=DirectiveAst;var ProviderAst=/** @class */function(){function ProviderAst(token,multiProvider,eager,providers,providerType,lifecycleHooks,sourceSpan,isModule){this.token=token;this.multiProvider=multiProvider;this.eager=eager;this.providers=providers;this.providerType=providerType;this.lifecycleHooks=lifecycleHooks;this.sourceSpan=sourceSpan;this.isModule=isModule;}ProviderAst.prototype.visit=function(visitor,context){// No visit method in the visitor for now...
return null;};return ProviderAst;}();exports.ProviderAst=ProviderAst;var ProviderAstType;exports.ProviderAstType=ProviderAstType;(function(ProviderAstType){ProviderAstType[ProviderAstType["PublicService"]=0]="PublicService";ProviderAstType[ProviderAstType["PrivateService"]=1]="PrivateService";ProviderAstType[ProviderAstType["Component"]=2]="Component";ProviderAstType[ProviderAstType["Directive"]=3]="Directive";ProviderAstType[ProviderAstType["Builtin"]=4]="Builtin";})(ProviderAstType||(exports.ProviderAstType=ProviderAstType={}));/**
 * Position where content is to be projected (instance of `<ng-content>` in a template).
 */var NgContentAst=/** @class */function(){function NgContentAst(index,ngContentIndex,sourceSpan){this.index=index;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}NgContentAst.prototype.visit=function(visitor,context){return visitor.visitNgContent(this,context);};return NgContentAst;}();/**
 * Enumeration of types of property bindings.
 */exports.NgContentAst=NgContentAst;var PropertyBindingType;exports.PropertyBindingType=PropertyBindingType;(function(PropertyBindingType){/**
     * A normal binding to a property (e.g. `[property]="expression"`).
     */PropertyBindingType[PropertyBindingType["Property"]=0]="Property";/**
     * A binding to an element attribute (e.g. `[attr.name]="expression"`).
     */PropertyBindingType[PropertyBindingType["Attribute"]=1]="Attribute";/**
     * A binding to a CSS class (e.g. `[class.name]="condition"`).
     */PropertyBindingType[PropertyBindingType["Class"]=2]="Class";/**
     * A binding to a style rule (e.g. `[style.rule]="expression"`).
     */PropertyBindingType[PropertyBindingType["Style"]=3]="Style";/**
     * A binding to an animation reference (e.g. `[animate.key]="expression"`).
     */PropertyBindingType[PropertyBindingType["Animation"]=4]="Animation";})(PropertyBindingType||(exports.PropertyBindingType=PropertyBindingType={}));/**
 * A visitor that accepts each node but doesn't do anything. It is intended to be used
 * as the base class for a visitor that is only interested in a subset of the node types.
 */var NullTemplateVisitor=/** @class */function(){function NullTemplateVisitor(){}NullTemplateVisitor.prototype.visitNgContent=function(ast,context){};NullTemplateVisitor.prototype.visitEmbeddedTemplate=function(ast,context){};NullTemplateVisitor.prototype.visitElement=function(ast,context){};NullTemplateVisitor.prototype.visitReference=function(ast,context){};NullTemplateVisitor.prototype.visitVariable=function(ast,context){};NullTemplateVisitor.prototype.visitEvent=function(ast,context){};NullTemplateVisitor.prototype.visitElementProperty=function(ast,context){};NullTemplateVisitor.prototype.visitAttr=function(ast,context){};NullTemplateVisitor.prototype.visitBoundText=function(ast,context){};NullTemplateVisitor.prototype.visitText=function(ast,context){};NullTemplateVisitor.prototype.visitDirective=function(ast,context){};NullTemplateVisitor.prototype.visitDirectiveProperty=function(ast,context){};return NullTemplateVisitor;}();/**
 * Base class that can be used to build a visitor that visits each node
 * in an template ast recursively.
 */exports.NullTemplateVisitor=NullTemplateVisitor;var RecursiveTemplateAstVisitor=/** @class */function(_super){(0,_tslib.__extends)(RecursiveTemplateAstVisitor,_super);function RecursiveTemplateAstVisitor(){return _super.call(this)||this;}// Nodes with children
RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.references);visit(ast.variables);visit(ast.directives);visit(ast.providers);visit(ast.children);});};RecursiveTemplateAstVisitor.prototype.visitElement=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.inputs);visit(ast.outputs);visit(ast.references);visit(ast.directives);visit(ast.providers);visit(ast.children);});};RecursiveTemplateAstVisitor.prototype.visitDirective=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.inputs);visit(ast.hostProperties);visit(ast.hostEvents);});};RecursiveTemplateAstVisitor.prototype.visitChildren=function(context,cb){var results=[];var t=this;function visit(children){if(children&&children.length)results.push(templateVisitAll(t,children,context));}cb(visit);return[].concat.apply([],results);};return RecursiveTemplateAstVisitor;}(NullTemplateVisitor);/**
 * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.
 */exports.RecursiveTemplateAstVisitor=RecursiveTemplateAstVisitor;function templateVisitAll(visitor,asts,context){if(context===void 0){context=null;}var result=[];var visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};asts.forEach(function(ast){var astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CompilerConfig=/** @class */function(){function CompilerConfig(_a){var _b=_a===void 0?{}:_a,_c=_b.defaultEncapsulation,defaultEncapsulation=_c===void 0?ViewEncapsulation.Emulated:_c,_d=_b.useJit,useJit=_d===void 0?true:_d,_e=_b.jitDevMode,jitDevMode=_e===void 0?false:_e,_f=_b.missingTranslation,missingTranslation=_f===void 0?null:_f,preserveWhitespaces=_b.preserveWhitespaces,strictInjectionParameters=_b.strictInjectionParameters;this.defaultEncapsulation=defaultEncapsulation;this.useJit=!!useJit;this.jitDevMode=!!jitDevMode;this.missingTranslation=missingTranslation;this.preserveWhitespaces=preserveWhitespacesDefault(noUndefined(preserveWhitespaces));this.strictInjectionParameters=strictInjectionParameters===true;}return CompilerConfig;}();exports.CompilerConfig=CompilerConfig;function preserveWhitespacesDefault(preserveWhitespacesOption,defaultSetting){if(defaultSetting===void 0){defaultSetting=false;}return preserveWhitespacesOption===null?defaultSetting:preserveWhitespacesOption;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A token representing the a reference to a static type.
 *
 * This token is unique for a filePath and name and can be used as a hash table key.
 */var StaticSymbol=/** @class */function(){function StaticSymbol(filePath,name,members){this.filePath=filePath;this.name=name;this.members=members;}StaticSymbol.prototype.assertNoMembers=function(){if(this.members.length){throw new Error("Illegal state: symbol without members expected, but got "+JSON.stringify(this)+".");}};return StaticSymbol;}();/**
 * A cache of static symbol used by the StaticReflector to return the same symbol for the
 * same symbol values.
 */exports.StaticSymbol=StaticSymbol;var StaticSymbolCache=/** @class */function(){function StaticSymbolCache(){this.cache=new Map();}StaticSymbolCache.prototype.get=function(declarationFile,name,members){members=members||[];var memberSuffix=members.length?"."+members.join('.'):'';var key="\""+declarationFile+"\"."+name+memberSuffix;var result=this.cache.get(key);if(!result){result=new StaticSymbol(declarationFile,name,members);this.cache.set(key,result);}return result;};return StaticSymbolCache;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // group 0: "[prop] or (event) or @trigger"
// group 1: "prop" from "[prop]"
// group 2: "event" from "(event)"
// group 3: "@trigger" from "@trigger"
exports.StaticSymbolCache=StaticSymbolCache;var HOST_REG_EXP=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function sanitizeIdentifier(name){return name.replace(/\W/g,'_');}var _anonymousTypeIndex=0;function identifierName(compileIdentifier){if(!compileIdentifier||!compileIdentifier.reference){return null;}var ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.name;}if(ref['__anonymousType']){return ref['__anonymousType'];}var identifier=stringify(ref);if(identifier.indexOf('(')>=0){// case: anonymous functions!
identifier="anonymous_"+_anonymousTypeIndex++;ref['__anonymousType']=identifier;}else{identifier=sanitizeIdentifier(identifier);}return identifier;}function identifierModuleUrl(compileIdentifier){var ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.filePath;}// Runtime type
return"./"+stringify(ref);}function viewClassName(compType,embeddedTemplateIndex){return"View_"+identifierName({reference:compType})+"_"+embeddedTemplateIndex;}function rendererTypeName(compType){return"RenderType_"+identifierName({reference:compType});}function hostViewClassName(compType){return"HostView_"+identifierName({reference:compType});}function componentFactoryName(compType){return identifierName({reference:compType})+"NgFactory";}var CompileSummaryKind;exports.CompileSummaryKind=CompileSummaryKind;(function(CompileSummaryKind){CompileSummaryKind[CompileSummaryKind["Pipe"]=0]="Pipe";CompileSummaryKind[CompileSummaryKind["Directive"]=1]="Directive";CompileSummaryKind[CompileSummaryKind["NgModule"]=2]="NgModule";CompileSummaryKind[CompileSummaryKind["Injectable"]=3]="Injectable";})(CompileSummaryKind||(exports.CompileSummaryKind=CompileSummaryKind={}));function tokenName(token){return token.value!=null?sanitizeIdentifier(token.value):identifierName(token.identifier);}function tokenReference(token){if(token.identifier!=null){return token.identifier.reference;}else{return token.value;}}/**
 * Metadata about a stylesheet
 */var CompileStylesheetMetadata=/** @class */function(){function CompileStylesheetMetadata(_a){var _b=_a===void 0?{}:_a,moduleUrl=_b.moduleUrl,styles=_b.styles,styleUrls=_b.styleUrls;this.moduleUrl=moduleUrl||null;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);}return CompileStylesheetMetadata;}();/**
 * Metadata regarding compilation of a template.
 */exports.CompileStylesheetMetadata=CompileStylesheetMetadata;var CompileTemplateMetadata=/** @class */function(){function CompileTemplateMetadata(_a){var encapsulation=_a.encapsulation,template=_a.template,templateUrl=_a.templateUrl,htmlAst=_a.htmlAst,styles=_a.styles,styleUrls=_a.styleUrls,externalStylesheets=_a.externalStylesheets,animations=_a.animations,ngContentSelectors=_a.ngContentSelectors,interpolation=_a.interpolation,isInline=_a.isInline,preserveWhitespaces=_a.preserveWhitespaces;this.encapsulation=encapsulation;this.template=template;this.templateUrl=templateUrl;this.htmlAst=htmlAst;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);this.externalStylesheets=_normalizeArray(externalStylesheets);this.animations=animations?flatten(animations):[];this.ngContentSelectors=ngContentSelectors||[];if(interpolation&&interpolation.length!=2){throw new Error("'interpolation' should have a start and an end symbol.");}this.interpolation=interpolation;this.isInline=isInline;this.preserveWhitespaces=preserveWhitespaces;}CompileTemplateMetadata.prototype.toSummary=function(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation};};return CompileTemplateMetadata;}();/**
 * Metadata regarding compilation of a directive.
 */exports.CompileTemplateMetadata=CompileTemplateMetadata;var CompileDirectiveMetadata=/** @class */function(){function CompileDirectiveMetadata(_a){var isHost=_a.isHost,type=_a.type,isComponent=_a.isComponent,selector=_a.selector,exportAs=_a.exportAs,changeDetection=_a.changeDetection,inputs=_a.inputs,outputs=_a.outputs,hostListeners=_a.hostListeners,hostProperties=_a.hostProperties,hostAttributes=_a.hostAttributes,providers=_a.providers,viewProviders=_a.viewProviders,queries=_a.queries,guards=_a.guards,viewQueries=_a.viewQueries,entryComponents=_a.entryComponents,template=_a.template,componentViewType=_a.componentViewType,rendererType=_a.rendererType,componentFactory=_a.componentFactory;this.isHost=!!isHost;this.type=type;this.isComponent=isComponent;this.selector=selector;this.exportAs=exportAs;this.changeDetection=changeDetection;this.inputs=inputs;this.outputs=outputs;this.hostListeners=hostListeners;this.hostProperties=hostProperties;this.hostAttributes=hostAttributes;this.providers=_normalizeArray(providers);this.viewProviders=_normalizeArray(viewProviders);this.queries=_normalizeArray(queries);this.guards=guards;this.viewQueries=_normalizeArray(viewQueries);this.entryComponents=_normalizeArray(entryComponents);this.template=template;this.componentViewType=componentViewType;this.rendererType=rendererType;this.componentFactory=componentFactory;}CompileDirectiveMetadata.create=function(_a){var isHost=_a.isHost,type=_a.type,isComponent=_a.isComponent,selector=_a.selector,exportAs=_a.exportAs,changeDetection=_a.changeDetection,inputs=_a.inputs,outputs=_a.outputs,host=_a.host,providers=_a.providers,viewProviders=_a.viewProviders,queries=_a.queries,guards=_a.guards,viewQueries=_a.viewQueries,entryComponents=_a.entryComponents,template=_a.template,componentViewType=_a.componentViewType,rendererType=_a.rendererType,componentFactory=_a.componentFactory;var hostListeners={};var hostProperties={};var hostAttributes={};if(host!=null){Object.keys(host).forEach(function(key){var value=host[key];var matches=key.match(HOST_REG_EXP);if(matches===null){hostAttributes[key]=value;}else if(matches[1]!=null){hostProperties[matches[1]]=value;}else if(matches[2]!=null){hostListeners[matches[2]]=value;}});}var inputsMap={};if(inputs!=null){inputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);inputsMap[parts[0]]=parts[1];});}var outputsMap={};if(outputs!=null){outputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);outputsMap[parts[0]]=parts[1];});}return new CompileDirectiveMetadata({isHost:isHost,type:type,isComponent:!!isComponent,selector:selector,exportAs:exportAs,changeDetection:changeDetection,inputs:inputsMap,outputs:outputsMap,hostListeners:hostListeners,hostProperties:hostProperties,hostAttributes:hostAttributes,providers:providers,viewProviders:viewProviders,queries:queries,guards:guards,viewQueries:viewQueries,entryComponents:entryComponents,template:template,componentViewType:componentViewType,rendererType:rendererType,componentFactory:componentFactory});};CompileDirectiveMetadata.prototype.toSummary=function(){return{summaryKind:CompileSummaryKind.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory};};return CompileDirectiveMetadata;}();exports.CompileDirectiveMetadata=CompileDirectiveMetadata;var CompilePipeMetadata=/** @class */function(){function CompilePipeMetadata(_a){var type=_a.type,name=_a.name,pure=_a.pure;this.type=type;this.name=name;this.pure=!!pure;}CompilePipeMetadata.prototype.toSummary=function(){return{summaryKind:CompileSummaryKind.Pipe,type:this.type,name:this.name,pure:this.pure};};return CompilePipeMetadata;}();exports.CompilePipeMetadata=CompilePipeMetadata;var CompileShallowModuleMetadata=/** @class */function(){function CompileShallowModuleMetadata(){}return CompileShallowModuleMetadata;}();/**
 * Metadata regarding compilation of a module.
 */exports.CompileShallowModuleMetadata=CompileShallowModuleMetadata;var CompileNgModuleMetadata=/** @class */function(){function CompileNgModuleMetadata(_a){var type=_a.type,providers=_a.providers,declaredDirectives=_a.declaredDirectives,exportedDirectives=_a.exportedDirectives,declaredPipes=_a.declaredPipes,exportedPipes=_a.exportedPipes,entryComponents=_a.entryComponents,bootstrapComponents=_a.bootstrapComponents,importedModules=_a.importedModules,exportedModules=_a.exportedModules,schemas=_a.schemas,transitiveModule=_a.transitiveModule,id=_a.id;this.type=type||null;this.declaredDirectives=_normalizeArray(declaredDirectives);this.exportedDirectives=_normalizeArray(exportedDirectives);this.declaredPipes=_normalizeArray(declaredPipes);this.exportedPipes=_normalizeArray(exportedPipes);this.providers=_normalizeArray(providers);this.entryComponents=_normalizeArray(entryComponents);this.bootstrapComponents=_normalizeArray(bootstrapComponents);this.importedModules=_normalizeArray(importedModules);this.exportedModules=_normalizeArray(exportedModules);this.schemas=_normalizeArray(schemas);this.id=id||null;this.transitiveModule=transitiveModule||null;}CompileNgModuleMetadata.prototype.toSummary=function(){var module=this.transitiveModule;return{summaryKind:CompileSummaryKind.NgModule,type:this.type,entryComponents:module.entryComponents,providers:module.providers,modules:module.modules,exportedDirectives:module.exportedDirectives,exportedPipes:module.exportedPipes};};return CompileNgModuleMetadata;}();exports.CompileNgModuleMetadata=CompileNgModuleMetadata;var TransitiveCompileNgModuleMetadata=/** @class */function(){function TransitiveCompileNgModuleMetadata(){this.directivesSet=new Set();this.directives=[];this.exportedDirectivesSet=new Set();this.exportedDirectives=[];this.pipesSet=new Set();this.pipes=[];this.exportedPipesSet=new Set();this.exportedPipes=[];this.modulesSet=new Set();this.modules=[];this.entryComponentsSet=new Set();this.entryComponents=[];this.providers=[];}TransitiveCompileNgModuleMetadata.prototype.addProvider=function(provider,module){this.providers.push({provider:provider,module:module});};TransitiveCompileNgModuleMetadata.prototype.addDirective=function(id){if(!this.directivesSet.has(id.reference)){this.directivesSet.add(id.reference);this.directives.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addExportedDirective=function(id){if(!this.exportedDirectivesSet.has(id.reference)){this.exportedDirectivesSet.add(id.reference);this.exportedDirectives.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addPipe=function(id){if(!this.pipesSet.has(id.reference)){this.pipesSet.add(id.reference);this.pipes.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addExportedPipe=function(id){if(!this.exportedPipesSet.has(id.reference)){this.exportedPipesSet.add(id.reference);this.exportedPipes.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addModule=function(id){if(!this.modulesSet.has(id.reference)){this.modulesSet.add(id.reference);this.modules.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addEntryComponent=function(ec){if(!this.entryComponentsSet.has(ec.componentType)){this.entryComponentsSet.add(ec.componentType);this.entryComponents.push(ec);}};return TransitiveCompileNgModuleMetadata;}();exports.TransitiveCompileNgModuleMetadata=TransitiveCompileNgModuleMetadata;function _normalizeArray(obj){return obj||[];}var ProviderMeta=/** @class */function(){function ProviderMeta(token,_a){var useClass=_a.useClass,useValue=_a.useValue,useExisting=_a.useExisting,useFactory=_a.useFactory,deps=_a.deps,multi=_a.multi;this.token=token;this.useClass=useClass||null;this.useValue=useValue;this.useExisting=useExisting;this.useFactory=useFactory||null;this.dependencies=deps||null;this.multi=!!multi;}return ProviderMeta;}();exports.ProviderMeta=ProviderMeta;function flatten(list){return list.reduce(function(flat,item){var flatItem=Array.isArray(item)?flatten(item):item;return flat.concat(flatItem);},[]);}function jitSourceUrl(url){// Note: We need 3 "/" so that ng shows up as a separate domain
// in the chrome dev tools.
return url.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,'ng:///');}function templateSourceUrl(ngModuleType,compMeta,templateMeta){var url;if(templateMeta.isInline){if(compMeta.type.reference instanceof StaticSymbol){// Note: a .ts file might contain multiple components with inline templates,
// so we need to give them unique urls, as these will be used for sourcemaps.
url=compMeta.type.reference.filePath+"."+compMeta.type.reference.name+".html";}else{url=identifierName(ngModuleType)+"/"+identifierName(compMeta.type)+".html";}}else{url=templateMeta.templateUrl;}return compMeta.type.reference instanceof StaticSymbol?url:jitSourceUrl(url);}function sharedStylesheetJitUrl(meta,id){var pathParts=meta.moduleUrl.split(/\/\\/g);var baseName=pathParts[pathParts.length-1];return jitSourceUrl("css/"+id+baseName+".ngstyle.js");}function ngModuleJitUrl(moduleMeta){return jitSourceUrl(identifierName(moduleMeta.type)+"/module.ngfactory.js");}function templateJitUrl(ngModuleType,compMeta){return jitSourceUrl(identifierName(ngModuleType)+"/"+identifierName(compMeta.type)+".ngfactory.js");}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A path is an ordered set of elements. Typically a path is to  a
 * particular offset in a source file. The head of the list is the top
 * most node. The tail is the node that contains the offset directly.
 *
 * For example, the expression `a + b + c` might have an ast that looks
 * like:
 *     +
 *    / \
 *   a   +
 *      / \
 *     b   c
 *
 * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,
 * 'c' at 9-10]` and the path the node at offset 1 would be
 * `['+' at 1-10, 'a' at 1-2]`.
 */var AstPath=/** @class */function(){function AstPath(path,position){if(position===void 0){position=-1;}this.path=path;this.position=position;}Object.defineProperty(AstPath.prototype,"empty",{get:function get(){return!this.path||!this.path.length;},enumerable:true,configurable:true});Object.defineProperty(AstPath.prototype,"head",{get:function get(){return this.path[0];},enumerable:true,configurable:true});Object.defineProperty(AstPath.prototype,"tail",{get:function get(){return this.path[this.path.length-1];},enumerable:true,configurable:true});AstPath.prototype.parentOf=function(node){return node&&this.path[this.path.indexOf(node)-1];};AstPath.prototype.childOf=function(node){return this.path[this.path.indexOf(node)+1];};AstPath.prototype.first=function(ctor){for(var i=this.path.length-1;i>=0;i--){var item=this.path[i];if(item instanceof ctor)return item;}};AstPath.prototype.push=function(node){this.path.push(node);};AstPath.prototype.pop=function(){return this.path.pop();};return AstPath;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.AstPath=AstPath;var Text=/** @class */function(){function Text(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Text.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return Text;}();exports.Text=Text;var Expansion=/** @class */function(){function Expansion(switchValue,type,cases,sourceSpan,switchValueSourceSpan){this.switchValue=switchValue;this.type=type;this.cases=cases;this.sourceSpan=sourceSpan;this.switchValueSourceSpan=switchValueSourceSpan;}Expansion.prototype.visit=function(visitor,context){return visitor.visitExpansion(this,context);};return Expansion;}();exports.Expansion=Expansion;var ExpansionCase=/** @class */function(){function ExpansionCase(value,expression,sourceSpan,valueSourceSpan,expSourceSpan){this.value=value;this.expression=expression;this.sourceSpan=sourceSpan;this.valueSourceSpan=valueSourceSpan;this.expSourceSpan=expSourceSpan;}ExpansionCase.prototype.visit=function(visitor,context){return visitor.visitExpansionCase(this,context);};return ExpansionCase;}();exports.ExpansionCase=ExpansionCase;var Attribute=/** @class */function(){function Attribute(name,value,sourceSpan,valueSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}Attribute.prototype.visit=function(visitor,context){return visitor.visitAttribute(this,context);};return Attribute;}();exports.Attribute=Attribute;var Element=/** @class */function(){function Element(name,attrs,children,sourceSpan,startSourceSpan,endSourceSpan){if(startSourceSpan===void 0){startSourceSpan=null;}if(endSourceSpan===void 0){endSourceSpan=null;}this.name=name;this.attrs=attrs;this.children=children;this.sourceSpan=sourceSpan;this.startSourceSpan=startSourceSpan;this.endSourceSpan=endSourceSpan;}Element.prototype.visit=function(visitor,context){return visitor.visitElement(this,context);};return Element;}();exports.Element=Element;var Comment=/** @class */function(){function Comment(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Comment.prototype.visit=function(visitor,context){return visitor.visitComment(this,context);};return Comment;}();exports.Comment=Comment;function visitAll(visitor,nodes,context){if(context===void 0){context=null;}var result=[];var visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};nodes.forEach(function(ast){var astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}var RecursiveVisitor=/** @class */function(){function RecursiveVisitor(){}RecursiveVisitor.prototype.visitElement=function(ast,context){this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.children);});};RecursiveVisitor.prototype.visitAttribute=function(ast,context){};RecursiveVisitor.prototype.visitText=function(ast,context){};RecursiveVisitor.prototype.visitComment=function(ast,context){};RecursiveVisitor.prototype.visitExpansion=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.cases);});};RecursiveVisitor.prototype.visitExpansionCase=function(ast,context){};RecursiveVisitor.prototype.visitChildren=function(context,cb){var results=[];var t=this;function visit(children){if(children)results.push(visitAll(t,children,context));}cb(visit);return[].concat.apply([],results);};return RecursiveVisitor;}();exports.RecursiveVisitor=RecursiveVisitor;function spanOf(ast){var start=ast.sourceSpan.start.offset;var end=ast.sourceSpan.end.offset;if(ast instanceof Element){if(ast.endSourceSpan){end=ast.endSourceSpan.end.offset;}else if(ast.children&&ast.children.length){end=spanOf(ast.children[ast.children.length-1]).end;}}return{start:start,end:end};}function findNode(nodes,position){var path=[];var visitor=new(/** @class */function(_super){(0,_tslib.__extends)(class_1,_super);function class_1(){return _super!==null&&_super.apply(this,arguments)||this;}class_1.prototype.visit=function(ast,context){var span=spanOf(ast);if(span.start<=position&&position<span.end){path.push(ast);}else{// Returning a value here will result in the children being skipped.
return true;}};return class_1;}(RecursiveVisitor))();visitAll(visitor,nodes);return new AstPath(path,position);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function assertArrayOfStrings(identifier,value){if(value==null){return;}if(!Array.isArray(value)){throw new Error("Expected '"+identifier+"' to be an array of strings.");}for(var i=0;i<value.length;i+=1){if(typeof value[i]!=='string'){throw new Error("Expected '"+identifier+"' to be an array of strings.");}}}var INTERPOLATION_BLACKLIST_REGEXPS=[/^\s*$/,/[<>]/,/^[{}]$/,/&(#|[a-z])/i,/^\/\//];function assertInterpolationSymbols(identifier,value){if(value!=null&&!(Array.isArray(value)&&value.length==2)){throw new Error("Expected '"+identifier+"' to be an array, [start, end].");}else if(value!=null){var start_1=value[0];var end_1=value[1];// black list checking
INTERPOLATION_BLACKLIST_REGEXPS.forEach(function(regexp){if(regexp.test(start_1)||regexp.test(end_1)){throw new Error("['"+start_1+"', '"+end_1+"'] contains unusable interpolation symbol.");}});}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var InterpolationConfig=/** @class */function(){function InterpolationConfig(start,end){this.start=start;this.end=end;}InterpolationConfig.fromArray=function(markers){if(!markers){return DEFAULT_INTERPOLATION_CONFIG;}assertInterpolationSymbols('interpolation',markers);return new InterpolationConfig(markers[0],markers[1]);};return InterpolationConfig;}();exports.InterpolationConfig=InterpolationConfig;var DEFAULT_INTERPOLATION_CONFIG=new InterpolationConfig('{{','}}');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.DEFAULT_INTERPOLATION_CONFIG=DEFAULT_INTERPOLATION_CONFIG;var StyleWithImports=/** @class */function(){function StyleWithImports(style,styleUrls){this.style=style;this.styleUrls=styleUrls;}return StyleWithImports;}();function isStyleUrlResolvable(url){if(url==null||url.length===0||url[0]=='/')return false;var schemeMatch=url.match(URL_WITH_SCHEMA_REGEXP);return schemeMatch===null||schemeMatch[1]=='package'||schemeMatch[1]=='asset';}/**
 * Rewrites stylesheets by resolving and removing the @import urls that
 * are either relative or don't have a `package:` scheme
 */function extractStyleUrls(resolver,baseUrl,cssText){var foundUrls=[];var modifiedCssText=cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP,'').replace(CSS_IMPORT_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var url=m[1]||m[2];if(!isStyleUrlResolvable(url)){// Do not attempt to resolve non-package absolute URLs with URI
// scheme
return m[0];}foundUrls.push(resolver.resolve(baseUrl,url));return'';});return new StyleWithImports(modifiedCssText,foundUrls);}var CSS_IMPORT_REGEXP=/@import\s+(?:url\()?\s*(?:(?:['"]([^'"]*))|([^;\)\s]*))[^;]*;?/g;var CSS_STRIPPABLE_COMMENT_REGEXP=/\/\*(?!#\s*(?:sourceURL|sourceMappingURL)=)[\s\S]+?\*\//g;var URL_WITH_SCHEMA_REGEXP=/^([^:/?#]+):/;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TagContentType;exports.TagContentType=TagContentType;(function(TagContentType){TagContentType[TagContentType["RAW_TEXT"]=0]="RAW_TEXT";TagContentType[TagContentType["ESCAPABLE_RAW_TEXT"]=1]="ESCAPABLE_RAW_TEXT";TagContentType[TagContentType["PARSABLE_DATA"]=2]="PARSABLE_DATA";})(TagContentType||(exports.TagContentType=TagContentType={}));function splitNsName(elementName){if(elementName[0]!=':'){return[null,elementName];}var colonIndex=elementName.indexOf(':',1);if(colonIndex==-1){throw new Error("Unsupported format \""+elementName+"\" expecting \":namespace:name\"");}return[elementName.slice(1,colonIndex),elementName.slice(colonIndex+1)];}// `<ng-container>` tags work the same regardless the namespace
function isNgContainer(tagName){return splitNsName(tagName)[1]==='ng-container';}// `<ng-content>` tags work the same regardless the namespace
function isNgContent(tagName){return splitNsName(tagName)[1]==='ng-content';}// `<ng-template>` tags work the same regardless the namespace
function isNgTemplate(tagName){return splitNsName(tagName)[1]==='ng-template';}function getNsPrefix(fullName){return fullName===null?null:splitNsName(fullName)[0];}function mergeNsAndName(prefix,localName){return prefix?":"+prefix+":"+localName:localName;}// see http://www.w3.org/TR/html51/syntax.html#named-character-references
// see https://html.spec.whatwg.org/multipage/entities.json
// This list is not exhaustive to keep the compiler footprint low.
// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not
// exist.
var NAMED_ENTITIES={'Aacute':"\xC1",'aacute':"\xE1",'Acirc':"\xC2",'acirc':"\xE2",'acute':"\xB4",'AElig':"\xC6",'aelig':"\xE6",'Agrave':"\xC0",'agrave':"\xE0",'alefsym':"\u2135",'Alpha':"\u0391",'alpha':"\u03B1",'amp':'&','and':"\u2227",'ang':"\u2220",'apos':"'",'Aring':"\xC5",'aring':"\xE5",'asymp':"\u2248",'Atilde':"\xC3",'atilde':"\xE3",'Auml':"\xC4",'auml':"\xE4",'bdquo':"\u201E",'Beta':"\u0392",'beta':"\u03B2",'brvbar':"\xA6",'bull':"\u2022",'cap':"\u2229",'Ccedil':"\xC7",'ccedil':"\xE7",'cedil':"\xB8",'cent':"\xA2",'Chi':"\u03A7",'chi':"\u03C7",'circ':"\u02C6",'clubs':"\u2663",'cong':"\u2245",'copy':"\xA9",'crarr':"\u21B5",'cup':"\u222A",'curren':"\xA4",'dagger':"\u2020",'Dagger':"\u2021",'darr':"\u2193",'dArr':"\u21D3",'deg':"\xB0",'Delta':"\u0394",'delta':"\u03B4",'diams':"\u2666",'divide':"\xF7",'Eacute':"\xC9",'eacute':"\xE9",'Ecirc':"\xCA",'ecirc':"\xEA",'Egrave':"\xC8",'egrave':"\xE8",'empty':"\u2205",'emsp':"\u2003",'ensp':"\u2002",'Epsilon':"\u0395",'epsilon':"\u03B5",'equiv':"\u2261",'Eta':"\u0397",'eta':"\u03B7",'ETH':"\xD0",'eth':"\xF0",'Euml':"\xCB",'euml':"\xEB",'euro':"\u20AC",'exist':"\u2203",'fnof':"\u0192",'forall':"\u2200",'frac12':"\xBD",'frac14':"\xBC",'frac34':"\xBE",'frasl':"\u2044",'Gamma':"\u0393",'gamma':"\u03B3",'ge':"\u2265",'gt':'>','harr':"\u2194",'hArr':"\u21D4",'hearts':"\u2665",'hellip':"\u2026",'Iacute':"\xCD",'iacute':"\xED",'Icirc':"\xCE",'icirc':"\xEE",'iexcl':"\xA1",'Igrave':"\xCC",'igrave':"\xEC",'image':"\u2111",'infin':"\u221E",'int':"\u222B",'Iota':"\u0399",'iota':"\u03B9",'iquest':"\xBF",'isin':"\u2208",'Iuml':"\xCF",'iuml':"\xEF",'Kappa':"\u039A",'kappa':"\u03BA",'Lambda':"\u039B",'lambda':"\u03BB",'lang':"\u27E8",'laquo':"\xAB",'larr':"\u2190",'lArr':"\u21D0",'lceil':"\u2308",'ldquo':"\u201C",'le':"\u2264",'lfloor':"\u230A",'lowast':"\u2217",'loz':"\u25CA",'lrm':"\u200E",'lsaquo':"\u2039",'lsquo':"\u2018",'lt':'<','macr':"\xAF",'mdash':"\u2014",'micro':"\xB5",'middot':"\xB7",'minus':"\u2212",'Mu':"\u039C",'mu':"\u03BC",'nabla':"\u2207",'nbsp':"\xA0",'ndash':"\u2013",'ne':"\u2260",'ni':"\u220B",'not':"\xAC",'notin':"\u2209",'nsub':"\u2284",'Ntilde':"\xD1",'ntilde':"\xF1",'Nu':"\u039D",'nu':"\u03BD",'Oacute':"\xD3",'oacute':"\xF3",'Ocirc':"\xD4",'ocirc':"\xF4",'OElig':"\u0152",'oelig':"\u0153",'Ograve':"\xD2",'ograve':"\xF2",'oline':"\u203E",'Omega':"\u03A9",'omega':"\u03C9",'Omicron':"\u039F",'omicron':"\u03BF",'oplus':"\u2295",'or':"\u2228",'ordf':"\xAA",'ordm':"\xBA",'Oslash':"\xD8",'oslash':"\xF8",'Otilde':"\xD5",'otilde':"\xF5",'otimes':"\u2297",'Ouml':"\xD6",'ouml':"\xF6",'para':"\xB6",'permil':"\u2030",'perp':"\u22A5",'Phi':"\u03A6",'phi':"\u03C6",'Pi':"\u03A0",'pi':"\u03C0",'piv':"\u03D6",'plusmn':"\xB1",'pound':"\xA3",'prime':"\u2032",'Prime':"\u2033",'prod':"\u220F",'prop':"\u221D",'Psi':"\u03A8",'psi':"\u03C8",'quot':"\"",'radic':"\u221A",'rang':"\u27E9",'raquo':"\xBB",'rarr':"\u2192",'rArr':"\u21D2",'rceil':"\u2309",'rdquo':"\u201D",'real':"\u211C",'reg':"\xAE",'rfloor':"\u230B",'Rho':"\u03A1",'rho':"\u03C1",'rlm':"\u200F",'rsaquo':"\u203A",'rsquo':"\u2019",'sbquo':"\u201A",'Scaron':"\u0160",'scaron':"\u0161",'sdot':"\u22C5",'sect':"\xA7",'shy':"\xAD",'Sigma':"\u03A3",'sigma':"\u03C3",'sigmaf':"\u03C2",'sim':"\u223C",'spades':"\u2660",'sub':"\u2282",'sube':"\u2286",'sum':"\u2211",'sup':"\u2283",'sup1':"\xB9",'sup2':"\xB2",'sup3':"\xB3",'supe':"\u2287",'szlig':"\xDF",'Tau':"\u03A4",'tau':"\u03C4",'there4':"\u2234",'Theta':"\u0398",'theta':"\u03B8",'thetasym':"\u03D1",'thinsp':"\u2009",'THORN':"\xDE",'thorn':"\xFE",'tilde':"\u02DC",'times':"\xD7",'trade':"\u2122",'Uacute':"\xDA",'uacute':"\xFA",'uarr':"\u2191",'uArr':"\u21D1",'Ucirc':"\xDB",'ucirc':"\xFB",'Ugrave':"\xD9",'ugrave':"\xF9",'uml':"\xA8",'upsih':"\u03D2",'Upsilon':"\u03A5",'upsilon':"\u03C5",'Uuml':"\xDC",'uuml':"\xFC",'weierp':"\u2118",'Xi':"\u039E",'xi':"\u03BE",'Yacute':"\xDD",'yacute':"\xFD",'yen':"\xA5",'yuml':"\xFF",'Yuml':"\u0178",'Zeta':"\u0396",'zeta':"\u03B6",'zwj':"\u200D",'zwnj':"\u200C"};// The &ngsp; pseudo-entity is denoting a space. see:
// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart
exports.NAMED_ENTITIES=NAMED_ENTITIES;var NGSP_UNICODE="\uE500";exports.NGSP_UNICODE=NGSP_UNICODE;NAMED_ENTITIES['ngsp']=NGSP_UNICODE;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NG_CONTENT_SELECT_ATTR='select';var LINK_ELEMENT='link';var LINK_STYLE_REL_ATTR='rel';var LINK_STYLE_HREF_ATTR='href';var LINK_STYLE_REL_VALUE='stylesheet';var STYLE_ELEMENT='style';var SCRIPT_ELEMENT='script';var NG_NON_BINDABLE_ATTR='ngNonBindable';var NG_PROJECT_AS='ngProjectAs';function preparseElement(ast){var selectAttr=null;var hrefAttr=null;var relAttr=null;var nonBindable=false;var projectAs=null;ast.attrs.forEach(function(attr){var lcAttrName=attr.name.toLowerCase();if(lcAttrName==NG_CONTENT_SELECT_ATTR){selectAttr=attr.value;}else if(lcAttrName==LINK_STYLE_HREF_ATTR){hrefAttr=attr.value;}else if(lcAttrName==LINK_STYLE_REL_ATTR){relAttr=attr.value;}else if(attr.name==NG_NON_BINDABLE_ATTR){nonBindable=true;}else if(attr.name==NG_PROJECT_AS){if(attr.value.length>0){projectAs=attr.value;}}});selectAttr=normalizeNgContentSelect(selectAttr);var nodeName=ast.name.toLowerCase();var type=PreparsedElementType.OTHER;if(isNgContent(nodeName)){type=PreparsedElementType.NG_CONTENT;}else if(nodeName==STYLE_ELEMENT){type=PreparsedElementType.STYLE;}else if(nodeName==SCRIPT_ELEMENT){type=PreparsedElementType.SCRIPT;}else if(nodeName==LINK_ELEMENT&&relAttr==LINK_STYLE_REL_VALUE){type=PreparsedElementType.STYLESHEET;}return new PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs);}var PreparsedElementType;(function(PreparsedElementType){PreparsedElementType[PreparsedElementType["NG_CONTENT"]=0]="NG_CONTENT";PreparsedElementType[PreparsedElementType["STYLE"]=1]="STYLE";PreparsedElementType[PreparsedElementType["STYLESHEET"]=2]="STYLESHEET";PreparsedElementType[PreparsedElementType["SCRIPT"]=3]="SCRIPT";PreparsedElementType[PreparsedElementType["OTHER"]=4]="OTHER";})(PreparsedElementType||(PreparsedElementType={}));var PreparsedElement=/** @class */function(){function PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs){this.type=type;this.selectAttr=selectAttr;this.hrefAttr=hrefAttr;this.nonBindable=nonBindable;this.projectAs=projectAs;}return PreparsedElement;}();function normalizeNgContentSelect(selectAttr){if(selectAttr===null||selectAttr.length===0){return'*';}return selectAttr;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var DirectiveNormalizer=/** @class */function(){function DirectiveNormalizer(_resourceLoader,_urlResolver,_htmlParser,_config){this._resourceLoader=_resourceLoader;this._urlResolver=_urlResolver;this._htmlParser=_htmlParser;this._config=_config;this._resourceLoaderCache=new Map();}DirectiveNormalizer.prototype.clearCache=function(){this._resourceLoaderCache.clear();};DirectiveNormalizer.prototype.clearCacheFor=function(normalizedDirective){var _this=this;if(!normalizedDirective.isComponent){return;}var template=normalizedDirective.template;this._resourceLoaderCache.delete(template.templateUrl);template.externalStylesheets.forEach(function(stylesheet){_this._resourceLoaderCache.delete(stylesheet.moduleUrl);});};DirectiveNormalizer.prototype._fetch=function(url){var result=this._resourceLoaderCache.get(url);if(!result){result=this._resourceLoader.get(url);this._resourceLoaderCache.set(url,result);}return result;};DirectiveNormalizer.prototype.normalizeTemplate=function(prenormData){var _this=this;if(isDefined(prenormData.template)){if(isDefined(prenormData.templateUrl)){throw syntaxError("'"+stringify(prenormData.componentType)+"' component cannot define both template and templateUrl");}if(typeof prenormData.template!=='string'){throw syntaxError("The template specified for component "+stringify(prenormData.componentType)+" is not a string");}}else if(isDefined(prenormData.templateUrl)){if(typeof prenormData.templateUrl!=='string'){throw syntaxError("The templateUrl specified for component "+stringify(prenormData.componentType)+" is not a string");}}else{throw syntaxError("No template specified for component "+stringify(prenormData.componentType));}if(isDefined(prenormData.preserveWhitespaces)&&typeof prenormData.preserveWhitespaces!=='boolean'){throw syntaxError("The preserveWhitespaces option for component "+stringify(prenormData.componentType)+" must be a boolean");}return SyncAsync.then(this._preParseTemplate(prenormData),function(preparsedTemplate){return _this._normalizeTemplateMetadata(prenormData,preparsedTemplate);});};DirectiveNormalizer.prototype._preParseTemplate=function(prenomData){var _this=this;var template;var templateUrl;if(prenomData.template!=null){template=prenomData.template;templateUrl=prenomData.moduleUrl;}else{templateUrl=this._urlResolver.resolve(prenomData.moduleUrl,prenomData.templateUrl);template=this._fetch(templateUrl);}return SyncAsync.then(template,function(template){return _this._preparseLoadedTemplate(prenomData,template,templateUrl);});};DirectiveNormalizer.prototype._preparseLoadedTemplate=function(prenormData,template,templateAbsUrl){var isInline=!!prenormData.template;var interpolationConfig=InterpolationConfig.fromArray(prenormData.interpolation);var rootNodesAndErrors=this._htmlParser.parse(template,templateSourceUrl({reference:prenormData.ngModuleType},{type:{reference:prenormData.componentType}},{isInline:isInline,templateUrl:templateAbsUrl}),true,interpolationConfig);if(rootNodesAndErrors.errors.length>0){var errorString=rootNodesAndErrors.errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString);}var templateMetadataStyles=this._normalizeStylesheet(new CompileStylesheetMetadata({styles:prenormData.styles,moduleUrl:prenormData.moduleUrl}));var visitor=new TemplatePreparseVisitor();visitAll(visitor,rootNodesAndErrors.rootNodes);var templateStyles=this._normalizeStylesheet(new CompileStylesheetMetadata({styles:visitor.styles,styleUrls:visitor.styleUrls,moduleUrl:templateAbsUrl}));var styles=templateMetadataStyles.styles.concat(templateStyles.styles);var inlineStyleUrls=templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);var styleUrls=this._normalizeStylesheet(new CompileStylesheetMetadata({styleUrls:prenormData.styleUrls,moduleUrl:prenormData.moduleUrl})).styleUrls;return{template:template,templateUrl:templateAbsUrl,isInline:isInline,htmlAst:rootNodesAndErrors,styles:styles,inlineStyleUrls:inlineStyleUrls,styleUrls:styleUrls,ngContentSelectors:visitor.ngContentSelectors};};DirectiveNormalizer.prototype._normalizeTemplateMetadata=function(prenormData,preparsedTemplate){var _this=this;return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)),function(externalStylesheets){return _this._normalizeLoadedTemplateMetadata(prenormData,preparsedTemplate,externalStylesheets);});};DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata=function(prenormData,preparsedTemplate,stylesheets){// Algorithm:
// - produce exactly 1 entry per original styleUrl in
// CompileTemplateMetadata.externalStylesheets with all styles inlined
// - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.
// Reason: be able to determine how many stylesheets there are even without loading
// the template nor the stylesheets, so we can create a stub for TypeScript always synchronously
// (as resource loading may be async)
var _this=this;var styles=(0,_tslib.__spread)(preparsedTemplate.styles);this._inlineStyles(preparsedTemplate.inlineStyleUrls,stylesheets,styles);var styleUrls=preparsedTemplate.styleUrls;var externalStylesheets=styleUrls.map(function(styleUrl){var stylesheet=stylesheets.get(styleUrl);var styles=(0,_tslib.__spread)(stylesheet.styles);_this._inlineStyles(stylesheet.styleUrls,stylesheets,styles);return new CompileStylesheetMetadata({moduleUrl:styleUrl,styles:styles});});var encapsulation=prenormData.encapsulation;if(encapsulation==null){encapsulation=this._config.defaultEncapsulation;}if(encapsulation===ViewEncapsulation.Emulated&&styles.length===0&&styleUrls.length===0){encapsulation=ViewEncapsulation.None;}return new CompileTemplateMetadata({encapsulation:encapsulation,template:preparsedTemplate.template,templateUrl:preparsedTemplate.templateUrl,htmlAst:preparsedTemplate.htmlAst,styles:styles,styleUrls:styleUrls,ngContentSelectors:preparsedTemplate.ngContentSelectors,animations:prenormData.animations,interpolation:prenormData.interpolation,isInline:preparsedTemplate.isInline,externalStylesheets:externalStylesheets,preserveWhitespaces:preserveWhitespacesDefault(prenormData.preserveWhitespaces,this._config.preserveWhitespaces)});};DirectiveNormalizer.prototype._inlineStyles=function(styleUrls,stylesheets,targetStyles){var _this=this;styleUrls.forEach(function(styleUrl){var stylesheet=stylesheets.get(styleUrl);stylesheet.styles.forEach(function(style){return targetStyles.push(style);});_this._inlineStyles(stylesheet.styleUrls,stylesheets,targetStyles);});};DirectiveNormalizer.prototype._loadMissingExternalStylesheets=function(styleUrls,loadedStylesheets){var _this=this;if(loadedStylesheets===void 0){loadedStylesheets=new Map();}return SyncAsync.then(SyncAsync.all(styleUrls.filter(function(styleUrl){return!loadedStylesheets.has(styleUrl);}).map(function(styleUrl){return SyncAsync.then(_this._fetch(styleUrl),function(loadedStyle){var stylesheet=_this._normalizeStylesheet(new CompileStylesheetMetadata({styles:[loadedStyle],moduleUrl:styleUrl}));loadedStylesheets.set(styleUrl,stylesheet);return _this._loadMissingExternalStylesheets(stylesheet.styleUrls,loadedStylesheets);});})),function(_){return loadedStylesheets;});};DirectiveNormalizer.prototype._normalizeStylesheet=function(stylesheet){var _this=this;var moduleUrl=stylesheet.moduleUrl;var allStyleUrls=stylesheet.styleUrls.filter(isStyleUrlResolvable).map(function(url){return _this._urlResolver.resolve(moduleUrl,url);});var allStyles=stylesheet.styles.map(function(style){var styleWithImports=extractStyleUrls(_this._urlResolver,moduleUrl,style);allStyleUrls.push.apply(allStyleUrls,(0,_tslib.__spread)(styleWithImports.styleUrls));return styleWithImports.style;});return new CompileStylesheetMetadata({styles:allStyles,styleUrls:allStyleUrls,moduleUrl:moduleUrl});};return DirectiveNormalizer;}();exports.DirectiveNormalizer=DirectiveNormalizer;var TemplatePreparseVisitor=/** @class */function(){function TemplatePreparseVisitor(){this.ngContentSelectors=[];this.styles=[];this.styleUrls=[];this.ngNonBindableStackCount=0;}TemplatePreparseVisitor.prototype.visitElement=function(ast,context){var preparsedElement=preparseElement(ast);switch(preparsedElement.type){case PreparsedElementType.NG_CONTENT:if(this.ngNonBindableStackCount===0){this.ngContentSelectors.push(preparsedElement.selectAttr);}break;case PreparsedElementType.STYLE:var textContent_1='';ast.children.forEach(function(child){if(child instanceof Text){textContent_1+=child.value;}});this.styles.push(textContent_1);break;case PreparsedElementType.STYLESHEET:this.styleUrls.push(preparsedElement.hrefAttr);break;default:break;}if(preparsedElement.nonBindable){this.ngNonBindableStackCount++;}visitAll(this,ast.children);if(preparsedElement.nonBindable){this.ngNonBindableStackCount--;}return null;};TemplatePreparseVisitor.prototype.visitExpansion=function(ast,context){visitAll(this,ast.cases);};TemplatePreparseVisitor.prototype.visitExpansionCase=function(ast,context){visitAll(this,ast.expression);};TemplatePreparseVisitor.prototype.visitComment=function(ast,context){return null;};TemplatePreparseVisitor.prototype.visitAttribute=function(ast,context){return null;};TemplatePreparseVisitor.prototype.visitText=function(ast,context){return null;};return TemplatePreparseVisitor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var QUERY_METADATA_IDENTIFIERS=[createViewChild,createViewChildren,createContentChild,createContentChildren];/*
 * Resolve a `Type` for {@link Directive}.
 *
 * This interface can be overridden by the application developer to create custom behavior.
 *
 * See {@link Compiler}
 */var DirectiveResolver=/** @class */function(){function DirectiveResolver(_reflector){this._reflector=_reflector;}DirectiveResolver.prototype.isDirective=function(type){var typeMetadata=this._reflector.annotations(resolveForwardRef(type));return typeMetadata&&typeMetadata.some(isDirectiveMetadata);};DirectiveResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var typeMetadata=this._reflector.annotations(resolveForwardRef(type));if(typeMetadata){var metadata=findLast(typeMetadata,isDirectiveMetadata);if(metadata){var propertyMetadata=this._reflector.propMetadata(type);var guards=this._reflector.guards(type);return this._mergeWithPropertyMetadata(metadata,propertyMetadata,guards,type);}}if(throwIfNotFound){throw new Error("No Directive annotation found on "+stringify(type));}return null;};DirectiveResolver.prototype._mergeWithPropertyMetadata=function(dm,propertyMetadata,guards,directiveType){var inputs=[];var outputs=[];var host={};var queries={};Object.keys(propertyMetadata).forEach(function(propName){var input=findLast(propertyMetadata[propName],function(a){return createInput.isTypeOf(a);});if(input){if(input.bindingPropertyName){inputs.push(propName+": "+input.bindingPropertyName);}else{inputs.push(propName);}}var output=findLast(propertyMetadata[propName],function(a){return createOutput.isTypeOf(a);});if(output){if(output.bindingPropertyName){outputs.push(propName+": "+output.bindingPropertyName);}else{outputs.push(propName);}}var hostBindings=propertyMetadata[propName].filter(function(a){return createHostBinding.isTypeOf(a);});hostBindings.forEach(function(hostBinding){if(hostBinding.hostPropertyName){var startWith=hostBinding.hostPropertyName[0];if(startWith==='('){throw new Error("@HostBinding can not bind to events. Use @HostListener instead.");}else if(startWith==='['){throw new Error("@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.");}host["["+hostBinding.hostPropertyName+"]"]=propName;}else{host["["+propName+"]"]=propName;}});var hostListeners=propertyMetadata[propName].filter(function(a){return createHostListener.isTypeOf(a);});hostListeners.forEach(function(hostListener){var args=hostListener.args||[];host["("+hostListener.eventName+")"]=propName+"("+args.join(',')+")";});var query=findLast(propertyMetadata[propName],function(a){return QUERY_METADATA_IDENTIFIERS.some(function(i){return i.isTypeOf(a);});});if(query){queries[propName]=query;}});return this._merge(dm,inputs,outputs,host,queries,guards,directiveType);};DirectiveResolver.prototype._extractPublicName=function(def){return splitAtColon(def,[null,def])[1].trim();};DirectiveResolver.prototype._dedupeBindings=function(bindings){var names=new Set();var publicNames=new Set();var reversedResult=[];// go last to first to allow later entries to overwrite previous entries
for(var i=bindings.length-1;i>=0;i--){var binding=bindings[i];var name_1=this._extractPublicName(binding);publicNames.add(name_1);if(!names.has(name_1)){names.add(name_1);reversedResult.push(binding);}}return reversedResult.reverse();};DirectiveResolver.prototype._merge=function(directive,inputs,outputs,host,queries,guards,directiveType){var mergedInputs=this._dedupeBindings(directive.inputs?directive.inputs.concat(inputs):inputs);var mergedOutputs=this._dedupeBindings(directive.outputs?directive.outputs.concat(outputs):outputs);var mergedHost=directive.host?(0,_tslib.__assign)({},directive.host,host):host;var mergedQueries=directive.queries?(0,_tslib.__assign)({},directive.queries,queries):queries;if(createComponent.isTypeOf(directive)){var comp=directive;return createComponent({selector:comp.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:comp.exportAs,moduleId:comp.moduleId,queries:mergedQueries,changeDetection:comp.changeDetection,providers:comp.providers,viewProviders:comp.viewProviders,entryComponents:comp.entryComponents,template:comp.template,templateUrl:comp.templateUrl,styles:comp.styles,styleUrls:comp.styleUrls,encapsulation:comp.encapsulation,animations:comp.animations,interpolation:comp.interpolation,preserveWhitespaces:directive.preserveWhitespaces});}else{return createDirective({selector:directive.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:directive.exportAs,queries:mergedQueries,providers:directive.providers,guards:guards});}};return DirectiveResolver;}();exports.DirectiveResolver=DirectiveResolver;function isDirectiveMetadata(type){return createDirective.isTypeOf(type)||createComponent.isTypeOf(type);}function findLast(arr,condition){for(var i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var $EOF=0;var $TAB=9;var $LF=10;var $VTAB=11;var $FF=12;var $CR=13;var $SPACE=32;var $BANG=33;var $DQ=34;var $HASH=35;var $$=36;var $PERCENT=37;var $AMPERSAND=38;var $SQ=39;var $LPAREN=40;var $RPAREN=41;var $STAR=42;var $PLUS=43;var $COMMA=44;var $MINUS=45;var $PERIOD=46;var $SLASH=47;var $COLON=58;var $SEMICOLON=59;var $LT=60;var $EQ=61;var $GT=62;var $QUESTION=63;var $0=48;var $9=57;var $A=65;var $E=69;var $F=70;var $X=88;var $Z=90;var $LBRACKET=91;var $BACKSLASH=92;var $RBRACKET=93;var $CARET=94;var $_=95;var $a=97;var $e=101;var $f=102;var $n=110;var $r=114;var $t=116;var $u=117;var $v=118;var $x=120;var $z=122;var $LBRACE=123;var $BAR=124;var $RBRACE=125;var $NBSP=160;var $BT=96;function isWhitespace(code){return code>=$TAB&&code<=$SPACE||code==$NBSP;}function isDigit(code){return $0<=code&&code<=$9;}function isAsciiLetter(code){return code>=$a&&code<=$z||code>=$A&&code<=$Z;}function isAsciiHexDigit(code){return code>=$a&&code<=$f||code>=$A&&code<=$F||isDigit(code);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TokenType;exports.TokenType=TokenType;(function(TokenType){TokenType[TokenType["Character"]=0]="Character";TokenType[TokenType["Identifier"]=1]="Identifier";TokenType[TokenType["Keyword"]=2]="Keyword";TokenType[TokenType["String"]=3]="String";TokenType[TokenType["Operator"]=4]="Operator";TokenType[TokenType["Number"]=5]="Number";TokenType[TokenType["Error"]=6]="Error";})(TokenType||(exports.TokenType=TokenType={}));var KEYWORDS=['var','let','as','null','undefined','true','false','if','else','this'];var Lexer=/** @class */function(){function Lexer(){}Lexer.prototype.tokenize=function(text){var scanner=new _Scanner(text);var tokens=[];var token=scanner.scanToken();while(token!=null){tokens.push(token);token=scanner.scanToken();}return tokens;};return Lexer;}();exports.Lexer=Lexer;var Token=/** @class */function(){function Token(index,type,numValue,strValue){this.index=index;this.type=type;this.numValue=numValue;this.strValue=strValue;}Token.prototype.isCharacter=function(code){return this.type==TokenType.Character&&this.numValue==code;};Token.prototype.isNumber=function(){return this.type==TokenType.Number;};Token.prototype.isString=function(){return this.type==TokenType.String;};Token.prototype.isOperator=function(operater){return this.type==TokenType.Operator&&this.strValue==operater;};Token.prototype.isIdentifier=function(){return this.type==TokenType.Identifier;};Token.prototype.isKeyword=function(){return this.type==TokenType.Keyword;};Token.prototype.isKeywordLet=function(){return this.type==TokenType.Keyword&&this.strValue=='let';};Token.prototype.isKeywordAs=function(){return this.type==TokenType.Keyword&&this.strValue=='as';};Token.prototype.isKeywordNull=function(){return this.type==TokenType.Keyword&&this.strValue=='null';};Token.prototype.isKeywordUndefined=function(){return this.type==TokenType.Keyword&&this.strValue=='undefined';};Token.prototype.isKeywordTrue=function(){return this.type==TokenType.Keyword&&this.strValue=='true';};Token.prototype.isKeywordFalse=function(){return this.type==TokenType.Keyword&&this.strValue=='false';};Token.prototype.isKeywordThis=function(){return this.type==TokenType.Keyword&&this.strValue=='this';};Token.prototype.isError=function(){return this.type==TokenType.Error;};Token.prototype.toNumber=function(){return this.type==TokenType.Number?this.numValue:-1;};Token.prototype.toString=function(){switch(this.type){case TokenType.Character:case TokenType.Identifier:case TokenType.Keyword:case TokenType.Operator:case TokenType.String:case TokenType.Error:return this.strValue;case TokenType.Number:return this.numValue.toString();default:return null;}};return Token;}();exports.Token=Token;function newCharacterToken(index,code){return new Token(index,TokenType.Character,code,String.fromCharCode(code));}function newIdentifierToken(index,text){return new Token(index,TokenType.Identifier,0,text);}function newKeywordToken(index,text){return new Token(index,TokenType.Keyword,0,text);}function newOperatorToken(index,text){return new Token(index,TokenType.Operator,0,text);}function newStringToken(index,text){return new Token(index,TokenType.String,0,text);}function newNumberToken(index,n){return new Token(index,TokenType.Number,n,'');}function newErrorToken(index,message){return new Token(index,TokenType.Error,0,message);}var EOF=new Token(-1,TokenType.Character,0,'');exports.EOF=EOF;var _Scanner=/** @class */function(){function _Scanner(input){this.input=input;this.peek=0;this.index=-1;this.length=input.length;this.advance();}_Scanner.prototype.advance=function(){this.peek=++this.index>=this.length?$EOF:this.input.charCodeAt(this.index);};_Scanner.prototype.scanToken=function(){var input=this.input,length=this.length;var peek=this.peek,index=this.index;// Skip whitespace.
while(peek<=$SPACE){if(++index>=length){peek=$EOF;break;}else{peek=input.charCodeAt(index);}}this.peek=peek;this.index=index;if(index>=length){return null;}// Handle identifiers and numbers.
if(isIdentifierStart(peek))return this.scanIdentifier();if(isDigit(peek))return this.scanNumber(index);var start=index;switch(peek){case $PERIOD:this.advance();return isDigit(this.peek)?this.scanNumber(start):newCharacterToken(start,$PERIOD);case $LPAREN:case $RPAREN:case $LBRACE:case $RBRACE:case $LBRACKET:case $RBRACKET:case $COMMA:case $COLON:case $SEMICOLON:return this.scanCharacter(start,peek);case $SQ:case $DQ:return this.scanString();case $HASH:case $PLUS:case $MINUS:case $STAR:case $SLASH:case $PERCENT:case $CARET:return this.scanOperator(start,String.fromCharCode(peek));case $QUESTION:return this.scanComplexOperator(start,'?',$PERIOD,'.');case $LT:case $GT:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=');case $BANG:case $EQ:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=',$EQ,'=');case $AMPERSAND:return this.scanComplexOperator(start,'&',$AMPERSAND,'&');case $BAR:return this.scanComplexOperator(start,'|',$BAR,'|');case $NBSP:while(isWhitespace(this.peek)){this.advance();}return this.scanToken();}this.advance();return this.error("Unexpected character ["+String.fromCharCode(peek)+"]",0);};_Scanner.prototype.scanCharacter=function(start,code){this.advance();return newCharacterToken(start,code);};_Scanner.prototype.scanOperator=function(start,str){this.advance();return newOperatorToken(start,str);};/**
     * Tokenize a 2/3 char long operator
     *
     * @param start start index in the expression
     * @param one first symbol (always part of the operator)
     * @param twoCode code point for the second symbol
     * @param two second symbol (part of the operator when the second code point matches)
     * @param threeCode code point for the third symbol
     * @param three third symbol (part of the operator when provided and matches source expression)
     */_Scanner.prototype.scanComplexOperator=function(start,one,twoCode,two,threeCode,three){this.advance();var str=one;if(this.peek==twoCode){this.advance();str+=two;}if(threeCode!=null&&this.peek==threeCode){this.advance();str+=three;}return newOperatorToken(start,str);};_Scanner.prototype.scanIdentifier=function(){var start=this.index;this.advance();while(isIdentifierPart(this.peek)){this.advance();}var str=this.input.substring(start,this.index);return KEYWORDS.indexOf(str)>-1?newKeywordToken(start,str):newIdentifierToken(start,str);};_Scanner.prototype.scanNumber=function(start){var simple=this.index===start;this.advance();// Skip initial digit.
while(true){if(isDigit(this.peek)){// Do nothing.
}else if(this.peek==$PERIOD){simple=false;}else if(isExponentStart(this.peek)){this.advance();if(isExponentSign(this.peek))this.advance();if(!isDigit(this.peek))return this.error('Invalid exponent',-1);simple=false;}else{break;}this.advance();}var str=this.input.substring(start,this.index);var value=simple?parseIntAutoRadix(str):parseFloat(str);return newNumberToken(start,value);};_Scanner.prototype.scanString=function(){var start=this.index;var quote=this.peek;this.advance();// Skip initial quote.
var buffer='';var marker=this.index;var input=this.input;while(this.peek!=quote){if(this.peek==$BACKSLASH){buffer+=input.substring(marker,this.index);this.advance();var unescapedCode=void 0;// Workaround for TS2.1-introduced type strictness
this.peek=this.peek;if(this.peek==$u){// 4 character hex code for unicode character.
var hex=input.substring(this.index+1,this.index+5);if(/^[0-9a-f]+$/i.test(hex)){unescapedCode=parseInt(hex,16);}else{return this.error("Invalid unicode escape [\\u"+hex+"]",0);}for(var i=0;i<5;i++){this.advance();}}else{unescapedCode=unescape(this.peek);this.advance();}buffer+=String.fromCharCode(unescapedCode);marker=this.index;}else if(this.peek==$EOF){return this.error('Unterminated quote',0);}else{this.advance();}}var last=input.substring(marker,this.index);this.advance();// Skip terminating quote.
return newStringToken(start,buffer+last);};_Scanner.prototype.error=function(message,offset){var position=this.index+offset;return newErrorToken(position,"Lexer Error: "+message+" at column "+position+" in expression ["+this.input+"]");};return _Scanner;}();function isIdentifierStart(code){return $a<=code&&code<=$z||$A<=code&&code<=$Z||code==$_||code==$$;}function isIdentifier(input){if(input.length==0)return false;var scanner=new _Scanner(input);if(!isIdentifierStart(scanner.peek))return false;scanner.advance();while(scanner.peek!==$EOF){if(!isIdentifierPart(scanner.peek))return false;scanner.advance();}return true;}function isIdentifierPart(code){return isAsciiLetter(code)||isDigit(code)||code==$_||code==$$;}function isExponentStart(code){return code==$e||code==$E;}function isExponentSign(code){return code==$MINUS||code==$PLUS;}function isQuote(code){return code===$SQ||code===$DQ||code===$BT;}function unescape(code){switch(code){case $n:return $LF;case $f:return $FF;case $r:return $CR;case $t:return $TAB;case $v:return $VTAB;default:return code;}}function parseIntAutoRadix(text){var result=parseInt(text);if(isNaN(result)){throw new Error('Invalid integer literal when parsing '+text);}return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ParserError=/** @class */function(){function ParserError(message,input,errLocation,ctxLocation){this.input=input;this.errLocation=errLocation;this.ctxLocation=ctxLocation;this.message="Parser Error: "+message+" "+errLocation+" ["+input+"] in "+ctxLocation;}return ParserError;}();exports.ParserError=ParserError;var ParseSpan=/** @class */function(){function ParseSpan(start,end){this.start=start;this.end=end;}return ParseSpan;}();exports.ParseSpan=ParseSpan;var AST=/** @class */function(){function AST(span){this.span=span;}AST.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return null;};AST.prototype.toString=function(){return'AST';};return AST;}();/**
 * Represents a quoted expression of the form:
 *
 * quote = prefix `:` uninterpretedExpression
 * prefix = identifier
 * uninterpretedExpression = arbitrary string
 *
 * A quoted expression is meant to be pre-processed by an AST transformer that
 * converts it into another AST that no longer contains quoted expressions.
 * It is meant to allow third-party developers to extend Angular template
 * expression language. The `uninterpretedExpression` part of the quote is
 * therefore not interpreted by the Angular's own expression parser.
 */exports.AST=AST;var Quote=/** @class */function(_super){(0,_tslib.__extends)(Quote,_super);function Quote(span,prefix,uninterpretedExpression,location){var _this=_super.call(this,span)||this;_this.prefix=prefix;_this.uninterpretedExpression=uninterpretedExpression;_this.location=location;return _this;}Quote.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitQuote(this,context);};Quote.prototype.toString=function(){return'Quote';};return Quote;}(AST);exports.Quote=Quote;var EmptyExpr=/** @class */function(_super){(0,_tslib.__extends)(EmptyExpr,_super);function EmptyExpr(){return _super!==null&&_super.apply(this,arguments)||this;}EmptyExpr.prototype.visit=function(visitor,context){if(context===void 0){context=null;}// do nothing
};return EmptyExpr;}(AST);exports.EmptyExpr=EmptyExpr;var ImplicitReceiver=/** @class */function(_super){(0,_tslib.__extends)(ImplicitReceiver,_super);function ImplicitReceiver(){return _super!==null&&_super.apply(this,arguments)||this;}ImplicitReceiver.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitImplicitReceiver(this,context);};return ImplicitReceiver;}(AST);/**
 * Multiple expressions separated by a semicolon.
 */exports.ImplicitReceiver=ImplicitReceiver;var Chain=/** @class */function(_super){(0,_tslib.__extends)(Chain,_super);function Chain(span,expressions){var _this=_super.call(this,span)||this;_this.expressions=expressions;return _this;}Chain.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitChain(this,context);};return Chain;}(AST);exports.Chain=Chain;var Conditional=/** @class */function(_super){(0,_tslib.__extends)(Conditional,_super);function Conditional(span,condition,trueExp,falseExp){var _this=_super.call(this,span)||this;_this.condition=condition;_this.trueExp=trueExp;_this.falseExp=falseExp;return _this;}Conditional.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitConditional(this,context);};return Conditional;}(AST);exports.Conditional=Conditional;var PropertyRead=/** @class */function(_super){(0,_tslib.__extends)(PropertyRead,_super);function PropertyRead(span,receiver,name){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;return _this;}PropertyRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPropertyRead(this,context);};return PropertyRead;}(AST);exports.PropertyRead=PropertyRead;var PropertyWrite=/** @class */function(_super){(0,_tslib.__extends)(PropertyWrite,_super);function PropertyWrite(span,receiver,name,value){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;_this.value=value;return _this;}PropertyWrite.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPropertyWrite(this,context);};return PropertyWrite;}(AST);exports.PropertyWrite=PropertyWrite;var SafePropertyRead=/** @class */function(_super){(0,_tslib.__extends)(SafePropertyRead,_super);function SafePropertyRead(span,receiver,name){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;return _this;}SafePropertyRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitSafePropertyRead(this,context);};return SafePropertyRead;}(AST);exports.SafePropertyRead=SafePropertyRead;var KeyedRead=/** @class */function(_super){(0,_tslib.__extends)(KeyedRead,_super);function KeyedRead(span,obj,key){var _this=_super.call(this,span)||this;_this.obj=obj;_this.key=key;return _this;}KeyedRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitKeyedRead(this,context);};return KeyedRead;}(AST);exports.KeyedRead=KeyedRead;var KeyedWrite=/** @class */function(_super){(0,_tslib.__extends)(KeyedWrite,_super);function KeyedWrite(span,obj,key,value){var _this=_super.call(this,span)||this;_this.obj=obj;_this.key=key;_this.value=value;return _this;}KeyedWrite.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitKeyedWrite(this,context);};return KeyedWrite;}(AST);exports.KeyedWrite=KeyedWrite;var BindingPipe=/** @class */function(_super){(0,_tslib.__extends)(BindingPipe,_super);function BindingPipe(span,exp,name,args){var _this=_super.call(this,span)||this;_this.exp=exp;_this.name=name;_this.args=args;return _this;}BindingPipe.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPipe(this,context);};return BindingPipe;}(AST);exports.BindingPipe=BindingPipe;var LiteralPrimitive=/** @class */function(_super){(0,_tslib.__extends)(LiteralPrimitive,_super);function LiteralPrimitive(span,value){var _this=_super.call(this,span)||this;_this.value=value;return _this;}LiteralPrimitive.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralPrimitive(this,context);};return LiteralPrimitive;}(AST);exports.LiteralPrimitive=LiteralPrimitive;var LiteralArray=/** @class */function(_super){(0,_tslib.__extends)(LiteralArray,_super);function LiteralArray(span,expressions){var _this=_super.call(this,span)||this;_this.expressions=expressions;return _this;}LiteralArray.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralArray(this,context);};return LiteralArray;}(AST);exports.LiteralArray=LiteralArray;var LiteralMap=/** @class */function(_super){(0,_tslib.__extends)(LiteralMap,_super);function LiteralMap(span,keys,values){var _this=_super.call(this,span)||this;_this.keys=keys;_this.values=values;return _this;}LiteralMap.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralMap(this,context);};return LiteralMap;}(AST);exports.LiteralMap=LiteralMap;var Interpolation=/** @class */function(_super){(0,_tslib.__extends)(Interpolation,_super);function Interpolation(span,strings,expressions){var _this=_super.call(this,span)||this;_this.strings=strings;_this.expressions=expressions;return _this;}Interpolation.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitInterpolation(this,context);};return Interpolation;}(AST);exports.Interpolation=Interpolation;var Binary=/** @class */function(_super){(0,_tslib.__extends)(Binary,_super);function Binary(span,operation,left,right){var _this=_super.call(this,span)||this;_this.operation=operation;_this.left=left;_this.right=right;return _this;}Binary.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitBinary(this,context);};return Binary;}(AST);exports.Binary=Binary;var PrefixNot=/** @class */function(_super){(0,_tslib.__extends)(PrefixNot,_super);function PrefixNot(span,expression){var _this=_super.call(this,span)||this;_this.expression=expression;return _this;}PrefixNot.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPrefixNot(this,context);};return PrefixNot;}(AST);exports.PrefixNot=PrefixNot;var NonNullAssert=/** @class */function(_super){(0,_tslib.__extends)(NonNullAssert,_super);function NonNullAssert(span,expression){var _this=_super.call(this,span)||this;_this.expression=expression;return _this;}NonNullAssert.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitNonNullAssert(this,context);};return NonNullAssert;}(AST);exports.NonNullAssert=NonNullAssert;var MethodCall=/** @class */function(_super){(0,_tslib.__extends)(MethodCall,_super);function MethodCall(span,receiver,name,args){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;_this.args=args;return _this;}MethodCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitMethodCall(this,context);};return MethodCall;}(AST);exports.MethodCall=MethodCall;var SafeMethodCall=/** @class */function(_super){(0,_tslib.__extends)(SafeMethodCall,_super);function SafeMethodCall(span,receiver,name,args){var _this=_super.call(this,span)||this;_this.receiver=receiver;_this.name=name;_this.args=args;return _this;}SafeMethodCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitSafeMethodCall(this,context);};return SafeMethodCall;}(AST);exports.SafeMethodCall=SafeMethodCall;var FunctionCall=/** @class */function(_super){(0,_tslib.__extends)(FunctionCall,_super);function FunctionCall(span,target,args){var _this=_super.call(this,span)||this;_this.target=target;_this.args=args;return _this;}FunctionCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitFunctionCall(this,context);};return FunctionCall;}(AST);exports.FunctionCall=FunctionCall;var ASTWithSource=/** @class */function(_super){(0,_tslib.__extends)(ASTWithSource,_super);function ASTWithSource(ast,source,location,errors){var _this=_super.call(this,new ParseSpan(0,source==null?0:source.length))||this;_this.ast=ast;_this.source=source;_this.location=location;_this.errors=errors;return _this;}ASTWithSource.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return this.ast.visit(visitor,context);};ASTWithSource.prototype.toString=function(){return this.source+" in "+this.location;};return ASTWithSource;}(AST);exports.ASTWithSource=ASTWithSource;var TemplateBinding=/** @class */function(){function TemplateBinding(span,key,keyIsVar,name,expression){this.span=span;this.key=key;this.keyIsVar=keyIsVar;this.name=name;this.expression=expression;}return TemplateBinding;}();exports.TemplateBinding=TemplateBinding;var NullAstVisitor=/** @class */function(){function NullAstVisitor(){}NullAstVisitor.prototype.visitBinary=function(ast,context){};NullAstVisitor.prototype.visitChain=function(ast,context){};NullAstVisitor.prototype.visitConditional=function(ast,context){};NullAstVisitor.prototype.visitFunctionCall=function(ast,context){};NullAstVisitor.prototype.visitImplicitReceiver=function(ast,context){};NullAstVisitor.prototype.visitInterpolation=function(ast,context){};NullAstVisitor.prototype.visitKeyedRead=function(ast,context){};NullAstVisitor.prototype.visitKeyedWrite=function(ast,context){};NullAstVisitor.prototype.visitLiteralArray=function(ast,context){};NullAstVisitor.prototype.visitLiteralMap=function(ast,context){};NullAstVisitor.prototype.visitLiteralPrimitive=function(ast,context){};NullAstVisitor.prototype.visitMethodCall=function(ast,context){};NullAstVisitor.prototype.visitPipe=function(ast,context){};NullAstVisitor.prototype.visitPrefixNot=function(ast,context){};NullAstVisitor.prototype.visitNonNullAssert=function(ast,context){};NullAstVisitor.prototype.visitPropertyRead=function(ast,context){};NullAstVisitor.prototype.visitPropertyWrite=function(ast,context){};NullAstVisitor.prototype.visitQuote=function(ast,context){};NullAstVisitor.prototype.visitSafeMethodCall=function(ast,context){};NullAstVisitor.prototype.visitSafePropertyRead=function(ast,context){};return NullAstVisitor;}();exports.NullAstVisitor=NullAstVisitor;var RecursiveAstVisitor=/** @class */function(){function RecursiveAstVisitor(){}RecursiveAstVisitor.prototype.visitBinary=function(ast,context){ast.left.visit(this);ast.right.visit(this);return null;};RecursiveAstVisitor.prototype.visitChain=function(ast,context){return this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitConditional=function(ast,context){ast.condition.visit(this);ast.trueExp.visit(this);ast.falseExp.visit(this);return null;};RecursiveAstVisitor.prototype.visitPipe=function(ast,context){ast.exp.visit(this);this.visitAll(ast.args,context);return null;};RecursiveAstVisitor.prototype.visitFunctionCall=function(ast,context){ast.target.visit(this);this.visitAll(ast.args,context);return null;};RecursiveAstVisitor.prototype.visitImplicitReceiver=function(ast,context){return null;};RecursiveAstVisitor.prototype.visitInterpolation=function(ast,context){return this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitKeyedRead=function(ast,context){ast.obj.visit(this);ast.key.visit(this);return null;};RecursiveAstVisitor.prototype.visitKeyedWrite=function(ast,context){ast.obj.visit(this);ast.key.visit(this);ast.value.visit(this);return null;};RecursiveAstVisitor.prototype.visitLiteralArray=function(ast,context){return this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitLiteralMap=function(ast,context){return this.visitAll(ast.values,context);};RecursiveAstVisitor.prototype.visitLiteralPrimitive=function(ast,context){return null;};RecursiveAstVisitor.prototype.visitMethodCall=function(ast,context){ast.receiver.visit(this);return this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitPrefixNot=function(ast,context){ast.expression.visit(this);return null;};RecursiveAstVisitor.prototype.visitNonNullAssert=function(ast,context){ast.expression.visit(this);return null;};RecursiveAstVisitor.prototype.visitPropertyRead=function(ast,context){ast.receiver.visit(this);return null;};RecursiveAstVisitor.prototype.visitPropertyWrite=function(ast,context){ast.receiver.visit(this);ast.value.visit(this);return null;};RecursiveAstVisitor.prototype.visitSafePropertyRead=function(ast,context){ast.receiver.visit(this);return null;};RecursiveAstVisitor.prototype.visitSafeMethodCall=function(ast,context){ast.receiver.visit(this);return this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitAll=function(asts,context){var _this=this;asts.forEach(function(ast){return ast.visit(_this,context);});return null;};RecursiveAstVisitor.prototype.visitQuote=function(ast,context){return null;};return RecursiveAstVisitor;}();exports.RecursiveAstVisitor=RecursiveAstVisitor;var AstTransformer=/** @class */function(){function AstTransformer(){}AstTransformer.prototype.visitImplicitReceiver=function(ast,context){return ast;};AstTransformer.prototype.visitInterpolation=function(ast,context){return new Interpolation(ast.span,ast.strings,this.visitAll(ast.expressions));};AstTransformer.prototype.visitLiteralPrimitive=function(ast,context){return new LiteralPrimitive(ast.span,ast.value);};AstTransformer.prototype.visitPropertyRead=function(ast,context){return new PropertyRead(ast.span,ast.receiver.visit(this),ast.name);};AstTransformer.prototype.visitPropertyWrite=function(ast,context){return new PropertyWrite(ast.span,ast.receiver.visit(this),ast.name,ast.value.visit(this));};AstTransformer.prototype.visitSafePropertyRead=function(ast,context){return new SafePropertyRead(ast.span,ast.receiver.visit(this),ast.name);};AstTransformer.prototype.visitMethodCall=function(ast,context){return new MethodCall(ast.span,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitSafeMethodCall=function(ast,context){return new SafeMethodCall(ast.span,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitFunctionCall=function(ast,context){return new FunctionCall(ast.span,ast.target.visit(this),this.visitAll(ast.args));};AstTransformer.prototype.visitLiteralArray=function(ast,context){return new LiteralArray(ast.span,this.visitAll(ast.expressions));};AstTransformer.prototype.visitLiteralMap=function(ast,context){return new LiteralMap(ast.span,ast.keys,this.visitAll(ast.values));};AstTransformer.prototype.visitBinary=function(ast,context){return new Binary(ast.span,ast.operation,ast.left.visit(this),ast.right.visit(this));};AstTransformer.prototype.visitPrefixNot=function(ast,context){return new PrefixNot(ast.span,ast.expression.visit(this));};AstTransformer.prototype.visitNonNullAssert=function(ast,context){return new NonNullAssert(ast.span,ast.expression.visit(this));};AstTransformer.prototype.visitConditional=function(ast,context){return new Conditional(ast.span,ast.condition.visit(this),ast.trueExp.visit(this),ast.falseExp.visit(this));};AstTransformer.prototype.visitPipe=function(ast,context){return new BindingPipe(ast.span,ast.exp.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitKeyedRead=function(ast,context){return new KeyedRead(ast.span,ast.obj.visit(this),ast.key.visit(this));};AstTransformer.prototype.visitKeyedWrite=function(ast,context){return new KeyedWrite(ast.span,ast.obj.visit(this),ast.key.visit(this),ast.value.visit(this));};AstTransformer.prototype.visitAll=function(asts){var res=new Array(asts.length);for(var i=0;i<asts.length;++i){res[i]=asts[i].visit(this);}return res;};AstTransformer.prototype.visitChain=function(ast,context){return new Chain(ast.span,this.visitAll(ast.expressions));};AstTransformer.prototype.visitQuote=function(ast,context){return new Quote(ast.span,ast.prefix,ast.uninterpretedExpression,ast.location);};return AstTransformer;}();// A transformer that only creates new nodes if the transformer makes a change or
// a change is made a child node.
exports.AstTransformer=AstTransformer;var AstMemoryEfficientTransformer=/** @class */function(){function AstMemoryEfficientTransformer(){}AstMemoryEfficientTransformer.prototype.visitImplicitReceiver=function(ast,context){return ast;};AstMemoryEfficientTransformer.prototype.visitInterpolation=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions)return new Interpolation(ast.span,ast.strings,expressions);return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive=function(ast,context){return ast;};AstMemoryEfficientTransformer.prototype.visitPropertyRead=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new PropertyRead(ast.span,receiver,ast.name);}return ast;};AstMemoryEfficientTransformer.prototype.visitPropertyWrite=function(ast,context){var receiver=ast.receiver.visit(this);var value=ast.value.visit(this);if(receiver!==ast.receiver||value!==ast.value){return new PropertyWrite(ast.span,receiver,ast.name,value);}return ast;};AstMemoryEfficientTransformer.prototype.visitSafePropertyRead=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new SafePropertyRead(ast.span,receiver,ast.name);}return ast;};AstMemoryEfficientTransformer.prototype.visitMethodCall=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new MethodCall(ast.span,receiver,ast.name,this.visitAll(ast.args));}return ast;};AstMemoryEfficientTransformer.prototype.visitSafeMethodCall=function(ast,context){var receiver=ast.receiver.visit(this);var args=this.visitAll(ast.args);if(receiver!==ast.receiver||args!==ast.args){return new SafeMethodCall(ast.span,receiver,ast.name,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitFunctionCall=function(ast,context){var target=ast.target&&ast.target.visit(this);var args=this.visitAll(ast.args);if(target!==ast.target||args!==ast.args){return new FunctionCall(ast.span,target,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralArray=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions){return new LiteralArray(ast.span,expressions);}return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralMap=function(ast,context){var values=this.visitAll(ast.values);if(values!==ast.values){return new LiteralMap(ast.span,ast.keys,values);}return ast;};AstMemoryEfficientTransformer.prototype.visitBinary=function(ast,context){var left=ast.left.visit(this);var right=ast.right.visit(this);if(left!==ast.left||right!==ast.right){return new Binary(ast.span,ast.operation,left,right);}return ast;};AstMemoryEfficientTransformer.prototype.visitPrefixNot=function(ast,context){var expression=ast.expression.visit(this);if(expression!==ast.expression){return new PrefixNot(ast.span,expression);}return ast;};AstMemoryEfficientTransformer.prototype.visitNonNullAssert=function(ast,context){var expression=ast.expression.visit(this);if(expression!==ast.expression){return new NonNullAssert(ast.span,expression);}return ast;};AstMemoryEfficientTransformer.prototype.visitConditional=function(ast,context){var condition=ast.condition.visit(this);var trueExp=ast.trueExp.visit(this);var falseExp=ast.falseExp.visit(this);if(condition!==ast.condition||trueExp!==ast.trueExp||falseExp!==falseExp){return new Conditional(ast.span,condition,trueExp,falseExp);}return ast;};AstMemoryEfficientTransformer.prototype.visitPipe=function(ast,context){var exp=ast.exp.visit(this);var args=this.visitAll(ast.args);if(exp!==ast.exp||args!==ast.args){return new BindingPipe(ast.span,exp,ast.name,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitKeyedRead=function(ast,context){var obj=ast.obj.visit(this);var key=ast.key.visit(this);if(obj!==ast.obj||key!==ast.key){return new KeyedRead(ast.span,obj,key);}return ast;};AstMemoryEfficientTransformer.prototype.visitKeyedWrite=function(ast,context){var obj=ast.obj.visit(this);var key=ast.key.visit(this);var value=ast.value.visit(this);if(obj!==ast.obj||key!==ast.key||value!==ast.value){return new KeyedWrite(ast.span,obj,key,value);}return ast;};AstMemoryEfficientTransformer.prototype.visitAll=function(asts){var res=new Array(asts.length);var modified=false;for(var i=0;i<asts.length;++i){var original=asts[i];var value=original.visit(this);res[i]=value;modified=modified||value!==original;}return modified?res:asts;};AstMemoryEfficientTransformer.prototype.visitChain=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions){return new Chain(ast.span,expressions);}return ast;};AstMemoryEfficientTransformer.prototype.visitQuote=function(ast,context){return ast;};return AstMemoryEfficientTransformer;}();exports.AstMemoryEfficientTransformer=AstMemoryEfficientTransformer;function visitAstChildren(ast,visitor,context){function visit(ast){visitor.visit&&visitor.visit(ast,context)||ast.visit(visitor,context);}function visitAll(asts){asts.forEach(visit);}ast.visit({visitBinary:function visitBinary(ast){visit(ast.left);visit(ast.right);},visitChain:function visitChain(ast){visitAll(ast.expressions);},visitConditional:function visitConditional(ast){visit(ast.condition);visit(ast.trueExp);visit(ast.falseExp);},visitFunctionCall:function visitFunctionCall(ast){if(ast.target){visit(ast.target);}visitAll(ast.args);},visitImplicitReceiver:function visitImplicitReceiver(ast){},visitInterpolation:function visitInterpolation(ast){visitAll(ast.expressions);},visitKeyedRead:function visitKeyedRead(ast){visit(ast.obj);visit(ast.key);},visitKeyedWrite:function visitKeyedWrite(ast){visit(ast.obj);visit(ast.key);visit(ast.obj);},visitLiteralArray:function visitLiteralArray(ast){visitAll(ast.expressions);},visitLiteralMap:function visitLiteralMap(ast){},visitLiteralPrimitive:function visitLiteralPrimitive(ast){},visitMethodCall:function visitMethodCall(ast){visit(ast.receiver);visitAll(ast.args);},visitPipe:function visitPipe(ast){visit(ast.exp);visitAll(ast.args);},visitPrefixNot:function visitPrefixNot(ast){visit(ast.expression);},visitNonNullAssert:function visitNonNullAssert(ast){visit(ast.expression);},visitPropertyRead:function visitPropertyRead(ast){visit(ast.receiver);},visitPropertyWrite:function visitPropertyWrite(ast){visit(ast.receiver);visit(ast.value);},visitQuote:function visitQuote(ast){},visitSafeMethodCall:function visitSafeMethodCall(ast){visit(ast.receiver);visitAll(ast.args);},visitSafePropertyRead:function visitSafePropertyRead(ast){visit(ast.receiver);}});}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var SplitInterpolation=/** @class */function(){function SplitInterpolation(strings,expressions,offsets){this.strings=strings;this.expressions=expressions;this.offsets=offsets;}return SplitInterpolation;}();exports.SplitInterpolation=SplitInterpolation;var TemplateBindingParseResult=/** @class */function(){function TemplateBindingParseResult(templateBindings,warnings,errors){this.templateBindings=templateBindings;this.warnings=warnings;this.errors=errors;}return TemplateBindingParseResult;}();exports.TemplateBindingParseResult=TemplateBindingParseResult;function _createInterpolateRegExp(config){var pattern=escapeRegExp(config.start)+'([\\s\\S]*?)'+escapeRegExp(config.end);return new RegExp(pattern,'g');}var Parser=/** @class */function(){function Parser(_lexer){this._lexer=_lexer;this.errors=[];}Parser.prototype.parseAction=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}this._checkNoInterpolation(input,location,interpolationConfig);var sourceToLex=this._stripComments(input);var tokens=this._lexer.tokenize(this._stripComments(input));var ast=new _ParseAST(input,location,tokens,sourceToLex.length,true,this.errors,input.length-sourceToLex.length).parseChain();return new ASTWithSource(ast,input,location,this.errors);};Parser.prototype.parseBinding=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var ast=this._parseBindingAst(input,location,interpolationConfig);return new ASTWithSource(ast,input,location,this.errors);};Parser.prototype.parseSimpleBinding=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var ast=this._parseBindingAst(input,location,interpolationConfig);var errors=SimpleExpressionChecker.check(ast);if(errors.length>0){this._reportError("Host binding expression cannot contain "+errors.join(' '),input,location);}return new ASTWithSource(ast,input,location,this.errors);};Parser.prototype._reportError=function(message,input,errLocation,ctxLocation){this.errors.push(new ParserError(message,input,errLocation,ctxLocation));};Parser.prototype._parseBindingAst=function(input,location,interpolationConfig){// Quotes expressions use 3rd-party expression language. We don't want to use
// our lexer or parser for that, so we check for that ahead of time.
var quote=this._parseQuote(input,location);if(quote!=null){return quote;}this._checkNoInterpolation(input,location,interpolationConfig);var sourceToLex=this._stripComments(input);var tokens=this._lexer.tokenize(sourceToLex);return new _ParseAST(input,location,tokens,sourceToLex.length,false,this.errors,input.length-sourceToLex.length).parseChain();};Parser.prototype._parseQuote=function(input,location){if(input==null)return null;var prefixSeparatorIndex=input.indexOf(':');if(prefixSeparatorIndex==-1)return null;var prefix=input.substring(0,prefixSeparatorIndex).trim();if(!isIdentifier(prefix))return null;var uninterpretedExpression=input.substring(prefixSeparatorIndex+1);return new Quote(new ParseSpan(0,input.length),prefix,uninterpretedExpression,location);};Parser.prototype.parseTemplateBindings=function(prefixToken,input,location){var tokens=this._lexer.tokenize(input);if(prefixToken){// Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).
var prefixTokens=this._lexer.tokenize(prefixToken).map(function(t){t.index=0;return t;});tokens.unshift.apply(tokens,(0,_tslib.__spread)(prefixTokens));}return new _ParseAST(input,location,tokens,input.length,false,this.errors,0).parseTemplateBindings();};Parser.prototype.parseInterpolation=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var split=this.splitInterpolation(input,location,interpolationConfig);if(split==null)return null;var expressions=[];for(var i=0;i<split.expressions.length;++i){var expressionText=split.expressions[i];var sourceToLex=this._stripComments(expressionText);var tokens=this._lexer.tokenize(sourceToLex);var ast=new _ParseAST(input,location,tokens,sourceToLex.length,false,this.errors,split.offsets[i]+(expressionText.length-sourceToLex.length)).parseChain();expressions.push(ast);}return new ASTWithSource(new Interpolation(new ParseSpan(0,input==null?0:input.length),split.strings,expressions),input,location,this.errors);};Parser.prototype.splitInterpolation=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var regexp=_createInterpolateRegExp(interpolationConfig);var parts=input.split(regexp);if(parts.length<=1){return null;}var strings=[];var expressions=[];var offsets=[];var offset=0;for(var i=0;i<parts.length;i++){var part=parts[i];if(i%2===0){// fixed string
strings.push(part);offset+=part.length;}else if(part.trim().length>0){offset+=interpolationConfig.start.length;expressions.push(part);offsets.push(offset);offset+=part.length+interpolationConfig.end.length;}else{this._reportError('Blank expressions are not allowed in interpolated strings',input,"at column "+this._findInterpolationErrorColumn(parts,i,interpolationConfig)+" in",location);expressions.push('$implict');offsets.push(offset);}}return new SplitInterpolation(strings,expressions,offsets);};Parser.prototype.wrapLiteralPrimitive=function(input,location){return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0,input==null?0:input.length),input),input,location,this.errors);};Parser.prototype._stripComments=function(input){var i=this._commentStart(input);return i!=null?input.substring(0,i).trim():input;};Parser.prototype._commentStart=function(input){var outerQuote=null;for(var i=0;i<input.length-1;i++){var char=input.charCodeAt(i);var nextChar=input.charCodeAt(i+1);if(char===$SLASH&&nextChar==$SLASH&&outerQuote==null)return i;if(outerQuote===char){outerQuote=null;}else if(outerQuote==null&&isQuote(char)){outerQuote=char;}}return null;};Parser.prototype._checkNoInterpolation=function(input,location,interpolationConfig){var regexp=_createInterpolateRegExp(interpolationConfig);var parts=input.split(regexp);if(parts.length>1){this._reportError("Got interpolation ("+interpolationConfig.start+interpolationConfig.end+") where expression was expected",input,"at column "+this._findInterpolationErrorColumn(parts,1,interpolationConfig)+" in",location);}};Parser.prototype._findInterpolationErrorColumn=function(parts,partInErrIdx,interpolationConfig){var errLocation='';for(var j=0;j<partInErrIdx;j++){errLocation+=j%2===0?parts[j]:""+interpolationConfig.start+parts[j]+interpolationConfig.end;}return errLocation.length;};return Parser;}();exports.Parser=Parser;var _ParseAST=/** @class */function(){function _ParseAST(input,location,tokens,inputLength,parseAction,errors,offset){this.input=input;this.location=location;this.tokens=tokens;this.inputLength=inputLength;this.parseAction=parseAction;this.errors=errors;this.offset=offset;this.rparensExpected=0;this.rbracketsExpected=0;this.rbracesExpected=0;this.index=0;}_ParseAST.prototype.peek=function(offset){var i=this.index+offset;return i<this.tokens.length?this.tokens[i]:EOF;};Object.defineProperty(_ParseAST.prototype,"next",{get:function get(){return this.peek(0);},enumerable:true,configurable:true});Object.defineProperty(_ParseAST.prototype,"inputIndex",{get:function get(){return this.index<this.tokens.length?this.next.index+this.offset:this.inputLength+this.offset;},enumerable:true,configurable:true});_ParseAST.prototype.span=function(start){return new ParseSpan(start,this.inputIndex);};_ParseAST.prototype.advance=function(){this.index++;};_ParseAST.prototype.optionalCharacter=function(code){if(this.next.isCharacter(code)){this.advance();return true;}else{return false;}};_ParseAST.prototype.peekKeywordLet=function(){return this.next.isKeywordLet();};_ParseAST.prototype.peekKeywordAs=function(){return this.next.isKeywordAs();};_ParseAST.prototype.expectCharacter=function(code){if(this.optionalCharacter(code))return;this.error("Missing expected "+String.fromCharCode(code));};_ParseAST.prototype.optionalOperator=function(op){if(this.next.isOperator(op)){this.advance();return true;}else{return false;}};_ParseAST.prototype.expectOperator=function(operator){if(this.optionalOperator(operator))return;this.error("Missing expected operator "+operator);};_ParseAST.prototype.expectIdentifierOrKeyword=function(){var n=this.next;if(!n.isIdentifier()&&!n.isKeyword()){this.error("Unexpected token "+n+", expected identifier or keyword");return'';}this.advance();return n.toString();};_ParseAST.prototype.expectIdentifierOrKeywordOrString=function(){var n=this.next;if(!n.isIdentifier()&&!n.isKeyword()&&!n.isString()){this.error("Unexpected token "+n+", expected identifier, keyword, or string");return'';}this.advance();return n.toString();};_ParseAST.prototype.parseChain=function(){var exprs=[];var start=this.inputIndex;while(this.index<this.tokens.length){var expr=this.parsePipe();exprs.push(expr);if(this.optionalCharacter($SEMICOLON)){if(!this.parseAction){this.error('Binding expression cannot contain chained expression');}while(this.optionalCharacter($SEMICOLON)){}// read all semicolons
}else if(this.index<this.tokens.length){this.error("Unexpected token '"+this.next+"'");}}if(exprs.length==0)return new EmptyExpr(this.span(start));if(exprs.length==1)return exprs[0];return new Chain(this.span(start),exprs);};_ParseAST.prototype.parsePipe=function(){var result=this.parseExpression();if(this.optionalOperator('|')){if(this.parseAction){this.error('Cannot have a pipe in an action expression');}do{var name_1=this.expectIdentifierOrKeyword();var args=[];while(this.optionalCharacter($COLON)){args.push(this.parseExpression());}result=new BindingPipe(this.span(result.span.start),result,name_1,args);}while(this.optionalOperator('|'));}return result;};_ParseAST.prototype.parseExpression=function(){return this.parseConditional();};_ParseAST.prototype.parseConditional=function(){var start=this.inputIndex;var result=this.parseLogicalOr();if(this.optionalOperator('?')){var yes=this.parsePipe();var no=void 0;if(!this.optionalCharacter($COLON)){var end=this.inputIndex;var expression=this.input.substring(start,end);this.error("Conditional expression "+expression+" requires all 3 expressions");no=new EmptyExpr(this.span(start));}else{no=this.parsePipe();}return new Conditional(this.span(start),result,yes,no);}else{return result;}};_ParseAST.prototype.parseLogicalOr=function(){// '||'
var result=this.parseLogicalAnd();while(this.optionalOperator('||')){var right=this.parseLogicalAnd();result=new Binary(this.span(result.span.start),'||',result,right);}return result;};_ParseAST.prototype.parseLogicalAnd=function(){// '&&'
var result=this.parseEquality();while(this.optionalOperator('&&')){var right=this.parseEquality();result=new Binary(this.span(result.span.start),'&&',result,right);}return result;};_ParseAST.prototype.parseEquality=function(){// '==','!=','===','!=='
var result=this.parseRelational();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'==':case'===':case'!=':case'!==':this.advance();var right=this.parseRelational();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseRelational=function(){// '<', '>', '<=', '>='
var result=this.parseAdditive();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'<':case'>':case'<=':case'>=':this.advance();var right=this.parseAdditive();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseAdditive=function(){// '+', '-'
var result=this.parseMultiplicative();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'+':case'-':this.advance();var right=this.parseMultiplicative();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseMultiplicative=function(){// '*', '%', '/'
var result=this.parsePrefix();while(this.next.type==TokenType.Operator){var operator=this.next.strValue;switch(operator){case'*':case'%':case'/':this.advance();var right=this.parsePrefix();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parsePrefix=function(){if(this.next.type==TokenType.Operator){var start=this.inputIndex;var operator=this.next.strValue;var result=void 0;switch(operator){case'+':this.advance();result=this.parsePrefix();return new Binary(this.span(start),'-',result,new LiteralPrimitive(new ParseSpan(start,start),0));case'-':this.advance();result=this.parsePrefix();return new Binary(this.span(start),operator,new LiteralPrimitive(new ParseSpan(start,start),0),result);case'!':this.advance();result=this.parsePrefix();return new PrefixNot(this.span(start),result);}}return this.parseCallChain();};_ParseAST.prototype.parseCallChain=function(){var result=this.parsePrimary();while(true){if(this.optionalCharacter($PERIOD)){result=this.parseAccessMemberOrMethodCall(result,false);}else if(this.optionalOperator('?.')){result=this.parseAccessMemberOrMethodCall(result,true);}else if(this.optionalCharacter($LBRACKET)){this.rbracketsExpected++;var key=this.parsePipe();this.rbracketsExpected--;this.expectCharacter($RBRACKET);if(this.optionalOperator('=')){var value=this.parseConditional();result=new KeyedWrite(this.span(result.span.start),result,key,value);}else{result=new KeyedRead(this.span(result.span.start),result,key);}}else if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var args=this.parseCallArguments();this.rparensExpected--;this.expectCharacter($RPAREN);result=new FunctionCall(this.span(result.span.start),result,args);}else if(this.optionalOperator('!')){result=new NonNullAssert(this.span(result.span.start),result);}else{return result;}}};_ParseAST.prototype.parsePrimary=function(){var start=this.inputIndex;if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var result=this.parsePipe();this.rparensExpected--;this.expectCharacter($RPAREN);return result;}else if(this.next.isKeywordNull()){this.advance();return new LiteralPrimitive(this.span(start),null);}else if(this.next.isKeywordUndefined()){this.advance();return new LiteralPrimitive(this.span(start),void 0);}else if(this.next.isKeywordTrue()){this.advance();return new LiteralPrimitive(this.span(start),true);}else if(this.next.isKeywordFalse()){this.advance();return new LiteralPrimitive(this.span(start),false);}else if(this.next.isKeywordThis()){this.advance();return new ImplicitReceiver(this.span(start));}else if(this.optionalCharacter($LBRACKET)){this.rbracketsExpected++;var elements=this.parseExpressionList($RBRACKET);this.rbracketsExpected--;this.expectCharacter($RBRACKET);return new LiteralArray(this.span(start),elements);}else if(this.next.isCharacter($LBRACE)){return this.parseLiteralMap();}else if(this.next.isIdentifier()){return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)),false);}else if(this.next.isNumber()){var value=this.next.toNumber();this.advance();return new LiteralPrimitive(this.span(start),value);}else if(this.next.isString()){var literalValue=this.next.toString();this.advance();return new LiteralPrimitive(this.span(start),literalValue);}else if(this.index>=this.tokens.length){this.error("Unexpected end of expression: "+this.input);return new EmptyExpr(this.span(start));}else{this.error("Unexpected token "+this.next);return new EmptyExpr(this.span(start));}};_ParseAST.prototype.parseExpressionList=function(terminator){var result=[];if(!this.next.isCharacter(terminator)){do{result.push(this.parsePipe());}while(this.optionalCharacter($COMMA));}return result;};_ParseAST.prototype.parseLiteralMap=function(){var keys=[];var values=[];var start=this.inputIndex;this.expectCharacter($LBRACE);if(!this.optionalCharacter($RBRACE)){this.rbracesExpected++;do{var quoted=this.next.isString();var key=this.expectIdentifierOrKeywordOrString();keys.push({key:key,quoted:quoted});this.expectCharacter($COLON);values.push(this.parsePipe());}while(this.optionalCharacter($COMMA));this.rbracesExpected--;this.expectCharacter($RBRACE);}return new LiteralMap(this.span(start),keys,values);};_ParseAST.prototype.parseAccessMemberOrMethodCall=function(receiver,isSafe){if(isSafe===void 0){isSafe=false;}var start=receiver.span.start;var id=this.expectIdentifierOrKeyword();if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var args=this.parseCallArguments();this.expectCharacter($RPAREN);this.rparensExpected--;var span=this.span(start);return isSafe?new SafeMethodCall(span,receiver,id,args):new MethodCall(span,receiver,id,args);}else{if(isSafe){if(this.optionalOperator('=')){this.error('The \'?.\' operator cannot be used in the assignment');return new EmptyExpr(this.span(start));}else{return new SafePropertyRead(this.span(start),receiver,id);}}else{if(this.optionalOperator('=')){if(!this.parseAction){this.error('Bindings cannot contain assignments');return new EmptyExpr(this.span(start));}var value=this.parseConditional();return new PropertyWrite(this.span(start),receiver,id,value);}else{return new PropertyRead(this.span(start),receiver,id);}}}};_ParseAST.prototype.parseCallArguments=function(){if(this.next.isCharacter($RPAREN))return[];var positionals=[];do{positionals.push(this.parsePipe());}while(this.optionalCharacter($COMMA));return positionals;};/**
     * An identifier, a keyword, a string with an optional `-` in between.
     */_ParseAST.prototype.expectTemplateBindingKey=function(){var result='';var operatorFound=false;do{result+=this.expectIdentifierOrKeywordOrString();operatorFound=this.optionalOperator('-');if(operatorFound){result+='-';}}while(operatorFound);return result.toString();};_ParseAST.prototype.parseTemplateBindings=function(){var bindings=[];var prefix=null;var warnings=[];while(this.index<this.tokens.length){var start=this.inputIndex;var keyIsVar=this.peekKeywordLet();if(keyIsVar){this.advance();}var rawKey=this.expectTemplateBindingKey();var key=rawKey;if(!keyIsVar){if(prefix==null){prefix=key;}else{key=prefix+key[0].toUpperCase()+key.substring(1);}}this.optionalCharacter($COLON);var name_2=null;var expression=null;if(keyIsVar){if(this.optionalOperator('=')){name_2=this.expectTemplateBindingKey();}else{name_2='\$implicit';}}else if(this.peekKeywordAs()){var letStart=this.inputIndex;this.advance();// consume `as`
name_2=rawKey;key=this.expectTemplateBindingKey();// read local var name
keyIsVar=true;}else if(this.next!==EOF&&!this.peekKeywordLet()){var start_1=this.inputIndex;var ast=this.parsePipe();var source=this.input.substring(start_1-this.offset,this.inputIndex-this.offset);expression=new ASTWithSource(ast,source,this.location,this.errors);}bindings.push(new TemplateBinding(this.span(start),key,keyIsVar,name_2,expression));if(this.peekKeywordAs()&&!keyIsVar){var letStart=this.inputIndex;this.advance();// consume `as`
var letName=this.expectTemplateBindingKey();// read local var name
bindings.push(new TemplateBinding(this.span(letStart),letName,true,key,null));}if(!this.optionalCharacter($SEMICOLON)){this.optionalCharacter($COMMA);}}return new TemplateBindingParseResult(bindings,warnings,this.errors);};_ParseAST.prototype.error=function(message,index){if(index===void 0){index=null;}this.errors.push(new ParserError(message,this.input,this.locationText(index),this.location));this.skip();};_ParseAST.prototype.locationText=function(index){if(index===void 0){index=null;}if(index==null)index=this.index;return index<this.tokens.length?"at column "+(this.tokens[index].index+1)+" in":"at the end of the expression";};// Error recovery should skip tokens until it encounters a recovery point. skip() treats
// the end of input and a ';' as unconditionally a recovery point. It also treats ')',
// '}' and ']' as conditional recovery points if one of calling productions is expecting
// one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing
// more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because
// of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols
// must be conditional as they must be skipped if none of the calling productions are not
// expecting the closing token else we will never make progress in the case of an
// extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because
// parseChain() is always the root production and it expects a ';'.
// If a production expects one of these token it increments the corresponding nesting count,
// and then decrements it just prior to checking if the token is in the input.
_ParseAST.prototype.skip=function(){var n=this.next;while(this.index<this.tokens.length&&!n.isCharacter($SEMICOLON)&&(this.rparensExpected<=0||!n.isCharacter($RPAREN))&&(this.rbracesExpected<=0||!n.isCharacter($RBRACE))&&(this.rbracketsExpected<=0||!n.isCharacter($RBRACKET))){if(this.next.isError()){this.errors.push(new ParserError(this.next.toString(),this.input,this.locationText(),this.location));}this.advance();n=this.next;}};return _ParseAST;}();exports._ParseAST=_ParseAST;var SimpleExpressionChecker=/** @class */function(){function SimpleExpressionChecker(){this.errors=[];}SimpleExpressionChecker.check=function(ast){var s=new SimpleExpressionChecker();ast.visit(s);return s.errors;};SimpleExpressionChecker.prototype.visitImplicitReceiver=function(ast,context){};SimpleExpressionChecker.prototype.visitInterpolation=function(ast,context){};SimpleExpressionChecker.prototype.visitLiteralPrimitive=function(ast,context){};SimpleExpressionChecker.prototype.visitPropertyRead=function(ast,context){};SimpleExpressionChecker.prototype.visitPropertyWrite=function(ast,context){};SimpleExpressionChecker.prototype.visitSafePropertyRead=function(ast,context){};SimpleExpressionChecker.prototype.visitMethodCall=function(ast,context){};SimpleExpressionChecker.prototype.visitSafeMethodCall=function(ast,context){};SimpleExpressionChecker.prototype.visitFunctionCall=function(ast,context){};SimpleExpressionChecker.prototype.visitLiteralArray=function(ast,context){this.visitAll(ast.expressions);};SimpleExpressionChecker.prototype.visitLiteralMap=function(ast,context){this.visitAll(ast.values);};SimpleExpressionChecker.prototype.visitBinary=function(ast,context){};SimpleExpressionChecker.prototype.visitPrefixNot=function(ast,context){};SimpleExpressionChecker.prototype.visitNonNullAssert=function(ast,context){};SimpleExpressionChecker.prototype.visitConditional=function(ast,context){};SimpleExpressionChecker.prototype.visitPipe=function(ast,context){this.errors.push('pipes');};SimpleExpressionChecker.prototype.visitKeyedRead=function(ast,context){};SimpleExpressionChecker.prototype.visitKeyedWrite=function(ast,context){};SimpleExpressionChecker.prototype.visitAll=function(asts){var _this=this;return asts.map(function(node){return node.visit(_this);});};SimpleExpressionChecker.prototype.visitChain=function(ast,context){};SimpleExpressionChecker.prototype.visitQuote=function(ast,context){};return SimpleExpressionChecker;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ParseLocation=/** @class */function(){function ParseLocation(file,offset,line,col){this.file=file;this.offset=offset;this.line=line;this.col=col;}ParseLocation.prototype.toString=function(){return this.offset!=null?this.file.url+"@"+this.line+":"+this.col:this.file.url;};ParseLocation.prototype.moveBy=function(delta){var source=this.file.content;var len=source.length;var offset=this.offset;var line=this.line;var col=this.col;while(offset>0&&delta<0){offset--;delta++;var ch=source.charCodeAt(offset);if(ch==$LF){line--;var priorLine=source.substr(0,offset-1).lastIndexOf(String.fromCharCode($LF));col=priorLine>0?offset-priorLine:offset;}else{col--;}}while(offset<len&&delta>0){var ch=source.charCodeAt(offset);offset++;delta--;if(ch==$LF){line++;col=0;}else{col++;}}return new ParseLocation(this.file,offset,line,col);};// Return the source around the location
// Up to `maxChars` or `maxLines` on each side of the location
ParseLocation.prototype.getContext=function(maxChars,maxLines){var content=this.file.content;var startOffset=this.offset;if(startOffset!=null){if(startOffset>content.length-1){startOffset=content.length-1;}var endOffset=startOffset;var ctxChars=0;var ctxLines=0;while(ctxChars<maxChars&&startOffset>0){startOffset--;ctxChars++;if(content[startOffset]=='\n'){if(++ctxLines==maxLines){break;}}}ctxChars=0;ctxLines=0;while(ctxChars<maxChars&&endOffset<content.length-1){endOffset++;ctxChars++;if(content[endOffset]=='\n'){if(++ctxLines==maxLines){break;}}}return{before:content.substring(startOffset,this.offset),after:content.substring(this.offset,endOffset+1)};}return null;};return ParseLocation;}();exports.ParseLocation=ParseLocation;var ParseSourceFile=/** @class */function(){function ParseSourceFile(content,url){this.content=content;this.url=url;}return ParseSourceFile;}();exports.ParseSourceFile=ParseSourceFile;var ParseSourceSpan=/** @class */function(){function ParseSourceSpan(start,end,details){if(details===void 0){details=null;}this.start=start;this.end=end;this.details=details;}ParseSourceSpan.prototype.toString=function(){return this.start.file.content.substring(this.start.offset,this.end.offset);};return ParseSourceSpan;}();exports.ParseSourceSpan=ParseSourceSpan;var ParseErrorLevel;exports.ParseErrorLevel=ParseErrorLevel;(function(ParseErrorLevel){ParseErrorLevel[ParseErrorLevel["WARNING"]=0]="WARNING";ParseErrorLevel[ParseErrorLevel["ERROR"]=1]="ERROR";})(ParseErrorLevel||(exports.ParseErrorLevel=ParseErrorLevel={}));var ParseError=/** @class */function(){function ParseError(span,msg,level){if(level===void 0){level=ParseErrorLevel.ERROR;}this.span=span;this.msg=msg;this.level=level;}ParseError.prototype.contextualMessage=function(){var ctx=this.span.start.getContext(100,3);return ctx?this.msg+" (\""+ctx.before+"["+ParseErrorLevel[this.level]+" ->]"+ctx.after+"\")":this.msg;};ParseError.prototype.toString=function(){var details=this.span.details?", "+this.span.details:'';return this.contextualMessage()+": "+this.span.start+details;};return ParseError;}();exports.ParseError=ParseError;function typeSourceSpan(kind,type){var moduleUrl=identifierModuleUrl(type);var sourceFileName=moduleUrl!=null?"in "+kind+" "+identifierName(type)+" in "+moduleUrl:"in "+kind+" "+identifierName(type);var sourceFile=new ParseSourceFile('',sourceFileName);return new ParseSourceSpan(new ParseLocation(sourceFile,-1,-1,-1),new ParseLocation(sourceFile,-1,-1,-1));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TokenType$1;(function(TokenType){TokenType[TokenType["TAG_OPEN_START"]=0]="TAG_OPEN_START";TokenType[TokenType["TAG_OPEN_END"]=1]="TAG_OPEN_END";TokenType[TokenType["TAG_OPEN_END_VOID"]=2]="TAG_OPEN_END_VOID";TokenType[TokenType["TAG_CLOSE"]=3]="TAG_CLOSE";TokenType[TokenType["TEXT"]=4]="TEXT";TokenType[TokenType["ESCAPABLE_RAW_TEXT"]=5]="ESCAPABLE_RAW_TEXT";TokenType[TokenType["RAW_TEXT"]=6]="RAW_TEXT";TokenType[TokenType["COMMENT_START"]=7]="COMMENT_START";TokenType[TokenType["COMMENT_END"]=8]="COMMENT_END";TokenType[TokenType["CDATA_START"]=9]="CDATA_START";TokenType[TokenType["CDATA_END"]=10]="CDATA_END";TokenType[TokenType["ATTR_NAME"]=11]="ATTR_NAME";TokenType[TokenType["ATTR_VALUE"]=12]="ATTR_VALUE";TokenType[TokenType["DOC_TYPE"]=13]="DOC_TYPE";TokenType[TokenType["EXPANSION_FORM_START"]=14]="EXPANSION_FORM_START";TokenType[TokenType["EXPANSION_CASE_VALUE"]=15]="EXPANSION_CASE_VALUE";TokenType[TokenType["EXPANSION_CASE_EXP_START"]=16]="EXPANSION_CASE_EXP_START";TokenType[TokenType["EXPANSION_CASE_EXP_END"]=17]="EXPANSION_CASE_EXP_END";TokenType[TokenType["EXPANSION_FORM_END"]=18]="EXPANSION_FORM_END";TokenType[TokenType["EOF"]=19]="EOF";})(TokenType$1||(TokenType$1={}));var Token$1=/** @class */function(){function Token(type,parts,sourceSpan){this.type=type;this.parts=parts;this.sourceSpan=sourceSpan;}return Token;}();var TokenError=/** @class */function(_super){(0,_tslib.__extends)(TokenError,_super);function TokenError(errorMsg,tokenType,span){var _this=_super.call(this,span,errorMsg)||this;_this.tokenType=tokenType;return _this;}return TokenError;}(ParseError);var TokenizeResult=/** @class */function(){function TokenizeResult(tokens,errors){this.tokens=tokens;this.errors=errors;}return TokenizeResult;}();function tokenize(source,url,getTagDefinition,tokenizeExpansionForms,interpolationConfig){if(tokenizeExpansionForms===void 0){tokenizeExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}return new _Tokenizer(new ParseSourceFile(source,url),getTagDefinition,tokenizeExpansionForms,interpolationConfig).tokenize();}var _CR_OR_CRLF_REGEXP=/\r\n?/g;function _unexpectedCharacterErrorMsg(charCode){var char=charCode===$EOF?'EOF':String.fromCharCode(charCode);return"Unexpected character \""+char+"\"";}function _unknownEntityErrorMsg(entitySrc){return"Unknown entity \""+entitySrc+"\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax";}var _ControlFlowError=/** @class */function(){function _ControlFlowError(error){this.error=error;}return _ControlFlowError;}();// See http://www.w3.org/TR/html51/syntax.html#writing
var _Tokenizer=/** @class */function(){/**
     * @param _file The html source
     * @param _getTagDefinition
     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)
     * @param _interpolationConfig
     */function _Tokenizer(_file,_getTagDefinition,_tokenizeIcu,_interpolationConfig){if(_interpolationConfig===void 0){_interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}this._file=_file;this._getTagDefinition=_getTagDefinition;this._tokenizeIcu=_tokenizeIcu;this._interpolationConfig=_interpolationConfig;// Note: this is always lowercase!
this._peek=-1;this._nextPeek=-1;this._index=-1;this._line=0;this._column=-1;this._expansionCaseStack=[];this._inInterpolation=false;this.tokens=[];this.errors=[];this._input=_file.content;this._length=_file.content.length;this._advance();}_Tokenizer.prototype._processCarriageReturns=function(content){// http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream
// In order to keep the original position in the source, we can not
// pre-process it.
// Instead CRs are processed right before instantiating the tokens.
return content.replace(_CR_OR_CRLF_REGEXP,'\n');};_Tokenizer.prototype.tokenize=function(){while(this._peek!==$EOF){var start=this._getLocation();try{if(this._attemptCharCode($LT)){if(this._attemptCharCode($BANG)){if(this._attemptCharCode($LBRACKET)){this._consumeCdata(start);}else if(this._attemptCharCode($MINUS)){this._consumeComment(start);}else{this._consumeDocType(start);}}else if(this._attemptCharCode($SLASH)){this._consumeTagClose(start);}else{this._consumeTagOpen(start);}}else if(!(this._tokenizeIcu&&this._tokenizeExpansionForm())){this._consumeText();}}catch(e){if(e instanceof _ControlFlowError){this.errors.push(e.error);}else{throw e;}}}this._beginToken(TokenType$1.EOF);this._endToken([]);return new TokenizeResult(mergeTextTokens(this.tokens),this.errors);};/**
     * @returns whether an ICU token has been created
     * @internal
     */_Tokenizer.prototype._tokenizeExpansionForm=function(){if(isExpansionFormStart(this._input,this._index,this._interpolationConfig)){this._consumeExpansionFormStart();return true;}if(isExpansionCaseStart(this._peek)&&this._isInExpansionForm()){this._consumeExpansionCaseStart();return true;}if(this._peek===$RBRACE){if(this._isInExpansionCase()){this._consumeExpansionCaseEnd();return true;}if(this._isInExpansionForm()){this._consumeExpansionFormEnd();return true;}}return false;};_Tokenizer.prototype._getLocation=function(){return new ParseLocation(this._file,this._index,this._line,this._column);};_Tokenizer.prototype._getSpan=function(start,end){if(start===void 0){start=this._getLocation();}if(end===void 0){end=this._getLocation();}return new ParseSourceSpan(start,end);};_Tokenizer.prototype._beginToken=function(type,start){if(start===void 0){start=this._getLocation();}this._currentTokenStart=start;this._currentTokenType=type;};_Tokenizer.prototype._endToken=function(parts,end){if(end===void 0){end=this._getLocation();}var token=new Token$1(this._currentTokenType,parts,new ParseSourceSpan(this._currentTokenStart,end));this.tokens.push(token);this._currentTokenStart=null;this._currentTokenType=null;return token;};_Tokenizer.prototype._createError=function(msg,span){if(this._isInExpansionForm()){msg+=" (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)";}var error=new TokenError(msg,this._currentTokenType,span);this._currentTokenStart=null;this._currentTokenType=null;return new _ControlFlowError(error);};_Tokenizer.prototype._advance=function(){if(this._index>=this._length){throw this._createError(_unexpectedCharacterErrorMsg($EOF),this._getSpan());}if(this._peek===$LF){this._line++;this._column=0;}else if(this._peek!==$LF&&this._peek!==$CR){this._column++;}this._index++;this._peek=this._index>=this._length?$EOF:this._input.charCodeAt(this._index);this._nextPeek=this._index+1>=this._length?$EOF:this._input.charCodeAt(this._index+1);};_Tokenizer.prototype._attemptCharCode=function(charCode){if(this._peek===charCode){this._advance();return true;}return false;};_Tokenizer.prototype._attemptCharCodeCaseInsensitive=function(charCode){if(compareCharCodeCaseInsensitive(this._peek,charCode)){this._advance();return true;}return false;};_Tokenizer.prototype._requireCharCode=function(charCode){var location=this._getLocation();if(!this._attemptCharCode(charCode)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(location,location));}};_Tokenizer.prototype._attemptStr=function(chars){var len=chars.length;if(this._index+len>this._length){return false;}var initialPosition=this._savePosition();for(var i=0;i<len;i++){if(!this._attemptCharCode(chars.charCodeAt(i))){// If attempting to parse the string fails, we want to reset the parser
// to where it was before the attempt
this._restorePosition(initialPosition);return false;}}return true;};_Tokenizer.prototype._attemptStrCaseInsensitive=function(chars){for(var i=0;i<chars.length;i++){if(!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))){return false;}}return true;};_Tokenizer.prototype._requireStr=function(chars){var location=this._getLocation();if(!this._attemptStr(chars)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(location));}};_Tokenizer.prototype._attemptCharCodeUntilFn=function(predicate){while(!predicate(this._peek)){this._advance();}};_Tokenizer.prototype._requireCharCodeUntilFn=function(predicate,len){var start=this._getLocation();this._attemptCharCodeUntilFn(predicate);if(this._index-start.offset<len){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(start,start));}};_Tokenizer.prototype._attemptUntilChar=function(char){while(this._peek!==char){this._advance();}};_Tokenizer.prototype._readChar=function(decodeEntities){if(decodeEntities&&this._peek===$AMPERSAND){return this._decodeEntity();}else{var index=this._index;this._advance();return this._input[index];}};_Tokenizer.prototype._decodeEntity=function(){var start=this._getLocation();this._advance();if(this._attemptCharCode($HASH)){var isHex=this._attemptCharCode($x)||this._attemptCharCode($X);var numberStart=this._getLocation().offset;this._attemptCharCodeUntilFn(isDigitEntityEnd);if(this._peek!=$SEMICOLON){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan());}this._advance();var strNum=this._input.substring(numberStart,this._index-1);try{var charCode=parseInt(strNum,isHex?16:10);return String.fromCharCode(charCode);}catch(e){var entity=this._input.substring(start.offset+1,this._index-1);throw this._createError(_unknownEntityErrorMsg(entity),this._getSpan(start));}}else{var startPosition=this._savePosition();this._attemptCharCodeUntilFn(isNamedEntityEnd);if(this._peek!=$SEMICOLON){this._restorePosition(startPosition);return'&';}this._advance();var name_1=this._input.substring(start.offset+1,this._index-1);var char=NAMED_ENTITIES[name_1];if(!char){throw this._createError(_unknownEntityErrorMsg(name_1),this._getSpan(start));}return char;}};_Tokenizer.prototype._consumeRawText=function(decodeEntities,firstCharOfEnd,attemptEndRest){var tagCloseStart;var textStart=this._getLocation();this._beginToken(decodeEntities?TokenType$1.ESCAPABLE_RAW_TEXT:TokenType$1.RAW_TEXT,textStart);var parts=[];while(true){tagCloseStart=this._getLocation();if(this._attemptCharCode(firstCharOfEnd)&&attemptEndRest()){break;}if(this._index>tagCloseStart.offset){// add the characters consumed by the previous if statement to the output
parts.push(this._input.substring(tagCloseStart.offset,this._index));}while(this._peek!==firstCharOfEnd){parts.push(this._readChar(decodeEntities));}}return this._endToken([this._processCarriageReturns(parts.join(''))],tagCloseStart);};_Tokenizer.prototype._consumeComment=function(start){var _this=this;this._beginToken(TokenType$1.COMMENT_START,start);this._requireCharCode($MINUS);this._endToken([]);var textToken=this._consumeRawText(false,$MINUS,function(){return _this._attemptStr('->');});this._beginToken(TokenType$1.COMMENT_END,textToken.sourceSpan.end);this._endToken([]);};_Tokenizer.prototype._consumeCdata=function(start){var _this=this;this._beginToken(TokenType$1.CDATA_START,start);this._requireStr('CDATA[');this._endToken([]);var textToken=this._consumeRawText(false,$RBRACKET,function(){return _this._attemptStr(']>');});this._beginToken(TokenType$1.CDATA_END,textToken.sourceSpan.end);this._endToken([]);};_Tokenizer.prototype._consumeDocType=function(start){this._beginToken(TokenType$1.DOC_TYPE,start);this._attemptUntilChar($GT);this._advance();this._endToken([this._input.substring(start.offset+2,this._index-1)]);};_Tokenizer.prototype._consumePrefixAndName=function(){var nameOrPrefixStart=this._index;var prefix=null;while(this._peek!==$COLON&&!isPrefixEnd(this._peek)){this._advance();}var nameStart;if(this._peek===$COLON){this._advance();prefix=this._input.substring(nameOrPrefixStart,this._index-1);nameStart=this._index;}else{nameStart=nameOrPrefixStart;}this._requireCharCodeUntilFn(isNameEnd,this._index===nameStart?1:0);var name=this._input.substring(nameStart,this._index);return[prefix,name];};_Tokenizer.prototype._consumeTagOpen=function(start){var savedPos=this._savePosition();var tagName;var lowercaseTagName;try{if(!isAsciiLetter(this._peek)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan());}var nameStart=this._index;this._consumeTagOpenStart(start);tagName=this._input.substring(nameStart,this._index);lowercaseTagName=tagName.toLowerCase();this._attemptCharCodeUntilFn(isNotWhitespace);while(this._peek!==$SLASH&&this._peek!==$GT){this._consumeAttributeName();this._attemptCharCodeUntilFn(isNotWhitespace);if(this._attemptCharCode($EQ)){this._attemptCharCodeUntilFn(isNotWhitespace);this._consumeAttributeValue();}this._attemptCharCodeUntilFn(isNotWhitespace);}this._consumeTagOpenEnd();}catch(e){if(e instanceof _ControlFlowError){// When the start tag is invalid, assume we want a "<"
this._restorePosition(savedPos);// Back to back text tokens are merged at the end
this._beginToken(TokenType$1.TEXT,start);this._endToken(['<']);return;}throw e;}var contentTokenType=this._getTagDefinition(tagName).contentType;if(contentTokenType===TagContentType.RAW_TEXT){this._consumeRawTextWithTagClose(lowercaseTagName,false);}else if(contentTokenType===TagContentType.ESCAPABLE_RAW_TEXT){this._consumeRawTextWithTagClose(lowercaseTagName,true);}};_Tokenizer.prototype._consumeRawTextWithTagClose=function(lowercaseTagName,decodeEntities){var _this=this;var textToken=this._consumeRawText(decodeEntities,$LT,function(){if(!_this._attemptCharCode($SLASH))return false;_this._attemptCharCodeUntilFn(isNotWhitespace);if(!_this._attemptStrCaseInsensitive(lowercaseTagName))return false;_this._attemptCharCodeUntilFn(isNotWhitespace);return _this._attemptCharCode($GT);});this._beginToken(TokenType$1.TAG_CLOSE,textToken.sourceSpan.end);this._endToken([null,lowercaseTagName]);};_Tokenizer.prototype._consumeTagOpenStart=function(start){this._beginToken(TokenType$1.TAG_OPEN_START,start);var parts=this._consumePrefixAndName();this._endToken(parts);};_Tokenizer.prototype._consumeAttributeName=function(){this._beginToken(TokenType$1.ATTR_NAME);var prefixAndName=this._consumePrefixAndName();this._endToken(prefixAndName);};_Tokenizer.prototype._consumeAttributeValue=function(){this._beginToken(TokenType$1.ATTR_VALUE);var value;if(this._peek===$SQ||this._peek===$DQ){var quoteChar=this._peek;this._advance();var parts=[];while(this._peek!==quoteChar){parts.push(this._readChar(true));}value=parts.join('');this._advance();}else{var valueStart=this._index;this._requireCharCodeUntilFn(isNameEnd,1);value=this._input.substring(valueStart,this._index);}this._endToken([this._processCarriageReturns(value)]);};_Tokenizer.prototype._consumeTagOpenEnd=function(){var tokenType=this._attemptCharCode($SLASH)?TokenType$1.TAG_OPEN_END_VOID:TokenType$1.TAG_OPEN_END;this._beginToken(tokenType);this._requireCharCode($GT);this._endToken([]);};_Tokenizer.prototype._consumeTagClose=function(start){this._beginToken(TokenType$1.TAG_CLOSE,start);this._attemptCharCodeUntilFn(isNotWhitespace);var prefixAndName=this._consumePrefixAndName();this._attemptCharCodeUntilFn(isNotWhitespace);this._requireCharCode($GT);this._endToken(prefixAndName);};_Tokenizer.prototype._consumeExpansionFormStart=function(){this._beginToken(TokenType$1.EXPANSION_FORM_START,this._getLocation());this._requireCharCode($LBRACE);this._endToken([]);this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);this._beginToken(TokenType$1.RAW_TEXT,this._getLocation());var condition=this._readUntil($COMMA);this._endToken([condition],this._getLocation());this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType$1.RAW_TEXT,this._getLocation());var type=this._readUntil($COMMA);this._endToken([type],this._getLocation());this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);};_Tokenizer.prototype._consumeExpansionCaseStart=function(){this._beginToken(TokenType$1.EXPANSION_CASE_VALUE,this._getLocation());var value=this._readUntil($LBRACE).trim();this._endToken([value],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START,this._getLocation());this._requireCharCode($LBRACE);this._endToken([],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);};_Tokenizer.prototype._consumeExpansionCaseEnd=function(){this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END,this._getLocation());this._requireCharCode($RBRACE);this._endToken([],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.pop();};_Tokenizer.prototype._consumeExpansionFormEnd=function(){this._beginToken(TokenType$1.EXPANSION_FORM_END,this._getLocation());this._requireCharCode($RBRACE);this._endToken([]);this._expansionCaseStack.pop();};_Tokenizer.prototype._consumeText=function(){var start=this._getLocation();this._beginToken(TokenType$1.TEXT,start);var parts=[];do{if(this._interpolationConfig&&this._attemptStr(this._interpolationConfig.start)){parts.push(this._interpolationConfig.start);this._inInterpolation=true;}else if(this._interpolationConfig&&this._inInterpolation&&this._attemptStr(this._interpolationConfig.end)){parts.push(this._interpolationConfig.end);this._inInterpolation=false;}else{parts.push(this._readChar(true));}}while(!this._isTextEnd());this._endToken([this._processCarriageReturns(parts.join(''))]);};_Tokenizer.prototype._isTextEnd=function(){if(this._peek===$LT||this._peek===$EOF){return true;}if(this._tokenizeIcu&&!this._inInterpolation){if(isExpansionFormStart(this._input,this._index,this._interpolationConfig)){// start of an expansion form
return true;}if(this._peek===$RBRACE&&this._isInExpansionCase()){// end of and expansion case
return true;}}return false;};_Tokenizer.prototype._savePosition=function(){return[this._peek,this._index,this._column,this._line,this.tokens.length];};_Tokenizer.prototype._readUntil=function(char){var start=this._index;this._attemptUntilChar(char);return this._input.substring(start,this._index);};_Tokenizer.prototype._restorePosition=function(position){this._peek=position[0];this._index=position[1];this._column=position[2];this._line=position[3];var nbTokens=position[4];if(nbTokens<this.tokens.length){// remove any extra tokens
this.tokens=this.tokens.slice(0,nbTokens);}};_Tokenizer.prototype._isInExpansionCase=function(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType$1.EXPANSION_CASE_EXP_START;};_Tokenizer.prototype._isInExpansionForm=function(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType$1.EXPANSION_FORM_START;};return _Tokenizer;}();function isNotWhitespace(code){return!isWhitespace(code)||code===$EOF;}function isNameEnd(code){return isWhitespace(code)||code===$GT||code===$SLASH||code===$SQ||code===$DQ||code===$EQ;}function isPrefixEnd(code){return(code<$a||$z<code)&&(code<$A||$Z<code)&&(code<$0||code>$9);}function isDigitEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiHexDigit(code);}function isNamedEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiLetter(code);}function isExpansionFormStart(input,offset,interpolationConfig){var isInterpolationStart=interpolationConfig?input.indexOf(interpolationConfig.start,offset)==offset:false;return input.charCodeAt(offset)==$LBRACE&&!isInterpolationStart;}function isExpansionCaseStart(peek){return peek===$EQ||isAsciiLetter(peek)||isDigit(peek);}function compareCharCodeCaseInsensitive(code1,code2){return toUpperCaseCharCode(code1)==toUpperCaseCharCode(code2);}function toUpperCaseCharCode(code){return code>=$a&&code<=$z?code-$a+$A:code;}function mergeTextTokens(srcTokens){var dstTokens=[];var lastDstToken=undefined;for(var i=0;i<srcTokens.length;i++){var token=srcTokens[i];if(lastDstToken&&lastDstToken.type==TokenType$1.TEXT&&token.type==TokenType$1.TEXT){lastDstToken.parts[0]+=token.parts[0];lastDstToken.sourceSpan.end=token.sourceSpan.end;}else{lastDstToken=token;dstTokens.push(lastDstToken);}}return dstTokens;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TreeError=/** @class */function(_super){(0,_tslib.__extends)(TreeError,_super);function TreeError(elementName,span,msg){var _this=_super.call(this,span,msg)||this;_this.elementName=elementName;return _this;}TreeError.create=function(elementName,span,msg){return new TreeError(elementName,span,msg);};return TreeError;}(ParseError);exports.TreeError=TreeError;var ParseTreeResult=/** @class */function(){function ParseTreeResult(rootNodes,errors){this.rootNodes=rootNodes;this.errors=errors;}return ParseTreeResult;}();exports.ParseTreeResult=ParseTreeResult;var Parser$1=/** @class */function(){function Parser(getTagDefinition){this.getTagDefinition=getTagDefinition;}Parser.prototype.parse=function(source,url,parseExpansionForms,interpolationConfig){if(parseExpansionForms===void 0){parseExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var tokensAndErrors=tokenize(source,url,this.getTagDefinition,parseExpansionForms,interpolationConfig);var treeAndErrors=new _TreeBuilder(tokensAndErrors.tokens,this.getTagDefinition).build();return new ParseTreeResult(treeAndErrors.rootNodes,tokensAndErrors.errors.concat(treeAndErrors.errors));};return Parser;}();var _TreeBuilder=/** @class */function(){function _TreeBuilder(tokens,getTagDefinition){this.tokens=tokens;this.getTagDefinition=getTagDefinition;this._index=-1;this._rootNodes=[];this._errors=[];this._elementStack=[];this._advance();}_TreeBuilder.prototype.build=function(){while(this._peek.type!==TokenType$1.EOF){if(this._peek.type===TokenType$1.TAG_OPEN_START){this._consumeStartTag(this._advance());}else if(this._peek.type===TokenType$1.TAG_CLOSE){this._consumeEndTag(this._advance());}else if(this._peek.type===TokenType$1.CDATA_START){this._closeVoidElement();this._consumeCdata(this._advance());}else if(this._peek.type===TokenType$1.COMMENT_START){this._closeVoidElement();this._consumeComment(this._advance());}else if(this._peek.type===TokenType$1.TEXT||this._peek.type===TokenType$1.RAW_TEXT||this._peek.type===TokenType$1.ESCAPABLE_RAW_TEXT){this._closeVoidElement();this._consumeText(this._advance());}else if(this._peek.type===TokenType$1.EXPANSION_FORM_START){this._consumeExpansion(this._advance());}else{// Skip all other tokens...
this._advance();}}return new ParseTreeResult(this._rootNodes,this._errors);};_TreeBuilder.prototype._advance=function(){var prev=this._peek;if(this._index<this.tokens.length-1){// Note: there is always an EOF token at the end
this._index++;}this._peek=this.tokens[this._index];return prev;};_TreeBuilder.prototype._advanceIf=function(type){if(this._peek.type===type){return this._advance();}return null;};_TreeBuilder.prototype._consumeCdata=function(startToken){this._consumeText(this._advance());this._advanceIf(TokenType$1.CDATA_END);};_TreeBuilder.prototype._consumeComment=function(token){var text=this._advanceIf(TokenType$1.RAW_TEXT);this._advanceIf(TokenType$1.COMMENT_END);var value=text!=null?text.parts[0].trim():null;this._addToParent(new Comment(value,token.sourceSpan));};_TreeBuilder.prototype._consumeExpansion=function(token){var switchValue=this._advance();var type=this._advance();var cases=[];// read =
while(this._peek.type===TokenType$1.EXPANSION_CASE_VALUE){var expCase=this._parseExpansionCase();if(!expCase)return;// error
cases.push(expCase);}// read the final }
if(this._peek.type!==TokenType$1.EXPANSION_FORM_END){this._errors.push(TreeError.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '}'."));return;}var sourceSpan=new ParseSourceSpan(token.sourceSpan.start,this._peek.sourceSpan.end);this._addToParent(new Expansion(switchValue.parts[0],type.parts[0],cases,sourceSpan,switchValue.sourceSpan));this._advance();};_TreeBuilder.prototype._parseExpansionCase=function(){var value=this._advance();// read {
if(this._peek.type!==TokenType$1.EXPANSION_CASE_EXP_START){this._errors.push(TreeError.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '{'."));return null;}// read until }
var start=this._advance();var exp=this._collectExpansionExpTokens(start);if(!exp)return null;var end=this._advance();exp.push(new Token$1(TokenType$1.EOF,[],end.sourceSpan));// parse everything in between { and }
var parsedExp=new _TreeBuilder(exp,this.getTagDefinition).build();if(parsedExp.errors.length>0){this._errors=this._errors.concat(parsedExp.errors);return null;}var sourceSpan=new ParseSourceSpan(value.sourceSpan.start,end.sourceSpan.end);var expSourceSpan=new ParseSourceSpan(start.sourceSpan.start,end.sourceSpan.end);return new ExpansionCase(value.parts[0],parsedExp.rootNodes,sourceSpan,value.sourceSpan,expSourceSpan);};_TreeBuilder.prototype._collectExpansionExpTokens=function(start){var exp=[];var expansionFormStack=[TokenType$1.EXPANSION_CASE_EXP_START];while(true){if(this._peek.type===TokenType$1.EXPANSION_FORM_START||this._peek.type===TokenType$1.EXPANSION_CASE_EXP_START){expansionFormStack.push(this._peek.type);}if(this._peek.type===TokenType$1.EXPANSION_CASE_EXP_END){if(lastOnStack(expansionFormStack,TokenType$1.EXPANSION_CASE_EXP_START)){expansionFormStack.pop();if(expansionFormStack.length==0)return exp;}else{this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}}if(this._peek.type===TokenType$1.EXPANSION_FORM_END){if(lastOnStack(expansionFormStack,TokenType$1.EXPANSION_FORM_START)){expansionFormStack.pop();}else{this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}}if(this._peek.type===TokenType$1.EOF){this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}exp.push(this._advance());}};_TreeBuilder.prototype._consumeText=function(token){var text=token.parts[0];if(text.length>0&&text[0]=='\n'){var parent_1=this._getParentElement();if(parent_1!=null&&parent_1.children.length==0&&this.getTagDefinition(parent_1.name).ignoreFirstLf){text=text.substring(1);}}if(text.length>0){this._addToParent(new Text(text,token.sourceSpan));}};_TreeBuilder.prototype._closeVoidElement=function(){var el=this._getParentElement();if(el&&this.getTagDefinition(el.name).isVoid){this._elementStack.pop();}};_TreeBuilder.prototype._consumeStartTag=function(startTagToken){var prefix=startTagToken.parts[0];var name=startTagToken.parts[1];var attrs=[];while(this._peek.type===TokenType$1.ATTR_NAME){attrs.push(this._consumeAttr(this._advance()));}var fullName=this._getElementFullName(prefix,name,this._getParentElement());var selfClosing=false;// Note: There could have been a tokenizer error
// so that we don't get a token for the end tag...
if(this._peek.type===TokenType$1.TAG_OPEN_END_VOID){this._advance();selfClosing=true;var tagDef=this.getTagDefinition(fullName);if(!(tagDef.canSelfClose||getNsPrefix(fullName)!==null||tagDef.isVoid)){this._errors.push(TreeError.create(fullName,startTagToken.sourceSpan,"Only void and foreign elements can be self closed \""+startTagToken.parts[1]+"\""));}}else if(this._peek.type===TokenType$1.TAG_OPEN_END){this._advance();selfClosing=false;}var end=this._peek.sourceSpan.start;var span=new ParseSourceSpan(startTagToken.sourceSpan.start,end);var el=new Element(fullName,attrs,[],span,span,undefined);this._pushElement(el);if(selfClosing){this._popElement(fullName);el.endSourceSpan=span;}};_TreeBuilder.prototype._pushElement=function(el){var parentEl=this._getParentElement();if(parentEl&&this.getTagDefinition(parentEl.name).isClosedByChild(el.name)){this._elementStack.pop();}var tagDef=this.getTagDefinition(el.name);var _a=this._getParentElementSkippingContainers(),parent=_a.parent,container=_a.container;if(parent&&tagDef.requireExtraParent(parent.name)){var newParent=new Element(tagDef.parentToAdd,[],[],el.sourceSpan,el.startSourceSpan,el.endSourceSpan);this._insertBeforeContainer(parent,container,newParent);}this._addToParent(el);this._elementStack.push(el);};_TreeBuilder.prototype._consumeEndTag=function(endTagToken){var fullName=this._getElementFullName(endTagToken.parts[0],endTagToken.parts[1],this._getParentElement());if(this._getParentElement()){this._getParentElement().endSourceSpan=endTagToken.sourceSpan;}if(this.getTagDefinition(fullName).isVoid){this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,"Void elements do not have end tags \""+endTagToken.parts[1]+"\""));}else if(!this._popElement(fullName)){var errMsg="Unexpected closing tag \""+fullName+"\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags";this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,errMsg));}};_TreeBuilder.prototype._popElement=function(fullName){for(var stackIndex=this._elementStack.length-1;stackIndex>=0;stackIndex--){var el=this._elementStack[stackIndex];if(el.name==fullName){this._elementStack.splice(stackIndex,this._elementStack.length-stackIndex);return true;}if(!this.getTagDefinition(el.name).closedByParent){return false;}}return false;};_TreeBuilder.prototype._consumeAttr=function(attrName){var fullName=mergeNsAndName(attrName.parts[0],attrName.parts[1]);var end=attrName.sourceSpan.end;var value='';var valueSpan=undefined;if(this._peek.type===TokenType$1.ATTR_VALUE){var valueToken=this._advance();value=valueToken.parts[0];end=valueToken.sourceSpan.end;valueSpan=valueToken.sourceSpan;}return new Attribute(fullName,value,new ParseSourceSpan(attrName.sourceSpan.start,end),valueSpan);};_TreeBuilder.prototype._getParentElement=function(){return this._elementStack.length>0?this._elementStack[this._elementStack.length-1]:null;};/**
     * Returns the parent in the DOM and the container.
     *
     * `<ng-container>` elements are skipped as they are not rendered as DOM element.
     */_TreeBuilder.prototype._getParentElementSkippingContainers=function(){var container=null;for(var i=this._elementStack.length-1;i>=0;i--){if(!isNgContainer(this._elementStack[i].name)){return{parent:this._elementStack[i],container:container};}container=this._elementStack[i];}return{parent:null,container:container};};_TreeBuilder.prototype._addToParent=function(node){var parent=this._getParentElement();if(parent!=null){parent.children.push(node);}else{this._rootNodes.push(node);}};/**
     * Insert a node between the parent and the container.
     * When no container is given, the node is appended as a child of the parent.
     * Also updates the element stack accordingly.
     *
     * @internal
     */_TreeBuilder.prototype._insertBeforeContainer=function(parent,container,node){if(!container){this._addToParent(node);this._elementStack.push(node);}else{if(parent){// replace the container with the new node in the children
var index=parent.children.indexOf(container);parent.children[index]=node;}else{this._rootNodes.push(node);}node.children.push(container);this._elementStack.splice(this._elementStack.indexOf(container),0,node);}};_TreeBuilder.prototype._getElementFullName=function(prefix,localName,parentElement){if(prefix==null){prefix=this.getTagDefinition(localName).implicitNamespacePrefix;if(prefix==null&&parentElement!=null){prefix=getNsPrefix(parentElement.name);}}return mergeNsAndName(prefix,localName);};return _TreeBuilder;}();function lastOnStack(stack,element){return stack.length>0&&stack[stack.length-1]===element;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function digest(message){return message.id||sha1(serializeNodes(message.nodes).join('')+("["+message.meaning+"]"));}function decimalDigest(message){if(message.id){return message.id;}var visitor=new _SerializerIgnoreIcuExpVisitor();var parts=message.nodes.map(function(a){return a.visit(visitor,null);});return computeMsgId(parts.join(''),message.meaning);}/**
 * Serialize the i18n ast to something xml-like in order to generate an UID.
 *
 * The visitor is also used in the i18n parser tests
 *
 * @internal
 */var _SerializerVisitor=/** @class */function(){function _SerializerVisitor(){}_SerializerVisitor.prototype.visitText=function(text,context){return text.value;};_SerializerVisitor.prototype.visitContainer=function(container,context){var _this=this;return"["+container.children.map(function(child){return child.visit(_this);}).join(', ')+"]";};_SerializerVisitor.prototype.visitIcu=function(icu,context){var _this=this;var strCases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});return"{"+icu.expression+", "+icu.type+", "+strCases.join(', ')+"}";};_SerializerVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;return ph.isVoid?"<ph tag name=\""+ph.startName+"\"/>":"<ph tag name=\""+ph.startName+"\">"+ph.children.map(function(child){return child.visit(_this);}).join(', ')+"</ph name=\""+ph.closeName+"\">";};_SerializerVisitor.prototype.visitPlaceholder=function(ph,context){return ph.value?"<ph name=\""+ph.name+"\">"+ph.value+"</ph>":"<ph name=\""+ph.name+"\"/>";};_SerializerVisitor.prototype.visitIcuPlaceholder=function(ph,context){return"<ph icu name=\""+ph.name+"\">"+ph.value.visit(this)+"</ph>";};return _SerializerVisitor;}();var serializerVisitor=new _SerializerVisitor();function serializeNodes(nodes){return nodes.map(function(a){return a.visit(serializerVisitor,null);});}/**
 * Serialize the i18n ast to something xml-like in order to generate an UID.
 *
 * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.
 *
 * @internal
 */var _SerializerIgnoreIcuExpVisitor=/** @class */function(_super){(0,_tslib.__extends)(_SerializerIgnoreIcuExpVisitor,_super);function _SerializerIgnoreIcuExpVisitor(){return _super!==null&&_super.apply(this,arguments)||this;}_SerializerIgnoreIcuExpVisitor.prototype.visitIcu=function(icu,context){var _this=this;var strCases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});// Do not take the expression into account
return"{"+icu.type+", "+strCases.join(', ')+"}";};return _SerializerIgnoreIcuExpVisitor;}(_SerializerVisitor);/**
 * Compute the SHA1 of the given string
 *
 * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
 *
 * WARNING: this function has not been designed not tested with security in mind.
 *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.
 */function sha1(str){var utf8=utf8Encode(str);var words32=stringToWords32(utf8,Endian.Big);var len=utf8.length*8;var w=new Array(80);var _a=(0,_tslib.__read)([0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0],5),a=_a[0],b=_a[1],c=_a[2],d=_a[3],e=_a[4];words32[len>>5]|=0x80<<24-len%32;words32[(len+64>>9<<4)+15]=len;for(var i=0;i<words32.length;i+=16){var _b=(0,_tslib.__read)([a,b,c,d,e],5),h0=_b[0],h1=_b[1],h2=_b[2],h3=_b[3],h4=_b[4];for(var j=0;j<80;j++){if(j<16){w[j]=words32[i+j];}else{w[j]=rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16],1);}var _c=(0,_tslib.__read)(fk(j,b,c,d),2),f=_c[0],k=_c[1];var temp=[rol32(a,5),f,e,k,w[j]].reduce(add32);_d=(0,_tslib.__read)([d,c,rol32(b,30),a,temp],5),e=_d[0],d=_d[1],c=_d[2],b=_d[3],a=_d[4];}_e=(0,_tslib.__read)([add32(a,h0),add32(b,h1),add32(c,h2),add32(d,h3),add32(e,h4)],5),a=_e[0],b=_e[1],c=_e[2],d=_e[3],e=_e[4];}return byteStringToHexString(words32ToByteString([a,b,c,d,e]));var _d,_e;}function fk(index,b,c,d){if(index<20){return[b&c|~b&d,0x5a827999];}if(index<40){return[b^c^d,0x6ed9eba1];}if(index<60){return[b&c|b&d|c&d,0x8f1bbcdc];}return[b^c^d,0xca62c1d6];}/**
 * Compute the fingerprint of the given string
 *
 * The output is 64 bit number encoded as a decimal string
 *
 * based on:
 * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
 */function fingerprint(str){var utf8=utf8Encode(str);var _a=(0,_tslib.__read)([hash32(utf8,0),hash32(utf8,102072)],2),hi=_a[0],lo=_a[1];if(hi==0&&(lo==0||lo==1)){hi=hi^0x130f9bef;lo=lo^-0x6b5f56d8;}return[hi,lo];}function computeMsgId(msg,meaning){var _a=(0,_tslib.__read)(fingerprint(msg),2),hi=_a[0],lo=_a[1];if(meaning){var _b=(0,_tslib.__read)(fingerprint(meaning),2),him=_b[0],lom=_b[1];_c=(0,_tslib.__read)(add64(rol64([hi,lo],1),[him,lom]),2),hi=_c[0],lo=_c[1];}return byteStringToDecString(words32ToByteString([hi&0x7fffffff,lo]));var _c;}function hash32(str,c){var _a=(0,_tslib.__read)([0x9e3779b9,0x9e3779b9],2),a=_a[0],b=_a[1];var i;var len=str.length;for(i=0;i+12<=len;i+=12){a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));c=add32(c,wordAt(str,i+8,Endian.Little));_b=(0,_tslib.__read)(mix([a,b,c]),3),a=_b[0],b=_b[1],c=_b[2];}a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));// the first byte of c is reserved for the length
c=add32(c,len);c=add32(c,wordAt(str,i+8,Endian.Little)<<8);return mix([a,b,c])[2];var _b;}// clang-format off
function mix(_a){var _b=(0,_tslib.__read)(_a,3),a=_b[0],b=_b[1],c=_b[2];a=sub32(a,b);a=sub32(a,c);a^=c>>>13;b=sub32(b,c);b=sub32(b,a);b^=a<<8;c=sub32(c,a);c=sub32(c,b);c^=b>>>13;a=sub32(a,b);a=sub32(a,c);a^=c>>>12;b=sub32(b,c);b=sub32(b,a);b^=a<<16;c=sub32(c,a);c=sub32(c,b);c^=b>>>5;a=sub32(a,b);a=sub32(a,c);a^=c>>>3;b=sub32(b,c);b=sub32(b,a);b^=a<<10;c=sub32(c,a);c=sub32(c,b);c^=b>>>15;return[a,b,c];}// clang-format on
// Utils
var Endian;(function(Endian){Endian[Endian["Little"]=0]="Little";Endian[Endian["Big"]=1]="Big";})(Endian||(Endian={}));function add32(a,b){return add32to64(a,b)[1];}function add32to64(a,b){var low=(a&0xffff)+(b&0xffff);var high=(a>>>16)+(b>>>16)+(low>>>16);return[high>>>16,high<<16|low&0xffff];}function add64(_a,_b){var _c=(0,_tslib.__read)(_a,2),ah=_c[0],al=_c[1];var _d=(0,_tslib.__read)(_b,2),bh=_d[0],bl=_d[1];var _e=(0,_tslib.__read)(add32to64(al,bl),2),carry=_e[0],l=_e[1];var h=add32(add32(ah,bh),carry);return[h,l];}function sub32(a,b){var low=(a&0xffff)-(b&0xffff);var high=(a>>16)-(b>>16)+(low>>16);return high<<16|low&0xffff;}// Rotate a 32b number left `count` position
function rol32(a,count){return a<<count|a>>>32-count;}// Rotate a 64b number left `count` position
function rol64(_a,count){var _b=(0,_tslib.__read)(_a,2),hi=_b[0],lo=_b[1];var h=hi<<count|lo>>>32-count;var l=lo<<count|hi>>>32-count;return[h,l];}function stringToWords32(str,endian){var words32=Array(str.length+3>>>2);for(var i=0;i<words32.length;i++){words32[i]=wordAt(str,i*4,endian);}return words32;}function byteAt(str,index){return index>=str.length?0:str.charCodeAt(index)&0xff;}function wordAt(str,index,endian){var word=0;if(endian===Endian.Big){for(var i=0;i<4;i++){word+=byteAt(str,index+i)<<24-8*i;}}else{for(var i=0;i<4;i++){word+=byteAt(str,index+i)<<8*i;}}return word;}function words32ToByteString(words32){return words32.reduce(function(str,word){return str+word32ToByteString(word);},'');}function word32ToByteString(word){var str='';for(var i=0;i<4;i++){str+=String.fromCharCode(word>>>8*(3-i)&0xff);}return str;}function byteStringToHexString(str){var hex='';for(var i=0;i<str.length;i++){var b=byteAt(str,i);hex+=(b>>>4).toString(16)+(b&0x0f).toString(16);}return hex.toLowerCase();}// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)
function byteStringToDecString(str){var decimal='';var toThePower='1';for(var i=str.length-1;i>=0;i--){decimal=addBigInt(decimal,numberTimesBigInt(byteAt(str,i),toThePower));toThePower=numberTimesBigInt(256,toThePower);}return decimal.split('').reverse().join('');}// x and y decimal, lowest significant digit first
function addBigInt(x,y){var sum='';var len=Math.max(x.length,y.length);for(var i=0,carry=0;i<len||carry;i++){var tmpSum=carry+ +(x[i]||0)+ +(y[i]||0);if(tmpSum>=10){carry=1;sum+=tmpSum-10;}else{carry=0;sum+=tmpSum;}}return sum;}function numberTimesBigInt(num,b){var product='';var bToThePower=b;for(;num!==0;num=num>>>1){if(num&1)product=addBigInt(product,bToThePower);bToThePower=addBigInt(bToThePower,bToThePower);}return product;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Message=/** @class */function(){/**
     * @param nodes message AST
     * @param placeholders maps placeholder names to static content
     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)
     * @param meaning
     * @param description
     * @param id
     */function Message(nodes,placeholders,placeholderToMessage,meaning,description,id){this.nodes=nodes;this.placeholders=placeholders;this.placeholderToMessage=placeholderToMessage;this.meaning=meaning;this.description=description;this.id=id;if(nodes.length){this.sources=[{filePath:nodes[0].sourceSpan.start.file.url,startLine:nodes[0].sourceSpan.start.line+1,startCol:nodes[0].sourceSpan.start.col+1,endLine:nodes[nodes.length-1].sourceSpan.end.line+1,endCol:nodes[0].sourceSpan.start.col+1}];}else{this.sources=[];}}return Message;}();var Text$1=/** @class */function(){function Text(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Text.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return Text;}();// TODO(vicb): do we really need this node (vs an array) ?
var Container=/** @class */function(){function Container(children,sourceSpan){this.children=children;this.sourceSpan=sourceSpan;}Container.prototype.visit=function(visitor,context){return visitor.visitContainer(this,context);};return Container;}();var Icu=/** @class */function(){function Icu(expression,type,cases,sourceSpan){this.expression=expression;this.type=type;this.cases=cases;this.sourceSpan=sourceSpan;}Icu.prototype.visit=function(visitor,context){return visitor.visitIcu(this,context);};return Icu;}();var TagPlaceholder=/** @class */function(){function TagPlaceholder(tag,attrs,startName,closeName,children,isVoid,sourceSpan){this.tag=tag;this.attrs=attrs;this.startName=startName;this.closeName=closeName;this.children=children;this.isVoid=isVoid;this.sourceSpan=sourceSpan;}TagPlaceholder.prototype.visit=function(visitor,context){return visitor.visitTagPlaceholder(this,context);};return TagPlaceholder;}();var Placeholder=/** @class */function(){function Placeholder(value,name,sourceSpan){this.value=value;this.name=name;this.sourceSpan=sourceSpan;}Placeholder.prototype.visit=function(visitor,context){return visitor.visitPlaceholder(this,context);};return Placeholder;}();var IcuPlaceholder=/** @class */function(){function IcuPlaceholder(value,name,sourceSpan){this.value=value;this.name=name;this.sourceSpan=sourceSpan;}IcuPlaceholder.prototype.visit=function(visitor,context){return visitor.visitIcuPlaceholder(this,context);};return IcuPlaceholder;}();// Clone the AST
var CloneVisitor=/** @class */function(){function CloneVisitor(){}CloneVisitor.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};CloneVisitor.prototype.visitContainer=function(container,context){var _this=this;var children=container.children.map(function(n){return n.visit(_this,context);});return new Container(children,container.sourceSpan);};CloneVisitor.prototype.visitIcu=function(icu,context){var _this=this;var cases={};Object.keys(icu.cases).forEach(function(key){return cases[key]=icu.cases[key].visit(_this,context);});var msg=new Icu(icu.expression,icu.type,cases,icu.sourceSpan);msg.expressionPlaceholder=icu.expressionPlaceholder;return msg;};CloneVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var children=ph.children.map(function(n){return n.visit(_this,context);});return new TagPlaceholder(ph.tag,ph.attrs,ph.startName,ph.closeName,children,ph.isVoid,ph.sourceSpan);};CloneVisitor.prototype.visitPlaceholder=function(ph,context){return new Placeholder(ph.value,ph.name,ph.sourceSpan);};CloneVisitor.prototype.visitIcuPlaceholder=function(ph,context){return new IcuPlaceholder(ph.value,ph.name,ph.sourceSpan);};return CloneVisitor;}();// Visit all the nodes recursively
var RecurseVisitor=/** @class */function(){function RecurseVisitor(){}RecurseVisitor.prototype.visitText=function(text,context){};RecurseVisitor.prototype.visitContainer=function(container,context){var _this=this;container.children.forEach(function(child){return child.visit(_this);});};RecurseVisitor.prototype.visitIcu=function(icu,context){var _this=this;Object.keys(icu.cases).forEach(function(k){icu.cases[k].visit(_this);});};RecurseVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;ph.children.forEach(function(child){return child.visit(_this);});};RecurseVisitor.prototype.visitPlaceholder=function(ph,context){};RecurseVisitor.prototype.visitIcuPlaceholder=function(ph,context){};return RecurseVisitor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var HtmlTagDefinition=/** @class */function(){function HtmlTagDefinition(_a){var _b=_a===void 0?{}:_a,closedByChildren=_b.closedByChildren,requiredParents=_b.requiredParents,implicitNamespacePrefix=_b.implicitNamespacePrefix,_c=_b.contentType,contentType=_c===void 0?TagContentType.PARSABLE_DATA:_c,_d=_b.closedByParent,closedByParent=_d===void 0?false:_d,_e=_b.isVoid,isVoid=_e===void 0?false:_e,_f=_b.ignoreFirstLf,ignoreFirstLf=_f===void 0?false:_f;var _this=this;this.closedByChildren={};this.closedByParent=false;this.canSelfClose=false;if(closedByChildren&&closedByChildren.length>0){closedByChildren.forEach(function(tagName){return _this.closedByChildren[tagName]=true;});}this.isVoid=isVoid;this.closedByParent=closedByParent||isVoid;if(requiredParents&&requiredParents.length>0){this.requiredParents={};// The first parent is the list is automatically when none of the listed parents are present
this.parentToAdd=requiredParents[0];requiredParents.forEach(function(tagName){return _this.requiredParents[tagName]=true;});}this.implicitNamespacePrefix=implicitNamespacePrefix||null;this.contentType=contentType;this.ignoreFirstLf=ignoreFirstLf;}HtmlTagDefinition.prototype.requireExtraParent=function(currentParent){if(!this.requiredParents){return false;}if(!currentParent){return true;}var lcParent=currentParent.toLowerCase();var isParentTemplate=lcParent==='template'||currentParent==='ng-template';return!isParentTemplate&&this.requiredParents[lcParent]!=true;};HtmlTagDefinition.prototype.isClosedByChild=function(name){return this.isVoid||name.toLowerCase()in this.closedByChildren;};return HtmlTagDefinition;}();// see http://www.w3.org/TR/html51/syntax.html#optional-tags
// This implementation does not fully conform to the HTML5 spec.
exports.HtmlTagDefinition=HtmlTagDefinition;var TAG_DEFINITIONS={'base':new HtmlTagDefinition({isVoid:true}),'meta':new HtmlTagDefinition({isVoid:true}),'area':new HtmlTagDefinition({isVoid:true}),'embed':new HtmlTagDefinition({isVoid:true}),'link':new HtmlTagDefinition({isVoid:true}),'img':new HtmlTagDefinition({isVoid:true}),'input':new HtmlTagDefinition({isVoid:true}),'param':new HtmlTagDefinition({isVoid:true}),'hr':new HtmlTagDefinition({isVoid:true}),'br':new HtmlTagDefinition({isVoid:true}),'source':new HtmlTagDefinition({isVoid:true}),'track':new HtmlTagDefinition({isVoid:true}),'wbr':new HtmlTagDefinition({isVoid:true}),'p':new HtmlTagDefinition({closedByChildren:['address','article','aside','blockquote','div','dl','fieldset','footer','form','h1','h2','h3','h4','h5','h6','header','hgroup','hr','main','nav','ol','p','pre','section','table','ul'],closedByParent:true}),'thead':new HtmlTagDefinition({closedByChildren:['tbody','tfoot']}),'tbody':new HtmlTagDefinition({closedByChildren:['tbody','tfoot'],closedByParent:true}),'tfoot':new HtmlTagDefinition({closedByChildren:['tbody'],closedByParent:true}),'tr':new HtmlTagDefinition({closedByChildren:['tr'],requiredParents:['tbody','tfoot','thead'],closedByParent:true}),'td':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'th':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'col':new HtmlTagDefinition({requiredParents:['colgroup'],isVoid:true}),'svg':new HtmlTagDefinition({implicitNamespacePrefix:'svg'}),'math':new HtmlTagDefinition({implicitNamespacePrefix:'math'}),'li':new HtmlTagDefinition({closedByChildren:['li'],closedByParent:true}),'dt':new HtmlTagDefinition({closedByChildren:['dt','dd']}),'dd':new HtmlTagDefinition({closedByChildren:['dt','dd'],closedByParent:true}),'rb':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rt':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rtc':new HtmlTagDefinition({closedByChildren:['rb','rtc','rp'],closedByParent:true}),'rp':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'optgroup':new HtmlTagDefinition({closedByChildren:['optgroup'],closedByParent:true}),'option':new HtmlTagDefinition({closedByChildren:['option','optgroup'],closedByParent:true}),'pre':new HtmlTagDefinition({ignoreFirstLf:true}),'listing':new HtmlTagDefinition({ignoreFirstLf:true}),'style':new HtmlTagDefinition({contentType:TagContentType.RAW_TEXT}),'script':new HtmlTagDefinition({contentType:TagContentType.RAW_TEXT}),'title':new HtmlTagDefinition({contentType:TagContentType.ESCAPABLE_RAW_TEXT}),'textarea':new HtmlTagDefinition({contentType:TagContentType.ESCAPABLE_RAW_TEXT,ignoreFirstLf:true})};var _DEFAULT_TAG_DEFINITION=new HtmlTagDefinition();function getHtmlTagDefinition(tagName){return TAG_DEFINITIONS[tagName.toLowerCase()]||_DEFAULT_TAG_DEFINITION;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TAG_TO_PLACEHOLDER_NAMES={'A':'LINK','B':'BOLD_TEXT','BR':'LINE_BREAK','EM':'EMPHASISED_TEXT','H1':'HEADING_LEVEL1','H2':'HEADING_LEVEL2','H3':'HEADING_LEVEL3','H4':'HEADING_LEVEL4','H5':'HEADING_LEVEL5','H6':'HEADING_LEVEL6','HR':'HORIZONTAL_RULE','I':'ITALIC_TEXT','LI':'LIST_ITEM','LINK':'MEDIA_LINK','OL':'ORDERED_LIST','P':'PARAGRAPH','Q':'QUOTATION','S':'STRIKETHROUGH_TEXT','SMALL':'SMALL_TEXT','SUB':'SUBSTRIPT','SUP':'SUPERSCRIPT','TBODY':'TABLE_BODY','TD':'TABLE_CELL','TFOOT':'TABLE_FOOTER','TH':'TABLE_HEADER_CELL','THEAD':'TABLE_HEADER','TR':'TABLE_ROW','TT':'MONOSPACED_TEXT','U':'UNDERLINED_TEXT','UL':'UNORDERED_LIST'};/**
 * Creates unique names for placeholder with different content.
 *
 * Returns the same placeholder name when the content is identical.
 */var PlaceholderRegistry=/** @class */function(){function PlaceholderRegistry(){// Count the occurrence of the base name top generate a unique name
this._placeHolderNameCounts={};// Maps signature to placeholder names
this._signatureToName={};}PlaceholderRegistry.prototype.getStartTagPlaceholderName=function(tag,attrs,isVoid){var signature=this._hashTag(tag,attrs,isVoid);if(this._signatureToName[signature]){return this._signatureToName[signature];}var upperTag=tag.toUpperCase();var baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||"TAG_"+upperTag;var name=this._generateUniqueName(isVoid?baseName:"START_"+baseName);this._signatureToName[signature]=name;return name;};PlaceholderRegistry.prototype.getCloseTagPlaceholderName=function(tag){var signature=this._hashClosingTag(tag);if(this._signatureToName[signature]){return this._signatureToName[signature];}var upperTag=tag.toUpperCase();var baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||"TAG_"+upperTag;var name=this._generateUniqueName("CLOSE_"+baseName);this._signatureToName[signature]=name;return name;};PlaceholderRegistry.prototype.getPlaceholderName=function(name,content){var upperName=name.toUpperCase();var signature="PH: "+upperName+"="+content;if(this._signatureToName[signature]){return this._signatureToName[signature];}var uniqueName=this._generateUniqueName(upperName);this._signatureToName[signature]=uniqueName;return uniqueName;};PlaceholderRegistry.prototype.getUniquePlaceholder=function(name){return this._generateUniqueName(name.toUpperCase());};// Generate a hash for a tag - does not take attribute order into account
PlaceholderRegistry.prototype._hashTag=function(tag,attrs,isVoid){var start="<"+tag;var strAttrs=Object.keys(attrs).sort().map(function(name){return" "+name+"="+attrs[name];}).join('');var end=isVoid?'/>':"></"+tag+">";return start+strAttrs+end;};PlaceholderRegistry.prototype._hashClosingTag=function(tag){return this._hashTag("/"+tag,{},false);};PlaceholderRegistry.prototype._generateUniqueName=function(base){var seen=this._placeHolderNameCounts.hasOwnProperty(base);if(!seen){this._placeHolderNameCounts[base]=1;return base;}var id=this._placeHolderNameCounts[base];this._placeHolderNameCounts[base]=id+1;return base+"_"+id;};return PlaceholderRegistry;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _expParser=new Parser(new Lexer());/**
 * Returns a function converting html nodes to an i18n Message given an interpolationConfig
 */function createI18nMessageFactory(interpolationConfig){var visitor=new _I18nVisitor(_expParser,interpolationConfig);return function(nodes,meaning,description,id){return visitor.toI18nMessage(nodes,meaning,description,id);};}var _I18nVisitor=/** @class */function(){function _I18nVisitor(_expressionParser,_interpolationConfig){this._expressionParser=_expressionParser;this._interpolationConfig=_interpolationConfig;}_I18nVisitor.prototype.toI18nMessage=function(nodes,meaning,description,id){this._isIcu=nodes.length==1&&nodes[0]instanceof Expansion;this._icuDepth=0;this._placeholderRegistry=new PlaceholderRegistry();this._placeholderToContent={};this._placeholderToMessage={};var i18nodes=visitAll(this,nodes,{});return new Message(i18nodes,this._placeholderToContent,this._placeholderToMessage,meaning,description,id);};_I18nVisitor.prototype.visitElement=function(el,context){var children=visitAll(this,el.children);var attrs={};el.attrs.forEach(function(attr){// Do not visit the attributes, translatable ones are top-level ASTs
attrs[attr.name]=attr.value;});var isVoid=getHtmlTagDefinition(el.name).isVoid;var startPhName=this._placeholderRegistry.getStartTagPlaceholderName(el.name,attrs,isVoid);this._placeholderToContent[startPhName]=el.sourceSpan.toString();var closePhName='';if(!isVoid){closePhName=this._placeholderRegistry.getCloseTagPlaceholderName(el.name);this._placeholderToContent[closePhName]="</"+el.name+">";}return new TagPlaceholder(el.name,attrs,startPhName,closePhName,children,isVoid,el.sourceSpan);};_I18nVisitor.prototype.visitAttribute=function(attribute,context){return this._visitTextWithInterpolation(attribute.value,attribute.sourceSpan);};_I18nVisitor.prototype.visitText=function(text,context){return this._visitTextWithInterpolation(text.value,text.sourceSpan);};_I18nVisitor.prototype.visitComment=function(comment,context){return null;};_I18nVisitor.prototype.visitExpansion=function(icu,context){var _this=this;this._icuDepth++;var i18nIcuCases={};var i18nIcu=new Icu(icu.switchValue,icu.type,i18nIcuCases,icu.sourceSpan);icu.cases.forEach(function(caze){i18nIcuCases[caze.value]=new Container(caze.expression.map(function(node){return node.visit(_this,{});}),caze.expSourceSpan);});this._icuDepth--;if(this._isIcu||this._icuDepth>0){// Returns an ICU node when:
// - the message (vs a part of the message) is an ICU message, or
// - the ICU message is nested.
var expPh=this._placeholderRegistry.getUniquePlaceholder("VAR_"+icu.type);i18nIcu.expressionPlaceholder=expPh;this._placeholderToContent[expPh]=icu.switchValue;return i18nIcu;}// Else returns a placeholder
// ICU placeholders should not be replaced with their original content but with the their
// translations. We need to create a new visitor (they are not re-entrant) to compute the
// message id.
// TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg
var phName=this._placeholderRegistry.getPlaceholderName('ICU',icu.sourceSpan.toString());var visitor=new _I18nVisitor(this._expressionParser,this._interpolationConfig);this._placeholderToMessage[phName]=visitor.toI18nMessage([icu],'','','');return new IcuPlaceholder(i18nIcu,phName,icu.sourceSpan);};_I18nVisitor.prototype.visitExpansionCase=function(icuCase,context){throw new Error('Unreachable code');};_I18nVisitor.prototype._visitTextWithInterpolation=function(text,sourceSpan){var splitInterpolation=this._expressionParser.splitInterpolation(text,sourceSpan.start.toString(),this._interpolationConfig);if(!splitInterpolation){// No expression, return a single text
return new Text$1(text,sourceSpan);}// Return a group of text + expressions
var nodes=[];var container=new Container(nodes,sourceSpan);var _a=this._interpolationConfig,sDelimiter=_a.start,eDelimiter=_a.end;for(var i=0;i<splitInterpolation.strings.length-1;i++){var expression=splitInterpolation.expressions[i];var baseName=_extractPlaceholderName(expression)||'INTERPOLATION';var phName=this._placeholderRegistry.getPlaceholderName(baseName,expression);if(splitInterpolation.strings[i].length){// No need to add empty strings
nodes.push(new Text$1(splitInterpolation.strings[i],sourceSpan));}nodes.push(new Placeholder(expression,phName,sourceSpan));this._placeholderToContent[phName]=sDelimiter+expression+eDelimiter;}// The last index contains no expression
var lastStringIdx=splitInterpolation.strings.length-1;if(splitInterpolation.strings[lastStringIdx].length){nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx],sourceSpan));}return container;};return _I18nVisitor;}();var _CUSTOM_PH_EXP=/\/\/[\s\S]*i18n[\s\S]*\([\s\S]*ph[\s\S]*=[\s\S]*("|')([\s\S]*?)\1[\s\S]*\)/g;function _extractPlaceholderName(input){return input.split(_CUSTOM_PH_EXP)[2];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An i18n error.
 */var I18nError=/** @class */function(_super){(0,_tslib.__extends)(I18nError,_super);function I18nError(span,msg){return _super.call(this,span,msg)||this;}return I18nError;}(ParseError);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _I18N_ATTR='i18n';var _I18N_ATTR_PREFIX='i18n-';var _I18N_COMMENT_PREFIX_REGEXP=/^i18n:?/;var MEANING_SEPARATOR='|';var ID_SEPARATOR='@@';var i18nCommentsWarned=false;/**
 * Extract translatable messages from an html AST
 */function extractMessages(nodes,interpolationConfig,implicitTags,implicitAttrs){var visitor=new _Visitor(implicitTags,implicitAttrs);return visitor.extract(nodes,interpolationConfig);}function mergeTranslations(nodes,translations,interpolationConfig,implicitTags,implicitAttrs){var visitor=new _Visitor(implicitTags,implicitAttrs);return visitor.merge(nodes,translations,interpolationConfig);}var ExtractionResult=/** @class */function(){function ExtractionResult(messages,errors){this.messages=messages;this.errors=errors;}return ExtractionResult;}();var _VisitorMode;(function(_VisitorMode){_VisitorMode[_VisitorMode["Extract"]=0]="Extract";_VisitorMode[_VisitorMode["Merge"]=1]="Merge";})(_VisitorMode||(_VisitorMode={}));/**
 * This Visitor is used:
 * 1. to extract all the translatable strings from an html AST (see `extract()`),
 * 2. to replace the translatable strings with the actual translations (see `merge()`)
 *
 * @internal
 */var _Visitor=/** @class */function(){function _Visitor(_implicitTags,_implicitAttrs){this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;}/**
     * Extracts the messages from the tree
     */_Visitor.prototype.extract=function(nodes,interpolationConfig){var _this=this;this._init(_VisitorMode.Extract,interpolationConfig);nodes.forEach(function(node){return node.visit(_this,null);});if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ExtractionResult(this._messages,this._errors);};/**
     * Returns a tree where all translatable nodes are translated
     */_Visitor.prototype.merge=function(nodes,translations,interpolationConfig){this._init(_VisitorMode.Merge,interpolationConfig);this._translations=translations;// Construct a single fake root element
var wrapper=new Element('wrapper',[],nodes,undefined,undefined,undefined);var translatedNode=wrapper.visit(this,null);if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ParseTreeResult(translatedNode.children,this._errors);};_Visitor.prototype.visitExpansionCase=function(icuCase,context){// Parse cases for translatable html attributes
var expression=visitAll(this,icuCase.expression,context);if(this._mode===_VisitorMode.Merge){return new ExpansionCase(icuCase.value,expression,icuCase.sourceSpan,icuCase.valueSourceSpan,icuCase.expSourceSpan);}};_Visitor.prototype.visitExpansion=function(icu,context){this._mayBeAddBlockChildren(icu);var wasInIcu=this._inIcu;if(!this._inIcu){// nested ICU messages should not be extracted but top-level translated as a whole
if(this._isInTranslatableSection){this._addMessage([icu]);}this._inIcu=true;}var cases=visitAll(this,icu.cases,context);if(this._mode===_VisitorMode.Merge){icu=new Expansion(icu.switchValue,icu.type,cases,icu.sourceSpan,icu.switchValueSourceSpan);}this._inIcu=wasInIcu;return icu;};_Visitor.prototype.visitComment=function(comment,context){var isOpening=_isOpeningComment(comment);if(isOpening&&this._isInTranslatableSection){this._reportError(comment,'Could not start a block inside a translatable section');return;}var isClosing=_isClosingComment(comment);if(isClosing&&!this._inI18nBlock){this._reportError(comment,'Trying to close an unopened block');return;}if(!this._inI18nNode&&!this._inIcu){if(!this._inI18nBlock){if(isOpening){// deprecated from v5 you should use <ng-container i18n> instead of i18n comments
if(!i18nCommentsWarned&&console&&console.warn){i18nCommentsWarned=true;var details=comment.sourceSpan.details?", "+comment.sourceSpan.details:'';// TODO(ocombe): use a log service once there is a public one available
console.warn("I18n comments are deprecated, use an <ng-container> element instead ("+comment.sourceSpan.start+details+")");}this._inI18nBlock=true;this._blockStartDepth=this._depth;this._blockChildren=[];this._blockMeaningAndDesc=comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP,'').trim();this._openTranslatableSection(comment);}}else{if(isClosing){if(this._depth==this._blockStartDepth){this._closeTranslatableSection(comment,this._blockChildren);this._inI18nBlock=false;var message=this._addMessage(this._blockChildren,this._blockMeaningAndDesc);// merge attributes in sections
var nodes=this._translateMessage(comment,message);return visitAll(this,nodes);}else{this._reportError(comment,'I18N blocks should not cross element boundaries');return;}}}}};_Visitor.prototype.visitText=function(text,context){if(this._isInTranslatableSection){this._mayBeAddBlockChildren(text);}return text;};_Visitor.prototype.visitElement=function(el,context){var _this=this;this._mayBeAddBlockChildren(el);this._depth++;var wasInI18nNode=this._inI18nNode;var wasInImplicitNode=this._inImplicitNode;var childNodes=[];var translatedChildNodes=undefined;// Extract:
// - top level nodes with the (implicit) "i18n" attribute if not already in a section
// - ICU messages
var i18nAttr=_getI18nAttr(el);var i18nMeta=i18nAttr?i18nAttr.value:'';var isImplicit=this._implicitTags.some(function(tag){return el.name===tag;})&&!this._inIcu&&!this._isInTranslatableSection;var isTopLevelImplicit=!wasInImplicitNode&&isImplicit;this._inImplicitNode=wasInImplicitNode||isImplicit;if(!this._isInTranslatableSection&&!this._inIcu){if(i18nAttr||isTopLevelImplicit){this._inI18nNode=true;var message=this._addMessage(el.children,i18nMeta);translatedChildNodes=this._translateMessage(el,message);}if(this._mode==_VisitorMode.Extract){var isTranslatable=i18nAttr||isTopLevelImplicit;if(isTranslatable)this._openTranslatableSection(el);visitAll(this,el.children);if(isTranslatable)this._closeTranslatableSection(el,el.children);}}else{if(i18nAttr||isTopLevelImplicit){this._reportError(el,'Could not mark an element as translatable inside a translatable section');}if(this._mode==_VisitorMode.Extract){// Descend into child nodes for extraction
visitAll(this,el.children);}}if(this._mode===_VisitorMode.Merge){var visitNodes=translatedChildNodes||el.children;visitNodes.forEach(function(child){var visited=child.visit(_this,context);if(visited&&!_this._isInTranslatableSection){// Do not add the children from translatable sections (= i18n blocks here)
// They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)
childNodes=childNodes.concat(visited);}});}this._visitAttributesOf(el);this._depth--;this._inI18nNode=wasInI18nNode;this._inImplicitNode=wasInImplicitNode;if(this._mode===_VisitorMode.Merge){var translatedAttrs=this._translateAttributes(el);return new Element(el.name,translatedAttrs,childNodes,el.sourceSpan,el.startSourceSpan,el.endSourceSpan);}return null;};_Visitor.prototype.visitAttribute=function(attribute,context){throw new Error('unreachable code');};_Visitor.prototype._init=function(mode,interpolationConfig){this._mode=mode;this._inI18nBlock=false;this._inI18nNode=false;this._depth=0;this._inIcu=false;this._msgCountAtSectionStart=undefined;this._errors=[];this._messages=[];this._inImplicitNode=false;this._createI18nMessage=createI18nMessageFactory(interpolationConfig);};// looks for translatable attributes
_Visitor.prototype._visitAttributesOf=function(el){var _this=this;var explicitAttrNameToValue={};var implicitAttrNames=this._implicitAttrs[el.name]||[];el.attrs.filter(function(attr){return attr.name.startsWith(_I18N_ATTR_PREFIX);}).forEach(function(attr){return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)]=attr.value;});el.attrs.forEach(function(attr){if(attr.name in explicitAttrNameToValue){_this._addMessage([attr],explicitAttrNameToValue[attr.name]);}else if(implicitAttrNames.some(function(name){return attr.name===name;})){_this._addMessage([attr]);}});};// add a translatable message
_Visitor.prototype._addMessage=function(ast,msgMeta){if(ast.length==0||ast.length==1&&ast[0]instanceof Attribute&&!ast[0].value){// Do not create empty messages
return null;}var _a=_parseMessageMeta(msgMeta),meaning=_a.meaning,description=_a.description,id=_a.id;var message=this._createI18nMessage(ast,meaning,description,id);this._messages.push(message);return message;};// Translates the given message given the `TranslationBundle`
// This is used for translating elements / blocks - see `_translateAttributes` for attributes
// no-op when called in extraction mode (returns [])
_Visitor.prototype._translateMessage=function(el,message){if(message&&this._mode===_VisitorMode.Merge){var nodes=this._translations.get(message);if(nodes){return nodes;}this._reportError(el,"Translation unavailable for message id=\""+this._translations.digest(message)+"\"");}return[];};// translate the attributes of an element and remove i18n specific attributes
_Visitor.prototype._translateAttributes=function(el){var _this=this;var attributes=el.attrs;var i18nParsedMessageMeta={};attributes.forEach(function(attr){if(attr.name.startsWith(_I18N_ATTR_PREFIX)){i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)]=_parseMessageMeta(attr.value);}});var translatedAttributes=[];attributes.forEach(function(attr){if(attr.name===_I18N_ATTR||attr.name.startsWith(_I18N_ATTR_PREFIX)){// strip i18n specific attributes
return;}if(attr.value&&attr.value!=''&&i18nParsedMessageMeta.hasOwnProperty(attr.name)){var _a=i18nParsedMessageMeta[attr.name],meaning=_a.meaning,description=_a.description,id=_a.id;var message=_this._createI18nMessage([attr],meaning,description,id);var nodes=_this._translations.get(message);if(nodes){if(nodes.length==0){translatedAttributes.push(new Attribute(attr.name,'',attr.sourceSpan));}else if(nodes[0]instanceof Text){var value=nodes[0].value;translatedAttributes.push(new Attribute(attr.name,value,attr.sourceSpan));}else{_this._reportError(el,"Unexpected translation for attribute \""+attr.name+"\" (id=\""+(id||_this._translations.digest(message))+"\")");}}else{_this._reportError(el,"Translation unavailable for attribute \""+attr.name+"\" (id=\""+(id||_this._translations.digest(message))+"\")");}}else{translatedAttributes.push(attr);}});return translatedAttributes;};/**
     * Add the node as a child of the block when:
     * - we are in a block,
     * - we are not inside a ICU message (those are handled separately),
     * - the node is a "direct child" of the block
     */_Visitor.prototype._mayBeAddBlockChildren=function(node){if(this._inI18nBlock&&!this._inIcu&&this._depth==this._blockStartDepth){this._blockChildren.push(node);}};/**
     * Marks the start of a section, see `_closeTranslatableSection`
     */_Visitor.prototype._openTranslatableSection=function(node){if(this._isInTranslatableSection){this._reportError(node,'Unexpected section start');}else{this._msgCountAtSectionStart=this._messages.length;}};Object.defineProperty(_Visitor.prototype,"_isInTranslatableSection",{/**
         * A translatable section could be:
         * - the content of translatable element,
         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments
         */get:function get(){return this._msgCountAtSectionStart!==void 0;},enumerable:true,configurable:true});/**
     * Terminates a section.
     *
     * If a section has only one significant children (comments not significant) then we should not
     * keep the message from this children:
     *
     * `<p i18n="meaning|description">{ICU message}</p>` would produce two messages:
     * - one for the <p> content with meaning and description,
     * - another one for the ICU message.
     *
     * In this case the last message is discarded as it contains less information (the AST is
     * otherwise identical).
     *
     * Note that we should still keep messages extracted from attributes inside the section (ie in the
     * ICU message here)
     */_Visitor.prototype._closeTranslatableSection=function(node,directChildren){if(!this._isInTranslatableSection){this._reportError(node,'Unexpected section end');return;}var startIndex=this._msgCountAtSectionStart;var significantChildren=directChildren.reduce(function(count,node){return count+(node instanceof Comment?0:1);},0);if(significantChildren==1){for(var i=this._messages.length-1;i>=startIndex;i--){var ast=this._messages[i].nodes;if(!(ast.length==1&&ast[0]instanceof Text$1)){this._messages.splice(i,1);break;}}}this._msgCountAtSectionStart=undefined;};_Visitor.prototype._reportError=function(node,msg){this._errors.push(new I18nError(node.sourceSpan,msg));};return _Visitor;}();function _isOpeningComment(n){return!!(n instanceof Comment&&n.value&&n.value.startsWith('i18n'));}function _isClosingComment(n){return!!(n instanceof Comment&&n.value&&n.value==='/i18n');}function _getI18nAttr(p){return p.attrs.find(function(attr){return attr.name===_I18N_ATTR;})||null;}function _parseMessageMeta(i18n){if(!i18n)return{meaning:'',description:'',id:''};var idIndex=i18n.indexOf(ID_SEPARATOR);var descIndex=i18n.indexOf(MEANING_SEPARATOR);var _a=(0,_tslib.__read)(idIndex>-1?[i18n.slice(0,idIndex),i18n.slice(idIndex+2)]:[i18n,''],2),meaningAndDesc=_a[0],id=_a[1];var _b=(0,_tslib.__read)(descIndex>-1?[meaningAndDesc.slice(0,descIndex),meaningAndDesc.slice(descIndex+1)]:['',meaningAndDesc],2),meaning=_b[0],description=_b[1];return{meaning:meaning,description:description,id:id};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var XmlTagDefinition=/** @class */function(){function XmlTagDefinition(){this.closedByParent=false;this.contentType=TagContentType.PARSABLE_DATA;this.isVoid=false;this.ignoreFirstLf=false;this.canSelfClose=true;}XmlTagDefinition.prototype.requireExtraParent=function(currentParent){return false;};XmlTagDefinition.prototype.isClosedByChild=function(name){return false;};return XmlTagDefinition;}();var _TAG_DEFINITION=new XmlTagDefinition();function getXmlTagDefinition(tagName){return _TAG_DEFINITION;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var XmlParser=/** @class */function(_super){(0,_tslib.__extends)(XmlParser,_super);function XmlParser(){return _super.call(this,getXmlTagDefinition)||this;}XmlParser.prototype.parse=function(source,url,parseExpansionForms){if(parseExpansionForms===void 0){parseExpansionForms=false;}return _super.prototype.parse.call(this,source,url,parseExpansionForms);};return XmlParser;}(Parser$1);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Serializer=/** @class */function(){function Serializer(){}// Creates a name mapper, see `PlaceholderMapper`
// Returning `null` means that no name mapping is used.
Serializer.prototype.createNameMapper=function(message){return null;};return Serializer;}();/**
 * A simple mapper that take a function to transform an internal name to a public name
 */exports.Serializer=Serializer;var SimplePlaceholderMapper=/** @class */function(_super){(0,_tslib.__extends)(SimplePlaceholderMapper,_super);// create a mapping from the message
function SimplePlaceholderMapper(message,mapName){var _this=_super.call(this)||this;_this.mapName=mapName;_this.internalToPublic={};_this.publicToNextId={};_this.publicToInternal={};message.nodes.forEach(function(node){return node.visit(_this);});return _this;}SimplePlaceholderMapper.prototype.toPublicName=function(internalName){return this.internalToPublic.hasOwnProperty(internalName)?this.internalToPublic[internalName]:null;};SimplePlaceholderMapper.prototype.toInternalName=function(publicName){return this.publicToInternal.hasOwnProperty(publicName)?this.publicToInternal[publicName]:null;};SimplePlaceholderMapper.prototype.visitText=function(text,context){return null;};SimplePlaceholderMapper.prototype.visitTagPlaceholder=function(ph,context){this.visitPlaceholderName(ph.startName);_super.prototype.visitTagPlaceholder.call(this,ph,context);this.visitPlaceholderName(ph.closeName);};SimplePlaceholderMapper.prototype.visitPlaceholder=function(ph,context){this.visitPlaceholderName(ph.name);};SimplePlaceholderMapper.prototype.visitIcuPlaceholder=function(ph,context){this.visitPlaceholderName(ph.name);};// XMB placeholders could only contains A-Z, 0-9 and _
SimplePlaceholderMapper.prototype.visitPlaceholderName=function(internalName){if(!internalName||this.internalToPublic.hasOwnProperty(internalName)){return;}var publicName=this.mapName(internalName);if(this.publicToInternal.hasOwnProperty(publicName)){// Create a new XMB when it has already been used
var nextId=this.publicToNextId[publicName];this.publicToNextId[publicName]=nextId+1;publicName=publicName+"_"+nextId;}else{this.publicToNextId[publicName]=1;}this.internalToPublic[internalName]=publicName;this.publicToInternal[publicName]=internalName;};return SimplePlaceholderMapper;}(RecurseVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _Visitor$1=/** @class */function(){function _Visitor(){}_Visitor.prototype.visitTag=function(tag){var _this=this;var strAttrs=this._serializeAttributes(tag.attrs);if(tag.children.length==0){return"<"+tag.name+strAttrs+"/>";}var strChildren=tag.children.map(function(node){return node.visit(_this);});return"<"+tag.name+strAttrs+">"+strChildren.join('')+"</"+tag.name+">";};_Visitor.prototype.visitText=function(text){return text.value;};_Visitor.prototype.visitDeclaration=function(decl){return"<?xml"+this._serializeAttributes(decl.attrs)+" ?>";};_Visitor.prototype._serializeAttributes=function(attrs){var strAttrs=Object.keys(attrs).map(function(name){return name+"=\""+attrs[name]+"\"";}).join(' ');return strAttrs.length>0?' '+strAttrs:'';};_Visitor.prototype.visitDoctype=function(doctype){return"<!DOCTYPE "+doctype.rootTag+" [\n"+doctype.dtd+"\n]>";};return _Visitor;}();var _visitor=new _Visitor$1();function serialize(nodes){return nodes.map(function(node){return node.visit(_visitor);}).join('');}var Declaration=/** @class */function(){function Declaration(unescapedAttrs){var _this=this;this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this.attrs[k]=escapeXml(unescapedAttrs[k]);});}Declaration.prototype.visit=function(visitor){return visitor.visitDeclaration(this);};return Declaration;}();var Doctype=/** @class */function(){function Doctype(rootTag,dtd){this.rootTag=rootTag;this.dtd=dtd;}Doctype.prototype.visit=function(visitor){return visitor.visitDoctype(this);};return Doctype;}();var Tag=/** @class */function(){function Tag(name,unescapedAttrs,children){if(unescapedAttrs===void 0){unescapedAttrs={};}if(children===void 0){children=[];}var _this=this;this.name=name;this.children=children;this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this.attrs[k]=escapeXml(unescapedAttrs[k]);});}Tag.prototype.visit=function(visitor){return visitor.visitTag(this);};return Tag;}();var Text$2=/** @class */function(){function Text(unescapedValue){this.value=escapeXml(unescapedValue);}Text.prototype.visit=function(visitor){return visitor.visitText(this);};return Text;}();var CR=/** @class */function(_super){(0,_tslib.__extends)(CR,_super);function CR(ws){if(ws===void 0){ws=0;}return _super.call(this,"\n"+new Array(ws+1).join(' '))||this;}return CR;}(Text$2);var _ESCAPED_CHARS=[[/&/g,'&amp;'],[/"/g,'&quot;'],[/'/g,'&apos;'],[/</g,'&lt;'],[/>/g,'&gt;']];// Escape `_ESCAPED_CHARS` characters in the given text with encoded entities
function escapeXml(text){return _ESCAPED_CHARS.reduce(function(text,entry){return text.replace(entry[0],entry[1]);},text);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _VERSION='1.2';var _XMLNS='urn:oasis:names:tc:xliff:document:1.2';// TODO(vicb): make this a param (s/_/-/)
var _DEFAULT_SOURCE_LANG='en';var _PLACEHOLDER_TAG='x';var _MARKER_TAG='mrk';var _FILE_TAG='file';var _SOURCE_TAG='source';var _SEGMENT_SOURCE_TAG='seg-source';var _TARGET_TAG='target';var _UNIT_TAG='trans-unit';var _CONTEXT_GROUP_TAG='context-group';var _CONTEXT_TAG='context';// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html
// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html
var Xliff=/** @class */function(_super){(0,_tslib.__extends)(Xliff,_super);function Xliff(){return _super!==null&&_super.apply(this,arguments)||this;}Xliff.prototype.write=function(messages,locale){var visitor=new _WriteVisitor();var transUnits=[];messages.forEach(function(message){var contextTags=[];message.sources.forEach(function(source){var contextGroupTag=new Tag(_CONTEXT_GROUP_TAG,{purpose:'location'});contextGroupTag.children.push(new CR(10),new Tag(_CONTEXT_TAG,{'context-type':'sourcefile'},[new Text$2(source.filePath)]),new CR(10),new Tag(_CONTEXT_TAG,{'context-type':'linenumber'},[new Text$2(""+source.startLine)]),new CR(8));contextTags.push(new CR(8),contextGroupTag);});var transUnit=new Tag(_UNIT_TAG,{id:message.id,datatype:'html'});(_a=transUnit.children).push.apply(_a,(0,_tslib.__spread)([new CR(8),new Tag(_SOURCE_TAG,{},visitor.serialize(message.nodes))],contextTags));if(message.description){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'description'},[new Text$2(message.description)]));}if(message.meaning){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'meaning'},[new Text$2(message.meaning)]));}transUnit.children.push(new CR(6));transUnits.push(new CR(6),transUnit);var _a;});var body=new Tag('body',{},(0,_tslib.__spread)(transUnits,[new CR(4)]));var file=new Tag('file',{'source-language':locale||_DEFAULT_SOURCE_LANG,datatype:'plaintext',original:'ng2.template'},[new CR(4),body,new CR(2)]);var xliff=new Tag('xliff',{version:_VERSION,xmlns:_XMLNS},[new CR(2),file,new CR()]);return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),xliff,new CR()]);};Xliff.prototype.load=function(content,url){// xliff to xml nodes
var xliffParser=new XliffParser();var _a=xliffParser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n();Object.keys(msgIdToHtml).forEach(function(msgId){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,e=_a.errors;errors.push.apply(errors,(0,_tslib.__spread)(e));i18nNodesByMsgId[msgId]=i18nNodes;});if(errors.length){throw new Error("xliff parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xliff.prototype.digest=function(message){return digest(message);};return Xliff;}(Serializer);exports.Xliff=Xliff;var _WriteVisitor=/** @class */function(){function _WriteVisitor(){}_WriteVisitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_WriteVisitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,(0,_tslib.__spread)(node.visit(_this)));});return nodes;};_WriteVisitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,(0,_tslib.__spread)([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_WriteVisitor.prototype.visitTagPlaceholder=function(ph,context){var ctype=getCtypeForTag(ph.tag);if(ph.isVoid){// void tags have no children nor closing tags
return[new Tag(_PLACEHOLDER_TAG,{id:ph.startName,ctype:ctype,'equiv-text':"<"+ph.tag+"/>"})];}var startTagPh=new Tag(_PLACEHOLDER_TAG,{id:ph.startName,ctype:ctype,'equiv-text':"<"+ph.tag+">"});var closeTagPh=new Tag(_PLACEHOLDER_TAG,{id:ph.closeName,ctype:ctype,'equiv-text':"</"+ph.tag+">"});return(0,_tslib.__spread)([startTagPh],this.serialize(ph.children),[closeTagPh]);};_WriteVisitor.prototype.visitPlaceholder=function(ph,context){return[new Tag(_PLACEHOLDER_TAG,{id:ph.name,'equiv-text':"{{"+ph.value+"}}"})];};_WriteVisitor.prototype.visitIcuPlaceholder=function(ph,context){var equivText="{"+ph.value.expression+", "+ph.value.type+", "+Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ')+"}";return[new Tag(_PLACEHOLDER_TAG,{id:ph.name,'equiv-text':equivText})];};_WriteVisitor.prototype.serialize=function(nodes){var _this=this;return[].concat.apply([],(0,_tslib.__spread)(nodes.map(function(node){return node.visit(_this);})));};return _WriteVisitor;}();// TODO(vicb): add error management (structure)
// Extract messages as xml nodes from the xliff file
var XliffParser=/** @class */function(){function XliffParser(){this._locale=null;}XliffParser.prototype.parse=function(xliff,url){this._unitMlString=null;this._msgIdToHtml={};var xml=new XmlParser().parse(xliff,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes,null);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};XliffParser.prototype.visitElement=function(element,context){switch(element.name){case _UNIT_TAG:this._unitMlString=null;var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_UNIT_TAG+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{visitAll(this,element.children,null);if(typeof this._unitMlString==='string'){this._msgIdToHtml[id]=this._unitMlString;}else{this._addError(element,"Message "+id+" misses a translation");}}}break;// ignore those tags
case _SOURCE_TAG:case _SEGMENT_SOURCE_TAG:break;case _TARGET_TAG:var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._unitMlString=innerText;break;case _FILE_TAG:var localeAttr=element.attrs.find(function(attr){return attr.name==='target-language';});if(localeAttr){this._locale=localeAttr.value;}visitAll(this,element.children,null);break;default:// TODO(vicb): assert file structure, xliff version
// For now only recurse on unhandled nodes
visitAll(this,element.children,null);}};XliffParser.prototype.visitAttribute=function(attribute,context){};XliffParser.prototype.visitText=function(text,context){};XliffParser.prototype.visitComment=function(comment,context){};XliffParser.prototype.visitExpansion=function(expansion,context){};XliffParser.prototype.visitExpansionCase=function(expansionCase,context){};XliffParser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XliffParser;}();// Convert ml nodes (xliff syntax) to i18n nodes
var XmlToI18n=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,true);this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:[].concat.apply([],(0,_tslib.__spread)(visitAll(this,xmlIcu.rootNodes)));return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitElement=function(el,context){if(el.name===_PLACEHOLDER_TAG){var nameAttr=el.attrs.find(function(attr){return attr.name==='id';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,"<"+_PLACEHOLDER_TAG+"> misses the \"id\" attribute");return null;}if(el.name===_MARKER_TAG){return[].concat.apply([],(0,_tslib.__spread)(visitAll(this,el.children)));}this._addError(el,"Unexpected tag");return null;};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:visitAll(this,icuCase.expression)};};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();function getCtypeForTag(tag){switch(tag.toLowerCase()){case'br':return'lb';case'img':return'image';default:return"x-"+tag;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _VERSION$1='2.0';var _XMLNS$1='urn:oasis:names:tc:xliff:document:2.0';// TODO(vicb): make this a param (s/_/-/)
var _DEFAULT_SOURCE_LANG$1='en';var _PLACEHOLDER_TAG$1='ph';var _PLACEHOLDER_SPANNING_TAG='pc';var _MARKER_TAG$1='mrk';var _XLIFF_TAG='xliff';var _SOURCE_TAG$1='source';var _TARGET_TAG$1='target';var _UNIT_TAG$1='unit';// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html
var Xliff2=/** @class */function(_super){(0,_tslib.__extends)(Xliff2,_super);function Xliff2(){return _super!==null&&_super.apply(this,arguments)||this;}Xliff2.prototype.write=function(messages,locale){var visitor=new _WriteVisitor$1();var units=[];messages.forEach(function(message){var unit=new Tag(_UNIT_TAG$1,{id:message.id});var notes=new Tag('notes');if(message.description||message.meaning){if(message.description){notes.children.push(new CR(8),new Tag('note',{category:'description'},[new Text$2(message.description)]));}if(message.meaning){notes.children.push(new CR(8),new Tag('note',{category:'meaning'},[new Text$2(message.meaning)]));}}message.sources.forEach(function(source){notes.children.push(new CR(8),new Tag('note',{category:'location'},[new Text$2(source.filePath+":"+source.startLine+(source.endLine!==source.startLine?','+source.endLine:''))]));});notes.children.push(new CR(6));unit.children.push(new CR(6),notes);var segment=new Tag('segment');segment.children.push(new CR(8),new Tag(_SOURCE_TAG$1,{},visitor.serialize(message.nodes)),new CR(6));unit.children.push(new CR(6),segment,new CR(4));units.push(new CR(4),unit);});var file=new Tag('file',{'original':'ng.template',id:'ngi18n'},(0,_tslib.__spread)(units,[new CR(2)]));var xliff=new Tag(_XLIFF_TAG,{version:_VERSION$1,xmlns:_XMLNS$1,srcLang:locale||_DEFAULT_SOURCE_LANG$1},[new CR(2),file,new CR()]);return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),xliff,new CR()]);};Xliff2.prototype.load=function(content,url){// xliff to xml nodes
var xliff2Parser=new Xliff2Parser();var _a=xliff2Parser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n$1();Object.keys(msgIdToHtml).forEach(function(msgId){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,e=_a.errors;errors.push.apply(errors,(0,_tslib.__spread)(e));i18nNodesByMsgId[msgId]=i18nNodes;});if(errors.length){throw new Error("xliff2 parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xliff2.prototype.digest=function(message){return decimalDigest(message);};return Xliff2;}(Serializer);exports.Xliff2=Xliff2;var _WriteVisitor$1=/** @class */function(){function _WriteVisitor(){}_WriteVisitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_WriteVisitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,(0,_tslib.__spread)(node.visit(_this)));});return nodes;};_WriteVisitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,(0,_tslib.__spread)([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_WriteVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var type=getTypeForTag(ph.tag);if(ph.isVoid){var tagPh=new Tag(_PLACEHOLDER_TAG$1,{id:(this._nextPlaceholderId++).toString(),equiv:ph.startName,type:type,disp:"<"+ph.tag+"/>"});return[tagPh];}var tagPc=new Tag(_PLACEHOLDER_SPANNING_TAG,{id:(this._nextPlaceholderId++).toString(),equivStart:ph.startName,equivEnd:ph.closeName,type:type,dispStart:"<"+ph.tag+">",dispEnd:"</"+ph.tag+">"});var nodes=[].concat.apply([],(0,_tslib.__spread)(ph.children.map(function(node){return node.visit(_this);})));if(nodes.length){nodes.forEach(function(node){return tagPc.children.push(node);});}else{tagPc.children.push(new Text$2(''));}return[tagPc];};_WriteVisitor.prototype.visitPlaceholder=function(ph,context){var idStr=(this._nextPlaceholderId++).toString();return[new Tag(_PLACEHOLDER_TAG$1,{id:idStr,equiv:ph.name,disp:"{{"+ph.value+"}}"})];};_WriteVisitor.prototype.visitIcuPlaceholder=function(ph,context){var cases=Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ');var idStr=(this._nextPlaceholderId++).toString();return[new Tag(_PLACEHOLDER_TAG$1,{id:idStr,equiv:ph.name,disp:"{"+ph.value.expression+", "+ph.value.type+", "+cases+"}"})];};_WriteVisitor.prototype.serialize=function(nodes){var _this=this;this._nextPlaceholderId=0;return[].concat.apply([],(0,_tslib.__spread)(nodes.map(function(node){return node.visit(_this);})));};return _WriteVisitor;}();// Extract messages as xml nodes from the xliff file
var Xliff2Parser=/** @class */function(){function Xliff2Parser(){this._locale=null;}Xliff2Parser.prototype.parse=function(xliff,url){this._unitMlString=null;this._msgIdToHtml={};var xml=new XmlParser().parse(xliff,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes,null);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};Xliff2Parser.prototype.visitElement=function(element,context){switch(element.name){case _UNIT_TAG$1:this._unitMlString=null;var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_UNIT_TAG$1+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{visitAll(this,element.children,null);if(typeof this._unitMlString==='string'){this._msgIdToHtml[id]=this._unitMlString;}else{this._addError(element,"Message "+id+" misses a translation");}}}break;case _SOURCE_TAG$1:// ignore source message
break;case _TARGET_TAG$1:var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._unitMlString=innerText;break;case _XLIFF_TAG:var localeAttr=element.attrs.find(function(attr){return attr.name==='trgLang';});if(localeAttr){this._locale=localeAttr.value;}var versionAttr=element.attrs.find(function(attr){return attr.name==='version';});if(versionAttr){var version=versionAttr.value;if(version!=='2.0'){this._addError(element,"The XLIFF file version "+version+" is not compatible with XLIFF 2.0 serializer");}else{visitAll(this,element.children,null);}}break;default:visitAll(this,element.children,null);}};Xliff2Parser.prototype.visitAttribute=function(attribute,context){};Xliff2Parser.prototype.visitText=function(text,context){};Xliff2Parser.prototype.visitComment=function(comment,context){};Xliff2Parser.prototype.visitExpansion=function(expansion,context){};Xliff2Parser.prototype.visitExpansionCase=function(expansionCase,context){};Xliff2Parser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return Xliff2Parser;}();// Convert ml nodes (xliff syntax) to i18n nodes
var XmlToI18n$1=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,true);this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:[].concat.apply([],(0,_tslib.__spread)(visitAll(this,xmlIcu.rootNodes)));return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitElement=function(el,context){var _this=this;switch(el.name){case _PLACEHOLDER_TAG$1:var nameAttr=el.attrs.find(function(attr){return attr.name==='equiv';});if(nameAttr){return[new Placeholder('',nameAttr.value,el.sourceSpan)];}this._addError(el,"<"+_PLACEHOLDER_TAG$1+"> misses the \"equiv\" attribute");break;case _PLACEHOLDER_SPANNING_TAG:var startAttr=el.attrs.find(function(attr){return attr.name==='equivStart';});var endAttr=el.attrs.find(function(attr){return attr.name==='equivEnd';});if(!startAttr){this._addError(el,"<"+_PLACEHOLDER_TAG$1+"> misses the \"equivStart\" attribute");}else if(!endAttr){this._addError(el,"<"+_PLACEHOLDER_TAG$1+"> misses the \"equivEnd\" attribute");}else{var startId=startAttr.value;var endId=endAttr.value;var nodes=[];return nodes.concat.apply(nodes,(0,_tslib.__spread)([new Placeholder('',startId,el.sourceSpan)],el.children.map(function(node){return node.visit(_this,null);}),[new Placeholder('',endId,el.sourceSpan)]));}break;case _MARKER_TAG$1:return[].concat.apply([],(0,_tslib.__spread)(visitAll(this,el.children)));default:this._addError(el,"Unexpected tag");}return null;};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:[].concat.apply([],(0,_tslib.__spread)(visitAll(this,icuCase.expression)))};};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();function getTypeForTag(tag){switch(tag.toLowerCase()){case'br':case'b':case'i':case'u':return'fmt';case'img':return'image';case'a':return'link';default:return'other';}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _MESSAGES_TAG='messagebundle';var _MESSAGE_TAG='msg';var _PLACEHOLDER_TAG$2='ph';var _EXEMPLE_TAG='ex';var _SOURCE_TAG$2='source';var _DOCTYPE="<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>";var Xmb=/** @class */function(_super){(0,_tslib.__extends)(Xmb,_super);function Xmb(){return _super!==null&&_super.apply(this,arguments)||this;}Xmb.prototype.write=function(messages,locale){var exampleVisitor=new ExampleVisitor();var visitor=new _Visitor$2();var rootNode=new Tag(_MESSAGES_TAG);messages.forEach(function(message){var attrs={id:message.id};if(message.description){attrs['desc']=message.description;}if(message.meaning){attrs['meaning']=message.meaning;}var sourceTags=[];message.sources.forEach(function(source){sourceTags.push(new Tag(_SOURCE_TAG$2,{},[new Text$2(source.filePath+":"+source.startLine+(source.endLine!==source.startLine?','+source.endLine:''))]));});rootNode.children.push(new CR(2),new Tag(_MESSAGE_TAG,attrs,(0,_tslib.__spread)(sourceTags,visitor.serialize(message.nodes))));});rootNode.children.push(new CR());return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),new Doctype(_MESSAGES_TAG,_DOCTYPE),new CR(),exampleVisitor.addDefaultExamples(rootNode),new CR()]);};Xmb.prototype.load=function(content,url){throw new Error('Unsupported');};Xmb.prototype.digest=function(message){return digest$1(message);};Xmb.prototype.createNameMapper=function(message){return new SimplePlaceholderMapper(message,toPublicName);};return Xmb;}(Serializer);exports.Xmb=Xmb;var _Visitor$2=/** @class */function(){function _Visitor(){}_Visitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_Visitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,(0,_tslib.__spread)(node.visit(_this)));});return nodes;};_Visitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,(0,_tslib.__spread)([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_Visitor.prototype.visitTagPlaceholder=function(ph,context){var startEx=new Tag(_EXEMPLE_TAG,{},[new Text$2("<"+ph.tag+">")]);var startTagPh=new Tag(_PLACEHOLDER_TAG$2,{name:ph.startName},[startEx]);if(ph.isVoid){// void tags have no children nor closing tags
return[startTagPh];}var closeEx=new Tag(_EXEMPLE_TAG,{},[new Text$2("</"+ph.tag+">")]);var closeTagPh=new Tag(_PLACEHOLDER_TAG$2,{name:ph.closeName},[closeEx]);return(0,_tslib.__spread)([startTagPh],this.serialize(ph.children),[closeTagPh]);};_Visitor.prototype.visitPlaceholder=function(ph,context){var exTag=new Tag(_EXEMPLE_TAG,{},[new Text$2("{{"+ph.value+"}}")]);return[new Tag(_PLACEHOLDER_TAG$2,{name:ph.name},[exTag])];};_Visitor.prototype.visitIcuPlaceholder=function(ph,context){var exTag=new Tag(_EXEMPLE_TAG,{},[new Text$2("{"+ph.value.expression+", "+ph.value.type+", "+Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ')+"}")]);return[new Tag(_PLACEHOLDER_TAG$2,{name:ph.name},[exTag])];};_Visitor.prototype.serialize=function(nodes){var _this=this;return[].concat.apply([],(0,_tslib.__spread)(nodes.map(function(node){return node.visit(_this);})));};return _Visitor;}();function digest$1(message){return decimalDigest(message);}// TC requires at least one non-empty example on placeholders
var ExampleVisitor=/** @class */function(){function ExampleVisitor(){}ExampleVisitor.prototype.addDefaultExamples=function(node){node.visit(this);return node;};ExampleVisitor.prototype.visitTag=function(tag){var _this=this;if(tag.name===_PLACEHOLDER_TAG$2){if(!tag.children||tag.children.length==0){var exText=new Text$2(tag.attrs['name']||'...');tag.children=[new Tag(_EXEMPLE_TAG,{},[exText])];}}else if(tag.children){tag.children.forEach(function(node){return node.visit(_this);});}};ExampleVisitor.prototype.visitText=function(text){};ExampleVisitor.prototype.visitDeclaration=function(decl){};ExampleVisitor.prototype.visitDoctype=function(doctype){};return ExampleVisitor;}();// XMB/XTB placeholders can only contain A-Z, 0-9 and _
function toPublicName(internalName){return internalName.toUpperCase().replace(/[^A-Z0-9_]/g,'_');}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _TRANSLATIONS_TAG='translationbundle';var _TRANSLATION_TAG='translation';var _PLACEHOLDER_TAG$3='ph';var Xtb=/** @class */function(_super){(0,_tslib.__extends)(Xtb,_super);function Xtb(){return _super!==null&&_super.apply(this,arguments)||this;}Xtb.prototype.write=function(messages,locale){throw new Error('Unsupported');};Xtb.prototype.load=function(content,url){// xtb to xml nodes
var xtbParser=new XtbParser();var _a=xtbParser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n$2();// Because we should be able to load xtb files that rely on features not supported by angular,
// we need to delay the conversion of html to i18n nodes so that non angular messages are not
// converted
Object.keys(msgIdToHtml).forEach(function(msgId){var valueFn=function valueFn(){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,errors=_a.errors;if(errors.length){throw new Error("xtb parse errors:\n"+errors.join('\n'));}return i18nNodes;};createLazyProperty(i18nNodesByMsgId,msgId,valueFn);});if(errors.length){throw new Error("xtb parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xtb.prototype.digest=function(message){return digest$1(message);};Xtb.prototype.createNameMapper=function(message){return new SimplePlaceholderMapper(message,toPublicName);};return Xtb;}(Serializer);exports.Xtb=Xtb;function createLazyProperty(messages,id,valueFn){Object.defineProperty(messages,id,{configurable:true,enumerable:true,get:function get(){var value=valueFn();Object.defineProperty(messages,id,{enumerable:true,value:value});return value;},set:function set(_){throw new Error('Could not overwrite an XTB translation');}});}// Extract messages as xml nodes from the xtb file
var XtbParser=/** @class */function(){function XtbParser(){this._locale=null;}XtbParser.prototype.parse=function(xtb,url){this._bundleDepth=0;this._msgIdToHtml={};// We can not parse the ICU messages at this point as some messages might not originate
// from Angular that could not be lex'd.
var xml=new XmlParser().parse(xtb,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};XtbParser.prototype.visitElement=function(element,context){switch(element.name){case _TRANSLATIONS_TAG:this._bundleDepth++;if(this._bundleDepth>1){this._addError(element,"<"+_TRANSLATIONS_TAG+"> elements can not be nested");}var langAttr=element.attrs.find(function(attr){return attr.name==='lang';});if(langAttr){this._locale=langAttr.value;}visitAll(this,element.children,null);this._bundleDepth--;break;case _TRANSLATION_TAG:var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_TRANSLATION_TAG+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._msgIdToHtml[id]=innerText;}}break;default:this._addError(element,'Unexpected tag');}};XtbParser.prototype.visitAttribute=function(attribute,context){};XtbParser.prototype.visitText=function(text,context){};XtbParser.prototype.visitComment=function(comment,context){};XtbParser.prototype.visitExpansion=function(expansion,context){};XtbParser.prototype.visitExpansionCase=function(expansionCase,context){};XtbParser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XtbParser;}();// Convert ml nodes (xtb syntax) to i18n nodes
var XmlToI18n$2=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,true);this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:visitAll(this,xmlIcu.rootNodes);return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:visitAll(this,icuCase.expression)};};XmlToI18n.prototype.visitElement=function(el,context){if(el.name===_PLACEHOLDER_TAG$3){var nameAttr=el.attrs.find(function(attr){return attr.name==='name';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,"<"+_PLACEHOLDER_TAG$3+"> misses the \"name\" attribute");}else{this._addError(el,"Unexpected tag");}return null;};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var HtmlParser=/** @class */function(_super){(0,_tslib.__extends)(HtmlParser,_super);function HtmlParser(){return _super.call(this,getHtmlTagDefinition)||this;}HtmlParser.prototype.parse=function(source,url,parseExpansionForms,interpolationConfig){if(parseExpansionForms===void 0){parseExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}return _super.prototype.parse.call(this,source,url,parseExpansionForms,interpolationConfig);};return HtmlParser;}(Parser$1);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A container for translated messages
 */exports.HtmlParser=HtmlParser;var TranslationBundle=/** @class */function(){function TranslationBundle(_i18nNodesByMsgId,locale,digest,mapperFactory,missingTranslationStrategy,console){if(_i18nNodesByMsgId===void 0){_i18nNodesByMsgId={};}if(missingTranslationStrategy===void 0){missingTranslationStrategy=MissingTranslationStrategy.Warning;}this._i18nNodesByMsgId=_i18nNodesByMsgId;this.digest=digest;this.mapperFactory=mapperFactory;this._i18nToHtml=new I18nToHtmlVisitor(_i18nNodesByMsgId,locale,digest,mapperFactory,missingTranslationStrategy,console);}// Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.
TranslationBundle.load=function(content,url,serializer,missingTranslationStrategy,console){var _a=serializer.load(content,url),locale=_a.locale,i18nNodesByMsgId=_a.i18nNodesByMsgId;var digestFn=function digestFn(m){return serializer.digest(m);};var mapperFactory=function mapperFactory(m){return serializer.createNameMapper(m);};return new TranslationBundle(i18nNodesByMsgId,locale,digestFn,mapperFactory,missingTranslationStrategy,console);};// Returns the translation as HTML nodes from the given source message.
TranslationBundle.prototype.get=function(srcMsg){var html=this._i18nToHtml.convert(srcMsg);if(html.errors.length){throw new Error(html.errors.join('\n'));}return html.nodes;};TranslationBundle.prototype.has=function(srcMsg){return this.digest(srcMsg)in this._i18nNodesByMsgId;};return TranslationBundle;}();var I18nToHtmlVisitor=/** @class */function(){function I18nToHtmlVisitor(_i18nNodesByMsgId,_locale,_digest,_mapperFactory,_missingTranslationStrategy,_console){if(_i18nNodesByMsgId===void 0){_i18nNodesByMsgId={};}this._i18nNodesByMsgId=_i18nNodesByMsgId;this._locale=_locale;this._digest=_digest;this._mapperFactory=_mapperFactory;this._missingTranslationStrategy=_missingTranslationStrategy;this._console=_console;this._contextStack=[];this._errors=[];}I18nToHtmlVisitor.prototype.convert=function(srcMsg){this._contextStack.length=0;this._errors.length=0;// i18n to text
var text=this._convertToText(srcMsg);// text to html
var url=srcMsg.nodes[0].sourceSpan.start.file.url;var html=new HtmlParser().parse(text,url,true);return{nodes:html.rootNodes,errors:(0,_tslib.__spread)(this._errors,html.errors)};};I18nToHtmlVisitor.prototype.visitText=function(text,context){// `convert()` uses an `HtmlParser` to return `html.Node`s
// we should then make sure that any special characters are escaped
return escapeXml(text.value);};I18nToHtmlVisitor.prototype.visitContainer=function(container,context){var _this=this;return container.children.map(function(n){return n.visit(_this);}).join('');};I18nToHtmlVisitor.prototype.visitIcu=function(icu,context){var _this=this;var cases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});// TODO(vicb): Once all format switch to using expression placeholders
// we should throw when the placeholder is not in the source message
var exp=this._srcMsg.placeholders.hasOwnProperty(icu.expression)?this._srcMsg.placeholders[icu.expression]:icu.expression;return"{"+exp+", "+icu.type+", "+cases.join(' ')+"}";};I18nToHtmlVisitor.prototype.visitPlaceholder=function(ph,context){var phName=this._mapper(ph.name);if(this._srcMsg.placeholders.hasOwnProperty(phName)){return this._srcMsg.placeholders[phName];}if(this._srcMsg.placeholderToMessage.hasOwnProperty(phName)){return this._convertToText(this._srcMsg.placeholderToMessage[phName]);}this._addError(ph,"Unknown placeholder \""+ph.name+"\"");return'';};// Loaded message contains only placeholders (vs tag and icu placeholders).
// However when a translation can not be found, we need to serialize the source message
// which can contain tag placeholders
I18nToHtmlVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var tag=""+ph.tag;var attrs=Object.keys(ph.attrs).map(function(name){return name+"=\""+ph.attrs[name]+"\"";}).join(' ');if(ph.isVoid){return"<"+tag+" "+attrs+"/>";}var children=ph.children.map(function(c){return c.visit(_this);}).join('');return"<"+tag+" "+attrs+">"+children+"</"+tag+">";};// Loaded message contains only placeholders (vs tag and icu placeholders).
// However when a translation can not be found, we need to serialize the source message
// which can contain tag placeholders
I18nToHtmlVisitor.prototype.visitIcuPlaceholder=function(ph,context){// An ICU placeholder references the source message to be serialized
return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);};/**
     * Convert a source message to a translated text string:
     * - text nodes are replaced with their translation,
     * - placeholders are replaced with their content,
     * - ICU nodes are converted to ICU expressions.
     */I18nToHtmlVisitor.prototype._convertToText=function(srcMsg){var _this=this;var id=this._digest(srcMsg);var mapper=this._mapperFactory?this._mapperFactory(srcMsg):null;var nodes;this._contextStack.push({msg:this._srcMsg,mapper:this._mapper});this._srcMsg=srcMsg;if(this._i18nNodesByMsgId.hasOwnProperty(id)){// When there is a translation use its nodes as the source
// And create a mapper to convert serialized placeholder names to internal names
nodes=this._i18nNodesByMsgId[id];this._mapper=function(name){return mapper?mapper.toInternalName(name):name;};}else{// When no translation has been found
// - report an error / a warning / nothing,
// - use the nodes from the original message
// - placeholders are already internal and need no mapper
if(this._missingTranslationStrategy===MissingTranslationStrategy.Error){var ctx=this._locale?" for locale \""+this._locale+"\"":'';this._addError(srcMsg.nodes[0],"Missing translation for message \""+id+"\""+ctx);}else if(this._console&&this._missingTranslationStrategy===MissingTranslationStrategy.Warning){var ctx=this._locale?" for locale \""+this._locale+"\"":'';this._console.warn("Missing translation for message \""+id+"\""+ctx);}nodes=srcMsg.nodes;this._mapper=function(name){return name;};}var text=nodes.map(function(node){return node.visit(_this);}).join('');var context=this._contextStack.pop();this._srcMsg=context.msg;this._mapper=context.mapper;return text;};I18nToHtmlVisitor.prototype._addError=function(el,msg){this._errors.push(new I18nError(el.sourceSpan,msg));};return I18nToHtmlVisitor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var I18NHtmlParser=/** @class */function(){function I18NHtmlParser(_htmlParser,translations,translationsFormat,missingTranslation,console){if(missingTranslation===void 0){missingTranslation=MissingTranslationStrategy.Warning;}this._htmlParser=_htmlParser;if(translations){var serializer=createSerializer(translationsFormat);this._translationBundle=TranslationBundle.load(translations,'i18n',serializer,missingTranslation,console);}else{this._translationBundle=new TranslationBundle({},null,digest,undefined,missingTranslation,console);}}I18NHtmlParser.prototype.parse=function(source,url,parseExpansionForms,interpolationConfig){if(parseExpansionForms===void 0){parseExpansionForms=false;}if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var parseResult=this._htmlParser.parse(source,url,parseExpansionForms,interpolationConfig);if(parseResult.errors.length){return new ParseTreeResult(parseResult.rootNodes,parseResult.errors);}return mergeTranslations(parseResult.rootNodes,this._translationBundle,interpolationConfig,[],{});};return I18NHtmlParser;}();exports.I18NHtmlParser=I18NHtmlParser;function createSerializer(format){format=(format||'xlf').toLowerCase();switch(format){case'xmb':return new Xmb();case'xtb':return new Xtb();case'xliff2':case'xlf2':return new Xliff2();case'xliff':case'xlf':default:return new Xliff();}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CORE='@angular/core';var Identifiers=/** @class */function(){function Identifiers(){}Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS={name:'ANALYZE_FOR_ENTRY_COMPONENTS',moduleName:CORE};Identifiers.ElementRef={name:'ElementRef',moduleName:CORE};Identifiers.NgModuleRef={name:'NgModuleRef',moduleName:CORE};Identifiers.ViewContainerRef={name:'ViewContainerRef',moduleName:CORE};Identifiers.ChangeDetectorRef={name:'ChangeDetectorRef',moduleName:CORE};Identifiers.QueryList={name:'QueryList',moduleName:CORE};Identifiers.TemplateRef={name:'TemplateRef',moduleName:CORE};Identifiers.CodegenComponentFactoryResolver={name:'ɵCodegenComponentFactoryResolver',moduleName:CORE};Identifiers.ComponentFactoryResolver={name:'ComponentFactoryResolver',moduleName:CORE};Identifiers.ComponentFactory={name:'ComponentFactory',moduleName:CORE};Identifiers.ComponentRef={name:'ComponentRef',moduleName:CORE};Identifiers.NgModuleFactory={name:'NgModuleFactory',moduleName:CORE};Identifiers.createModuleFactory={name:'ɵcmf',moduleName:CORE};Identifiers.moduleDef={name:'ɵmod',moduleName:CORE};Identifiers.moduleProviderDef={name:'ɵmpd',moduleName:CORE};Identifiers.RegisterModuleFactoryFn={name:'ɵregisterModuleFactory',moduleName:CORE};Identifiers.inject={name:'inject',moduleName:CORE};Identifiers.INJECTOR={name:'INJECTOR',moduleName:CORE};Identifiers.Injector={name:'Injector',moduleName:CORE};Identifiers.defineInjectable={name:'defineInjectable',moduleName:CORE};Identifiers.ViewEncapsulation={name:'ViewEncapsulation',moduleName:CORE};Identifiers.ChangeDetectionStrategy={name:'ChangeDetectionStrategy',moduleName:CORE};Identifiers.SecurityContext={name:'SecurityContext',moduleName:CORE};Identifiers.LOCALE_ID={name:'LOCALE_ID',moduleName:CORE};Identifiers.TRANSLATIONS_FORMAT={name:'TRANSLATIONS_FORMAT',moduleName:CORE};Identifiers.inlineInterpolate={name:'ɵinlineInterpolate',moduleName:CORE};Identifiers.interpolate={name:'ɵinterpolate',moduleName:CORE};Identifiers.EMPTY_ARRAY={name:'ɵEMPTY_ARRAY',moduleName:CORE};Identifiers.EMPTY_MAP={name:'ɵEMPTY_MAP',moduleName:CORE};Identifiers.Renderer={name:'Renderer',moduleName:CORE};Identifiers.viewDef={name:'ɵvid',moduleName:CORE};Identifiers.elementDef={name:'ɵeld',moduleName:CORE};Identifiers.anchorDef={name:'ɵand',moduleName:CORE};Identifiers.textDef={name:'ɵted',moduleName:CORE};Identifiers.directiveDef={name:'ɵdid',moduleName:CORE};Identifiers.providerDef={name:'ɵprd',moduleName:CORE};Identifiers.queryDef={name:'ɵqud',moduleName:CORE};Identifiers.pureArrayDef={name:'ɵpad',moduleName:CORE};Identifiers.pureObjectDef={name:'ɵpod',moduleName:CORE};Identifiers.purePipeDef={name:'ɵppd',moduleName:CORE};Identifiers.pipeDef={name:'ɵpid',moduleName:CORE};Identifiers.nodeValue={name:'ɵnov',moduleName:CORE};Identifiers.ngContentDef={name:'ɵncd',moduleName:CORE};Identifiers.unwrapValue={name:'ɵunv',moduleName:CORE};Identifiers.createRendererType2={name:'ɵcrt',moduleName:CORE};// type only
Identifiers.RendererType2={name:'RendererType2',moduleName:CORE};// type only
Identifiers.ViewDefinition={name:'ɵViewDefinition',moduleName:CORE};Identifiers.createComponentFactory={name:'ɵccf',moduleName:CORE};return Identifiers;}();exports.Identifiers=Identifiers;function createTokenForReference(reference){return{identifier:{reference:reference}};}function createTokenForExternalReference(reflector,reference){return createTokenForReference(reflector.resolveExternalReference(reference));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ //// Types
var TypeModifier;(function(TypeModifier){TypeModifier[TypeModifier["Const"]=0]="Const";})(TypeModifier||(TypeModifier={}));var Type$1=/** @class */function(){function Type(modifiers){if(modifiers===void 0){modifiers=null;}this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}}Type.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return Type;}();var BuiltinTypeName;(function(BuiltinTypeName){BuiltinTypeName[BuiltinTypeName["Dynamic"]=0]="Dynamic";BuiltinTypeName[BuiltinTypeName["Bool"]=1]="Bool";BuiltinTypeName[BuiltinTypeName["String"]=2]="String";BuiltinTypeName[BuiltinTypeName["Int"]=3]="Int";BuiltinTypeName[BuiltinTypeName["Number"]=4]="Number";BuiltinTypeName[BuiltinTypeName["Function"]=5]="Function";BuiltinTypeName[BuiltinTypeName["Inferred"]=6]="Inferred";})(BuiltinTypeName||(BuiltinTypeName={}));var BuiltinType=/** @class */function(_super){(0,_tslib.__extends)(BuiltinType,_super);function BuiltinType(name,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.name=name;return _this;}BuiltinType.prototype.visitType=function(visitor,context){return visitor.visitBuiltinType(this,context);};return BuiltinType;}(Type$1);var ExpressionType=/** @class */function(_super){(0,_tslib.__extends)(ExpressionType,_super);function ExpressionType(value,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.value=value;return _this;}ExpressionType.prototype.visitType=function(visitor,context){return visitor.visitExpressionType(this,context);};return ExpressionType;}(Type$1);var ArrayType=/** @class */function(_super){(0,_tslib.__extends)(ArrayType,_super);function ArrayType(of,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.of=of;return _this;}ArrayType.prototype.visitType=function(visitor,context){return visitor.visitArrayType(this,context);};return ArrayType;}(Type$1);var MapType=/** @class */function(_super){(0,_tslib.__extends)(MapType,_super);function MapType(valueType,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.valueType=valueType||null;return _this;}MapType.prototype.visitType=function(visitor,context){return visitor.visitMapType(this,context);};return MapType;}(Type$1);var DYNAMIC_TYPE=new BuiltinType(BuiltinTypeName.Dynamic);var INFERRED_TYPE=new BuiltinType(BuiltinTypeName.Inferred);var BOOL_TYPE=new BuiltinType(BuiltinTypeName.Bool);var INT_TYPE=new BuiltinType(BuiltinTypeName.Int);var NUMBER_TYPE=new BuiltinType(BuiltinTypeName.Number);var STRING_TYPE=new BuiltinType(BuiltinTypeName.String);var FUNCTION_TYPE=new BuiltinType(BuiltinTypeName.Function);///// Expressions
var BinaryOperator;exports.BinaryOperator=BinaryOperator;(function(BinaryOperator){BinaryOperator[BinaryOperator["Equals"]=0]="Equals";BinaryOperator[BinaryOperator["NotEquals"]=1]="NotEquals";BinaryOperator[BinaryOperator["Identical"]=2]="Identical";BinaryOperator[BinaryOperator["NotIdentical"]=3]="NotIdentical";BinaryOperator[BinaryOperator["Minus"]=4]="Minus";BinaryOperator[BinaryOperator["Plus"]=5]="Plus";BinaryOperator[BinaryOperator["Divide"]=6]="Divide";BinaryOperator[BinaryOperator["Multiply"]=7]="Multiply";BinaryOperator[BinaryOperator["Modulo"]=8]="Modulo";BinaryOperator[BinaryOperator["And"]=9]="And";BinaryOperator[BinaryOperator["Or"]=10]="Or";BinaryOperator[BinaryOperator["BitwiseAnd"]=11]="BitwiseAnd";BinaryOperator[BinaryOperator["Lower"]=12]="Lower";BinaryOperator[BinaryOperator["LowerEquals"]=13]="LowerEquals";BinaryOperator[BinaryOperator["Bigger"]=14]="Bigger";BinaryOperator[BinaryOperator["BiggerEquals"]=15]="BiggerEquals";})(BinaryOperator||(exports.BinaryOperator=BinaryOperator={}));function nullSafeIsEquivalent(base,other){if(base==null||other==null){return base==other;}return base.isEquivalent(other);}function areAllEquivalent(base,other){var len=base.length;if(len!==other.length){return false;}for(var i=0;i<len;i++){if(!base[i].isEquivalent(other[i])){return false;}}return true;}var Expression=/** @class */function(){function Expression(type,sourceSpan){this.type=type||null;this.sourceSpan=sourceSpan||null;}Expression.prototype.prop=function(name,sourceSpan){return new ReadPropExpr(this,name,null,sourceSpan);};Expression.prototype.key=function(index,type,sourceSpan){return new ReadKeyExpr(this,index,type,sourceSpan);};Expression.prototype.callMethod=function(name,params,sourceSpan){return new InvokeMethodExpr(this,name,params,null,sourceSpan);};Expression.prototype.callFn=function(params,sourceSpan){return new InvokeFunctionExpr(this,params,null,sourceSpan);};Expression.prototype.instantiate=function(params,type,sourceSpan){return new InstantiateExpr(this,params,type,sourceSpan);};Expression.prototype.conditional=function(trueCase,falseCase,sourceSpan){if(falseCase===void 0){falseCase=null;}return new ConditionalExpr(this,trueCase,falseCase,null,sourceSpan);};Expression.prototype.equals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Equals,this,rhs,null,sourceSpan);};Expression.prototype.notEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.NotEquals,this,rhs,null,sourceSpan);};Expression.prototype.identical=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Identical,this,rhs,null,sourceSpan);};Expression.prototype.notIdentical=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.NotIdentical,this,rhs,null,sourceSpan);};Expression.prototype.minus=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Minus,this,rhs,null,sourceSpan);};Expression.prototype.plus=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Plus,this,rhs,null,sourceSpan);};Expression.prototype.divide=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Divide,this,rhs,null,sourceSpan);};Expression.prototype.multiply=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Multiply,this,rhs,null,sourceSpan);};Expression.prototype.modulo=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Modulo,this,rhs,null,sourceSpan);};Expression.prototype.and=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.And,this,rhs,null,sourceSpan);};Expression.prototype.bitwiseAnd=function(rhs,sourceSpan,parens){if(parens===void 0){parens=true;}return new BinaryOperatorExpr(BinaryOperator.BitwiseAnd,this,rhs,null,sourceSpan,parens);};Expression.prototype.or=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Or,this,rhs,null,sourceSpan);};Expression.prototype.lower=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Lower,this,rhs,null,sourceSpan);};Expression.prototype.lowerEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.LowerEquals,this,rhs,null,sourceSpan);};Expression.prototype.bigger=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Bigger,this,rhs,null,sourceSpan);};Expression.prototype.biggerEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.BiggerEquals,this,rhs,null,sourceSpan);};Expression.prototype.isBlank=function(sourceSpan){// Note: We use equals by purpose here to compare to null and undefined in JS.
// We use the typed null to allow strictNullChecks to narrow types.
return this.equals(TYPED_NULL_EXPR,sourceSpan);};Expression.prototype.cast=function(type,sourceSpan){return new CastExpr(this,type,sourceSpan);};Expression.prototype.toStmt=function(){return new ExpressionStatement(this,null);};return Expression;}();var BuiltinVar;exports.BuiltinVar=BuiltinVar;(function(BuiltinVar){BuiltinVar[BuiltinVar["This"]=0]="This";BuiltinVar[BuiltinVar["Super"]=1]="Super";BuiltinVar[BuiltinVar["CatchError"]=2]="CatchError";BuiltinVar[BuiltinVar["CatchStack"]=3]="CatchStack";})(BuiltinVar||(exports.BuiltinVar=BuiltinVar={}));var ReadVarExpr=/** @class */function(_super){(0,_tslib.__extends)(ReadVarExpr,_super);function ReadVarExpr(name,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;if(typeof name==='string'){_this.name=name;_this.builtin=null;}else{_this.name=null;_this.builtin=name;}return _this;}ReadVarExpr.prototype.isEquivalent=function(e){return e instanceof ReadVarExpr&&this.name===e.name&&this.builtin===e.builtin;};ReadVarExpr.prototype.isConstant=function(){return false;};ReadVarExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadVarExpr(this,context);};ReadVarExpr.prototype.set=function(value){if(!this.name){throw new Error("Built in variable "+this.builtin+" can not be assigned to.");}return new WriteVarExpr(this.name,value,null,this.sourceSpan);};return ReadVarExpr;}(Expression);exports.ReadVarExpr=ReadVarExpr;var WriteVarExpr=/** @class */function(_super){(0,_tslib.__extends)(WriteVarExpr,_super);function WriteVarExpr(name,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.name=name;_this.value=value;return _this;}WriteVarExpr.prototype.isEquivalent=function(e){return e instanceof WriteVarExpr&&this.name===e.name&&this.value.isEquivalent(e.value);};WriteVarExpr.prototype.isConstant=function(){return false;};WriteVarExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWriteVarExpr(this,context);};WriteVarExpr.prototype.toDeclStmt=function(type,modifiers){return new DeclareVarStmt(this.name,this.value,type,modifiers,this.sourceSpan);};return WriteVarExpr;}(Expression);exports.WriteVarExpr=WriteVarExpr;var WriteKeyExpr=/** @class */function(_super){(0,_tslib.__extends)(WriteKeyExpr,_super);function WriteKeyExpr(receiver,index,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.receiver=receiver;_this.index=index;_this.value=value;return _this;}WriteKeyExpr.prototype.isEquivalent=function(e){return e instanceof WriteKeyExpr&&this.receiver.isEquivalent(e.receiver)&&this.index.isEquivalent(e.index)&&this.value.isEquivalent(e.value);};WriteKeyExpr.prototype.isConstant=function(){return false;};WriteKeyExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWriteKeyExpr(this,context);};return WriteKeyExpr;}(Expression);exports.WriteKeyExpr=WriteKeyExpr;var WritePropExpr=/** @class */function(_super){(0,_tslib.__extends)(WritePropExpr,_super);function WritePropExpr(receiver,name,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.receiver=receiver;_this.name=name;_this.value=value;return _this;}WritePropExpr.prototype.isEquivalent=function(e){return e instanceof WritePropExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name&&this.value.isEquivalent(e.value);};WritePropExpr.prototype.isConstant=function(){return false;};WritePropExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWritePropExpr(this,context);};return WritePropExpr;}(Expression);exports.WritePropExpr=WritePropExpr;var BuiltinMethod;exports.BuiltinMethod=BuiltinMethod;(function(BuiltinMethod){BuiltinMethod[BuiltinMethod["ConcatArray"]=0]="ConcatArray";BuiltinMethod[BuiltinMethod["SubscribeObservable"]=1]="SubscribeObservable";BuiltinMethod[BuiltinMethod["Bind"]=2]="Bind";})(BuiltinMethod||(exports.BuiltinMethod=BuiltinMethod={}));var InvokeMethodExpr=/** @class */function(_super){(0,_tslib.__extends)(InvokeMethodExpr,_super);function InvokeMethodExpr(receiver,method,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.args=args;if(typeof method==='string'){_this.name=method;_this.builtin=null;}else{_this.name=null;_this.builtin=method;}return _this;}InvokeMethodExpr.prototype.isEquivalent=function(e){return e instanceof InvokeMethodExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name&&this.builtin===e.builtin&&areAllEquivalent(this.args,e.args);};InvokeMethodExpr.prototype.isConstant=function(){return false;};InvokeMethodExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInvokeMethodExpr(this,context);};return InvokeMethodExpr;}(Expression);exports.InvokeMethodExpr=InvokeMethodExpr;var InvokeFunctionExpr=/** @class */function(_super){(0,_tslib.__extends)(InvokeFunctionExpr,_super);function InvokeFunctionExpr(fn,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.fn=fn;_this.args=args;return _this;}InvokeFunctionExpr.prototype.isEquivalent=function(e){return e instanceof InvokeFunctionExpr&&this.fn.isEquivalent(e.fn)&&areAllEquivalent(this.args,e.args);};InvokeFunctionExpr.prototype.isConstant=function(){return false;};InvokeFunctionExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInvokeFunctionExpr(this,context);};return InvokeFunctionExpr;}(Expression);exports.InvokeFunctionExpr=InvokeFunctionExpr;var InstantiateExpr=/** @class */function(_super){(0,_tslib.__extends)(InstantiateExpr,_super);function InstantiateExpr(classExpr,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.classExpr=classExpr;_this.args=args;return _this;}InstantiateExpr.prototype.isEquivalent=function(e){return e instanceof InstantiateExpr&&this.classExpr.isEquivalent(e.classExpr)&&areAllEquivalent(this.args,e.args);};InstantiateExpr.prototype.isConstant=function(){return false;};InstantiateExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInstantiateExpr(this,context);};return InstantiateExpr;}(Expression);exports.InstantiateExpr=InstantiateExpr;var LiteralExpr=/** @class */function(_super){(0,_tslib.__extends)(LiteralExpr,_super);function LiteralExpr(value,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;return _this;}LiteralExpr.prototype.isEquivalent=function(e){return e instanceof LiteralExpr&&this.value===e.value;};LiteralExpr.prototype.isConstant=function(){return true;};LiteralExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralExpr(this,context);};return LiteralExpr;}(Expression);exports.LiteralExpr=LiteralExpr;var ExternalExpr=/** @class */function(_super){(0,_tslib.__extends)(ExternalExpr,_super);function ExternalExpr(value,type,typeParams,sourceSpan){if(typeParams===void 0){typeParams=null;}var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;_this.typeParams=typeParams;return _this;}ExternalExpr.prototype.isEquivalent=function(e){return e instanceof ExternalExpr&&this.value.name===e.value.name&&this.value.moduleName===e.value.moduleName&&this.value.runtime===e.value.runtime;};ExternalExpr.prototype.isConstant=function(){return false;};ExternalExpr.prototype.visitExpression=function(visitor,context){return visitor.visitExternalExpr(this,context);};return ExternalExpr;}(Expression);exports.ExternalExpr=ExternalExpr;var ExternalReference=/** @class */function(){function ExternalReference(moduleName,name,runtime){this.moduleName=moduleName;this.name=name;this.runtime=runtime;}return ExternalReference;}();exports.ExternalReference=ExternalReference;var ConditionalExpr=/** @class */function(_super){(0,_tslib.__extends)(ConditionalExpr,_super);function ConditionalExpr(condition,trueCase,falseCase,type,sourceSpan){if(falseCase===void 0){falseCase=null;}var _this=_super.call(this,type||trueCase.type,sourceSpan)||this;_this.condition=condition;_this.falseCase=falseCase;_this.trueCase=trueCase;return _this;}ConditionalExpr.prototype.isEquivalent=function(e){return e instanceof ConditionalExpr&&this.condition.isEquivalent(e.condition)&&this.trueCase.isEquivalent(e.trueCase)&&nullSafeIsEquivalent(this.falseCase,e.falseCase);};ConditionalExpr.prototype.isConstant=function(){return false;};ConditionalExpr.prototype.visitExpression=function(visitor,context){return visitor.visitConditionalExpr(this,context);};return ConditionalExpr;}(Expression);exports.ConditionalExpr=ConditionalExpr;var NotExpr=/** @class */function(_super){(0,_tslib.__extends)(NotExpr,_super);function NotExpr(condition,sourceSpan){var _this=_super.call(this,BOOL_TYPE,sourceSpan)||this;_this.condition=condition;return _this;}NotExpr.prototype.isEquivalent=function(e){return e instanceof NotExpr&&this.condition.isEquivalent(e.condition);};NotExpr.prototype.isConstant=function(){return false;};NotExpr.prototype.visitExpression=function(visitor,context){return visitor.visitNotExpr(this,context);};return NotExpr;}(Expression);exports.NotExpr=NotExpr;var AssertNotNull=/** @class */function(_super){(0,_tslib.__extends)(AssertNotNull,_super);function AssertNotNull(condition,sourceSpan){var _this=_super.call(this,condition.type,sourceSpan)||this;_this.condition=condition;return _this;}AssertNotNull.prototype.isEquivalent=function(e){return e instanceof AssertNotNull&&this.condition.isEquivalent(e.condition);};AssertNotNull.prototype.isConstant=function(){return false;};AssertNotNull.prototype.visitExpression=function(visitor,context){return visitor.visitAssertNotNullExpr(this,context);};return AssertNotNull;}(Expression);exports.AssertNotNull=AssertNotNull;var CastExpr=/** @class */function(_super){(0,_tslib.__extends)(CastExpr,_super);function CastExpr(value,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;return _this;}CastExpr.prototype.isEquivalent=function(e){return e instanceof CastExpr&&this.value.isEquivalent(e.value);};CastExpr.prototype.isConstant=function(){return false;};CastExpr.prototype.visitExpression=function(visitor,context){return visitor.visitCastExpr(this,context);};return CastExpr;}(Expression);exports.CastExpr=CastExpr;var FnParam=/** @class */function(){function FnParam(name,type){if(type===void 0){type=null;}this.name=name;this.type=type;}FnParam.prototype.isEquivalent=function(param){return this.name===param.name;};return FnParam;}();var FunctionExpr=/** @class */function(_super){(0,_tslib.__extends)(FunctionExpr,_super);function FunctionExpr(params,statements,type,sourceSpan,name){var _this=_super.call(this,type,sourceSpan)||this;_this.params=params;_this.statements=statements;_this.name=name;return _this;}FunctionExpr.prototype.isEquivalent=function(e){return e instanceof FunctionExpr&&areAllEquivalent(this.params,e.params)&&areAllEquivalent(this.statements,e.statements);};FunctionExpr.prototype.isConstant=function(){return false;};FunctionExpr.prototype.visitExpression=function(visitor,context){return visitor.visitFunctionExpr(this,context);};FunctionExpr.prototype.toDeclStmt=function(name,modifiers){if(modifiers===void 0){modifiers=null;}return new DeclareFunctionStmt(name,this.params,this.statements,this.type,modifiers,this.sourceSpan);};return FunctionExpr;}(Expression);exports.FunctionExpr=FunctionExpr;var BinaryOperatorExpr=/** @class */function(_super){(0,_tslib.__extends)(BinaryOperatorExpr,_super);function BinaryOperatorExpr(operator,lhs,rhs,type,sourceSpan,parens){if(parens===void 0){parens=true;}var _this=_super.call(this,type||lhs.type,sourceSpan)||this;_this.operator=operator;_this.rhs=rhs;_this.parens=parens;_this.lhs=lhs;return _this;}BinaryOperatorExpr.prototype.isEquivalent=function(e){return e instanceof BinaryOperatorExpr&&this.operator===e.operator&&this.lhs.isEquivalent(e.lhs)&&this.rhs.isEquivalent(e.rhs);};BinaryOperatorExpr.prototype.isConstant=function(){return false;};BinaryOperatorExpr.prototype.visitExpression=function(visitor,context){return visitor.visitBinaryOperatorExpr(this,context);};return BinaryOperatorExpr;}(Expression);exports.BinaryOperatorExpr=BinaryOperatorExpr;var ReadPropExpr=/** @class */function(_super){(0,_tslib.__extends)(ReadPropExpr,_super);function ReadPropExpr(receiver,name,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.name=name;return _this;}ReadPropExpr.prototype.isEquivalent=function(e){return e instanceof ReadPropExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name;};ReadPropExpr.prototype.isConstant=function(){return false;};ReadPropExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadPropExpr(this,context);};ReadPropExpr.prototype.set=function(value){return new WritePropExpr(this.receiver,this.name,value,null,this.sourceSpan);};return ReadPropExpr;}(Expression);exports.ReadPropExpr=ReadPropExpr;var ReadKeyExpr=/** @class */function(_super){(0,_tslib.__extends)(ReadKeyExpr,_super);function ReadKeyExpr(receiver,index,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.index=index;return _this;}ReadKeyExpr.prototype.isEquivalent=function(e){return e instanceof ReadKeyExpr&&this.receiver.isEquivalent(e.receiver)&&this.index.isEquivalent(e.index);};ReadKeyExpr.prototype.isConstant=function(){return false;};ReadKeyExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadKeyExpr(this,context);};ReadKeyExpr.prototype.set=function(value){return new WriteKeyExpr(this.receiver,this.index,value,null,this.sourceSpan);};return ReadKeyExpr;}(Expression);exports.ReadKeyExpr=ReadKeyExpr;var LiteralArrayExpr=/** @class */function(_super){(0,_tslib.__extends)(LiteralArrayExpr,_super);function LiteralArrayExpr(entries,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.entries=entries;return _this;}LiteralArrayExpr.prototype.isConstant=function(){return this.entries.every(function(e){return e.isConstant();});};LiteralArrayExpr.prototype.isEquivalent=function(e){return e instanceof LiteralArrayExpr&&areAllEquivalent(this.entries,e.entries);};LiteralArrayExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralArrayExpr(this,context);};return LiteralArrayExpr;}(Expression);exports.LiteralArrayExpr=LiteralArrayExpr;var LiteralMapEntry=/** @class */function(){function LiteralMapEntry(key,value,quoted){this.key=key;this.value=value;this.quoted=quoted;}LiteralMapEntry.prototype.isEquivalent=function(e){return this.key===e.key&&this.value.isEquivalent(e.value);};return LiteralMapEntry;}();var LiteralMapExpr=/** @class */function(_super){(0,_tslib.__extends)(LiteralMapExpr,_super);function LiteralMapExpr(entries,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.entries=entries;_this.valueType=null;if(type){_this.valueType=type.valueType;}return _this;}LiteralMapExpr.prototype.isEquivalent=function(e){return e instanceof LiteralMapExpr&&areAllEquivalent(this.entries,e.entries);};LiteralMapExpr.prototype.isConstant=function(){return this.entries.every(function(e){return e.value.isConstant();});};LiteralMapExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralMapExpr(this,context);};return LiteralMapExpr;}(Expression);exports.LiteralMapExpr=LiteralMapExpr;var CommaExpr=/** @class */function(_super){(0,_tslib.__extends)(CommaExpr,_super);function CommaExpr(parts,sourceSpan){var _this=_super.call(this,parts[parts.length-1].type,sourceSpan)||this;_this.parts=parts;return _this;}CommaExpr.prototype.isEquivalent=function(e){return e instanceof CommaExpr&&areAllEquivalent(this.parts,e.parts);};CommaExpr.prototype.isConstant=function(){return false;};CommaExpr.prototype.visitExpression=function(visitor,context){return visitor.visitCommaExpr(this,context);};return CommaExpr;}(Expression);exports.CommaExpr=CommaExpr;var THIS_EXPR=new ReadVarExpr(BuiltinVar.This,null,null);var SUPER_EXPR=new ReadVarExpr(BuiltinVar.Super,null,null);var CATCH_ERROR_VAR=new ReadVarExpr(BuiltinVar.CatchError,null,null);var CATCH_STACK_VAR=new ReadVarExpr(BuiltinVar.CatchStack,null,null);var NULL_EXPR=new LiteralExpr(null,null,null);var TYPED_NULL_EXPR=new LiteralExpr(null,INFERRED_TYPE,null);//// Statements
var StmtModifier;exports.StmtModifier=StmtModifier;(function(StmtModifier){StmtModifier[StmtModifier["Final"]=0]="Final";StmtModifier[StmtModifier["Private"]=1]="Private";StmtModifier[StmtModifier["Exported"]=2]="Exported";StmtModifier[StmtModifier["Static"]=3]="Static";})(StmtModifier||(exports.StmtModifier=StmtModifier={}));var Statement=/** @class */function(){function Statement(modifiers,sourceSpan){this.modifiers=modifiers||[];this.sourceSpan=sourceSpan||null;}Statement.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return Statement;}();exports.Statement=Statement;var DeclareVarStmt=/** @class */function(_super){(0,_tslib.__extends)(DeclareVarStmt,_super);function DeclareVarStmt(name,value,type,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.value=value;_this.type=type||value&&value.type||null;return _this;}DeclareVarStmt.prototype.isEquivalent=function(stmt){return stmt instanceof DeclareVarStmt&&this.name===stmt.name&&(this.value?!!stmt.value&&this.value.isEquivalent(stmt.value):!stmt.value);};DeclareVarStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareVarStmt(this,context);};return DeclareVarStmt;}(Statement);exports.DeclareVarStmt=DeclareVarStmt;var DeclareFunctionStmt=/** @class */function(_super){(0,_tslib.__extends)(DeclareFunctionStmt,_super);function DeclareFunctionStmt(name,params,statements,type,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.params=params;_this.statements=statements;_this.type=type||null;return _this;}DeclareFunctionStmt.prototype.isEquivalent=function(stmt){return stmt instanceof DeclareFunctionStmt&&areAllEquivalent(this.params,stmt.params)&&areAllEquivalent(this.statements,stmt.statements);};DeclareFunctionStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareFunctionStmt(this,context);};return DeclareFunctionStmt;}(Statement);exports.DeclareFunctionStmt=DeclareFunctionStmt;var ExpressionStatement=/** @class */function(_super){(0,_tslib.__extends)(ExpressionStatement,_super);function ExpressionStatement(expr,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.expr=expr;return _this;}ExpressionStatement.prototype.isEquivalent=function(stmt){return stmt instanceof ExpressionStatement&&this.expr.isEquivalent(stmt.expr);};ExpressionStatement.prototype.visitStatement=function(visitor,context){return visitor.visitExpressionStmt(this,context);};return ExpressionStatement;}(Statement);exports.ExpressionStatement=ExpressionStatement;var ReturnStatement=/** @class */function(_super){(0,_tslib.__extends)(ReturnStatement,_super);function ReturnStatement(value,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.value=value;return _this;}ReturnStatement.prototype.isEquivalent=function(stmt){return stmt instanceof ReturnStatement&&this.value.isEquivalent(stmt.value);};ReturnStatement.prototype.visitStatement=function(visitor,context){return visitor.visitReturnStmt(this,context);};return ReturnStatement;}(Statement);exports.ReturnStatement=ReturnStatement;var AbstractClassPart=/** @class */function(){function AbstractClassPart(type,modifiers){this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}this.type=type||null;}AbstractClassPart.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return AbstractClassPart;}();var ClassField=/** @class */function(_super){(0,_tslib.__extends)(ClassField,_super);function ClassField(name,type,modifiers,initializer){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.initializer=initializer;return _this;}ClassField.prototype.isEquivalent=function(f){return this.name===f.name;};return ClassField;}(AbstractClassPart);exports.ClassField=ClassField;var ClassMethod=/** @class */function(_super){(0,_tslib.__extends)(ClassMethod,_super);function ClassMethod(name,params,body,type,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.params=params;_this.body=body;return _this;}ClassMethod.prototype.isEquivalent=function(m){return this.name===m.name&&areAllEquivalent(this.body,m.body);};return ClassMethod;}(AbstractClassPart);exports.ClassMethod=ClassMethod;var ClassGetter=/** @class */function(_super){(0,_tslib.__extends)(ClassGetter,_super);function ClassGetter(name,body,type,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.body=body;return _this;}ClassGetter.prototype.isEquivalent=function(m){return this.name===m.name&&areAllEquivalent(this.body,m.body);};return ClassGetter;}(AbstractClassPart);var ClassStmt=/** @class */function(_super){(0,_tslib.__extends)(ClassStmt,_super);function ClassStmt(name,parent,fields,getters,constructorMethod,methods,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.parent=parent;_this.fields=fields;_this.getters=getters;_this.constructorMethod=constructorMethod;_this.methods=methods;return _this;}ClassStmt.prototype.isEquivalent=function(stmt){return stmt instanceof ClassStmt&&this.name===stmt.name&&nullSafeIsEquivalent(this.parent,stmt.parent)&&areAllEquivalent(this.fields,stmt.fields)&&areAllEquivalent(this.getters,stmt.getters)&&this.constructorMethod.isEquivalent(stmt.constructorMethod)&&areAllEquivalent(this.methods,stmt.methods);};ClassStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareClassStmt(this,context);};return ClassStmt;}(Statement);exports.ClassStmt=ClassStmt;var IfStmt=/** @class */function(_super){(0,_tslib.__extends)(IfStmt,_super);function IfStmt(condition,trueCase,falseCase,sourceSpan){if(falseCase===void 0){falseCase=[];}var _this=_super.call(this,null,sourceSpan)||this;_this.condition=condition;_this.trueCase=trueCase;_this.falseCase=falseCase;return _this;}IfStmt.prototype.isEquivalent=function(stmt){return stmt instanceof IfStmt&&this.condition.isEquivalent(stmt.condition)&&areAllEquivalent(this.trueCase,stmt.trueCase)&&areAllEquivalent(this.falseCase,stmt.falseCase);};IfStmt.prototype.visitStatement=function(visitor,context){return visitor.visitIfStmt(this,context);};return IfStmt;}(Statement);exports.IfStmt=IfStmt;var CommentStmt=/** @class */function(_super){(0,_tslib.__extends)(CommentStmt,_super);function CommentStmt(comment,multiline,sourceSpan){if(multiline===void 0){multiline=false;}var _this=_super.call(this,null,sourceSpan)||this;_this.comment=comment;_this.multiline=multiline;return _this;}CommentStmt.prototype.isEquivalent=function(stmt){return stmt instanceof CommentStmt;};CommentStmt.prototype.visitStatement=function(visitor,context){return visitor.visitCommentStmt(this,context);};return CommentStmt;}(Statement);exports.CommentStmt=CommentStmt;var JSDocCommentStmt=/** @class */function(_super){(0,_tslib.__extends)(JSDocCommentStmt,_super);function JSDocCommentStmt(tags,sourceSpan){if(tags===void 0){tags=[];}var _this=_super.call(this,null,sourceSpan)||this;_this.tags=tags;return _this;}JSDocCommentStmt.prototype.isEquivalent=function(stmt){return stmt instanceof JSDocCommentStmt&&this.toString()===stmt.toString();};JSDocCommentStmt.prototype.visitStatement=function(visitor,context){return visitor.visitJSDocCommentStmt(this,context);};JSDocCommentStmt.prototype.toString=function(){return serializeTags(this.tags);};return JSDocCommentStmt;}(Statement);exports.JSDocCommentStmt=JSDocCommentStmt;var TryCatchStmt=/** @class */function(_super){(0,_tslib.__extends)(TryCatchStmt,_super);function TryCatchStmt(bodyStmts,catchStmts,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.bodyStmts=bodyStmts;_this.catchStmts=catchStmts;return _this;}TryCatchStmt.prototype.isEquivalent=function(stmt){return stmt instanceof TryCatchStmt&&areAllEquivalent(this.bodyStmts,stmt.bodyStmts)&&areAllEquivalent(this.catchStmts,stmt.catchStmts);};TryCatchStmt.prototype.visitStatement=function(visitor,context){return visitor.visitTryCatchStmt(this,context);};return TryCatchStmt;}(Statement);exports.TryCatchStmt=TryCatchStmt;var ThrowStmt=/** @class */function(_super){(0,_tslib.__extends)(ThrowStmt,_super);function ThrowStmt(error,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.error=error;return _this;}ThrowStmt.prototype.isEquivalent=function(stmt){return stmt instanceof TryCatchStmt&&this.error.isEquivalent(stmt.error);};ThrowStmt.prototype.visitStatement=function(visitor,context){return visitor.visitThrowStmt(this,context);};return ThrowStmt;}(Statement);exports.ThrowStmt=ThrowStmt;var AstTransformer$1=/** @class */function(){function AstTransformer(){}AstTransformer.prototype.transformExpr=function(expr,context){return expr;};AstTransformer.prototype.transformStmt=function(stmt,context){return stmt;};AstTransformer.prototype.visitReadVarExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitWriteVarExpr=function(expr,context){return this.transformExpr(new WriteVarExpr(expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWriteKeyExpr=function(expr,context){return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this,context),expr.index.visitExpression(this,context),expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWritePropExpr=function(expr,context){return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this,context),expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitInvokeMethodExpr=function(ast,context){var method=ast.builtin||ast.name;return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this,context),method,this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitInvokeFunctionExpr=function(ast,context){return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitInstantiateExpr=function(ast,context){return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitExternalExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitConditionalExpr=function(ast,context){return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this,context),ast.trueCase.visitExpression(this,context),ast.falseCase.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitNotExpr=function(ast,context){return this.transformExpr(new NotExpr(ast.condition.visitExpression(this,context),ast.sourceSpan),context);};AstTransformer.prototype.visitAssertNotNullExpr=function(ast,context){return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this,context),ast.sourceSpan),context);};AstTransformer.prototype.visitCastExpr=function(ast,context){return this.transformExpr(new CastExpr(ast.value.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitFunctionExpr=function(ast,context){return this.transformExpr(new FunctionExpr(ast.params,this.visitAllStatements(ast.statements,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitBinaryOperatorExpr=function(ast,context){return this.transformExpr(new BinaryOperatorExpr(ast.operator,ast.lhs.visitExpression(this,context),ast.rhs.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitReadPropExpr=function(ast,context){return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this,context),ast.name,ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitReadKeyExpr=function(ast,context){return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this,context),ast.index.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralArrayExpr=function(ast,context){return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;var entries=ast.entries.map(function(entry){return new LiteralMapEntry(entry.key,entry.value.visitExpression(_this,context),entry.quoted);});var mapType=new MapType(ast.valueType,null);return this.transformExpr(new LiteralMapExpr(entries,mapType,ast.sourceSpan),context);};AstTransformer.prototype.visitCommaExpr=function(ast,context){return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts,context),ast.sourceSpan),context);};AstTransformer.prototype.visitAllExpressions=function(exprs,context){var _this=this;return exprs.map(function(expr){return expr.visitExpression(_this,context);});};AstTransformer.prototype.visitDeclareVarStmt=function(stmt,context){var value=stmt.value&&stmt.value.visitExpression(this,context);return this.transformStmt(new DeclareVarStmt(stmt.name,value,stmt.type,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitDeclareFunctionStmt=function(stmt,context){return this.transformStmt(new DeclareFunctionStmt(stmt.name,stmt.params,this.visitAllStatements(stmt.statements,context),stmt.type,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitExpressionStmt=function(stmt,context){return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitReturnStmt=function(stmt,context){return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitDeclareClassStmt=function(stmt,context){var _this=this;var parent=stmt.parent.visitExpression(this,context);var getters=stmt.getters.map(function(getter){return new ClassGetter(getter.name,_this.visitAllStatements(getter.body,context),getter.type,getter.modifiers);});var ctorMethod=stmt.constructorMethod&&new ClassMethod(stmt.constructorMethod.name,stmt.constructorMethod.params,this.visitAllStatements(stmt.constructorMethod.body,context),stmt.constructorMethod.type,stmt.constructorMethod.modifiers);var methods=stmt.methods.map(function(method){return new ClassMethod(method.name,method.params,_this.visitAllStatements(method.body,context),method.type,method.modifiers);});return this.transformStmt(new ClassStmt(stmt.name,parent,stmt.fields,getters,ctorMethod,methods,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitIfStmt=function(stmt,context){return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this,context),this.visitAllStatements(stmt.trueCase,context),this.visitAllStatements(stmt.falseCase,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitTryCatchStmt=function(stmt,context){return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts,context),this.visitAllStatements(stmt.catchStmts,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitThrowStmt=function(stmt,context){return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitCommentStmt=function(stmt,context){return this.transformStmt(stmt,context);};AstTransformer.prototype.visitJSDocCommentStmt=function(stmt,context){return this.transformStmt(stmt,context);};AstTransformer.prototype.visitAllStatements=function(stmts,context){var _this=this;return stmts.map(function(stmt){return stmt.visitStatement(_this,context);});};return AstTransformer;}();var RecursiveAstVisitor$1=/** @class */function(){function RecursiveAstVisitor(){}RecursiveAstVisitor.prototype.visitType=function(ast,context){return ast;};RecursiveAstVisitor.prototype.visitExpression=function(ast,context){if(ast.type){ast.type.visitType(this,context);}return ast;};RecursiveAstVisitor.prototype.visitBuiltinType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitExpressionType=function(type,context){type.value.visitExpression(this,context);return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitArrayType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitMapType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitReadVarExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWriteVarExpr=function(ast,context){ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWriteKeyExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.index.visitExpression(this,context);ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWritePropExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInvokeMethodExpr=function(ast,context){ast.receiver.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInvokeFunctionExpr=function(ast,context){ast.fn.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInstantiateExpr=function(ast,context){ast.classExpr.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitExternalExpr=function(ast,context){var _this=this;if(ast.typeParams){ast.typeParams.forEach(function(type){return type.visitType(_this,context);});}return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitConditionalExpr=function(ast,context){ast.condition.visitExpression(this,context);ast.trueCase.visitExpression(this,context);ast.falseCase.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitNotExpr=function(ast,context){ast.condition.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitAssertNotNullExpr=function(ast,context){ast.condition.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitCastExpr=function(ast,context){ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitFunctionExpr=function(ast,context){this.visitAllStatements(ast.statements,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitBinaryOperatorExpr=function(ast,context){ast.lhs.visitExpression(this,context);ast.rhs.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadPropExpr=function(ast,context){ast.receiver.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadKeyExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.index.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralArrayExpr=function(ast,context){this.visitAllExpressions(ast.entries,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;ast.entries.forEach(function(entry){return entry.value.visitExpression(_this,context);});return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitCommaExpr=function(ast,context){this.visitAllExpressions(ast.parts,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitAllExpressions=function(exprs,context){var _this=this;exprs.forEach(function(expr){return expr.visitExpression(_this,context);});};RecursiveAstVisitor.prototype.visitDeclareVarStmt=function(stmt,context){if(stmt.value){stmt.value.visitExpression(this,context);}if(stmt.type){stmt.type.visitType(this,context);}return stmt;};RecursiveAstVisitor.prototype.visitDeclareFunctionStmt=function(stmt,context){this.visitAllStatements(stmt.statements,context);if(stmt.type){stmt.type.visitType(this,context);}return stmt;};RecursiveAstVisitor.prototype.visitExpressionStmt=function(stmt,context){stmt.expr.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitReturnStmt=function(stmt,context){stmt.value.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitDeclareClassStmt=function(stmt,context){var _this=this;stmt.parent.visitExpression(this,context);stmt.getters.forEach(function(getter){return _this.visitAllStatements(getter.body,context);});if(stmt.constructorMethod){this.visitAllStatements(stmt.constructorMethod.body,context);}stmt.methods.forEach(function(method){return _this.visitAllStatements(method.body,context);});return stmt;};RecursiveAstVisitor.prototype.visitIfStmt=function(stmt,context){stmt.condition.visitExpression(this,context);this.visitAllStatements(stmt.trueCase,context);this.visitAllStatements(stmt.falseCase,context);return stmt;};RecursiveAstVisitor.prototype.visitTryCatchStmt=function(stmt,context){this.visitAllStatements(stmt.bodyStmts,context);this.visitAllStatements(stmt.catchStmts,context);return stmt;};RecursiveAstVisitor.prototype.visitThrowStmt=function(stmt,context){stmt.error.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitCommentStmt=function(stmt,context){return stmt;};RecursiveAstVisitor.prototype.visitJSDocCommentStmt=function(stmt,context){return stmt;};RecursiveAstVisitor.prototype.visitAllStatements=function(stmts,context){var _this=this;stmts.forEach(function(stmt){return stmt.visitStatement(_this,context);});};return RecursiveAstVisitor;}();function findReadVarNames(stmts){var visitor=new _ReadVarVisitor();visitor.visitAllStatements(stmts,null);return visitor.varNames;}var _ReadVarVisitor=/** @class */function(_super){(0,_tslib.__extends)(_ReadVarVisitor,_super);function _ReadVarVisitor(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.varNames=new Set();return _this;}_ReadVarVisitor.prototype.visitDeclareFunctionStmt=function(stmt,context){// Don't descend into nested functions
return stmt;};_ReadVarVisitor.prototype.visitDeclareClassStmt=function(stmt,context){// Don't descend into nested classes
return stmt;};_ReadVarVisitor.prototype.visitReadVarExpr=function(ast,context){if(ast.name){this.varNames.add(ast.name);}return null;};return _ReadVarVisitor;}(RecursiveAstVisitor$1);function collectExternalReferences(stmts){var visitor=new _FindExternalReferencesVisitor();visitor.visitAllStatements(stmts,null);return visitor.externalReferences;}var _FindExternalReferencesVisitor=/** @class */function(_super){(0,_tslib.__extends)(_FindExternalReferencesVisitor,_super);function _FindExternalReferencesVisitor(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.externalReferences=[];return _this;}_FindExternalReferencesVisitor.prototype.visitExternalExpr=function(e,context){this.externalReferences.push(e.value);return _super.prototype.visitExternalExpr.call(this,e,context);};return _FindExternalReferencesVisitor;}(RecursiveAstVisitor$1);function applySourceSpanToStatementIfNeeded(stmt,sourceSpan){if(!sourceSpan){return stmt;}var transformer=new _ApplySourceSpanTransformer(sourceSpan);return stmt.visitStatement(transformer,null);}function applySourceSpanToExpressionIfNeeded(expr,sourceSpan){if(!sourceSpan){return expr;}var transformer=new _ApplySourceSpanTransformer(sourceSpan);return expr.visitExpression(transformer,null);}var _ApplySourceSpanTransformer=/** @class */function(_super){(0,_tslib.__extends)(_ApplySourceSpanTransformer,_super);function _ApplySourceSpanTransformer(sourceSpan){var _this=_super.call(this)||this;_this.sourceSpan=sourceSpan;return _this;}_ApplySourceSpanTransformer.prototype._clone=function(obj){var clone=Object.create(obj.constructor.prototype);for(var prop in obj){clone[prop]=obj[prop];}return clone;};_ApplySourceSpanTransformer.prototype.transformExpr=function(expr,context){if(!expr.sourceSpan){expr=this._clone(expr);expr.sourceSpan=this.sourceSpan;}return expr;};_ApplySourceSpanTransformer.prototype.transformStmt=function(stmt,context){if(!stmt.sourceSpan){stmt=this._clone(stmt);stmt.sourceSpan=this.sourceSpan;}return stmt;};return _ApplySourceSpanTransformer;}(AstTransformer$1);function variable(name,type,sourceSpan){return new ReadVarExpr(name,type,sourceSpan);}function importExpr(id,typeParams,sourceSpan){if(typeParams===void 0){typeParams=null;}return new ExternalExpr(id,null,typeParams,sourceSpan);}function importType(id,typeParams,typeModifiers){if(typeParams===void 0){typeParams=null;}if(typeModifiers===void 0){typeModifiers=null;}return id!=null?expressionType(importExpr(id,typeParams,null),typeModifiers):null;}function expressionType(expr,typeModifiers){if(typeModifiers===void 0){typeModifiers=null;}return new ExpressionType(expr,typeModifiers);}function literalArr(values,type,sourceSpan){return new LiteralArrayExpr(values,type,sourceSpan);}function literalMap(values,type){if(type===void 0){type=null;}return new LiteralMapExpr(values.map(function(e){return new LiteralMapEntry(e.key,e.value,e.quoted);}),type,null);}function not(expr,sourceSpan){return new NotExpr(expr,sourceSpan);}function assertNotNull(expr,sourceSpan){return new AssertNotNull(expr,sourceSpan);}function fn(params,body,type,sourceSpan,name){return new FunctionExpr(params,body,type,sourceSpan,name);}function ifStmt(condition,thenClause,elseClause){return new IfStmt(condition,thenClause,elseClause);}function literal(value,type,sourceSpan){return new LiteralExpr(value,type,sourceSpan);}function isNull(exp){return exp instanceof LiteralExpr&&exp.value===null;}/*
 * Serializes a `Tag` into a string.
 * Returns a string like " @foo {bar} baz" (note the leading whitespace before `@foo`).
 */function tagToString(tag){var out='';if(tag.tagName){out+=" @"+tag.tagName;}if(tag.text){if(tag.text.match(/\/\*|\*\//)){throw new Error('JSDoc text cannot contain "/*" and "*/"');}out+=' '+tag.text.replace(/@/g,'\\@');}return out;}function serializeTags(tags){if(tags.length===0)return'';var out='*\n';try{for(var tags_1=(0,_tslib.__values)(tags),tags_1_1=tags_1.next();!tags_1_1.done;tags_1_1=tags_1.next()){var tag=tags_1_1.value;out+=' *';// If the tagToString is multi-line, insert " * " prefixes on subsequent lines.
out+=tagToString(tag).replace(/\n/g,'\n * ');out+='\n';}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(tags_1_1&&!tags_1_1.done&&(_a=tags_1.return))_a.call(tags_1);}finally{if(e_1)throw e_1.error;}}out+=' ';return out;var e_1,_a;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var QUOTED_KEYS='$quoted$';function convertValueToOutputAst(ctx,value,type){if(type===void 0){type=null;}return visitValue(value,new _ValueOutputAstTransformer(ctx),type);}var _ValueOutputAstTransformer=/** @class */function(){function _ValueOutputAstTransformer(ctx){this.ctx=ctx;}_ValueOutputAstTransformer.prototype.visitArray=function(arr,type){var _this=this;return literalArr(arr.map(function(value){return visitValue(value,_this,null);}),type);};_ValueOutputAstTransformer.prototype.visitStringMap=function(map,type){var _this=this;var entries=[];var quotedSet=new Set(map&&map[QUOTED_KEYS]);Object.keys(map).forEach(function(key){entries.push(new LiteralMapEntry(key,visitValue(map[key],_this,null),quotedSet.has(key)));});return new LiteralMapExpr(entries,type);};_ValueOutputAstTransformer.prototype.visitPrimitive=function(value,type){return literal(value,type);};_ValueOutputAstTransformer.prototype.visitOther=function(value,type){if(value instanceof Expression){return value;}else{return this.ctx.importExpr(value);}};return _ValueOutputAstTransformer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function mapEntry(key,value){return{key:key,value:value,quoted:false};}var InjectableCompiler=/** @class */function(){function InjectableCompiler(reflector,alwaysGenerateDef){this.reflector=reflector;this.alwaysGenerateDef=alwaysGenerateDef;this.tokenInjector=reflector.resolveExternalReference(Identifiers.Injector);}InjectableCompiler.prototype.depsArray=function(deps,ctx){var _this=this;return deps.map(function(dep){var token=dep;var args=[token];var flags=0;if(Array.isArray(dep)){for(var i=0;i<dep.length;i++){var v=dep[i];if(v){if(v.ngMetadataName==='Optional'){flags|=8/* Optional */;}else if(v.ngMetadataName==='SkipSelf'){flags|=4/* SkipSelf */;}else if(v.ngMetadataName==='Self'){flags|=2/* Self */;}else if(v.ngMetadataName==='Inject'){token=v.token;}else{token=v;}}}}var tokenExpr;if(typeof token==='string'){tokenExpr=literal(token);}else if(token===_this.tokenInjector){tokenExpr=importExpr(Identifiers.INJECTOR);}else{tokenExpr=ctx.importExpr(token);}if(flags!==0/* Default */){args=[tokenExpr,literal(flags)];}else{args=[tokenExpr];}return importExpr(Identifiers.inject).callFn(args);});};InjectableCompiler.prototype.factoryFor=function(injectable,ctx){var retValue;if(injectable.useExisting){retValue=importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);}else if(injectable.useFactory){var deps=injectable.deps||[];if(deps.length>0){retValue=ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps,ctx));}else{return ctx.importExpr(injectable.useFactory);}}else if(injectable.useValue){retValue=convertValueToOutputAst(ctx,injectable.useValue);}else{var clazz=injectable.useClass||injectable.symbol;var depArgs=this.depsArray(this.reflector.parameters(clazz),ctx);retValue=new InstantiateExpr(ctx.importExpr(clazz),depArgs);}return fn([],[new ReturnStatement(retValue)],undefined,undefined,injectable.symbol.name+'_Factory');};InjectableCompiler.prototype.injectableDef=function(injectable,ctx){var providedIn=NULL_EXPR;if(injectable.providedIn!==undefined){if(injectable.providedIn===null){providedIn=NULL_EXPR;}else if(typeof injectable.providedIn==='string'){providedIn=literal(injectable.providedIn);}else{providedIn=ctx.importExpr(injectable.providedIn);}}var def=[mapEntry('factory',this.factoryFor(injectable,ctx)),mapEntry('token',ctx.importExpr(injectable.type.reference)),mapEntry('providedIn',providedIn)];return importExpr(Identifiers.defineInjectable).callFn([literalMap(def)]);};InjectableCompiler.prototype.compile=function(injectable,ctx){if(this.alwaysGenerateDef||injectable.providedIn!==undefined){var className=identifierName(injectable.type);var clazz=new ClassStmt(className,null,[new ClassField('ngInjectableDef',INFERRED_TYPE,[StmtModifier.Static],this.injectableDef(injectable,ctx))],[],new ClassMethod(null,[],[]),[]);ctx.statements.push(clazz);}};return InjectableCompiler;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var STRIP_SRC_FILE_SUFFIXES=/(\.ts|\.d\.ts|\.js|\.jsx|\.tsx)$/;var GENERATED_FILE=/\.ngfactory\.|\.ngsummary\./;var JIT_SUMMARY_FILE=/\.ngsummary\./;var JIT_SUMMARY_NAME=/NgSummary$/;function ngfactoryFilePath(filePath,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}var urlWithSuffix=splitTypescriptSuffix(filePath,forceSourceFile);return urlWithSuffix[0]+".ngfactory"+normalizeGenFileSuffix(urlWithSuffix[1]);}function stripGeneratedFileSuffix(filePath){return filePath.replace(GENERATED_FILE,'.');}function isGeneratedFile(filePath){return GENERATED_FILE.test(filePath);}function splitTypescriptSuffix(path,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}if(path.endsWith('.d.ts')){return[path.slice(0,-5),forceSourceFile?'.ts':'.d.ts'];}var lastDot=path.lastIndexOf('.');if(lastDot!==-1){return[path.substring(0,lastDot),path.substring(lastDot)];}return[path,''];}function normalizeGenFileSuffix(srcFileSuffix){return srcFileSuffix==='.tsx'?'.ts':srcFileSuffix;}function summaryFileName(fileName){var fileNameWithoutSuffix=fileName.replace(STRIP_SRC_FILE_SUFFIXES,'');return fileNameWithoutSuffix+".ngsummary.json";}function summaryForJitFileName(fileName,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}var urlWithSuffix=splitTypescriptSuffix(stripGeneratedFileSuffix(fileName),forceSourceFile);return urlWithSuffix[0]+".ngsummary"+urlWithSuffix[1];}function stripSummaryForJitFileSuffix(filePath){return filePath.replace(JIT_SUMMARY_FILE,'.');}function summaryForJitName(symbolName){return symbolName+"NgSummary";}function stripSummaryForJitNameSuffix(symbolName){return symbolName.replace(JIT_SUMMARY_NAME,'');}var LOWERED_SYMBOL=/\u0275\d+/;function isLoweredSymbol(name){return LOWERED_SYMBOL.test(name);}function createLoweredSymbol(id){return"\u0275"+id;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var LifecycleHooks;(function(LifecycleHooks){LifecycleHooks[LifecycleHooks["OnInit"]=0]="OnInit";LifecycleHooks[LifecycleHooks["OnDestroy"]=1]="OnDestroy";LifecycleHooks[LifecycleHooks["DoCheck"]=2]="DoCheck";LifecycleHooks[LifecycleHooks["OnChanges"]=3]="OnChanges";LifecycleHooks[LifecycleHooks["AfterContentInit"]=4]="AfterContentInit";LifecycleHooks[LifecycleHooks["AfterContentChecked"]=5]="AfterContentChecked";LifecycleHooks[LifecycleHooks["AfterViewInit"]=6]="AfterViewInit";LifecycleHooks[LifecycleHooks["AfterViewChecked"]=7]="AfterViewChecked";})(LifecycleHooks||(LifecycleHooks={}));var LIFECYCLE_HOOKS_VALUES=[LifecycleHooks.OnInit,LifecycleHooks.OnDestroy,LifecycleHooks.DoCheck,LifecycleHooks.OnChanges,LifecycleHooks.AfterContentInit,LifecycleHooks.AfterContentChecked,LifecycleHooks.AfterViewInit,LifecycleHooks.AfterViewChecked];function hasLifecycleHook(reflector,hook,token){return reflector.hasLifecycleHook(token,getHookName(hook));}function getAllLifecycleHooks(reflector,token){return LIFECYCLE_HOOKS_VALUES.filter(function(hook){return hasLifecycleHook(reflector,hook,token);});}function getHookName(hook){switch(hook){case LifecycleHooks.OnInit:return'ngOnInit';case LifecycleHooks.OnDestroy:return'ngOnDestroy';case LifecycleHooks.DoCheck:return'ngDoCheck';case LifecycleHooks.OnChanges:return'ngOnChanges';case LifecycleHooks.AfterContentInit:return'ngAfterContentInit';case LifecycleHooks.AfterContentChecked:return'ngAfterContentChecked';case LifecycleHooks.AfterViewInit:return'ngAfterViewInit';case LifecycleHooks.AfterViewChecked:return'ngAfterViewChecked';}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _SELECTOR_REGEXP=new RegExp('(\\:not\\()|'+//":not("
'([-\\w]+)|'+// "tag"
'(?:\\.([-\\w]+))|'+// ".class"
// "-" should appear first in the regexp below as FF31 parses "[.-\w]" as a range
'(?:\\[([-.\\w*]+)(?:=([\"\']?)([^\\]\"\']*)\\5)?\\])|'+// "[name]", "[name=value]",
// "[name="value"]",
// "[name='value']"
'(\\))|'+// ")"
'(\\s*,\\s*)',// ","
'g');/**
 * A css selector contains an element name,
 * css classes and attribute/value pairs with the purpose
 * of selecting subsets out of them.
 */var CssSelector=/** @class */function(){function CssSelector(){this.element=null;this.classNames=[];/**
         * The selectors are encoded in pairs where:
         * - even locations are attribute names
         * - odd locations are attribute values.
         *
         * Example:
         * Selector: `[key1=value1][key2]` would parse to:
         * ```
         * ['key1', 'value1', 'key2', '']
         * ```
         */this.attrs=[];this.notSelectors=[];}CssSelector.parse=function(selector){var results=[];var _addResult=function _addResult(res,cssSel){if(cssSel.notSelectors.length>0&&!cssSel.element&&cssSel.classNames.length==0&&cssSel.attrs.length==0){cssSel.element='*';}res.push(cssSel);};var cssSelector=new CssSelector();var match;var current=cssSelector;var inNot=false;_SELECTOR_REGEXP.lastIndex=0;while(match=_SELECTOR_REGEXP.exec(selector)){if(match[1]){if(inNot){throw new Error('Nesting :not is not allowed in a selector');}inNot=true;current=new CssSelector();cssSelector.notSelectors.push(current);}if(match[2]){current.setElement(match[2]);}if(match[3]){current.addClassName(match[3]);}if(match[4]){current.addAttribute(match[4],match[6]);}if(match[7]){inNot=false;current=cssSelector;}if(match[8]){if(inNot){throw new Error('Multiple selectors in :not are not supported');}_addResult(results,cssSelector);cssSelector=current=new CssSelector();}}_addResult(results,cssSelector);return results;};CssSelector.prototype.isElementSelector=function(){return this.hasElementSelector()&&this.classNames.length==0&&this.attrs.length==0&&this.notSelectors.length===0;};CssSelector.prototype.hasElementSelector=function(){return!!this.element;};CssSelector.prototype.setElement=function(element){if(element===void 0){element=null;}this.element=element;};/** Gets a template string for an element that matches the selector. */CssSelector.prototype.getMatchingElementTemplate=function(){var tagName=this.element||'div';var classAttr=this.classNames.length>0?" class=\""+this.classNames.join(' ')+"\"":'';var attrs='';for(var i=0;i<this.attrs.length;i+=2){var attrName=this.attrs[i];var attrValue=this.attrs[i+1]!==''?"=\""+this.attrs[i+1]+"\"":'';attrs+=" "+attrName+attrValue;}return getHtmlTagDefinition(tagName).isVoid?"<"+tagName+classAttr+attrs+"/>":"<"+tagName+classAttr+attrs+"></"+tagName+">";};CssSelector.prototype.getAttrs=function(){var result=[];if(this.classNames.length>0){result.push('class',this.classNames.join(' '));}return result.concat(this.attrs);};CssSelector.prototype.addAttribute=function(name,value){if(value===void 0){value='';}this.attrs.push(name,value&&value.toLowerCase()||'');};CssSelector.prototype.addClassName=function(name){this.classNames.push(name.toLowerCase());};CssSelector.prototype.toString=function(){var res=this.element||'';if(this.classNames){this.classNames.forEach(function(klass){return res+="."+klass;});}if(this.attrs){for(var i=0;i<this.attrs.length;i+=2){var name_1=this.attrs[i];var value=this.attrs[i+1];res+="["+name_1+(value?'='+value:'')+"]";}}this.notSelectors.forEach(function(notSelector){return res+=":not("+notSelector+")";});return res;};return CssSelector;}();/**
 * Reads a list of CssSelectors and allows to calculate which ones
 * are contained in a given CssSelector.
 */exports.CssSelector=CssSelector;var SelectorMatcher=/** @class */function(){function SelectorMatcher(){this._elementMap=new Map();this._elementPartialMap=new Map();this._classMap=new Map();this._classPartialMap=new Map();this._attrValueMap=new Map();this._attrValuePartialMap=new Map();this._listContexts=[];}SelectorMatcher.createNotMatcher=function(notSelectors){var notMatcher=new SelectorMatcher();notMatcher.addSelectables(notSelectors,null);return notMatcher;};SelectorMatcher.prototype.addSelectables=function(cssSelectors,callbackCtxt){var listContext=null;if(cssSelectors.length>1){listContext=new SelectorListContext(cssSelectors);this._listContexts.push(listContext);}for(var i=0;i<cssSelectors.length;i++){this._addSelectable(cssSelectors[i],callbackCtxt,listContext);}};/**
     * Add an object that can be found later on by calling `match`.
     * @param cssSelector A css selector
     * @param callbackCtxt An opaque object that will be given to the callback of the `match` function
     */SelectorMatcher.prototype._addSelectable=function(cssSelector,callbackCtxt,listContext){var matcher=this;var element=cssSelector.element;var classNames=cssSelector.classNames;var attrs=cssSelector.attrs;var selectable=new SelectorContext(cssSelector,callbackCtxt,listContext);if(element){var isTerminal=attrs.length===0&&classNames.length===0;if(isTerminal){this._addTerminal(matcher._elementMap,element,selectable);}else{matcher=this._addPartial(matcher._elementPartialMap,element);}}if(classNames){for(var i=0;i<classNames.length;i++){var isTerminal=attrs.length===0&&i===classNames.length-1;var className=classNames[i];if(isTerminal){this._addTerminal(matcher._classMap,className,selectable);}else{matcher=this._addPartial(matcher._classPartialMap,className);}}}if(attrs){for(var i=0;i<attrs.length;i+=2){var isTerminal=i===attrs.length-2;var name_2=attrs[i];var value=attrs[i+1];if(isTerminal){var terminalMap=matcher._attrValueMap;var terminalValuesMap=terminalMap.get(name_2);if(!terminalValuesMap){terminalValuesMap=new Map();terminalMap.set(name_2,terminalValuesMap);}this._addTerminal(terminalValuesMap,value,selectable);}else{var partialMap=matcher._attrValuePartialMap;var partialValuesMap=partialMap.get(name_2);if(!partialValuesMap){partialValuesMap=new Map();partialMap.set(name_2,partialValuesMap);}matcher=this._addPartial(partialValuesMap,value);}}}};SelectorMatcher.prototype._addTerminal=function(map,name,selectable){var terminalList=map.get(name);if(!terminalList){terminalList=[];map.set(name,terminalList);}terminalList.push(selectable);};SelectorMatcher.prototype._addPartial=function(map,name){var matcher=map.get(name);if(!matcher){matcher=new SelectorMatcher();map.set(name,matcher);}return matcher;};/**
     * Find the objects that have been added via `addSelectable`
     * whose css selector is contained in the given css selector.
     * @param cssSelector A css selector
     * @param matchedCallback This callback will be called with the object handed into `addSelectable`
     * @return boolean true if a match was found
    */SelectorMatcher.prototype.match=function(cssSelector,matchedCallback){var result=false;var element=cssSelector.element;var classNames=cssSelector.classNames;var attrs=cssSelector.attrs;for(var i=0;i<this._listContexts.length;i++){this._listContexts[i].alreadyMatched=false;}result=this._matchTerminal(this._elementMap,element,cssSelector,matchedCallback)||result;result=this._matchPartial(this._elementPartialMap,element,cssSelector,matchedCallback)||result;if(classNames){for(var i=0;i<classNames.length;i++){var className=classNames[i];result=this._matchTerminal(this._classMap,className,cssSelector,matchedCallback)||result;result=this._matchPartial(this._classPartialMap,className,cssSelector,matchedCallback)||result;}}if(attrs){for(var i=0;i<attrs.length;i+=2){var name_3=attrs[i];var value=attrs[i+1];var terminalValuesMap=this._attrValueMap.get(name_3);if(value){result=this._matchTerminal(terminalValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchTerminal(terminalValuesMap,value,cssSelector,matchedCallback)||result;var partialValuesMap=this._attrValuePartialMap.get(name_3);if(value){result=this._matchPartial(partialValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchPartial(partialValuesMap,value,cssSelector,matchedCallback)||result;}}return result;};/** @internal */SelectorMatcher.prototype._matchTerminal=function(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var selectables=map.get(name)||[];var starSelectables=map.get('*');if(starSelectables){selectables=selectables.concat(starSelectables);}if(selectables.length===0){return false;}var selectable;var result=false;for(var i=0;i<selectables.length;i++){selectable=selectables[i];result=selectable.finalize(cssSelector,matchedCallback)||result;}return result;};/** @internal */SelectorMatcher.prototype._matchPartial=function(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var nestedSelector=map.get(name);if(!nestedSelector){return false;}// TODO(perf): get rid of recursion and measure again
// TODO(perf): don't pass the whole selector into the recursion,
// but only the not processed parts
return nestedSelector.match(cssSelector,matchedCallback);};return SelectorMatcher;}();exports.SelectorMatcher=SelectorMatcher;var SelectorListContext=/** @class */function(){function SelectorListContext(selectors){this.selectors=selectors;this.alreadyMatched=false;}return SelectorListContext;}();// Store context to pass back selector and context when a selector is matched
exports.SelectorListContext=SelectorListContext;var SelectorContext=/** @class */function(){function SelectorContext(selector,cbContext,listContext){this.selector=selector;this.cbContext=cbContext;this.listContext=listContext;this.notSelectors=selector.notSelectors;}SelectorContext.prototype.finalize=function(cssSelector,callback){var result=true;if(this.notSelectors.length>0&&(!this.listContext||!this.listContext.alreadyMatched)){var notMatcher=SelectorMatcher.createNotMatcher(this.notSelectors);result=!notMatcher.match(cssSelector,null);}if(result&&callback&&(!this.listContext||!this.listContext.alreadyMatched)){if(this.listContext){this.listContext.alreadyMatched=true;}callback(this.selector,this.cbContext);}return result;};return SelectorContext;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.SelectorContext=SelectorContext;var ERROR_COMPONENT_TYPE='ngComponentType';// Design notes:
// - don't lazily create metadata:
//   For some metadata, we need to do async work sometimes,
//   so the user has to kick off this loading.
//   But we want to report errors even when the async work is
//   not required to check that the user would have been able
//   to wait correctly.
exports.ERROR_COMPONENT_TYPE=ERROR_COMPONENT_TYPE;var CompileMetadataResolver=/** @class */function(){function CompileMetadataResolver(_config,_htmlParser,_ngModuleResolver,_directiveResolver,_pipeResolver,_summaryResolver,_schemaRegistry,_directiveNormalizer,_console,_staticSymbolCache,_reflector,_errorCollector){this._config=_config;this._htmlParser=_htmlParser;this._ngModuleResolver=_ngModuleResolver;this._directiveResolver=_directiveResolver;this._pipeResolver=_pipeResolver;this._summaryResolver=_summaryResolver;this._schemaRegistry=_schemaRegistry;this._directiveNormalizer=_directiveNormalizer;this._console=_console;this._staticSymbolCache=_staticSymbolCache;this._reflector=_reflector;this._errorCollector=_errorCollector;this._nonNormalizedDirectiveCache=new Map();this._directiveCache=new Map();this._summaryCache=new Map();this._pipeCache=new Map();this._ngModuleCache=new Map();this._ngModuleOfTypes=new Map();this._shallowModuleCache=new Map();}CompileMetadataResolver.prototype.getReflector=function(){return this._reflector;};CompileMetadataResolver.prototype.clearCacheFor=function(type){var dirMeta=this._directiveCache.get(type);this._directiveCache.delete(type);this._nonNormalizedDirectiveCache.delete(type);this._summaryCache.delete(type);this._pipeCache.delete(type);this._ngModuleOfTypes.delete(type);// Clear all of the NgModule as they contain transitive information!
this._ngModuleCache.clear();if(dirMeta){this._directiveNormalizer.clearCacheFor(dirMeta);}};CompileMetadataResolver.prototype.clearCache=function(){this._directiveCache.clear();this._nonNormalizedDirectiveCache.clear();this._summaryCache.clear();this._pipeCache.clear();this._ngModuleCache.clear();this._ngModuleOfTypes.clear();this._directiveNormalizer.clearCache();};CompileMetadataResolver.prototype._createProxyClass=function(baseType,name){var delegate=null;var proxyClass=function proxyClass(){if(!delegate){throw new Error("Illegal state: Class "+name+" for type "+stringify(baseType)+" is not compiled yet!");}return delegate.apply(this,arguments);};proxyClass.setDelegate=function(d){delegate=d;proxyClass.prototype=d.prototype;};// Make stringify work correctly
proxyClass.overriddenName=name;return proxyClass;};CompileMetadataResolver.prototype.getGeneratedClass=function(dirType,name){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),name);}else{return this._createProxyClass(dirType,name);}};CompileMetadataResolver.prototype.getComponentViewClass=function(dirType){return this.getGeneratedClass(dirType,viewClassName(dirType,0));};CompileMetadataResolver.prototype.getHostComponentViewClass=function(dirType){return this.getGeneratedClass(dirType,hostViewClassName(dirType));};CompileMetadataResolver.prototype.getHostComponentType=function(dirType){var name=identifierName({reference:dirType})+"_Host";if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(dirType.filePath,name);}else{var HostClass=function HostClass(){};HostClass.overriddenName=name;return HostClass;}};CompileMetadataResolver.prototype.getRendererType=function(dirType){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),rendererTypeName(dirType));}else{// returning an object as proxy,
// that we fill later during runtime compilation.
return{};}};CompileMetadataResolver.prototype.getComponentFactory=function(selector,dirType,inputs,outputs){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),componentFactoryName(dirType));}else{var hostView=this.getHostComponentViewClass(dirType);// Note: ngContentSelectors will be filled later once the template is
// loaded.
var createComponentFactory=this._reflector.resolveExternalReference(Identifiers.createComponentFactory);return createComponentFactory(selector,dirType,hostView,inputs,outputs,[]);}};CompileMetadataResolver.prototype.initComponentFactory=function(factory,ngContentSelectors){if(!(factory instanceof StaticSymbol)){(_a=factory.ngContentSelectors).push.apply(_a,(0,_tslib.__spread)(ngContentSelectors));}var _a;};CompileMetadataResolver.prototype._loadSummary=function(type,kind){var typeSummary=this._summaryCache.get(type);if(!typeSummary){var summary=this._summaryResolver.resolveSummary(type);typeSummary=summary?summary.type:null;this._summaryCache.set(type,typeSummary||null);}return typeSummary&&typeSummary.summaryKind===kind?typeSummary:null;};CompileMetadataResolver.prototype.getHostComponentMetadata=function(compMeta,hostViewType){var hostType=this.getHostComponentType(compMeta.type.reference);if(!hostViewType){hostViewType=this.getHostComponentViewClass(hostType);}// Note: ! is ok here as this method should only be called with normalized directive
// metadata, which always fills in the selector.
var template=CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();var templateUrl='';var htmlAst=this._htmlParser.parse(template,templateUrl);return CompileDirectiveMetadata.create({isHost:true,type:{reference:hostType,diDeps:[],lifecycleHooks:[]},template:new CompileTemplateMetadata({encapsulation:ViewEncapsulation.None,template:template,templateUrl:templateUrl,htmlAst:htmlAst,styles:[],styleUrls:[],ngContentSelectors:[],animations:[],isInline:true,externalStylesheets:[],interpolation:null,preserveWhitespaces:false}),exportAs:null,changeDetection:ChangeDetectionStrategy.Default,inputs:[],outputs:[],host:{},isComponent:true,selector:'*',providers:[],viewProviders:[],queries:[],guards:{},viewQueries:[],componentViewType:hostViewType,rendererType:{id:'__Host__',encapsulation:ViewEncapsulation.None,styles:[],data:{}},entryComponents:[],componentFactory:null});};CompileMetadataResolver.prototype.loadDirectiveMetadata=function(ngModuleType,directiveType,isSync){var _this=this;if(this._directiveCache.has(directiveType)){return null;}directiveType=resolveForwardRef(directiveType);var _a=this.getNonNormalizedDirectiveMetadata(directiveType),annotation=_a.annotation,metadata=_a.metadata;var createDirectiveMetadata=function createDirectiveMetadata(templateMetadata){var normalizedDirMeta=new CompileDirectiveMetadata({isHost:false,type:metadata.type,isComponent:metadata.isComponent,selector:metadata.selector,exportAs:metadata.exportAs,changeDetection:metadata.changeDetection,inputs:metadata.inputs,outputs:metadata.outputs,hostListeners:metadata.hostListeners,hostProperties:metadata.hostProperties,hostAttributes:metadata.hostAttributes,providers:metadata.providers,viewProviders:metadata.viewProviders,queries:metadata.queries,guards:metadata.guards,viewQueries:metadata.viewQueries,entryComponents:metadata.entryComponents,componentViewType:metadata.componentViewType,rendererType:metadata.rendererType,componentFactory:metadata.componentFactory,template:templateMetadata});if(templateMetadata){_this.initComponentFactory(metadata.componentFactory,templateMetadata.ngContentSelectors);}_this._directiveCache.set(directiveType,normalizedDirMeta);_this._summaryCache.set(directiveType,normalizedDirMeta.toSummary());return null;};if(metadata.isComponent){var template=metadata.template;var templateMeta=this._directiveNormalizer.normalizeTemplate({ngModuleType:ngModuleType,componentType:directiveType,moduleUrl:this._reflector.componentModuleUrl(directiveType,annotation),encapsulation:template.encapsulation,template:template.template,templateUrl:template.templateUrl,styles:template.styles,styleUrls:template.styleUrls,animations:template.animations,interpolation:template.interpolation,preserveWhitespaces:template.preserveWhitespaces});if(isPromise(templateMeta)&&isSync){this._reportError(componentStillLoadingError(directiveType),directiveType);return null;}return SyncAsync.then(templateMeta,createDirectiveMetadata);}else{// directive
createDirectiveMetadata(null);return null;}};CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata=function(directiveType){var _this=this;directiveType=resolveForwardRef(directiveType);if(!directiveType){return null;}var cacheEntry=this._nonNormalizedDirectiveCache.get(directiveType);if(cacheEntry){return cacheEntry;}var dirMeta=this._directiveResolver.resolve(directiveType,false);if(!dirMeta){return null;}var nonNormalizedTemplateMetadata=undefined;if(createComponent.isTypeOf(dirMeta)){// component
var compMeta=dirMeta;assertArrayOfStrings('styles',compMeta.styles);assertArrayOfStrings('styleUrls',compMeta.styleUrls);assertInterpolationSymbols('interpolation',compMeta.interpolation);var animations=compMeta.animations;nonNormalizedTemplateMetadata=new CompileTemplateMetadata({encapsulation:noUndefined(compMeta.encapsulation),template:noUndefined(compMeta.template),templateUrl:noUndefined(compMeta.templateUrl),htmlAst:null,styles:compMeta.styles||[],styleUrls:compMeta.styleUrls||[],animations:animations||[],interpolation:noUndefined(compMeta.interpolation),isInline:!!compMeta.template,externalStylesheets:[],ngContentSelectors:[],preserveWhitespaces:noUndefined(dirMeta.preserveWhitespaces)});}var changeDetectionStrategy=null;var viewProviders=[];var entryComponentMetadata=[];var selector=dirMeta.selector;if(createComponent.isTypeOf(dirMeta)){// Component
var compMeta=dirMeta;changeDetectionStrategy=compMeta.changeDetection;if(compMeta.viewProviders){viewProviders=this._getProvidersMetadata(compMeta.viewProviders,entryComponentMetadata,"viewProviders for \""+stringifyType(directiveType)+"\"",[],directiveType);}if(compMeta.entryComponents){entryComponentMetadata=flattenAndDedupeArray(compMeta.entryComponents).map(function(type){return _this._getEntryComponentMetadata(type);}).concat(entryComponentMetadata);}if(!selector){selector=this._schemaRegistry.getDefaultComponentElementName();}}else{// Directive
if(!selector){this._reportError(syntaxError("Directive "+stringifyType(directiveType)+" has no selector, please add it!"),directiveType);selector='error';}}var providers=[];if(dirMeta.providers!=null){providers=this._getProvidersMetadata(dirMeta.providers,entryComponentMetadata,"providers for \""+stringifyType(directiveType)+"\"",[],directiveType);}var queries=[];var viewQueries=[];if(dirMeta.queries!=null){queries=this._getQueriesMetadata(dirMeta.queries,false,directiveType);viewQueries=this._getQueriesMetadata(dirMeta.queries,true,directiveType);}var metadata=CompileDirectiveMetadata.create({isHost:false,selector:selector,exportAs:noUndefined(dirMeta.exportAs),isComponent:!!nonNormalizedTemplateMetadata,type:this._getTypeMetadata(directiveType),template:nonNormalizedTemplateMetadata,changeDetection:changeDetectionStrategy,inputs:dirMeta.inputs||[],outputs:dirMeta.outputs||[],host:dirMeta.host||{},providers:providers||[],viewProviders:viewProviders||[],queries:queries||[],guards:dirMeta.guards||{},viewQueries:viewQueries||[],entryComponents:entryComponentMetadata,componentViewType:nonNormalizedTemplateMetadata?this.getComponentViewClass(directiveType):null,rendererType:nonNormalizedTemplateMetadata?this.getRendererType(directiveType):null,componentFactory:null});if(nonNormalizedTemplateMetadata){metadata.componentFactory=this.getComponentFactory(selector,directiveType,metadata.inputs,metadata.outputs);}cacheEntry={metadata:metadata,annotation:dirMeta};this._nonNormalizedDirectiveCache.set(directiveType,cacheEntry);return cacheEntry;};/**
     * Gets the metadata for the given directive.
     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
     */CompileMetadataResolver.prototype.getDirectiveMetadata=function(directiveType){var dirMeta=this._directiveCache.get(directiveType);if(!dirMeta){this._reportError(syntaxError("Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive "+stringifyType(directiveType)+"."),directiveType);}return dirMeta;};CompileMetadataResolver.prototype.getDirectiveSummary=function(dirType){var dirSummary=this._loadSummary(dirType,CompileSummaryKind.Directive);if(!dirSummary){this._reportError(syntaxError("Illegal state: Could not load the summary for directive "+stringifyType(dirType)+"."),dirType);}return dirSummary;};CompileMetadataResolver.prototype.isDirective=function(type){return!!this._loadSummary(type,CompileSummaryKind.Directive)||this._directiveResolver.isDirective(type);};CompileMetadataResolver.prototype.isPipe=function(type){return!!this._loadSummary(type,CompileSummaryKind.Pipe)||this._pipeResolver.isPipe(type);};CompileMetadataResolver.prototype.isNgModule=function(type){return!!this._loadSummary(type,CompileSummaryKind.NgModule)||this._ngModuleResolver.isNgModule(type);};CompileMetadataResolver.prototype.getNgModuleSummary=function(moduleType,alreadyCollecting){if(alreadyCollecting===void 0){alreadyCollecting=null;}var moduleSummary=this._loadSummary(moduleType,CompileSummaryKind.NgModule);if(!moduleSummary){var moduleMeta=this.getNgModuleMetadata(moduleType,false,alreadyCollecting);moduleSummary=moduleMeta?moduleMeta.toSummary():null;if(moduleSummary){this._summaryCache.set(moduleType,moduleSummary);}}return moduleSummary;};/**
     * Loads the declared directives and pipes of an NgModule.
     */CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata=function(moduleType,isSync,throwIfNotFound){var _this=this;if(throwIfNotFound===void 0){throwIfNotFound=true;}var ngModule=this.getNgModuleMetadata(moduleType,throwIfNotFound);var loading=[];if(ngModule){ngModule.declaredDirectives.forEach(function(id){var promise=_this.loadDirectiveMetadata(moduleType,id.reference,isSync);if(promise){loading.push(promise);}});ngModule.declaredPipes.forEach(function(id){return _this._loadPipeMetadata(id.reference);});}return Promise.all(loading);};CompileMetadataResolver.prototype.getShallowModuleMetadata=function(moduleType){var compileMeta=this._shallowModuleCache.get(moduleType);if(compileMeta){return compileMeta;}var ngModuleMeta=findLast(this._reflector.shallowAnnotations(moduleType),createNgModule.isTypeOf);compileMeta={type:this._getTypeMetadata(moduleType),rawExports:ngModuleMeta.exports,rawImports:ngModuleMeta.imports,rawProviders:ngModuleMeta.providers};this._shallowModuleCache.set(moduleType,compileMeta);return compileMeta;};CompileMetadataResolver.prototype.getNgModuleMetadata=function(moduleType,throwIfNotFound,alreadyCollecting){var _this=this;if(throwIfNotFound===void 0){throwIfNotFound=true;}if(alreadyCollecting===void 0){alreadyCollecting=null;}moduleType=resolveForwardRef(moduleType);var compileMeta=this._ngModuleCache.get(moduleType);if(compileMeta){return compileMeta;}var meta=this._ngModuleResolver.resolve(moduleType,throwIfNotFound);if(!meta){return null;}var declaredDirectives=[];var exportedNonModuleIdentifiers=[];var declaredPipes=[];var importedModules=[];var exportedModules=[];var providers=[];var entryComponents=[];var bootstrapComponents=[];var schemas=[];if(meta.imports){flattenAndDedupeArray(meta.imports).forEach(function(importedType){var importedModuleType=undefined;if(isValidType(importedType)){importedModuleType=importedType;}else if(importedType&&importedType.ngModule){var moduleWithProviders=importedType;importedModuleType=moduleWithProviders.ngModule;if(moduleWithProviders.providers){providers.push.apply(providers,(0,_tslib.__spread)(_this._getProvidersMetadata(moduleWithProviders.providers,entryComponents,"provider for the NgModule '"+stringifyType(importedModuleType)+"'",[],importedType)));}}if(importedModuleType){if(_this._checkSelfImport(moduleType,importedModuleType))return;if(!alreadyCollecting)alreadyCollecting=new Set();if(alreadyCollecting.has(importedModuleType)){_this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType)+" '"+stringifyType(importedType)+"' is imported recursively by the module '"+stringifyType(moduleType)+"'."),moduleType);return;}alreadyCollecting.add(importedModuleType);var importedModuleSummary=_this.getNgModuleSummary(importedModuleType,alreadyCollecting);alreadyCollecting.delete(importedModuleType);if(!importedModuleSummary){_this._reportError(syntaxError("Unexpected "+_this._getTypeDescriptor(importedType)+" '"+stringifyType(importedType)+"' imported by the module '"+stringifyType(moduleType)+"'. Please add a @NgModule annotation."),moduleType);return;}importedModules.push(importedModuleSummary);}else{_this._reportError(syntaxError("Unexpected value '"+stringifyType(importedType)+"' imported by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}});}if(meta.exports){flattenAndDedupeArray(meta.exports).forEach(function(exportedType){if(!isValidType(exportedType)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(exportedType)+"' exported by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}if(!alreadyCollecting)alreadyCollecting=new Set();if(alreadyCollecting.has(exportedType)){_this._reportError(syntaxError(_this._getTypeDescriptor(exportedType)+" '"+stringify(exportedType)+"' is exported recursively by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}alreadyCollecting.add(exportedType);var exportedModuleSummary=_this.getNgModuleSummary(exportedType,alreadyCollecting);alreadyCollecting.delete(exportedType);if(exportedModuleSummary){exportedModules.push(exportedModuleSummary);}else{exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));}});}// Note: This will be modified later, so we rely on
// getting a new instance every time!
var transitiveModule=this._getTransitiveNgModuleMetadata(importedModules,exportedModules);if(meta.declarations){flattenAndDedupeArray(meta.declarations).forEach(function(declaredType){if(!isValidType(declaredType)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(declaredType)+"' declared by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}var declaredIdentifier=_this._getIdentifierMetadata(declaredType);if(_this.isDirective(declaredType)){transitiveModule.addDirective(declaredIdentifier);declaredDirectives.push(declaredIdentifier);_this._addTypeToModule(declaredType,moduleType);}else if(_this.isPipe(declaredType)){transitiveModule.addPipe(declaredIdentifier);transitiveModule.pipes.push(declaredIdentifier);declaredPipes.push(declaredIdentifier);_this._addTypeToModule(declaredType,moduleType);}else{_this._reportError(syntaxError("Unexpected "+_this._getTypeDescriptor(declaredType)+" '"+stringifyType(declaredType)+"' declared by the module '"+stringifyType(moduleType)+"'. Please add a @Pipe/@Directive/@Component annotation."),moduleType);return;}});}var exportedDirectives=[];var exportedPipes=[];exportedNonModuleIdentifiers.forEach(function(exportedId){if(transitiveModule.directivesSet.has(exportedId.reference)){exportedDirectives.push(exportedId);transitiveModule.addExportedDirective(exportedId);}else if(transitiveModule.pipesSet.has(exportedId.reference)){exportedPipes.push(exportedId);transitiveModule.addExportedPipe(exportedId);}else{_this._reportError(syntaxError("Can't export "+_this._getTypeDescriptor(exportedId.reference)+" "+stringifyType(exportedId.reference)+" from "+stringifyType(moduleType)+" as it was neither declared nor imported!"),moduleType);return;}});// The providers of the module have to go last
// so that they overwrite any other provider we already added.
if(meta.providers){providers.push.apply(providers,(0,_tslib.__spread)(this._getProvidersMetadata(meta.providers,entryComponents,"provider for the NgModule '"+stringifyType(moduleType)+"'",[],moduleType)));}if(meta.entryComponents){entryComponents.push.apply(entryComponents,(0,_tslib.__spread)(flattenAndDedupeArray(meta.entryComponents).map(function(type){return _this._getEntryComponentMetadata(type);})));}if(meta.bootstrap){flattenAndDedupeArray(meta.bootstrap).forEach(function(type){if(!isValidType(type)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(type)+"' used in the bootstrap property of module '"+stringifyType(moduleType)+"'"),moduleType);return;}bootstrapComponents.push(_this._getIdentifierMetadata(type));});}entryComponents.push.apply(entryComponents,(0,_tslib.__spread)(bootstrapComponents.map(function(type){return _this._getEntryComponentMetadata(type.reference);})));if(meta.schemas){schemas.push.apply(schemas,(0,_tslib.__spread)(flattenAndDedupeArray(meta.schemas)));}compileMeta=new CompileNgModuleMetadata({type:this._getTypeMetadata(moduleType),providers:providers,entryComponents:entryComponents,bootstrapComponents:bootstrapComponents,schemas:schemas,declaredDirectives:declaredDirectives,exportedDirectives:exportedDirectives,declaredPipes:declaredPipes,exportedPipes:exportedPipes,importedModules:importedModules,exportedModules:exportedModules,transitiveModule:transitiveModule,id:meta.id||null});entryComponents.forEach(function(id){return transitiveModule.addEntryComponent(id);});providers.forEach(function(provider){return transitiveModule.addProvider(provider,compileMeta.type);});transitiveModule.addModule(compileMeta.type);this._ngModuleCache.set(moduleType,compileMeta);return compileMeta;};CompileMetadataResolver.prototype._checkSelfImport=function(moduleType,importedModuleType){if(moduleType===importedModuleType){this._reportError(syntaxError("'"+stringifyType(moduleType)+"' module can't import itself"),moduleType);return true;}return false;};CompileMetadataResolver.prototype._getTypeDescriptor=function(type){if(isValidType(type)){if(this.isDirective(type)){return'directive';}if(this.isPipe(type)){return'pipe';}if(this.isNgModule(type)){return'module';}}if(type.provide){return'provider';}return'value';};CompileMetadataResolver.prototype._addTypeToModule=function(type,moduleType){var oldModule=this._ngModuleOfTypes.get(type);if(oldModule&&oldModule!==moduleType){this._reportError(syntaxError("Type "+stringifyType(type)+" is part of the declarations of 2 modules: "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+"! "+("Please consider moving "+stringifyType(type)+" to a higher module that imports "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+". ")+("You can also create a new NgModule that exports and includes "+stringifyType(type)+" then import that NgModule in "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+".")),moduleType);return;}this._ngModuleOfTypes.set(type,moduleType);};CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata=function(importedModules,exportedModules){// collect `providers` / `entryComponents` from all imported and all exported modules
var result=new TransitiveCompileNgModuleMetadata();var modulesByToken=new Map();importedModules.concat(exportedModules).forEach(function(modSummary){modSummary.modules.forEach(function(mod){return result.addModule(mod);});modSummary.entryComponents.forEach(function(comp){return result.addEntryComponent(comp);});var addedTokens=new Set();modSummary.providers.forEach(function(entry){var tokenRef=tokenReference(entry.provider.token);var prevModules=modulesByToken.get(tokenRef);if(!prevModules){prevModules=new Set();modulesByToken.set(tokenRef,prevModules);}var moduleRef=entry.module.reference;// Note: the providers of one module may still contain multiple providers
// per token (e.g. for multi providers), and we need to preserve these.
if(addedTokens.has(tokenRef)||!prevModules.has(moduleRef)){prevModules.add(moduleRef);addedTokens.add(tokenRef);result.addProvider(entry.provider,entry.module);}});});exportedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addExportedDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addExportedPipe(id);});});importedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addPipe(id);});});return result;};CompileMetadataResolver.prototype._getIdentifierMetadata=function(type){type=resolveForwardRef(type);return{reference:type};};CompileMetadataResolver.prototype.isInjectable=function(type){var annotations=this._reflector.tryAnnotations(type);return annotations.some(function(ann){return createInjectable.isTypeOf(ann);});};CompileMetadataResolver.prototype.getInjectableSummary=function(type){return{summaryKind:CompileSummaryKind.Injectable,type:this._getTypeMetadata(type,null,false)};};CompileMetadataResolver.prototype.getInjectableMetadata=function(type,dependencies,throwOnUnknownDeps){if(dependencies===void 0){dependencies=null;}if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var typeSummary=this._loadSummary(type,CompileSummaryKind.Injectable);var typeMetadata=typeSummary?typeSummary.type:this._getTypeMetadata(type,dependencies,throwOnUnknownDeps);var annotations=this._reflector.annotations(type).filter(function(ann){return createInjectable.isTypeOf(ann);});if(annotations.length===0){return null;}var meta=annotations[annotations.length-1];return{symbol:type,type:typeMetadata,providedIn:meta.providedIn,useValue:meta.useValue,useClass:meta.useClass,useExisting:meta.useExisting,useFactory:meta.useFactory,deps:meta.deps};};CompileMetadataResolver.prototype._getTypeMetadata=function(type,dependencies,throwOnUnknownDeps){if(dependencies===void 0){dependencies=null;}if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var identifier=this._getIdentifierMetadata(type);return{reference:identifier.reference,diDeps:this._getDependenciesMetadata(identifier.reference,dependencies,throwOnUnknownDeps),lifecycleHooks:getAllLifecycleHooks(this._reflector,identifier.reference)};};CompileMetadataResolver.prototype._getFactoryMetadata=function(factory,dependencies){if(dependencies===void 0){dependencies=null;}factory=resolveForwardRef(factory);return{reference:factory,diDeps:this._getDependenciesMetadata(factory,dependencies)};};/**
     * Gets the metadata for the given pipe.
     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
     */CompileMetadataResolver.prototype.getPipeMetadata=function(pipeType){var pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){this._reportError(syntaxError("Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe "+stringifyType(pipeType)+"."),pipeType);}return pipeMeta||null;};CompileMetadataResolver.prototype.getPipeSummary=function(pipeType){var pipeSummary=this._loadSummary(pipeType,CompileSummaryKind.Pipe);if(!pipeSummary){this._reportError(syntaxError("Illegal state: Could not load the summary for pipe "+stringifyType(pipeType)+"."),pipeType);}return pipeSummary;};CompileMetadataResolver.prototype.getOrLoadPipeMetadata=function(pipeType){var pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){pipeMeta=this._loadPipeMetadata(pipeType);}return pipeMeta;};CompileMetadataResolver.prototype._loadPipeMetadata=function(pipeType){pipeType=resolveForwardRef(pipeType);var pipeAnnotation=this._pipeResolver.resolve(pipeType);var pipeMeta=new CompilePipeMetadata({type:this._getTypeMetadata(pipeType),name:pipeAnnotation.name,pure:!!pipeAnnotation.pure});this._pipeCache.set(pipeType,pipeMeta);this._summaryCache.set(pipeType,pipeMeta.toSummary());return pipeMeta;};CompileMetadataResolver.prototype._getDependenciesMetadata=function(typeOrFunc,dependencies,throwOnUnknownDeps){var _this=this;if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var hasUnknownDeps=false;var params=dependencies||this._reflector.parameters(typeOrFunc)||[];var dependenciesMetadata=params.map(function(param){var isAttribute=false;var isHost=false;var isSelf=false;var isSkipSelf=false;var isOptional=false;var token=null;if(Array.isArray(param)){param.forEach(function(paramEntry){if(createHost.isTypeOf(paramEntry)){isHost=true;}else if(createSelf.isTypeOf(paramEntry)){isSelf=true;}else if(createSkipSelf.isTypeOf(paramEntry)){isSkipSelf=true;}else if(createOptional.isTypeOf(paramEntry)){isOptional=true;}else if(createAttribute.isTypeOf(paramEntry)){isAttribute=true;token=paramEntry.attributeName;}else if(createInject.isTypeOf(paramEntry)){token=paramEntry.token;}else if(createInjectionToken.isTypeOf(paramEntry)||paramEntry instanceof StaticSymbol){token=paramEntry;}else if(isValidType(paramEntry)&&token==null){token=paramEntry;}});}else{token=param;}if(token==null){hasUnknownDeps=true;return null;}return{isAttribute:isAttribute,isHost:isHost,isSelf:isSelf,isSkipSelf:isSkipSelf,isOptional:isOptional,token:_this._getTokenMetadata(token)};});if(hasUnknownDeps){var depsTokens=dependenciesMetadata.map(function(dep){return dep?stringifyType(dep.token):'?';}).join(', ');var message="Can't resolve all parameters for "+stringifyType(typeOrFunc)+": ("+depsTokens+").";if(throwOnUnknownDeps||this._config.strictInjectionParameters){this._reportError(syntaxError(message),typeOrFunc);}else{this._console.warn("Warning: "+message+" This will become an error in Angular v6.x");}}return dependenciesMetadata;};CompileMetadataResolver.prototype._getTokenMetadata=function(token){token=resolveForwardRef(token);var compileToken;if(typeof token==='string'){compileToken={value:token};}else{compileToken={identifier:{reference:token}};}return compileToken;};CompileMetadataResolver.prototype._getProvidersMetadata=function(providers,targetEntryComponents,debugInfo,compileProviders,type){var _this=this;if(compileProviders===void 0){compileProviders=[];}providers.forEach(function(provider,providerIdx){if(Array.isArray(provider)){_this._getProvidersMetadata(provider,targetEntryComponents,debugInfo,compileProviders);}else{provider=resolveForwardRef(provider);var providerMeta=undefined;if(provider&&_typeof(provider)==='object'&&provider.hasOwnProperty('provide')){_this._validateProvider(provider);providerMeta=new ProviderMeta(provider.provide,provider);}else if(isValidType(provider)){providerMeta=new ProviderMeta(provider,{useClass:provider});}else if(provider===void 0){_this._reportError(syntaxError("Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files."));return;}else{var providersInfo=providers.reduce(function(soFar,seenProvider,seenProviderIdx){if(seenProviderIdx<providerIdx){soFar.push(""+stringifyType(seenProvider));}else if(seenProviderIdx==providerIdx){soFar.push("?"+stringifyType(seenProvider)+"?");}else if(seenProviderIdx==providerIdx+1){soFar.push('...');}return soFar;},[]).join(', ');_this._reportError(syntaxError("Invalid "+(debugInfo?debugInfo:'provider')+" - only instances of Provider and Type are allowed, got: ["+providersInfo+"]"),type);return;}if(providerMeta.token===_this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)){targetEntryComponents.push.apply(targetEntryComponents,(0,_tslib.__spread)(_this._getEntryComponentsFromProvider(providerMeta,type)));}else{compileProviders.push(_this.getProviderMetadata(providerMeta));}}});return compileProviders;};CompileMetadataResolver.prototype._validateProvider=function(provider){if(provider.hasOwnProperty('useClass')&&provider.useClass==null){this._reportError(syntaxError("Invalid provider for "+stringifyType(provider.provide)+". useClass cannot be "+provider.useClass+".\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case."));}};CompileMetadataResolver.prototype._getEntryComponentsFromProvider=function(provider,type){var _this=this;var components=[];var collectedIdentifiers=[];if(provider.useFactory||provider.useExisting||provider.useClass){this._reportError(syntaxError("The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!"),type);return[];}if(!provider.multi){this._reportError(syntaxError("The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!"),type);return[];}extractIdentifiers(provider.useValue,collectedIdentifiers);collectedIdentifiers.forEach(function(identifier){var entry=_this._getEntryComponentMetadata(identifier.reference,false);if(entry){components.push(entry);}});return components;};CompileMetadataResolver.prototype._getEntryComponentMetadata=function(dirType,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var dirMeta=this.getNonNormalizedDirectiveMetadata(dirType);if(dirMeta&&dirMeta.metadata.isComponent){return{componentType:dirType,componentFactory:dirMeta.metadata.componentFactory};}var dirSummary=this._loadSummary(dirType,CompileSummaryKind.Directive);if(dirSummary&&dirSummary.isComponent){return{componentType:dirType,componentFactory:dirSummary.componentFactory};}if(throwIfNotFound){throw syntaxError(dirType.name+" cannot be used as an entry component.");}return null;};CompileMetadataResolver.prototype._getInjectableTypeMetadata=function(type,dependencies){if(dependencies===void 0){dependencies=null;}var typeSummary=this._loadSummary(type,CompileSummaryKind.Injectable);if(typeSummary){return typeSummary.type;}return this._getTypeMetadata(type,dependencies);};CompileMetadataResolver.prototype.getProviderMetadata=function(provider){var compileDeps=undefined;var compileTypeMetadata=null;var compileFactoryMetadata=null;var token=this._getTokenMetadata(provider.token);if(provider.useClass){compileTypeMetadata=this._getInjectableTypeMetadata(provider.useClass,provider.dependencies);compileDeps=compileTypeMetadata.diDeps;if(provider.token===provider.useClass){// use the compileTypeMetadata as it contains information about lifecycleHooks...
token={identifier:compileTypeMetadata};}}else if(provider.useFactory){compileFactoryMetadata=this._getFactoryMetadata(provider.useFactory,provider.dependencies);compileDeps=compileFactoryMetadata.diDeps;}return{token:token,useClass:compileTypeMetadata,useValue:provider.useValue,useFactory:compileFactoryMetadata,useExisting:provider.useExisting?this._getTokenMetadata(provider.useExisting):undefined,deps:compileDeps,multi:provider.multi};};CompileMetadataResolver.prototype._getQueriesMetadata=function(queries,isViewQuery,directiveType){var _this=this;var res=[];Object.keys(queries).forEach(function(propertyName){var query=queries[propertyName];if(query.isViewQuery===isViewQuery){res.push(_this._getQueryMetadata(query,propertyName,directiveType));}});return res;};CompileMetadataResolver.prototype._queryVarBindings=function(selector){return selector.split(/\s*,\s*/);};CompileMetadataResolver.prototype._getQueryMetadata=function(q,propertyName,typeOrFunc){var _this=this;var selectors;if(typeof q.selector==='string'){selectors=this._queryVarBindings(q.selector).map(function(varName){return _this._getTokenMetadata(varName);});}else{if(!q.selector){this._reportError(syntaxError("Can't construct a query for the property \""+propertyName+"\" of \""+stringifyType(typeOrFunc)+"\" since the query selector wasn't defined."),typeOrFunc);selectors=[];}else{selectors=[this._getTokenMetadata(q.selector)];}}return{selectors:selectors,first:q.first,descendants:q.descendants,propertyName:propertyName,read:q.read?this._getTokenMetadata(q.read):null};};CompileMetadataResolver.prototype._reportError=function(error$$1,type,otherType){if(this._errorCollector){this._errorCollector(error$$1,type);if(otherType){this._errorCollector(error$$1,otherType);}}else{throw error$$1;}};return CompileMetadataResolver;}();exports.CompileMetadataResolver=CompileMetadataResolver;function flattenArray(tree,out){if(out===void 0){out=[];}if(tree){for(var i=0;i<tree.length;i++){var item=resolveForwardRef(tree[i]);if(Array.isArray(item)){flattenArray(item,out);}else{out.push(item);}}}return out;}function dedupeArray(array){if(array){return Array.from(new Set(array));}return[];}function flattenAndDedupeArray(tree){return dedupeArray(flattenArray(tree));}function isValidType(value){return value instanceof StaticSymbol||value instanceof Type;}function extractIdentifiers(value,targetIdentifiers){visitValue(value,new _CompileValueConverter(),targetIdentifiers);}var _CompileValueConverter=/** @class */function(_super){(0,_tslib.__extends)(_CompileValueConverter,_super);function _CompileValueConverter(){return _super!==null&&_super.apply(this,arguments)||this;}_CompileValueConverter.prototype.visitOther=function(value,targetIdentifiers){targetIdentifiers.push({reference:value});};return _CompileValueConverter;}(ValueTransformer);function stringifyType(type){if(type instanceof StaticSymbol){return type.name+" in "+type.filePath;}else{return stringify(type);}}/**
 * Indicates that a component is still being loaded in a synchronous compile.
 */function componentStillLoadingError(compType){var error$$1=Error("Can't compile synchronously as "+stringify(compType)+" is still being loaded!");error$$1[ERROR_COMPONENT_TYPE]=compType;return error$$1;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ProviderError=/** @class */function(_super){(0,_tslib.__extends)(ProviderError,_super);function ProviderError(message,span){return _super.call(this,span,message)||this;}return ProviderError;}(ParseError);var ProviderViewContext=/** @class */function(){function ProviderViewContext(reflector,component){var _this=this;this.reflector=reflector;this.component=component;this.errors=[];this.viewQueries=_getViewQueries(component);this.viewProviders=new Map();component.viewProviders.forEach(function(provider){if(_this.viewProviders.get(tokenReference(provider.token))==null){_this.viewProviders.set(tokenReference(provider.token),true);}});}return ProviderViewContext;}();var ProviderElementContext=/** @class */function(){function ProviderElementContext(viewContext,_parent,_isViewRoot,_directiveAsts,attrs,refs,isTemplate,contentQueryStartId,_sourceSpan){var _this=this;this.viewContext=viewContext;this._parent=_parent;this._isViewRoot=_isViewRoot;this._directiveAsts=_directiveAsts;this._sourceSpan=_sourceSpan;this._transformedProviders=new Map();this._seenProviders=new Map();this._queriedTokens=new Map();this.transformedHasViewContainer=false;this._attrs={};attrs.forEach(function(attrAst){return _this._attrs[attrAst.name]=attrAst.value;});var directivesMeta=_directiveAsts.map(function(directiveAst){return directiveAst.directive;});this._allProviders=_resolveProvidersFromDirectives(directivesMeta,_sourceSpan,viewContext.errors);this._contentQueries=_getContentQueries(contentQueryStartId,directivesMeta);Array.from(this._allProviders.values()).forEach(function(provider){_this._addQueryReadsTo(provider.token,provider.token,_this._queriedTokens);});if(isTemplate){var templateRefId=createTokenForExternalReference(this.viewContext.reflector,Identifiers.TemplateRef);this._addQueryReadsTo(templateRefId,templateRefId,this._queriedTokens);}refs.forEach(function(refAst){var defaultQueryValue=refAst.value||createTokenForExternalReference(_this.viewContext.reflector,Identifiers.ElementRef);_this._addQueryReadsTo({value:refAst.name},defaultQueryValue,_this._queriedTokens);});if(this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))){this.transformedHasViewContainer=true;}// create the providers that we know are eager first
Array.from(this._allProviders.values()).forEach(function(provider){var eager=provider.eager||_this._queriedTokens.get(tokenReference(provider.token));if(eager){_this._getOrCreateLocalProvider(provider.providerType,provider.token,true);}});}ProviderElementContext.prototype.afterElement=function(){var _this=this;// collect lazy providers
Array.from(this._allProviders.values()).forEach(function(provider){_this._getOrCreateLocalProvider(provider.providerType,provider.token,false);});};Object.defineProperty(ProviderElementContext.prototype,"transformProviders",{get:function get(){// Note: Maps keep their insertion order.
var lazyProviders=[];var eagerProviders=[];this._transformedProviders.forEach(function(provider){if(provider.eager){eagerProviders.push(provider);}else{lazyProviders.push(provider);}});return lazyProviders.concat(eagerProviders);},enumerable:true,configurable:true});Object.defineProperty(ProviderElementContext.prototype,"transformedDirectiveAsts",{get:function get(){var sortedProviderTypes=this.transformProviders.map(function(provider){return provider.token.identifier;});var sortedDirectives=this._directiveAsts.slice();sortedDirectives.sort(function(dir1,dir2){return sortedProviderTypes.indexOf(dir1.directive.type)-sortedProviderTypes.indexOf(dir2.directive.type);});return sortedDirectives;},enumerable:true,configurable:true});Object.defineProperty(ProviderElementContext.prototype,"queryMatches",{get:function get(){var allMatches=[];this._queriedTokens.forEach(function(matches){allMatches.push.apply(allMatches,(0,_tslib.__spread)(matches));});return allMatches;},enumerable:true,configurable:true});ProviderElementContext.prototype._addQueryReadsTo=function(token,defaultValue,queryReadTokens){this._getQueriesFor(token).forEach(function(query){var queryValue=query.meta.read||defaultValue;var tokenRef=tokenReference(queryValue);var queryMatches=queryReadTokens.get(tokenRef);if(!queryMatches){queryMatches=[];queryReadTokens.set(tokenRef,queryMatches);}queryMatches.push({queryId:query.queryId,value:queryValue});});};ProviderElementContext.prototype._getQueriesFor=function(token){var result=[];var currentEl=this;var distance=0;var queries;while(currentEl!==null){queries=currentEl._contentQueries.get(tokenReference(token));if(queries){result.push.apply(result,(0,_tslib.__spread)(queries.filter(function(query){return query.meta.descendants||distance<=1;})));}if(currentEl._directiveAsts.length>0){distance++;}currentEl=currentEl._parent;}queries=this.viewContext.viewQueries.get(tokenReference(token));if(queries){result.push.apply(result,(0,_tslib.__spread)(queries));}return result;};ProviderElementContext.prototype._getOrCreateLocalProvider=function(requestingProviderType,token,eager){var _this=this;var resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider||(requestingProviderType===ProviderAstType.Directive||requestingProviderType===ProviderAstType.PublicService)&&resolvedProvider.providerType===ProviderAstType.PrivateService||(requestingProviderType===ProviderAstType.PrivateService||requestingProviderType===ProviderAstType.PublicService)&&resolvedProvider.providerType===ProviderAstType.Builtin){return null;}var transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(this._seenProviders.get(tokenReference(token))!=null){this.viewContext.errors.push(new ProviderError("Cannot instantiate cyclic dependency! "+tokenName(token),this._sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var transformedProviders=resolvedProvider.providers.map(function(provider){var transformedUseValue=provider.useValue;var transformedUseExisting=provider.useExisting;var transformedDeps=undefined;if(provider.useExisting!=null){var existingDiDep=_this._getDependency(resolvedProvider.providerType,{token:provider.useExisting},eager);if(existingDiDep.token!=null){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(resolvedProvider.providerType,dep,eager);});}else if(provider.useClass){var deps=provider.deps||provider.useClass.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(resolvedProvider.providerType,dep,eager);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;};ProviderElementContext.prototype._getLocalDependency=function(requestingProviderType,dep,eager){if(eager===void 0){eager=false;}if(dep.isAttribute){var attrValue=this._attrs[dep.token.value];return{isValue:true,value:attrValue==null?null:attrValue};}if(dep.token!=null){// access builtints
if(requestingProviderType===ProviderAstType.Directive||requestingProviderType===ProviderAstType.Component){if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)){return dep;}if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)){this.transformedHasViewContainer=true;}}// access the injector
if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)){return dep;}// access providers
if(this._getOrCreateLocalProvider(requestingProviderType,dep.token,eager)!=null){return dep;}}return null;};ProviderElementContext.prototype._getDependency=function(requestingProviderType,dep,eager){if(eager===void 0){eager=false;}var currElement=this;var currEager=eager;var result=null;if(!dep.isSkipSelf){result=this._getLocalDependency(requestingProviderType,dep,eager);}if(dep.isSelf){if(!result&&dep.isOptional){result={isValue:true,value:null};}}else{// check parent elements
while(!result&&currElement._parent){var prevElement=currElement;currElement=currElement._parent;if(prevElement._isViewRoot){currEager=false;}result=currElement._getLocalDependency(ProviderAstType.PublicService,dep,currEager);}// check @Host restriction
if(!result){if(!dep.isHost||this.viewContext.component.isHost||this.viewContext.component.type.reference===tokenReference(dep.token)||this.viewContext.viewProviders.get(tokenReference(dep.token))!=null){result=dep;}else{result=dep.isOptional?{isValue:true,value:null}:null;}}}if(!result){this.viewContext.errors.push(new ProviderError("No provider for "+tokenName(dep.token),this._sourceSpan));}return result;};return ProviderElementContext;}();var NgModuleProviderAnalyzer=/** @class */function(){function NgModuleProviderAnalyzer(reflector,ngModule,extraProviders,sourceSpan){var _this=this;this.reflector=reflector;this._transformedProviders=new Map();this._seenProviders=new Map();this._errors=[];this._allProviders=new Map();ngModule.transitiveModule.modules.forEach(function(ngModuleType){var ngModuleProvider={token:{identifier:ngModuleType},useClass:ngModuleType};_resolveProviders([ngModuleProvider],ProviderAstType.PublicService,true,sourceSpan,_this._errors,_this._allProviders,/* isModule */true);});_resolveProviders(ngModule.transitiveModule.providers.map(function(entry){return entry.provider;}).concat(extraProviders),ProviderAstType.PublicService,false,sourceSpan,this._errors,this._allProviders,/* isModule */false);}NgModuleProviderAnalyzer.prototype.parse=function(){var _this=this;Array.from(this._allProviders.values()).forEach(function(provider){_this._getOrCreateLocalProvider(provider.token,provider.eager);});if(this._errors.length>0){var errorString=this._errors.join('\n');throw new Error("Provider parse errors:\n"+errorString);}// Note: Maps keep their insertion order.
var lazyProviders=[];var eagerProviders=[];this._transformedProviders.forEach(function(provider){if(provider.eager){eagerProviders.push(provider);}else{lazyProviders.push(provider);}});return lazyProviders.concat(eagerProviders);};NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider=function(token,eager){var _this=this;var resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider){return null;}var transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(this._seenProviders.get(tokenReference(token))!=null){this._errors.push(new ProviderError("Cannot instantiate cyclic dependency! "+tokenName(token),resolvedProvider.sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var transformedProviders=resolvedProvider.providers.map(function(provider){var transformedUseValue=provider.useValue;var transformedUseExisting=provider.useExisting;var transformedDeps=undefined;if(provider.useExisting!=null){var existingDiDep=_this._getDependency({token:provider.useExisting},eager,resolvedProvider.sourceSpan);if(existingDiDep.token!=null){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(dep,eager,resolvedProvider.sourceSpan);});}else if(provider.useClass){var deps=provider.deps||provider.useClass.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(dep,eager,resolvedProvider.sourceSpan);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;};NgModuleProviderAnalyzer.prototype._getDependency=function(dep,eager,requestorSourceSpan){if(eager===void 0){eager=false;}if(!dep.isSkipSelf&&dep.token!=null){// access the injector
if(tokenReference(dep.token)===this.reflector.resolveExternalReference(Identifiers.Injector)||tokenReference(dep.token)===this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)){// access providers
}else if(this._getOrCreateLocalProvider(dep.token,eager)!=null){}}return dep;};return NgModuleProviderAnalyzer;}();function _transformProvider(provider,_a){var useExisting=_a.useExisting,useValue=_a.useValue,deps=_a.deps;return{token:provider.token,useClass:provider.useClass,useExisting:useExisting,useFactory:provider.useFactory,useValue:useValue,deps:deps,multi:provider.multi};}function _transformProviderAst(provider,_a){var eager=_a.eager,providers=_a.providers;return new ProviderAst(provider.token,provider.multiProvider,provider.eager||eager,providers,provider.providerType,provider.lifecycleHooks,provider.sourceSpan,provider.isModule);}function _resolveProvidersFromDirectives(directives,sourceSpan,targetErrors){var providersByToken=new Map();directives.forEach(function(directive){var dirProvider={token:{identifier:directive.type},useClass:directive.type};_resolveProviders([dirProvider],directive.isComponent?ProviderAstType.Component:ProviderAstType.Directive,true,sourceSpan,targetErrors,providersByToken,/* isModule */false);});// Note: directives need to be able to overwrite providers of a component!
var directivesWithComponentFirst=directives.filter(function(dir){return dir.isComponent;}).concat(directives.filter(function(dir){return!dir.isComponent;}));directivesWithComponentFirst.forEach(function(directive){_resolveProviders(directive.providers,ProviderAstType.PublicService,false,sourceSpan,targetErrors,providersByToken,/* isModule */false);_resolveProviders(directive.viewProviders,ProviderAstType.PrivateService,false,sourceSpan,targetErrors,providersByToken,/* isModule */false);});return providersByToken;}function _resolveProviders(providers,providerType,eager,sourceSpan,targetErrors,targetProvidersByToken,isModule){providers.forEach(function(provider){var resolvedProvider=targetProvidersByToken.get(tokenReference(provider.token));if(resolvedProvider!=null&&!!resolvedProvider.multiProvider!==!!provider.multi){targetErrors.push(new ProviderError("Mixing multi and non multi provider is not possible for token "+tokenName(resolvedProvider.token),sourceSpan));}if(!resolvedProvider){var lifecycleHooks=provider.token.identifier&&provider.token.identifier.lifecycleHooks?provider.token.identifier.lifecycleHooks:[];var isUseValue=!(provider.useClass||provider.useExisting||provider.useFactory);resolvedProvider=new ProviderAst(provider.token,!!provider.multi,eager||isUseValue,[provider],providerType,lifecycleHooks,sourceSpan,isModule);targetProvidersByToken.set(tokenReference(provider.token),resolvedProvider);}else{if(!provider.multi){resolvedProvider.providers.length=0;}resolvedProvider.providers.push(provider);}});}function _getViewQueries(component){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var viewQueryId=1;var viewQueries=new Map();if(component.viewQueries){component.viewQueries.forEach(function(query){return _addQueryToTokenMap(viewQueries,{meta:query,queryId:viewQueryId++});});}return viewQueries;}function _getContentQueries(contentQueryStartId,directives){var contentQueryId=contentQueryStartId;var contentQueries=new Map();directives.forEach(function(directive,directiveIndex){if(directive.queries){directive.queries.forEach(function(query){return _addQueryToTokenMap(contentQueries,{meta:query,queryId:contentQueryId++});});}});return contentQueries;}function _addQueryToTokenMap(map,query){query.meta.selectors.forEach(function(token){var entry=map.get(tokenReference(token));if(!entry){entry=[];map.set(tokenReference(token),entry);}entry.push(query);});}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function providerDef(ctx,providerAst){var flags=0;if(!providerAst.eager){flags|=4096/* LazyProvider */;}if(providerAst.providerType===ProviderAstType.PrivateService){flags|=8192/* PrivateProvider */;}if(providerAst.isModule){flags|=1073741824/* TypeModuleProvider */;}providerAst.lifecycleHooks.forEach(function(lifecycleHook){// for regular providers, we only support ngOnDestroy
if(lifecycleHook===LifecycleHooks.OnDestroy||providerAst.providerType===ProviderAstType.Directive||providerAst.providerType===ProviderAstType.Component){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var _a=providerAst.multiProvider?multiProviderDef(ctx,flags,providerAst.providers):singleProviderDef(ctx,flags,providerAst.providerType,providerAst.providers[0]),providerExpr=_a.providerExpr,providerFlags=_a.flags,depsExpr=_a.depsExpr;return{providerExpr:providerExpr,flags:providerFlags,depsExpr:depsExpr,tokenExpr:tokenExpr(ctx,providerAst.token)};}function multiProviderDef(ctx,flags,providers){var allDepDefs=[];var allParams=[];var exprs=providers.map(function(provider,providerIndex){var expr;if(provider.useClass){var depExprs=convertDeps(providerIndex,provider.deps||provider.useClass.diDeps);expr=ctx.importExpr(provider.useClass.reference).instantiate(depExprs);}else if(provider.useFactory){var depExprs=convertDeps(providerIndex,provider.deps||provider.useFactory.diDeps);expr=ctx.importExpr(provider.useFactory.reference).callFn(depExprs);}else if(provider.useExisting){var depExprs=convertDeps(providerIndex,[{token:provider.useExisting}]);expr=depExprs[0];}else{expr=convertValueToOutputAst(ctx,provider.useValue);}return expr;});var providerExpr=fn(allParams,[new ReturnStatement(literalArr(exprs))],INFERRED_TYPE);return{providerExpr:providerExpr,flags:flags|1024/* TypeFactoryProvider */,depsExpr:literalArr(allDepDefs)};function convertDeps(providerIndex,deps){return deps.map(function(dep,depIndex){var paramName="p"+providerIndex+"_"+depIndex;allParams.push(new FnParam(paramName,DYNAMIC_TYPE));allDepDefs.push(depDef(ctx,dep));return variable(paramName);});}}function singleProviderDef(ctx,flags,providerType,providerMeta){var providerExpr;var deps;if(providerType===ProviderAstType.Directive||providerType===ProviderAstType.Component){providerExpr=ctx.importExpr(providerMeta.useClass.reference);flags|=16384/* TypeDirective */;deps=providerMeta.deps||providerMeta.useClass.diDeps;}else{if(providerMeta.useClass){providerExpr=ctx.importExpr(providerMeta.useClass.reference);flags|=512/* TypeClassProvider */;deps=providerMeta.deps||providerMeta.useClass.diDeps;}else if(providerMeta.useFactory){providerExpr=ctx.importExpr(providerMeta.useFactory.reference);flags|=1024/* TypeFactoryProvider */;deps=providerMeta.deps||providerMeta.useFactory.diDeps;}else if(providerMeta.useExisting){providerExpr=NULL_EXPR;flags|=2048/* TypeUseExistingProvider */;deps=[{token:providerMeta.useExisting}];}else{providerExpr=convertValueToOutputAst(ctx,providerMeta.useValue);flags|=256/* TypeValueProvider */;deps=[];}}var depsExpr=literalArr(deps.map(function(dep){return depDef(ctx,dep);}));return{providerExpr:providerExpr,flags:flags,depsExpr:depsExpr};}function tokenExpr(ctx,tokenMeta){return tokenMeta.identifier?ctx.importExpr(tokenMeta.identifier.reference):literal(tokenMeta.value);}function depDef(ctx,dep){// Note: the following fields have already been normalized out by provider_analyzer:
// - isAttribute, isHost
var expr=dep.isValue?convertValueToOutputAst(ctx,dep.value):tokenExpr(ctx,dep.token);var flags=0;if(dep.isSkipSelf){flags|=1/* SkipSelf */;}if(dep.isOptional){flags|=2/* Optional */;}if(dep.isSelf){flags|=4/* Self */;}if(dep.isValue){flags|=8/* Value */;}return flags===0/* None */?expr:literalArr([literal(flags),expr]);}function lifecycleHookToNodeFlag(lifecycleHook){var nodeFlag=0;switch(lifecycleHook){case LifecycleHooks.AfterContentChecked:nodeFlag=2097152/* AfterContentChecked */;break;case LifecycleHooks.AfterContentInit:nodeFlag=1048576/* AfterContentInit */;break;case LifecycleHooks.AfterViewChecked:nodeFlag=8388608/* AfterViewChecked */;break;case LifecycleHooks.AfterViewInit:nodeFlag=4194304/* AfterViewInit */;break;case LifecycleHooks.DoCheck:nodeFlag=262144/* DoCheck */;break;case LifecycleHooks.OnChanges:nodeFlag=524288/* OnChanges */;break;case LifecycleHooks.OnDestroy:nodeFlag=131072/* OnDestroy */;break;case LifecycleHooks.OnInit:nodeFlag=65536/* OnInit */;break;}return nodeFlag;}function componentFactoryResolverProviderDef(reflector,ctx,flags,entryComponents){var entryComponentFactories=entryComponents.map(function(entryComponent){return ctx.importExpr(entryComponent.componentFactory);});var token=createTokenForExternalReference(reflector,Identifiers.ComponentFactoryResolver);var classMeta={diDeps:[{isValue:true,value:literalArr(entryComponentFactories)},{token:token,isSkipSelf:true,isOptional:true},{token:createTokenForExternalReference(reflector,Identifiers.NgModuleRef)}],lifecycleHooks:[],reference:reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)};var _a=singleProviderDef(ctx,flags,ProviderAstType.PrivateService,{token:token,multi:false,useClass:classMeta}),providerExpr=_a.providerExpr,providerFlags=_a.flags,depsExpr=_a.depsExpr;return{providerExpr:providerExpr,flags:providerFlags,depsExpr:depsExpr,tokenExpr:tokenExpr(ctx,token)};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var NgModuleCompileResult=/** @class */function(){function NgModuleCompileResult(ngModuleFactoryVar){this.ngModuleFactoryVar=ngModuleFactoryVar;}return NgModuleCompileResult;}();var LOG_VAR=variable('_l');var NgModuleCompiler=/** @class */function(){function NgModuleCompiler(reflector){this.reflector=reflector;}NgModuleCompiler.prototype.compile=function(ctx,ngModuleMeta,extraProviders){var sourceSpan=typeSourceSpan('NgModule',ngModuleMeta.type);var entryComponentFactories=ngModuleMeta.transitiveModule.entryComponents;var bootstrapComponents=ngModuleMeta.bootstrapComponents;var providerParser=new NgModuleProviderAnalyzer(this.reflector,ngModuleMeta,extraProviders,sourceSpan);var providerDefs=[componentFactoryResolverProviderDef(this.reflector,ctx,0/* None */,entryComponentFactories)].concat(providerParser.parse().map(function(provider){return providerDef(ctx,provider);})).map(function(_a){var providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,flags=_a.flags,tokenExpr=_a.tokenExpr;return importExpr(Identifiers.moduleProviderDef).callFn([literal(flags),tokenExpr,providerExpr,depsExpr]);});var ngModuleDef=importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);var ngModuleDefFactory=fn([new FnParam(LOG_VAR.name)],[new ReturnStatement(ngModuleDef)],INFERRED_TYPE);var ngModuleFactoryVar=identifierName(ngModuleMeta.type)+"NgFactory";this._createNgModuleFactory(ctx,ngModuleMeta.type.reference,importExpr(Identifiers.createModuleFactory).callFn([ctx.importExpr(ngModuleMeta.type.reference),literalArr(bootstrapComponents.map(function(id){return ctx.importExpr(id.reference);})),ngModuleDefFactory]));if(ngModuleMeta.id){var id=typeof ngModuleMeta.id==='string'?literal(ngModuleMeta.id):ctx.importExpr(ngModuleMeta.id);var registerFactoryStmt=importExpr(Identifiers.RegisterModuleFactoryFn).callFn([id,variable(ngModuleFactoryVar)]).toStmt();ctx.statements.push(registerFactoryStmt);}return new NgModuleCompileResult(ngModuleFactoryVar);};NgModuleCompiler.prototype.createStub=function(ctx,ngModuleReference){this._createNgModuleFactory(ctx,ngModuleReference,NULL_EXPR);};NgModuleCompiler.prototype._createNgModuleFactory=function(ctx,reference,value){var ngModuleFactoryVar=identifierName({reference:reference})+"NgFactory";var ngModuleFactoryStmt=variable(ngModuleFactoryVar).set(value).toDeclStmt(importType(Identifiers.NgModuleFactory,[expressionType(ctx.importExpr(reference))],[TypeModifier.Const]),[StmtModifier.Final,StmtModifier.Exported]);ctx.statements.push(ngModuleFactoryStmt);};return NgModuleCompiler;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Resolves types to {@link NgModule}.
 */exports.NgModuleCompiler=NgModuleCompiler;var NgModuleResolver=/** @class */function(){function NgModuleResolver(_reflector){this._reflector=_reflector;}NgModuleResolver.prototype.isNgModule=function(type){return this._reflector.annotations(type).some(createNgModule.isTypeOf);};NgModuleResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var ngModuleMeta=findLast(this._reflector.annotations(type),createNgModule.isTypeOf);if(ngModuleMeta){return ngModuleMeta;}else{if(throwIfNotFound){throw new Error("No NgModule metadata found for '"+stringify(type)+"'.");}return null;}};return NgModuleResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit
exports.NgModuleResolver=NgModuleResolver;var VERSION$1=3;var JS_B64_PREFIX='# sourceMappingURL=data:application/json;base64,';var SourceMapGenerator=/** @class */function(){function SourceMapGenerator(file){if(file===void 0){file=null;}this.file=file;this.sourcesContent=new Map();this.lines=[];this.lastCol0=0;this.hasMappings=false;}// The content is `null` when the content is expected to be loaded using the URL
SourceMapGenerator.prototype.addSource=function(url,content){if(content===void 0){content=null;}if(!this.sourcesContent.has(url)){this.sourcesContent.set(url,content);}return this;};SourceMapGenerator.prototype.addLine=function(){this.lines.push([]);this.lastCol0=0;return this;};SourceMapGenerator.prototype.addMapping=function(col0,sourceUrl,sourceLine0,sourceCol0){if(!this.currentLine){throw new Error("A line must be added before mappings can be added");}if(sourceUrl!=null&&!this.sourcesContent.has(sourceUrl)){throw new Error("Unknown source file \""+sourceUrl+"\"");}if(col0==null){throw new Error("The column in the generated code must be provided");}if(col0<this.lastCol0){throw new Error("Mapping should be added in output order");}if(sourceUrl&&(sourceLine0==null||sourceCol0==null)){throw new Error("The source location must be provided when a source url is provided");}this.hasMappings=true;this.lastCol0=col0;this.currentLine.push({col0:col0,sourceUrl:sourceUrl,sourceLine0:sourceLine0,sourceCol0:sourceCol0});return this;};Object.defineProperty(SourceMapGenerator.prototype,"currentLine",{get:function get(){return this.lines.slice(-1)[0];},enumerable:true,configurable:true});SourceMapGenerator.prototype.toJSON=function(){var _this=this;if(!this.hasMappings){return null;}var sourcesIndex=new Map();var sources=[];var sourcesContent=[];Array.from(this.sourcesContent.keys()).forEach(function(url,i){sourcesIndex.set(url,i);sources.push(url);sourcesContent.push(_this.sourcesContent.get(url)||null);});var mappings='';var lastCol0=0;var lastSourceIndex=0;var lastSourceLine0=0;var lastSourceCol0=0;this.lines.forEach(function(segments){lastCol0=0;mappings+=segments.map(function(segment){// zero-based starting column of the line in the generated code
var segAsStr=toBase64VLQ(segment.col0-lastCol0);lastCol0=segment.col0;if(segment.sourceUrl!=null){// zero-based index into the “sources” list
segAsStr+=toBase64VLQ(sourcesIndex.get(segment.sourceUrl)-lastSourceIndex);lastSourceIndex=sourcesIndex.get(segment.sourceUrl);// the zero-based starting line in the original source
segAsStr+=toBase64VLQ(segment.sourceLine0-lastSourceLine0);lastSourceLine0=segment.sourceLine0;// the zero-based starting column in the original source
segAsStr+=toBase64VLQ(segment.sourceCol0-lastSourceCol0);lastSourceCol0=segment.sourceCol0;}return segAsStr;}).join(',');mappings+=';';});mappings=mappings.slice(0,-1);return{'file':this.file||'','version':VERSION$1,'sourceRoot':'','sources':sources,'sourcesContent':sourcesContent,'mappings':mappings};};SourceMapGenerator.prototype.toJsComment=function(){return this.hasMappings?'//'+JS_B64_PREFIX+toBase64String(JSON.stringify(this,null,0)):'';};return SourceMapGenerator;}();function toBase64String(value){var b64='';value=utf8Encode(value);for(var i=0;i<value.length;){var i1=value.charCodeAt(i++);var i2=value.charCodeAt(i++);var i3=value.charCodeAt(i++);b64+=toBase64Digit(i1>>2);b64+=toBase64Digit((i1&3)<<4|(isNaN(i2)?0:i2>>4));b64+=isNaN(i2)?'=':toBase64Digit((i2&15)<<2|i3>>6);b64+=isNaN(i2)||isNaN(i3)?'=':toBase64Digit(i3&63);}return b64;}function toBase64VLQ(value){value=value<0?(-value<<1)+1:value<<1;var out='';do{var digit=value&31;value=value>>5;if(value>0){digit=digit|32;}out+=toBase64Digit(digit);}while(value>0);return out;}var B64_DIGITS='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';function toBase64Digit(value){if(value<0||value>=64){throw new Error("Can only encode value in the range [0, 63]");}return B64_DIGITS[value];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _SINGLE_QUOTE_ESCAPE_STRING_RE=/'|\\|\n|\r|\$/g;var _LEGAL_IDENTIFIER_RE=/^[$A-Z_][0-9A-Z_$]*$/i;var _INDENT_WITH='  ';var CATCH_ERROR_VAR$1=variable('error',null,null);var CATCH_STACK_VAR$1=variable('stack',null,null);var _EmittedLine=/** @class */function(){function _EmittedLine(indent){this.indent=indent;this.partsLength=0;this.parts=[];this.srcSpans=[];}return _EmittedLine;}();var EmitterVisitorContext=/** @class */function(){function EmitterVisitorContext(_indent){this._indent=_indent;this._classes=[];this._preambleLineCount=0;this._lines=[new _EmittedLine(_indent)];}EmitterVisitorContext.createRoot=function(){return new EmitterVisitorContext(0);};Object.defineProperty(EmitterVisitorContext.prototype,"_currentLine",{get:function get(){return this._lines[this._lines.length-1];},enumerable:true,configurable:true});EmitterVisitorContext.prototype.println=function(from,lastPart){if(lastPart===void 0){lastPart='';}this.print(from||null,lastPart,true);};EmitterVisitorContext.prototype.lineIsEmpty=function(){return this._currentLine.parts.length===0;};EmitterVisitorContext.prototype.lineLength=function(){return this._currentLine.indent*_INDENT_WITH.length+this._currentLine.partsLength;};EmitterVisitorContext.prototype.print=function(from,part,newLine){if(newLine===void 0){newLine=false;}if(part.length>0){this._currentLine.parts.push(part);this._currentLine.partsLength+=part.length;this._currentLine.srcSpans.push(from&&from.sourceSpan||null);}if(newLine){this._lines.push(new _EmittedLine(this._indent));}};EmitterVisitorContext.prototype.removeEmptyLastLine=function(){if(this.lineIsEmpty()){this._lines.pop();}};EmitterVisitorContext.prototype.incIndent=function(){this._indent++;if(this.lineIsEmpty()){this._currentLine.indent=this._indent;}};EmitterVisitorContext.prototype.decIndent=function(){this._indent--;if(this.lineIsEmpty()){this._currentLine.indent=this._indent;}};EmitterVisitorContext.prototype.pushClass=function(clazz){this._classes.push(clazz);};EmitterVisitorContext.prototype.popClass=function(){return this._classes.pop();};Object.defineProperty(EmitterVisitorContext.prototype,"currentClass",{get:function get(){return this._classes.length>0?this._classes[this._classes.length-1]:null;},enumerable:true,configurable:true});EmitterVisitorContext.prototype.toSource=function(){return this.sourceLines.map(function(l){return l.parts.length>0?_createIndent(l.indent)+l.parts.join(''):'';}).join('\n');};EmitterVisitorContext.prototype.toSourceMapGenerator=function(genFilePath,startsAtLine){if(startsAtLine===void 0){startsAtLine=0;}var map=new SourceMapGenerator(genFilePath);var firstOffsetMapped=false;var mapFirstOffsetIfNeeded=function mapFirstOffsetIfNeeded(){if(!firstOffsetMapped){// Add a single space so that tools won't try to load the file from disk.
// Note: We are using virtual urls like `ng:///`, so we have to
// provide a content here.
map.addSource(genFilePath,' ').addMapping(0,genFilePath,0,0);firstOffsetMapped=true;}};for(var i=0;i<startsAtLine;i++){map.addLine();mapFirstOffsetIfNeeded();}this.sourceLines.forEach(function(line,lineIdx){map.addLine();var spans=line.srcSpans;var parts=line.parts;var col0=line.indent*_INDENT_WITH.length;var spanIdx=0;// skip leading parts without source spans
while(spanIdx<spans.length&&!spans[spanIdx]){col0+=parts[spanIdx].length;spanIdx++;}if(spanIdx<spans.length&&lineIdx===0&&col0===0){firstOffsetMapped=true;}else{mapFirstOffsetIfNeeded();}while(spanIdx<spans.length){var span=spans[spanIdx];var source=span.start.file;var sourceLine=span.start.line;var sourceCol=span.start.col;map.addSource(source.url,source.content).addMapping(col0,source.url,sourceLine,sourceCol);col0+=parts[spanIdx].length;spanIdx++;// assign parts without span or the same span to the previous segment
while(spanIdx<spans.length&&(span===spans[spanIdx]||!spans[spanIdx])){col0+=parts[spanIdx].length;spanIdx++;}}});return map;};EmitterVisitorContext.prototype.setPreambleLineCount=function(count){return this._preambleLineCount=count;};EmitterVisitorContext.prototype.spanOf=function(line,column){var emittedLine=this._lines[line-this._preambleLineCount];if(emittedLine){var columnsLeft=column-_createIndent(emittedLine.indent).length;for(var partIndex=0;partIndex<emittedLine.parts.length;partIndex++){var part=emittedLine.parts[partIndex];if(part.length>columnsLeft){return emittedLine.srcSpans[partIndex];}columnsLeft-=part.length;}}return null;};Object.defineProperty(EmitterVisitorContext.prototype,"sourceLines",{get:function get(){if(this._lines.length&&this._lines[this._lines.length-1].parts.length===0){return this._lines.slice(0,-1);}return this._lines;},enumerable:true,configurable:true});return EmitterVisitorContext;}();exports.EmitterVisitorContext=EmitterVisitorContext;var AbstractEmitterVisitor=/** @class */function(){function AbstractEmitterVisitor(_escapeDollarInStrings){this._escapeDollarInStrings=_escapeDollarInStrings;}AbstractEmitterVisitor.prototype.visitExpressionStmt=function(stmt,ctx){stmt.expr.visitExpression(this,ctx);ctx.println(stmt,';');return null;};AbstractEmitterVisitor.prototype.visitReturnStmt=function(stmt,ctx){ctx.print(stmt,"return ");stmt.value.visitExpression(this,ctx);ctx.println(stmt,';');return null;};AbstractEmitterVisitor.prototype.visitIfStmt=function(stmt,ctx){ctx.print(stmt,"if (");stmt.condition.visitExpression(this,ctx);ctx.print(stmt,") {");var hasElseCase=stmt.falseCase!=null&&stmt.falseCase.length>0;if(stmt.trueCase.length<=1&&!hasElseCase){ctx.print(stmt," ");this.visitAllStatements(stmt.trueCase,ctx);ctx.removeEmptyLastLine();ctx.print(stmt," ");}else{ctx.println();ctx.incIndent();this.visitAllStatements(stmt.trueCase,ctx);ctx.decIndent();if(hasElseCase){ctx.println(stmt,"} else {");ctx.incIndent();this.visitAllStatements(stmt.falseCase,ctx);ctx.decIndent();}}ctx.println(stmt,"}");return null;};AbstractEmitterVisitor.prototype.visitThrowStmt=function(stmt,ctx){ctx.print(stmt,"throw ");stmt.error.visitExpression(this,ctx);ctx.println(stmt,";");return null;};AbstractEmitterVisitor.prototype.visitCommentStmt=function(stmt,ctx){if(stmt.multiline){ctx.println(stmt,"/* "+stmt.comment+" */");}else{stmt.comment.split('\n').forEach(function(line){ctx.println(stmt,"// "+line);});}return null;};AbstractEmitterVisitor.prototype.visitJSDocCommentStmt=function(stmt,ctx){ctx.println(stmt,"/*"+stmt.toString()+"*/");return null;};AbstractEmitterVisitor.prototype.visitWriteVarExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}ctx.print(expr,expr.name+" = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitWriteKeyExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,"[");expr.index.visitExpression(this,ctx);ctx.print(expr,"] = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitWritePropExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,"."+expr.name+" = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitInvokeMethodExpr=function(expr,ctx){expr.receiver.visitExpression(this,ctx);var name=expr.name;if(expr.builtin!=null){name=this.getBuiltinMethodName(expr.builtin);if(name==null){// some builtins just mean to skip the call.
return null;}}ctx.print(expr,"."+name+"(");this.visitAllExpressions(expr.args,ctx,",");ctx.print(expr,")");return null;};AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr=function(expr,ctx){expr.fn.visitExpression(this,ctx);ctx.print(expr,"(");this.visitAllExpressions(expr.args,ctx,',');ctx.print(expr,")");return null;};AbstractEmitterVisitor.prototype.visitReadVarExpr=function(ast,ctx){var varName=ast.name;if(ast.builtin!=null){switch(ast.builtin){case BuiltinVar.Super:varName='super';break;case BuiltinVar.This:varName='this';break;case BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$1.name;break;case BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$1.name;break;default:throw new Error("Unknown builtin variable "+ast.builtin);}}ctx.print(ast,varName);return null;};AbstractEmitterVisitor.prototype.visitInstantiateExpr=function(ast,ctx){ctx.print(ast,"new ");ast.classExpr.visitExpression(this,ctx);ctx.print(ast,"(");this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitLiteralExpr=function(ast,ctx){var value=ast.value;if(typeof value==='string'){ctx.print(ast,escapeIdentifier(value,this._escapeDollarInStrings));}else{ctx.print(ast,""+value);}return null;};AbstractEmitterVisitor.prototype.visitConditionalExpr=function(ast,ctx){ctx.print(ast,"(");ast.condition.visitExpression(this,ctx);ctx.print(ast,'? ');ast.trueCase.visitExpression(this,ctx);ctx.print(ast,': ');ast.falseCase.visitExpression(this,ctx);ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitNotExpr=function(ast,ctx){ctx.print(ast,'!');ast.condition.visitExpression(this,ctx);return null;};AbstractEmitterVisitor.prototype.visitAssertNotNullExpr=function(ast,ctx){ast.condition.visitExpression(this,ctx);return null;};AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr=function(ast,ctx){var opStr;switch(ast.operator){case BinaryOperator.Equals:opStr='==';break;case BinaryOperator.Identical:opStr='===';break;case BinaryOperator.NotEquals:opStr='!=';break;case BinaryOperator.NotIdentical:opStr='!==';break;case BinaryOperator.And:opStr='&&';break;case BinaryOperator.BitwiseAnd:opStr='&';break;case BinaryOperator.Or:opStr='||';break;case BinaryOperator.Plus:opStr='+';break;case BinaryOperator.Minus:opStr='-';break;case BinaryOperator.Divide:opStr='/';break;case BinaryOperator.Multiply:opStr='*';break;case BinaryOperator.Modulo:opStr='%';break;case BinaryOperator.Lower:opStr='<';break;case BinaryOperator.LowerEquals:opStr='<=';break;case BinaryOperator.Bigger:opStr='>';break;case BinaryOperator.BiggerEquals:opStr='>=';break;default:throw new Error("Unknown operator "+ast.operator);}if(ast.parens)ctx.print(ast,"(");ast.lhs.visitExpression(this,ctx);ctx.print(ast," "+opStr+" ");ast.rhs.visitExpression(this,ctx);if(ast.parens)ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitReadPropExpr=function(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,".");ctx.print(ast,ast.name);return null;};AbstractEmitterVisitor.prototype.visitReadKeyExpr=function(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,"[");ast.index.visitExpression(this,ctx);ctx.print(ast,"]");return null;};AbstractEmitterVisitor.prototype.visitLiteralArrayExpr=function(ast,ctx){ctx.print(ast,"[");this.visitAllExpressions(ast.entries,ctx,',');ctx.print(ast,"]");return null;};AbstractEmitterVisitor.prototype.visitLiteralMapExpr=function(ast,ctx){var _this=this;ctx.print(ast,"{");this.visitAllObjects(function(entry){ctx.print(ast,escapeIdentifier(entry.key,_this._escapeDollarInStrings,entry.quoted)+":");entry.value.visitExpression(_this,ctx);},ast.entries,ctx,',');ctx.print(ast,"}");return null;};AbstractEmitterVisitor.prototype.visitCommaExpr=function(ast,ctx){ctx.print(ast,'(');this.visitAllExpressions(ast.parts,ctx,',');ctx.print(ast,')');return null;};AbstractEmitterVisitor.prototype.visitAllExpressions=function(expressions,ctx,separator){var _this=this;this.visitAllObjects(function(expr){return expr.visitExpression(_this,ctx);},expressions,ctx,separator);};AbstractEmitterVisitor.prototype.visitAllObjects=function(handler,expressions,ctx,separator){var incrementedIndent=false;for(var i=0;i<expressions.length;i++){if(i>0){if(ctx.lineLength()>80){ctx.print(null,separator,true);if(!incrementedIndent){// continuation are marked with double indent.
ctx.incIndent();ctx.incIndent();incrementedIndent=true;}}else{ctx.print(null,separator,false);}}handler(expressions[i]);}if(incrementedIndent){// continuation are marked with double indent.
ctx.decIndent();ctx.decIndent();}};AbstractEmitterVisitor.prototype.visitAllStatements=function(statements,ctx){var _this=this;statements.forEach(function(stmt){return stmt.visitStatement(_this,ctx);});};return AbstractEmitterVisitor;}();function escapeIdentifier(input,escapeDollar,alwaysQuote){if(alwaysQuote===void 0){alwaysQuote=true;}if(input==null){return null;}var body=input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE,function(){var match=[];for(var _i=0;_i<arguments.length;_i++){match[_i]=arguments[_i];}if(match[0]=='$'){return escapeDollar?'\\$':'$';}else if(match[0]=='\n'){return'\\n';}else if(match[0]=='\r'){return'\\r';}else{return"\\"+match[0];}});var requiresQuotes=alwaysQuote||!_LEGAL_IDENTIFIER_RE.test(body);return requiresQuotes?"'"+body+"'":body;}function _createIndent(count){var res='';for(var i=0;i<count;i++){res+=_INDENT_WITH;}return res;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function debugOutputAstAsTypeScript(ast){var converter=new _TsEmitterVisitor();var ctx=EmitterVisitorContext.createRoot();var asts=Array.isArray(ast)?ast:[ast];asts.forEach(function(ast){if(ast instanceof Statement){ast.visitStatement(converter,ctx);}else if(ast instanceof Expression){ast.visitExpression(converter,ctx);}else if(ast instanceof Type$1){ast.visitType(converter,ctx);}else{throw new Error("Don't know how to print debug info for "+ast);}});return ctx.toSource();}var TypeScriptEmitter=/** @class */function(){function TypeScriptEmitter(){}TypeScriptEmitter.prototype.emitStatementsAndContext=function(genFilePath,stmts,preamble,emitSourceMaps,referenceFilter,importFilter){if(preamble===void 0){preamble='';}if(emitSourceMaps===void 0){emitSourceMaps=true;}var converter=new _TsEmitterVisitor(referenceFilter,importFilter);var ctx=EmitterVisitorContext.createRoot();converter.visitAllStatements(stmts,ctx);var preambleLines=preamble?preamble.split('\n'):[];converter.reexports.forEach(function(reexports,exportedModuleName){var reexportsCode=reexports.map(function(reexport){return reexport.name+" as "+reexport.as;}).join(',');preambleLines.push("export {"+reexportsCode+"} from '"+exportedModuleName+"';");});converter.importsWithPrefixes.forEach(function(prefix,importedModuleName){// Note: can't write the real word for import as it screws up system.js auto detection...
preambleLines.push("imp"+("ort * as "+prefix+" from '"+importedModuleName+"';"));});var sm=emitSourceMaps?ctx.toSourceMapGenerator(genFilePath,preambleLines.length).toJsComment():'';var lines=(0,_tslib.__spread)(preambleLines,[ctx.toSource(),sm]);if(sm){// always add a newline at the end, as some tools have bugs without it.
lines.push('');}ctx.setPreambleLineCount(preambleLines.length);return{sourceText:lines.join('\n'),context:ctx};};TypeScriptEmitter.prototype.emitStatements=function(genFilePath,stmts,preamble){if(preamble===void 0){preamble='';}return this.emitStatementsAndContext(genFilePath,stmts,preamble).sourceText;};return TypeScriptEmitter;}();exports.TypeScriptEmitter=TypeScriptEmitter;var _TsEmitterVisitor=/** @class */function(_super){(0,_tslib.__extends)(_TsEmitterVisitor,_super);function _TsEmitterVisitor(referenceFilter,importFilter){var _this=_super.call(this,false)||this;_this.referenceFilter=referenceFilter;_this.importFilter=importFilter;_this.typeExpression=0;_this.importsWithPrefixes=new Map();_this.reexports=new Map();return _this;}_TsEmitterVisitor.prototype.visitType=function(t,ctx,defaultType){if(defaultType===void 0){defaultType='any';}if(t){this.typeExpression++;t.visitType(this,ctx);this.typeExpression--;}else{ctx.print(null,defaultType);}};_TsEmitterVisitor.prototype.visitLiteralExpr=function(ast,ctx){var value=ast.value;if(value==null&&ast.type!=INFERRED_TYPE){ctx.print(ast,"("+value+" as any)");return null;}return _super.prototype.visitLiteralExpr.call(this,ast,ctx);};// Temporary workaround to support strictNullCheck enabled consumers of ngc emit.
// In SNC mode, [] have the type never[], so we cast here to any[].
// TODO: narrow the cast to a more explicit type, or use a pattern that does not
// start with [].concat. see https://github.com/angular/angular/pull/11846
_TsEmitterVisitor.prototype.visitLiteralArrayExpr=function(ast,ctx){if(ast.entries.length===0){ctx.print(ast,'(');}var result=_super.prototype.visitLiteralArrayExpr.call(this,ast,ctx);if(ast.entries.length===0){ctx.print(ast,' as any[])');}return result;};_TsEmitterVisitor.prototype.visitExternalExpr=function(ast,ctx){this._visitIdentifier(ast.value,ast.typeParams,ctx);return null;};_TsEmitterVisitor.prototype.visitAssertNotNullExpr=function(ast,ctx){var result=_super.prototype.visitAssertNotNullExpr.call(this,ast,ctx);ctx.print(ast,'!');return result;};_TsEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)&&stmt.value instanceof ExternalExpr&&!stmt.type){// check for a reexport
var _a=stmt.value.value,name_1=_a.name,moduleName=_a.moduleName;if(moduleName){var reexports=this.reexports.get(moduleName);if(!reexports){reexports=[];this.reexports.set(moduleName,reexports);}reexports.push({name:name_1,as:stmt.name});return null;}}if(stmt.hasModifier(StmtModifier.Exported)){ctx.print(stmt,"export ");}if(stmt.hasModifier(StmtModifier.Final)){ctx.print(stmt,"const");}else{ctx.print(stmt,"var");}ctx.print(stmt," "+stmt.name);this._printColonType(stmt.type,ctx);if(stmt.value){ctx.print(stmt," = ");stmt.value.visitExpression(this,ctx);}ctx.println(stmt,";");return null;};_TsEmitterVisitor.prototype.visitCastExpr=function(ast,ctx){ctx.print(ast,"(<");ast.type.visitType(this,ctx);ctx.print(ast,">");ast.value.visitExpression(this,ctx);ctx.print(ast,")");return null;};_TsEmitterVisitor.prototype.visitInstantiateExpr=function(ast,ctx){ctx.print(ast,"new ");this.typeExpression++;ast.classExpr.visitExpression(this,ctx);this.typeExpression--;ctx.print(ast,"(");this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,")");return null;};_TsEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){var _this=this;ctx.pushClass(stmt);if(stmt.hasModifier(StmtModifier.Exported)){ctx.print(stmt,"export ");}ctx.print(stmt,"class "+stmt.name);if(stmt.parent!=null){ctx.print(stmt," extends ");this.typeExpression++;stmt.parent.visitExpression(this,ctx);this.typeExpression--;}ctx.println(stmt," {");ctx.incIndent();stmt.fields.forEach(function(field){return _this._visitClassField(field,ctx);});if(stmt.constructorMethod!=null){this._visitClassConstructor(stmt,ctx);}stmt.getters.forEach(function(getter){return _this._visitClassGetter(getter,ctx);});stmt.methods.forEach(function(method){return _this._visitClassMethod(method,ctx);});ctx.decIndent();ctx.println(stmt,"}");ctx.popClass();return null;};_TsEmitterVisitor.prototype._visitClassField=function(field,ctx){if(field.hasModifier(StmtModifier.Private)){// comment out as a workaround for #10967
ctx.print(null,"/*private*/ ");}if(field.hasModifier(StmtModifier.Static)){ctx.print(null,'static ');}ctx.print(null,field.name);this._printColonType(field.type,ctx);if(field.initializer){ctx.print(null,' = ');field.initializer.visitExpression(this,ctx);}ctx.println(null,";");};_TsEmitterVisitor.prototype._visitClassGetter=function(getter,ctx){if(getter.hasModifier(StmtModifier.Private)){ctx.print(null,"private ");}ctx.print(null,"get "+getter.name+"()");this._printColonType(getter.type,ctx);ctx.println(null," {");ctx.incIndent();this.visitAllStatements(getter.body,ctx);ctx.decIndent();ctx.println(null,"}");};_TsEmitterVisitor.prototype._visitClassConstructor=function(stmt,ctx){ctx.print(stmt,"constructor(");this._visitParams(stmt.constructorMethod.params,ctx);ctx.println(stmt,") {");ctx.incIndent();this.visitAllStatements(stmt.constructorMethod.body,ctx);ctx.decIndent();ctx.println(stmt,"}");};_TsEmitterVisitor.prototype._visitClassMethod=function(method,ctx){if(method.hasModifier(StmtModifier.Private)){ctx.print(null,"private ");}ctx.print(null,method.name+"(");this._visitParams(method.params,ctx);ctx.print(null,")");this._printColonType(method.type,ctx,'void');ctx.println(null," {");ctx.incIndent();this.visitAllStatements(method.body,ctx);ctx.decIndent();ctx.println(null,"}");};_TsEmitterVisitor.prototype.visitFunctionExpr=function(ast,ctx){if(ast.name){ctx.print(ast,'function ');ctx.print(ast,ast.name);}ctx.print(ast,"(");this._visitParams(ast.params,ctx);ctx.print(ast,")");this._printColonType(ast.type,ctx,'void');if(!ast.name){ctx.print(ast," => ");}ctx.println(ast,'{');ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,"}");return null;};_TsEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){ctx.print(stmt,"export ");}ctx.print(stmt,"function "+stmt.name+"(");this._visitParams(stmt.params,ctx);ctx.print(stmt,")");this._printColonType(stmt.type,ctx,'void');ctx.println(stmt," {");ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};_TsEmitterVisitor.prototype.visitTryCatchStmt=function(stmt,ctx){ctx.println(stmt,"try {");ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,"} catch ("+CATCH_ERROR_VAR$1.name+") {");ctx.incIndent();var catchStmts=[CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack',null)).toDeclStmt(null,[StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};_TsEmitterVisitor.prototype.visitBuiltinType=function(type,ctx){var typeStr;switch(type.name){case BuiltinTypeName.Bool:typeStr='boolean';break;case BuiltinTypeName.Dynamic:typeStr='any';break;case BuiltinTypeName.Function:typeStr='Function';break;case BuiltinTypeName.Number:typeStr='number';break;case BuiltinTypeName.Int:typeStr='number';break;case BuiltinTypeName.String:typeStr='string';break;default:throw new Error("Unsupported builtin type "+type.name);}ctx.print(null,typeStr);return null;};_TsEmitterVisitor.prototype.visitExpressionType=function(ast,ctx){ast.value.visitExpression(this,ctx);return null;};_TsEmitterVisitor.prototype.visitArrayType=function(type,ctx){this.visitType(type.of,ctx);ctx.print(null,"[]");return null;};_TsEmitterVisitor.prototype.visitMapType=function(type,ctx){ctx.print(null,"{[key: string]:");this.visitType(type.valueType,ctx);ctx.print(null,"}");return null;};_TsEmitterVisitor.prototype.getBuiltinMethodName=function(method){var name;switch(method){case BuiltinMethod.ConcatArray:name='concat';break;case BuiltinMethod.SubscribeObservable:name='subscribe';break;case BuiltinMethod.Bind:name='bind';break;default:throw new Error("Unknown builtin method: "+method);}return name;};_TsEmitterVisitor.prototype._visitParams=function(params,ctx){var _this=this;this.visitAllObjects(function(param){ctx.print(null,param.name);_this._printColonType(param.type,ctx);},params,ctx,',');};_TsEmitterVisitor.prototype._visitIdentifier=function(value,typeParams,ctx){var _this=this;var name=value.name,moduleName=value.moduleName;if(this.referenceFilter&&this.referenceFilter(value)){ctx.print(null,'(null as any)');return;}if(moduleName&&(!this.importFilter||!this.importFilter(value))){var prefix=this.importsWithPrefixes.get(moduleName);if(prefix==null){prefix="i"+this.importsWithPrefixes.size;this.importsWithPrefixes.set(moduleName,prefix);}ctx.print(null,prefix+".");}ctx.print(null,name);if(this.typeExpression>0){// If we are in a type expression that refers to a generic type then supply
// the required type parameters. If there were not enough type parameters
// supplied, supply any as the type. Outside a type expression the reference
// should not supply type parameters and be treated as a simple value reference
// to the constructor function itself.
var suppliedParameters=typeParams||[];if(suppliedParameters.length>0){ctx.print(null,"<");this.visitAllObjects(function(type){return type.visitType(_this,ctx);},typeParams,ctx,',');ctx.print(null,">");}}};_TsEmitterVisitor.prototype._printColonType=function(type,ctx,defaultType){if(type!==INFERRED_TYPE){ctx.print(null,':');this.visitType(type,ctx,defaultType);}};return _TsEmitterVisitor;}(AbstractEmitterVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Resolve a `Type` for {@link Pipe}.
 *
 * This interface can be overridden by the application developer to create custom behavior.
 *
 * See {@link Compiler}
 */var PipeResolver=/** @class */function(){function PipeResolver(_reflector){this._reflector=_reflector;}PipeResolver.prototype.isPipe=function(type){var typeMetadata=this._reflector.annotations(resolveForwardRef(type));return typeMetadata&&typeMetadata.some(createPipe.isTypeOf);};/**
     * Return {@link Pipe} for a given `Type`.
     */PipeResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var metas=this._reflector.annotations(resolveForwardRef(type));if(metas){var annotation=findLast(metas,createPipe.isTypeOf);if(annotation){return annotation;}}if(throwIfNotFound){throw new Error("No Pipe decorator found on "+stringify(type));}return null;};return PipeResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!
//                               Reach out to mprobst for details.
//
// =================================================================================================
/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */exports.PipeResolver=PipeResolver;var SECURITY_SCHEMA={};function registerContext(ctx,specs){try{for(var specs_1=(0,_tslib.__values)(specs),specs_1_1=specs_1.next();!specs_1_1.done;specs_1_1=specs_1.next()){var spec=specs_1_1.value;SECURITY_SCHEMA[spec.toLowerCase()]=ctx;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(specs_1_1&&!specs_1_1.done&&(_a=specs_1.return))_a.call(specs_1);}finally{if(e_1)throw e_1.error;}}var e_1,_a;}// Case is insignificant below, all element and attribute names are lower-cased for lookup.
registerContext(SecurityContext.HTML,['iframe|srcdoc','*|innerHTML','*|outerHTML']);registerContext(SecurityContext.STYLE,['*|style']);// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.
registerContext(SecurityContext.URL,['*|formAction','area|href','area|ping','audio|src','a|href','a|ping','blockquote|cite','body|background','del|cite','form|action','img|src','img|srcset','input|src','ins|cite','q|cite','source|src','source|srcset','track|src','video|poster','video|src']);registerContext(SecurityContext.RESOURCE_URL,['applet|code','applet|codebase','base|href','embed|src','frame|src','head|profile','html|manifest','iframe|src','link|href','media|src','object|codebase','object|data','script|src']);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ElementSchemaRegistry=/** @class */function(){function ElementSchemaRegistry(){}return ElementSchemaRegistry;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.ElementSchemaRegistry=ElementSchemaRegistry;var BOOLEAN='boolean';var NUMBER='number';var STRING='string';var OBJECT='object';/**
 * This array represents the DOM schema. It encodes inheritance, properties, and events.
 *
 * ## Overview
 *
 * Each line represents one kind of element. The `element_inheritance` and properties are joined
 * using `element_inheritance|properties` syntax.
 *
 * ## Element Inheritance
 *
 * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.
 * Here the individual elements are separated by `,` (commas). Every element in the list
 * has identical properties.
 *
 * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is
 * specified then `""` (blank) element is assumed.
 *
 * NOTE: The blank element inherits from root `[Element]` element, the super element of all
 * elements.
 *
 * NOTE an element prefix such as `:svg:` has no special meaning to the schema.
 *
 * ## Properties
 *
 * Each element has a set of properties separated by `,` (commas). Each property can be prefixed
 * by a special character designating its type:
 *
 * - (no prefix): property is a string.
 * - `*`: property represents an event.
 * - `!`: property is a boolean.
 * - `#`: property is a number.
 * - `%`: property is an object.
 *
 * ## Query
 *
 * The class creates an internal squas representation which allows to easily answer the query of
 * if a given property exist on a given element.
 *
 * NOTE: We don't yet support querying for types or events.
 * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,
 *       see dom_element_schema_registry_spec.ts
 */ // =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!
//
// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in
// dom_security_schema.ts. Reach out to mprobst & rjamet for details.
//
// =================================================================================================
var SCHEMA=['[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot'+/* added manually to avoid breaking changes */',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored','[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate','abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate','media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',':svg:graphics^:svg:|',':svg:animation^:svg:|*begin,*end,*repeat',':svg:geometry^:svg:|',':svg:componentTransferFunction^:svg:|',':svg:gradient^:svg:|',':svg:textContent^:svg:graphics|',':svg:textPositioning^:svg:textContent|','a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username','area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username','audio^media|','br^[HTMLElement]|clear','base^[HTMLElement]|href,target','body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink','button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value','canvas^[HTMLElement]|#height,#width','content^[HTMLElement]|select','dl^[HTMLElement]|!compact','datalist^[HTMLElement]|','details^[HTMLElement]|!open','dialog^[HTMLElement]|!open,returnValue','dir^[HTMLElement]|!compact','div^[HTMLElement]|align','embed^[HTMLElement]|align,height,name,src,type,width','fieldset^[HTMLElement]|!disabled,name','font^[HTMLElement]|color,face,size','form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target','frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src','frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows','hr^[HTMLElement]|align,color,!noShade,size,width','head^[HTMLElement]|','h1,h2,h3,h4,h5,h6^[HTMLElement]|align','html^[HTMLElement]|version','iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width','img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width','input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width','li^[HTMLElement]|type,#value','label^[HTMLElement]|htmlFor','legend^[HTMLElement]|align','link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type','map^[HTMLElement]|name','marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width','menu^[HTMLElement]|!compact','meta^[HTMLElement]|content,httpEquiv,name,scheme','meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value','ins,del^[HTMLElement]|cite,dateTime','ol^[HTMLElement]|!compact,!reversed,#start,type','object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width','optgroup^[HTMLElement]|!disabled,label','option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value','output^[HTMLElement]|defaultValue,%htmlFor,name,value','p^[HTMLElement]|align','param^[HTMLElement]|name,type,value,valueType','picture^[HTMLElement]|','pre^[HTMLElement]|#width','progress^[HTMLElement]|#max,#value','q,blockquote,cite^[HTMLElement]|','script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type','select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value','shadow^[HTMLElement]|','slot^[HTMLElement]|name','source^[HTMLElement]|media,sizes,src,srcset,type','span^[HTMLElement]|','style^[HTMLElement]|!disabled,media,type','caption^[HTMLElement]|align','th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width','col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width','table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width','tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign','tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign','template^[HTMLElement]|','textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap','title^[HTMLElement]|text','track^[HTMLElement]|!default,kind,label,src,srclang','ul^[HTMLElement]|!compact,type','unknown^[HTMLElement]|','video^media|#height,poster,#width',':svg:a^:svg:graphics|',':svg:animate^:svg:animation|',':svg:animateMotion^:svg:animation|',':svg:animateTransform^:svg:animation|',':svg:circle^:svg:geometry|',':svg:clipPath^:svg:graphics|',':svg:defs^:svg:graphics|',':svg:desc^:svg:|',':svg:discard^:svg:|',':svg:ellipse^:svg:geometry|',':svg:feBlend^:svg:|',':svg:feColorMatrix^:svg:|',':svg:feComponentTransfer^:svg:|',':svg:feComposite^:svg:|',':svg:feConvolveMatrix^:svg:|',':svg:feDiffuseLighting^:svg:|',':svg:feDisplacementMap^:svg:|',':svg:feDistantLight^:svg:|',':svg:feDropShadow^:svg:|',':svg:feFlood^:svg:|',':svg:feFuncA^:svg:componentTransferFunction|',':svg:feFuncB^:svg:componentTransferFunction|',':svg:feFuncG^:svg:componentTransferFunction|',':svg:feFuncR^:svg:componentTransferFunction|',':svg:feGaussianBlur^:svg:|',':svg:feImage^:svg:|',':svg:feMerge^:svg:|',':svg:feMergeNode^:svg:|',':svg:feMorphology^:svg:|',':svg:feOffset^:svg:|',':svg:fePointLight^:svg:|',':svg:feSpecularLighting^:svg:|',':svg:feSpotLight^:svg:|',':svg:feTile^:svg:|',':svg:feTurbulence^:svg:|',':svg:filter^:svg:|',':svg:foreignObject^:svg:graphics|',':svg:g^:svg:graphics|',':svg:image^:svg:graphics|',':svg:line^:svg:geometry|',':svg:linearGradient^:svg:gradient|',':svg:mpath^:svg:|',':svg:marker^:svg:|',':svg:mask^:svg:|',':svg:metadata^:svg:|',':svg:path^:svg:geometry|',':svg:pattern^:svg:|',':svg:polygon^:svg:geometry|',':svg:polyline^:svg:geometry|',':svg:radialGradient^:svg:gradient|',':svg:rect^:svg:geometry|',':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',':svg:script^:svg:|type',':svg:set^:svg:animation|',':svg:stop^:svg:|',':svg:style^:svg:|!disabled,media,title,type',':svg:switch^:svg:graphics|',':svg:symbol^:svg:|',':svg:tspan^:svg:textPositioning|',':svg:text^:svg:textPositioning|',':svg:textPath^:svg:textContent|',':svg:title^:svg:|',':svg:use^:svg:graphics|',':svg:view^:svg:|#zoomAndPan','data^[HTMLElement]|value','keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name','menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default','summary^[HTMLElement]|','time^[HTMLElement]|dateTime',':svg:cursor^:svg:|'];var _ATTR_TO_PROP={'class':'className','for':'htmlFor','formaction':'formAction','innerHtml':'innerHTML','readonly':'readOnly','tabindex':'tabIndex'};var DomElementSchemaRegistry=/** @class */function(_super){(0,_tslib.__extends)(DomElementSchemaRegistry,_super);function DomElementSchemaRegistry(){var _this=_super.call(this)||this;_this._schema={};SCHEMA.forEach(function(encodedType){var type={};var _a=(0,_tslib.__read)(encodedType.split('|'),2),strType=_a[0],strProperties=_a[1];var properties=strProperties.split(',');var _b=(0,_tslib.__read)(strType.split('^'),2),typeNames=_b[0],superName=_b[1];typeNames.split(',').forEach(function(tag){return _this._schema[tag.toLowerCase()]=type;});var superType=superName&&_this._schema[superName.toLowerCase()];if(superType){Object.keys(superType).forEach(function(prop){type[prop]=superType[prop];});}properties.forEach(function(property){if(property.length>0){switch(property[0]){case'*':// We don't yet support events.
// If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events
// will
// almost certainly introduce bad XSS vulnerabilities.
// type[property.substring(1)] = EVENT;
break;case'!':type[property.substring(1)]=BOOLEAN;break;case'#':type[property.substring(1)]=NUMBER;break;case'%':type[property.substring(1)]=OBJECT;break;default:type[property]=STRING;}}});});return _this;}DomElementSchemaRegistry.prototype.hasProperty=function(tagName,propName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===NO_ERRORS_SCHEMA.name;})){return true;}if(tagName.indexOf('-')>-1){if(isNgContainer(tagName)||isNgContent(tagName)){return false;}if(schemaMetas.some(function(schema){return schema.name===CUSTOM_ELEMENTS_SCHEMA.name;})){// Can't tell now as we don't know which properties a custom element will get
// once it is instantiated
return true;}}var elementProperties=this._schema[tagName.toLowerCase()]||this._schema['unknown'];return!!elementProperties[propName];};DomElementSchemaRegistry.prototype.hasElement=function(tagName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===NO_ERRORS_SCHEMA.name;})){return true;}if(tagName.indexOf('-')>-1){if(isNgContainer(tagName)||isNgContent(tagName)){return true;}if(schemaMetas.some(function(schema){return schema.name===CUSTOM_ELEMENTS_SCHEMA.name;})){// Allow any custom elements
return true;}}return!!this._schema[tagName.toLowerCase()];};/**
     * securityContext returns the security context for the given property on the given DOM tag.
     *
     * Tag and property name are statically known and cannot change at runtime, i.e. it is not
     * possible to bind a value into a changing attribute or tag name.
     *
     * The filtering is white list based. All attributes in the schema above are assumed to have the
     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known
     * attack vectors are assigned their appropriate context.
     */DomElementSchemaRegistry.prototype.securityContext=function(tagName,propName,isAttribute){if(isAttribute){// NB: For security purposes, use the mapped property name, not the attribute name.
propName=this.getMappedPropName(propName);}// Make sure comparisons are case insensitive, so that case differences between attribute and
// property names do not have a security impact.
tagName=tagName.toLowerCase();propName=propName.toLowerCase();var ctx=SECURITY_SCHEMA[tagName+'|'+propName];if(ctx){return ctx;}ctx=SECURITY_SCHEMA['*|'+propName];return ctx?ctx:SecurityContext.NONE;};DomElementSchemaRegistry.prototype.getMappedPropName=function(propName){return _ATTR_TO_PROP[propName]||propName;};DomElementSchemaRegistry.prototype.getDefaultComponentElementName=function(){return'ng-component';};DomElementSchemaRegistry.prototype.validateProperty=function(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event property '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...")+("\nIf '"+name+"' is a directive input, make sure the directive is imported by the")+" current module.";return{error:true,msg:msg};}else{return{error:false};}};DomElementSchemaRegistry.prototype.validateAttribute=function(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event attribute '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...");return{error:true,msg:msg};}else{return{error:false};}};DomElementSchemaRegistry.prototype.allKnownElementNames=function(){return Object.keys(this._schema);};DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty=function(propName){return dashCaseToCamelCase(propName);};DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue=function(camelCaseProp,userProvidedProp,val){var unit='';var strVal=val.toString().trim();var errorMsg=null;if(_isPixelDimensionStyle(camelCaseProp)&&val!==0&&val!=='0'){if(typeof val==='number'){unit='px';}else{var valAndSuffixMatch=val.match(/^[+-]?[\d\.]+([a-z]*)$/);if(valAndSuffixMatch&&valAndSuffixMatch[1].length==0){errorMsg="Please provide a CSS unit value for "+userProvidedProp+":"+val;}}}return{error:errorMsg,value:strVal+unit};};return DomElementSchemaRegistry;}(ElementSchemaRegistry);exports.DomElementSchemaRegistry=DomElementSchemaRegistry;function _isPixelDimensionStyle(prop){switch(prop){case'width':case'height':case'minWidth':case'minHeight':case'maxWidth':case'maxHeight':case'left':case'top':case'bottom':case'right':case'fontSize':case'outlineWidth':case'outlineOffset':case'paddingTop':case'paddingLeft':case'paddingBottom':case'paddingRight':case'marginTop':case'marginLeft':case'marginBottom':case'marginRight':case'borderRadius':case'borderWidth':case'borderTopWidth':case'borderLeftWidth':case'borderRightWidth':case'borderBottomWidth':case'textIndent':return true;default:return false;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * This file is a port of shadowCSS from webcomponents.js to TypeScript.
 *
 * Please make sure to keep to edits in sync with the source file.
 *
 * Source:
 * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js
 *
 * The original file level comment is reproduced below
 */ /*
  This is a limited shim for ShadowDOM css styling.
  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles

  The intention here is to support only the styling features which can be
  relatively simply implemented. The goal is to allow users to avoid the
  most obvious pitfalls and do so without compromising performance significantly.
  For ShadowDOM styling that's not covered here, a set of best practices
  can be provided that should allow users to accomplish more complex styling.

  The following is a list of specific ShadowDOM styling features and a brief
  discussion of the approach used to shim.

  Shimmed features:

  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host
  element using the :host rule. To shim this feature, the :host styles are
  reformatted and prefixed with a given scope name and promoted to a
  document level stylesheet.
  For example, given a scope name of .foo, a rule like this:

    :host {
        background: red;
      }
    }

  becomes:

    .foo {
      background: red;
    }

  * encapsulation: Styles defined within ShadowDOM, apply only to
  dom inside the ShadowDOM. Polymer uses one of two techniques to implement
  this feature.

  By default, rules are prefixed with the host element tag name
  as a descendant selector. This ensures styling does not leak out of the 'top'
  of the element's ShadowDOM. For example,

  div {
      font-weight: bold;
    }

  becomes:

  x-foo div {
      font-weight: bold;
    }

  becomes:


  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then
  selectors are scoped by adding an attribute selector suffix to each
  simple selector that contains the host element tag name. Each element
  in the element's ShadowDOM template is also given the scope attribute.
  Thus, these rules match only elements that have the scope attribute.
  For example, given a scope name of x-foo, a rule like this:

    div {
      font-weight: bold;
    }

  becomes:

    div[x-foo] {
      font-weight: bold;
    }

  Note that elements that are dynamically added to a scope must have the scope
  selector added to them manually.

  * upper/lower bound encapsulation: Styles which are defined outside a
  shadowRoot should not cross the ShadowDOM boundary and should not apply
  inside a shadowRoot.

  This styling behavior is not emulated. Some possible ways to do this that
  were rejected due to complexity and/or performance concerns include: (1) reset
  every possible property for every possible selector for a given scope name;
  (2) re-implement css in javascript.

  As an alternative, users should make sure to use selectors
  specific to the scope in which they are working.

  * ::distributed: This behavior is not emulated. It's often not necessary
  to style the contents of a specific insertion point and instead, descendants
  of the host element can be styled selectively. Users can also create an
  extra node around an insertion point and style that node's contents
  via descendent selectors. For example, with a shadowRoot like this:

    <style>
      ::content(div) {
        background: red;
      }
    </style>
    <content></content>

  could become:

    <style>
      / *@polyfill .content-container div * /
      ::content(div) {
        background: red;
      }
    </style>
    <div class="content-container">
      <content></content>
    </div>

  Note the use of @polyfill in the comment above a ShadowDOM specific style
  declaration. This is a directive to the styling shim to use the selector
  in comments in lieu of the next selector when running under polyfill.
*/var ShadowCss=/** @class */function(){function ShadowCss(){this.strictStyling=true;}/*
    * Shim some cssText with the given selector. Returns cssText that can
    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).
    *
    * When strictStyling is true:
    * - selector is the attribute added to all elements inside the host,
    * - hostSelector is the attribute added to the host itself.
    */ShadowCss.prototype.shimCssText=function(cssText,selector,hostSelector){if(hostSelector===void 0){hostSelector='';}var commentsWithHash=extractCommentsWithHash(cssText);cssText=stripComments(cssText);cssText=this._insertDirectives(cssText);var scopedCssText=this._scopeCssText(cssText,selector,hostSelector);return(0,_tslib.__spread)([scopedCssText],commentsWithHash).join('\n');};ShadowCss.prototype._insertDirectives=function(cssText){cssText=this._insertPolyfillDirectivesInCssText(cssText);return this._insertPolyfillRulesInCssText(cssText);};/*
     * Process styles to convert native ShadowDOM rules that will trip
     * up the css parser; we rely on decorating the stylesheet with inert rules.
     *
     * For example, we convert this rule:
     *
     * polyfill-next-selector { content: ':host menu-item'; }
     * ::content menu-item {
     *
     * to this:
     *
     * scopeName menu-item {
     *
    **/ShadowCss.prototype._insertPolyfillDirectivesInCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentNextSelectorRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return m[2]+'{';});};/*
     * Process styles to add rules which will only apply under the polyfill
     *
     * For example, we convert this rule:
     *
     * polyfill-rule {
     *   content: ':host menu-item';
     * ...
     * }
     *
     * to this:
     *
     * scopeName menu-item {...}
     *
    **/ShadowCss.prototype._insertPolyfillRulesInCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentRuleRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var rule=m[0].replace(m[1],'').replace(m[2],'');return m[4]+rule;});};/* Ensure styles are scoped. Pseudo-scoping takes a rule like:
     *
     *  .foo {... }
     *
     *  and converts this to
     *
     *  scopeName .foo { ... }
    */ShadowCss.prototype._scopeCssText=function(cssText,scopeSelector,hostSelector){var unscopedRules=this._extractUnscopedRulesFromCssText(cssText);// replace :host and :host-context -shadowcsshost and -shadowcsshost respectively
cssText=this._insertPolyfillHostInCssText(cssText);cssText=this._convertColonHost(cssText);cssText=this._convertColonHostContext(cssText);cssText=this._convertShadowDOMSelectors(cssText);if(scopeSelector){cssText=this._scopeSelectors(cssText,scopeSelector,hostSelector);}cssText=cssText+'\n'+unscopedRules;return cssText.trim();};/*
     * Process styles to add rules which will only apply under the polyfill
     * and do not process via CSSOM. (CSSOM is destructive to rules on rare
     * occasions, e.g. -webkit-calc on Safari.)
     * For example, we convert this rule:
     *
     * @polyfill-unscoped-rule {
     *   content: 'menu-item';
     * ... }
     *
     * to this:
     *
     * menu-item {...}
     *
    **/ShadowCss.prototype._extractUnscopedRulesFromCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
var r='';var m;_cssContentUnscopedRuleRe.lastIndex=0;while((m=_cssContentUnscopedRuleRe.exec(cssText))!==null){var rule=m[0].replace(m[2],'').replace(m[1],m[4]);r+=rule+'\n\n';}return r;};/*
     * convert a rule like :host(.foo) > .bar { }
     *
     * to
     *
     * .foo<scopeName> > .bar
    */ShadowCss.prototype._convertColonHost=function(cssText){return this._convertColonRule(cssText,_cssColonHostRe,this._colonHostPartReplacer);};/*
     * convert a rule like :host-context(.foo) > .bar { }
     *
     * to
     *
     * .foo<scopeName> > .bar, .foo scopeName > .bar { }
     *
     * and
     *
     * :host-context(.foo:host) .bar { ... }
     *
     * to
     *
     * .foo<scopeName> .bar { ... }
    */ShadowCss.prototype._convertColonHostContext=function(cssText){return this._convertColonRule(cssText,_cssColonHostContextRe,this._colonHostContextPartReplacer);};ShadowCss.prototype._convertColonRule=function(cssText,regExp,partReplacer){// m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule
return cssText.replace(regExp,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}if(m[2]){var parts=m[2].split(',');var r=[];for(var i=0;i<parts.length;i++){var p=parts[i].trim();if(!p)break;r.push(partReplacer(_polyfillHostNoCombinator,p,m[3]));}return r.join(',');}else{return _polyfillHostNoCombinator+m[3];}});};ShadowCss.prototype._colonHostContextPartReplacer=function(host,part,suffix){if(part.indexOf(_polyfillHost)>-1){return this._colonHostPartReplacer(host,part,suffix);}else{return host+part+suffix+', '+part+' '+host+suffix;}};ShadowCss.prototype._colonHostPartReplacer=function(host,part,suffix){return host+part.replace(_polyfillHost,'')+suffix;};/*
     * Convert combinators like ::shadow and pseudo-elements like ::content
     * by replacing with space.
    */ShadowCss.prototype._convertShadowDOMSelectors=function(cssText){return _shadowDOMSelectorsRe.reduce(function(result,pattern){return result.replace(pattern,' ');},cssText);};// change a selector like 'div' to 'name div'
ShadowCss.prototype._scopeSelectors=function(cssText,scopeSelector,hostSelector){var _this=this;return processRules(cssText,function(rule){var selector=rule.selector;var content=rule.content;if(rule.selector[0]!='@'){selector=_this._scopeSelector(rule.selector,scopeSelector,hostSelector,_this.strictStyling);}else if(rule.selector.startsWith('@media')||rule.selector.startsWith('@supports')||rule.selector.startsWith('@page')||rule.selector.startsWith('@document')){content=_this._scopeSelectors(rule.content,scopeSelector,hostSelector);}return new CssRule(selector,content);});};ShadowCss.prototype._scopeSelector=function(selector,scopeSelector,hostSelector,strict){var _this=this;return selector.split(',').map(function(part){return part.trim().split(_shadowDeepSelectors);}).map(function(deepParts){var _a=(0,_tslib.__read)(deepParts),shallowPart=_a[0],otherParts=_a.slice(1);var applyScope=function applyScope(shallowPart){if(_this._selectorNeedsScoping(shallowPart,scopeSelector)){return strict?_this._applyStrictSelectorScope(shallowPart,scopeSelector,hostSelector):_this._applySelectorScope(shallowPart,scopeSelector,hostSelector);}else{return shallowPart;}};return(0,_tslib.__spread)([applyScope(shallowPart)],otherParts).join(' ');}).join(', ');};ShadowCss.prototype._selectorNeedsScoping=function(selector,scopeSelector){var re=this._makeScopeMatcher(scopeSelector);return!re.test(selector);};ShadowCss.prototype._makeScopeMatcher=function(scopeSelector){var lre=/\[/g;var rre=/\]/g;scopeSelector=scopeSelector.replace(lre,'\\[').replace(rre,'\\]');return new RegExp('^('+scopeSelector+')'+_selectorReSuffix,'m');};ShadowCss.prototype._applySelectorScope=function(selector,scopeSelector,hostSelector){// Difference from webcomponents.js: scopeSelector could not be an array
return this._applySimpleSelectorScope(selector,scopeSelector,hostSelector);};// scope via name and [is=name]
ShadowCss.prototype._applySimpleSelectorScope=function(selector,scopeSelector,hostSelector){// In Android browser, the lastIndex is not reset when the regex is used in String.replace()
_polyfillHostRe.lastIndex=0;if(_polyfillHostRe.test(selector)){var replaceBy_1=this.strictStyling?"["+hostSelector+"]":scopeSelector;return selector.replace(_polyfillHostNoCombinatorRe,function(hnc,selector){return selector.replace(/([^:]*)(:*)(.*)/,function(_,before,colon,after){return before+replaceBy_1+colon+after;});}).replace(_polyfillHostRe,replaceBy_1+' ');}return scopeSelector+' '+selector;};// return a selector with [name] suffix on each simple selector
// e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */
ShadowCss.prototype._applyStrictSelectorScope=function(selector,scopeSelector,hostSelector){var _this=this;var isRe=/\[is=([^\]]*)\]/g;scopeSelector=scopeSelector.replace(isRe,function(_){var parts=[];for(var _i=1;_i<arguments.length;_i++){parts[_i-1]=arguments[_i];}return parts[0];});var attrName='['+scopeSelector+']';var _scopeSelectorPart=function _scopeSelectorPart(p){var scopedP=p.trim();if(!scopedP){return'';}if(p.indexOf(_polyfillHostNoCombinator)>-1){scopedP=_this._applySimpleSelectorScope(p,scopeSelector,hostSelector);}else{// remove :host since it should be unnecessary
var t=p.replace(_polyfillHostRe,'');if(t.length>0){var matches=t.match(/([^:]*)(:*)(.*)/);if(matches){scopedP=matches[1]+attrName+matches[2]+matches[3];}}}return scopedP;};var safeContent=new SafeSelector(selector);selector=safeContent.content();var scopedSelector='';var startIndex=0;var res;var sep=/( |>|\+|~(?!=))\s*/g;// If a selector appears before :host it should not be shimmed as it
// matches on ancestor elements and not on elements in the host's shadow
// `:host-context(div)` is transformed to
// `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`
// the `div` is not part of the component in the 2nd selectors and should not be scoped.
// Historically `component-tag:host` was matching the component so we also want to preserve
// this behavior to avoid breaking legacy apps (it should not match).
// The behavior should be:
// - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)
// - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a
//   `:host-context(tag)`)
var hasHost=selector.indexOf(_polyfillHostNoCombinator)>-1;// Only scope parts after the first `-shadowcsshost-no-combinator` when it is present
var shouldScope=!hasHost;while((res=sep.exec(selector))!==null){var separator=res[1];var part_1=selector.slice(startIndex,res.index).trim();shouldScope=shouldScope||part_1.indexOf(_polyfillHostNoCombinator)>-1;var scopedPart=shouldScope?_scopeSelectorPart(part_1):part_1;scopedSelector+=scopedPart+" "+separator+" ";startIndex=sep.lastIndex;}var part=selector.substring(startIndex);shouldScope=shouldScope||part.indexOf(_polyfillHostNoCombinator)>-1;scopedSelector+=shouldScope?_scopeSelectorPart(part):part;// replace the placeholders with their original values
return safeContent.restore(scopedSelector);};ShadowCss.prototype._insertPolyfillHostInCssText=function(selector){return selector.replace(_colonHostContextRe,_polyfillHostContext).replace(_colonHostRe,_polyfillHost);};return ShadowCss;}();var SafeSelector=/** @class */function(){function SafeSelector(selector){var _this=this;this.placeholders=[];this.index=0;// Replaces attribute selectors with placeholders.
// The WS in [attr="va lue"] would otherwise be interpreted as a selector separator.
selector=selector.replace(/(\[[^\]]*\])/g,function(_,keep){var replaceBy="__ph-"+_this.index+"__";_this.placeholders.push(keep);_this.index++;return replaceBy;});// Replaces the expression in `:nth-child(2n + 1)` with a placeholder.
// WS and "+" would otherwise be interpreted as selector separators.
this._content=selector.replace(/(:nth-[-\w]+)(\([^)]+\))/g,function(_,pseudo,exp){var replaceBy="__ph-"+_this.index+"__";_this.placeholders.push(exp);_this.index++;return pseudo+replaceBy;});}SafeSelector.prototype.restore=function(content){var _this=this;return content.replace(/__ph-(\d+)__/g,function(ph,index){return _this.placeholders[+index];});};SafeSelector.prototype.content=function(){return this._content;};return SafeSelector;}();var _cssContentNextSelectorRe=/polyfill-next-selector[^}]*content:[\s]*?(['"])(.*?)\1[;\s]*}([^{]*?){/gim;var _cssContentRuleRe=/(polyfill-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var _cssContentUnscopedRuleRe=/(polyfill-unscoped-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var _polyfillHost='-shadowcsshost';// note: :host-context pre-processed to -shadowcsshostcontext.
var _polyfillHostContext='-shadowcsscontext';var _parenSuffix=')(?:\\(('+'(?:\\([^)(]*\\)|[^)(]*)+?'+')\\))?([^,{]*)';var _cssColonHostRe=new RegExp('('+_polyfillHost+_parenSuffix,'gim');var _cssColonHostContextRe=new RegExp('('+_polyfillHostContext+_parenSuffix,'gim');var _polyfillHostNoCombinator=_polyfillHost+'-no-combinator';var _polyfillHostNoCombinatorRe=/-shadowcsshost-no-combinator([^\s]*)/;var _shadowDOMSelectorsRe=[/::shadow/g,/::content/g,// Deprecated selectors
/\/shadow-deep\//g,/\/shadow\//g];// The deep combinator is deprecated in the CSS spec
// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.
// see https://github.com/angular/angular/pull/17677
var _shadowDeepSelectors=/(?:>>>)|(?:\/deep\/)|(?:::ng-deep)/g;var _selectorReSuffix='([>\\s~+\[.,{:][\\s\\S]*)?$';var _polyfillHostRe=/-shadowcsshost/gim;var _colonHostRe=/:host/gim;var _colonHostContextRe=/:host-context/gim;var _commentRe=/\/\*\s*[\s\S]*?\*\//g;function stripComments(input){return input.replace(_commentRe,'');}var _commentWithHashRe=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g;function extractCommentsWithHash(input){return input.match(_commentWithHashRe)||[];}var _ruleRe=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g;var _curlyRe=/([{}])/g;var OPEN_CURLY='{';var CLOSE_CURLY='}';var BLOCK_PLACEHOLDER='%BLOCK%';var CssRule=/** @class */function(){function CssRule(selector,content){this.selector=selector;this.content=content;}return CssRule;}();function processRules(input,ruleCallback){var inputWithEscapedBlocks=escapeBlocks(input);var nextBlockIndex=0;return inputWithEscapedBlocks.escapedString.replace(_ruleRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var selector=m[2];var content='';var suffix=m[4];var contentPrefix='';if(suffix&&suffix.startsWith('{'+BLOCK_PLACEHOLDER)){content=inputWithEscapedBlocks.blocks[nextBlockIndex++];suffix=suffix.substring(BLOCK_PLACEHOLDER.length+1);contentPrefix='{';}var rule=ruleCallback(new CssRule(selector,content));return""+m[1]+rule.selector+m[3]+contentPrefix+rule.content+suffix;});}var StringWithEscapedBlocks=/** @class */function(){function StringWithEscapedBlocks(escapedString,blocks){this.escapedString=escapedString;this.blocks=blocks;}return StringWithEscapedBlocks;}();function escapeBlocks(input){var inputParts=input.split(_curlyRe);var resultParts=[];var escapedBlocks=[];var bracketCount=0;var currentBlockParts=[];for(var partIndex=0;partIndex<inputParts.length;partIndex++){var part=inputParts[partIndex];if(part==CLOSE_CURLY){bracketCount--;}if(bracketCount>0){currentBlockParts.push(part);}else{if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);currentBlockParts=[];}resultParts.push(part);}if(part==OPEN_CURLY){bracketCount++;}}if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);}return new StringWithEscapedBlocks(resultParts.join(''),escapedBlocks);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var COMPONENT_VARIABLE='%COMP%';var HOST_ATTR="_nghost-"+COMPONENT_VARIABLE;var CONTENT_ATTR="_ngcontent-"+COMPONENT_VARIABLE;var StylesCompileDependency=/** @class */function(){function StylesCompileDependency(name,moduleUrl,setValue){this.name=name;this.moduleUrl=moduleUrl;this.setValue=setValue;}return StylesCompileDependency;}();exports.StylesCompileDependency=StylesCompileDependency;var CompiledStylesheet=/** @class */function(){function CompiledStylesheet(outputCtx,stylesVar,dependencies,isShimmed,meta){this.outputCtx=outputCtx;this.stylesVar=stylesVar;this.dependencies=dependencies;this.isShimmed=isShimmed;this.meta=meta;}return CompiledStylesheet;}();exports.CompiledStylesheet=CompiledStylesheet;var StyleCompiler=/** @class */function(){function StyleCompiler(_urlResolver){this._urlResolver=_urlResolver;this._shadowCss=new ShadowCss();}StyleCompiler.prototype.compileComponent=function(outputCtx,comp){var template=comp.template;return this._compileStyles(outputCtx,comp,new CompileStylesheetMetadata({styles:template.styles,styleUrls:template.styleUrls,moduleUrl:identifierModuleUrl(comp.type)}),this.needsStyleShim(comp),true);};StyleCompiler.prototype.compileStyles=function(outputCtx,comp,stylesheet,shim){if(shim===void 0){shim=this.needsStyleShim(comp);}return this._compileStyles(outputCtx,comp,stylesheet,shim,false);};StyleCompiler.prototype.needsStyleShim=function(comp){return comp.template.encapsulation===ViewEncapsulation.Emulated;};StyleCompiler.prototype._compileStyles=function(outputCtx,comp,stylesheet,shim,isComponentStylesheet){var _this=this;var styleExpressions=stylesheet.styles.map(function(plainStyle){return literal(_this._shimIfNeeded(plainStyle,shim));});var dependencies=[];stylesheet.styleUrls.forEach(function(styleUrl){var exprIndex=styleExpressions.length;// Note: This placeholder will be filled later.
styleExpressions.push(null);dependencies.push(new StylesCompileDependency(getStylesVarName(null),styleUrl,function(value){return styleExpressions[exprIndex]=outputCtx.importExpr(value);}));});// styles variable contains plain strings and arrays of other styles arrays (recursive),
// so we set its type to dynamic.
var stylesVar=getStylesVarName(isComponentStylesheet?comp:null);var stmt=variable(stylesVar).set(literalArr(styleExpressions,new ArrayType(DYNAMIC_TYPE,[TypeModifier.Const]))).toDeclStmt(null,isComponentStylesheet?[StmtModifier.Final]:[StmtModifier.Final,StmtModifier.Exported]);outputCtx.statements.push(stmt);return new CompiledStylesheet(outputCtx,stylesVar,dependencies,shim,stylesheet);};StyleCompiler.prototype._shimIfNeeded=function(style,shim){return shim?this._shadowCss.shimCssText(style,CONTENT_ATTR,HOST_ATTR):style;};return StyleCompiler;}();exports.StyleCompiler=StyleCompiler;function getStylesVarName(component){var result="styles";if(component){result+="_"+identifierName(component.type);}return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var PRESERVE_WS_ATTR_NAME='ngPreserveWhitespaces';var SKIP_WS_TRIM_TAGS=new Set(['pre','template','textarea','script','style']);// Equivalent to \s with \u00a0 (non-breaking space) excluded.
// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp
var WS_CHARS=" \f\n\r\t\x0B\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF";var NO_WS_REGEXP=new RegExp("[^"+WS_CHARS+"]");var WS_REPLACE_REGEXP=new RegExp("["+WS_CHARS+"]{2,}",'g');function hasPreserveWhitespacesAttr(attrs){return attrs.some(function(attr){return attr.name===PRESERVE_WS_ATTR_NAME;});}/**
 * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:
 * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32
 * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character
 * and later on replaced by a space. We are re-implementing the same idea here.
 */function replaceNgsp(value){// lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE
return value.replace(new RegExp(NGSP_UNICODE,'g'),' ');}/**
 * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:
 * - consider spaces, tabs and new lines as whitespace characters;
 * - drop text nodes consisting of whitespace characters only;
 * - for all other text nodes replace consecutive whitespace characters with one space;
 * - convert &ngsp; pseudo-entity to a single space;
 *
 * Removal and trimming of whitespaces have positive performance impact (less code to generate
 * while compiling templates, faster view creation). At the same time it can be "destructive"
 * in some cases (whitespaces can influence layout). Because of the potential of breaking layout
 * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for
 * whitespace removal. The default option for whitespace removal will be revisited in Angular 6
 * and might be changed to "on" by default.
 */var WhitespaceVisitor=/** @class */function(){function WhitespaceVisitor(){}WhitespaceVisitor.prototype.visitElement=function(element,context){if(SKIP_WS_TRIM_TAGS.has(element.name)||hasPreserveWhitespacesAttr(element.attrs)){// don't descent into elements where we need to preserve whitespaces
// but still visit all attributes to eliminate one used as a market to preserve WS
return new Element(element.name,visitAll(this,element.attrs),element.children,element.sourceSpan,element.startSourceSpan,element.endSourceSpan);}return new Element(element.name,element.attrs,visitAll(this,element.children),element.sourceSpan,element.startSourceSpan,element.endSourceSpan);};WhitespaceVisitor.prototype.visitAttribute=function(attribute,context){return attribute.name!==PRESERVE_WS_ATTR_NAME?attribute:null;};WhitespaceVisitor.prototype.visitText=function(text,context){var isNotBlank=text.value.match(NO_WS_REGEXP);if(isNotBlank){return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP,' '),text.sourceSpan);}return null;};WhitespaceVisitor.prototype.visitComment=function(comment,context){return comment;};WhitespaceVisitor.prototype.visitExpansion=function(expansion,context){return expansion;};WhitespaceVisitor.prototype.visitExpansionCase=function(expansionCase,context){return expansionCase;};return WhitespaceVisitor;}();function removeWhitespaces(htmlAstWithErrors){return new ParseTreeResult(visitAll(new WhitespaceVisitor(),htmlAstWithErrors.rootNodes),htmlAstWithErrors.errors);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // http://cldr.unicode.org/index/cldr-spec/plural-rules
var PLURAL_CASES=['zero','one','two','few','many','other'];/**
 * Expands special forms into elements.
 *
 * For example,
 *
 * ```
 * { messages.length, plural,
 *   =0 {zero}
 *   =1 {one}
 *   other {more than one}
 * }
 * ```
 *
 * will be expanded into
 *
 * ```
 * <ng-container [ngPlural]="messages.length">
 *   <ng-template ngPluralCase="=0">zero</ng-template>
 *   <ng-template ngPluralCase="=1">one</ng-template>
 *   <ng-template ngPluralCase="other">more than one</ng-template>
 * </ng-container>
 * ```
 */function expandNodes(nodes){var expander=new _Expander();return new ExpansionResult(visitAll(expander,nodes),expander.isExpanded,expander.errors);}var ExpansionResult=/** @class */function(){function ExpansionResult(nodes,expanded,errors){this.nodes=nodes;this.expanded=expanded;this.errors=errors;}return ExpansionResult;}();var ExpansionError=/** @class */function(_super){(0,_tslib.__extends)(ExpansionError,_super);function ExpansionError(span,errorMsg){return _super.call(this,span,errorMsg)||this;}return ExpansionError;}(ParseError);/**
 * Expand expansion forms (plural, select) to directives
 *
 * @internal
 */var _Expander=/** @class */function(){function _Expander(){this.isExpanded=false;this.errors=[];}_Expander.prototype.visitElement=function(element,context){return new Element(element.name,element.attrs,visitAll(this,element.children),element.sourceSpan,element.startSourceSpan,element.endSourceSpan);};_Expander.prototype.visitAttribute=function(attribute,context){return attribute;};_Expander.prototype.visitText=function(text,context){return text;};_Expander.prototype.visitComment=function(comment,context){return comment;};_Expander.prototype.visitExpansion=function(icu,context){this.isExpanded=true;return icu.type=='plural'?_expandPluralForm(icu,this.errors):_expandDefaultForm(icu,this.errors);};_Expander.prototype.visitExpansionCase=function(icuCase,context){throw new Error('Should not be reached');};return _Expander;}();// Plural forms are expanded to `NgPlural` and `NgPluralCase`s
function _expandPluralForm(ast,errors){var children=ast.cases.map(function(c){if(PLURAL_CASES.indexOf(c.value)==-1&&!c.value.match(/^=\d+$/)){errors.push(new ExpansionError(c.valueSourceSpan,"Plural cases should be \"=<number>\" or one of "+PLURAL_CASES.join(", ")));}var expansionResult=expandNodes(c.expression);errors.push.apply(errors,(0,_tslib.__spread)(expansionResult.errors));return new Element("ng-template",[new Attribute('ngPluralCase',""+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var switchAttr=new Attribute('[ngPlural]',ast.switchValue,ast.switchValueSourceSpan);return new Element('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}// ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s
function _expandDefaultForm(ast,errors){var children=ast.cases.map(function(c){var expansionResult=expandNodes(c.expression);errors.push.apply(errors,(0,_tslib.__spread)(expansionResult.errors));if(c.value==='other'){// other is the default case when no values match
return new Element("ng-template",[new Attribute('ngSwitchDefault','',c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);}return new Element("ng-template",[new Attribute('ngSwitchCase',""+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var switchAttr=new Attribute('[ngSwitch]',ast.switchValue,ast.switchValueSourceSpan);return new Element('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var PROPERTY_PARTS_SEPARATOR='.';var ATTRIBUTE_PREFIX='attr';var CLASS_PREFIX='class';var STYLE_PREFIX='style';var ANIMATE_PROP_PREFIX='animate-';var BoundPropertyType;(function(BoundPropertyType){BoundPropertyType[BoundPropertyType["DEFAULT"]=0]="DEFAULT";BoundPropertyType[BoundPropertyType["LITERAL_ATTR"]=1]="LITERAL_ATTR";BoundPropertyType[BoundPropertyType["ANIMATION"]=2]="ANIMATION";})(BoundPropertyType||(BoundPropertyType={}));/**
 * Represents a parsed property.
 */var BoundProperty=/** @class */function(){function BoundProperty(name,expression,type,sourceSpan){this.name=name;this.expression=expression;this.type=type;this.sourceSpan=sourceSpan;this.isLiteral=this.type===BoundPropertyType.LITERAL_ATTR;this.isAnimation=this.type===BoundPropertyType.ANIMATION;}return BoundProperty;}();/**
 * Parses bindings in templates and in the directive host area.
 */var BindingParser=/** @class */function(){function BindingParser(_exprParser,_interpolationConfig,_schemaRegistry,pipes,_targetErrors){var _this=this;this._exprParser=_exprParser;this._interpolationConfig=_interpolationConfig;this._schemaRegistry=_schemaRegistry;this._targetErrors=_targetErrors;this.pipesByName=new Map();this._usedPipes=new Map();pipes.forEach(function(pipe){return _this.pipesByName.set(pipe.name,pipe);});}BindingParser.prototype.getUsedPipes=function(){return Array.from(this._usedPipes.values());};BindingParser.prototype.createBoundHostProperties=function(dirMeta,sourceSpan){var _this=this;if(dirMeta.hostProperties){var boundProps_1=[];Object.keys(dirMeta.hostProperties).forEach(function(propName){var expression=dirMeta.hostProperties[propName];if(typeof expression==='string'){_this.parsePropertyBinding(propName,expression,true,sourceSpan,[],boundProps_1);}else{_this._reportError("Value of the host property binding \""+propName+"\" needs to be a string representing an expression but got \""+expression+"\" ("+_typeof(expression)+")",sourceSpan);}});return boundProps_1;}return null;};BindingParser.prototype.createDirectiveHostPropertyAsts=function(dirMeta,elementSelector,sourceSpan){var _this=this;var boundProps=this.createBoundHostProperties(dirMeta,sourceSpan);return boundProps&&boundProps.map(function(prop){return _this.createElementPropertyAst(elementSelector,prop);});};BindingParser.prototype.createDirectiveHostEventAsts=function(dirMeta,sourceSpan){var _this=this;if(dirMeta.hostListeners){var targetEventAsts_1=[];Object.keys(dirMeta.hostListeners).forEach(function(propName){var expression=dirMeta.hostListeners[propName];if(typeof expression==='string'){_this.parseEvent(propName,expression,sourceSpan,[],targetEventAsts_1);}else{_this._reportError("Value of the host listener \""+propName+"\" needs to be a string representing an expression but got \""+expression+"\" ("+_typeof(expression)+")",sourceSpan);}});return targetEventAsts_1;}return null;};BindingParser.prototype.parseInterpolation=function(value,sourceSpan){var sourceInfo=sourceSpan.start.toString();try{var ast=this._exprParser.parseInterpolation(value,sourceInfo,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}};BindingParser.prototype.parseInlineTemplateBinding=function(prefixToken,value,sourceSpan,targetMatchableAttrs,targetProps,targetVars){var bindings=this._parseTemplateBindings(prefixToken,value,sourceSpan);for(var i=0;i<bindings.length;i++){var binding=bindings[i];if(binding.keyIsVar){targetVars.push(new VariableAst(binding.key,binding.name,sourceSpan));}else if(binding.expression){this._parsePropertyAst(binding.key,binding.expression,sourceSpan,targetMatchableAttrs,targetProps);}else{targetMatchableAttrs.push([binding.key,'']);this.parseLiteralAttr(binding.key,null,sourceSpan,targetMatchableAttrs,targetProps);}}};BindingParser.prototype._parseTemplateBindings=function(prefixToken,value,sourceSpan){var _this=this;var sourceInfo=sourceSpan.start.toString();try{var bindingsResult=this._exprParser.parseTemplateBindings(prefixToken,value,sourceInfo);this._reportExpressionParserErrors(bindingsResult.errors,sourceSpan);bindingsResult.templateBindings.forEach(function(binding){if(binding.expression){_this._checkPipes(binding.expression,sourceSpan);}});bindingsResult.warnings.forEach(function(warning){_this._reportError(warning,sourceSpan,ParseErrorLevel.WARNING);});return bindingsResult.templateBindings;}catch(e){this._reportError(""+e,sourceSpan);return[];}};BindingParser.prototype.parseLiteralAttr=function(name,value,sourceSpan,targetMatchableAttrs,targetProps){if(_isAnimationLabel(name)){name=name.substring(1);if(value){this._reportError("Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid."+" Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.",sourceSpan,ParseErrorLevel.ERROR);}this._parseAnimation(name,value,sourceSpan,targetMatchableAttrs,targetProps);}else{targetProps.push(new BoundProperty(name,this._exprParser.wrapLiteralPrimitive(value,''),BoundPropertyType.LITERAL_ATTR,sourceSpan));}};BindingParser.prototype.parsePropertyBinding=function(name,expression,isHost,sourceSpan,targetMatchableAttrs,targetProps){var isAnimationProp=false;if(name.startsWith(ANIMATE_PROP_PREFIX)){isAnimationProp=true;name=name.substring(ANIMATE_PROP_PREFIX.length);}else if(_isAnimationLabel(name)){isAnimationProp=true;name=name.substring(1);}if(isAnimationProp){this._parseAnimation(name,expression,sourceSpan,targetMatchableAttrs,targetProps);}else{this._parsePropertyAst(name,this._parseBinding(expression,isHost,sourceSpan),sourceSpan,targetMatchableAttrs,targetProps);}};BindingParser.prototype.parsePropertyInterpolation=function(name,value,sourceSpan,targetMatchableAttrs,targetProps){var expr=this.parseInterpolation(value,sourceSpan);if(expr){this._parsePropertyAst(name,expr,sourceSpan,targetMatchableAttrs,targetProps);return true;}return false;};BindingParser.prototype._parsePropertyAst=function(name,ast,sourceSpan,targetMatchableAttrs,targetProps){targetMatchableAttrs.push([name,ast.source]);targetProps.push(new BoundProperty(name,ast,BoundPropertyType.DEFAULT,sourceSpan));};BindingParser.prototype._parseAnimation=function(name,expression,sourceSpan,targetMatchableAttrs,targetProps){// This will occur when a @trigger is not paired with an expression.
// For animations it is valid to not have an expression since */void
// states will be applied by angular when the element is attached/detached
var ast=this._parseBinding(expression||'undefined',false,sourceSpan);targetMatchableAttrs.push([name,ast.source]);targetProps.push(new BoundProperty(name,ast,BoundPropertyType.ANIMATION,sourceSpan));};BindingParser.prototype._parseBinding=function(value,isHostBinding,sourceSpan){var sourceInfo=sourceSpan.start.toString();try{var ast=isHostBinding?this._exprParser.parseSimpleBinding(value,sourceInfo,this._interpolationConfig):this._exprParser.parseBinding(value,sourceInfo,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}};BindingParser.prototype.createElementPropertyAst=function(elementSelector,boundProp){if(boundProp.isAnimation){return new BoundElementPropertyAst(boundProp.name,PropertyBindingType.Animation,SecurityContext.NONE,boundProp.expression,null,boundProp.sourceSpan);}var unit=null;var bindingType=undefined;var boundPropertyName=null;var parts=boundProp.name.split(PROPERTY_PARTS_SEPARATOR);var securityContexts=undefined;// Check check for special cases (prefix style, attr, class)
if(parts.length>1){if(parts[0]==ATTRIBUTE_PREFIX){boundPropertyName=parts[1];this._validatePropertyOrAttributeName(boundPropertyName,boundProp.sourceSpan,true);securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,boundPropertyName,true);var nsSeparatorIdx=boundPropertyName.indexOf(':');if(nsSeparatorIdx>-1){var ns=boundPropertyName.substring(0,nsSeparatorIdx);var name_1=boundPropertyName.substring(nsSeparatorIdx+1);boundPropertyName=mergeNsAndName(ns,name_1);}bindingType=PropertyBindingType.Attribute;}else if(parts[0]==CLASS_PREFIX){boundPropertyName=parts[1];bindingType=PropertyBindingType.Class;securityContexts=[SecurityContext.NONE];}else if(parts[0]==STYLE_PREFIX){unit=parts.length>2?parts[2]:null;boundPropertyName=parts[1];bindingType=PropertyBindingType.Style;securityContexts=[SecurityContext.STYLE];}}// If not a special case, use the full property name
if(boundPropertyName===null){boundPropertyName=this._schemaRegistry.getMappedPropName(boundProp.name);securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,boundPropertyName,false);bindingType=PropertyBindingType.Property;this._validatePropertyOrAttributeName(boundPropertyName,boundProp.sourceSpan,false);}return new BoundElementPropertyAst(boundPropertyName,bindingType,securityContexts[0],boundProp.expression,unit,boundProp.sourceSpan);};BindingParser.prototype.parseEvent=function(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){if(_isAnimationLabel(name)){name=name.substr(1);this._parseAnimationEvent(name,expression,sourceSpan,targetEvents);}else{this._parseEvent(name,expression,sourceSpan,targetMatchableAttrs,targetEvents);}};BindingParser.prototype._parseAnimationEvent=function(name,expression,sourceSpan,targetEvents){var matches=splitAtPeriod(name,[name,'']);var eventName=matches[0];var phase=matches[1].toLowerCase();if(phase){switch(phase){case'start':case'done':var ast=this._parseAction(expression,sourceSpan);targetEvents.push(new BoundEventAst(eventName,null,phase,ast,sourceSpan));break;default:this._reportError("The provided animation output phase value \""+phase+"\" for \"@"+eventName+"\" is not supported (use start or done)",sourceSpan);break;}}else{this._reportError("The animation trigger output event (@"+eventName+") is missing its phase value name (start or done are currently supported)",sourceSpan);}};BindingParser.prototype._parseEvent=function(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){// long format: 'target: eventName'
var _a=(0,_tslib.__read)(splitAtColon(name,[null,name]),2),target=_a[0],eventName=_a[1];var ast=this._parseAction(expression,sourceSpan);targetMatchableAttrs.push([name,ast.source]);targetEvents.push(new BoundEventAst(eventName,target,null,ast,sourceSpan));// Don't detect directives for event names for now,
// so don't add the event name to the matchableAttrs
};BindingParser.prototype._parseAction=function(value,sourceSpan){var sourceInfo=sourceSpan.start.toString();try{var ast=this._exprParser.parseAction(value,sourceInfo,this._interpolationConfig);if(ast){this._reportExpressionParserErrors(ast.errors,sourceSpan);}if(!ast||ast.ast instanceof EmptyExpr){this._reportError("Empty expressions are not allowed",sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}};BindingParser.prototype._reportError=function(message,sourceSpan,level){if(level===void 0){level=ParseErrorLevel.ERROR;}this._targetErrors.push(new ParseError(sourceSpan,message,level));};BindingParser.prototype._reportExpressionParserErrors=function(errors,sourceSpan){try{for(var errors_1=(0,_tslib.__values)(errors),errors_1_1=errors_1.next();!errors_1_1.done;errors_1_1=errors_1.next()){var error$$1=errors_1_1.value;this._reportError(error$$1.message,sourceSpan);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(errors_1_1&&!errors_1_1.done&&(_a=errors_1.return))_a.call(errors_1);}finally{if(e_1)throw e_1.error;}}var e_1,_a;};BindingParser.prototype._checkPipes=function(ast,sourceSpan){var _this=this;if(ast){var collector=new PipeCollector();ast.visit(collector);collector.pipes.forEach(function(ast,pipeName){var pipeMeta=_this.pipesByName.get(pipeName);if(!pipeMeta){_this._reportError("The pipe '"+pipeName+"' could not be found",new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start),sourceSpan.start.moveBy(ast.span.end)));}else{_this._usedPipes.set(pipeName,pipeMeta);}});}};/**
     * @param propName the name of the property / attribute
     * @param sourceSpan
     * @param isAttr true when binding to an attribute
     */BindingParser.prototype._validatePropertyOrAttributeName=function(propName,sourceSpan,isAttr){var report=isAttr?this._schemaRegistry.validateAttribute(propName):this._schemaRegistry.validateProperty(propName);if(report.error){this._reportError(report.msg,sourceSpan,ParseErrorLevel.ERROR);}};return BindingParser;}();var PipeCollector=/** @class */function(_super){(0,_tslib.__extends)(PipeCollector,_super);function PipeCollector(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.pipes=new Map();return _this;}PipeCollector.prototype.visitPipe=function(ast,context){this.pipes.set(ast.name,ast);ast.exp.visit(this);this.visitAll(ast.args,context);return null;};return PipeCollector;}(RecursiveAstVisitor);function _isAnimationLabel(name){return name[0]=='@';}function calcPossibleSecurityContexts(registry,selector,propName,isAttribute){var ctxs=[];CssSelector.parse(selector).forEach(function(selector){var elementNames=selector.element?[selector.element]:registry.allKnownElementNames();var notElementNames=new Set(selector.notSelectors.filter(function(selector){return selector.isElementSelector();}).map(function(selector){return selector.element;}));var possibleElementNames=elementNames.filter(function(elementName){return!notElementNames.has(elementName);});ctxs.push.apply(ctxs,(0,_tslib.__spread)(possibleElementNames.map(function(elementName){return registry.securityContext(elementName,propName,isAttribute);})));});return ctxs.length===0?[SecurityContext.NONE]:Array.from(new Set(ctxs)).sort();}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var BIND_NAME_REGEXP=/^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;// Group 1 = "bind-"
var KW_BIND_IDX=1;// Group 2 = "let-"
var KW_LET_IDX=2;// Group 3 = "ref-/#"
var KW_REF_IDX=3;// Group 4 = "on-"
var KW_ON_IDX=4;// Group 5 = "bindon-"
var KW_BINDON_IDX=5;// Group 6 = "@"
var KW_AT_IDX=6;// Group 7 = the identifier after "bind-", "let-", "ref-/#", "on-", "bindon-" or "@"
var IDENT_KW_IDX=7;// Group 8 = identifier inside [()]
var IDENT_BANANA_BOX_IDX=8;// Group 9 = identifier inside []
var IDENT_PROPERTY_IDX=9;// Group 10 = identifier inside ()
var IDENT_EVENT_IDX=10;var TEMPLATE_ATTR_PREFIX='*';var CLASS_ATTR='class';var TEXT_CSS_SELECTOR=CssSelector.parse('*')[0];var TemplateParseError=/** @class */function(_super){(0,_tslib.__extends)(TemplateParseError,_super);function TemplateParseError(message,span,level){return _super.call(this,span,message,level)||this;}return TemplateParseError;}(ParseError);exports.TemplateParseError=TemplateParseError;var TemplateParseResult=/** @class */function(){function TemplateParseResult(templateAst,usedPipes,errors){this.templateAst=templateAst;this.usedPipes=usedPipes;this.errors=errors;}return TemplateParseResult;}();exports.TemplateParseResult=TemplateParseResult;var TemplateParser=/** @class */function(){function TemplateParser(_config,_reflector,_exprParser,_schemaRegistry,_htmlParser,_console,transforms){this._config=_config;this._reflector=_reflector;this._exprParser=_exprParser;this._schemaRegistry=_schemaRegistry;this._htmlParser=_htmlParser;this._console=_console;this.transforms=transforms;}Object.defineProperty(TemplateParser.prototype,"expressionParser",{get:function get(){return this._exprParser;},enumerable:true,configurable:true});TemplateParser.prototype.parse=function(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces){var result=this.tryParse(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces);var warnings=result.errors.filter(function(error$$1){return error$$1.level===ParseErrorLevel.WARNING;});var errors=result.errors.filter(function(error$$1){return error$$1.level===ParseErrorLevel.ERROR;});if(warnings.length>0){this._console.warn("Template parse warnings:\n"+warnings.join('\n'));}if(errors.length>0){var errorString=errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString,errors);}return{template:result.templateAst,pipes:result.usedPipes};};TemplateParser.prototype.tryParse=function(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces){var htmlParseResult=typeof template==='string'?this._htmlParser.parse(template,templateUrl,true,this.getInterpolationConfig(component)):template;if(!preserveWhitespaces){htmlParseResult=removeWhitespaces(htmlParseResult);}return this.tryParseHtml(this.expandHtml(htmlParseResult),component,directives,pipes,schemas);};TemplateParser.prototype.tryParseHtml=function(htmlAstWithErrors,component,directives,pipes,schemas){var result;var errors=htmlAstWithErrors.errors;var usedPipes=[];if(htmlAstWithErrors.rootNodes.length>0){var uniqDirectives=removeSummaryDuplicates(directives);var uniqPipes=removeSummaryDuplicates(pipes);var providerViewContext=new ProviderViewContext(this._reflector,component);var interpolationConfig=undefined;if(component.template&&component.template.interpolation){interpolationConfig={start:component.template.interpolation[0],end:component.template.interpolation[1]};}var bindingParser=new BindingParser(this._exprParser,interpolationConfig,this._schemaRegistry,uniqPipes,errors);var parseVisitor=new TemplateParseVisitor(this._reflector,this._config,providerViewContext,uniqDirectives,bindingParser,this._schemaRegistry,schemas,errors);result=visitAll(parseVisitor,htmlAstWithErrors.rootNodes,EMPTY_ELEMENT_CONTEXT);errors.push.apply(errors,(0,_tslib.__spread)(providerViewContext.errors));usedPipes.push.apply(usedPipes,(0,_tslib.__spread)(bindingParser.getUsedPipes()));}else{result=[];}this._assertNoReferenceDuplicationOnTemplate(result,errors);if(errors.length>0){return new TemplateParseResult(result,usedPipes,errors);}if(this.transforms){this.transforms.forEach(function(transform){result=templateVisitAll(transform,result);});}return new TemplateParseResult(result,usedPipes,errors);};TemplateParser.prototype.expandHtml=function(htmlAstWithErrors,forced){if(forced===void 0){forced=false;}var errors=htmlAstWithErrors.errors;if(errors.length==0||forced){// Transform ICU messages to angular directives
var expandedHtmlAst=expandNodes(htmlAstWithErrors.rootNodes);errors.push.apply(errors,(0,_tslib.__spread)(expandedHtmlAst.errors));htmlAstWithErrors=new ParseTreeResult(expandedHtmlAst.nodes,errors);}return htmlAstWithErrors;};TemplateParser.prototype.getInterpolationConfig=function(component){if(component.template){return InterpolationConfig.fromArray(component.template.interpolation);}return undefined;};/** @internal */TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate=function(result,errors){var existingReferences=[];result.filter(function(element){return!!element.references;}).forEach(function(element){return element.references.forEach(function(reference){var name=reference.name;if(existingReferences.indexOf(name)<0){existingReferences.push(name);}else{var error$$1=new TemplateParseError("Reference \"#"+name+"\" is defined several times",reference.sourceSpan,ParseErrorLevel.ERROR);errors.push(error$$1);}});});};return TemplateParser;}();exports.TemplateParser=TemplateParser;var TemplateParseVisitor=/** @class */function(){function TemplateParseVisitor(reflector,config,providerViewContext,directives,_bindingParser,_schemaRegistry,_schemas,_targetErrors){var _this=this;this.reflector=reflector;this.config=config;this.providerViewContext=providerViewContext;this._bindingParser=_bindingParser;this._schemaRegistry=_schemaRegistry;this._schemas=_schemas;this._targetErrors=_targetErrors;this.selectorMatcher=new SelectorMatcher();this.directivesIndex=new Map();this.ngContentCount=0;// Note: queries start with id 1 so we can use the number in a Bloom filter!
this.contentQueryStartId=providerViewContext.component.viewQueries.length+1;directives.forEach(function(directive,index){var selector=CssSelector.parse(directive.selector);_this.selectorMatcher.addSelectables(selector,directive);_this.directivesIndex.set(directive,index);});}TemplateParseVisitor.prototype.visitExpansion=function(expansion,context){return null;};TemplateParseVisitor.prototype.visitExpansionCase=function(expansionCase,context){return null;};TemplateParseVisitor.prototype.visitText=function(text,parent){var ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR);var valueNoNgsp=replaceNgsp(text.value);var expr=this._bindingParser.parseInterpolation(valueNoNgsp,text.sourceSpan);return expr?new BoundTextAst(expr,ngContentIndex,text.sourceSpan):new TextAst(valueNoNgsp,ngContentIndex,text.sourceSpan);};TemplateParseVisitor.prototype.visitAttribute=function(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);};TemplateParseVisitor.prototype.visitComment=function(comment,context){return null;};TemplateParseVisitor.prototype.visitElement=function(element,parent){var _this=this;var queryStartIndex=this.contentQueryStartId;var nodeName=element.name;var preparsedElement=preparseElement(element);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE){// Skipping <script> for security reasons
// Skipping <style> as we already processed them
// in the StyleCompiler
return null;}if(preparsedElement.type===PreparsedElementType.STYLESHEET&&isStyleUrlResolvable(preparsedElement.hrefAttr)){// Skipping stylesheets with either relative urls or package scheme as we already processed
// them in the StyleCompiler
return null;}var matchableAttrs=[];var elementOrDirectiveProps=[];var elementOrDirectiveRefs=[];var elementVars=[];var events=[];var templateElementOrDirectiveProps=[];var templateMatchableAttrs=[];var templateElementVars=[];var hasInlineTemplates=false;var attrs=[];var isTemplateElement=isNgTemplate(element.name);element.attrs.forEach(function(attr){var hasBinding=_this._parseAttr(isTemplateElement,attr,matchableAttrs,elementOrDirectiveProps,events,elementOrDirectiveRefs,elementVars);var templateBindingsSource;var prefixToken;var normalizedName=_this._normalizeAttributeName(attr.name);if(normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)){templateBindingsSource=attr.value;prefixToken=normalizedName.substring(TEMPLATE_ATTR_PREFIX.length)+':';}var hasTemplateBinding=templateBindingsSource!=null;if(hasTemplateBinding){if(hasInlineTemplates){_this._reportError("Can't have multiple template bindings on one element. Use only one attribute prefixed with *",attr.sourceSpan);}hasInlineTemplates=true;_this._bindingParser.parseInlineTemplateBinding(prefixToken,templateBindingsSource,attr.sourceSpan,templateMatchableAttrs,templateElementOrDirectiveProps,templateElementVars);}if(!hasBinding&&!hasTemplateBinding){// don't include the bindings as attributes as well in the AST
attrs.push(_this.visitAttribute(attr,null));matchableAttrs.push([attr.name,attr.value]);}});var elementCssSelector=createElementCssSelector(nodeName,matchableAttrs);var _a=this._parseDirectives(this.selectorMatcher,elementCssSelector),directiveMetas=_a.directives,matchElement=_a.matchElement;var references=[];var boundDirectivePropNames=new Set();var directiveAsts=this._createDirectiveAsts(isTemplateElement,element.name,directiveMetas,elementOrDirectiveProps,elementOrDirectiveRefs,element.sourceSpan,references,boundDirectivePropNames);var elementProps=this._createElementPropertyAsts(element.name,elementOrDirectiveProps,boundDirectivePropNames);var isViewRoot=parent.isTemplateElement||hasInlineTemplates;var providerContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,isViewRoot,directiveAsts,attrs,references,isTemplateElement,queryStartIndex,element.sourceSpan);var children=visitAll(preparsedElement.nonBindable?NON_BINDABLE_VISITOR:this,element.children,ElementContext.create(isTemplateElement,directiveAsts,isTemplateElement?parent.providerContext:providerContext));providerContext.afterElement();// Override the actual selector when the `ngProjectAs` attribute is provided
var projectionSelector=preparsedElement.projectAs!=null?CssSelector.parse(preparsedElement.projectAs)[0]:elementCssSelector;var ngContentIndex=parent.findNgContentIndex(projectionSelector);var parsedElement;if(preparsedElement.type===PreparsedElementType.NG_CONTENT){if(element.children&&!element.children.every(_isEmptyTextNode)){this._reportError("<ng-content> element cannot have content.",element.sourceSpan);}parsedElement=new NgContentAst(this.ngContentCount++,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else if(isTemplateElement){this._assertAllEventsPublishedByDirectives(directiveAsts,events);this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts,elementProps,element.sourceSpan);parsedElement=new EmbeddedTemplateAst(attrs,events,references,elementVars,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else{this._assertElementExists(matchElement,element);this._assertOnlyOneComponent(directiveAsts,element.sourceSpan);var ngContentIndex_1=hasInlineTemplates?null:parent.findNgContentIndex(projectionSelector);parsedElement=new ElementAst(nodeName,attrs,elementProps,events,references,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:ngContentIndex_1,element.sourceSpan,element.endSourceSpan||null);}if(hasInlineTemplates){var templateQueryStartIndex=this.contentQueryStartId;var templateSelector=createElementCssSelector('ng-template',templateMatchableAttrs);var templateDirectiveMetas=this._parseDirectives(this.selectorMatcher,templateSelector).directives;var templateBoundDirectivePropNames=new Set();var templateDirectiveAsts=this._createDirectiveAsts(true,element.name,templateDirectiveMetas,templateElementOrDirectiveProps,[],element.sourceSpan,[],templateBoundDirectivePropNames);var templateElementProps=this._createElementPropertyAsts(element.name,templateElementOrDirectiveProps,templateBoundDirectivePropNames);this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts,templateElementProps,element.sourceSpan);var templateProviderContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,parent.isTemplateElement,templateDirectiveAsts,[],[],true,templateQueryStartIndex,element.sourceSpan);templateProviderContext.afterElement();parsedElement=new EmbeddedTemplateAst([],[],[],templateElementVars,templateProviderContext.transformedDirectiveAsts,templateProviderContext.transformProviders,templateProviderContext.transformedHasViewContainer,templateProviderContext.queryMatches,[parsedElement],ngContentIndex,element.sourceSpan);}return parsedElement;};TemplateParseVisitor.prototype._parseAttr=function(isTemplateElement,attr,targetMatchableAttrs,targetProps,targetEvents,targetRefs,targetVars){var name=this._normalizeAttributeName(attr.name);var value=attr.value;var srcSpan=attr.sourceSpan;var bindParts=name.match(BIND_NAME_REGEXP);var hasBinding=false;if(bindParts!==null){hasBinding=true;if(bindParts[KW_BIND_IDX]!=null){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[KW_LET_IDX]){if(isTemplateElement){var identifier=bindParts[IDENT_KW_IDX];this._parseVariable(identifier,value,srcSpan,targetVars);}else{this._reportError("\"let-\" is only supported on ng-template elements.",srcSpan);}}else if(bindParts[KW_REF_IDX]){var identifier=bindParts[IDENT_KW_IDX];this._parseReference(identifier,value,srcSpan,targetRefs);}else if(bindParts[KW_ON_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}else if(bindParts[KW_BINDON_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_KW_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}else if(bindParts[KW_AT_IDX]){this._bindingParser.parseLiteralAttr(name,value,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_BANANA_BOX_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}else if(bindParts[IDENT_PROPERTY_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_EVENT_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}}else{hasBinding=this._bindingParser.parsePropertyInterpolation(name,value,srcSpan,targetMatchableAttrs,targetProps);}if(!hasBinding){this._bindingParser.parseLiteralAttr(name,value,srcSpan,targetMatchableAttrs,targetProps);}return hasBinding;};TemplateParseVisitor.prototype._normalizeAttributeName=function(attrName){return /^data-/i.test(attrName)?attrName.substring(5):attrName;};TemplateParseVisitor.prototype._parseVariable=function(identifier,value,sourceSpan,targetVars){if(identifier.indexOf('-')>-1){this._reportError("\"-\" is not allowed in variable names",sourceSpan);}targetVars.push(new VariableAst(identifier,value,sourceSpan));};TemplateParseVisitor.prototype._parseReference=function(identifier,value,sourceSpan,targetRefs){if(identifier.indexOf('-')>-1){this._reportError("\"-\" is not allowed in reference names",sourceSpan);}targetRefs.push(new ElementOrDirectiveRef(identifier,value,sourceSpan));};TemplateParseVisitor.prototype._parseAssignmentEvent=function(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){this._bindingParser.parseEvent(name+"Change",expression+"=$event",sourceSpan,targetMatchableAttrs,targetEvents);};TemplateParseVisitor.prototype._parseDirectives=function(selectorMatcher,elementCssSelector){var _this=this;// Need to sort the directives so that we get consistent results throughout,
// as selectorMatcher uses Maps inside.
// Also deduplicate directives as they might match more than one time!
var directives=new Array(this.directivesIndex.size);// Whether any directive selector matches on the element name
var matchElement=false;selectorMatcher.match(elementCssSelector,function(selector,directive){directives[_this.directivesIndex.get(directive)]=directive;matchElement=matchElement||selector.hasElementSelector();});return{directives:directives.filter(function(dir){return!!dir;}),matchElement:matchElement};};TemplateParseVisitor.prototype._createDirectiveAsts=function(isTemplateElement,elementName,directives,props,elementOrDirectiveRefs,elementSourceSpan,targetReferences,targetBoundDirectivePropNames){var _this=this;var matchedReferences=new Set();var component=null;var directiveAsts=directives.map(function(directive){var sourceSpan=new ParseSourceSpan(elementSourceSpan.start,elementSourceSpan.end,"Directive "+identifierName(directive.type));if(directive.isComponent){component=directive;}var directiveProperties=[];var hostProperties=_this._bindingParser.createDirectiveHostPropertyAsts(directive,elementName,sourceSpan);// Note: We need to check the host properties here as well,
// as we don't know the element name in the DirectiveWrapperCompiler yet.
hostProperties=_this._checkPropertiesInSchema(elementName,hostProperties);var hostEvents=_this._bindingParser.createDirectiveHostEventAsts(directive,sourceSpan);_this._createDirectivePropertyAsts(directive.inputs,props,directiveProperties,targetBoundDirectivePropNames);elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length===0&&directive.isComponent||elOrDirRef.isReferenceToDirective(directive)){targetReferences.push(new ReferenceAst(elOrDirRef.name,createTokenForReference(directive.type.reference),elOrDirRef.value,elOrDirRef.sourceSpan));matchedReferences.add(elOrDirRef.name);}});var contentQueryStartId=_this.contentQueryStartId;_this.contentQueryStartId+=directive.queries.length;return new DirectiveAst(directive,directiveProperties,hostProperties,hostEvents,contentQueryStartId,sourceSpan);});elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length>0){if(!matchedReferences.has(elOrDirRef.name)){_this._reportError("There is no directive with \"exportAs\" set to \""+elOrDirRef.value+"\"",elOrDirRef.sourceSpan);}}else if(!component){var refToken=null;if(isTemplateElement){refToken=createTokenForExternalReference(_this.reflector,Identifiers.TemplateRef);}targetReferences.push(new ReferenceAst(elOrDirRef.name,refToken,elOrDirRef.value,elOrDirRef.sourceSpan));}});return directiveAsts;};TemplateParseVisitor.prototype._createDirectivePropertyAsts=function(directiveProperties,boundProps,targetBoundDirectiveProps,targetBoundDirectivePropNames){if(directiveProperties){var boundPropsByName_1=new Map();boundProps.forEach(function(boundProp){var prevValue=boundPropsByName_1.get(boundProp.name);if(!prevValue||prevValue.isLiteral){// give [a]="b" a higher precedence than a="b" on the same element
boundPropsByName_1.set(boundProp.name,boundProp);}});Object.keys(directiveProperties).forEach(function(dirProp){var elProp=directiveProperties[dirProp];var boundProp=boundPropsByName_1.get(elProp);// Bindings are optional, so this binding only needs to be set up if an expression is given.
if(boundProp){targetBoundDirectivePropNames.add(boundProp.name);if(!isEmptyExpression(boundProp.expression)){targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp,boundProp.name,boundProp.expression,boundProp.sourceSpan));}}});}};TemplateParseVisitor.prototype._createElementPropertyAsts=function(elementName,props,boundDirectivePropNames){var _this=this;var boundElementProps=[];props.forEach(function(prop){if(!prop.isLiteral&&!boundDirectivePropNames.has(prop.name)){boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName,prop));}});return this._checkPropertiesInSchema(elementName,boundElementProps);};TemplateParseVisitor.prototype._findComponentDirectives=function(directives){return directives.filter(function(directive){return directive.directive.isComponent;});};TemplateParseVisitor.prototype._findComponentDirectiveNames=function(directives){return this._findComponentDirectives(directives).map(function(directive){return identifierName(directive.directive.type);});};TemplateParseVisitor.prototype._assertOnlyOneComponent=function(directives,sourceSpan){var componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>1){this._reportError("More than one component matched on this element.\n"+"Make sure that only one component's selector can match a given element.\n"+("Conflicting components: "+componentTypeNames.join(',')),sourceSpan);}};/**
     * Make sure that non-angular tags conform to the schemas.
     *
     * Note: An element is considered an angular tag when at least one directive selector matches the
     * tag name.
     *
     * @param matchElement Whether any directive has matched on the tag name
     * @param element the html element
     */TemplateParseVisitor.prototype._assertElementExists=function(matchElement,element){var elName=element.name.replace(/^:xhtml:/,'');if(!matchElement&&!this._schemaRegistry.hasElement(elName,this._schemas)){var errorMsg="'"+elName+"' is not a known element:\n";errorMsg+="1. If '"+elName+"' is an Angular component, then verify that it is part of this module.\n";if(elName.indexOf('-')>-1){errorMsg+="2. If '"+elName+"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.";}else{errorMsg+="2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}this._reportError(errorMsg,element.sourceSpan);}};TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate=function(directives,elementProps,sourceSpan){var _this=this;var componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>0){this._reportError("Components on an embedded template: "+componentTypeNames.join(','),sourceSpan);}elementProps.forEach(function(prop){_this._reportError("Property binding "+prop.name+" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".",sourceSpan);});};TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives=function(directives,events){var _this=this;var allDirectiveEvents=new Set();directives.forEach(function(directive){Object.keys(directive.directive.outputs).forEach(function(k){var eventName=directive.directive.outputs[k];allDirectiveEvents.add(eventName);});});events.forEach(function(event){if(event.target!=null||!allDirectiveEvents.has(event.name)){_this._reportError("Event binding "+event.fullName+" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".",event.sourceSpan);}});};TemplateParseVisitor.prototype._checkPropertiesInSchema=function(elementName,boundProps){var _this=this;// Note: We can't filter out empty expressions before this method,
// as we still want to validate them!
return boundProps.filter(function(boundProp){if(boundProp.type===PropertyBindingType.Property&&!_this._schemaRegistry.hasProperty(elementName,boundProp.name,_this._schemas)){var errorMsg="Can't bind to '"+boundProp.name+"' since it isn't a known property of '"+elementName+"'.";if(elementName.startsWith('ng-')){errorMsg+="\n1. If '"+boundProp.name+"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component."+"\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}else if(elementName.indexOf('-')>-1){errorMsg+="\n1. If '"+elementName+"' is an Angular component and it has '"+boundProp.name+"' input, then verify that it is part of this module."+("\n2. If '"+elementName+"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.")+"\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}_this._reportError(errorMsg,boundProp.sourceSpan);}return!isEmptyExpression(boundProp.value);});};TemplateParseVisitor.prototype._reportError=function(message,sourceSpan,level){if(level===void 0){level=ParseErrorLevel.ERROR;}this._targetErrors.push(new ParseError(sourceSpan,message,level));};return TemplateParseVisitor;}();var NonBindableVisitor=/** @class */function(){function NonBindableVisitor(){}NonBindableVisitor.prototype.visitElement=function(ast,parent){var preparsedElement=preparseElement(ast);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE||preparsedElement.type===PreparsedElementType.STYLESHEET){// Skipping <script> for security reasons
// Skipping <style> and stylesheets as we already processed them
// in the StyleCompiler
return null;}var attrNameAndValues=ast.attrs.map(function(attr){return[attr.name,attr.value];});var selector=createElementCssSelector(ast.name,attrNameAndValues);var ngContentIndex=parent.findNgContentIndex(selector);var children=visitAll(this,ast.children,EMPTY_ELEMENT_CONTEXT);return new ElementAst(ast.name,visitAll(this,ast.attrs),[],[],[],[],[],false,[],children,ngContentIndex,ast.sourceSpan,ast.endSourceSpan);};NonBindableVisitor.prototype.visitComment=function(comment,context){return null;};NonBindableVisitor.prototype.visitAttribute=function(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);};NonBindableVisitor.prototype.visitText=function(text,parent){var ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR);return new TextAst(text.value,ngContentIndex,text.sourceSpan);};NonBindableVisitor.prototype.visitExpansion=function(expansion,context){return expansion;};NonBindableVisitor.prototype.visitExpansionCase=function(expansionCase,context){return expansionCase;};return NonBindableVisitor;}();/**
 * A reference to an element or directive in a template. E.g., the reference in this template:
 *
 * <div #myMenu="coolMenu">
 *
 * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}
 */var ElementOrDirectiveRef=/** @class */function(){function ElementOrDirectiveRef(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}/** Gets whether this is a reference to the given directive. */ElementOrDirectiveRef.prototype.isReferenceToDirective=function(directive){return splitExportAs(directive.exportAs).indexOf(this.value)!==-1;};return ElementOrDirectiveRef;}();/** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */function splitExportAs(exportAs){return exportAs?exportAs.split(',').map(function(e){return e.trim();}):[];}function splitClasses(classAttrValue){return classAttrValue.trim().split(/\s+/g);}var ElementContext=/** @class */function(){function ElementContext(isTemplateElement,_ngContentIndexMatcher,_wildcardNgContentIndex,providerContext){this.isTemplateElement=isTemplateElement;this._ngContentIndexMatcher=_ngContentIndexMatcher;this._wildcardNgContentIndex=_wildcardNgContentIndex;this.providerContext=providerContext;}ElementContext.create=function(isTemplateElement,directives,providerContext){var matcher=new SelectorMatcher();var wildcardNgContentIndex=null;var component=directives.find(function(directive){return directive.directive.isComponent;});if(component){var ngContentSelectors=component.directive.template.ngContentSelectors;for(var i=0;i<ngContentSelectors.length;i++){var selector=ngContentSelectors[i];if(selector==='*'){wildcardNgContentIndex=i;}else{matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]),i);}}}return new ElementContext(isTemplateElement,matcher,wildcardNgContentIndex,providerContext);};ElementContext.prototype.findNgContentIndex=function(selector){var ngContentIndices=[];this._ngContentIndexMatcher.match(selector,function(selector,ngContentIndex){ngContentIndices.push(ngContentIndex);});ngContentIndices.sort();if(this._wildcardNgContentIndex!=null){ngContentIndices.push(this._wildcardNgContentIndex);}return ngContentIndices.length>0?ngContentIndices[0]:null;};return ElementContext;}();function createElementCssSelector(elementName,attributes){var cssSelector=new CssSelector();var elNameNoNs=splitNsName(elementName)[1];cssSelector.setElement(elNameNoNs);for(var i=0;i<attributes.length;i++){var attrName=attributes[i][0];var attrNameNoNs=splitNsName(attrName)[1];var attrValue=attributes[i][1];cssSelector.addAttribute(attrNameNoNs,attrValue);if(attrName.toLowerCase()==CLASS_ATTR){var classes=splitClasses(attrValue);classes.forEach(function(className){return cssSelector.addClassName(className);});}}return cssSelector;}var EMPTY_ELEMENT_CONTEXT=new ElementContext(true,new SelectorMatcher(),null,null);var NON_BINDABLE_VISITOR=new NonBindableVisitor();function _isEmptyTextNode(node){return node instanceof Text&&node.value.trim().length==0;}function removeSummaryDuplicates(items){var map=new Map();items.forEach(function(item){if(!map.get(item.type.reference)){map.set(item.type.reference,item);}});return Array.from(map.values());}function isEmptyExpression(ast){if(ast instanceof ASTWithSource){ast=ast.ast;}return ast instanceof EmptyExpr;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EventHandlerVars=/** @class */function(){function EventHandlerVars(){}EventHandlerVars.event=variable('$event');return EventHandlerVars;}();var ConvertActionBindingResult=/** @class */function(){function ConvertActionBindingResult(/**
     * Render2 compatible statements,
     */stmts,/**
     * Variable name used with render2 compatible statements.
     */allowDefault){this.stmts=stmts;this.allowDefault=allowDefault;/**
         * This is bit of a hack. It converts statements which render2 expects to statements which are
         * expected by render3.
         *
         * Example: `<div click="doSomething($event)">` will generate:
         *
         * Render3:
         * ```
         * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);
         * return pd_b;
         * ```
         *
         * but render2 expects:
         * ```
         * return ctx.doSomething($event);
         * ```
         */ // TODO(misko): remove this hack once we no longer support ViewEngine.
this.render3Stmts=stmts.map(function(statement){if(statement instanceof DeclareVarStmt&&statement.name==allowDefault.name&&statement.value instanceof BinaryOperatorExpr){var lhs=statement.value.lhs;return new ReturnStatement(lhs.value);}return statement;});}return ConvertActionBindingResult;}();/**
 * Converts the given expression AST into an executable output AST, assuming the expression is
 * used in an action binding (e.g. an event handler).
 */function convertActionBinding(localResolver,implicitReceiver,action,bindingId,interpolationFunction){if(!localResolver){localResolver=new DefaultLocalResolver();}var actionWithoutBuiltins=convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){// Note: no caching for literal arrays in actions.
return function(args){return literalArr(args);};},createLiteralMapConverter:function createLiteralMapConverter(keys){// Note: no caching for literal maps in actions.
return function(values){var entries=keys.map(function(k,i){return{key:k.key,value:values[i],quoted:k.quoted};});return literalMap(entries);};},createPipeConverter:function createPipeConverter(name){throw new Error("Illegal State: Actions are not allowed to contain pipes. Pipe: "+name);}},action);var visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId,interpolationFunction);var actionStmts=[];flattenStatements(actionWithoutBuiltins.visit(visitor,_Mode.Statement),actionStmts);prependTemporaryDecls(visitor.temporaryCount,bindingId,actionStmts);var lastIndex=actionStmts.length-1;var preventDefaultVar=null;if(lastIndex>=0){var lastStatement=actionStmts[lastIndex];var returnExpr=convertStmtIntoExpression(lastStatement);if(returnExpr){// Note: We need to cast the result of the method call to dynamic,
// as it might be a void method!
preventDefaultVar=createPreventDefaultVar(bindingId);actionStmts[lastIndex]=preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false))).toDeclStmt(null,[StmtModifier.Final]);}}return new ConvertActionBindingResult(actionStmts,preventDefaultVar);}function convertPropertyBindingBuiltins(converterFactory,ast){return convertBuiltins(converterFactory,ast);}var ConvertPropertyBindingResult=/** @class */function(){function ConvertPropertyBindingResult(stmts,currValExpr){this.stmts=stmts;this.currValExpr=currValExpr;}return ConvertPropertyBindingResult;}();var BindingForm;(function(BindingForm){// The general form of binding expression, supports all expressions.
BindingForm[BindingForm["General"]=0]="General";// Try to generate a simple binding (no temporaries or statements)
// otherwise generate a general binding
BindingForm[BindingForm["TrySimple"]=1]="TrySimple";})(BindingForm||(BindingForm={}));/**
 * Converts the given expression AST into an executable output AST, assuming the expression
 * is used in property binding. The expression has to be preprocessed via
 * `convertPropertyBindingBuiltins`.
 */function convertPropertyBinding(localResolver,implicitReceiver,expressionWithoutBuiltins,bindingId,form,interpolationFunction){if(!localResolver){localResolver=new DefaultLocalResolver();}var currValExpr=createCurrValueExpr(bindingId);var stmts=[];var visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId,interpolationFunction);var outputExpr=expressionWithoutBuiltins.visit(visitor,_Mode.Expression);if(visitor.temporaryCount){for(var i=0;i<visitor.temporaryCount;i++){stmts.push(temporaryDeclaration(bindingId,i));}}else if(form==BindingForm.TrySimple){return new ConvertPropertyBindingResult([],outputExpr);}stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE,[StmtModifier.Final]));return new ConvertPropertyBindingResult(stmts,currValExpr);}function convertBuiltins(converterFactory,ast){var visitor=new _BuiltinAstConverter(converterFactory);return ast.visit(visitor);}function temporaryName(bindingId,temporaryNumber){return"tmp_"+bindingId+"_"+temporaryNumber;}function temporaryDeclaration(bindingId,temporaryNumber){return new DeclareVarStmt(temporaryName(bindingId,temporaryNumber),NULL_EXPR);}function prependTemporaryDecls(temporaryCount,bindingId,statements){for(var i=temporaryCount-1;i>=0;i--){statements.unshift(temporaryDeclaration(bindingId,i));}}var _Mode;(function(_Mode){_Mode[_Mode["Statement"]=0]="Statement";_Mode[_Mode["Expression"]=1]="Expression";})(_Mode||(_Mode={}));function ensureStatementMode(mode,ast){if(mode!==_Mode.Statement){throw new Error("Expected a statement, but saw "+ast);}}function ensureExpressionMode(mode,ast){if(mode!==_Mode.Expression){throw new Error("Expected an expression, but saw "+ast);}}function convertToStatementIfNeeded(mode,expr){if(mode===_Mode.Statement){return expr.toStmt();}else{return expr;}}var _BuiltinAstConverter=/** @class */function(_super){(0,_tslib.__extends)(_BuiltinAstConverter,_super);function _BuiltinAstConverter(_converterFactory){var _this=_super.call(this)||this;_this._converterFactory=_converterFactory;return _this;}_BuiltinAstConverter.prototype.visitPipe=function(ast,context){var _this=this;var args=(0,_tslib.__spread)([ast.exp],ast.args).map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createPipeConverter(ast.name,args.length));};_BuiltinAstConverter.prototype.visitLiteralArray=function(ast,context){var _this=this;var args=ast.expressions.map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createLiteralArrayConverter(ast.expressions.length));};_BuiltinAstConverter.prototype.visitLiteralMap=function(ast,context){var _this=this;var args=ast.values.map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createLiteralMapConverter(ast.keys));};return _BuiltinAstConverter;}(AstTransformer);var _AstToIrVisitor=/** @class */function(){function _AstToIrVisitor(_localResolver,_implicitReceiver,bindingId,interpolationFunction){this._localResolver=_localResolver;this._implicitReceiver=_implicitReceiver;this.bindingId=bindingId;this.interpolationFunction=interpolationFunction;this._nodeMap=new Map();this._resultMap=new Map();this._currentTemporary=0;this.temporaryCount=0;}_AstToIrVisitor.prototype.visitBinary=function(ast,mode){var op;switch(ast.operation){case'+':op=BinaryOperator.Plus;break;case'-':op=BinaryOperator.Minus;break;case'*':op=BinaryOperator.Multiply;break;case'/':op=BinaryOperator.Divide;break;case'%':op=BinaryOperator.Modulo;break;case'&&':op=BinaryOperator.And;break;case'||':op=BinaryOperator.Or;break;case'==':op=BinaryOperator.Equals;break;case'!=':op=BinaryOperator.NotEquals;break;case'===':op=BinaryOperator.Identical;break;case'!==':op=BinaryOperator.NotIdentical;break;case'<':op=BinaryOperator.Lower;break;case'>':op=BinaryOperator.Bigger;break;case'<=':op=BinaryOperator.LowerEquals;break;case'>=':op=BinaryOperator.BiggerEquals;break;default:throw new Error("Unsupported operation "+ast.operation);}return convertToStatementIfNeeded(mode,new BinaryOperatorExpr(op,this._visit(ast.left,_Mode.Expression),this._visit(ast.right,_Mode.Expression)));};_AstToIrVisitor.prototype.visitChain=function(ast,mode){ensureStatementMode(mode,ast);return this.visitAll(ast.expressions,mode);};_AstToIrVisitor.prototype.visitConditional=function(ast,mode){var value=this._visit(ast.condition,_Mode.Expression);return convertToStatementIfNeeded(mode,value.conditional(this._visit(ast.trueExp,_Mode.Expression),this._visit(ast.falseExp,_Mode.Expression)));};_AstToIrVisitor.prototype.visitPipe=function(ast,mode){throw new Error("Illegal state: Pipes should have been converted into functions. Pipe: "+ast.name);};_AstToIrVisitor.prototype.visitFunctionCall=function(ast,mode){var convertedArgs=this.visitAll(ast.args,_Mode.Expression);var fnResult;if(ast instanceof BuiltinFunctionCall){fnResult=ast.converter(convertedArgs);}else{fnResult=this._visit(ast.target,_Mode.Expression).callFn(convertedArgs);}return convertToStatementIfNeeded(mode,fnResult);};_AstToIrVisitor.prototype.visitImplicitReceiver=function(ast,mode){ensureExpressionMode(mode,ast);return this._implicitReceiver;};_AstToIrVisitor.prototype.visitInterpolation=function(ast,mode){ensureExpressionMode(mode,ast);var args=[literal(ast.expressions.length)];for(var i=0;i<ast.strings.length-1;i++){args.push(literal(ast.strings[i]));args.push(this._visit(ast.expressions[i],_Mode.Expression));}args.push(literal(ast.strings[ast.strings.length-1]));if(this.interpolationFunction){return this.interpolationFunction(args);}return ast.expressions.length<=9?importExpr(Identifiers.inlineInterpolate).callFn(args):importExpr(Identifiers.interpolate).callFn([args[0],literalArr(args.slice(1))]);};_AstToIrVisitor.prototype.visitKeyedRead=function(ast,mode){var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{return convertToStatementIfNeeded(mode,this._visit(ast.obj,_Mode.Expression).key(this._visit(ast.key,_Mode.Expression)));}};_AstToIrVisitor.prototype.visitKeyedWrite=function(ast,mode){var obj=this._visit(ast.obj,_Mode.Expression);var key=this._visit(ast.key,_Mode.Expression);var value=this._visit(ast.value,_Mode.Expression);return convertToStatementIfNeeded(mode,obj.key(key).set(value));};_AstToIrVisitor.prototype.visitLiteralArray=function(ast,mode){throw new Error("Illegal State: literal arrays should have been converted into functions");};_AstToIrVisitor.prototype.visitLiteralMap=function(ast,mode){throw new Error("Illegal State: literal maps should have been converted into functions");};_AstToIrVisitor.prototype.visitLiteralPrimitive=function(ast,mode){// For literal values of null, undefined, true, or false allow type interference
// to infer the type.
var type=ast.value===null||ast.value===undefined||ast.value===true||ast.value===true?INFERRED_TYPE:undefined;return convertToStatementIfNeeded(mode,literal(ast.value,type));};_AstToIrVisitor.prototype._getLocal=function(name){return this._localResolver.getLocal(name);};_AstToIrVisitor.prototype.visitMethodCall=function(ast,mode){if(ast.receiver instanceof ImplicitReceiver&&ast.name=='$any'){var args=this.visitAll(ast.args,_Mode.Expression);if(args.length!=1){throw new Error("Invalid call to $any, expected 1 argument but received "+(args.length||'none'));}return args[0].cast(DYNAMIC_TYPE);}var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var args=this.visitAll(ast.args,_Mode.Expression);var result=null;var receiver=this._visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){var varExpr=this._getLocal(ast.name);if(varExpr){result=varExpr.callFn(args);}}if(result==null){result=receiver.callMethod(ast.name,args);}return convertToStatementIfNeeded(mode,result);}};_AstToIrVisitor.prototype.visitPrefixNot=function(ast,mode){return convertToStatementIfNeeded(mode,not(this._visit(ast.expression,_Mode.Expression)));};_AstToIrVisitor.prototype.visitNonNullAssert=function(ast,mode){return convertToStatementIfNeeded(mode,assertNotNull(this._visit(ast.expression,_Mode.Expression)));};_AstToIrVisitor.prototype.visitPropertyRead=function(ast,mode){var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var result=null;var receiver=this._visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){result=this._getLocal(ast.name);}if(result==null){result=receiver.prop(ast.name);}return convertToStatementIfNeeded(mode,result);}};_AstToIrVisitor.prototype.visitPropertyWrite=function(ast,mode){var receiver=this._visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){var varExpr=this._getLocal(ast.name);if(varExpr){throw new Error('Cannot assign to a reference or variable!');}}return convertToStatementIfNeeded(mode,receiver.prop(ast.name).set(this._visit(ast.value,_Mode.Expression)));};_AstToIrVisitor.prototype.visitSafePropertyRead=function(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);};_AstToIrVisitor.prototype.visitSafeMethodCall=function(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);};_AstToIrVisitor.prototype.visitAll=function(asts,mode){var _this=this;return asts.map(function(ast){return _this._visit(ast,mode);});};_AstToIrVisitor.prototype.visitQuote=function(ast,mode){throw new Error("Quotes are not supported for evaluation!\n        Statement: "+ast.uninterpretedExpression+" located at "+ast.location);};_AstToIrVisitor.prototype._visit=function(ast,mode){var result=this._resultMap.get(ast);if(result)return result;return(this._nodeMap.get(ast)||ast).visit(this,mode);};_AstToIrVisitor.prototype.convertSafeAccess=function(ast,leftMostSafe,mode){// If the expression contains a safe access node on the left it needs to be converted to
// an expression that guards the access to the member by checking the receiver for blank. As
// execution proceeds from left to right, the left most part of the expression must be guarded
// first but, because member access is left associative, the right side of the expression is at
// the top of the AST. The desired result requires lifting a copy of the the left part of the
// expression up to test it for blank before generating the unguarded version.
// Consider, for example the following expression: a?.b.c?.d.e
// This results in the ast:
//         .
//        / \
//       ?.   e
//      /  \
//     .    d
//    / \
//   ?.  c
//  /  \
// a    b
// The following tree should be generated:
//
//        /---- ? ----\
//       /      |      \
//     a   /--- ? ---\  null
//        /     |     \
//       .      .     null
//      / \    / \
//     .  c   .   e
//    / \    / \
//   a   b  ,   d
//         / \
//        .   c
//       / \
//      a   b
//
// Notice that the first guard condition is the left hand of the left most safe access node
// which comes in as leftMostSafe to this routine.
var guardedExpression=this._visit(leftMostSafe.receiver,_Mode.Expression);var temporary=undefined;if(this.needsTemporary(leftMostSafe.receiver)){// If the expression has method calls or pipes then we need to save the result into a
// temporary variable to avoid calling stateful or impure code more than once.
temporary=this.allocateTemporary();// Preserve the result in the temporary variable
guardedExpression=temporary.set(guardedExpression);// Ensure all further references to the guarded expression refer to the temporary instead.
this._resultMap.set(leftMostSafe.receiver,temporary);}var condition=guardedExpression.isBlank();// Convert the ast to an unguarded access to the receiver's member. The map will substitute
// leftMostNode with its unguarded version in the call to `this.visit()`.
if(leftMostSafe instanceof SafeMethodCall){this._nodeMap.set(leftMostSafe,new MethodCall(leftMostSafe.span,leftMostSafe.receiver,leftMostSafe.name,leftMostSafe.args));}else{this._nodeMap.set(leftMostSafe,new PropertyRead(leftMostSafe.span,leftMostSafe.receiver,leftMostSafe.name));}// Recursively convert the node now without the guarded member access.
var access=this._visit(ast,_Mode.Expression);// Remove the mapping. This is not strictly required as the converter only traverses each node
// once but is safer if the conversion is changed to traverse the nodes more than once.
this._nodeMap.delete(leftMostSafe);// If we allocated a temporary, release it.
if(temporary){this.releaseTemporary(temporary);}// Produce the conditional
return convertToStatementIfNeeded(mode,condition.conditional(literal(null),access));};// Given a expression of the form a?.b.c?.d.e the the left most safe node is
// the (a?.b). The . and ?. are left associative thus can be rewritten as:
// ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or
// safe method call as this needs be transform initially to:
//   a == null ? null : a.c.b.c?.d.e
// then to:
//   a == null ? null : a.b.c == null ? null : a.b.c.d.e
_AstToIrVisitor.prototype.leftMostSafeNode=function(ast){var _this=this;var visit=function visit(visitor,ast){return(_this._nodeMap.get(ast)||ast).visit(visitor);};return ast.visit({visitBinary:function visitBinary(ast){return null;},visitChain:function visitChain(ast){return null;},visitConditional:function visitConditional(ast){return null;},visitFunctionCall:function visitFunctionCall(ast){return null;},visitImplicitReceiver:function visitImplicitReceiver(ast){return null;},visitInterpolation:function visitInterpolation(ast){return null;},visitKeyedRead:function visitKeyedRead(ast){return visit(this,ast.obj);},visitKeyedWrite:function visitKeyedWrite(ast){return null;},visitLiteralArray:function visitLiteralArray(ast){return null;},visitLiteralMap:function visitLiteralMap(ast){return null;},visitLiteralPrimitive:function visitLiteralPrimitive(ast){return null;},visitMethodCall:function visitMethodCall(ast){return visit(this,ast.receiver);},visitPipe:function visitPipe(ast){return null;},visitPrefixNot:function visitPrefixNot(ast){return null;},visitNonNullAssert:function visitNonNullAssert(ast){return null;},visitPropertyRead:function visitPropertyRead(ast){return visit(this,ast.receiver);},visitPropertyWrite:function visitPropertyWrite(ast){return null;},visitQuote:function visitQuote(ast){return null;},visitSafeMethodCall:function visitSafeMethodCall(ast){return visit(this,ast.receiver)||ast;},visitSafePropertyRead:function visitSafePropertyRead(ast){return visit(this,ast.receiver)||ast;}});};// Returns true of the AST includes a method or a pipe indicating that, if the
// expression is used as the target of a safe property or method access then
// the expression should be stored into a temporary variable.
_AstToIrVisitor.prototype.needsTemporary=function(ast){var _this=this;var visit=function visit(visitor,ast){return ast&&(_this._nodeMap.get(ast)||ast).visit(visitor);};var visitSome=function visitSome(visitor,ast){return ast.some(function(ast){return visit(visitor,ast);});};return ast.visit({visitBinary:function visitBinary(ast){return visit(this,ast.left)||visit(this,ast.right);},visitChain:function visitChain(ast){return false;},visitConditional:function visitConditional(ast){return visit(this,ast.condition)||visit(this,ast.trueExp)||visit(this,ast.falseExp);},visitFunctionCall:function visitFunctionCall(ast){return true;},visitImplicitReceiver:function visitImplicitReceiver(ast){return false;},visitInterpolation:function visitInterpolation(ast){return visitSome(this,ast.expressions);},visitKeyedRead:function visitKeyedRead(ast){return false;},visitKeyedWrite:function visitKeyedWrite(ast){return false;},visitLiteralArray:function visitLiteralArray(ast){return true;},visitLiteralMap:function visitLiteralMap(ast){return true;},visitLiteralPrimitive:function visitLiteralPrimitive(ast){return false;},visitMethodCall:function visitMethodCall(ast){return true;},visitPipe:function visitPipe(ast){return true;},visitPrefixNot:function visitPrefixNot(ast){return visit(this,ast.expression);},visitNonNullAssert:function visitNonNullAssert(ast){return visit(this,ast.expression);},visitPropertyRead:function visitPropertyRead(ast){return false;},visitPropertyWrite:function visitPropertyWrite(ast){return false;},visitQuote:function visitQuote(ast){return false;},visitSafeMethodCall:function visitSafeMethodCall(ast){return true;},visitSafePropertyRead:function visitSafePropertyRead(ast){return false;}});};_AstToIrVisitor.prototype.allocateTemporary=function(){var tempNumber=this._currentTemporary++;this.temporaryCount=Math.max(this._currentTemporary,this.temporaryCount);return new ReadVarExpr(temporaryName(this.bindingId,tempNumber));};_AstToIrVisitor.prototype.releaseTemporary=function(temporary){this._currentTemporary--;if(temporary.name!=temporaryName(this.bindingId,this._currentTemporary)){throw new Error("Temporary "+temporary.name+" released out of order");}};return _AstToIrVisitor;}();function flattenStatements(arg,output){if(Array.isArray(arg)){arg.forEach(function(entry){return flattenStatements(entry,output);});}else{output.push(arg);}}var DefaultLocalResolver=/** @class */function(){function DefaultLocalResolver(){}DefaultLocalResolver.prototype.getLocal=function(name){if(name===EventHandlerVars.event.name){return EventHandlerVars.event;}return null;};return DefaultLocalResolver;}();function createCurrValueExpr(bindingId){return variable("currVal_"+bindingId);// fix syntax highlighting: `
}function createPreventDefaultVar(bindingId){return variable("pd_"+bindingId);}function convertStmtIntoExpression(stmt){if(stmt instanceof ExpressionStatement){return stmt.expr;}else if(stmt instanceof ReturnStatement){return stmt.value;}return null;}var BuiltinFunctionCall=/** @class */function(_super){(0,_tslib.__extends)(BuiltinFunctionCall,_super);function BuiltinFunctionCall(span,args,converter){var _this=_super.call(this,span,null,args)||this;_this.args=args;_this.converter=converter;return _this;}return BuiltinFunctionCall;}(FunctionCall);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Generates code that is used to type check templates.
 */var TypeCheckCompiler=/** @class */function(){function TypeCheckCompiler(options,reflector){this.options=options;this.reflector=reflector;}/**
     * Important notes:
     * - This must not produce new `import` statements, but only refer to types outside
     *   of the file via the variables provided via externalReferenceVars.
     *   This allows Typescript to reuse the old program's structure as no imports have changed.
     * - This must not produce any exports, as this would pollute the .d.ts file
     *   and also violate the point above.
     */TypeCheckCompiler.prototype.compileComponent=function(componentId,component,template,usedPipes,externalReferenceVars,ctx){var _this=this;var pipes=new Map();usedPipes.forEach(function(p){return pipes.set(p.name,p.type.reference);});var embeddedViewCount=0;var viewBuilderFactory=function viewBuilderFactory(parent,guards){var embeddedViewIndex=embeddedViewCount++;return new ViewBuilder(_this.options,_this.reflector,externalReferenceVars,parent,component.type.reference,component.isHost,embeddedViewIndex,pipes,guards,ctx,viewBuilderFactory);};var visitor=viewBuilderFactory(null,[]);visitor.visitAll([],template);return visitor.build(componentId);};return TypeCheckCompiler;}();var DYNAMIC_VAR_NAME='_any';var TypeCheckLocalResolver=/** @class */function(){function TypeCheckLocalResolver(){}TypeCheckLocalResolver.prototype.getLocal=function(name){if(name===EventHandlerVars.event.name){// References to the event should not be type-checked.
// TODO(chuckj): determine a better type for the event.
return variable(DYNAMIC_VAR_NAME);}return null;};return TypeCheckLocalResolver;}();var defaultResolver=new TypeCheckLocalResolver();var ViewBuilder=/** @class */function(){function ViewBuilder(options,reflector,externalReferenceVars,parent,component,isHostComponent,embeddedViewIndex,pipes,guards,ctx,viewBuilderFactory){this.options=options;this.reflector=reflector;this.externalReferenceVars=externalReferenceVars;this.parent=parent;this.component=component;this.isHostComponent=isHostComponent;this.embeddedViewIndex=embeddedViewIndex;this.pipes=pipes;this.guards=guards;this.ctx=ctx;this.viewBuilderFactory=viewBuilderFactory;this.refOutputVars=new Map();this.variables=[];this.children=[];this.updates=[];this.actions=[];}ViewBuilder.prototype.getOutputVar=function(type){var varName;if(type===this.component&&this.isHostComponent){varName=DYNAMIC_VAR_NAME;}else if(type instanceof StaticSymbol){varName=this.externalReferenceVars.get(type);}else{varName=DYNAMIC_VAR_NAME;}if(!varName){throw new Error("Illegal State: referring to a type without a variable "+JSON.stringify(type));}return varName;};ViewBuilder.prototype.getTypeGuardExpressions=function(ast){var result=(0,_tslib.__spread)(this.guards);try{for(var _a=(0,_tslib.__values)(ast.directives),_b=_a.next();!_b.done;_b=_a.next()){var directive=_b.value;try{for(var _c=(0,_tslib.__values)(directive.inputs),_d=_c.next();!_d.done;_d=_c.next()){var input=_d.value;var guard=directive.directive.guards[input.directiveName];if(guard){var useIf=guard==='UseIf';result.push({guard:guard,useIf:useIf,expression:{context:this.component,value:input.value}});}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_e=_c.return))_e.call(_c);}finally{if(e_1)throw e_1.error;}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_b&&!_b.done&&(_f=_a.return))_f.call(_a);}finally{if(e_2)throw e_2.error;}}return result;var e_2,_f,e_1,_e;};ViewBuilder.prototype.visitAll=function(variables,astNodes){this.variables=variables;templateVisitAll(this,astNodes);};ViewBuilder.prototype.build=function(componentId,targetStatements){var _this=this;if(targetStatements===void 0){targetStatements=[];}this.children.forEach(function(child){return child.build(componentId,targetStatements);});var viewStmts=[variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];var bindingCount=0;this.updates.forEach(function(expression){var _a=_this.preprocessUpdateExpression(expression),sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+bindingCount++;var nameResolver=context===_this.component?_this:defaultResolver;var _b=convertPropertyBinding(nameResolver,variable(_this.getOutputVar(context)),value,bindingId,BindingForm.General),stmts=_b.stmts,currValExpr=_b.currValExpr;stmts.push(new ExpressionStatement(currValExpr));viewStmts.push.apply(viewStmts,(0,_tslib.__spread)(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));});this.actions.forEach(function(_a){var sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+bindingCount++;var nameResolver=context===_this.component?_this:defaultResolver;var stmts=convertActionBinding(nameResolver,variable(_this.getOutputVar(context)),value,bindingId).stmts;viewStmts.push.apply(viewStmts,(0,_tslib.__spread)(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));});if(this.guards.length){var guardExpression=undefined;try{for(var _a=(0,_tslib.__values)(this.guards),_b=_a.next();!_b.done;_b=_a.next()){var guard=_b.value;var _c=this.preprocessUpdateExpression(guard.expression),context=_c.context,value=_c.value;var bindingId=""+bindingCount++;var nameResolver=context===this.component?this:defaultResolver;// We only support support simple expressions and ignore others as they
// are unlikely to affect type narrowing.
var _d=convertPropertyBinding(nameResolver,variable(this.getOutputVar(context)),value,bindingId,BindingForm.TrySimple),stmts=_d.stmts,currValExpr=_d.currValExpr;if(stmts.length==0){var guardClause=guard.useIf?currValExpr:this.ctx.importExpr(guard.guard).callFn([currValExpr]);guardExpression=guardExpression?guardExpression.and(guardClause):guardClause;}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_b&&!_b.done&&(_e=_a.return))_e.call(_a);}finally{if(e_3)throw e_3.error;}}if(guardExpression){viewStmts=[new IfStmt(guardExpression,viewStmts)];}}var viewName="_View_"+componentId+"_"+this.embeddedViewIndex;var viewFactory=new DeclareFunctionStmt(viewName,[],viewStmts);targetStatements.push(viewFactory);return targetStatements;var e_3,_e;};ViewBuilder.prototype.visitBoundText=function(ast,context){var _this=this;var astWithSource=ast.value;var inter=astWithSource.ast;inter.expressions.forEach(function(expr){return _this.updates.push({context:_this.component,value:expr,sourceSpan:ast.sourceSpan});});};ViewBuilder.prototype.visitEmbeddedTemplate=function(ast,context){this.visitElementOrTemplate(ast);// Note: The old view compiler used to use an `any` type
// for the context in any embedded view.
// We keep this behaivor behind a flag for now.
if(this.options.fullTemplateTypeCheck){// Find any applicable type guards. For example, NgIf has a type guard on ngIf
// (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only
// stamped out if ngIf is truthy so any bindings in the template can assume that,
// if a nullable type is used for ngIf, that expression is not null or undefined.
var guards=this.getTypeGuardExpressions(ast);var childVisitor=this.viewBuilderFactory(this,guards);this.children.push(childVisitor);childVisitor.visitAll(ast.variables,ast.children);}};ViewBuilder.prototype.visitElement=function(ast,context){var _this=this;this.visitElementOrTemplate(ast);ast.inputs.forEach(function(inputAst){_this.updates.push({context:_this.component,value:inputAst.value,sourceSpan:inputAst.sourceSpan});});templateVisitAll(this,ast.children);};ViewBuilder.prototype.visitElementOrTemplate=function(ast){var _this=this;ast.directives.forEach(function(dirAst){_this.visitDirective(dirAst);});ast.references.forEach(function(ref){var outputVarType=null;// Note: The old view compiler used to use an `any` type
// for directives exposed via `exportAs`.
// We keep this behaivor behind a flag for now.
if(ref.value&&ref.value.identifier&&_this.options.fullTemplateTypeCheck){outputVarType=ref.value.identifier.reference;}else{outputVarType=BuiltinTypeName.Dynamic;}_this.refOutputVars.set(ref.name,outputVarType);});ast.outputs.forEach(function(outputAst){_this.actions.push({context:_this.component,value:outputAst.handler,sourceSpan:outputAst.sourceSpan});});};ViewBuilder.prototype.visitDirective=function(dirAst){var _this=this;var dirType=dirAst.directive.type.reference;dirAst.inputs.forEach(function(input){return _this.updates.push({context:_this.component,value:input.value,sourceSpan:input.sourceSpan});});// Note: The old view compiler used to use an `any` type
// for expressions in host properties / events.
// We keep this behaivor behind a flag for now.
if(this.options.fullTemplateTypeCheck){dirAst.hostProperties.forEach(function(inputAst){return _this.updates.push({context:dirType,value:inputAst.value,sourceSpan:inputAst.sourceSpan});});dirAst.hostEvents.forEach(function(hostEventAst){return _this.actions.push({context:dirType,value:hostEventAst.handler,sourceSpan:hostEventAst.sourceSpan});});}};ViewBuilder.prototype.getLocal=function(name){if(name==EventHandlerVars.event.name){return variable(this.getOutputVar(BuiltinTypeName.Dynamic));}for(var currBuilder=this;currBuilder;currBuilder=currBuilder.parent){var outputVarType=void 0;// check references
outputVarType=currBuilder.refOutputVars.get(name);if(outputVarType==null){// check variables
var varAst=currBuilder.variables.find(function(varAst){return varAst.name===name;});if(varAst){outputVarType=BuiltinTypeName.Dynamic;}}if(outputVarType!=null){return variable(this.getOutputVar(outputVarType));}}return null;};ViewBuilder.prototype.pipeOutputVar=function(name){var pipe=this.pipes.get(name);if(!pipe){throw new Error("Illegal State: Could not find pipe "+name+" in template of "+this.component);}return this.getOutputVar(pipe);};ViewBuilder.prototype.preprocessUpdateExpression=function(expression){var _this=this;return{sourceSpan:expression.sourceSpan,context:expression.context,value:convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){return function(args){var arr=literalArr(args);// Note: The old view compiler used to use an `any` type
// for arrays.
return _this.options.fullTemplateTypeCheck?arr:arr.cast(DYNAMIC_TYPE);};},createLiteralMapConverter:function createLiteralMapConverter(keys){return function(values){var entries=keys.map(function(k,i){return{key:k.key,value:values[i],quoted:k.quoted};});var map=literalMap(entries);// Note: The old view compiler used to use an `any` type
// for maps.
return _this.options.fullTemplateTypeCheck?map:map.cast(DYNAMIC_TYPE);};},createPipeConverter:function createPipeConverter(name,argCount){return function(args){// Note: The old view compiler used to use an `any` type
// for pipes.
var pipeExpr=_this.options.fullTemplateTypeCheck?variable(_this.pipeOutputVar(name)):variable(_this.getOutputVar(BuiltinTypeName.Dynamic));return pipeExpr.callMethod('transform',args);};}},expression.value)};};ViewBuilder.prototype.visitNgContent=function(ast,context){};ViewBuilder.prototype.visitText=function(ast,context){};ViewBuilder.prototype.visitDirectiveProperty=function(ast,context){};ViewBuilder.prototype.visitReference=function(ast,context){};ViewBuilder.prototype.visitVariable=function(ast,context){};ViewBuilder.prototype.visitEvent=function(ast,context){};ViewBuilder.prototype.visitElementProperty=function(ast,context){};ViewBuilder.prototype.visitAttr=function(ast,context){};return ViewBuilder;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CLASS_ATTR$1='class';var STYLE_ATTR='style';var IMPLICIT_TEMPLATE_VAR='\$implicit';var ViewCompileResult=/** @class */function(){function ViewCompileResult(viewClassVar,rendererTypeVar){this.viewClassVar=viewClassVar;this.rendererTypeVar=rendererTypeVar;}return ViewCompileResult;}();var ViewCompiler=/** @class */function(){function ViewCompiler(_reflector){this._reflector=_reflector;}ViewCompiler.prototype.compileComponent=function(outputCtx,component,template,styles,usedPipes){var _this=this;var embeddedViewCount=0;var staticQueryIds=findStaticQueryIds(template);var renderComponentVarName=undefined;if(!component.isHost){var template_1=component.template;var customRenderData=[];if(template_1.animations&&template_1.animations.length){customRenderData.push(new LiteralMapEntry('animation',convertValueToOutputAst(outputCtx,template_1.animations),true));}var renderComponentVar=variable(rendererTypeName(component.type.reference));renderComponentVarName=renderComponentVar.name;outputCtx.statements.push(renderComponentVar.set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([new LiteralMapEntry('encapsulation',literal(template_1.encapsulation),false),new LiteralMapEntry('styles',styles,false),new LiteralMapEntry('data',new LiteralMapExpr(customRenderData),false)])])).toDeclStmt(importType(Identifiers.RendererType2),[StmtModifier.Final,StmtModifier.Exported]));}var viewBuilderFactory=function viewBuilderFactory(parent){var embeddedViewIndex=embeddedViewCount++;return new ViewBuilder$1(_this._reflector,outputCtx,parent,component,embeddedViewIndex,usedPipes,staticQueryIds,viewBuilderFactory);};var visitor=viewBuilderFactory(null);visitor.visitAll([],template);(_a=outputCtx.statements).push.apply(_a,(0,_tslib.__spread)(visitor.build()));return new ViewCompileResult(visitor.viewName,renderComponentVarName);var _a;};return ViewCompiler;}();exports.ViewCompiler=ViewCompiler;var LOG_VAR$1=variable('_l');var VIEW_VAR=variable('_v');var CHECK_VAR=variable('_ck');var COMP_VAR=variable('_co');var EVENT_NAME_VAR=variable('en');var ALLOW_DEFAULT_VAR=variable("ad");var ViewBuilder$1=/** @class */function(){function ViewBuilder(reflector,outputCtx,parent,component,embeddedViewIndex,usedPipes,staticQueryIds,viewBuilderFactory){this.reflector=reflector;this.outputCtx=outputCtx;this.parent=parent;this.component=component;this.embeddedViewIndex=embeddedViewIndex;this.usedPipes=usedPipes;this.staticQueryIds=staticQueryIds;this.viewBuilderFactory=viewBuilderFactory;this.nodes=[];this.purePipeNodeIndices=Object.create(null);// Need Object.create so that we don't have builtin values...
this.refNodeIndices=Object.create(null);this.variables=[];this.children=[];// TODO(tbosch): The old view compiler used to use an `any` type
// for the context in any embedded view. We keep this behaivor for now
// to be able to introduce the new view compiler without too many errors.
this.compType=this.embeddedViewIndex>0?DYNAMIC_TYPE:expressionType(outputCtx.importExpr(this.component.type.reference));this.viewName=viewClassName(this.component.type.reference,this.embeddedViewIndex);}ViewBuilder.prototype.visitAll=function(variables,astNodes){var _this=this;this.variables=variables;// create the pipes for the pure pipes immediately, so that we know their indices.
if(!this.parent){this.usedPipes.forEach(function(pipe){if(pipe.pure){_this.purePipeNodeIndices[pipe.name]=_this._createPipe(null,pipe);}});}if(!this.parent){var queryIds_1=staticViewQueryIds(this.staticQueryIds);this.component.viewQueries.forEach(function(query,queryIndex){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var queryId=queryIndex+1;var bindingType=query.first?0/* First */:1;var flags=134217728/* TypeViewQuery */|calcStaticDynamicQueryFlags(queryIds_1,queryId,query.first);_this.nodes.push(function(){return{sourceSpan:null,nodeFlags:flags,nodeDef:importExpr(Identifiers.queryDef).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType),false)])])};});});}templateVisitAll(this,astNodes);if(this.parent&&(astNodes.length===0||needsAdditionalRootNode(astNodes))){// if the view is an embedded view, then we need to add an additional root node in some cases
this.nodes.push(function(){return{sourceSpan:null,nodeFlags:1/* TypeElement */,nodeDef:importExpr(Identifiers.anchorDef).callFn([literal(0/* None */),NULL_EXPR,NULL_EXPR,literal(0)])};});}};ViewBuilder.prototype.build=function(targetStatements){if(targetStatements===void 0){targetStatements=[];}this.children.forEach(function(child){return child.build(targetStatements);});var _a=this._createNodeExpressions(),updateRendererStmts=_a.updateRendererStmts,updateDirectivesStmts=_a.updateDirectivesStmts,nodeDefExprs=_a.nodeDefExprs;var updateRendererFn=this._createUpdateFn(updateRendererStmts);var updateDirectivesFn=this._createUpdateFn(updateDirectivesStmts);var viewFlags=0;if(!this.parent&&this.component.changeDetection===ChangeDetectionStrategy.OnPush){viewFlags|=2/* OnPush */;}var viewFactory=new DeclareFunctionStmt(this.viewName,[new FnParam(LOG_VAR$1.name)],[new ReturnStatement(importExpr(Identifiers.viewDef).callFn([literal(viewFlags),literalArr(nodeDefExprs),updateDirectivesFn,updateRendererFn]))],importType(Identifiers.ViewDefinition),this.embeddedViewIndex===0?[StmtModifier.Exported]:[]);targetStatements.push(viewFactory);return targetStatements;};ViewBuilder.prototype._createUpdateFn=function(updateStmts){var updateFn;if(updateStmts.length>0){var preStmts=[];if(!this.component.isHost&&findReadVarNames(updateStmts).has(COMP_VAR.name)){preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));}updateFn=fn([new FnParam(CHECK_VAR.name,INFERRED_TYPE),new FnParam(VIEW_VAR.name,INFERRED_TYPE)],(0,_tslib.__spread)(preStmts,updateStmts),INFERRED_TYPE);}else{updateFn=NULL_EXPR;}return updateFn;};ViewBuilder.prototype.visitNgContent=function(ast,context){// ngContentDef(ngContentIndex: number, index: number): NodeDef;
this.nodes.push(function(){return{sourceSpan:ast.sourceSpan,nodeFlags:8/* TypeNgContent */,nodeDef:importExpr(Identifiers.ngContentDef).callFn([literal(ast.ngContentIndex),literal(ast.index)])};});};ViewBuilder.prototype.visitText=function(ast,context){// Static text nodes have no check function
var checkIndex=-1;this.nodes.push(function(){return{sourceSpan:ast.sourceSpan,nodeFlags:2/* TypeText */,nodeDef:importExpr(Identifiers.textDef).callFn([literal(checkIndex),literal(ast.ngContentIndex),literalArr([literal(ast.value)])])};});};ViewBuilder.prototype.visitBoundText=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array
this.nodes.push(null);var astWithSource=ast.value;var inter=astWithSource.ast;var updateRendererExpressions=inter.expressions.map(function(expr,bindingIndex){return _this._preprocessUpdateExpression({nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:ast.sourceSpan,context:COMP_VAR,value:expr});});// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:2/* TypeText */,nodeDef:importExpr(Identifiers.textDef).callFn([literal(checkIndex),literal(ast.ngContentIndex),literalArr(inter.strings.map(function(s){return literal(s);}))]),updateRenderer:updateRendererExpressions};};};ViewBuilder.prototype.visitEmbeddedTemplate=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array
this.nodes.push(null);var _a=this._visitElementOrTemplate(nodeIndex,ast),flags=_a.flags,queryMatchesExpr=_a.queryMatchesExpr,hostEvents=_a.hostEvents;var childVisitor=this.viewBuilderFactory(this);this.children.push(childVisitor);childVisitor.visitAll(ast.variables,ast.children);var childCount=this.nodes.length-nodeIndex-1;// anchorDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,
//   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:
//   ViewDefinitionFactory): NodeDef;
this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:1/* TypeElement */|flags,nodeDef:importExpr(Identifiers.anchorDef).callFn([literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),_this._createElementHandleEventFn(nodeIndex,hostEvents),variable(childVisitor.viewName)])};};};ViewBuilder.prototype.visitElement=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array so we can add children
this.nodes.push(null);// Using a null element name creates an anchor.
var elName=isNgContainer(ast.name)?null:ast.name;var _a=this._visitElementOrTemplate(nodeIndex,ast),flags=_a.flags,usedEvents=_a.usedEvents,queryMatchesExpr=_a.queryMatchesExpr,dirHostBindings=_a.hostBindings,hostEvents=_a.hostEvents;var inputDefs=[];var updateRendererExpressions=[];var outputDefs=[];if(elName){var hostBindings=ast.inputs.map(function(inputAst){return{context:COMP_VAR,inputAst:inputAst,dirAst:null};}).concat(dirHostBindings);if(hostBindings.length){updateRendererExpressions=hostBindings.map(function(hostBinding,bindingIndex){return _this._preprocessUpdateExpression({context:hostBinding.context,nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:hostBinding.inputAst.sourceSpan,value:hostBinding.inputAst.value});});inputDefs=hostBindings.map(function(hostBinding){return elementBindingDef(hostBinding.inputAst,hostBinding.dirAst);});}outputDefs=usedEvents.map(function(_a){var _b=(0,_tslib.__read)(_a,2),target=_b[0],eventName=_b[1];return literalArr([literal(target),literal(eventName)]);});}templateVisitAll(this,ast.children);var childCount=this.nodes.length-nodeIndex-1;var compAst=ast.directives.find(function(dirAst){return dirAst.directive.isComponent;});var compRendererType=NULL_EXPR;var compView=NULL_EXPR;if(compAst){compView=this.outputCtx.importExpr(compAst.directive.componentViewType);compRendererType=this.outputCtx.importExpr(compAst.directive.rendererType);}// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:1/* TypeElement */|flags,nodeDef:importExpr(Identifiers.elementDef).callFn([literal(checkIndex),literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),literal(elName),elName?fixedAttrsDef(ast):NULL_EXPR,inputDefs.length?literalArr(inputDefs):NULL_EXPR,outputDefs.length?literalArr(outputDefs):NULL_EXPR,_this._createElementHandleEventFn(nodeIndex,hostEvents),compView,compRendererType]),updateRenderer:updateRendererExpressions};};};ViewBuilder.prototype._visitElementOrTemplate=function(nodeIndex,ast){var _this=this;var flags=0;if(ast.hasViewContainer){flags|=16777216/* EmbeddedViews */;}var usedEvents=new Map();ast.outputs.forEach(function(event){var _a=elementEventNameAndTarget(event,null),name=_a.name,target=_a.target;usedEvents.set(elementEventFullName(target,name),[target,name]);});ast.directives.forEach(function(dirAst){dirAst.hostEvents.forEach(function(event){var _a=elementEventNameAndTarget(event,dirAst),name=_a.name,target=_a.target;usedEvents.set(elementEventFullName(target,name),[target,name]);});});var hostBindings=[];var hostEvents=[];this._visitComponentFactoryResolverProvider(ast.directives);ast.providers.forEach(function(providerAst,providerIndex){var dirAst=undefined;var dirIndex=undefined;ast.directives.forEach(function(localDirAst,i){if(localDirAst.directive.type.reference===tokenReference(providerAst.token)){dirAst=localDirAst;dirIndex=i;}});if(dirAst){var _a=_this._visitDirective(providerAst,dirAst,dirIndex,nodeIndex,ast.references,ast.queryMatches,usedEvents,_this.staticQueryIds.get(ast)),dirHostBindings=_a.hostBindings,dirHostEvents=_a.hostEvents;hostBindings.push.apply(hostBindings,(0,_tslib.__spread)(dirHostBindings));hostEvents.push.apply(hostEvents,(0,_tslib.__spread)(dirHostEvents));}else{_this._visitProvider(providerAst,ast.queryMatches);}});var queryMatchExprs=[];ast.queryMatches.forEach(function(match){var valueType=undefined;if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.ElementRef)){valueType=0/* ElementRef */;}else if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)){valueType=3/* ViewContainerRef */;}else if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.TemplateRef)){valueType=2/* TemplateRef */;}if(valueType!=null){queryMatchExprs.push(literalArr([literal(match.queryId),literal(valueType)]));}});ast.references.forEach(function(ref){var valueType=undefined;if(!ref.value){valueType=1/* RenderElement */;}else if(tokenReference(ref.value)===_this.reflector.resolveExternalReference(Identifiers.TemplateRef)){valueType=2/* TemplateRef */;}if(valueType!=null){_this.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(valueType)]));}});ast.outputs.forEach(function(outputAst){hostEvents.push({context:COMP_VAR,eventAst:outputAst,dirAst:null});});return{flags:flags,usedEvents:Array.from(usedEvents.values()),queryMatchesExpr:queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,hostBindings:hostBindings,hostEvents:hostEvents};};ViewBuilder.prototype._visitDirective=function(providerAst,dirAst,directiveIndex,elementNodeIndex,refs,queryMatches,usedEvents,queryIds){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array so we can add children
this.nodes.push(null);dirAst.directive.queries.forEach(function(query,queryIndex){var queryId=dirAst.contentQueryStartId+queryIndex;var flags=67108864/* TypeContentQuery */|calcStaticDynamicQueryFlags(queryIds,queryId,query.first);var bindingType=query.first?0/* First */:1;_this.nodes.push(function(){return{sourceSpan:dirAst.sourceSpan,nodeFlags:flags,nodeDef:importExpr(Identifiers.queryDef).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType),false)])])};});});// Note: the operation below might also create new nodeDefs,
// but we don't want them to be a child of a directive,
// as they might be a provider/pipe on their own.
// I.e. we only allow queries as children of directives nodes.
var childCount=this.nodes.length-nodeIndex-1;var _a=this._visitProviderOrDirective(providerAst,queryMatches),flags=_a.flags,queryMatchExprs=_a.queryMatchExprs,providerExpr=_a.providerExpr,depsExpr=_a.depsExpr;refs.forEach(function(ref){if(ref.value&&tokenReference(ref.value)===tokenReference(providerAst.token)){_this.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(4/* Provider */)]));}});if(dirAst.directive.isComponent){flags|=32768/* Component */;}var inputDefs=dirAst.inputs.map(function(inputAst,inputIndex){var mapValue=literalArr([literal(inputIndex),literal(inputAst.directiveName)]);// Note: it's important to not quote the key so that we can capture renames by minifiers!
return new LiteralMapEntry(inputAst.directiveName,mapValue,false);});var outputDefs=[];var dirMeta=dirAst.directive;Object.keys(dirMeta.outputs).forEach(function(propName){var eventName=dirMeta.outputs[propName];if(usedEvents.has(eventName)){// Note: it's important to not quote the key so that we can capture renames by minifiers!
outputDefs.push(new LiteralMapEntry(propName,literal(eventName),false));}});var updateDirectiveExpressions=[];if(dirAst.inputs.length||(flags&(262144/* DoCheck */|65536/* OnInit */))>0){updateDirectiveExpressions=dirAst.inputs.map(function(input,bindingIndex){return _this._preprocessUpdateExpression({nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:input.sourceSpan,context:COMP_VAR,value:input.value});});}var dirContextExpr=importExpr(Identifiers.nodeValue).callFn([VIEW_VAR,literal(nodeIndex)]);var hostBindings=dirAst.hostProperties.map(function(inputAst){return{context:dirContextExpr,dirAst:dirAst,inputAst:inputAst};});var hostEvents=dirAst.hostEvents.map(function(hostEventAst){return{context:dirContextExpr,eventAst:hostEventAst,dirAst:dirAst};});// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:dirAst.sourceSpan,nodeFlags:16384/* TypeDirective */|flags,nodeDef:importExpr(Identifiers.directiveDef).callFn([literal(checkIndex),literal(flags),queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,literal(childCount),providerExpr,depsExpr,inputDefs.length?new LiteralMapExpr(inputDefs):NULL_EXPR,outputDefs.length?new LiteralMapExpr(outputDefs):NULL_EXPR]),updateDirectives:updateDirectiveExpressions,directive:dirAst.directive.type};};return{hostBindings:hostBindings,hostEvents:hostEvents};};ViewBuilder.prototype._visitProvider=function(providerAst,queryMatches){this._addProviderNode(this._visitProviderOrDirective(providerAst,queryMatches));};ViewBuilder.prototype._visitComponentFactoryResolverProvider=function(directives){var componentDirMeta=directives.find(function(dirAst){return dirAst.directive.isComponent;});if(componentDirMeta&&componentDirMeta.directive.entryComponents.length){var _a=componentFactoryResolverProviderDef(this.reflector,this.outputCtx,8192/* PrivateProvider */,componentDirMeta.directive.entryComponents),providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,flags=_a.flags,tokenExpr=_a.tokenExpr;this._addProviderNode({providerExpr:providerExpr,depsExpr:depsExpr,flags:flags,tokenExpr:tokenExpr,queryMatchExprs:[],sourceSpan:componentDirMeta.sourceSpan});}};ViewBuilder.prototype._addProviderNode=function(data){var nodeIndex=this.nodes.length;// providerDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,
//   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;
this.nodes.push(function(){return{sourceSpan:data.sourceSpan,nodeFlags:data.flags,nodeDef:importExpr(Identifiers.providerDef).callFn([literal(data.flags),data.queryMatchExprs.length?literalArr(data.queryMatchExprs):NULL_EXPR,data.tokenExpr,data.providerExpr,data.depsExpr])};});};ViewBuilder.prototype._visitProviderOrDirective=function(providerAst,queryMatches){var flags=0;var queryMatchExprs=[];queryMatches.forEach(function(match){if(tokenReference(match.value)===tokenReference(providerAst.token)){queryMatchExprs.push(literalArr([literal(match.queryId),literal(4/* Provider */)]));}});var _a=providerDef(this.outputCtx,providerAst),providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,providerFlags=_a.flags,tokenExpr=_a.tokenExpr;return{flags:flags|providerFlags,queryMatchExprs:queryMatchExprs,providerExpr:providerExpr,depsExpr:depsExpr,tokenExpr:tokenExpr,sourceSpan:providerAst.sourceSpan};};ViewBuilder.prototype.getLocal=function(name){if(name==EventHandlerVars.event.name){return EventHandlerVars.event;}var currViewExpr=VIEW_VAR;for(var currBuilder=this;currBuilder;currBuilder=currBuilder.parent,currViewExpr=currViewExpr.prop('parent').cast(DYNAMIC_TYPE)){// check references
var refNodeIndex=currBuilder.refNodeIndices[name];if(refNodeIndex!=null){return importExpr(Identifiers.nodeValue).callFn([currViewExpr,literal(refNodeIndex)]);}// check variables
var varAst=currBuilder.variables.find(function(varAst){return varAst.name===name;});if(varAst){var varValue=varAst.value||IMPLICIT_TEMPLATE_VAR;return currViewExpr.prop('context').prop(varValue);}}return null;};ViewBuilder.prototype._createLiteralArrayConverter=function(sourceSpan,argCount){if(argCount===0){var valueExpr_1=importExpr(Identifiers.EMPTY_ARRAY);return function(){return valueExpr_1;};}var checkIndex=this.nodes.length;this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:32/* TypePureArray */,nodeDef:importExpr(Identifiers.pureArrayDef).callFn([literal(checkIndex),literal(argCount)])};});return function(args){return callCheckStmt(checkIndex,args);};};ViewBuilder.prototype._createLiteralMapConverter=function(sourceSpan,keys){if(keys.length===0){var valueExpr_2=importExpr(Identifiers.EMPTY_MAP);return function(){return valueExpr_2;};}var map=literalMap(keys.map(function(e,i){return(0,_tslib.__assign)({},e,{value:literal(i)});}));var checkIndex=this.nodes.length;this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:64/* TypePureObject */,nodeDef:importExpr(Identifiers.pureObjectDef).callFn([literal(checkIndex),map])};});return function(args){return callCheckStmt(checkIndex,args);};};ViewBuilder.prototype._createPipeConverter=function(expression,name,argCount){var pipe=this.usedPipes.find(function(pipeSummary){return pipeSummary.name===name;});if(pipe.pure){var checkIndex_1=this.nodes.length;this.nodes.push(function(){return{sourceSpan:expression.sourceSpan,nodeFlags:128/* TypePurePipe */,nodeDef:importExpr(Identifiers.purePipeDef).callFn([literal(checkIndex_1),literal(argCount)])};});// find underlying pipe in the component view
var compViewExpr=VIEW_VAR;var compBuilder=this;while(compBuilder.parent){compBuilder=compBuilder.parent;compViewExpr=compViewExpr.prop('parent').cast(DYNAMIC_TYPE);}var pipeNodeIndex=compBuilder.purePipeNodeIndices[name];var pipeValueExpr_1=importExpr(Identifiers.nodeValue).callFn([compViewExpr,literal(pipeNodeIndex)]);return function(args){return callUnwrapValue(expression.nodeIndex,expression.bindingIndex,callCheckStmt(checkIndex_1,[pipeValueExpr_1].concat(args)));};}else{var nodeIndex=this._createPipe(expression.sourceSpan,pipe);var nodeValueExpr_1=importExpr(Identifiers.nodeValue).callFn([VIEW_VAR,literal(nodeIndex)]);return function(args){return callUnwrapValue(expression.nodeIndex,expression.bindingIndex,nodeValueExpr_1.callMethod('transform',args));};}};ViewBuilder.prototype._createPipe=function(sourceSpan,pipe){var _this=this;var nodeIndex=this.nodes.length;var flags=0;pipe.type.lifecycleHooks.forEach(function(lifecycleHook){// for pipes, we only support ngOnDestroy
if(lifecycleHook===LifecycleHooks.OnDestroy){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var depExprs=pipe.type.diDeps.map(function(diDep){return depDef(_this.outputCtx,diDep);});// function pipeDef(
//   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef
this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:16/* TypePipe */,nodeDef:importExpr(Identifiers.pipeDef).callFn([literal(flags),_this.outputCtx.importExpr(pipe.type.reference),literalArr(depExprs)])};});return nodeIndex;};/**
     * For the AST in `UpdateExpression.value`:
     * - create nodes for pipes, literal arrays and, literal maps,
     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.
     *
     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!
     */ViewBuilder.prototype._preprocessUpdateExpression=function(expression){var _this=this;return{nodeIndex:expression.nodeIndex,bindingIndex:expression.bindingIndex,sourceSpan:expression.sourceSpan,context:expression.context,value:convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){return _this._createLiteralArrayConverter(expression.sourceSpan,argCount);},createLiteralMapConverter:function createLiteralMapConverter(keys){return _this._createLiteralMapConverter(expression.sourceSpan,keys);},createPipeConverter:function createPipeConverter(name,argCount){return _this._createPipeConverter(expression,name,argCount);}},expression.value)};};ViewBuilder.prototype._createNodeExpressions=function(){var self=this;var updateBindingCount=0;var updateRendererStmts=[];var updateDirectivesStmts=[];var nodeDefExprs=this.nodes.map(function(factory,nodeIndex){var _a=factory(),nodeDef=_a.nodeDef,nodeFlags=_a.nodeFlags,updateDirectives=_a.updateDirectives,updateRenderer=_a.updateRenderer,sourceSpan=_a.sourceSpan;if(updateRenderer){updateRendererStmts.push.apply(updateRendererStmts,(0,_tslib.__spread)(createUpdateStatements(nodeIndex,sourceSpan,updateRenderer,false)));}if(updateDirectives){updateDirectivesStmts.push.apply(updateDirectivesStmts,(0,_tslib.__spread)(createUpdateStatements(nodeIndex,sourceSpan,updateDirectives,(nodeFlags&(262144/* DoCheck */|65536/* OnInit */))>0)));}// We use a comma expression to call the log function before
// the nodeDef function, but still use the result of the nodeDef function
// as the value.
// Note: We only add the logger to elements / text nodes,
// so we don't generate too much code.
var logWithNodeDef=nodeFlags&3/* CatRenderNode */?new CommaExpr([LOG_VAR$1.callFn([]).callFn([]),nodeDef]):nodeDef;return applySourceSpanToExpressionIfNeeded(logWithNodeDef,sourceSpan);});return{updateRendererStmts:updateRendererStmts,updateDirectivesStmts:updateDirectivesStmts,nodeDefExprs:nodeDefExprs};function createUpdateStatements(nodeIndex,sourceSpan,expressions,allowEmptyExprs){var updateStmts=[];var exprs=expressions.map(function(_a){var sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+updateBindingCount++;var nameResolver=context===COMP_VAR?self:null;var _b=convertPropertyBinding(nameResolver,context,value,bindingId,BindingForm.General),stmts=_b.stmts,currValExpr=_b.currValExpr;updateStmts.push.apply(updateStmts,(0,_tslib.__spread)(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));return applySourceSpanToExpressionIfNeeded(currValExpr,sourceSpan);});if(expressions.length||allowEmptyExprs){updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex,exprs).toStmt(),sourceSpan));}return updateStmts;}};ViewBuilder.prototype._createElementHandleEventFn=function(nodeIndex,handlers){var _this=this;var handleEventStmts=[];var handleEventBindingCount=0;handlers.forEach(function(_a){var context=_a.context,eventAst=_a.eventAst,dirAst=_a.dirAst;var bindingId=""+handleEventBindingCount++;var nameResolver=context===COMP_VAR?_this:null;var _b=convertActionBinding(nameResolver,context,eventAst.handler,bindingId),stmts=_b.stmts,allowDefault=_b.allowDefault;var trueStmts=stmts;if(allowDefault){trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());}var _c=elementEventNameAndTarget(eventAst,dirAst),eventTarget=_c.target,eventName=_c.name;var fullEventName=elementEventFullName(eventTarget,eventName);handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR),trueStmts),eventAst.sourceSpan));});var handleEventFn;if(handleEventStmts.length>0){var preStmts=[ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];if(!this.component.isHost&&findReadVarNames(handleEventStmts).has(COMP_VAR.name)){preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));}handleEventFn=fn([new FnParam(VIEW_VAR.name,INFERRED_TYPE),new FnParam(EVENT_NAME_VAR.name,INFERRED_TYPE),new FnParam(EventHandlerVars.event.name,INFERRED_TYPE)],(0,_tslib.__spread)(preStmts,handleEventStmts,[new ReturnStatement(ALLOW_DEFAULT_VAR)]),INFERRED_TYPE);}else{handleEventFn=NULL_EXPR;}return handleEventFn;};ViewBuilder.prototype.visitDirective=function(ast,context){};ViewBuilder.prototype.visitDirectiveProperty=function(ast,context){};ViewBuilder.prototype.visitReference=function(ast,context){};ViewBuilder.prototype.visitVariable=function(ast,context){};ViewBuilder.prototype.visitEvent=function(ast,context){};ViewBuilder.prototype.visitElementProperty=function(ast,context){};ViewBuilder.prototype.visitAttr=function(ast,context){};return ViewBuilder;}();function needsAdditionalRootNode(astNodes){var lastAstNode=astNodes[astNodes.length-1];if(lastAstNode instanceof EmbeddedTemplateAst){return lastAstNode.hasViewContainer;}if(lastAstNode instanceof ElementAst){if(isNgContainer(lastAstNode.name)&&lastAstNode.children.length){return needsAdditionalRootNode(lastAstNode.children);}return lastAstNode.hasViewContainer;}return lastAstNode instanceof NgContentAst;}function elementBindingDef(inputAst,dirAst){switch(inputAst.type){case PropertyBindingType.Attribute:return literalArr([literal(1/* TypeElementAttribute */),literal(inputAst.name),literal(inputAst.securityContext)]);case PropertyBindingType.Property:return literalArr([literal(8/* TypeProperty */),literal(inputAst.name),literal(inputAst.securityContext)]);case PropertyBindingType.Animation:var bindingType=8/* TypeProperty */|(dirAst&&dirAst.directive.isComponent?32/* SyntheticHostProperty */:16/* SyntheticProperty */);return literalArr([literal(bindingType),literal('@'+inputAst.name),literal(inputAst.securityContext)]);case PropertyBindingType.Class:return literalArr([literal(2/* TypeElementClass */),literal(inputAst.name),NULL_EXPR]);case PropertyBindingType.Style:return literalArr([literal(4/* TypeElementStyle */),literal(inputAst.name),literal(inputAst.unit)]);}}function fixedAttrsDef(elementAst){var mapResult=Object.create(null);elementAst.attrs.forEach(function(attrAst){mapResult[attrAst.name]=attrAst.value;});elementAst.directives.forEach(function(dirAst){Object.keys(dirAst.directive.hostAttributes).forEach(function(name){var value=dirAst.directive.hostAttributes[name];var prevValue=mapResult[name];mapResult[name]=prevValue!=null?mergeAttributeValue(name,prevValue,value):value;});});// Note: We need to sort to get a defined output order
// for tests and for caching generated artifacts...
return literalArr(Object.keys(mapResult).sort().map(function(attrName){return literalArr([literal(attrName),literal(mapResult[attrName])]);}));}function mergeAttributeValue(attrName,attrValue1,attrValue2){if(attrName==CLASS_ATTR$1||attrName==STYLE_ATTR){return attrValue1+" "+attrValue2;}else{return attrValue2;}}function callCheckStmt(nodeIndex,exprs){if(exprs.length>10){return CHECK_VAR.callFn([VIEW_VAR,literal(nodeIndex),literal(1/* Dynamic */),literalArr(exprs)]);}else{return CHECK_VAR.callFn((0,_tslib.__spread)([VIEW_VAR,literal(nodeIndex),literal(0/* Inline */)],exprs));}}function callUnwrapValue(nodeIndex,bindingIdx,expr){return importExpr(Identifiers.unwrapValue).callFn([VIEW_VAR,literal(nodeIndex),literal(bindingIdx),expr]);}function findStaticQueryIds(nodes,result){if(result===void 0){result=new Map();}nodes.forEach(function(node){var staticQueryIds=new Set();var dynamicQueryIds=new Set();var queryMatches=undefined;if(node instanceof ElementAst){findStaticQueryIds(node.children,result);node.children.forEach(function(child){var childData=result.get(child);childData.staticQueryIds.forEach(function(queryId){return staticQueryIds.add(queryId);});childData.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});queryMatches=node.queryMatches;}else if(node instanceof EmbeddedTemplateAst){findStaticQueryIds(node.children,result);node.children.forEach(function(child){var childData=result.get(child);childData.staticQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});childData.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});queryMatches=node.queryMatches;}if(queryMatches){queryMatches.forEach(function(match){return staticQueryIds.add(match.queryId);});}dynamicQueryIds.forEach(function(queryId){return staticQueryIds.delete(queryId);});result.set(node,{staticQueryIds:staticQueryIds,dynamicQueryIds:dynamicQueryIds});});return result;}function staticViewQueryIds(nodeStaticQueryIds){var staticQueryIds=new Set();var dynamicQueryIds=new Set();Array.from(nodeStaticQueryIds.values()).forEach(function(entry){entry.staticQueryIds.forEach(function(queryId){return staticQueryIds.add(queryId);});entry.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});dynamicQueryIds.forEach(function(queryId){return staticQueryIds.delete(queryId);});return{staticQueryIds:staticQueryIds,dynamicQueryIds:dynamicQueryIds};}function elementEventNameAndTarget(eventAst,dirAst){if(eventAst.isAnimation){return{name:"@"+eventAst.name+"."+eventAst.phase,target:dirAst&&dirAst.directive.isComponent?'component':null};}else{return eventAst;}}function calcStaticDynamicQueryFlags(queryIds,queryId,isFirst){var flags=0;// Note: We only make queries static that query for a single item.
// This is because of backwards compatibility with the old view compiler...
if(isFirst&&(queryIds.staticQueryIds.has(queryId)||!queryIds.dynamicQueryIds.has(queryId))){flags|=268435456/* StaticQuery */;}else{flags|=536870912/* DynamicQuery */;}return flags;}function elementEventFullName(target,name){return target?target+":"+name:name;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CONSTANT_PREFIX='_c';// Closure variables holding messages must be named `MSG_[A-Z0-9]+`
var TRANSLATION_PREFIX='MSG_';/**
 * Closure uses `goog.getMsg(message)` to lookup translations
 */var GOOG_GET_MSG='goog.getMsg';/**
 * Context to use when producing a key.
 *
 * This ensures we see the constant not the reference variable when producing
 * a key.
 */var KEY_CONTEXT={};/**
 * A node that is a place-holder that allows the node to be replaced when the actual
 * node is known.
 *
 * This allows the constant pool to change an expression from a direct reference to
 * a constant to a shared constant. It returns a fix-up node that is later allowed to
 * change the referenced expression.
 */var FixupExpression=/** @class */function(_super){(0,_tslib.__extends)(FixupExpression,_super);function FixupExpression(resolved){var _this=_super.call(this,resolved.type)||this;_this.resolved=resolved;_this.original=resolved;return _this;}FixupExpression.prototype.visitExpression=function(visitor,context){if(context===KEY_CONTEXT){// When producing a key we want to traverse the constant not the
// variable used to refer to it.
return this.original.visitExpression(visitor,context);}else{return this.resolved.visitExpression(visitor,context);}};FixupExpression.prototype.isEquivalent=function(e){return e instanceof FixupExpression&&this.resolved.isEquivalent(e.resolved);};FixupExpression.prototype.isConstant=function(){return true;};FixupExpression.prototype.fixup=function(expression){this.resolved=expression;this.shared=true;};return FixupExpression;}(Expression);/**
 * A constant pool allows a code emitter to share constant in an output context.
 *
 * The constant pool also supports sharing access to ivy definitions references.
 */var ConstantPool=/** @class */function(){function ConstantPool(){this.statements=[];this.translations=new Map();this.literals=new Map();this.literalFactories=new Map();this.injectorDefinitions=new Map();this.directiveDefinitions=new Map();this.componentDefinitions=new Map();this.pipeDefinitions=new Map();this.nextNameIndex=0;}ConstantPool.prototype.getConstLiteral=function(literal$$1,forceShared){if(literal$$1 instanceof LiteralExpr||literal$$1 instanceof FixupExpression){// Do no put simple literals into the constant pool or try to produce a constant for a
// reference to a constant.
return literal$$1;}var key=this.keyOf(literal$$1);var fixup=this.literals.get(key);var newValue=false;if(!fixup){fixup=new FixupExpression(literal$$1);this.literals.set(key,fixup);newValue=true;}if(!newValue&&!fixup.shared||newValue&&forceShared){// Replace the expression with a variable
var name_1=this.freshName();this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));fixup.fixup(variable(name_1));}return fixup;};// Generates closure specific code for translation.
//
// ```
// /**
//  * @desc description?
//  * @meaning meaning?
//  */
// const MSG_XYZ = goog.getMsg('message');
// ```
ConstantPool.prototype.getTranslation=function(message,meta){// The identity of an i18n message depends on the message and its meaning
var key=meta.meaning?message+"\0\0"+meta.meaning:message;var exp=this.translations.get(key);if(exp){return exp;}var docStmt=i18nMetaToDocStmt(meta);if(docStmt){this.statements.push(docStmt);}// Call closure to get the translation
var variable$$1=variable(this.freshTranslationName());var fnCall=variable(GOOG_GET_MSG).callFn([literal(message)]);var msgStmt=variable$$1.set(fnCall).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]);this.statements.push(msgStmt);this.translations.set(key,variable$$1);return variable$$1;};ConstantPool.prototype.getDefinition=function(type,kind,ctx,forceShared){if(forceShared===void 0){forceShared=false;}var definitions=this.definitionsOf(kind);var fixup=definitions.get(type);var newValue=false;if(!fixup){var property=this.propertyNameOf(kind);fixup=new FixupExpression(ctx.importExpr(type).prop(property));definitions.set(type,fixup);newValue=true;}if(!newValue&&!fixup.shared||newValue&&forceShared){var name_2=this.freshName();this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));fixup.fixup(variable(name_2));}return fixup;};ConstantPool.prototype.getLiteralFactory=function(literal$$1){// Create a pure function that builds an array of a mix of constant  and variable expressions
if(literal$$1 instanceof LiteralArrayExpr){var argumentsForKey=literal$$1.entries.map(function(e){return e.isConstant()?e:literal(null);});var key=this.keyOf(literalArr(argumentsForKey));return this._getLiteralFactory(key,literal$$1.entries,function(entries){return literalArr(entries);});}else{var expressionForKey=literalMap(literal$$1.entries.map(function(e){return{key:e.key,value:e.value.isConstant()?e.value:literal(null),quoted:e.quoted};}));var key=this.keyOf(expressionForKey);return this._getLiteralFactory(key,literal$$1.entries.map(function(e){return e.value;}),function(entries){return literalMap(entries.map(function(value,index){return{key:literal$$1.entries[index].key,value:value,quoted:literal$$1.entries[index].quoted};}));});}};ConstantPool.prototype._getLiteralFactory=function(key,values,resultMap){var _this=this;var literalFactory=this.literalFactories.get(key);var literalFactoryArguments=values.filter(function(e){return!e.isConstant();});if(!literalFactory){var resultExpressions=values.map(function(e,index){return e.isConstant()?_this.getConstLiteral(e,true):variable("a"+index);});var parameters=resultExpressions.filter(isVariable).map(function(e){return new FnParam(e.name,DYNAMIC_TYPE);});var pureFunctionDeclaration=fn(parameters,[new ReturnStatement(resultMap(resultExpressions))],INFERRED_TYPE);var name_3=this.freshName();this.statements.push(variable(name_3).set(pureFunctionDeclaration).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));literalFactory=variable(name_3);this.literalFactories.set(key,literalFactory);}return{literalFactory:literalFactory,literalFactoryArguments:literalFactoryArguments};};/**
     * Produce a unique name.
     *
     * The name might be unique among different prefixes if any of the prefixes end in
     * a digit so the prefix should be a constant string (not based on user input) and
     * must not end in a digit.
     */ConstantPool.prototype.uniqueName=function(prefix){return""+prefix+this.nextNameIndex++;};ConstantPool.prototype.definitionsOf=function(kind){switch(kind){case 2/* Component */:return this.componentDefinitions;case 1/* Directive */:return this.directiveDefinitions;case 0/* Injector */:return this.injectorDefinitions;case 3/* Pipe */:return this.pipeDefinitions;}error("Unknown definition kind "+kind);return this.componentDefinitions;};ConstantPool.prototype.propertyNameOf=function(kind){switch(kind){case 2/* Component */:return'ngComponentDef';case 1/* Directive */:return'ngDirectiveDef';case 0/* Injector */:return'ngInjectorDef';case 3/* Pipe */:return'ngPipeDef';}error("Unknown definition kind "+kind);return'<unknown>';};ConstantPool.prototype.freshName=function(){return this.uniqueName(CONSTANT_PREFIX);};ConstantPool.prototype.freshTranslationName=function(){return this.uniqueName(TRANSLATION_PREFIX).toUpperCase();};ConstantPool.prototype.keyOf=function(expression){return expression.visitExpression(new KeyVisitor(),KEY_CONTEXT);};return ConstantPool;}();/**
 * Visitor used to determine if 2 expressions are equivalent and can be shared in the
 * `ConstantPool`.
 *
 * When the id (string) generated by the visitor is equal, expressions are considered equivalent.
 */var KeyVisitor=/** @class */function(){function KeyVisitor(){this.visitReadVarExpr=invalid;this.visitWriteVarExpr=invalid;this.visitWriteKeyExpr=invalid;this.visitWritePropExpr=invalid;this.visitInvokeMethodExpr=invalid;this.visitInvokeFunctionExpr=invalid;this.visitInstantiateExpr=invalid;this.visitConditionalExpr=invalid;this.visitNotExpr=invalid;this.visitAssertNotNullExpr=invalid;this.visitCastExpr=invalid;this.visitFunctionExpr=invalid;this.visitBinaryOperatorExpr=invalid;this.visitReadPropExpr=invalid;this.visitReadKeyExpr=invalid;this.visitCommaExpr=invalid;}KeyVisitor.prototype.visitLiteralExpr=function(ast){return""+(typeof ast.value==='string'?'"'+ast.value+'"':ast.value);};KeyVisitor.prototype.visitLiteralArrayExpr=function(ast,context){var _this=this;return"["+ast.entries.map(function(entry){return entry.visitExpression(_this,context);}).join(',')+"]";};KeyVisitor.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;var mapKey=function mapKey(entry){var quote=entry.quoted?'"':'';return""+quote+entry.key+quote;};var mapEntry=function mapEntry(entry){return mapKey(entry)+":"+entry.value.visitExpression(_this,context);};return"{"+ast.entries.map(mapEntry).join(',');};KeyVisitor.prototype.visitExternalExpr=function(ast){return ast.value.moduleName?"EX:"+ast.value.moduleName+":"+ast.value.name:"EX:"+ast.value.runtime.name;};return KeyVisitor;}();function invalid(arg){throw new Error("Invalid state: Visitor "+this.constructor.name+" doesn't handle "+arg.constructor.name);}function isVariable(e){return e instanceof ReadVarExpr;}// Converts i18n meta informations for a message (description, meaning) to a JsDoc statement
// formatted as expected by the Closure compiler.
function i18nMetaToDocStmt(meta){var tags=[];if(meta.description){tags.push({tagName:"desc"/* Desc */,text:meta.description});}if(meta.meaning){tags.push({tagName:"meaning"/* Meaning */,text:meta.meaning});}return tags.length==0?null:new JSDocCommentStmt(tags);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * A container for message extracted from the templates.
 */var MessageBundle=/** @class */function(){function MessageBundle(_htmlParser,_implicitTags,_implicitAttrs,_locale){if(_locale===void 0){_locale=null;}this._htmlParser=_htmlParser;this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;this._locale=_locale;this._messages=[];}MessageBundle.prototype.updateFromTemplate=function(html,url,interpolationConfig){var htmlParserResult=this._htmlParser.parse(html,url,true,interpolationConfig);if(htmlParserResult.errors.length){return htmlParserResult.errors;}var i18nParserResult=extractMessages(htmlParserResult.rootNodes,interpolationConfig,this._implicitTags,this._implicitAttrs);if(i18nParserResult.errors.length){return i18nParserResult.errors;}(_a=this._messages).push.apply(_a,(0,_tslib.__spread)(i18nParserResult.messages));return[];var _a;};// Return the message in the internal format
// The public (serialized) format might be different, see the `write` method.
MessageBundle.prototype.getMessages=function(){return this._messages;};MessageBundle.prototype.write=function(serializer,filterSources){var messages={};var mapperVisitor=new MapPlaceholderNames();// Deduplicate messages based on their ID
this._messages.forEach(function(message){var id=serializer.digest(message);if(!messages.hasOwnProperty(id)){messages[id]=message;}else{(_a=messages[id].sources).push.apply(_a,(0,_tslib.__spread)(message.sources));}var _a;});// Transform placeholder names using the serializer mapping
var msgList=Object.keys(messages).map(function(id){var mapper=serializer.createNameMapper(messages[id]);var src=messages[id];var nodes=mapper?mapperVisitor.convert(src.nodes,mapper):src.nodes;var transformedMessage=new Message(nodes,{},{},src.meaning,src.description,id);transformedMessage.sources=src.sources;if(filterSources){transformedMessage.sources.forEach(function(source){return source.filePath=filterSources(source.filePath);});}return transformedMessage;});return serializer.write(msgList,this._locale);};return MessageBundle;}();// Transform an i18n AST by renaming the placeholder nodes with the given mapper
exports.MessageBundle=MessageBundle;var MapPlaceholderNames=/** @class */function(_super){(0,_tslib.__extends)(MapPlaceholderNames,_super);function MapPlaceholderNames(){return _super!==null&&_super.apply(this,arguments)||this;}MapPlaceholderNames.prototype.convert=function(nodes,mapper){var _this=this;return mapper?nodes.map(function(n){return n.visit(_this,mapper);}):nodes;};MapPlaceholderNames.prototype.visitTagPlaceholder=function(ph,mapper){var _this=this;var startName=mapper.toPublicName(ph.startName);var closeName=ph.closeName?mapper.toPublicName(ph.closeName):ph.closeName;var children=ph.children.map(function(n){return n.visit(_this,mapper);});return new TagPlaceholder(ph.tag,ph.attrs,startName,closeName,children,ph.isVoid,ph.sourceSpan);};MapPlaceholderNames.prototype.visitPlaceholder=function(ph,mapper){return new Placeholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);};MapPlaceholderNames.prototype.visitIcuPlaceholder=function(ph,mapper){return new IcuPlaceholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);};return MapPlaceholderNames;}(CloneVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function mapLiteral(obj){return literalMap(Object.keys(obj).map(function(key){return{key:key,quoted:false,value:obj[key]};}));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var CORE$1='@angular/core';var Identifiers$1=/** @class */function(){function Identifiers(){}/* Methods */Identifiers.NEW_METHOD='factory';Identifiers.TRANSFORM_METHOD='transform';Identifiers.PATCH_DEPS='patchedDeps';/* Instructions */Identifiers.createElement={name:'ɵE',moduleName:CORE$1};Identifiers.elementEnd={name:'ɵe',moduleName:CORE$1};Identifiers.elementProperty={name:'ɵp',moduleName:CORE$1};Identifiers.elementAttribute={name:'ɵa',moduleName:CORE$1};Identifiers.elementClassNamed={name:'ɵkn',moduleName:CORE$1};Identifiers.elementStyleNamed={name:'ɵsn',moduleName:CORE$1};Identifiers.containerCreate={name:'ɵC',moduleName:CORE$1};Identifiers.containerEnd={name:'ɵc',moduleName:CORE$1};Identifiers.directiveCreate={name:'ɵD',moduleName:CORE$1};Identifiers.text={name:'ɵT',moduleName:CORE$1};Identifiers.directiveInput={name:'ɵi',moduleName:CORE$1};Identifiers.textCreateBound={name:'ɵt',moduleName:CORE$1};Identifiers.bind={name:'ɵb',moduleName:CORE$1};Identifiers.interpolation1={name:'ɵi1',moduleName:CORE$1};Identifiers.interpolation2={name:'ɵi2',moduleName:CORE$1};Identifiers.interpolation3={name:'ɵi3',moduleName:CORE$1};Identifiers.interpolation4={name:'ɵi4',moduleName:CORE$1};Identifiers.interpolation5={name:'ɵi5',moduleName:CORE$1};Identifiers.interpolation6={name:'ɵi6',moduleName:CORE$1};Identifiers.interpolation7={name:'ɵi7',moduleName:CORE$1};Identifiers.interpolation8={name:'ɵi8',moduleName:CORE$1};Identifiers.interpolationV={name:'ɵiV',moduleName:CORE$1};Identifiers.pureFunction0={name:'ɵf0',moduleName:CORE$1};Identifiers.pureFunction1={name:'ɵf1',moduleName:CORE$1};Identifiers.pureFunction2={name:'ɵf2',moduleName:CORE$1};Identifiers.pureFunction3={name:'ɵf3',moduleName:CORE$1};Identifiers.pureFunction4={name:'ɵf4',moduleName:CORE$1};Identifiers.pureFunction5={name:'ɵf5',moduleName:CORE$1};Identifiers.pureFunction6={name:'ɵf6',moduleName:CORE$1};Identifiers.pureFunction7={name:'ɵf7',moduleName:CORE$1};Identifiers.pureFunction8={name:'ɵf8',moduleName:CORE$1};Identifiers.pureFunctionV={name:'ɵfV',moduleName:CORE$1};Identifiers.pipeBind1={name:'ɵpb1',moduleName:CORE$1};Identifiers.pipeBind2={name:'ɵpb2',moduleName:CORE$1};Identifiers.pipeBind3={name:'ɵpb3',moduleName:CORE$1};Identifiers.pipeBind4={name:'ɵpb4',moduleName:CORE$1};Identifiers.pipeBindV={name:'ɵpbV',moduleName:CORE$1};Identifiers.load={name:'ɵld',moduleName:CORE$1};Identifiers.pipe={name:'ɵPp',moduleName:CORE$1};Identifiers.projection={name:'ɵP',moduleName:CORE$1};Identifiers.projectionDef={name:'ɵpD',moduleName:CORE$1};Identifiers.refreshComponent={name:'ɵr',moduleName:CORE$1};Identifiers.directiveLifeCycle={name:'ɵl',moduleName:CORE$1};Identifiers.injectAttribute={name:'ɵinjectAttribute',moduleName:CORE$1};Identifiers.injectElementRef={name:'ɵinjectElementRef',moduleName:CORE$1};Identifiers.injectTemplateRef={name:'ɵinjectTemplateRef',moduleName:CORE$1};Identifiers.injectViewContainerRef={name:'ɵinjectViewContainerRef',moduleName:CORE$1};Identifiers.directiveInject={name:'ɵdirectiveInject',moduleName:CORE$1};Identifiers.defineComponent={name:'ɵdefineComponent',moduleName:CORE$1};Identifiers.defineDirective={name:'ɵdefineDirective',moduleName:CORE$1};Identifiers.defineInjector={name:'defineInjector',moduleName:CORE$1};Identifiers.definePipe={name:'ɵdefinePipe',moduleName:CORE$1};Identifiers.query={name:'ɵQ',moduleName:CORE$1};Identifiers.queryRefresh={name:'ɵqR',moduleName:CORE$1};Identifiers.NgOnChangesFeature={name:'ɵNgOnChangesFeature',moduleName:CORE$1};Identifiers.listener={name:'ɵL',moduleName:CORE$1};return Identifiers;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EMPTY_ARRAY=literalArr([]);function convertMetaToOutput(meta,ctx){if(Array.isArray(meta)){return literalArr(meta.map(function(entry){return convertMetaToOutput(entry,ctx);}));}else if(meta instanceof StaticSymbol){return ctx.importExpr(meta);}else if(meta==null){return literal(meta);}else{throw new Error("Internal error: Unsupported or unknown metadata: "+meta);}}function compileNgModule(ctx,ngModule,injectableCompiler){var className=identifierName(ngModule.type);var rawImports=ngModule.rawImports?[ngModule.rawImports]:[];var rawExports=ngModule.rawExports?[ngModule.rawExports]:[];var injectorDefArg=mapLiteral({'factory':injectableCompiler.factoryFor({type:ngModule.type,symbol:ngModule.type.reference},ctx),'providers':convertMetaToOutput(ngModule.rawProviders,ctx),'imports':convertMetaToOutput((0,_tslib.__spread)(rawImports,rawExports),ctx)});var injectorDef=importExpr(Identifiers$1.defineInjector).callFn([injectorDefArg]);ctx.statements.push(new ClassStmt(/* name */className,/* parent */null,/* fields */[new ClassField(/* name */'ngInjectorDef',/* type */INFERRED_TYPE,/* modifiers */[StmtModifier.Static],/* initializer */injectorDef)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Comment to insert above back-patch
 */var BUILD_OPTIMIZER_COLOCATE='@__BUILD_OPTIMIZER_COLOCATE__';/**
 * Comment to mark removable expressions
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /** Name of the context parameter passed into a template function */var CONTEXT_NAME='ctx';/** Name of the RenderFlag passed into a template function */var RENDER_FLAGS='rf';/** Name of the temporary to use during data binding */var TEMPORARY_NAME='_t';/** The prefix reference variables */var REFERENCE_PREFIX='_r';/** The name of the implicit context reference */var IMPLICIT_REFERENCE='$implicit';/** Name of the i18n attributes **/var I18N_ATTR='i18n';var I18N_ATTR_PREFIX='i18n-';/** I18n separators for metadata **/var MEANING_SEPARATOR$1='|';var ID_SEPARATOR$1='@@';function compileDirective(outputCtx,directive,reflector,bindingParser,mode){var definitionMapValues=[];var field=function field(key,value){if(value){definitionMapValues.push({key:key,value:value,quoted:false});}};// e.g. 'type: MyDirective`
field('type',outputCtx.importExpr(directive.type.reference));// e.g. `selectors: [['', 'someDir', '']]`
field('selectors',createDirectiveSelector(directive.selector));// e.g. `factory: () => new MyApp(injectElementRef())`
field('factory',createFactory(directive.type,outputCtx,reflector,directive.queries));// e.g. `hostBindings: (dirIndex, elIndex) => { ... }
field('hostBindings',createHostBindingsFunction(directive,outputCtx,bindingParser));// e.g. `attributes: ['role', 'listbox']`
field('attributes',createHostAttributesArray(directive,outputCtx));// e.g 'inputs: {a: 'a'}`
field('inputs',conditionallyCreateMapObjectLiteral(directive.inputs,outputCtx));// e.g 'outputs: {a: 'a'}`
field('outputs',conditionallyCreateMapObjectLiteral(directive.outputs,outputCtx));var className=identifierName(directive.type);className||error("Cannot resolver the name of "+directive.type);var definitionField=outputCtx.constantPool.propertyNameOf(1/* Directive */);var definitionFunction=importExpr(Identifiers$1.defineDirective).callFn([literalMap(definitionMapValues)]);if(mode===0/* PartialClass */){// Create the partial class to be merged with the actual class.
outputCtx.statements.push(new ClassStmt(/* name */className,/* parent */null,/* fields */[new ClassField(/* name */definitionField,/* type */INFERRED_TYPE,/* modifiers */[StmtModifier.Static],/* initializer */definitionFunction)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]));}else{// Create back-patch definition.
var classReference=outputCtx.importExpr(directive.type.reference);// Create the back-patch statement
outputCtx.statements.push(new CommentStmt(BUILD_OPTIMIZER_COLOCATE));outputCtx.statements.push(classReference.prop(definitionField).set(definitionFunction).toStmt());}}function compileComponent(outputCtx,component,pipeSummaries,template,reflector,bindingParser,mode){var definitionMapValues=[];// Pipes and Directives found in the template
var pipes=new Set();var directives=new Set();var field=function field(key,value){if(value){definitionMapValues.push({key:key,value:value,quoted:false});}};// e.g. `type: MyApp`
field('type',outputCtx.importExpr(component.type.reference));// e.g. `selectors: [['my-app']]`
field('selectors',createDirectiveSelector(component.selector));var selector=component.selector&&CssSelector.parse(component.selector);var firstSelector=selector&&selector[0];// e.g. `attr: ["class", ".my.app"]
// This is optional an only included if the first selector of a component specifies attributes.
if(firstSelector){var selectorAttributes=firstSelector.getAttrs();if(selectorAttributes.length){field('attrs',outputCtx.constantPool.getConstLiteral(literalArr(selectorAttributes.map(function(value){return value!=null?literal(value):literal(undefined);})),/* forceShared */true));}}// e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`
field('factory',createFactory(component.type,outputCtx,reflector,component.queries));// e.g `hostBindings: function MyApp_HostBindings { ... }
field('hostBindings',createHostBindingsFunction(component,outputCtx,bindingParser));// e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`
var templateTypeName=component.type.reference.name;var templateName=templateTypeName?templateTypeName+"_Template":null;var pipeMap=new Map(pipeSummaries.map(function(pipe){return[pipe.name,pipe];}));var templateFunctionExpression=new TemplateDefinitionBuilder(outputCtx,outputCtx.constantPool,reflector,CONTEXT_NAME,BindingScope.ROOT_SCOPE,0,component.template.ngContentSelectors,templateTypeName,templateName,pipeMap,component.viewQueries,directives,pipes).buildTemplateFunction(template,[]);field('template',templateFunctionExpression);// e.g. `directives: [MyDirective]`
if(directives.size){var expressions=Array.from(directives).map(function(d){return outputCtx.importExpr(d);});field('directives',literalArr(expressions));}// e.g. `pipes: [MyPipe]`
if(pipes.size){var expressions=Array.from(pipes).map(function(p){return outputCtx.importExpr(p);});field('pipes',literalArr(expressions));}// e.g `inputs: {a: 'a'}`
field('inputs',conditionallyCreateMapObjectLiteral(component.inputs,outputCtx));// e.g 'outputs: {a: 'a'}`
field('outputs',conditionallyCreateMapObjectLiteral(component.outputs,outputCtx));// e.g. `features: [NgOnChangesFeature(MyComponent)]`
var features=[];if(component.type.lifecycleHooks.some(function(lifecycle){return lifecycle==LifecycleHooks.OnChanges;})){features.push(importExpr(Identifiers$1.NgOnChangesFeature,null,null).callFn([outputCtx.importExpr(component.type.reference)]));}if(features.length){field('features',literalArr(features));}var definitionField=outputCtx.constantPool.propertyNameOf(2/* Component */);var definitionFunction=importExpr(Identifiers$1.defineComponent).callFn([literalMap(definitionMapValues)]);if(mode===0/* PartialClass */){var className=identifierName(component.type);className||error("Cannot resolver the name of "+component.type);// Create the partial class to be merged with the actual class.
outputCtx.statements.push(new ClassStmt(/* name */className,/* parent */null,/* fields */[new ClassField(/* name */definitionField,/* type */INFERRED_TYPE,/* modifiers */[StmtModifier.Static],/* initializer */definitionFunction)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]));}else{var classReference=outputCtx.importExpr(component.type.reference);// Create the back-patch statement
outputCtx.statements.push(new CommentStmt(BUILD_OPTIMIZER_COLOCATE),classReference.prop(definitionField).set(definitionFunction).toStmt());}}function unsupported(feature){if(this){throw new Error("Builder "+this.constructor.name+" doesn't support "+feature+" yet");}throw new Error("Feature "+feature+" is not supported yet");}var BINDING_INSTRUCTION_MAP=(_a={},_a[PropertyBindingType.Property]=Identifiers$1.elementProperty,_a[PropertyBindingType.Attribute]=Identifiers$1.elementAttribute,_a[PropertyBindingType.Class]=Identifiers$1.elementClassNamed,_a[PropertyBindingType.Style]=Identifiers$1.elementStyleNamed,_a);function interpolate(args){args=args.slice(1);// Ignore the length prefix added for render2
switch(args.length){case 3:return importExpr(Identifiers$1.interpolation1).callFn(args);case 5:return importExpr(Identifiers$1.interpolation2).callFn(args);case 7:return importExpr(Identifiers$1.interpolation3).callFn(args);case 9:return importExpr(Identifiers$1.interpolation4).callFn(args);case 11:return importExpr(Identifiers$1.interpolation5).callFn(args);case 13:return importExpr(Identifiers$1.interpolation6).callFn(args);case 15:return importExpr(Identifiers$1.interpolation7).callFn(args);case 17:return importExpr(Identifiers$1.interpolation8).callFn(args);}args.length>=19&&args.length%2==1||error("Invalid interpolation argument length "+args.length);return importExpr(Identifiers$1.interpolationV).callFn([literalArr(args)]);}function pipeBinding(args){switch(args.length){case 0:// The first parameter to pipeBind is always the value to be transformed followed
// by arg.length arguments so the total number of arguments to pipeBind are
// arg.length + 1.
return Identifiers$1.pipeBind1;case 1:return Identifiers$1.pipeBind2;case 2:return Identifiers$1.pipeBind3;default:return Identifiers$1.pipeBindV;}}var pureFunctionIdentifiers=[Identifiers$1.pureFunction0,Identifiers$1.pureFunction1,Identifiers$1.pureFunction2,Identifiers$1.pureFunction3,Identifiers$1.pureFunction4,Identifiers$1.pureFunction5,Identifiers$1.pureFunction6,Identifiers$1.pureFunction7,Identifiers$1.pureFunction8];function getLiteralFactory(outputContext,literal$$1){var _a=outputContext.constantPool.getLiteralFactory(literal$$1),literalFactory=_a.literalFactory,literalFactoryArguments=_a.literalFactoryArguments;literalFactoryArguments.length>0||error("Expected arguments to a literal factory function");var pureFunctionIdent=pureFunctionIdentifiers[literalFactoryArguments.length]||Identifiers$1.pureFunctionV;// Literal factories are pure functions that only need to be re-invoked when the parameters
// change.
return importExpr(pureFunctionIdent).callFn((0,_tslib.__spread)([literalFactory],literalFactoryArguments));}function noop(){}var BindingScope=/** @class */function(){function BindingScope(parent,declareLocalVarCallback){if(parent===void 0){parent=null;}if(declareLocalVarCallback===void 0){declareLocalVarCallback=noop;}this.parent=parent;this.declareLocalVarCallback=declareLocalVarCallback;/**
         * Keeps a map from local variables to their expressions.
         *
         * This is used when one refers to variable such as: 'let abc = a.b.c`.
         * - key to the map is the string literal `"abc"`.
         * - value `lhs` is the left hand side which is an AST representing `abc`.
         * - value `rhs` is the right hand side which is an AST representing `a.b.c`.
         * - value `declared` is true if the `declareLocalVarCallback` has been called for this scope
         * already.
         */this.map=new Map();this.referenceNameIndex=0;}BindingScope.prototype.get=function(name){var current=this;while(current){var value=current.map.get(name);if(value!=null){if(current!==this){// make a local copy and reset the `declared` state.
value={lhs:value.lhs,rhs:value.rhs,declared:false};// Cache the value locally.
this.map.set(name,value);}if(value.rhs&&!value.declared){// if it is first time we are referencing the variable in the scope
// than invoke the callback to insert variable declaration.
this.declareLocalVarCallback(value.lhs,value.rhs);value.declared=true;}return value.lhs;}current=current.parent;}return null;};/**
     * Create a local variable for later reference.
     *
     * @param name Name of the variable.
     * @param lhs AST representing the left hand side of the `let lhs = rhs;`.
     * @param rhs AST representing the right hand side of the `let lhs = rhs;`. The `rhs` can be
     * `undefined` for variable that are ambient such as `$event` and which don't have `rhs`
     * declaration.
     */BindingScope.prototype.set=function(name,lhs,rhs){!this.map.has(name)||error("The name "+name+" is already defined in scope to be "+this.map.get(name));this.map.set(name,{lhs:lhs,rhs:rhs,declared:false});return this;};BindingScope.prototype.getLocal=function(name){return this.get(name);};BindingScope.prototype.nestedScope=function(declareCallback){return new BindingScope(this,declareCallback);};BindingScope.prototype.freshReferenceName=function(){var current=this;// Find the top scope as it maintains the global reference count
while(current.parent){current=current.parent;}var ref=""+REFERENCE_PREFIX+current.referenceNameIndex++;return ref;};BindingScope.ROOT_SCOPE=new BindingScope().set('$event',variable('$event'));return BindingScope;}();var TemplateDefinitionBuilder=/** @class */function(){function TemplateDefinitionBuilder(outputCtx,constantPool,reflector,contextParameter,parentBindingScope,level,ngContentSelectors,contextName,templateName,pipeMap,viewQueries,directives,pipes){if(level===void 0){level=0;}var _this=this;this.outputCtx=outputCtx;this.constantPool=constantPool;this.reflector=reflector;this.contextParameter=contextParameter;this.level=level;this.ngContentSelectors=ngContentSelectors;this.contextName=contextName;this.templateName=templateName;this.pipeMap=pipeMap;this.viewQueries=viewQueries;this.directives=directives;this.pipes=pipes;this._dataIndex=0;this._bindingContext=0;this._temporaryAllocated=false;this._prefix=[];this._creationMode=[];this._variableMode=[];this._bindingMode=[];this._postfix=[];this._projectionDefinitionIndex=0;this.unsupported=unsupported;this.invalid=invalid$1;// Whether we are inside a translatable element (`<p i18n>... somewhere here ... </p>)
this._inI18nSection=false;this._i18nSectionIndex=-1;// Maps of placeholder to node indexes for each of the i18n section
this._phToNodeIdxes=[{}];// These should be handled in the template or element directly.
this.visitReference=invalid$1;this.visitVariable=invalid$1;this.visitEvent=invalid$1;this.visitElementProperty=invalid$1;this.visitAttr=invalid$1;// These should be handled in the template or element directly
this.visitDirective=invalid$1;this.visitDirectiveProperty=invalid$1;this.bindingScope=parentBindingScope.nestedScope(function(lhsVar,expression){_this._bindingMode.push(lhsVar.set(expression).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));});this._valueConverter=new ValueConverter(outputCtx,function(){return _this.allocateDataSlot();},function(name,localName,slot,value){_this.bindingScope.set(localName,value);var pipe=pipeMap.get(name);pipe||error("Could not find pipe "+name);_this.pipes.add(pipe.type.reference);_this._creationMode.push(importExpr(Identifiers$1.pipe).callFn([literal(slot),literal(name)]).toStmt());});}TemplateDefinitionBuilder.prototype.buildTemplateFunction=function(nodes,variables){try{// Create variable bindings
for(var variables_1=(0,_tslib.__values)(variables),variables_1_1=variables_1.next();!variables_1_1.done;variables_1_1=variables_1.next()){var variable$$1=variables_1_1.value;var variableName=variable$$1.name;var expression=variable(this.contextParameter).prop(variable$$1.value||IMPLICIT_REFERENCE);var scopedName=this.bindingScope.freshReferenceName();// Add the reference to the local scope.
this.bindingScope.set(variableName,variable(variableName+scopedName),expression);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(variables_1_1&&!variables_1_1.done&&(_a=variables_1.return))_a.call(variables_1);}finally{if(e_1)throw e_1.error;}}// Collect content projections
if(this.ngContentSelectors&&this.ngContentSelectors.length>0){var contentProjections=getContentProjection(nodes,this.ngContentSelectors);this._contentProjections=contentProjections;if(contentProjections.size>0){var selectors_1=[];Array.from(contentProjections.values()).forEach(function(info){if(info.selector){selectors_1[info.index-1]=info.selector;}});var projectionIndex=this._projectionDefinitionIndex=this.allocateDataSlot();var parameters=[literal(projectionIndex)];if(selectors_1.some(function(value){return!value;})){error("content project information skipped an index");}if(selectors_1.length>1){var r3Selectors=selectors_1.map(function(s){return parseSelectorToR3Selector(s);});// `projectionDef` needs both the parsed and raw value of the selectors
var parsed=this.outputCtx.constantPool.getConstLiteral(asLiteral(r3Selectors),true);var unParsed=this.outputCtx.constantPool.getConstLiteral(asLiteral(selectors_1),true);parameters.push(parsed,unParsed);}this.instruction.apply(this,(0,_tslib.__spread)([this._creationMode,null,Identifiers$1.projectionDef],parameters));}}try{// Define and update any view queries
for(var _b=(0,_tslib.__values)(this.viewQueries),_c=_b.next();!_c.done;_c=_b.next()){var query=_c.value;// e.g. r3.Q(0, somePredicate, true);
var querySlot=this.allocateDataSlot();var predicate=getQueryPredicate(query,this.outputCtx);var args=[/* memoryIndex */literal(querySlot,INFERRED_TYPE),/* predicate */predicate,/* descend */literal(query.descendants,INFERRED_TYPE)];if(query.read){args.push(this.outputCtx.importExpr(query.read.identifier.reference));}this.instruction.apply(this,(0,_tslib.__spread)([this._creationMode,null,Identifiers$1.query],args));// (r3.qR(tmp = r3.ɵld(0)) && (ctx.someDir = tmp));
var temporary=this.temp();var getQueryList=importExpr(Identifiers$1.load).callFn([literal(querySlot)]);var refresh=importExpr(Identifiers$1.queryRefresh).callFn([temporary.set(getQueryList)]);var updateDirective=variable(CONTEXT_NAME).prop(query.propertyName).set(query.first?temporary.prop('first'):temporary);this._bindingMode.push(refresh.and(updateDirective).toStmt());}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_d=_b.return))_d.call(_b);}finally{if(e_2)throw e_2.error;}}templateVisitAll(this,nodes);var creationMode=this._creationMode.length>0?[ifStmt(variable(RENDER_FLAGS).bitwiseAnd(literal(1/* Create */),null,false),this._creationMode)]:[];var updateMode=this._bindingMode.length>0?[ifStmt(variable(RENDER_FLAGS).bitwiseAnd(literal(2/* Update */),null,false),this._bindingMode)]:[];try{// Generate maps of placeholder name to node indexes
// TODO(vicb): This is a WIP, not fully supported yet
for(var _e=(0,_tslib.__values)(this._phToNodeIdxes),_f=_e.next();!_f.done;_f=_e.next()){var phToNodeIdx=_f.value;if(Object.keys(phToNodeIdx).length>0){var scopedName=this.bindingScope.freshReferenceName();var phMap=variable(scopedName).set(mapToExpression(phToNodeIdx,true)).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]);this._prefix.push(phMap);}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_f&&!_f.done&&(_g=_e.return))_g.call(_e);}finally{if(e_3)throw e_3.error;}}return fn([new FnParam(RENDER_FLAGS,NUMBER_TYPE),new FnParam(this.contextParameter,null)],(0,_tslib.__spread)(this._prefix,creationMode,this._variableMode,updateMode,this._postfix),INFERRED_TYPE,null,this.templateName);var e_1,_a,e_2,_d,e_3,_g;};// LocalResolver
TemplateDefinitionBuilder.prototype.getLocal=function(name){return this.bindingScope.get(name);};// TemplateAstVisitor
TemplateDefinitionBuilder.prototype.visitNgContent=function(ngContent){var info=this._contentProjections.get(ngContent);info||error("Expected "+ngContent.sourceSpan+" to be included in content projection collection");var slot=this.allocateDataSlot();var parameters=[literal(slot),literal(this._projectionDefinitionIndex)];if(info.index!==0){parameters.push(literal(info.index));}this.instruction.apply(this,(0,_tslib.__spread)([this._creationMode,ngContent.sourceSpan,Identifiers$1.projection],parameters));};// TemplateAstVisitor
TemplateDefinitionBuilder.prototype.visitElement=function(element){var _this=this;var elementIndex=this.allocateDataSlot();var referenceDataSlots=new Map();var wasInI18nSection=this._inI18nSection;var outputAttrs={};var attrI18nMetas={};var i18nMeta='';// Elements inside i18n sections are replaced with placeholders
// TODO(vicb): nested elements are a WIP in this phase
if(this._inI18nSection){var phName=element.name.toLowerCase();if(!this._phToNodeIdxes[this._i18nSectionIndex][phName]){this._phToNodeIdxes[this._i18nSectionIndex][phName]=[];}this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);}try{// Handle i18n attributes
for(var _a=(0,_tslib.__values)(element.attrs),_b=_a.next();!_b.done;_b=_a.next()){var attr=_b.value;var name_1=attr.name;var value=attr.value;if(name_1===I18N_ATTR){if(this._inI18nSection){throw new Error("Could not mark an element as translatable inside of a translatable section");}this._inI18nSection=true;this._i18nSectionIndex++;this._phToNodeIdxes[this._i18nSectionIndex]={};i18nMeta=value;}else if(name_1.startsWith(I18N_ATTR_PREFIX)){attrI18nMetas[name_1.slice(I18N_ATTR_PREFIX.length)]=value;}else{outputAttrs[name_1]=value;}}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_b&&!_b.done&&(_c=_a.return))_c.call(_a);}finally{if(e_4)throw e_4.error;}}// Element creation mode
var parameters=[literal(elementIndex),literal(element.name)];element.directives.forEach(function(directive){return _this.directives.add(directive.directive.type.reference);});// Add the attributes
var i18nMessages=[];var attributes=[];var hasI18nAttr=false;Object.getOwnPropertyNames(outputAttrs).forEach(function(name){var value=outputAttrs[name];attributes.push(literal(name));if(attrI18nMetas.hasOwnProperty(name)){hasI18nAttr=true;var meta=parseI18nMeta(attrI18nMetas[name]);var variable$$1=_this.constantPool.getTranslation(value,meta);attributes.push(variable$$1);}else{attributes.push(literal(value));}});var attrArg=TYPED_NULL_EXPR;if(attributes.length>0){attrArg=hasI18nAttr?getLiteralFactory(this.outputCtx,literalArr(attributes)):this.constantPool.getConstLiteral(literalArr(attributes),true);}parameters.push(attrArg);if(element.references&&element.references.length>0){var references=flatten(element.references.map(function(reference){var slot=_this.allocateDataSlot();referenceDataSlots.set(reference.name,slot);// Generate the update temporary.
var variableName=_this.bindingScope.freshReferenceName();_this._variableMode.push(variable(variableName,INFERRED_TYPE).set(importExpr(Identifiers$1.load).callFn([literal(slot)])).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));_this.bindingScope.set(reference.name,variable(variableName));return[reference.name,reference.originalValue];})).map(function(value){return literal(value);});parameters.push(this.constantPool.getConstLiteral(literalArr(references),/* forceShared */true));}else{parameters.push(TYPED_NULL_EXPR);}// Generate the instruction create element instruction
if(i18nMessages.length>0){(_d=this._creationMode).push.apply(_d,(0,_tslib.__spread)(i18nMessages));}this.instruction.apply(this,(0,_tslib.__spread)([this._creationMode,element.sourceSpan,Identifiers$1.createElement],trimTrailingNulls(parameters)));var implicit=variable(CONTEXT_NAME);// Generate Listeners (outputs)
element.outputs.forEach(function(outputAst){var functionName=_this.templateName+"_"+element.name+"_"+outputAst.name+"_listener";var localVars=[];var bindingScope=_this.bindingScope.nestedScope(function(lhsVar,rhsExpression){localVars.push(lhsVar.set(rhsExpression).toDeclStmt(INFERRED_TYPE,[StmtModifier.Final]));});var bindingExpr=convertActionBinding(bindingScope,variable(CONTEXT_NAME),outputAst.handler,'b',function(){return error('Unexpected interpolation');});var handler=fn([new FnParam('$event',DYNAMIC_TYPE)],(0,_tslib.__spread)(localVars,bindingExpr.render3Stmts),INFERRED_TYPE,null,functionName);_this.instruction(_this._creationMode,outputAst.sourceSpan,Identifiers$1.listener,literal(outputAst.name),handler);});try{// Generate element input bindings
for(var _e=(0,_tslib.__values)(element.inputs),_f=_e.next();!_f.done;_f=_e.next()){var input=_f.value;if(input.isAnimation){this.unsupported('animations');}var convertedBinding=this.convertPropertyBinding(implicit,input.value);var instruction=BINDING_INSTRUCTION_MAP[input.type];if(instruction){// TODO(chuckj): runtime: security context?
this.instruction(this._bindingMode,input.sourceSpan,instruction,literal(elementIndex),literal(input.name),convertedBinding);}else{this.unsupported("binding "+PropertyBindingType[input.type]);}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_f&&!_f.done&&(_g=_e.return))_g.call(_e);}finally{if(e_5)throw e_5.error;}}// Generate directives input bindings
this._visitDirectives(element.directives,implicit,elementIndex);// Traverse element child nodes
if(this._inI18nSection&&element.children.length==1&&element.children[0]instanceof TextAst){var text=element.children[0];this.visitSingleI18nTextChild(text,i18nMeta);}else{templateVisitAll(this,element.children);}// Finish element construction mode.
this.instruction(this._creationMode,element.endSourceSpan||element.sourceSpan,Identifiers$1.elementEnd);// Restore the state before exiting this node
this._inI18nSection=wasInI18nSection;var e_4,_c,_d,e_5,_g;};TemplateDefinitionBuilder.prototype._visitDirectives=function(directives,implicit,nodeIndex){try{for(var directives_1=(0,_tslib.__values)(directives),directives_1_1=directives_1.next();!directives_1_1.done;directives_1_1=directives_1.next()){var directive=directives_1_1.value;// Creation mode
// e.g. D(0, TodoComponentDef.n(), TodoComponentDef);
var directiveType=directive.directive.type.reference;var kind=directive.directive.isComponent?2/* Component */:1;try{// Note: *do not cache* calls to this.directiveOf() as the constant pool needs to know if the
// node is referenced multiple times to know that it must generate the reference into a
// temporary.
// Bindings
for(var _a=(0,_tslib.__values)(directive.inputs),_b=_a.next();!_b.done;_b=_a.next()){var input=_b.value;var convertedBinding=this.convertPropertyBinding(implicit,input.value);this.instruction(this._bindingMode,directive.sourceSpan,Identifiers$1.elementProperty,literal(nodeIndex),literal(input.templateName),importExpr(Identifiers$1.bind).callFn([convertedBinding]));}}catch(e_6_1){e_6={error:e_6_1};}finally{try{if(_b&&!_b.done&&(_c=_a.return))_c.call(_a);}finally{if(e_6)throw e_6.error;}}}}catch(e_7_1){e_7={error:e_7_1};}finally{try{if(directives_1_1&&!directives_1_1.done&&(_d=directives_1.return))_d.call(directives_1);}finally{if(e_7)throw e_7.error;}}var e_7,_d,e_6,_c;};// TemplateAstVisitor
TemplateDefinitionBuilder.prototype.visitEmbeddedTemplate=function(template){var _this=this;var templateIndex=this.allocateDataSlot();var templateRef=this.reflector.resolveExternalReference(Identifiers.TemplateRef);var templateDirective=template.directives.find(function(directive){return directive.directive.type.diDeps.some(function(dependency){return dependency.token!=null&&tokenReference(dependency.token)==templateRef;});});var contextName=this.contextName&&templateDirective&&templateDirective.directive.type.reference.name?this.contextName+"_"+templateDirective.directive.type.reference.name:null;var templateName=contextName?contextName+"_Template_"+templateIndex:"Template_"+templateIndex;var templateContext="ctx"+this.level;var parameters=[variable(templateName),literal(null,INFERRED_TYPE)];var attributeNames=[];template.directives.forEach(function(directiveAst){_this.directives.add(directiveAst.directive.type.reference);CssSelector.parse(directiveAst.directive.selector).forEach(function(selector){selector.attrs.forEach(function(value){// Convert '' (falsy) strings into `null`. This is needed because we want
// to communicate to runtime that these attributes are present for
// selector matching, but should not actually be added to the DOM.
// attributeNames.push(o.literal(value ? value : null));
// TODO(misko): make the above comment true, for now just write to DOM because
// the runtime selectors have not been updated.
attributeNames.push(literal(value));});});});if(attributeNames.length){parameters.push(this.constantPool.getConstLiteral(literalArr(attributeNames),/* forcedShared */true));}// e.g. C(1, C1Template)
this.instruction.apply(this,(0,_tslib.__spread)([this._creationMode,template.sourceSpan,Identifiers$1.containerCreate,literal(templateIndex)],trimTrailingNulls(parameters)));// Generate directives
this._visitDirectives(template.directives,variable(CONTEXT_NAME),templateIndex);// Create the template function
var templateVisitor=new TemplateDefinitionBuilder(this.outputCtx,this.constantPool,this.reflector,templateContext,this.bindingScope,this.level+1,this.ngContentSelectors,contextName,templateName,this.pipeMap,[],this.directives,this.pipes);var templateFunctionExpr=templateVisitor.buildTemplateFunction(template.children,template.variables);this._postfix.push(templateFunctionExpr.toDeclStmt(templateName,null));};// TemplateAstVisitor
TemplateDefinitionBuilder.prototype.visitBoundText=function(text){var nodeIndex=this.allocateDataSlot();// Creation mode
this.instruction(this._creationMode,text.sourceSpan,Identifiers$1.text,literal(nodeIndex));this.instruction(this._bindingMode,text.sourceSpan,Identifiers$1.textCreateBound,literal(nodeIndex),this.convertPropertyBinding(variable(CONTEXT_NAME),text.value));};// TemplateAstVisitor
TemplateDefinitionBuilder.prototype.visitText=function(text){// Text is defined in creation mode only.
this.instruction(this._creationMode,text.sourceSpan,Identifiers$1.text,literal(this.allocateDataSlot()),literal(text.value));};// When the content of the element is a single text node the translation can be inlined:
//
// `<p i18n="desc|mean">some content</p>`
// compiles to
// ```
// /**
// * @desc desc
// * @meaning mean
// */
// const MSG_XYZ = goog.getMsg('some content');
// i0.ɵT(1, MSG_XYZ);
// ```
TemplateDefinitionBuilder.prototype.visitSingleI18nTextChild=function(text,i18nMeta){var meta=parseI18nMeta(i18nMeta);var variable$$1=this.constantPool.getTranslation(text.value,meta);this.instruction(this._creationMode,text.sourceSpan,Identifiers$1.text,literal(this.allocateDataSlot()),variable$$1);};TemplateDefinitionBuilder.prototype.allocateDataSlot=function(){return this._dataIndex++;};TemplateDefinitionBuilder.prototype.bindingContext=function(){return""+this._bindingContext++;};TemplateDefinitionBuilder.prototype.instruction=function(statements,span,reference){var params=[];for(var _i=3;_i<arguments.length;_i++){params[_i-3]=arguments[_i];}statements.push(importExpr(reference,null,span).callFn(params,span).toStmt());};TemplateDefinitionBuilder.prototype.definitionOf=function(type,kind){return this.constantPool.getDefinition(type,kind,this.outputCtx);};TemplateDefinitionBuilder.prototype.temp=function(){if(!this._temporaryAllocated){this._prefix.push(new DeclareVarStmt(TEMPORARY_NAME,undefined,DYNAMIC_TYPE));this._temporaryAllocated=true;}return variable(TEMPORARY_NAME);};TemplateDefinitionBuilder.prototype.convertPropertyBinding=function(implicit,value){var pipesConvertedValue=value.visit(this._valueConverter);var convertedPropertyBinding=convertPropertyBinding(this,implicit,pipesConvertedValue,this.bindingContext(),BindingForm.TrySimple,interpolate);(_a=this._bindingMode).push.apply(_a,(0,_tslib.__spread)(convertedPropertyBinding.stmts));return convertedPropertyBinding.currValExpr;var _a;};return TemplateDefinitionBuilder;}();function getQueryPredicate(query,outputCtx){if(query.selectors.length>1||query.selectors.length==1&&query.selectors[0].value){var selectors=query.selectors.map(function(value){return value.value;});selectors.some(function(value){return!value;})&&error('Found a type among the string selectors expected');return outputCtx.constantPool.getConstLiteral(literalArr(selectors.map(function(value){return literal(value);})));}if(query.selectors.length==1){var first=query.selectors[0];if(first.identifier){return outputCtx.importExpr(first.identifier.reference);}}error('Unexpected query form');return NULL_EXPR;}function createFactory(type,outputCtx,reflector,queries){var args=[];var elementRef=reflector.resolveExternalReference(Identifiers.ElementRef);var templateRef=reflector.resolveExternalReference(Identifiers.TemplateRef);var viewContainerRef=reflector.resolveExternalReference(Identifiers.ViewContainerRef);try{for(var _a=(0,_tslib.__values)(type.diDeps),_b=_a.next();!_b.done;_b=_a.next()){var dependency=_b.value;var token=dependency.token;if(token){var tokenRef=tokenReference(token);if(tokenRef===elementRef){args.push(importExpr(Identifiers$1.injectElementRef).callFn([]));}else if(tokenRef===templateRef){args.push(importExpr(Identifiers$1.injectTemplateRef).callFn([]));}else if(tokenRef===viewContainerRef){args.push(importExpr(Identifiers$1.injectViewContainerRef).callFn([]));}else if(dependency.isAttribute){args.push(importExpr(Identifiers$1.injectAttribute).callFn([literal(dependency.token.value)]));}else{var tokenValue=token.identifier!=null?outputCtx.importExpr(tokenRef):literal(tokenRef);var directiveInjectArgs=[tokenValue];var flags=extractFlags(dependency);if(flags!=0/* Default */){// Append flag information if other than default.
directiveInjectArgs.push(literal(flags));}args.push(importExpr(Identifiers$1.directiveInject).callFn(directiveInjectArgs));}}else{unsupported('dependency without a token');}}}catch(e_8_1){e_8={error:e_8_1};}finally{try{if(_b&&!_b.done&&(_c=_a.return))_c.call(_a);}finally{if(e_8)throw e_8.error;}}var queryDefinitions=[];try{for(var queries_1=(0,_tslib.__values)(queries),queries_1_1=queries_1.next();!queries_1_1.done;queries_1_1=queries_1.next()){var query=queries_1_1.value;var predicate=getQueryPredicate(query,outputCtx);// e.g. r3.Q(null, somePredicate, false) or r3.Q(null, ['div'], false)
var parameters=[/* memoryIndex */literal(null,INFERRED_TYPE),/* predicate */predicate,/* descend */literal(query.descendants)];if(query.read){parameters.push(outputCtx.importExpr(query.read.identifier.reference));}queryDefinitions.push(importExpr(Identifiers$1.query).callFn(parameters));}}catch(e_9_1){e_9={error:e_9_1};}finally{try{if(queries_1_1&&!queries_1_1.done&&(_d=queries_1.return))_d.call(queries_1);}finally{if(e_9)throw e_9.error;}}var createInstance=new InstantiateExpr(outputCtx.importExpr(type.reference),args);var result=queryDefinitions.length>0?literalArr((0,_tslib.__spread)([createInstance],queryDefinitions)):createInstance;return fn([],[new ReturnStatement(result)],INFERRED_TYPE,null,type.reference.name?type.reference.name+"_Factory":null);var e_8,_c,e_9,_d;}function extractFlags(dependency){var flags=0;if(dependency.isHost){flags|=1/* Host */;}if(dependency.isOptional){flags|=8/* Optional */;}if(dependency.isSelf){flags|=2/* Self */;}if(dependency.isSkipSelf){flags|=4/* SkipSelf */;}if(dependency.isValue){unsupported('value dependencies');}return flags;}/**
 *  Remove trailing null nodes as they are implied.
 */function trimTrailingNulls(parameters){while(isNull(parameters[parameters.length-1])){parameters.pop();}return parameters;}// Turn a directive selector into an R3-compatible selector for directive def
function createDirectiveSelector(selector){return asLiteral(parseSelectorToR3Selector(selector));}function createHostAttributesArray(directiveMetadata,outputCtx){var values=[];var attributes=directiveMetadata.hostAttributes;try{for(var _a=(0,_tslib.__values)(Object.getOwnPropertyNames(attributes)),_b=_a.next();!_b.done;_b=_a.next()){var key=_b.value;var value=attributes[key];values.push(literal(key),literal(value));}}catch(e_10_1){e_10={error:e_10_1};}finally{try{if(_b&&!_b.done&&(_c=_a.return))_c.call(_a);}finally{if(e_10)throw e_10.error;}}if(values.length>0){return outputCtx.constantPool.getConstLiteral(literalArr(values));}return null;var e_10,_c;}// Return a host binding function or null if one is not necessary.
function createHostBindingsFunction(directiveMetadata,outputCtx,bindingParser){var statements=[];var temporary=function(){var declared=false;return function(){if(!declared){statements.push(new DeclareVarStmt(TEMPORARY_NAME,undefined,DYNAMIC_TYPE));declared=true;}return variable(TEMPORARY_NAME);};}();var hostBindingSourceSpan=typeSourceSpan(directiveMetadata.isComponent?'Component':'Directive',directiveMetadata.type);// Calculate the queries
for(var index=0;index<directiveMetadata.queries.length;index++){var query=directiveMetadata.queries[index];// e.g. r3.qR(tmp = r3.ld(dirIndex)[1]) && (r3.ld(dirIndex)[0].someDir = tmp);
var getDirectiveMemory=importExpr(Identifiers$1.load).callFn([variable('dirIndex')]);// The query list is at the query index + 1 because the directive itself is in slot 0.
var getQueryList=getDirectiveMemory.key(literal(index+1));var assignToTemporary=temporary().set(getQueryList);var callQueryRefresh=importExpr(Identifiers$1.queryRefresh).callFn([assignToTemporary]);var updateDirective=getDirectiveMemory.key(literal(0,INFERRED_TYPE)).prop(query.propertyName).set(query.first?temporary().prop('first'):temporary());var andExpression=callQueryRefresh.and(updateDirective);statements.push(andExpression.toStmt());}var directiveSummary=directiveMetadata.toSummary();// Calculate the host property bindings
var bindings=bindingParser.createBoundHostProperties(directiveSummary,hostBindingSourceSpan);var bindingContext=importExpr(Identifiers$1.load).callFn([variable('dirIndex')]);if(bindings){try{for(var bindings_1=(0,_tslib.__values)(bindings),bindings_1_1=bindings_1.next();!bindings_1_1.done;bindings_1_1=bindings_1.next()){var binding=bindings_1_1.value;var bindingExpr=convertPropertyBinding(null,bindingContext,binding.expression,'b',BindingForm.TrySimple,function(){return error('Unexpected interpolation');});statements.push.apply(statements,(0,_tslib.__spread)(bindingExpr.stmts));statements.push(importExpr(Identifiers$1.elementProperty).callFn([variable('elIndex'),literal(binding.name),importExpr(Identifiers$1.bind).callFn([bindingExpr.currValExpr])]).toStmt());}}catch(e_11_1){e_11={error:e_11_1};}finally{try{if(bindings_1_1&&!bindings_1_1.done&&(_a=bindings_1.return))_a.call(bindings_1);}finally{if(e_11)throw e_11.error;}}}// Calculate host event bindings
var eventBindings=bindingParser.createDirectiveHostEventAsts(directiveSummary,hostBindingSourceSpan);if(eventBindings){try{for(var eventBindings_1=(0,_tslib.__values)(eventBindings),eventBindings_1_1=eventBindings_1.next();!eventBindings_1_1.done;eventBindings_1_1=eventBindings_1.next()){var binding=eventBindings_1_1.value;var bindingExpr=convertActionBinding(null,bindingContext,binding.handler,'b',function(){return error('Unexpected interpolation');});var bindingName=binding.name&&sanitizeIdentifier(binding.name);var typeName=identifierName(directiveMetadata.type);var functionName=typeName&&bindingName?typeName+"_"+bindingName+"_HostBindingHandler":null;var handler=fn([new FnParam('$event',DYNAMIC_TYPE)],(0,_tslib.__spread)(bindingExpr.stmts,[new ReturnStatement(bindingExpr.allowDefault)]),INFERRED_TYPE,null,functionName);statements.push(importExpr(Identifiers$1.listener).callFn([literal(binding.name),handler]).toStmt());}}catch(e_12_1){e_12={error:e_12_1};}finally{try{if(eventBindings_1_1&&!eventBindings_1_1.done&&(_b=eventBindings_1.return))_b.call(eventBindings_1);}finally{if(e_12)throw e_12.error;}}}if(statements.length>0){var typeName=directiveMetadata.type.reference.name;return fn([new FnParam('dirIndex',NUMBER_TYPE),new FnParam('elIndex',NUMBER_TYPE)],statements,INFERRED_TYPE,null,typeName?typeName+"_HostBindings":null);}return null;var e_11,_a,e_12,_b;}function conditionallyCreateMapObjectLiteral(keys,outputCtx){if(Object.getOwnPropertyNames(keys).length>0){return mapToExpression(keys);}return null;}var ValueConverter=/** @class */function(_super){(0,_tslib.__extends)(ValueConverter,_super);function ValueConverter(outputCtx,allocateSlot,definePipe){var _this=_super.call(this)||this;_this.outputCtx=outputCtx;_this.allocateSlot=allocateSlot;_this.definePipe=definePipe;_this.pipeSlots=new Map();return _this;}// AstMemoryEfficientTransformer
ValueConverter.prototype.visitPipe=function(pipe,context){// Allocate a slot to create the pipe
var slot=this.allocateSlot();var slotPseudoLocal="PIPE:"+slot;var target=new PropertyRead(pipe.span,new ImplicitReceiver(pipe.span),slotPseudoLocal);var bindingId=pipeBinding(pipe.args);this.definePipe(pipe.name,slotPseudoLocal,slot,importExpr(bindingId));var value=pipe.exp.visit(this);var args=this.visitAll(pipe.args);return new FunctionCall(pipe.span,target,(0,_tslib.__spread)([new LiteralPrimitive(pipe.span,slot),value],args));};ValueConverter.prototype.visitLiteralArray=function(array,context){var _this=this;return new BuiltinFunctionCall(array.span,this.visitAll(array.expressions),function(values){// If the literal has calculated (non-literal) elements transform it into
// calls to literal factories that compose the literal and will cache intermediate
// values. Otherwise, just return an literal array that contains the values.
var literal$$1=literalArr(values);return values.every(function(a){return a.isConstant();})?_this.outputCtx.constantPool.getConstLiteral(literal$$1,true):getLiteralFactory(_this.outputCtx,literal$$1);});};ValueConverter.prototype.visitLiteralMap=function(map,context){var _this=this;return new BuiltinFunctionCall(map.span,this.visitAll(map.values),function(values){// If the literal has calculated (non-literal) elements  transform it into
// calls to literal factories that compose the literal and will cache intermediate
// values. Otherwise, just return an literal array that contains the values.
var literal$$1=literalMap(values.map(function(value,index){return{key:map.keys[index].key,value:value,quoted:map.keys[index].quoted};}));return values.every(function(a){return a.isConstant();})?_this.outputCtx.constantPool.getConstLiteral(literal$$1,true):getLiteralFactory(_this.outputCtx,literal$$1);});};return ValueConverter;}(AstMemoryEfficientTransformer);function invalid$1(arg){throw new Error("Invalid state: Visitor "+this.constructor.name+" doesn't handle "+undefined);}var ContentProjectionVisitor=/** @class */function(_super){(0,_tslib.__extends)(ContentProjectionVisitor,_super);function ContentProjectionVisitor(projectionMap,ngContentSelectors){var _this=_super.call(this)||this;_this.projectionMap=projectionMap;_this.ngContentSelectors=ngContentSelectors;_this.index=1;return _this;}ContentProjectionVisitor.prototype.visitNgContent=function(ngContent){var selector=this.ngContentSelectors[ngContent.index];if(selector==null){error("could not find selector for index "+ngContent.index+" in "+ngContent);}if(!selector||selector==='*'){this.projectionMap.set(ngContent,{index:0});}else{this.projectionMap.set(ngContent,{index:this.index++,selector:selector});}};return ContentProjectionVisitor;}(RecursiveTemplateAstVisitor);function getContentProjection(nodes,ngContentSelectors){var projectIndexMap=new Map();var visitor=new ContentProjectionVisitor(projectIndexMap,ngContentSelectors);templateVisitAll(visitor,nodes);return projectIndexMap;}function parserSelectorToSimpleSelector(selector){var classes=selector.classNames&&selector.classNames.length?(0,_tslib.__spread)([8/* CLASS */],selector.classNames):[];var elementName=selector.element&&selector.element!=='*'?selector.element:'';return(0,_tslib.__spread)([elementName],selector.attrs,classes);}function parserSelectorToNegativeSelector(selector){var classes=selector.classNames&&selector.classNames.length?(0,_tslib.__spread)([8/* CLASS */],selector.classNames):[];if(selector.element){return(0,_tslib.__spread)([1/* NOT */|4/* ELEMENT */,selector.element],selector.attrs,classes);}else if(selector.attrs.length){return(0,_tslib.__spread)([1/* NOT */|2/* ATTRIBUTE */],selector.attrs,classes);}else{return selector.classNames&&selector.classNames.length?(0,_tslib.__spread)([1/* NOT */|8/* CLASS */],selector.classNames):[];}}function parserSelectorToR3Selector(selector){var positive=parserSelectorToSimpleSelector(selector);var negative=selector.notSelectors&&selector.notSelectors.length?selector.notSelectors.map(function(notSelector){return parserSelectorToNegativeSelector(notSelector);}):[];return positive.concat.apply(positive,(0,_tslib.__spread)(negative));}function parseSelectorToR3Selector(selector){var selectors=CssSelector.parse(selector);return selectors.map(parserSelectorToR3Selector);}function asLiteral(value){if(Array.isArray(value)){return literalArr(value.map(asLiteral));}return literal(value,INFERRED_TYPE);}function mapToExpression(map,quoted){if(quoted===void 0){quoted=false;}return literalMap(Object.getOwnPropertyNames(map).map(function(key){return{key:key,quoted:quoted,value:asLiteral(map[key])};}));}// Parse i18n metas like:
// - "@@id",
// - "description[@@id]",
// - "meaning|description[@@id]"
function parseI18nMeta(i18n){var meaning;var description;var id;if(i18n){// TODO(vicb): figure out how to force a message ID with closure ?
var idIndex=i18n.indexOf(ID_SEPARATOR$1);var descIndex=i18n.indexOf(MEANING_SEPARATOR$1);var meaningAndDesc=void 0;_a=(0,_tslib.__read)(idIndex>-1?[i18n.slice(0,idIndex),i18n.slice(idIndex+2)]:[i18n,''],2),meaningAndDesc=_a[0],id=_a[1];_b=(0,_tslib.__read)(descIndex>-1?[meaningAndDesc.slice(0,descIndex),meaningAndDesc.slice(descIndex+1)]:['',meaningAndDesc],2),meaning=_b[0],description=_b[1];}return{description:description,id:id,meaning:meaning};var _a,_b;}var _a;/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Write a pipe definition to the output context.
 */function compilePipe(outputCtx,pipe,reflector,mode){var definitionMapValues=[];// e.g. `name: 'myPipe'`
definitionMapValues.push({key:'name',value:literal(pipe.name),quoted:false});// e.g. `type: MyPipe`
definitionMapValues.push({key:'type',value:outputCtx.importExpr(pipe.type.reference),quoted:false});// e.g. factory: function MyPipe_Factory() { return new MyPipe(); },
var templateFactory=createFactory(pipe.type,outputCtx,reflector,[]);definitionMapValues.push({key:'factory',value:templateFactory,quoted:false});// e.g. pure: true
if(pipe.pure){definitionMapValues.push({key:'pure',value:literal(true),quoted:false});}var className=identifierName(pipe.type);className||error("Cannot resolve the name of "+pipe.type);var definitionField=outputCtx.constantPool.propertyNameOf(3/* Pipe */);var definitionFunction=importExpr(Identifiers$1.definePipe).callFn([literalMap(definitionMapValues)]);if(mode===0/* PartialClass */){outputCtx.statements.push(new ClassStmt(/* name */className,/* parent */null,/* fields */[new ClassField(/* name */definitionField,/* type */INFERRED_TYPE,/* modifiers */[StmtModifier.Static],/* initializer */definitionFunction)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]));}else{// Create back-patch definition.
var classReference=outputCtx.importExpr(pipe.type.reference);// Create the back-patch statement
outputCtx.statements.push(new CommentStmt(BUILD_OPTIMIZER_COLOCATE),classReference.prop(definitionField).set(definitionFunction).toStmt());}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var GeneratedFile=/** @class */function(){function GeneratedFile(srcFileUrl,genFileUrl,sourceOrStmts){this.srcFileUrl=srcFileUrl;this.genFileUrl=genFileUrl;if(typeof sourceOrStmts==='string'){this.source=sourceOrStmts;this.stmts=null;}else{this.source=null;this.stmts=sourceOrStmts;}}GeneratedFile.prototype.isEquivalent=function(other){if(this.genFileUrl!==other.genFileUrl){return false;}if(this.source){return this.source===other.source;}if(other.stmts==null){return false;}// Note: the constructor guarantees that if this.source is not filled,
// then this.stmts is.
return areAllEquivalent(this.stmts,other.stmts);};return GeneratedFile;}();exports.GeneratedFile=GeneratedFile;function toTypeScript(file,preamble){if(preamble===void 0){preamble='';}if(!file.stmts){throw new Error("Illegal state: No stmts present on GeneratedFile "+file.genFileUrl);}return new TypeScriptEmitter().emitStatements(file.genFileUrl,file.stmts,preamble);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function listLazyRoutes(moduleMeta,reflector){var allLazyRoutes=[];try{for(var _a=(0,_tslib.__values)(moduleMeta.transitiveModule.providers),_b=_a.next();!_b.done;_b=_a.next()){var _c=_b.value,provider=_c.provider,module=_c.module;if(tokenReference(provider.token)===reflector.ROUTES){var loadChildren=_collectLoadChildren(provider.useValue);try{for(var loadChildren_1=(0,_tslib.__values)(loadChildren),loadChildren_1_1=loadChildren_1.next();!loadChildren_1_1.done;loadChildren_1_1=loadChildren_1.next()){var route=loadChildren_1_1.value;allLazyRoutes.push(parseLazyRoute(route,reflector,module.reference));}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(loadChildren_1_1&&!loadChildren_1_1.done&&(_d=loadChildren_1.return))_d.call(loadChildren_1);}finally{if(e_1)throw e_1.error;}}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_b&&!_b.done&&(_e=_a.return))_e.call(_a);}finally{if(e_2)throw e_2.error;}}return allLazyRoutes;var e_2,_e,e_1,_d;}function _collectLoadChildren(routes,target){if(target===void 0){target=[];}if(typeof routes==='string'){target.push(routes);}else if(Array.isArray(routes)){try{for(var routes_1=(0,_tslib.__values)(routes),routes_1_1=routes_1.next();!routes_1_1.done;routes_1_1=routes_1.next()){var route=routes_1_1.value;_collectLoadChildren(route,target);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(routes_1_1&&!routes_1_1.done&&(_a=routes_1.return))_a.call(routes_1);}finally{if(e_3)throw e_3.error;}}}else if(routes.loadChildren){_collectLoadChildren(routes.loadChildren,target);}else if(routes.children){_collectLoadChildren(routes.children,target);}return target;var e_3,_a;}function parseLazyRoute(route,reflector,module){var _a=(0,_tslib.__read)(route.split('#'),2),routePath=_a[0],routeName=_a[1];var referencedModule=reflector.resolveExternalReference({moduleName:routePath,name:routeName},module?module.filePath:undefined);return{route:route,module:module||referencedModule,referencedModule:referencedModule};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var TS=/^(?!.*\.d\.ts$).*\.ts$/;var ResolvedStaticSymbol=/** @class */function(){function ResolvedStaticSymbol(symbol,metadata){this.symbol=symbol;this.metadata=metadata;}return ResolvedStaticSymbol;}();exports.ResolvedStaticSymbol=ResolvedStaticSymbol;var SUPPORTED_SCHEMA_VERSION=4;/**
 * This class is responsible for loading metadata per symbol,
 * and normalizing references between symbols.
 *
 * Internally, it only uses symbols without members,
 * and deduces the values for symbols with members based
 * on these symbols.
 */var StaticSymbolResolver=/** @class */function(){function StaticSymbolResolver(host,staticSymbolCache,summaryResolver,errorRecorder){this.host=host;this.staticSymbolCache=staticSymbolCache;this.summaryResolver=summaryResolver;this.errorRecorder=errorRecorder;this.metadataCache=new Map();// Note: this will only contain StaticSymbols without members!
this.resolvedSymbols=new Map();this.resolvedFilePaths=new Set();// Note: this will only contain StaticSymbols without members!
this.importAs=new Map();this.symbolResourcePaths=new Map();this.symbolFromFile=new Map();this.knownFileNameToModuleNames=new Map();}StaticSymbolResolver.prototype.resolveSymbol=function(staticSymbol){if(staticSymbol.members.length>0){return this._resolveSymbolMembers(staticSymbol);}// Note: always ask for a summary first,
// as we might have read shallow metadata via a .d.ts file
// for the symbol.
var resultFromSummary=this._resolveSymbolFromSummary(staticSymbol);if(resultFromSummary){return resultFromSummary;}var resultFromCache=this.resolvedSymbols.get(staticSymbol);if(resultFromCache){return resultFromCache;}// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files. So we always need to check both, the summary
// and metadata.
this._createSymbolsOf(staticSymbol.filePath);return this.resolvedSymbols.get(staticSymbol);};/**
     * getImportAs produces a symbol that can be used to import the given symbol.
     * The import might be different than the symbol if the symbol is exported from
     * a library with a summary; in which case we want to import the symbol from the
     * ngfactory re-export instead of directly to avoid introducing a direct dependency
     * on an otherwise indirect dependency.
     *
     * @param staticSymbol the symbol for which to generate a import symbol
     */StaticSymbolResolver.prototype.getImportAs=function(staticSymbol,useSummaries){if(useSummaries===void 0){useSummaries=true;}if(staticSymbol.members.length){var baseSymbol=this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name);var baseImportAs=this.getImportAs(baseSymbol,useSummaries);return baseImportAs?this.getStaticSymbol(baseImportAs.filePath,baseImportAs.name,staticSymbol.members):null;}var summarizedFileName=stripSummaryForJitFileSuffix(staticSymbol.filePath);if(summarizedFileName!==staticSymbol.filePath){var summarizedName=stripSummaryForJitNameSuffix(staticSymbol.name);var baseSymbol=this.getStaticSymbol(summarizedFileName,summarizedName,staticSymbol.members);var baseImportAs=this.getImportAs(baseSymbol,useSummaries);return baseImportAs?this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath),summaryForJitName(baseImportAs.name),baseSymbol.members):null;}var result=useSummaries&&this.summaryResolver.getImportAs(staticSymbol)||null;if(!result){result=this.importAs.get(staticSymbol);}return result;};/**
     * getResourcePath produces the path to the original location of the symbol and should
     * be used to determine the relative location of resource references recorded in
     * symbol metadata.
     */StaticSymbolResolver.prototype.getResourcePath=function(staticSymbol){return this.symbolResourcePaths.get(staticSymbol)||staticSymbol.filePath;};/**
     * getTypeArity returns the number of generic type parameters the given symbol
     * has. If the symbol is not a type the result is null.
     */StaticSymbolResolver.prototype.getTypeArity=function(staticSymbol){// If the file is a factory/ngsummary file, don't resolve the symbol as doing so would
// cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.
// All references to generated classes must include the correct arity whenever
// generating code.
if(isGeneratedFile(staticSymbol.filePath)){return null;}var resolvedSymbol=unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));while(resolvedSymbol&&resolvedSymbol.metadata instanceof StaticSymbol){resolvedSymbol=unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));}return resolvedSymbol&&resolvedSymbol.metadata&&resolvedSymbol.metadata.arity||null;};StaticSymbolResolver.prototype.getKnownModuleName=function(filePath){return this.knownFileNameToModuleNames.get(filePath)||null;};StaticSymbolResolver.prototype.recordImportAs=function(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();this.importAs.set(sourceSymbol,targetSymbol);};StaticSymbolResolver.prototype.recordModuleNameForFileName=function(fileName,moduleName){this.knownFileNameToModuleNames.set(fileName,moduleName);};/**
     * Invalidate all information derived from the given file.
     *
     * @param fileName the file to invalidate
     */StaticSymbolResolver.prototype.invalidateFile=function(fileName){this.metadataCache.delete(fileName);this.resolvedFilePaths.delete(fileName);var symbols=this.symbolFromFile.get(fileName);if(symbols){this.symbolFromFile.delete(fileName);try{for(var symbols_1=(0,_tslib.__values)(symbols),symbols_1_1=symbols_1.next();!symbols_1_1.done;symbols_1_1=symbols_1.next()){var symbol=symbols_1_1.value;this.resolvedSymbols.delete(symbol);this.importAs.delete(symbol);this.symbolResourcePaths.delete(symbol);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(symbols_1_1&&!symbols_1_1.done&&(_a=symbols_1.return))_a.call(symbols_1);}finally{if(e_1)throw e_1.error;}}}var e_1,_a;};/* @internal */StaticSymbolResolver.prototype.ignoreErrorsFor=function(cb){var recorder=this.errorRecorder;this.errorRecorder=function(){};try{return cb();}finally{this.errorRecorder=recorder;}};StaticSymbolResolver.prototype._resolveSymbolMembers=function(staticSymbol){var members=staticSymbol.members;var baseResolvedSymbol=this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name));if(!baseResolvedSymbol){return null;}var baseMetadata=unwrapResolvedMetadata(baseResolvedSymbol.metadata);if(baseMetadata instanceof StaticSymbol){return new ResolvedStaticSymbol(staticSymbol,this.getStaticSymbol(baseMetadata.filePath,baseMetadata.name,members));}else if(baseMetadata&&baseMetadata.__symbolic==='class'){if(baseMetadata.statics&&members.length===1){return new ResolvedStaticSymbol(staticSymbol,baseMetadata.statics[members[0]]);}}else{var value=baseMetadata;for(var i=0;i<members.length&&value;i++){value=value[members[i]];}return new ResolvedStaticSymbol(staticSymbol,value);}return null;};StaticSymbolResolver.prototype._resolveSymbolFromSummary=function(staticSymbol){var summary=this.summaryResolver.resolveSummary(staticSymbol);return summary?new ResolvedStaticSymbol(staticSymbol,summary.metadata):null;};/**
     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
     * All types passed to the StaticResolver should be pseudo-types returned by this method.
     *
     * @param declarationFile the absolute path of the file where the symbol is declared
     * @param name the name of the type.
     * @param members a symbol for a static member of the named type
     */StaticSymbolResolver.prototype.getStaticSymbol=function(declarationFile,name,members){return this.staticSymbolCache.get(declarationFile,name,members);};/**
     * hasDecorators checks a file's metadata for the presence of decorators without evaluating the
     * metadata.
     *
     * @param filePath the absolute path to examine for decorators.
     * @returns true if any class in the file has a decorator.
     */StaticSymbolResolver.prototype.hasDecorators=function(filePath){var metadata=this.getModuleMetadata(filePath);if(metadata['metadata']){return Object.keys(metadata['metadata']).some(function(metadataKey){var entry=metadata['metadata'][metadataKey];return entry&&entry.__symbolic==='class'&&entry.decorators;});}return false;};StaticSymbolResolver.prototype.getSymbolsOf=function(filePath){var summarySymbols=this.summaryResolver.getSymbolsOf(filePath);if(summarySymbols){return summarySymbols;}// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.
this._createSymbolsOf(filePath);var metadataSymbols=[];this.resolvedSymbols.forEach(function(resolvedSymbol){if(resolvedSymbol.symbol.filePath===filePath){metadataSymbols.push(resolvedSymbol.symbol);}});return metadataSymbols;};StaticSymbolResolver.prototype._createSymbolsOf=function(filePath){var _this=this;if(this.resolvedFilePaths.has(filePath)){return;}this.resolvedFilePaths.add(filePath);var resolvedSymbols=[];var metadata=this.getModuleMetadata(filePath);if(metadata['importAs']){// Index bundle indices should use the importAs module name defined
// in the bundle.
this.knownFileNameToModuleNames.set(filePath,metadata['importAs']);}// handle the symbols in one of the re-export location
if(metadata['exports']){var _loop_1=function _loop_1(moduleExport){// handle the symbols in the list of explicitly re-exported symbols.
if(moduleExport.export){moduleExport.export.forEach(function(exportSymbol){var symbolName;if(typeof exportSymbol==='string'){symbolName=exportSymbol;}else{symbolName=exportSymbol.as;}symbolName=unescapeIdentifier(symbolName);var symName=symbolName;if(typeof exportSymbol!=='string'){symName=unescapeIdentifier(exportSymbol.name);}var resolvedModule=_this.resolveModule(moduleExport.from,filePath);if(resolvedModule){var targetSymbol=_this.getStaticSymbol(resolvedModule,symName);var sourceSymbol=_this.getStaticSymbol(filePath,symbolName);resolvedSymbols.push(_this.createExport(sourceSymbol,targetSymbol));}});}else{// handle the symbols via export * directives.
var resolvedModule=this_1.resolveModule(moduleExport.from,filePath);if(resolvedModule){var nestedExports=this_1.getSymbolsOf(resolvedModule);nestedExports.forEach(function(targetSymbol){var sourceSymbol=_this.getStaticSymbol(filePath,targetSymbol.name);resolvedSymbols.push(_this.createExport(sourceSymbol,targetSymbol));});}}};var this_1=this;try{for(var _a=(0,_tslib.__values)(metadata['exports']),_b=_a.next();!_b.done;_b=_a.next()){var moduleExport=_b.value;_loop_1(moduleExport);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_b&&!_b.done&&(_c=_a.return))_c.call(_a);}finally{if(e_2)throw e_2.error;}}}// handle the actual metadata. Has to be after the exports
// as there migth be collisions in the names, and we want the symbols
// of the current module to win ofter reexports.
if(metadata['metadata']){// handle direct declarations of the symbol
var topLevelSymbolNames_1=new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));var origins_1=metadata['origins']||{};Object.keys(metadata['metadata']).forEach(function(metadataKey){var symbolMeta=metadata['metadata'][metadataKey];var name=unescapeIdentifier(metadataKey);var symbol=_this.getStaticSymbol(filePath,name);var origin=origins_1.hasOwnProperty(metadataKey)&&origins_1[metadataKey];if(origin){// If the symbol is from a bundled index, use the declaration location of the
// symbol so relative references (such as './my.html') will be calculated
// correctly.
var originFilePath=_this.resolveModule(origin,filePath);if(!originFilePath){_this.reportError(new Error("Couldn't resolve original symbol for "+origin+" from "+filePath));}else{_this.symbolResourcePaths.set(symbol,originFilePath);}}resolvedSymbols.push(_this.createResolvedSymbol(symbol,filePath,topLevelSymbolNames_1,symbolMeta));});}resolvedSymbols.forEach(function(resolvedSymbol){return _this.resolvedSymbols.set(resolvedSymbol.symbol,resolvedSymbol);});this.symbolFromFile.set(filePath,resolvedSymbols.map(function(resolvedSymbol){return resolvedSymbol.symbol;}));var e_2,_c;};StaticSymbolResolver.prototype.createResolvedSymbol=function(sourceSymbol,topLevelPath,topLevelSymbolNames,metadata){var _this=this;// For classes that don't have Angular summaries / metadata,
// we only keep their arity, but nothing else
// (e.g. their constructor parameters).
// We do this to prevent introducing deep imports
// as we didn't generate .ngfactory.ts files with proper reexports.
var isTsFile=TS.test(sourceSymbol.filePath);if(this.summaryResolver.isLibraryFile(sourceSymbol.filePath)&&!isTsFile&&metadata&&metadata['__symbolic']==='class'){var transformedMeta_1={__symbolic:'class',arity:metadata.arity};return new ResolvedStaticSymbol(sourceSymbol,transformedMeta_1);}var _originalFileMemo;var getOriginalName=function getOriginalName(){if(!_originalFileMemo){// Guess what hte original file name is from the reference. If it has a `.d.ts` extension
// replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have
// .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`
// location as it is not important to finding the file.
_originalFileMemo=_this.host.getOutputName(topLevelPath.replace(/((\.ts)|(\.d\.ts)|)$/,'.ts').replace(/^.*node_modules[/\\]/,''));}return _originalFileMemo;};var self=this;var ReferenceTransformer=/** @class */function(_super){(0,_tslib.__extends)(ReferenceTransformer,_super);function ReferenceTransformer(){return _super!==null&&_super.apply(this,arguments)||this;}ReferenceTransformer.prototype.visitStringMap=function(map,functionParams){var symbolic=map['__symbolic'];if(symbolic==='function'){var oldLen=functionParams.length;functionParams.push.apply(functionParams,(0,_tslib.__spread)(map['parameters']||[]));var result=_super.prototype.visitStringMap.call(this,map,functionParams);functionParams.length=oldLen;return result;}else if(symbolic==='reference'){var module=map['module'];var name_1=map['name']?unescapeIdentifier(map['name']):map['name'];if(!name_1){return null;}var filePath=void 0;if(module){filePath=self.resolveModule(module,sourceSymbol.filePath);if(!filePath){return{__symbolic:'error',message:"Could not resolve "+module+" relative to "+sourceSymbol.filePath+".",line:map.line,character:map.character,fileName:getOriginalName()};}return{__symbolic:'resolved',symbol:self.getStaticSymbol(filePath,name_1),line:map.line,character:map.character,fileName:getOriginalName()};}else if(functionParams.indexOf(name_1)>=0){// reference to a function parameter
return{__symbolic:'reference',name:name_1};}else{if(topLevelSymbolNames.has(name_1)){return self.getStaticSymbol(topLevelPath,name_1);}// ambient value
}}else if(symbolic==='error'){return(0,_tslib.__assign)({},map,{fileName:getOriginalName()});}else{return _super.prototype.visitStringMap.call(this,map,functionParams);}};return ReferenceTransformer;}(ValueTransformer);var transformedMeta=visitValue(metadata,new ReferenceTransformer(),[]);var unwrappedTransformedMeta=unwrapResolvedMetadata(transformedMeta);if(unwrappedTransformedMeta instanceof StaticSymbol){return this.createExport(sourceSymbol,unwrappedTransformedMeta);}return new ResolvedStaticSymbol(sourceSymbol,transformedMeta);};StaticSymbolResolver.prototype.createExport=function(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();if(this.summaryResolver.isLibraryFile(sourceSymbol.filePath)&&this.summaryResolver.isLibraryFile(targetSymbol.filePath)){// This case is for an ng library importing symbols from a plain ts library
// transitively.
// Note: We rely on the fact that we discover symbols in the direction
// from source files to library files
this.importAs.set(targetSymbol,this.getImportAs(sourceSymbol)||sourceSymbol);}return new ResolvedStaticSymbol(sourceSymbol,targetSymbol);};StaticSymbolResolver.prototype.reportError=function(error$$1,context,path){if(this.errorRecorder){this.errorRecorder(error$$1,context&&context.filePath||path);}else{throw error$$1;}};/**
     * @param module an absolute path to a module file.
     */StaticSymbolResolver.prototype.getModuleMetadata=function(module){var moduleMetadata=this.metadataCache.get(module);if(!moduleMetadata){var moduleMetadatas=this.host.getMetadataFor(module);if(moduleMetadatas){var maxVersion_1=-1;moduleMetadatas.forEach(function(md){if(md&&md['version']>maxVersion_1){maxVersion_1=md['version'];moduleMetadata=md;}});}if(!moduleMetadata){moduleMetadata={__symbolic:'module',version:SUPPORTED_SCHEMA_VERSION,module:module,metadata:{}};}if(moduleMetadata['version']!=SUPPORTED_SCHEMA_VERSION){var errorMessage=moduleMetadata['version']==2?"Unsupported metadata version "+moduleMetadata['version']+" for module "+module+". This module should be compiled with a newer version of ngc":"Metadata version mismatch for module "+module+", found version "+moduleMetadata['version']+", expected "+SUPPORTED_SCHEMA_VERSION;this.reportError(new Error(errorMessage));}this.metadataCache.set(module,moduleMetadata);}return moduleMetadata;};StaticSymbolResolver.prototype.getSymbolByModule=function(module,symbolName,containingFile){var filePath=this.resolveModule(module,containingFile);if(!filePath){this.reportError(new Error("Could not resolve module "+module+(containingFile?' relative to '+containingFile:'')));return this.getStaticSymbol("ERROR:"+module,symbolName);}return this.getStaticSymbol(filePath,symbolName);};StaticSymbolResolver.prototype.resolveModule=function(module,containingFile){try{return this.host.moduleNameToFileName(module,containingFile);}catch(e){console.error("Could not resolve module '"+module+"' relative to file "+containingFile);this.reportError(e,undefined,containingFile);}return null;};return StaticSymbolResolver;}();// Remove extra underscore from escaped identifier.
// See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts
exports.StaticSymbolResolver=StaticSymbolResolver;function unescapeIdentifier(identifier){return identifier.startsWith('___')?identifier.substr(1):identifier;}function unwrapResolvedMetadata(metadata){if(metadata&&metadata.__symbolic==='resolved'){return metadata.symbol;}return metadata;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function serializeSummaries(srcFileName,forJitCtx,summaryResolver,symbolResolver,symbols,types){var toJsonSerializer=new ToJsonSerializer(symbolResolver,summaryResolver,srcFileName);// for symbols, we use everything except for the class metadata itself
// (we keep the statics though), as the class metadata is contained in the
// CompileTypeSummary.
symbols.forEach(function(resolvedSymbol){return toJsonSerializer.addSummary({symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata});});// Add type summaries.
types.forEach(function(_a){var summary=_a.summary,metadata=_a.metadata;toJsonSerializer.addSummary({symbol:summary.type.reference,metadata:undefined,type:summary});});var _a=toJsonSerializer.serialize(),json=_a.json,exportAs=_a.exportAs;if(forJitCtx){var forJitSerializer_1=new ForJitSerializer(forJitCtx,symbolResolver,summaryResolver);types.forEach(function(_a){var summary=_a.summary,metadata=_a.metadata;forJitSerializer_1.addSourceType(summary,metadata);});toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function(summary){if(summaryResolver.isLibraryFile(summary.symbol.filePath)&&summary.type){forJitSerializer_1.addLibType(summary.type);}});forJitSerializer_1.serialize(exportAs);}return{json:json,exportAs:exportAs};}function deserializeSummaries(symbolCache,summaryResolver,libraryFileName,json){var deserializer=new FromJsonDeserializer(symbolCache,summaryResolver);return deserializer.deserialize(libraryFileName,json);}function createForJitStub(outputCtx,reference){return createSummaryForJitFunction(outputCtx,reference,NULL_EXPR);}function createSummaryForJitFunction(outputCtx,reference,value){var fnName=summaryForJitName(reference.name);outputCtx.statements.push(fn([],[new ReturnStatement(value)],new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName,[StmtModifier.Final,StmtModifier.Exported]));}var ToJsonSerializer=/** @class */function(_super){(0,_tslib.__extends)(ToJsonSerializer,_super);function ToJsonSerializer(symbolResolver,summaryResolver,srcFileName){var _this=_super.call(this)||this;_this.symbolResolver=symbolResolver;_this.summaryResolver=summaryResolver;_this.srcFileName=srcFileName;// Note: This only contains symbols without members.
_this.symbols=[];_this.indexBySymbol=new Map();_this.reexportedBy=new Map();// This now contains a `__symbol: number` in the place of
// StaticSymbols, but otherwise has the same shape as the original objects.
_this.processedSummaryBySymbol=new Map();_this.processedSummaries=[];_this.unprocessedSymbolSummariesBySymbol=new Map();_this.moduleName=symbolResolver.getKnownModuleName(srcFileName);return _this;}ToJsonSerializer.prototype.addSummary=function(summary){var _this=this;var unprocessedSummary=this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);var processedSummary=this.processedSummaryBySymbol.get(summary.symbol);if(!unprocessedSummary){unprocessedSummary={symbol:summary.symbol,metadata:undefined};this.unprocessedSymbolSummariesBySymbol.set(summary.symbol,unprocessedSummary);processedSummary={symbol:this.processValue(summary.symbol,0/* None */)};this.processedSummaries.push(processedSummary);this.processedSummaryBySymbol.set(summary.symbol,processedSummary);}if(!unprocessedSummary.metadata&&summary.metadata){var metadata_1=summary.metadata||{};if(metadata_1.__symbolic==='class'){// For classes, we keep everything except their class decorators.
// We need to keep e.g. the ctor args, method names, method decorators
// so that the class can be extended in another compilation unit.
// We don't keep the class decorators as
// 1) they refer to data
//   that should not cause a rebuild of downstream compilation units
//   (e.g. inline templates of @Component, or @NgModule.declarations)
// 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.
var clone_1={};Object.keys(metadata_1).forEach(function(propName){if(propName!=='decorators'){clone_1[propName]=metadata_1[propName];}});metadata_1=clone_1;}else if(isCall(metadata_1)){if(!isFunctionCall(metadata_1)&&!isMethodCallOnVariable(metadata_1)){// Don't store complex calls as we won't be able to simplify them anyways later on.
metadata_1={__symbolic:'error',message:'Complex function calls are not supported.'};}}// Note: We need to keep storing ctor calls for e.g.
// `export const x = new InjectionToken(...)`
unprocessedSummary.metadata=metadata_1;processedSummary.metadata=this.processValue(metadata_1,1/* ResolveValue */);if(metadata_1 instanceof StaticSymbol&&this.summaryResolver.isLibraryFile(metadata_1.filePath)){var declarationSymbol=this.symbols[this.indexBySymbol.get(metadata_1)];if(!isLoweredSymbol(declarationSymbol.name)){// Note: symbols that were introduced during codegen in the user file can have a reexport
// if a user used `export *`. However, we can't rely on this as tsickle will change
// `export *` into named exports, using only the information from the typechecker.
// As we introduce the new symbols after typecheck, Tsickle does not know about them,
// and omits them when expanding `export *`.
// So we have to keep reexporting these symbols manually via .ngfactory files.
this.reexportedBy.set(declarationSymbol,summary.symbol);}}}if(!unprocessedSummary.type&&summary.type){unprocessedSummary.type=summary.type;// Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,
// as the type summaries already contain the transitive data that they require
// (in a minimal way).
processedSummary.type=this.processValue(summary.type,0/* None */);// except for reexported directives / pipes, so we need to store
// their summaries explicitly.
if(summary.type.summaryKind===CompileSummaryKind.NgModule){var ngModuleSummary=summary.type;ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function(id){var symbol=id.reference;if(_this.summaryResolver.isLibraryFile(symbol.filePath)&&!_this.unprocessedSymbolSummariesBySymbol.has(symbol)){var summary_1=_this.summaryResolver.resolveSummary(symbol);if(summary_1){_this.addSummary(summary_1);}}});}}};ToJsonSerializer.prototype.serialize=function(){var _this=this;var exportAs=[];var json=JSON.stringify({moduleName:this.moduleName,summaries:this.processedSummaries,symbols:this.symbols.map(function(symbol,index){symbol.assertNoMembers();var importAs=undefined;if(_this.summaryResolver.isLibraryFile(symbol.filePath)){var reexportSymbol=_this.reexportedBy.get(symbol);if(reexportSymbol){importAs=_this.indexBySymbol.get(reexportSymbol);}else{var summary=_this.unprocessedSymbolSummariesBySymbol.get(symbol);if(!summary||!summary.metadata||summary.metadata.__symbolic!=='interface'){importAs=symbol.name+"_"+index;exportAs.push({symbol:symbol,exportAs:importAs});}}}return{__symbol:index,name:symbol.name,filePath:_this.summaryResolver.toSummaryFileName(symbol.filePath,_this.srcFileName),importAs:importAs};})});return{json:json,exportAs:exportAs};};ToJsonSerializer.prototype.processValue=function(value,flags){return visitValue(value,this,flags);};ToJsonSerializer.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol){var baseSymbol=this.symbolResolver.getStaticSymbol(value.filePath,value.name);var index=this.visitStaticSymbol(baseSymbol,context);return{__symbol:index,members:value.members};}};/**
     * Strip line and character numbers from ngsummaries.
     * Emitting them causes white spaces changes to retrigger upstream
     * recompilations in bazel.
     * TODO: find out a way to have line and character numbers in errors without
     * excessive recompilation in bazel.
     */ToJsonSerializer.prototype.visitStringMap=function(map,context){if(map['__symbolic']==='resolved'){return visitValue(map.symbol,this,context);}if(map['__symbolic']==='error'){delete map['line'];delete map['character'];}return _super.prototype.visitStringMap.call(this,map,context);};/**
     * Returns null if the options.resolveValue is true, and the summary for the symbol
     * resolved to a type or could not be resolved.
     */ToJsonSerializer.prototype.visitStaticSymbol=function(baseSymbol,flags){var index=this.indexBySymbol.get(baseSymbol);var summary=null;if(flags&1/* ResolveValue */&&this.summaryResolver.isLibraryFile(baseSymbol.filePath)){if(this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)){// the summary for this symbol was already added
// -> nothing to do.
return index;}summary=this.loadSummary(baseSymbol);if(summary&&summary.metadata instanceof StaticSymbol){// The summary is a reexport
index=this.visitStaticSymbol(summary.metadata,flags);// reset the summary as it is just a reexport, so we don't want to store it.
summary=null;}}else if(index!=null){// Note: == on purpose to compare with undefined!
// No summary and the symbol is already added -> nothing to do.
return index;}// Note: == on purpose to compare with undefined!
if(index==null){index=this.symbols.length;this.symbols.push(baseSymbol);}this.indexBySymbol.set(baseSymbol,index);if(summary){this.addSummary(summary);}return index;};ToJsonSerializer.prototype.loadSummary=function(symbol){var summary=this.summaryResolver.resolveSummary(symbol);if(!summary){// some symbols might originate from a plain typescript library
// that just exported .d.ts and .metadata.json files, i.e. where no summary
// files were created.
var resolvedSymbol=this.symbolResolver.resolveSymbol(symbol);if(resolvedSymbol){summary={symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata};}}return summary;};return ToJsonSerializer;}(ValueTransformer);var ForJitSerializer=/** @class */function(){function ForJitSerializer(outputCtx,symbolResolver,summaryResolver){this.outputCtx=outputCtx;this.symbolResolver=symbolResolver;this.summaryResolver=summaryResolver;this.data=[];}ForJitSerializer.prototype.addSourceType=function(summary,metadata){this.data.push({summary:summary,metadata:metadata,isLibrary:false});};ForJitSerializer.prototype.addLibType=function(summary){this.data.push({summary:summary,metadata:null,isLibrary:true});};ForJitSerializer.prototype.serialize=function(exportAsArr){var _this=this;var exportAsBySymbol=new Map();try{for(var exportAsArr_1=(0,_tslib.__values)(exportAsArr),exportAsArr_1_1=exportAsArr_1.next();!exportAsArr_1_1.done;exportAsArr_1_1=exportAsArr_1.next()){var _a=exportAsArr_1_1.value,symbol=_a.symbol,exportAs=_a.exportAs;exportAsBySymbol.set(symbol,exportAs);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(exportAsArr_1_1&&!exportAsArr_1_1.done&&(_b=exportAsArr_1.return))_b.call(exportAsArr_1);}finally{if(e_1)throw e_1.error;}}var ngModuleSymbols=new Set();try{for(var _c=(0,_tslib.__values)(this.data),_d=_c.next();!_d.done;_d=_c.next()){var _e=_d.value,summary=_e.summary,metadata=_e.metadata,isLibrary=_e.isLibrary;if(summary.summaryKind===CompileSummaryKind.NgModule){// collect the symbols that refer to NgModule classes.
// Note: we can't just rely on `summary.type.summaryKind` to determine this as
// we don't add the summaries of all referenced symbols when we serialize type summaries.
// See serializeSummaries for details.
ngModuleSymbols.add(summary.type.reference);var modSummary=summary;try{for(var _f=(0,_tslib.__values)(modSummary.modules),_g=_f.next();!_g.done;_g=_f.next()){var mod=_g.value;ngModuleSymbols.add(mod.reference);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_g&&!_g.done&&(_h=_f.return))_h.call(_f);}finally{if(e_2)throw e_2.error;}}}if(!isLibrary){var fnName=summaryForJitName(summary.type.reference.name);createSummaryForJitFunction(this.outputCtx,summary.type.reference,this.serializeSummaryWithDeps(summary,metadata));}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_d&&!_d.done&&(_j=_c.return))_j.call(_c);}finally{if(e_3)throw e_3.error;}}ngModuleSymbols.forEach(function(ngModuleSymbol){if(_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)){var exportAs=exportAsBySymbol.get(ngModuleSymbol)||ngModuleSymbol.name;var jitExportAsName=summaryForJitName(exportAs);_this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(ngModuleSymbol)).toDeclStmt(null,[StmtModifier.Exported]));}});var e_1,_b,e_3,_j,e_2,_h;};ForJitSerializer.prototype.serializeSummaryWithDeps=function(summary,metadata){var _this=this;var expressions=[this.serializeSummary(summary)];var providers=[];if(metadata instanceof CompileNgModuleMetadata){expressions.push.apply(expressions,(0,_tslib.__spread)(// For directives / pipes, we only add the declared ones,
// and rely on transitively importing NgModules to get the transitive
// summaries.
metadata.declaredDirectives.concat(metadata.declaredPipes).map(function(type){return type.reference;}).concat(metadata.transitiveModule.modules.map(function(type){return type.reference;}).filter(function(ref){return ref!==metadata.type.reference;})).map(function(ref){return _this.serializeSummaryRef(ref);})));// Note: We don't use `NgModuleSummary.providers`, as that one is transitive,
// and we already have transitive modules.
providers=metadata.providers;}else if(summary.summaryKind===CompileSummaryKind.Directive){var dirSummary=summary;providers=dirSummary.providers.concat(dirSummary.viewProviders);}// Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for
// declaredDirectives / declaredPipes), as we allow
// providers without ctor arguments to skip the `@Injectable` decorator,
// i.e. we didn't generate .ngsummary.ts files for these.
expressions.push.apply(expressions,(0,_tslib.__spread)(providers.filter(function(provider){return!!provider.useClass;}).map(function(provider){return _this.serializeSummary({summaryKind:CompileSummaryKind.Injectable,type:provider.useClass});})));return literalArr(expressions);};ForJitSerializer.prototype.serializeSummaryRef=function(typeSymbol){var jitImportedSymbol=this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath),summaryForJitName(typeSymbol.name));return this.outputCtx.importExpr(jitImportedSymbol);};ForJitSerializer.prototype.serializeSummary=function(data){var outputCtx=this.outputCtx;var Transformer=/** @class */function(){function Transformer(){}Transformer.prototype.visitArray=function(arr,context){var _this=this;return literalArr(arr.map(function(entry){return visitValue(entry,_this,context);}));};Transformer.prototype.visitStringMap=function(map,context){var _this=this;return new LiteralMapExpr(Object.keys(map).map(function(key){return new LiteralMapEntry(key,visitValue(map[key],_this,context),false);}));};Transformer.prototype.visitPrimitive=function(value,context){return literal(value);};Transformer.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol){return outputCtx.importExpr(value);}else{throw new Error("Illegal State: Encountered value "+value);}};return Transformer;}();return visitValue(data,new Transformer(),null);};return ForJitSerializer;}();var FromJsonDeserializer=/** @class */function(_super){(0,_tslib.__extends)(FromJsonDeserializer,_super);function FromJsonDeserializer(symbolCache,summaryResolver){var _this=_super.call(this)||this;_this.symbolCache=symbolCache;_this.summaryResolver=summaryResolver;return _this;}FromJsonDeserializer.prototype.deserialize=function(libraryFileName,json){var _this=this;var data=JSON.parse(json);var allImportAs=[];this.symbols=data.symbols.map(function(serializedSymbol){return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath,libraryFileName),serializedSymbol.name);});data.symbols.forEach(function(serializedSymbol,index){var symbol=_this.symbols[index];var importAs=serializedSymbol.importAs;if(typeof importAs==='number'){allImportAs.push({symbol:symbol,importAs:_this.symbols[importAs]});}else if(typeof importAs==='string'){allImportAs.push({symbol:symbol,importAs:_this.symbolCache.get(ngfactoryFilePath(libraryFileName),importAs)});}});var summaries=visitValue(data.summaries,this,null);return{moduleName:data.moduleName,summaries:summaries,importAs:allImportAs};};FromJsonDeserializer.prototype.visitStringMap=function(map,context){if('__symbol'in map){var baseSymbol=this.symbols[map['__symbol']];var members=map['members'];return members.length?this.symbolCache.get(baseSymbol.filePath,baseSymbol.name,members):baseSymbol;}else{return _super.prototype.visitStringMap.call(this,map,context);}};return FromJsonDeserializer;}(ValueTransformer);function isCall(metadata){return metadata&&metadata.__symbolic==='call';}function isFunctionCall(metadata){return isCall(metadata)&&unwrapResolvedMetadata(metadata.expression)instanceof StaticSymbol;}function isMethodCallOnVariable(metadata){return isCall(metadata)&&metadata.expression&&metadata.expression.__symbolic==='select'&&unwrapResolvedMetadata(metadata.expression.expression)instanceof StaticSymbol;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var StubEmitFlags;(function(StubEmitFlags){StubEmitFlags[StubEmitFlags["Basic"]=1]="Basic";StubEmitFlags[StubEmitFlags["TypeCheck"]=2]="TypeCheck";StubEmitFlags[StubEmitFlags["All"]=3]="All";})(StubEmitFlags||(StubEmitFlags={}));var AotCompiler=/** @class */function(){function AotCompiler(_config,_options,_host,reflector,_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_typeCheckCompiler,_ngModuleCompiler,_injectableCompiler,_outputEmitter,_summaryResolver,_symbolResolver){this._config=_config;this._options=_options;this._host=_host;this.reflector=reflector;this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._typeCheckCompiler=_typeCheckCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._injectableCompiler=_injectableCompiler;this._outputEmitter=_outputEmitter;this._summaryResolver=_summaryResolver;this._symbolResolver=_symbolResolver;this._templateAstCache=new Map();this._analyzedFiles=new Map();this._analyzedFilesForInjectables=new Map();}AotCompiler.prototype.clearCache=function(){this._metadataResolver.clearCache();};AotCompiler.prototype.analyzeModulesSync=function(rootFiles){var _this=this;var analyzeResult=analyzeAndValidateNgModules(rootFiles,this._host,this._symbolResolver,this._metadataResolver);analyzeResult.ngModules.forEach(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,true);});return analyzeResult;};AotCompiler.prototype.analyzeModulesAsync=function(rootFiles){var _this=this;var analyzeResult=analyzeAndValidateNgModules(rootFiles,this._host,this._symbolResolver,this._metadataResolver);return Promise.all(analyzeResult.ngModules.map(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){return analyzeResult;});};AotCompiler.prototype._analyzeFile=function(fileName){var analyzedFile=this._analyzedFiles.get(fileName);if(!analyzedFile){analyzedFile=analyzeFile(this._host,this._symbolResolver,this._metadataResolver,fileName);this._analyzedFiles.set(fileName,analyzedFile);}return analyzedFile;};AotCompiler.prototype._analyzeFileForInjectables=function(fileName){var analyzedFile=this._analyzedFilesForInjectables.get(fileName);if(!analyzedFile){analyzedFile=analyzeFileForInjectables(this._host,this._symbolResolver,this._metadataResolver,fileName);this._analyzedFilesForInjectables.set(fileName,analyzedFile);}return analyzedFile;};AotCompiler.prototype.findGeneratedFileNames=function(fileName){var _this=this;var genFileNames=[];var file=this._analyzeFile(fileName);// Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule
// or a reference to a non source file.
// Note: This is overestimating the required .ngfactory files as the real calculation is harder.
// Only do this for StubEmitFlags.Basic, as adding a type check block
// does not change this file (as we generate type check blocks based on NgModules).
if(this._options.allowEmptyCodegenFiles||file.directives.length||file.pipes.length||file.injectables.length||file.ngModules.length||file.exportsNonSourceFiles){genFileNames.push(ngfactoryFilePath(file.fileName,true));if(this._options.enableSummariesForJit){genFileNames.push(summaryForJitFileName(file.fileName,true));}}var fileSuffix=normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName,true)[1]);file.directives.forEach(function(dirSymbol){var compMeta=_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol).metadata;if(!compMeta.isComponent){return;}// Note: compMeta is a component and therefore template is non null.
compMeta.template.styleUrls.forEach(function(styleUrl){var normalizedUrl=_this._host.resourceNameToFileName(styleUrl,file.fileName);if(!normalizedUrl){throw syntaxError("Couldn't resolve resource "+styleUrl+" relative to "+file.fileName);}var needsShim=(compMeta.template.encapsulation||_this._config.defaultEncapsulation)===ViewEncapsulation.Emulated;genFileNames.push(_stylesModuleUrl(normalizedUrl,needsShim,fileSuffix));if(_this._options.allowEmptyCodegenFiles){genFileNames.push(_stylesModuleUrl(normalizedUrl,!needsShim,fileSuffix));}});});return genFileNames;};AotCompiler.prototype.emitBasicStub=function(genFileName,originalFileName){var outputCtx=this._createOutputContext(genFileName);if(genFileName.endsWith('.ngfactory.ts')){if(!originalFileName){throw new Error("Assertion error: require the original file for .ngfactory.ts stubs. File: "+genFileName);}var originalFile=this._analyzeFile(originalFileName);this._createNgFactoryStub(outputCtx,originalFile,StubEmitFlags.Basic);}else if(genFileName.endsWith('.ngsummary.ts')){if(this._options.enableSummariesForJit){if(!originalFileName){throw new Error("Assertion error: require the original file for .ngsummary.ts stubs. File: "+genFileName);}var originalFile=this._analyzeFile(originalFileName);_createEmptyStub(outputCtx);originalFile.ngModules.forEach(function(ngModule){// create exports that user code can reference
createForJitStub(outputCtx,ngModule.type.reference);});}}else if(genFileName.endsWith('.ngstyle.ts')){_createEmptyStub(outputCtx);}// Note: for the stubs, we don't need a property srcFileUrl,
// as later on in emitAllImpls we will create the proper GeneratedFiles with the
// correct srcFileUrl.
// This is good as e.g. for .ngstyle.ts files we can't derive
// the url of components based on the genFileUrl.
return this._codegenSourceModule('unknown',outputCtx);};AotCompiler.prototype.emitTypeCheckStub=function(genFileName,originalFileName){var originalFile=this._analyzeFile(originalFileName);var outputCtx=this._createOutputContext(genFileName);if(genFileName.endsWith('.ngfactory.ts')){this._createNgFactoryStub(outputCtx,originalFile,StubEmitFlags.TypeCheck);}return outputCtx.statements.length>0?this._codegenSourceModule(originalFile.fileName,outputCtx):null;};AotCompiler.prototype.loadFilesAsync=function(fileNames,tsFiles){var _this=this;var files=fileNames.map(function(fileName){return _this._analyzeFile(fileName);});var loadingPromises=[];files.forEach(function(file){return file.ngModules.forEach(function(ngModule){return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false));});});var analyzedInjectables=tsFiles.map(function(tsFile){return _this._analyzeFileForInjectables(tsFile);});return Promise.all(loadingPromises).then(function(_){return{analyzedModules:mergeAndValidateNgFiles(files),analyzedInjectables:analyzedInjectables};});};AotCompiler.prototype.loadFilesSync=function(fileNames,tsFiles){var _this=this;var files=fileNames.map(function(fileName){return _this._analyzeFile(fileName);});files.forEach(function(file){return file.ngModules.forEach(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,true);});});var analyzedInjectables=tsFiles.map(function(tsFile){return _this._analyzeFileForInjectables(tsFile);});return{analyzedModules:mergeAndValidateNgFiles(files),analyzedInjectables:analyzedInjectables};};AotCompiler.prototype._createNgFactoryStub=function(outputCtx,file,emitFlags){var _this=this;var componentId=0;file.ngModules.forEach(function(ngModuleMeta,ngModuleIndex){// Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,
// so we don't change the .ngfactory file too much when adding the type-check block.
// create exports that user code can reference
_this._ngModuleCompiler.createStub(outputCtx,ngModuleMeta.type.reference);// add references to the symbols from the metadata.
// These can be used by the type check block for components,
// and they also cause TypeScript to include these files into the program too,
// which will make them part of the analyzedFiles.
var externalReferences=(0,_tslib.__spread)(ngModuleMeta.transitiveModule.directives.map(function(d){return d.reference;}),ngModuleMeta.transitiveModule.pipes.map(function(d){return d.reference;}),ngModuleMeta.importedModules.map(function(m){return m.type.reference;}),ngModuleMeta.exportedModules.map(function(m){return m.type.reference;}),_this._externalIdentifierReferences([Identifiers.TemplateRef,Identifiers.ElementRef]));var externalReferenceVars=new Map();externalReferences.forEach(function(ref,typeIndex){externalReferenceVars.set(ref,"_decl"+ngModuleIndex+"_"+typeIndex);});externalReferenceVars.forEach(function(varName,reference){outputCtx.statements.push(variable(varName).set(NULL_EXPR.cast(DYNAMIC_TYPE)).toDeclStmt(expressionType(outputCtx.importExpr(reference,/* typeParams */null,/* useSummaries */false))));});if(emitFlags&StubEmitFlags.TypeCheck){// add the type-check block for all components of the NgModule
ngModuleMeta.declaredDirectives.forEach(function(dirId){var compMeta=_this._metadataResolver.getDirectiveMetadata(dirId.reference);if(!compMeta.isComponent){return;}componentId++;_this._createTypeCheckBlock(outputCtx,compMeta.type.reference.name+"_Host_"+componentId,ngModuleMeta,_this._metadataResolver.getHostComponentMetadata(compMeta),[compMeta.type],externalReferenceVars);_this._createTypeCheckBlock(outputCtx,compMeta.type.reference.name+"_"+componentId,ngModuleMeta,compMeta,ngModuleMeta.transitiveModule.directives,externalReferenceVars);});}});if(outputCtx.statements.length===0){_createEmptyStub(outputCtx);}};AotCompiler.prototype._externalIdentifierReferences=function(references){var result=[];try{for(var references_1=(0,_tslib.__values)(references),references_1_1=references_1.next();!references_1_1.done;references_1_1=references_1.next()){var reference=references_1_1.value;var token=createTokenForExternalReference(this.reflector,reference);if(token.identifier){result.push(token.identifier.reference);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(references_1_1&&!references_1_1.done&&(_a=references_1.return))_a.call(references_1);}finally{if(e_1)throw e_1.error;}}return result;var e_1,_a;};AotCompiler.prototype._createTypeCheckBlock=function(ctx,componentId,moduleMeta,compMeta,directives,externalReferenceVars){var _a=this._parseTemplate(compMeta,moduleMeta,directives),parsedTemplate=_a.template,usedPipes=_a.pipes;(_b=ctx.statements).push.apply(_b,(0,_tslib.__spread)(this._typeCheckCompiler.compileComponent(componentId,compMeta,parsedTemplate,usedPipes,externalReferenceVars,ctx)));var _b;};AotCompiler.prototype.emitMessageBundle=function(analyzeResult,locale){var _this=this;var errors=[];var htmlParser=new HtmlParser();// TODO(vicb): implicit tags & attributes
var messageBundle=new MessageBundle(htmlParser,[],{},locale);analyzeResult.files.forEach(function(file){var compMetas=[];file.directives.forEach(function(directiveType){var dirMeta=_this._metadataResolver.getDirectiveMetadata(directiveType);if(dirMeta&&dirMeta.isComponent){compMetas.push(dirMeta);}});compMetas.forEach(function(compMeta){var html=compMeta.template.template;var interpolationConfig=InterpolationConfig.fromArray(compMeta.template.interpolation);errors.push.apply(errors,(0,_tslib.__spread)(messageBundle.updateFromTemplate(html,file.fileName,interpolationConfig)));});});if(errors.length){throw new Error(errors.map(function(e){return e.toString();}).join('\n'));}return messageBundle;};AotCompiler.prototype.emitAllPartialModules=function(_a,r3Files){var _this=this;var ngModuleByPipeOrDirective=_a.ngModuleByPipeOrDirective,files=_a.files;var contextMap=new Map();var getContext=function getContext(fileName){if(!contextMap.has(fileName)){contextMap.set(fileName,_this._createOutputContext(fileName));}return contextMap.get(fileName);};files.forEach(function(file){return _this._compilePartialModule(file.fileName,ngModuleByPipeOrDirective,file.directives,file.pipes,file.ngModules,file.injectables,getContext(file.fileName));});r3Files.forEach(function(file){return _this._compileShallowModules(file.fileName,file.shallowModules,getContext(file.fileName));});return Array.from(contextMap.values()).map(function(context){return{fileName:context.genFilePath,statements:(0,_tslib.__spread)(context.constantPool.statements,context.statements)};});};AotCompiler.prototype._compileShallowModules=function(fileName,shallowModules,context){var _this=this;shallowModules.forEach(function(module){return compileNgModule(context,module,_this._injectableCompiler);});};AotCompiler.prototype._compilePartialModule=function(fileName,ngModuleByPipeOrDirective,directives,pipes,ngModules,injectables,context){var _this=this;var errors=[];var hostBindingParser=new BindingParser(this._templateParser.expressionParser,DEFAULT_INTERPOLATION_CONFIG,null,[],errors);// Process all components and directives
directives.forEach(function(directiveType){var directiveMetadata=_this._metadataResolver.getDirectiveMetadata(directiveType);if(directiveMetadata.isComponent){var module=ngModuleByPipeOrDirective.get(directiveType);module||error("Cannot determine the module for component '"+identifierName(directiveMetadata.type)+"'");var _a=_this._parseTemplate(directiveMetadata,module,module.transitiveModule.directives),parsedTemplate=_a.template,parsedPipes=_a.pipes;compileComponent(context,directiveMetadata,parsedPipes,parsedTemplate,_this.reflector,hostBindingParser,0/* PartialClass */);}else{compileDirective(context,directiveMetadata,_this.reflector,hostBindingParser,0/* PartialClass */);}});pipes.forEach(function(pipeType){var pipeMetadata=_this._metadataResolver.getPipeMetadata(pipeType);if(pipeMetadata){compilePipe(context,pipeMetadata,_this.reflector,0/* PartialClass */);}});injectables.forEach(function(injectable){return _this._injectableCompiler.compile(injectable,context);});};AotCompiler.prototype.emitAllPartialModules2=function(files){var _this=this;// Using reduce like this is a select many pattern (where map is a select pattern)
return files.reduce(function(r,file){r.push.apply(r,(0,_tslib.__spread)(_this._emitPartialModule2(file.fileName,file.injectables)));return r;},[]);};AotCompiler.prototype._emitPartialModule2=function(fileName,injectables){var _this=this;var context=this._createOutputContext(fileName);injectables.forEach(function(injectable){return _this._injectableCompiler.compile(injectable,context);});if(context.statements&&context.statements.length>0){return[{fileName:fileName,statements:(0,_tslib.__spread)(context.constantPool.statements,context.statements)}];}return[];};AotCompiler.prototype.emitAllImpls=function(analyzeResult){var _this=this;var ngModuleByPipeOrDirective=analyzeResult.ngModuleByPipeOrDirective,files=analyzeResult.files;var sourceModules=files.map(function(file){return _this._compileImplFile(file.fileName,ngModuleByPipeOrDirective,file.directives,file.pipes,file.ngModules,file.injectables);});return flatten(sourceModules);};AotCompiler.prototype._compileImplFile=function(srcFileUrl,ngModuleByPipeOrDirective,directives,pipes,ngModules,injectables){var _this=this;var fileSuffix=normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl,true)[1]);var generatedFiles=[];var outputCtx=this._createOutputContext(ngfactoryFilePath(srcFileUrl,true));generatedFiles.push.apply(generatedFiles,(0,_tslib.__spread)(this._createSummary(srcFileUrl,directives,pipes,ngModules,injectables,outputCtx)));// compile all ng modules
ngModules.forEach(function(ngModuleMeta){return _this._compileModule(outputCtx,ngModuleMeta);});// compile components
directives.forEach(function(dirType){var compMeta=_this._metadataResolver.getDirectiveMetadata(dirType);if(!compMeta.isComponent){return;}var ngModule=ngModuleByPipeOrDirective.get(dirType);if(!ngModule){throw new Error("Internal Error: cannot determine the module for component "+identifierName(compMeta.type)+"!");}// compile styles
var componentStylesheet=_this._styleCompiler.compileComponent(outputCtx,compMeta);// Note: compMeta is a component and therefore template is non null.
compMeta.template.externalStylesheets.forEach(function(stylesheetMeta){// Note: fill non shim and shim style files as they might
// be shared by component with and without ViewEncapsulation.
var shim=_this._styleCompiler.needsStyleShim(compMeta);generatedFiles.push(_this._codegenStyles(srcFileUrl,compMeta,stylesheetMeta,shim,fileSuffix));if(_this._options.allowEmptyCodegenFiles){generatedFiles.push(_this._codegenStyles(srcFileUrl,compMeta,stylesheetMeta,!shim,fileSuffix));}});// compile components
var compViewVars=_this._compileComponent(outputCtx,compMeta,ngModule,ngModule.transitiveModule.directives,componentStylesheet,fileSuffix);_this._compileComponentFactory(outputCtx,compMeta,ngModule,fileSuffix);});if(outputCtx.statements.length>0||this._options.allowEmptyCodegenFiles){var srcModule=this._codegenSourceModule(srcFileUrl,outputCtx);generatedFiles.unshift(srcModule);}return generatedFiles;};AotCompiler.prototype._createSummary=function(srcFileName,directives,pipes,ngModules,injectables,ngFactoryCtx){var _this=this;var symbolSummaries=this._symbolResolver.getSymbolsOf(srcFileName).map(function(symbol){return _this._symbolResolver.resolveSymbol(symbol);});var typeData=(0,_tslib.__spread)(ngModules.map(function(meta){return{summary:_this._metadataResolver.getNgModuleSummary(meta.type.reference),metadata:_this._metadataResolver.getNgModuleMetadata(meta.type.reference)};}),directives.map(function(ref){return{summary:_this._metadataResolver.getDirectiveSummary(ref),metadata:_this._metadataResolver.getDirectiveMetadata(ref)};}),pipes.map(function(ref){return{summary:_this._metadataResolver.getPipeSummary(ref),metadata:_this._metadataResolver.getPipeMetadata(ref)};}),injectables.map(function(ref){return{summary:_this._metadataResolver.getInjectableSummary(ref.symbol),metadata:_this._metadataResolver.getInjectableSummary(ref.symbol).type};}));var forJitOutputCtx=this._options.enableSummariesForJit?this._createOutputContext(summaryForJitFileName(srcFileName,true)):null;var _a=serializeSummaries(srcFileName,forJitOutputCtx,this._summaryResolver,this._symbolResolver,symbolSummaries,typeData),json=_a.json,exportAs=_a.exportAs;exportAs.forEach(function(entry){ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null,[StmtModifier.Exported]));});var summaryJson=new GeneratedFile(srcFileName,summaryFileName(srcFileName),json);var result=[summaryJson];if(forJitOutputCtx){result.push(this._codegenSourceModule(srcFileName,forJitOutputCtx));}return result;};AotCompiler.prototype._compileModule=function(outputCtx,ngModule){var providers=[];if(this._options.locale){var normalizedLocale=this._options.locale.replace(/_/g,'-');providers.push({token:createTokenForExternalReference(this.reflector,Identifiers.LOCALE_ID),useValue:normalizedLocale});}if(this._options.i18nFormat){providers.push({token:createTokenForExternalReference(this.reflector,Identifiers.TRANSLATIONS_FORMAT),useValue:this._options.i18nFormat});}this._ngModuleCompiler.compile(outputCtx,ngModule,providers);};AotCompiler.prototype._compileComponentFactory=function(outputCtx,compMeta,ngModule,fileSuffix){var hostMeta=this._metadataResolver.getHostComponentMetadata(compMeta);var hostViewFactoryVar=this._compileComponent(outputCtx,hostMeta,ngModule,[compMeta.type],null,fileSuffix).viewClassVar;var compFactoryVar=componentFactoryName(compMeta.type.reference);var inputsExprs=[];for(var propName in compMeta.inputs){var templateName=compMeta.inputs[propName];// Don't quote so that the key gets minified...
inputsExprs.push(new LiteralMapEntry(propName,literal(templateName),false));}var outputsExprs=[];for(var propName in compMeta.outputs){var templateName=compMeta.outputs[propName];// Don't quote so that the key gets minified...
outputsExprs.push(new LiteralMapEntry(propName,literal(templateName),false));}outputCtx.statements.push(variable(compFactoryVar).set(importExpr(Identifiers.createComponentFactory).callFn([literal(compMeta.selector),outputCtx.importExpr(compMeta.type.reference),variable(hostViewFactoryVar),new LiteralMapExpr(inputsExprs),new LiteralMapExpr(outputsExprs),literalArr(compMeta.template.ngContentSelectors.map(function(selector){return literal(selector);}))])).toDeclStmt(importType(Identifiers.ComponentFactory,[expressionType(outputCtx.importExpr(compMeta.type.reference))],[TypeModifier.Const]),[StmtModifier.Final,StmtModifier.Exported]));};AotCompiler.prototype._compileComponent=function(outputCtx,compMeta,ngModule,directiveIdentifiers,componentStyles,fileSuffix){var _a=this._parseTemplate(compMeta,ngModule,directiveIdentifiers),parsedTemplate=_a.template,usedPipes=_a.pipes;var stylesExpr=componentStyles?variable(componentStyles.stylesVar):literalArr([]);var viewResult=this._viewCompiler.compileComponent(outputCtx,compMeta,parsedTemplate,stylesExpr,usedPipes);if(componentStyles){_resolveStyleStatements(this._symbolResolver,componentStyles,this._styleCompiler.needsStyleShim(compMeta),fileSuffix);}return viewResult;};AotCompiler.prototype._parseTemplate=function(compMeta,ngModule,directiveIdentifiers){var _this=this;if(this._templateAstCache.has(compMeta.type.reference)){return this._templateAstCache.get(compMeta.type.reference);}var preserveWhitespaces=compMeta.template.preserveWhitespaces;var directives=directiveIdentifiers.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});var pipes=ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});var result=this._templateParser.parse(compMeta,compMeta.template.htmlAst,directives,pipes,ngModule.schemas,templateSourceUrl(ngModule.type,compMeta,compMeta.template),preserveWhitespaces);this._templateAstCache.set(compMeta.type.reference,result);return result;};AotCompiler.prototype._createOutputContext=function(genFilePath){var _this=this;var importExpr$$1=function importExpr$$1(symbol,typeParams,useSummaries){if(typeParams===void 0){typeParams=null;}if(useSummaries===void 0){useSummaries=true;}if(!(symbol instanceof StaticSymbol)){throw new Error("Internal error: unknown identifier "+JSON.stringify(symbol));}var arity=_this._symbolResolver.getTypeArity(symbol)||0;var _a=_this._symbolResolver.getImportAs(symbol,useSummaries)||symbol,filePath=_a.filePath,name=_a.name,members=_a.members;var importModule=_this._fileNameToModuleName(filePath,genFilePath);// It should be good enough to compare filePath to genFilePath and if they are equal
// there is a self reference. However, ngfactory files generate to .ts but their
// symbols have .d.ts so a simple compare is insufficient. They should be canonical
// and is tracked by #17705.
var selfReference=_this._fileNameToModuleName(genFilePath,genFilePath);var moduleName=importModule===selfReference?null:importModule;// If we are in a type expression that refers to a generic type then supply
// the required type parameters. If there were not enough type parameters
// supplied, supply any as the type. Outside a type expression the reference
// should not supply type parameters and be treated as a simple value reference
// to the constructor function itself.
var suppliedTypeParams=typeParams||[];var missingTypeParamsCount=arity-suppliedTypeParams.length;var allTypeParams=suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));return members.reduce(function(expr,memberName){return expr.prop(memberName);},importExpr(new ExternalReference(moduleName,name,null),allTypeParams));};return{statements:[],genFilePath:genFilePath,importExpr:importExpr$$1,constantPool:new ConstantPool()};};AotCompiler.prototype._fileNameToModuleName=function(importedFilePath,containingFilePath){return this._summaryResolver.getKnownModuleName(importedFilePath)||this._symbolResolver.getKnownModuleName(importedFilePath)||this._host.fileNameToModuleName(importedFilePath,containingFilePath);};AotCompiler.prototype._codegenStyles=function(srcFileUrl,compMeta,stylesheetMetadata,isShimmed,fileSuffix){var outputCtx=this._createOutputContext(_stylesModuleUrl(stylesheetMetadata.moduleUrl,isShimmed,fileSuffix));var compiledStylesheet=this._styleCompiler.compileStyles(outputCtx,compMeta,stylesheetMetadata,isShimmed);_resolveStyleStatements(this._symbolResolver,compiledStylesheet,isShimmed,fileSuffix);return this._codegenSourceModule(srcFileUrl,outputCtx);};AotCompiler.prototype._codegenSourceModule=function(srcFileUrl,ctx){return new GeneratedFile(srcFileUrl,ctx.genFilePath,ctx.statements);};AotCompiler.prototype.listLazyRoutes=function(entryRoute,analyzedModules){var self=this;if(entryRoute){var symbol=parseLazyRoute(entryRoute,this.reflector).referencedModule;return visitLazyRoute(symbol);}else if(analyzedModules){var allLazyRoutes=[];try{for(var _a=(0,_tslib.__values)(analyzedModules.ngModules),_b=_a.next();!_b.done;_b=_a.next()){var ngModule=_b.value;var lazyRoutes=listLazyRoutes(ngModule,this.reflector);try{for(var lazyRoutes_1=(0,_tslib.__values)(lazyRoutes),lazyRoutes_1_1=lazyRoutes_1.next();!lazyRoutes_1_1.done;lazyRoutes_1_1=lazyRoutes_1.next()){var lazyRoute=lazyRoutes_1_1.value;allLazyRoutes.push(lazyRoute);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(lazyRoutes_1_1&&!lazyRoutes_1_1.done&&(_c=lazyRoutes_1.return))_c.call(lazyRoutes_1);}finally{if(e_2)throw e_2.error;}}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_b&&!_b.done&&(_d=_a.return))_d.call(_a);}finally{if(e_3)throw e_3.error;}}return allLazyRoutes;}else{throw new Error("Either route or analyzedModules has to be specified!");}function visitLazyRoute(symbol,seenRoutes,allLazyRoutes){if(seenRoutes===void 0){seenRoutes=new Set();}if(allLazyRoutes===void 0){allLazyRoutes=[];}// Support pointing to default exports, but stop recursing there,
// as the StaticReflector does not yet support default exports.
if(seenRoutes.has(symbol)||!symbol.name){return allLazyRoutes;}seenRoutes.add(symbol);var lazyRoutes=listLazyRoutes(self._metadataResolver.getNgModuleMetadata(symbol,true),self.reflector);try{for(var lazyRoutes_2=(0,_tslib.__values)(lazyRoutes),lazyRoutes_2_1=lazyRoutes_2.next();!lazyRoutes_2_1.done;lazyRoutes_2_1=lazyRoutes_2.next()){var lazyRoute=lazyRoutes_2_1.value;allLazyRoutes.push(lazyRoute);visitLazyRoute(lazyRoute.referencedModule,seenRoutes,allLazyRoutes);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(lazyRoutes_2_1&&!lazyRoutes_2_1.done&&(_a=lazyRoutes_2.return))_a.call(lazyRoutes_2);}finally{if(e_4)throw e_4.error;}}return allLazyRoutes;var e_4,_a;}var e_3,_d,e_2,_c;};return AotCompiler;}();exports.AotCompiler=AotCompiler;function _createEmptyStub(outputCtx){// Note: We need to produce at least one import statement so that
// TypeScript knows that the file is an es6 module. Otherwise our generated
// exports / imports won't be emitted properly by TypeScript.
outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());}function _resolveStyleStatements(symbolResolver,compileResult,needsShim,fileSuffix){compileResult.dependencies.forEach(function(dep){dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl,needsShim,fileSuffix),dep.name));});}function _stylesModuleUrl(stylesheetUrl,shim,suffix){return""+stylesheetUrl+(shim?'.shim':'')+".ngstyle"+suffix;}function analyzeNgModules(fileNames,host,staticSymbolResolver,metadataResolver){var files=_analyzeFilesIncludingNonProgramFiles(fileNames,host,staticSymbolResolver,metadataResolver);return mergeAnalyzedFiles(files);}function analyzeAndValidateNgModules(fileNames,host,staticSymbolResolver,metadataResolver){return validateAnalyzedModules(analyzeNgModules(fileNames,host,staticSymbolResolver,metadataResolver));}function validateAnalyzedModules(analyzedModules){if(analyzedModules.symbolsMissingModule&&analyzedModules.symbolsMissingModule.length){var messages=analyzedModules.symbolsMissingModule.map(function(s){return"Cannot determine the module for class "+s.name+" in "+s.filePath+"! Add "+s.name+" to the NgModule to fix it.";});throw syntaxError(messages.join('\n'));}return analyzedModules;}// Analyzes all of the program files,
// including files that are not part of the program
// but are referenced by an NgModule.
function _analyzeFilesIncludingNonProgramFiles(fileNames,host,staticSymbolResolver,metadataResolver){var seenFiles=new Set();var files=[];var visitFile=function visitFile(fileName){if(seenFiles.has(fileName)||!host.isSourceFile(fileName)){return false;}seenFiles.add(fileName);var analyzedFile=analyzeFile(host,staticSymbolResolver,metadataResolver,fileName);files.push(analyzedFile);analyzedFile.ngModules.forEach(function(ngModule){ngModule.transitiveModule.modules.forEach(function(modMeta){return visitFile(modMeta.reference.filePath);});});};fileNames.forEach(function(fileName){return visitFile(fileName);});return files;}function analyzeFile(host,staticSymbolResolver,metadataResolver,fileName){var directives=[];var pipes=[];var injectables=[];var ngModules=[];var hasDecorators=staticSymbolResolver.hasDecorators(fileName);var exportsNonSourceFiles=false;// Don't analyze .d.ts files that have no decorators as a shortcut
// to speed up the analysis. This prevents us from
// resolving the references in these files.
// Note: exportsNonSourceFiles is only needed when compiling with summaries,
// which is not the case when .d.ts files are treated as input files.
if(!fileName.endsWith('.d.ts')||hasDecorators){staticSymbolResolver.getSymbolsOf(fileName).forEach(function(symbol){var resolvedSymbol=staticSymbolResolver.resolveSymbol(symbol);var symbolMeta=resolvedSymbol.metadata;if(!symbolMeta||symbolMeta.__symbolic==='error'){return;}var isNgSymbol=false;if(symbolMeta.__symbolic==='class'){if(metadataResolver.isDirective(symbol)){isNgSymbol=true;directives.push(symbol);}else if(metadataResolver.isPipe(symbol)){isNgSymbol=true;pipes.push(symbol);}else if(metadataResolver.isNgModule(symbol)){var ngModule=metadataResolver.getNgModuleMetadata(symbol,false);if(ngModule){isNgSymbol=true;ngModules.push(ngModule);}}else if(metadataResolver.isInjectable(symbol)){isNgSymbol=true;var injectable=metadataResolver.getInjectableMetadata(symbol,null,false);if(injectable){injectables.push(injectable);}}}if(!isNgSymbol){exportsNonSourceFiles=exportsNonSourceFiles||isValueExportingNonSourceFile(host,symbolMeta);}});}return{fileName:fileName,directives:directives,pipes:pipes,ngModules:ngModules,injectables:injectables,exportsNonSourceFiles:exportsNonSourceFiles};}function analyzeFileForInjectables(host,staticSymbolResolver,metadataResolver,fileName){var injectables=[];var shallowModules=[];if(staticSymbolResolver.hasDecorators(fileName)){staticSymbolResolver.getSymbolsOf(fileName).forEach(function(symbol){var resolvedSymbol=staticSymbolResolver.resolveSymbol(symbol);var symbolMeta=resolvedSymbol.metadata;if(!symbolMeta||symbolMeta.__symbolic==='error'){return;}if(symbolMeta.__symbolic==='class'){if(metadataResolver.isInjectable(symbol)){var injectable=metadataResolver.getInjectableMetadata(symbol,null,false);if(injectable){injectables.push(injectable);}}else if(metadataResolver.isNgModule(symbol)){var module=metadataResolver.getShallowModuleMetadata(symbol);if(module){shallowModules.push(module);}}}});}return{fileName:fileName,injectables:injectables,shallowModules:shallowModules};}function isValueExportingNonSourceFile(host,metadata){var exportsNonSourceFiles=false;var Visitor=/** @class */function(){function Visitor(){}Visitor.prototype.visitArray=function(arr,context){var _this=this;arr.forEach(function(v){return visitValue(v,_this,context);});};Visitor.prototype.visitStringMap=function(map,context){var _this=this;Object.keys(map).forEach(function(key){return visitValue(map[key],_this,context);});};Visitor.prototype.visitPrimitive=function(value,context){};Visitor.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol&&!host.isSourceFile(value.filePath)){exportsNonSourceFiles=true;}};return Visitor;}();visitValue(metadata,new Visitor(),null);return exportsNonSourceFiles;}function mergeAnalyzedFiles(analyzedFiles){var allNgModules=[];var ngModuleByPipeOrDirective=new Map();var allPipesAndDirectives=new Set();analyzedFiles.forEach(function(af){af.ngModules.forEach(function(ngModule){allNgModules.push(ngModule);ngModule.declaredDirectives.forEach(function(d){return ngModuleByPipeOrDirective.set(d.reference,ngModule);});ngModule.declaredPipes.forEach(function(p){return ngModuleByPipeOrDirective.set(p.reference,ngModule);});});af.directives.forEach(function(d){return allPipesAndDirectives.add(d);});af.pipes.forEach(function(p){return allPipesAndDirectives.add(p);});});var symbolsMissingModule=[];allPipesAndDirectives.forEach(function(ref){if(!ngModuleByPipeOrDirective.has(ref)){symbolsMissingModule.push(ref);}});return{ngModules:allNgModules,ngModuleByPipeOrDirective:ngModuleByPipeOrDirective,symbolsMissingModule:symbolsMissingModule,files:analyzedFiles};}function mergeAndValidateNgFiles(files){return validateAnalyzedModules(mergeAnalyzedFiles(files));}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var FORMATTED_MESSAGE='ngFormattedMessage';function indentStr(level){if(level<=0)return'';if(level<6)return['',' ','  ','   ','    ','     '][level];var half=indentStr(Math.floor(level/2));return half+half+(level%2===1?' ':'');}function formatChain(chain,indent){if(indent===void 0){indent=0;}if(!chain)return'';var position=chain.position?chain.position.fileName+"("+(chain.position.line+1)+","+(chain.position.column+1)+")":'';var prefix=position&&indent===0?position+": ":'';var postfix=position&&indent!==0?" at "+position:'';var message=""+prefix+chain.message+postfix;return""+indentStr(indent)+message+(chain.next&&'\n'+formatChain(chain.next,indent+2)||'');}function formattedError(chain){var message=formatChain(chain)+'.';var error$$1=syntaxError(message);error$$1[FORMATTED_MESSAGE]=true;error$$1.chain=chain;error$$1.position=chain.position;return error$$1;}function isFormattedError(error$$1){return!!error$$1[FORMATTED_MESSAGE];}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ANGULAR_CORE='@angular/core';var ANGULAR_ROUTER='@angular/router';var HIDDEN_KEY=/^\$.*\$$/;var IGNORE={__symbolic:'ignore'};var USE_VALUE='useValue';var PROVIDE='provide';var REFERENCE_SET=new Set([USE_VALUE,'useFactory','data','id','loadChildren']);var TYPEGUARD_POSTFIX='TypeGuard';var USE_IF='UseIf';function shouldIgnore(value){return value&&value.__symbolic=='ignore';}/**
 * A static reflector implements enough of the Reflector API that is necessary to compile
 * templates statically.
 */var StaticReflector=/** @class */function(){function StaticReflector(summaryResolver,symbolResolver,knownMetadataClasses,knownMetadataFunctions,errorRecorder){if(knownMetadataClasses===void 0){knownMetadataClasses=[];}if(knownMetadataFunctions===void 0){knownMetadataFunctions=[];}var _this=this;this.summaryResolver=summaryResolver;this.symbolResolver=symbolResolver;this.errorRecorder=errorRecorder;this.annotationCache=new Map();this.shallowAnnotationCache=new Map();this.propertyCache=new Map();this.parameterCache=new Map();this.methodCache=new Map();this.staticCache=new Map();this.conversionMap=new Map();this.resolvedExternalReferences=new Map();this.annotationForParentClassWithSummaryKind=new Map();this.initializeConversionMap();knownMetadataClasses.forEach(function(kc){return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath,kc.name),kc.ctor);});knownMetadataFunctions.forEach(function(kf){return _this._registerFunction(_this.getStaticSymbol(kf.filePath,kf.name),kf.fn);});this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive,[createDirective,createComponent]);this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe,[createPipe]);this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule,[createNgModule]);this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable,[createInjectable,createPipe,createDirective,createComponent,createNgModule]);}StaticReflector.prototype.componentModuleUrl=function(typeOrFunc){var staticSymbol=this.findSymbolDeclaration(typeOrFunc);return this.symbolResolver.getResourcePath(staticSymbol);};StaticReflector.prototype.resolveExternalReference=function(ref,containingFile){var key=undefined;if(!containingFile){key=ref.moduleName+":"+ref.name;var declarationSymbol_1=this.resolvedExternalReferences.get(key);if(declarationSymbol_1)return declarationSymbol_1;}var refSymbol=this.symbolResolver.getSymbolByModule(ref.moduleName,ref.name,containingFile);var declarationSymbol=this.findSymbolDeclaration(refSymbol);if(!containingFile){this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath,ref.moduleName);this.symbolResolver.recordImportAs(declarationSymbol,refSymbol);}if(key){this.resolvedExternalReferences.set(key,declarationSymbol);}return declarationSymbol;};StaticReflector.prototype.findDeclaration=function(moduleUrl,name,containingFile){return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl,name,containingFile));};StaticReflector.prototype.tryFindDeclaration=function(moduleUrl,name,containingFile){var _this=this;return this.symbolResolver.ignoreErrorsFor(function(){return _this.findDeclaration(moduleUrl,name,containingFile);});};StaticReflector.prototype.findSymbolDeclaration=function(symbol){var resolvedSymbol=this.symbolResolver.resolveSymbol(symbol);if(resolvedSymbol){var resolvedMetadata=resolvedSymbol.metadata;if(resolvedMetadata&&resolvedMetadata.__symbolic==='resolved'){resolvedMetadata=resolvedMetadata.symbol;}if(resolvedMetadata instanceof StaticSymbol){return this.findSymbolDeclaration(resolvedSymbol.metadata);}}return symbol;};StaticReflector.prototype.tryAnnotations=function(type){var originalRecorder=this.errorRecorder;this.errorRecorder=function(error$$1,fileName){};try{return this.annotations(type);}finally{this.errorRecorder=originalRecorder;}};StaticReflector.prototype.annotations=function(type){var _this=this;return this._annotations(type,function(type,decorators){return _this.simplify(type,decorators);},this.annotationCache);};StaticReflector.prototype.shallowAnnotations=function(type){var _this=this;return this._annotations(type,function(type,decorators){return _this.simplify(type,decorators,true);},this.shallowAnnotationCache);};StaticReflector.prototype._annotations=function(type,simplify,annotationCache){var annotations=annotationCache.get(type);if(!annotations){annotations=[];var classMetadata=this.getTypeMetadata(type);var parentType=this.findParentType(type,classMetadata);if(parentType){var parentAnnotations=this.annotations(parentType);annotations.push.apply(annotations,(0,_tslib.__spread)(parentAnnotations));}var ownAnnotations_1=[];if(classMetadata['decorators']){ownAnnotations_1=simplify(type,classMetadata['decorators']);if(ownAnnotations_1){annotations.push.apply(annotations,(0,_tslib.__spread)(ownAnnotations_1));}}if(parentType&&!this.summaryResolver.isLibraryFile(type.filePath)&&this.summaryResolver.isLibraryFile(parentType.filePath)){var summary=this.summaryResolver.resolveSummary(parentType);if(summary&&summary.type){var requiredAnnotationTypes=this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind);var typeHasRequiredAnnotation=requiredAnnotationTypes.some(function(requiredType){return ownAnnotations_1.some(function(ann){return requiredType.isTypeOf(ann);});});if(!typeHasRequiredAnnotation){this.reportError(formatMetadataError(metadataError("Class "+type.name+" in "+type.filePath+" extends from a "+CompileSummaryKind[summary.type.summaryKind]+" in another compilation unit without duplicating the decorator",/* summary */undefined,"Please add a "+requiredAnnotationTypes.map(function(type){return type.ngMetadataName;}).join(' or ')+" decorator to the class"),type),type);}}}annotationCache.set(type,annotations.filter(function(ann){return!!ann;}));}return annotations;};StaticReflector.prototype.propMetadata=function(type){var _this=this;var propMetadata=this.propertyCache.get(type);if(!propMetadata){var classMetadata=this.getTypeMetadata(type);propMetadata={};var parentType=this.findParentType(type,classMetadata);if(parentType){var parentPropMetadata_1=this.propMetadata(parentType);Object.keys(parentPropMetadata_1).forEach(function(parentProp){propMetadata[parentProp]=parentPropMetadata_1[parentProp];});}var members_1=classMetadata['members']||{};Object.keys(members_1).forEach(function(propName){var propData=members_1[propName];var prop=propData.find(function(a){return a['__symbolic']=='property'||a['__symbolic']=='method';});var decorators=[];if(propMetadata[propName]){decorators.push.apply(decorators,(0,_tslib.__spread)(propMetadata[propName]));}propMetadata[propName]=decorators;if(prop&&prop['decorators']){decorators.push.apply(decorators,(0,_tslib.__spread)(_this.simplify(type,prop['decorators'])));}});this.propertyCache.set(type,propMetadata);}return propMetadata;};StaticReflector.prototype.parameters=function(type){var _this=this;if(!(type instanceof StaticSymbol)){this.reportError(new Error("parameters received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);return[];}try{var parameters_1=this.parameterCache.get(type);if(!parameters_1){var classMetadata=this.getTypeMetadata(type);var parentType=this.findParentType(type,classMetadata);var members=classMetadata?classMetadata['members']:null;var ctorData=members?members['__ctor__']:null;if(ctorData){var ctor=ctorData.find(function(a){return a['__symbolic']=='constructor';});var rawParameterTypes=ctor['parameters']||[];var parameterDecorators_1=this.simplify(type,ctor['parameterDecorators']||[]);parameters_1=[];rawParameterTypes.forEach(function(rawParamType,index){var nestedResult=[];var paramType=_this.trySimplify(type,rawParamType);if(paramType)nestedResult.push(paramType);var decorators=parameterDecorators_1?parameterDecorators_1[index]:null;if(decorators){nestedResult.push.apply(nestedResult,(0,_tslib.__spread)(decorators));}parameters_1.push(nestedResult);});}else if(parentType){parameters_1=this.parameters(parentType);}if(!parameters_1){parameters_1=[];}this.parameterCache.set(type,parameters_1);}return parameters_1;}catch(e){console.error("Failed on type "+JSON.stringify(type)+" with error "+e);throw e;}};StaticReflector.prototype._methodNames=function(type){var methodNames=this.methodCache.get(type);if(!methodNames){var classMetadata=this.getTypeMetadata(type);methodNames={};var parentType=this.findParentType(type,classMetadata);if(parentType){var parentMethodNames_1=this._methodNames(parentType);Object.keys(parentMethodNames_1).forEach(function(parentProp){methodNames[parentProp]=parentMethodNames_1[parentProp];});}var members_2=classMetadata['members']||{};Object.keys(members_2).forEach(function(propName){var propData=members_2[propName];var isMethod=propData.some(function(a){return a['__symbolic']=='method';});methodNames[propName]=methodNames[propName]||isMethod;});this.methodCache.set(type,methodNames);}return methodNames;};StaticReflector.prototype._staticMembers=function(type){var staticMembers=this.staticCache.get(type);if(!staticMembers){var classMetadata=this.getTypeMetadata(type);var staticMemberData=classMetadata['statics']||{};staticMembers=Object.keys(staticMemberData);this.staticCache.set(type,staticMembers);}return staticMembers;};StaticReflector.prototype.findParentType=function(type,classMetadata){var parentType=this.trySimplify(type,classMetadata['extends']);if(parentType instanceof StaticSymbol){return parentType;}};StaticReflector.prototype.hasLifecycleHook=function(type,lcProperty){if(!(type instanceof StaticSymbol)){this.reportError(new Error("hasLifecycleHook received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);}try{return!!this._methodNames(type)[lcProperty];}catch(e){console.error("Failed on type "+JSON.stringify(type)+" with error "+e);throw e;}};StaticReflector.prototype.guards=function(type){if(!(type instanceof StaticSymbol)){this.reportError(new Error("guards received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);return{};}var staticMembers=this._staticMembers(type);var result={};try{for(var staticMembers_1=(0,_tslib.__values)(staticMembers),staticMembers_1_1=staticMembers_1.next();!staticMembers_1_1.done;staticMembers_1_1=staticMembers_1.next()){var name_1=staticMembers_1_1.value;if(name_1.endsWith(TYPEGUARD_POSTFIX)){var property=name_1.substr(0,name_1.length-TYPEGUARD_POSTFIX.length);var value=void 0;if(property.endsWith(USE_IF)){property=name_1.substr(0,property.length-USE_IF.length);value=USE_IF;}else{value=this.getStaticSymbol(type.filePath,type.name,[name_1]);}result[property]=value;}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(staticMembers_1_1&&!staticMembers_1_1.done&&(_a=staticMembers_1.return))_a.call(staticMembers_1);}finally{if(e_1)throw e_1.error;}}return result;var e_1,_a;};StaticReflector.prototype._registerDecoratorOrConstructor=function(type,ctor){this.conversionMap.set(type,function(context,args){return new(ctor.bind.apply(ctor,(0,_tslib.__spread)([void 0],args)))();});};StaticReflector.prototype._registerFunction=function(type,fn){this.conversionMap.set(type,function(context,args){return fn.apply(undefined,args);});};StaticReflector.prototype.initializeConversionMap=function(){this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Injectable'),createInjectable);this.injectionToken=this.findDeclaration(ANGULAR_CORE,'InjectionToken');this.opaqueToken=this.findDeclaration(ANGULAR_CORE,'OpaqueToken');this.ROUTES=this.tryFindDeclaration(ANGULAR_ROUTER,'ROUTES');this.ANALYZE_FOR_ENTRY_COMPONENTS=this.findDeclaration(ANGULAR_CORE,'ANALYZE_FOR_ENTRY_COMPONENTS');this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),createHost);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),createSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),createSkipSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Inject'),createInject);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),createOptional);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Attribute'),createAttribute);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChild'),createContentChild);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChildren'),createContentChildren);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChild'),createViewChild);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChildren'),createViewChildren);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Input'),createInput);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Output'),createOutput);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Pipe'),createPipe);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostBinding'),createHostBinding);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostListener'),createHostListener);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Directive'),createDirective);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Component'),createComponent);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'NgModule'),createNgModule);// Note: Some metadata classes can be used directly with Provider.deps.
this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),createHost);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),createSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),createSkipSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),createOptional);};/**
     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
     * All types passed to the StaticResolver should be pseudo-types returned by this method.
     *
     * @param declarationFile the absolute path of the file where the symbol is declared
     * @param name the name of the type.
     */StaticReflector.prototype.getStaticSymbol=function(declarationFile,name,members){return this.symbolResolver.getStaticSymbol(declarationFile,name,members);};/**
     * Simplify but discard any errors
     */StaticReflector.prototype.trySimplify=function(context,value){var originalRecorder=this.errorRecorder;this.errorRecorder=function(error$$1,fileName){};var result=this.simplify(context,value);this.errorRecorder=originalRecorder;return result;};/** @internal */StaticReflector.prototype.simplify=function(context,value,lazy){if(lazy===void 0){lazy=false;}var self=this;var scope=BindingScope$1.empty;var calling=new Map();function simplifyInContext(context,value,depth,references){function resolveReferenceValue(staticSymbol){var resolvedSymbol=self.symbolResolver.resolveSymbol(staticSymbol);return resolvedSymbol?resolvedSymbol.metadata:null;}function simplifyEagerly(value){return simplifyInContext(context,value,depth,0);}function simplifyLazily(value){return simplifyInContext(context,value,depth,references+1);}function simplifyNested(nestedContext,value){if(nestedContext===context){// If the context hasn't changed let the exception propagate unmodified.
return simplifyInContext(nestedContext,value,depth+1,references);}try{return simplifyInContext(nestedContext,value,depth+1,references);}catch(e){if(isMetadataError(e)){// Propagate the message text up but add a message to the chain that explains how we got
// here.
// e.chain implies e.symbol
var summaryMsg=e.chain?'references \''+e.symbol.name+'\'':errorSummary(e);var summary="'"+nestedContext.name+"' "+summaryMsg;var chain={message:summary,position:e.position,next:e.chain};// TODO(chuckj): retrieve the position information indirectly from the collectors node
// map if the metadata is from a .ts file.
self.error({message:e.message,advise:e.advise,context:e.context,chain:chain,symbol:nestedContext},context);}else{// It is probably an internal error.
throw e;}}}function simplifyCall(functionSymbol,targetFunction,args,targetExpression){if(targetFunction&&targetFunction['__symbolic']=='function'){if(calling.get(functionSymbol)){self.error({message:'Recursion is not supported',summary:"called '"+functionSymbol.name+"' recursively",value:targetFunction},functionSymbol);}try{var value_1=targetFunction['value'];if(value_1&&(depth!=0||value_1.__symbolic!='error')){var parameters=targetFunction['parameters'];var defaults=targetFunction.defaults;args=args.map(function(arg){return simplifyNested(context,arg);}).map(function(arg){return shouldIgnore(arg)?undefined:arg;});if(defaults&&defaults.length>args.length){args.push.apply(args,(0,_tslib.__spread)(defaults.slice(args.length).map(function(value){return simplify(value);})));}calling.set(functionSymbol,true);var functionScope=BindingScope$1.build();for(var i=0;i<parameters.length;i++){functionScope.define(parameters[i],args[i]);}var oldScope=scope;var result_1;try{scope=functionScope.done();result_1=simplifyNested(functionSymbol,value_1);}finally{scope=oldScope;}return result_1;}}finally{calling.delete(functionSymbol);}}if(depth===0){// If depth is 0 we are evaluating the top level expression that is describing element
// decorator. In this case, it is a decorator we don't understand, such as a custom
// non-angular decorator, and we should just ignore it.
return IGNORE;}var position=undefined;if(targetExpression&&targetExpression.__symbolic=='resolved'){var line=targetExpression.line;var character=targetExpression.character;var fileName=targetExpression.fileName;if(fileName!=null&&line!=null&&character!=null){position={fileName:fileName,line:line,column:character};}}self.error({message:FUNCTION_CALL_NOT_SUPPORTED,context:functionSymbol,value:targetFunction,position:position},context);}function simplify(expression){if(isPrimitive(expression)){return expression;}if(expression instanceof Array){var result_2=[];try{for(var _a=(0,_tslib.__values)(expression),_b=_a.next();!_b.done;_b=_a.next()){var item=_b.value;// Check for a spread expression
if(item&&item.__symbolic==='spread'){// We call with references as 0 because we require the actual value and cannot
// tolerate a reference here.
var spreadArray=simplifyEagerly(item.expression);if(Array.isArray(spreadArray)){try{for(var spreadArray_1=(0,_tslib.__values)(spreadArray),spreadArray_1_1=spreadArray_1.next();!spreadArray_1_1.done;spreadArray_1_1=spreadArray_1.next()){var spreadItem=spreadArray_1_1.value;result_2.push(spreadItem);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(spreadArray_1_1&&!spreadArray_1_1.done&&(_c=spreadArray_1.return))_c.call(spreadArray_1);}finally{if(e_2)throw e_2.error;}}continue;}}var value_2=simplify(item);if(shouldIgnore(value_2)){continue;}result_2.push(value_2);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_b&&!_b.done&&(_d=_a.return))_d.call(_a);}finally{if(e_3)throw e_3.error;}}return result_2;}if(expression instanceof StaticSymbol){// Stop simplification at builtin symbols or if we are in a reference context and
// the symbol doesn't have members.
if(expression===self.injectionToken||self.conversionMap.has(expression)||references>0&&!expression.members.length){return expression;}else{var staticSymbol=expression;var declarationValue=resolveReferenceValue(staticSymbol);if(declarationValue!=null){return simplifyNested(staticSymbol,declarationValue);}else{return staticSymbol;}}}if(expression){if(expression['__symbolic']){var staticSymbol=void 0;switch(expression['__symbolic']){case'binop':var left=simplify(expression['left']);if(shouldIgnore(left))return left;var right=simplify(expression['right']);if(shouldIgnore(right))return right;switch(expression['operator']){case'&&':return left&&right;case'||':return left||right;case'|':return left|right;case'^':return left^right;case'&':return left&right;case'==':return left==right;case'!=':return left!=right;case'===':return left===right;case'!==':return left!==right;case'<':return left<right;case'>':return left>right;case'<=':return left<=right;case'>=':return left>=right;case'<<':return left<<right;case'>>':return left>>right;case'+':return left+right;case'-':return left-right;case'*':return left*right;case'/':return left/right;case'%':return left%right;}return null;case'if':var condition=simplify(expression['condition']);return condition?simplify(expression['thenExpression']):simplify(expression['elseExpression']);case'pre':var operand=simplify(expression['operand']);if(shouldIgnore(operand))return operand;switch(expression['operator']){case'+':return operand;case'-':return-operand;case'!':return!operand;case'~':return~operand;}return null;case'index':var indexTarget=simplifyEagerly(expression['expression']);var index=simplifyEagerly(expression['index']);if(indexTarget&&isPrimitive(index))return indexTarget[index];return null;case'select':var member=expression['member'];var selectContext=context;var selectTarget=simplify(expression['expression']);if(selectTarget instanceof StaticSymbol){var members=selectTarget.members.concat(member);selectContext=self.getStaticSymbol(selectTarget.filePath,selectTarget.name,members);var declarationValue=resolveReferenceValue(selectContext);if(declarationValue!=null){return simplifyNested(selectContext,declarationValue);}else{return selectContext;}}if(selectTarget&&isPrimitive(member))return simplifyNested(selectContext,selectTarget[member]);return null;case'reference':// Note: This only has to deal with variable references, as symbol references have
// been converted into 'resolved'
// in the StaticSymbolResolver.
var name_2=expression['name'];var localValue=scope.resolve(name_2);if(localValue!=BindingScope$1.missing){return localValue;}break;case'resolved':try{return simplify(expression.symbol);}catch(e){// If an error is reported evaluating the symbol record the position of the
// reference in the error so it can
// be reported in the error message generated from the exception.
if(isMetadataError(e)&&expression.fileName!=null&&expression.line!=null&&expression.character!=null){e.position={fileName:expression.fileName,line:expression.line,column:expression.character};}throw e;}case'class':return context;case'function':return context;case'new':case'call':// Determine if the function is a built-in conversion
staticSymbol=simplifyInContext(context,expression['expression'],depth+1,/* references */0);if(staticSymbol instanceof StaticSymbol){if(staticSymbol===self.injectionToken||staticSymbol===self.opaqueToken){// if somebody calls new InjectionToken, don't create an InjectionToken,
// but rather return the symbol to which the InjectionToken is assigned to.
// OpaqueToken is supported too as it is required by the language service to
// support v4 and prior versions of Angular.
return context;}var argExpressions=expression['arguments']||[];var converter=self.conversionMap.get(staticSymbol);if(converter){var args=argExpressions.map(function(arg){return simplifyNested(context,arg);}).map(function(arg){return shouldIgnore(arg)?undefined:arg;});return converter(context,args);}else{// Determine if the function is one we can simplify.
var targetFunction=resolveReferenceValue(staticSymbol);return simplifyCall(staticSymbol,targetFunction,argExpressions,expression['expression']);}}return IGNORE;case'error':var message=expression.message;if(expression['line']!=null){self.error({message:message,context:expression.context,value:expression,position:{fileName:expression['fileName'],line:expression['line'],column:expression['character']}},context);}else{self.error({message:message,context:expression.context},context);}return IGNORE;case'ignore':return expression;}return null;}return mapStringMap(expression,function(value,name){if(REFERENCE_SET.has(name)){if(name===USE_VALUE&&PROVIDE in expression){// If this is a provider expression, check for special tokens that need the value
// during analysis.
var provide=simplify(expression.provide);if(provide===self.ROUTES||provide==self.ANALYZE_FOR_ENTRY_COMPONENTS){return simplify(value);}}return simplifyLazily(value);}return simplify(value);});}return IGNORE;var e_3,_d,e_2,_c;}return simplify(value);}var result;try{result=simplifyInContext(context,value,0,lazy?1:0);}catch(e){if(this.errorRecorder){this.reportError(e,context);}else{throw formatMetadataError(e,context);}}if(shouldIgnore(result)){return undefined;}return result;};StaticReflector.prototype.getTypeMetadata=function(type){var resolvedSymbol=this.symbolResolver.resolveSymbol(type);return resolvedSymbol&&resolvedSymbol.metadata?resolvedSymbol.metadata:{__symbolic:'class'};};StaticReflector.prototype.reportError=function(error$$1,context,path){if(this.errorRecorder){this.errorRecorder(formatMetadataError(error$$1,context),context&&context.filePath||path);}else{throw error$$1;}};StaticReflector.prototype.error=function(_a,reportingContext){var message=_a.message,summary=_a.summary,advise=_a.advise,position=_a.position,context=_a.context,value=_a.value,symbol=_a.symbol,chain=_a.chain;this.reportError(metadataError(message,summary,advise,position,symbol,context,chain),reportingContext);};return StaticReflector;}();exports.StaticReflector=StaticReflector;var METADATA_ERROR='ngMetadataError';function metadataError(message,summary,advise,position,symbol,context,chain){var error$$1=syntaxError(message);error$$1[METADATA_ERROR]=true;if(advise)error$$1.advise=advise;if(position)error$$1.position=position;if(summary)error$$1.summary=summary;if(context)error$$1.context=context;if(chain)error$$1.chain=chain;if(symbol)error$$1.symbol=symbol;return error$$1;}function isMetadataError(error$$1){return!!error$$1[METADATA_ERROR];}var REFERENCE_TO_NONEXPORTED_CLASS='Reference to non-exported class';var VARIABLE_NOT_INITIALIZED='Variable not initialized';var DESTRUCTURE_NOT_SUPPORTED='Destructuring not supported';var COULD_NOT_RESOLVE_TYPE='Could not resolve type';var FUNCTION_CALL_NOT_SUPPORTED='Function call not supported';var REFERENCE_TO_LOCAL_SYMBOL='Reference to a local symbol';var LAMBDA_NOT_SUPPORTED='Lambda not supported';function expandedMessage(message,context){switch(message){case REFERENCE_TO_NONEXPORTED_CLASS:if(context&&context.className){return"References to a non-exported class are not supported in decorators but "+context.className+" was referenced.";}break;case VARIABLE_NOT_INITIALIZED:return'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';case DESTRUCTURE_NOT_SUPPORTED:return'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';case COULD_NOT_RESOLVE_TYPE:if(context&&context.typeName){return"Could not resolve type "+context.typeName;}break;case FUNCTION_CALL_NOT_SUPPORTED:if(context&&context.name){return"Function calls are not supported in decorators but '"+context.name+"' was called";}return'Function calls are not supported in decorators';case REFERENCE_TO_LOCAL_SYMBOL:if(context&&context.name){return"Reference to a local (non-exported) symbols are not supported in decorators but '"+context.name+"' was referenced";}break;case LAMBDA_NOT_SUPPORTED:return"Function expressions are not supported in decorators";}return message;}function messageAdvise(message,context){switch(message){case REFERENCE_TO_NONEXPORTED_CLASS:if(context&&context.className){return"Consider exporting '"+context.className+"'";}break;case DESTRUCTURE_NOT_SUPPORTED:return'Consider simplifying to avoid destructuring';case REFERENCE_TO_LOCAL_SYMBOL:if(context&&context.name){return"Consider exporting '"+context.name+"'";}break;case LAMBDA_NOT_SUPPORTED:return"Consider changing the function expression into an exported function";}return undefined;}function errorSummary(error$$1){if(error$$1.summary){return error$$1.summary;}switch(error$$1.message){case REFERENCE_TO_NONEXPORTED_CLASS:if(error$$1.context&&error$$1.context.className){return"references non-exported class "+error$$1.context.className;}break;case VARIABLE_NOT_INITIALIZED:return'is not initialized';case DESTRUCTURE_NOT_SUPPORTED:return'is a destructured variable';case COULD_NOT_RESOLVE_TYPE:return'could not be resolved';case FUNCTION_CALL_NOT_SUPPORTED:if(error$$1.context&&error$$1.context.name){return"calls '"+error$$1.context.name+"'";}return"calls a function";case REFERENCE_TO_LOCAL_SYMBOL:if(error$$1.context&&error$$1.context.name){return"references local variable "+error$$1.context.name;}return"references a local variable";}return'contains the error';}function mapStringMap(input,transform){if(!input)return{};var result={};Object.keys(input).forEach(function(key){var value=transform(input[key],key);if(!shouldIgnore(value)){if(HIDDEN_KEY.test(key)){Object.defineProperty(result,key,{enumerable:false,configurable:true,value:value});}else{result[key]=value;}}});return result;}function isPrimitive(o){return o===null||typeof o!=='function'&&_typeof(o)!=='object';}var BindingScope$1=/** @class */function(){function BindingScope(){}BindingScope.build=function(){var current=new Map();return{define:function define(name,value){current.set(name,value);return this;},done:function done(){return current.size>0?new PopulatedScope(current):BindingScope.empty;}};};BindingScope.missing={};BindingScope.empty={resolve:function resolve(name){return BindingScope.missing;}};return BindingScope;}();var PopulatedScope=/** @class */function(_super){(0,_tslib.__extends)(PopulatedScope,_super);function PopulatedScope(bindings){var _this=_super.call(this)||this;_this.bindings=bindings;return _this;}PopulatedScope.prototype.resolve=function(name){return this.bindings.has(name)?this.bindings.get(name):BindingScope$1.missing;};return PopulatedScope;}(BindingScope$1);function formatMetadataMessageChain(chain,advise){var expanded=expandedMessage(chain.message,chain.context);var nesting=chain.symbol?" in '"+chain.symbol.name+"'":'';var message=""+expanded+nesting;var position=chain.position;var next=chain.next?formatMetadataMessageChain(chain.next,advise):advise?{message:advise}:undefined;return{message:message,position:position,next:next};}function formatMetadataError(e,context){if(isMetadataError(e)){// Produce a formatted version of the and leaving enough information in the original error
// to recover the formatting information to eventually produce a diagnostic error message.
var position=e.position;var chain={message:"Error during template compile of '"+context.name+"'",position:position,next:{message:e.message,next:e.chain,context:e.context,symbol:e.symbol}};var advise=e.advise||messageAdvise(e.message,e.context);return formattedError(formatMetadataMessageChain(chain,advise));}return e;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AotSummaryResolver=/** @class */function(){function AotSummaryResolver(host,staticSymbolCache){this.host=host;this.staticSymbolCache=staticSymbolCache;// Note: this will only contain StaticSymbols without members!
this.summaryCache=new Map();this.loadedFilePaths=new Map();// Note: this will only contain StaticSymbols without members!
this.importAs=new Map();this.knownFileNameToModuleNames=new Map();}AotSummaryResolver.prototype.isLibraryFile=function(filePath){// Note: We need to strip the .ngfactory. file path,
// so this method also works for generated files
// (for which host.isSourceFile will always return false).
return!this.host.isSourceFile(stripGeneratedFileSuffix(filePath));};AotSummaryResolver.prototype.toSummaryFileName=function(filePath,referringSrcFileName){return this.host.toSummaryFileName(filePath,referringSrcFileName);};AotSummaryResolver.prototype.fromSummaryFileName=function(fileName,referringLibFileName){return this.host.fromSummaryFileName(fileName,referringLibFileName);};AotSummaryResolver.prototype.resolveSummary=function(staticSymbol){var rootSymbol=staticSymbol.members.length?this.staticSymbolCache.get(staticSymbol.filePath,staticSymbol.name):staticSymbol;var summary=this.summaryCache.get(rootSymbol);if(!summary){this._loadSummaryFile(staticSymbol.filePath);summary=this.summaryCache.get(staticSymbol);}return rootSymbol===staticSymbol&&summary||null;};AotSummaryResolver.prototype.getSymbolsOf=function(filePath){if(this._loadSummaryFile(filePath)){return Array.from(this.summaryCache.keys()).filter(function(symbol){return symbol.filePath===filePath;});}return null;};AotSummaryResolver.prototype.getImportAs=function(staticSymbol){staticSymbol.assertNoMembers();return this.importAs.get(staticSymbol);};/**
     * Converts a file path to a module name that can be used as an `import`.
     */AotSummaryResolver.prototype.getKnownModuleName=function(importedFilePath){return this.knownFileNameToModuleNames.get(importedFilePath)||null;};AotSummaryResolver.prototype.addSummary=function(summary){this.summaryCache.set(summary.symbol,summary);};AotSummaryResolver.prototype._loadSummaryFile=function(filePath){var _this=this;var hasSummary=this.loadedFilePaths.get(filePath);if(hasSummary!=null){return hasSummary;}var json=null;if(this.isLibraryFile(filePath)){var summaryFilePath=summaryFileName(filePath);try{json=this.host.loadSummary(summaryFilePath);}catch(e){console.error("Error loading summary file "+summaryFilePath);throw e;}}hasSummary=json!=null;this.loadedFilePaths.set(filePath,hasSummary);if(json){var _a=deserializeSummaries(this.staticSymbolCache,this,filePath,json),moduleName=_a.moduleName,summaries=_a.summaries,importAs=_a.importAs;summaries.forEach(function(summary){return _this.summaryCache.set(summary.symbol,summary);});if(moduleName){this.knownFileNameToModuleNames.set(filePath,moduleName);}importAs.forEach(function(importAs){_this.importAs.set(importAs.symbol,importAs.importAs);});}return hasSummary;};return AotSummaryResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.AotSummaryResolver=AotSummaryResolver;function createAotUrlResolver(host){return{resolve:function resolve(basePath,url){var filePath=host.resourceNameToFileName(url,basePath);if(!filePath){throw syntaxError("Couldn't resolve resource "+url+" from "+basePath);}return filePath;}};}/**
 * Creates a new AotCompiler based on options and a host.
 */function createAotCompiler(compilerHost,options,errorCollector){var translations=options.translations||'';var urlResolver=createAotUrlResolver(compilerHost);var symbolCache=new StaticSymbolCache();var summaryResolver=new AotSummaryResolver(compilerHost,symbolCache);var symbolResolver=new StaticSymbolResolver(compilerHost,symbolCache,summaryResolver);var staticReflector=new StaticReflector(summaryResolver,symbolResolver,[],[],errorCollector);var htmlParser;if(!!options.enableIvy){// Ivy handles i18n at the compiler level so we must use a regular parser
htmlParser=new HtmlParser();}else{htmlParser=new I18NHtmlParser(new HtmlParser(),translations,options.i18nFormat,options.missingTranslation,console);}var config=new CompilerConfig({defaultEncapsulation:ViewEncapsulation.Emulated,useJit:false,missingTranslation:options.missingTranslation,preserveWhitespaces:options.preserveWhitespaces,strictInjectionParameters:options.strictInjectionParameters});var normalizer=new DirectiveNormalizer({get:function get(url){return compilerHost.loadResource(url);}},urlResolver,htmlParser,config);var expressionParser=new Parser(new Lexer());var elementSchemaRegistry=new DomElementSchemaRegistry();var tmplParser=new TemplateParser(config,staticReflector,expressionParser,elementSchemaRegistry,htmlParser,console,[]);var resolver=new CompileMetadataResolver(config,htmlParser,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,console,symbolCache,staticReflector,errorCollector);// TODO(vicb): do not pass options.i18nFormat here
var viewCompiler=new ViewCompiler(staticReflector);var typeCheckCompiler=new TypeCheckCompiler(options,staticReflector);var compiler=new AotCompiler(config,options,compilerHost,staticReflector,resolver,tmplParser,new StyleCompiler(urlResolver),viewCompiler,typeCheckCompiler,new NgModuleCompiler(staticReflector),new InjectableCompiler(staticReflector,!!options.enableIvy),new TypeScriptEmitter(),summaryResolver,symbolResolver);return{compiler:compiler,reflector:staticReflector};}var SummaryResolver=/** @class */function(){function SummaryResolver(){}return SummaryResolver;}();exports.SummaryResolver=SummaryResolver;var JitSummaryResolver=/** @class */function(){function JitSummaryResolver(){this._summaries=new Map();}JitSummaryResolver.prototype.isLibraryFile=function(){return false;};JitSummaryResolver.prototype.toSummaryFileName=function(fileName){return fileName;};JitSummaryResolver.prototype.fromSummaryFileName=function(fileName){return fileName;};JitSummaryResolver.prototype.resolveSummary=function(reference){return this._summaries.get(reference)||null;};JitSummaryResolver.prototype.getSymbolsOf=function(){return[];};JitSummaryResolver.prototype.getImportAs=function(reference){return reference;};JitSummaryResolver.prototype.getKnownModuleName=function(fileName){return null;};JitSummaryResolver.prototype.addSummary=function(summary){this._summaries.set(summary.symbol,summary);};return JitSummaryResolver;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */exports.JitSummaryResolver=JitSummaryResolver;function interpretStatements(statements,reflector){var ctx=new _ExecutionContext(null,null,null,new Map());var visitor=new StatementInterpreter(reflector);visitor.visitAllStatements(statements,ctx);var result={};ctx.exports.forEach(function(exportName){result[exportName]=ctx.vars.get(exportName);});return result;}function _executeFunctionStatements(varNames,varValues,statements,ctx,visitor){var childCtx=ctx.createChildWihtLocalVars();for(var i=0;i<varNames.length;i++){childCtx.vars.set(varNames[i],varValues[i]);}var result=visitor.visitAllStatements(statements,childCtx);return result?result.value:null;}var _ExecutionContext=/** @class */function(){function _ExecutionContext(parent,instance,className,vars){this.parent=parent;this.instance=instance;this.className=className;this.vars=vars;this.exports=[];}_ExecutionContext.prototype.createChildWihtLocalVars=function(){return new _ExecutionContext(this,this.instance,this.className,new Map());};return _ExecutionContext;}();var ReturnValue=/** @class */function(){function ReturnValue(value){this.value=value;}return ReturnValue;}();function createDynamicClass(_classStmt,_ctx,_visitor){var propertyDescriptors={};_classStmt.getters.forEach(function(getter){// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[getter.name]={configurable:false,get:function get(){var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);return _executeFunctionStatements([],[],getter.body,instanceCtx,_visitor);}};});_classStmt.methods.forEach(function(method){var paramNames=method.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[method.name]={writable:false,configurable:false,value:function value(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);return _executeFunctionStatements(paramNames,args,method.body,instanceCtx,_visitor);}};});var ctorParamNames=_classStmt.constructorMethod.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
var ctor=function ctor(){var _this=this;var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);_classStmt.fields.forEach(function(field){_this[field.name]=undefined;});_executeFunctionStatements(ctorParamNames,args,_classStmt.constructorMethod.body,instanceCtx,_visitor);};var superClass=_classStmt.parent?_classStmt.parent.visitExpression(_visitor,_ctx):Object;ctor.prototype=Object.create(superClass.prototype,propertyDescriptors);return ctor;}var StatementInterpreter=/** @class */function(){function StatementInterpreter(reflector){this.reflector=reflector;}StatementInterpreter.prototype.debugAst=function(ast){return debugOutputAstAsTypeScript(ast);};StatementInterpreter.prototype.visitDeclareVarStmt=function(stmt,ctx){var initialValue=stmt.value?stmt.value.visitExpression(this,ctx):undefined;ctx.vars.set(stmt.name,initialValue);if(stmt.hasModifier(StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitWriteVarExpr=function(expr,ctx){var value=expr.value.visitExpression(this,ctx);var currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(expr.name)){currCtx.vars.set(expr.name,value);return value;}currCtx=currCtx.parent;}throw new Error("Not declared variable "+expr.name);};StatementInterpreter.prototype.visitReadVarExpr=function(ast,ctx){var varName=ast.name;if(ast.builtin!=null){switch(ast.builtin){case BuiltinVar.Super:return ctx.instance.__proto__;case BuiltinVar.This:return ctx.instance;case BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$2;break;case BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$2;break;default:throw new Error("Unknown builtin variable "+ast.builtin);}}var currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(varName)){return currCtx.vars.get(varName);}currCtx=currCtx.parent;}throw new Error("Not declared variable "+varName);};StatementInterpreter.prototype.visitWriteKeyExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var index=expr.index.visitExpression(this,ctx);var value=expr.value.visitExpression(this,ctx);receiver[index]=value;return value;};StatementInterpreter.prototype.visitWritePropExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var value=expr.value.visitExpression(this,ctx);receiver[expr.name]=value;return value;};StatementInterpreter.prototype.visitInvokeMethodExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var args=this.visitAllExpressions(expr.args,ctx);var result;if(expr.builtin!=null){switch(expr.builtin){case BuiltinMethod.ConcatArray:result=receiver.concat.apply(receiver,(0,_tslib.__spread)(args));break;case BuiltinMethod.SubscribeObservable:result=receiver.subscribe({next:args[0]});break;case BuiltinMethod.Bind:result=receiver.bind.apply(receiver,(0,_tslib.__spread)(args));break;default:throw new Error("Unknown builtin method "+expr.builtin);}}else{result=receiver[expr.name].apply(receiver,args);}return result;};StatementInterpreter.prototype.visitInvokeFunctionExpr=function(stmt,ctx){var args=this.visitAllExpressions(stmt.args,ctx);var fnExpr=stmt.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===BuiltinVar.Super){ctx.instance.constructor.prototype.constructor.apply(ctx.instance,args);return null;}else{var fn$$1=stmt.fn.visitExpression(this,ctx);return fn$$1.apply(null,args);}};StatementInterpreter.prototype.visitReturnStmt=function(stmt,ctx){return new ReturnValue(stmt.value.visitExpression(this,ctx));};StatementInterpreter.prototype.visitDeclareClassStmt=function(stmt,ctx){var clazz=createDynamicClass(stmt,ctx,this);ctx.vars.set(stmt.name,clazz);if(stmt.hasModifier(StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitExpressionStmt=function(stmt,ctx){return stmt.expr.visitExpression(this,ctx);};StatementInterpreter.prototype.visitIfStmt=function(stmt,ctx){var condition=stmt.condition.visitExpression(this,ctx);if(condition){return this.visitAllStatements(stmt.trueCase,ctx);}else if(stmt.falseCase!=null){return this.visitAllStatements(stmt.falseCase,ctx);}return null;};StatementInterpreter.prototype.visitTryCatchStmt=function(stmt,ctx){try{return this.visitAllStatements(stmt.bodyStmts,ctx);}catch(e){var childCtx=ctx.createChildWihtLocalVars();childCtx.vars.set(CATCH_ERROR_VAR$2,e);childCtx.vars.set(CATCH_STACK_VAR$2,e.stack);return this.visitAllStatements(stmt.catchStmts,childCtx);}};StatementInterpreter.prototype.visitThrowStmt=function(stmt,ctx){throw stmt.error.visitExpression(this,ctx);};StatementInterpreter.prototype.visitCommentStmt=function(stmt,context){return null;};StatementInterpreter.prototype.visitJSDocCommentStmt=function(stmt,context){return null;};StatementInterpreter.prototype.visitInstantiateExpr=function(ast,ctx){var args=this.visitAllExpressions(ast.args,ctx);var clazz=ast.classExpr.visitExpression(this,ctx);return new(clazz.bind.apply(clazz,(0,_tslib.__spread)([void 0],args)))();};StatementInterpreter.prototype.visitLiteralExpr=function(ast,ctx){return ast.value;};StatementInterpreter.prototype.visitExternalExpr=function(ast,ctx){return this.reflector.resolveExternalReference(ast.value);};StatementInterpreter.prototype.visitConditionalExpr=function(ast,ctx){if(ast.condition.visitExpression(this,ctx)){return ast.trueCase.visitExpression(this,ctx);}else if(ast.falseCase!=null){return ast.falseCase.visitExpression(this,ctx);}return null;};StatementInterpreter.prototype.visitNotExpr=function(ast,ctx){return!ast.condition.visitExpression(this,ctx);};StatementInterpreter.prototype.visitAssertNotNullExpr=function(ast,ctx){return ast.condition.visitExpression(this,ctx);};StatementInterpreter.prototype.visitCastExpr=function(ast,ctx){return ast.value.visitExpression(this,ctx);};StatementInterpreter.prototype.visitFunctionExpr=function(ast,ctx){var paramNames=ast.params.map(function(param){return param.name;});return _declareFn(paramNames,ast.statements,ctx,this);};StatementInterpreter.prototype.visitDeclareFunctionStmt=function(stmt,ctx){var paramNames=stmt.params.map(function(param){return param.name;});ctx.vars.set(stmt.name,_declareFn(paramNames,stmt.statements,ctx,this));if(stmt.hasModifier(StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitBinaryOperatorExpr=function(ast,ctx){var _this=this;var lhs=function lhs(){return ast.lhs.visitExpression(_this,ctx);};var rhs=function rhs(){return ast.rhs.visitExpression(_this,ctx);};switch(ast.operator){case BinaryOperator.Equals:return lhs()==rhs();case BinaryOperator.Identical:return lhs()===rhs();case BinaryOperator.NotEquals:return lhs()!=rhs();case BinaryOperator.NotIdentical:return lhs()!==rhs();case BinaryOperator.And:return lhs()&&rhs();case BinaryOperator.Or:return lhs()||rhs();case BinaryOperator.Plus:return lhs()+rhs();case BinaryOperator.Minus:return lhs()-rhs();case BinaryOperator.Divide:return lhs()/rhs();case BinaryOperator.Multiply:return lhs()*rhs();case BinaryOperator.Modulo:return lhs()%rhs();case BinaryOperator.Lower:return lhs()<rhs();case BinaryOperator.LowerEquals:return lhs()<=rhs();case BinaryOperator.Bigger:return lhs()>rhs();case BinaryOperator.BiggerEquals:return lhs()>=rhs();default:throw new Error("Unknown operator "+ast.operator);}};StatementInterpreter.prototype.visitReadPropExpr=function(ast,ctx){var result;var receiver=ast.receiver.visitExpression(this,ctx);result=receiver[ast.name];return result;};StatementInterpreter.prototype.visitReadKeyExpr=function(ast,ctx){var receiver=ast.receiver.visitExpression(this,ctx);var prop=ast.index.visitExpression(this,ctx);return receiver[prop];};StatementInterpreter.prototype.visitLiteralArrayExpr=function(ast,ctx){return this.visitAllExpressions(ast.entries,ctx);};StatementInterpreter.prototype.visitLiteralMapExpr=function(ast,ctx){var _this=this;var result={};ast.entries.forEach(function(entry){return result[entry.key]=entry.value.visitExpression(_this,ctx);});return result;};StatementInterpreter.prototype.visitCommaExpr=function(ast,context){var values=this.visitAllExpressions(ast.parts,context);return values[values.length-1];};StatementInterpreter.prototype.visitAllExpressions=function(expressions,ctx){var _this=this;return expressions.map(function(expr){return expr.visitExpression(_this,ctx);});};StatementInterpreter.prototype.visitAllStatements=function(statements,ctx){for(var i=0;i<statements.length;i++){var stmt=statements[i];var val=stmt.visitStatement(this,ctx);if(val instanceof ReturnValue){return val;}}return null;};return StatementInterpreter;}();function _declareFn(varNames,statements,ctx,visitor){return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return _executeFunctionStatements(varNames,args,statements,ctx,visitor);};}var CATCH_ERROR_VAR$2='error';var CATCH_STACK_VAR$2='stack';/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AbstractJsEmitterVisitor=/** @class */function(_super){(0,_tslib.__extends)(AbstractJsEmitterVisitor,_super);function AbstractJsEmitterVisitor(){return _super.call(this,false)||this;}AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){var _this=this;ctx.pushClass(stmt);this._visitClassConstructor(stmt,ctx);if(stmt.parent!=null){ctx.print(stmt,stmt.name+".prototype = Object.create(");stmt.parent.visitExpression(this,ctx);ctx.println(stmt,".prototype);");}stmt.getters.forEach(function(getter){return _this._visitClassGetter(stmt,getter,ctx);});stmt.methods.forEach(function(method){return _this._visitClassMethod(stmt,method,ctx);});ctx.popClass();return null;};AbstractJsEmitterVisitor.prototype._visitClassConstructor=function(stmt,ctx){ctx.print(stmt,"function "+stmt.name+"(");if(stmt.constructorMethod!=null){this._visitParams(stmt.constructorMethod.params,ctx);}ctx.println(stmt,") {");ctx.incIndent();if(stmt.constructorMethod!=null){if(stmt.constructorMethod.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(stmt.constructorMethod.body,ctx);}}ctx.decIndent();ctx.println(stmt,"}");};AbstractJsEmitterVisitor.prototype._visitClassGetter=function(stmt,getter,ctx){ctx.println(stmt,"Object.defineProperty("+stmt.name+".prototype, '"+getter.name+"', { get: function() {");ctx.incIndent();if(getter.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(getter.body,ctx);}ctx.decIndent();ctx.println(stmt,"}});");};AbstractJsEmitterVisitor.prototype._visitClassMethod=function(stmt,method,ctx){ctx.print(stmt,stmt.name+".prototype."+method.name+" = function(");this._visitParams(method.params,ctx);ctx.println(stmt,") {");ctx.incIndent();if(method.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(method.body,ctx);}ctx.decIndent();ctx.println(stmt,"};");};AbstractJsEmitterVisitor.prototype.visitReadVarExpr=function(ast,ctx){if(ast.builtin===BuiltinVar.This){ctx.print(ast,'self');}else if(ast.builtin===BuiltinVar.Super){throw new Error("'super' needs to be handled at a parent ast node, not at the variable level!");}else{_super.prototype.visitReadVarExpr.call(this,ast,ctx);}return null;};AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){ctx.print(stmt,"var "+stmt.name);if(stmt.value){ctx.print(stmt,' = ');stmt.value.visitExpression(this,ctx);}ctx.println(stmt,";");return null;};AbstractJsEmitterVisitor.prototype.visitCastExpr=function(ast,ctx){ast.value.visitExpression(this,ctx);return null;};AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr=function(expr,ctx){var fnExpr=expr.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===BuiltinVar.Super){ctx.currentClass.parent.visitExpression(this,ctx);ctx.print(expr,".call(this");if(expr.args.length>0){ctx.print(expr,", ");this.visitAllExpressions(expr.args,ctx,',');}ctx.print(expr,")");}else{_super.prototype.visitInvokeFunctionExpr.call(this,expr,ctx);}return null;};AbstractJsEmitterVisitor.prototype.visitFunctionExpr=function(ast,ctx){ctx.print(ast,"function"+(ast.name?' '+ast.name:'')+"(");this._visitParams(ast.params,ctx);ctx.println(ast,") {");ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,"}");return null;};AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){ctx.print(stmt,"function "+stmt.name+"(");this._visitParams(stmt.params,ctx);ctx.println(stmt,") {");ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};AbstractJsEmitterVisitor.prototype.visitTryCatchStmt=function(stmt,ctx){ctx.println(stmt,"try {");ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,"} catch ("+CATCH_ERROR_VAR$1.name+") {");ctx.incIndent();var catchStmts=[CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null,[StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};AbstractJsEmitterVisitor.prototype._visitParams=function(params,ctx){this.visitAllObjects(function(param){return ctx.print(null,param.name);},params,ctx,',');};AbstractJsEmitterVisitor.prototype.getBuiltinMethodName=function(method){var name;switch(method){case BuiltinMethod.ConcatArray:name='concat';break;case BuiltinMethod.SubscribeObservable:name='subscribe';break;case BuiltinMethod.Bind:name='bind';break;default:throw new Error("Unknown builtin method: "+method);}return name;};return AbstractJsEmitterVisitor;}(AbstractEmitterVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */function evalExpression(sourceUrl,ctx,vars,createSourceMap){var fnBody=ctx.toSource()+"\n//# sourceURL="+sourceUrl;var fnArgNames=[];var fnArgValues=[];for(var argName in vars){fnArgNames.push(argName);fnArgValues.push(vars[argName]);}if(createSourceMap){// using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise
// E.g. ```
// function anonymous(a,b,c
// /**/) { ... }```
// We don't want to hard code this fact, so we auto detect it via an empty function first.
var emptyFn=new(Function.bind.apply(Function,(0,_tslib.__spread)([void 0],fnArgNames.concat('return null;'))))().toString();var headerLines=emptyFn.slice(0,emptyFn.indexOf('return null;')).split('\n').length-1;fnBody+="\n"+ctx.toSourceMapGenerator(sourceUrl,headerLines).toJsComment();}return new(Function.bind.apply(Function,(0,_tslib.__spread)([void 0],fnArgNames.concat(fnBody))))().apply(void 0,(0,_tslib.__spread)(fnArgValues));}function jitStatements(sourceUrl,statements,reflector,createSourceMaps){var converter=new JitEmitterVisitor(reflector);var ctx=EmitterVisitorContext.createRoot();converter.visitAllStatements(statements,ctx);converter.createReturnStmt(ctx);return evalExpression(sourceUrl,ctx,converter.getArgs(),createSourceMaps);}var JitEmitterVisitor=/** @class */function(_super){(0,_tslib.__extends)(JitEmitterVisitor,_super);function JitEmitterVisitor(reflector){var _this=_super.call(this)||this;_this.reflector=reflector;_this._evalArgNames=[];_this._evalArgValues=[];_this._evalExportedVars=[];return _this;}JitEmitterVisitor.prototype.createReturnStmt=function(ctx){var stmt=new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function(resultVar){return new LiteralMapEntry(resultVar,variable(resultVar),false);})));stmt.visitStatement(this,ctx);};JitEmitterVisitor.prototype.getArgs=function(){var result={};for(var i=0;i<this._evalArgNames.length;i++){result[this._evalArgNames[i]]=this._evalArgValues[i];}return result;};JitEmitterVisitor.prototype.visitExternalExpr=function(ast,ctx){var value=this.reflector.resolveExternalReference(ast.value);var id=this._evalArgValues.indexOf(value);if(id===-1){id=this._evalArgValues.length;this._evalArgValues.push(value);var name_1=identifierName({reference:value})||'val';this._evalArgNames.push("jit_"+name_1+"_"+id);}ctx.print(ast,this._evalArgNames[id]);return null;};JitEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareVarStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareFunctionStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){if(stmt.hasModifier(StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareClassStmt.call(this,stmt,ctx);};return JitEmitterVisitor;}(AbstractJsEmitterVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An internal module of the Angular compiler that begins with component types,
 * extracts templates, and eventually produces a compiled version of the component
 * ready for linking into an application.
 *
 * @security  When compiling templates at runtime, you must ensure that the entire template comes
 * from a trusted source. Attacker-controlled data introduced by a template could expose your
 * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).
 */var JitCompiler=/** @class */function(){function JitCompiler(_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_ngModuleCompiler,_summaryResolver,_reflector,_compilerConfig,_console,getExtraNgModuleProviders){this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._summaryResolver=_summaryResolver;this._reflector=_reflector;this._compilerConfig=_compilerConfig;this._console=_console;this.getExtraNgModuleProviders=getExtraNgModuleProviders;this._compiledTemplateCache=new Map();this._compiledHostTemplateCache=new Map();this._compiledDirectiveWrapperCache=new Map();this._compiledNgModuleCache=new Map();this._sharedStylesheetCount=0;this._addedAotSummaries=new Set();}JitCompiler.prototype.compileModuleSync=function(moduleType){return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType,true));};JitCompiler.prototype.compileModuleAsync=function(moduleType){return Promise.resolve(this._compileModuleAndComponents(moduleType,false));};JitCompiler.prototype.compileModuleAndAllComponentsSync=function(moduleType){return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType,true));};JitCompiler.prototype.compileModuleAndAllComponentsAsync=function(moduleType){return Promise.resolve(this._compileModuleAndAllComponents(moduleType,false));};JitCompiler.prototype.getComponentFactory=function(component){var summary=this._metadataResolver.getDirectiveSummary(component);return summary.componentFactory;};JitCompiler.prototype.loadAotSummaries=function(summaries){this.clearCache();this._addAotSummaries(summaries);};JitCompiler.prototype._addAotSummaries=function(fn$$1){if(this._addedAotSummaries.has(fn$$1)){return;}this._addedAotSummaries.add(fn$$1);var summaries=fn$$1();for(var i=0;i<summaries.length;i++){var entry=summaries[i];if(typeof entry==='function'){this._addAotSummaries(entry);}else{var summary=entry;this._summaryResolver.addSummary({symbol:summary.type.reference,metadata:null,type:summary});}}};JitCompiler.prototype.hasAotSummary=function(ref){return!!this._summaryResolver.resolveSummary(ref);};JitCompiler.prototype._filterJitIdentifiers=function(ids){var _this=this;return ids.map(function(mod){return mod.reference;}).filter(function(ref){return!_this.hasAotSummary(ref);});};JitCompiler.prototype._compileModuleAndComponents=function(moduleType,isSync){var _this=this;return SyncAsync.then(this._loadModules(moduleType,isSync),function(){_this._compileComponents(moduleType,null);return _this._compileModule(moduleType);});};JitCompiler.prototype._compileModuleAndAllComponents=function(moduleType,isSync){var _this=this;return SyncAsync.then(this._loadModules(moduleType,isSync),function(){var componentFactories=[];_this._compileComponents(moduleType,componentFactories);return{ngModuleFactory:_this._compileModule(moduleType),componentFactories:componentFactories};});};JitCompiler.prototype._loadModules=function(mainModule,isSync){var _this=this;var loading=[];var mainNgModule=this._metadataResolver.getNgModuleMetadata(mainModule);// Note: for runtime compilation, we want to transitively compile all modules,
// so we also need to load the declared directives / pipes for all nested modules.
this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function(nestedNgModule){// getNgModuleMetadata only returns null if the value passed in is not an NgModule
var moduleMeta=_this._metadataResolver.getNgModuleMetadata(nestedNgModule);_this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function(ref){var promise=_this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference,ref,isSync);if(promise){loading.push(promise);}});_this._filterJitIdentifiers(moduleMeta.declaredPipes).forEach(function(ref){return _this._metadataResolver.getOrLoadPipeMetadata(ref);});});return SyncAsync.all(loading);};JitCompiler.prototype._compileModule=function(moduleType){var ngModuleFactory=this._compiledNgModuleCache.get(moduleType);if(!ngModuleFactory){var moduleMeta=this._metadataResolver.getNgModuleMetadata(moduleType);// Always provide a bound Compiler
var extraProviders=this.getExtraNgModuleProviders(moduleMeta.type.reference);var outputCtx=createOutputContext();var compileResult=this._ngModuleCompiler.compile(outputCtx,moduleMeta,extraProviders);ngModuleFactory=this._interpretOrJit(ngModuleJitUrl(moduleMeta),outputCtx.statements)[compileResult.ngModuleFactoryVar];this._compiledNgModuleCache.set(moduleMeta.type.reference,ngModuleFactory);}return ngModuleFactory;};/**
     * @internal
     */JitCompiler.prototype._compileComponents=function(mainModule,allComponentFactories){var _this=this;var ngModule=this._metadataResolver.getNgModuleMetadata(mainModule);var moduleByJitDirective=new Map();var templates=new Set();var transJitModules=this._filterJitIdentifiers(ngModule.transitiveModule.modules);transJitModules.forEach(function(localMod){var localModuleMeta=_this._metadataResolver.getNgModuleMetadata(localMod);_this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function(dirRef){moduleByJitDirective.set(dirRef,localModuleMeta);var dirMeta=_this._metadataResolver.getDirectiveMetadata(dirRef);if(dirMeta.isComponent){templates.add(_this._createCompiledTemplate(dirMeta,localModuleMeta));if(allComponentFactories){var template=_this._createCompiledHostTemplate(dirMeta.type.reference,localModuleMeta);templates.add(template);allComponentFactories.push(dirMeta.componentFactory);}}});});transJitModules.forEach(function(localMod){var localModuleMeta=_this._metadataResolver.getNgModuleMetadata(localMod);_this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function(dirRef){var dirMeta=_this._metadataResolver.getDirectiveMetadata(dirRef);if(dirMeta.isComponent){dirMeta.entryComponents.forEach(function(entryComponentType){var moduleMeta=moduleByJitDirective.get(entryComponentType.componentType);templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));});}});localModuleMeta.entryComponents.forEach(function(entryComponentType){if(!_this.hasAotSummary(entryComponentType.componentType.reference)){var moduleMeta=moduleByJitDirective.get(entryComponentType.componentType);templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));}});});templates.forEach(function(template){return _this._compileTemplate(template);});};JitCompiler.prototype.clearCacheFor=function(type){this._compiledNgModuleCache.delete(type);this._metadataResolver.clearCacheFor(type);this._compiledHostTemplateCache.delete(type);var compiledTemplate=this._compiledTemplateCache.get(type);if(compiledTemplate){this._compiledTemplateCache.delete(type);}};JitCompiler.prototype.clearCache=function(){// Note: don't clear the _addedAotSummaries, as they don't change!
this._metadataResolver.clearCache();this._compiledTemplateCache.clear();this._compiledHostTemplateCache.clear();this._compiledNgModuleCache.clear();};JitCompiler.prototype._createCompiledHostTemplate=function(compType,ngModule){if(!ngModule){throw new Error("Component "+stringify(compType)+" is not part of any NgModule or the module has not been imported into your module.");}var compiledTemplate=this._compiledHostTemplateCache.get(compType);if(!compiledTemplate){var compMeta=this._metadataResolver.getDirectiveMetadata(compType);assertComponent(compMeta);var hostMeta=this._metadataResolver.getHostComponentMetadata(compMeta,compMeta.componentFactory.viewDefFactory);compiledTemplate=new CompiledTemplate(true,compMeta.type,hostMeta,ngModule,[compMeta.type]);this._compiledHostTemplateCache.set(compType,compiledTemplate);}return compiledTemplate;};JitCompiler.prototype._createCompiledTemplate=function(compMeta,ngModule){var compiledTemplate=this._compiledTemplateCache.get(compMeta.type.reference);if(!compiledTemplate){assertComponent(compMeta);compiledTemplate=new CompiledTemplate(false,compMeta.type,compMeta,ngModule,ngModule.transitiveModule.directives);this._compiledTemplateCache.set(compMeta.type.reference,compiledTemplate);}return compiledTemplate;};JitCompiler.prototype._compileTemplate=function(template){var _this=this;if(template.isCompiled){return;}var compMeta=template.compMeta;var externalStylesheetsByModuleUrl=new Map();var outputContext=createOutputContext();var componentStylesheet=this._styleCompiler.compileComponent(outputContext,compMeta);compMeta.template.externalStylesheets.forEach(function(stylesheetMeta){var compiledStylesheet=_this._styleCompiler.compileStyles(createOutputContext(),compMeta,stylesheetMeta);externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl,compiledStylesheet);});this._resolveStylesCompileResult(componentStylesheet,externalStylesheetsByModuleUrl);var pipes=template.ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});var _a=this._parseTemplate(compMeta,template.ngModule,template.directives),parsedTemplate=_a.template,usedPipes=_a.pipes;var compileResult=this._viewCompiler.compileComponent(outputContext,compMeta,parsedTemplate,variable(componentStylesheet.stylesVar),usedPipes);var evalResult=this._interpretOrJit(templateJitUrl(template.ngModule.type,template.compMeta),outputContext.statements);var viewClass=evalResult[compileResult.viewClassVar];var rendererType=evalResult[compileResult.rendererTypeVar];template.compiled(viewClass,rendererType);};JitCompiler.prototype._parseTemplate=function(compMeta,ngModule,directiveIdentifiers){var _this=this;// Note: ! is ok here as components always have a template.
var preserveWhitespaces=compMeta.template.preserveWhitespaces;var directives=directiveIdentifiers.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});var pipes=ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});return this._templateParser.parse(compMeta,compMeta.template.htmlAst,directives,pipes,ngModule.schemas,templateSourceUrl(ngModule.type,compMeta,compMeta.template),preserveWhitespaces);};JitCompiler.prototype._resolveStylesCompileResult=function(result,externalStylesheetsByModuleUrl){var _this=this;result.dependencies.forEach(function(dep,i){var nestedCompileResult=externalStylesheetsByModuleUrl.get(dep.moduleUrl);var nestedStylesArr=_this._resolveAndEvalStylesCompileResult(nestedCompileResult,externalStylesheetsByModuleUrl);dep.setValue(nestedStylesArr);});};JitCompiler.prototype._resolveAndEvalStylesCompileResult=function(result,externalStylesheetsByModuleUrl){this._resolveStylesCompileResult(result,externalStylesheetsByModuleUrl);return this._interpretOrJit(sharedStylesheetJitUrl(result.meta,this._sharedStylesheetCount++),result.outputCtx.statements)[result.stylesVar];};JitCompiler.prototype._interpretOrJit=function(sourceUrl,statements){if(!this._compilerConfig.useJit){return interpretStatements(statements,this._reflector);}else{return jitStatements(sourceUrl,statements,this._reflector,this._compilerConfig.jitDevMode);}};return JitCompiler;}();exports.JitCompiler=JitCompiler;var CompiledTemplate=/** @class */function(){function CompiledTemplate(isHost,compType,compMeta,ngModule,directives){this.isHost=isHost;this.compType=compType;this.compMeta=compMeta;this.ngModule=ngModule;this.directives=directives;this._viewClass=null;this.isCompiled=false;}CompiledTemplate.prototype.compiled=function(viewClass,rendererType){this._viewClass=viewClass;this.compMeta.componentViewType.setDelegate(viewClass);for(var prop in rendererType){this.compMeta.rendererType[prop]=rendererType[prop];}this.isCompiled=true;};return CompiledTemplate;}();function assertComponent(meta){if(!meta.isComponent){throw new Error("Could not compile '"+identifierName(meta.type)+"' because it is not a component.");}}function createOutputContext(){var importExpr$$1=function importExpr$$1(symbol){return importExpr({name:identifierName(symbol),moduleName:null,runtime:symbol});};return{statements:[],genFilePath:'',importExpr:importExpr$$1,constantPool:new ConstantPool()};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Provides access to reflection data about symbols that the compiler needs.
 */var CompileReflector=/** @class */function(){function CompileReflector(){}return CompileReflector;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Create a {@link UrlResolver} with no package prefix.
 */exports.CompileReflector=CompileReflector;function createUrlResolverWithoutPackagePrefix(){return new UrlResolver();}function createOfflineCompileUrlResolver(){return new UrlResolver('.');}var UrlResolver=/** @class */function(){function UrlResolverImpl(_packagePrefix){if(_packagePrefix===void 0){_packagePrefix=null;}this._packagePrefix=_packagePrefix;}/**
     * Resolves the `url` given the `baseUrl`:
     * - when the `url` is null, the `baseUrl` is returned,
     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of
     * `baseUrl` and `url`,
     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is
     * returned as is (ignoring the `baseUrl`)
     */UrlResolverImpl.prototype.resolve=function(baseUrl,url){var resolvedUrl=url;if(baseUrl!=null&&baseUrl.length>0){resolvedUrl=_resolveUrl(baseUrl,resolvedUrl);}var resolvedParts=_split(resolvedUrl);var prefix=this._packagePrefix;if(prefix!=null&&resolvedParts!=null&&resolvedParts[_ComponentIndex.Scheme]=='package'){var path=resolvedParts[_ComponentIndex.Path];prefix=prefix.replace(/\/+$/,'');path=path.replace(/^\/+/,'');return prefix+"/"+path;}return resolvedUrl;};return UrlResolverImpl;}();/**
 * Extract the scheme of a URL.
 */exports.UrlResolver=UrlResolver;function getUrlScheme(url){var match=_split(url);return match&&match[_ComponentIndex.Scheme]||'';}// The code below is adapted from Traceur:
// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js
/**
 * Builds a URI string from already-encoded parts.
 *
 * No encoding is performed.  Any component may be omitted as either null or
 * undefined.
 *
 * @param opt_scheme The scheme such as 'http'.
 * @param opt_userInfo The user name before the '@'.
 * @param opt_domain The domain such as 'www.google.com', already
 *     URI-encoded.
 * @param opt_port The port number.
 * @param opt_path The path, already URI-encoded.  If it is not
 *     empty, it must begin with a slash.
 * @param opt_queryData The URI-encoded query data.
 * @param opt_fragment The URI-encoded fragment identifier.
 * @return The fully combined URI.
 */function _buildFromEncodedParts(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_queryData,opt_fragment){var out=[];if(opt_scheme!=null){out.push(opt_scheme+':');}if(opt_domain!=null){out.push('//');if(opt_userInfo!=null){out.push(opt_userInfo+'@');}out.push(opt_domain);if(opt_port!=null){out.push(':'+opt_port);}}if(opt_path!=null){out.push(opt_path);}if(opt_queryData!=null){out.push('?'+opt_queryData);}if(opt_fragment!=null){out.push('#'+opt_fragment);}return out.join('');}/**
 * A regular expression for breaking a URI into its component parts.
 *
 * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says
 * As the "first-match-wins" algorithm is identical to the "greedy"
 * disambiguation method used by POSIX regular expressions, it is natural and
 * commonplace to use a regular expression for parsing the potential five
 * components of a URI reference.
 *
 * The following line is the regular expression for breaking-down a
 * well-formed URI reference into its components.
 *
 * <pre>
 * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
 *  12            3  4          5       6  7        8 9
 * </pre>
 *
 * The numbers in the second line above are only to assist readability; they
 * indicate the reference points for each subexpression (i.e., each paired
 * parenthesis). We refer to the value matched for subexpression <n> as $<n>.
 * For example, matching the above expression to
 * <pre>
 *     http://www.ics.uci.edu/pub/ietf/uri/#Related
 * </pre>
 * results in the following subexpression matches:
 * <pre>
 *    $1 = http:
 *    $2 = http
 *    $3 = //www.ics.uci.edu
 *    $4 = www.ics.uci.edu
 *    $5 = /pub/ietf/uri/
 *    $6 = <undefined>
 *    $7 = <undefined>
 *    $8 = #Related
 *    $9 = Related
 * </pre>
 * where <undefined> indicates that the component is not present, as is the
 * case for the query component in the above example. Therefore, we can
 * determine the value of the five components as
 * <pre>
 *    scheme    = $2
 *    authority = $4
 *    path      = $5
 *    query     = $7
 *    fragment  = $9
 * </pre>
 *
 * The regular expression has been modified slightly to expose the
 * userInfo, domain, and port separately from the authority.
 * The modified version yields
 * <pre>
 *    $1 = http              scheme
 *    $2 = <undefined>       userInfo -\
 *    $3 = www.ics.uci.edu   domain     | authority
 *    $4 = <undefined>       port     -/
 *    $5 = /pub/ietf/uri/    path
 *    $6 = <undefined>       query without ?
 *    $7 = Related           fragment without #
 * </pre>
 * @internal
 */var _splitRe=new RegExp('^'+'(?:'+'([^:/?#.]+)'+// scheme - ignore special characters
// used by other URL parts such as :,
// ?, /, #, and .
':)?'+'(?://'+'(?:([^/?#]*)@)?'+// userInfo
"([\\w\\d\\-\\u0100-\\uffff.%]*)"+// domain - restrict to letters,
// digits, dashes, dots, percent
// escapes, and unicode characters.
'(?::([0-9]+))?'+// port
')?'+'([^?#]+)?'+// path
'(?:\\?([^#]*))?'+// query
'(?:#(.*))?'+// fragment
'$');/**
 * The index of each URI component in the return value of goog.uri.utils.split.
 * @enum {number}
 */var _ComponentIndex;(function(_ComponentIndex){_ComponentIndex[_ComponentIndex["Scheme"]=1]="Scheme";_ComponentIndex[_ComponentIndex["UserInfo"]=2]="UserInfo";_ComponentIndex[_ComponentIndex["Domain"]=3]="Domain";_ComponentIndex[_ComponentIndex["Port"]=4]="Port";_ComponentIndex[_ComponentIndex["Path"]=5]="Path";_ComponentIndex[_ComponentIndex["QueryData"]=6]="QueryData";_ComponentIndex[_ComponentIndex["Fragment"]=7]="Fragment";})(_ComponentIndex||(_ComponentIndex={}));/**
 * Splits a URI into its component parts.
 *
 * Each component can be accessed via the component indices; for example:
 * <pre>
 * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];
 * </pre>
 *
 * @param uri The URI string to examine.
 * @return Each component still URI-encoded.
 *     Each component that is present will contain the encoded value, whereas
 *     components that are not present will be undefined or empty, depending
 *     on the browser's regular expression implementation.  Never null, since
 *     arbitrary strings may still look like path names.
 */function _split(uri){return uri.match(_splitRe);}/**
  * Removes dot segments in given path component, as described in
  * RFC 3986, section 5.2.4.
  *
  * @param path A non-empty path component.
  * @return Path component with removed dot segments.
  */function _removeDotSegments(path){if(path=='/')return'/';var leadingSlash=path[0]=='/'?'/':'';var trailingSlash=path[path.length-1]==='/'?'/':'';var segments=path.split('/');var out=[];var up=0;for(var pos=0;pos<segments.length;pos++){var segment=segments[pos];switch(segment){case'':case'.':break;case'..':if(out.length>0){out.pop();}else{up++;}break;default:out.push(segment);}}if(leadingSlash==''){while(up-->0){out.unshift('..');}if(out.length===0)out.push('.');}return leadingSlash+out.join('/')+trailingSlash;}/**
 * Takes an array of the parts from split and canonicalizes the path part
 * and then joins all the parts.
 */function _joinAndCanonicalizePath(parts){var path=parts[_ComponentIndex.Path];path=path==null?'':_removeDotSegments(path);parts[_ComponentIndex.Path]=path;return _buildFromEncodedParts(parts[_ComponentIndex.Scheme],parts[_ComponentIndex.UserInfo],parts[_ComponentIndex.Domain],parts[_ComponentIndex.Port],path,parts[_ComponentIndex.QueryData],parts[_ComponentIndex.Fragment]);}/**
 * Resolves a URL.
 * @param base The URL acting as the base URL.
 * @param to The URL to resolve.
 */function _resolveUrl(base,url){var parts=_split(encodeURI(url));var baseParts=_split(base);if(parts[_ComponentIndex.Scheme]!=null){return _joinAndCanonicalizePath(parts);}else{parts[_ComponentIndex.Scheme]=baseParts[_ComponentIndex.Scheme];}for(var i=_ComponentIndex.Scheme;i<=_ComponentIndex.Port;i++){if(parts[i]==null){parts[i]=baseParts[i];}}if(parts[_ComponentIndex.Path][0]=='/'){return _joinAndCanonicalizePath(parts);}var path=baseParts[_ComponentIndex.Path];if(path==null)path='/';var index=path.lastIndexOf('/');path=path.substring(0,index+1)+parts[_ComponentIndex.Path];parts[_ComponentIndex.Path]=path;return _joinAndCanonicalizePath(parts);}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * An interface for retrieving documents by URL that the compiler uses
 * to load templates.
 */var ResourceLoader=/** @class */function(){function ResourceLoader(){}ResourceLoader.prototype.get=function(url){return'';};return ResourceLoader;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * Extract i18n messages from source code
 */exports.ResourceLoader=ResourceLoader;var Extractor=/** @class */function(){function Extractor(host,staticSymbolResolver,messageBundle,metadataResolver){this.host=host;this.staticSymbolResolver=staticSymbolResolver;this.messageBundle=messageBundle;this.metadataResolver=metadataResolver;}Extractor.prototype.extract=function(rootFiles){var _this=this;var _a=analyzeAndValidateNgModules(rootFiles,this.host,this.staticSymbolResolver,this.metadataResolver),files=_a.files,ngModules=_a.ngModules;return Promise.all(ngModules.map(function(ngModule){return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){var errors=[];files.forEach(function(file){var compMetas=[];file.directives.forEach(function(directiveType){var dirMeta=_this.metadataResolver.getDirectiveMetadata(directiveType);if(dirMeta&&dirMeta.isComponent){compMetas.push(dirMeta);}});compMetas.forEach(function(compMeta){var html=compMeta.template.template;var interpolationConfig=InterpolationConfig.fromArray(compMeta.template.interpolation);errors.push.apply(errors,(0,_tslib.__spread)(_this.messageBundle.updateFromTemplate(html,file.fileName,interpolationConfig)));});});if(errors.length){throw new Error(errors.map(function(e){return e.toString();}).join('\n'));}return _this.messageBundle;});};Extractor.create=function(host,locale){var htmlParser=new HtmlParser();var urlResolver=createAotUrlResolver(host);var symbolCache=new StaticSymbolCache();var summaryResolver=new AotSummaryResolver(host,symbolCache);var staticSymbolResolver=new StaticSymbolResolver(host,symbolCache,summaryResolver);var staticReflector=new StaticReflector(summaryResolver,staticSymbolResolver);var config=new CompilerConfig({defaultEncapsulation:ViewEncapsulation.Emulated,useJit:false});var normalizer=new DirectiveNormalizer({get:function get(url){return host.loadResource(url);}},urlResolver,htmlParser,config);var elementSchemaRegistry=new DomElementSchemaRegistry();var resolver=new CompileMetadataResolver(config,htmlParser,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,console,symbolCache,staticReflector);// TODO(vicb): implicit tags & attributes
var messageBundle=new MessageBundle(htmlParser,[],{},locale);var extractor=new Extractor(host,staticSymbolResolver,messageBundle,resolver);return{extractor:extractor,staticReflector:staticReflector};};return Extractor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @module
 * @description
 * Entry point for all APIs of the compiler package.
 *
 * <div class="callout is-critical">
 *   <header>Unstable APIs</header>
 *   <p>
 *     All compiler apis are currently considered experimental and private!
 *   </p>
 *   <p>
 *     We expect the APIs in this package to keep on changing. Do not rely on them.
 *   </p>
 * </div>
 */ // This file only reexports content of the `src` folder. Keep it that way.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ /**
 * @module
 * @description
 * Entry point for all public APIs of this package.
 */ // This file only reexports content of the `src` folder. Keep it that way.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // This file is not used to build this module. It is only used during editing
// by the TypeScript language service and during build for verification. `ngc`
// replaces this file with production index.ts when it rewrites private symbol
// names.
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */ // This file is not used to build this module. It is only used during editing
// by the TypeScript language service and during build for verification. `ngc`
// replaces this file with production index.ts when it rewrites private symbol
// names.
exports.Extractor=Extractor;

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Hot Module Replacement

function bootloader(main) {
  if (document.readyState === 'complete') {
    main();
  } else {
    document.addEventListener('DOMContentLoaded', main);
  }
}

exports.bootloader = bootloader; // create new elements

function createNewHosts(cmps) {
  var components = cmps.map(function (componentNode) {
    var newNode = document.createElement(componentNode.tagName); // display none

    var currentDisplay = newNode.style.display;
    newNode.style.display = 'none';
    var parentNode = componentNode.parentNode;
    parentNode.insertBefore(newNode, componentNode);
    return {
      currentDisplay: currentDisplay,
      newNode: newNode
    };
  });
  return function () {
    components.forEach(function (cmp) {
      cmp.newNode.style.display = cmp.currentDisplay;
      cmp.newNode = null;
      cmp.currentDisplay = null;
    });
  };
}

exports.createNewHosts = createNewHosts; // remove old styles

function removeNgStyles() {
  Array.prototype.slice.call(document.head.querySelectorAll('style'), 0).filter(function (style) {
    return style.innerText.indexOf('_ng') !== -1;
  }).map(function (el) {
    return el.remove();
  });
}

exports.removeNgStyles = removeNgStyles; // get input values

function getInputValues() {
  var inputs = document.querySelectorAll('input');
  return Array.prototype.slice.call(inputs).map(function (input) {
    return input.value;
  });
}

exports.getInputValues = getInputValues; // set input values

function setInputValues($inputs) {
  var inputs = document.querySelectorAll('input');

  if ($inputs && inputs.length === $inputs.length) {
    $inputs.forEach(function (value, i) {
      var el = inputs[i];
      el.value = value;
      el.dispatchEvent(new CustomEvent('input', {
        detail: el.value
      }));
    });
  }
}

exports.setInputValues = setInputValues; // get/set input values

function createInputTransfer() {
  var $inputs = getInputValues();
  return function restoreInputValues() {
    setInputValues($inputs);
  };
}

exports.createInputTransfer = createInputTransfer;

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbAccordion = exports.NgbPanel = exports.NgbPanelContent = exports.NgbPanelTitle = void 0;

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var _accordionConfig = __webpack_require__(144);

var nextId = 0;
/**
 * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.
 */

var NgbPanelTitle =
/** @class */
function () {
  function NgbPanelTitle(templateRef) {
    this.templateRef = templateRef;
  }

  NgbPanelTitle.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'ng-template[ngbPanelTitle]'
    }]
  }];
  /** @nocollapse */

  NgbPanelTitle.ctorParameters = function () {
    return [{
      type: _core.TemplateRef
    }];
  };

  return NgbPanelTitle;
}();

exports.NgbPanelTitle = NgbPanelTitle;

/**
 * This directive must be used to wrap accordion panel content.
 */
var NgbPanelContent =
/** @class */
function () {
  function NgbPanelContent(templateRef) {
    this.templateRef = templateRef;
  }

  NgbPanelContent.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'ng-template[ngbPanelContent]'
    }]
  }];
  /** @nocollapse */

  NgbPanelContent.ctorParameters = function () {
    return [{
      type: _core.TemplateRef
    }];
  };

  return NgbPanelContent;
}();

exports.NgbPanelContent = NgbPanelContent;

/**
 * The NgbPanel directive represents an individual panel with the title and collapsible
 * content
 */
var NgbPanel =
/** @class */
function () {
  function NgbPanel() {
    /**
       *  A flag determining whether the panel is disabled or not.
       *  When disabled, the panel cannot be toggled.
       */
    this.disabled = false;
    /**
       *  An optional id for the panel. The id should be unique.
       *  If not provided, it will be auto-generated.
       */

    this.id = "ngb-panel-" + nextId++;
    /**
       * A flag telling if the panel is currently open
       */

    this.isOpen = false;
  }

  NgbPanel.prototype.ngAfterContentChecked = function () {
    // We are using @ContentChildren instead of @ContantChild as in the Angular version being used
    // only @ContentChildren allows us to specify the {descendants: false} option.
    // Without {descendants: false} we are hitting bugs described in:
    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240
    this.titleTpl = this.titleTpls.first;
    this.contentTpl = this.contentTpls.first;
  };

  NgbPanel.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'ngb-panel'
    }]
  }];
  /** @nocollapse */

  NgbPanel.propDecorators = {
    "disabled": [{
      type: _core.Input
    }],
    "id": [{
      type: _core.Input
    }],
    "title": [{
      type: _core.Input
    }],
    "type": [{
      type: _core.Input
    }],
    "titleTpls": [{
      type: _core.ContentChildren,
      args: [NgbPanelTitle, {
        descendants: false
      }]
    }],
    "contentTpls": [{
      type: _core.ContentChildren,
      args: [NgbPanelContent, {
        descendants: false
      }]
    }]
  };
  return NgbPanel;
}();

exports.NgbPanel = NgbPanel;

/**
 * The NgbAccordion directive is a collection of panels.
 * It can assure that only one panel can be opened at a time.
 */
var NgbAccordion =
/** @class */
function () {
  function NgbAccordion(config) {
    /**
       * An array or comma separated strings of panel identifiers that should be opened
       */
    this.activeIds = [];
    /**
       * Whether the closed panels should be hidden without destroying them
       */

    this.destroyOnHide = true;
    /**
       * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details
       */

    this.panelChange = new _core.EventEmitter();
    this.type = config.type;
    this.closeOtherPanels = config.closeOthers;
  }
  /**
   * Programmatically toggle a panel with a given id.
   */

  /**
     * Programmatically toggle a panel with a given id.
     */


  NgbAccordion.prototype.toggle =
  /**
  * Programmatically toggle a panel with a given id.
  */
  function (panelId) {
    var panel = this.panels.find(function (p) {
      return p.id === panelId;
    });

    if (panel && !panel.disabled) {
      var defaultPrevented_1 = false;
      this.panelChange.emit({
        panelId: panelId,
        nextState: !panel.isOpen,
        preventDefault: function preventDefault() {
          defaultPrevented_1 = true;
        }
      });

      if (!defaultPrevented_1) {
        panel.isOpen = !panel.isOpen;

        if (this.closeOtherPanels) {
          this._closeOthers(panelId);
        }

        this._updateActiveIds();
      }
    }
  };

  NgbAccordion.prototype.ngAfterContentChecked = function () {
    var _this = this; // active id updates


    if ((0, _util.isString)(this.activeIds)) {
      this.activeIds = this.activeIds.split(/\s*,\s*/);
    } // update panels open states


    this.panels.forEach(function (panel) {
      return panel.isOpen = !panel.disabled && _this.activeIds.indexOf(panel.id) > -1;
    }); // closeOthers updates

    if (this.activeIds.length > 1 && this.closeOtherPanels) {
      this._closeOthers(this.activeIds[0]);

      this._updateActiveIds();
    }
  };

  NgbAccordion.prototype._closeOthers = function (panelId) {
    this.panels.forEach(function (panel) {
      if (panel.id !== panelId) {
        panel.isOpen = false;
      }
    });
  };

  NgbAccordion.prototype._updateActiveIds = function () {
    this.activeIds = this.panels.filter(function (panel) {
      return panel.isOpen && !panel.disabled;
    }).map(function (panel) {
      return panel.id;
    });
  };

  NgbAccordion.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-accordion',
      exportAs: 'ngbAccordion',
      host: {
        'class': 'accordion',
        'role': 'tablist',
        '[attr.aria-multiselectable]': '!closeOtherPanels'
      },
      template: "\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link\" (click)=\"!!toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"card-body collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n             <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </div>\n    </ng-template>\n  "
    }]
  }];
  /** @nocollapse */

  NgbAccordion.ctorParameters = function () {
    return [{
      type: _accordionConfig.NgbAccordionConfig
    }];
  };

  NgbAccordion.propDecorators = {
    "panels": [{
      type: _core.ContentChildren,
      args: [NgbPanel]
    }],
    "activeIds": [{
      type: _core.Input
    }],
    "closeOtherPanels": [{
      type: _core.Input,
      args: ['closeOthers']
    }],
    "destroyOnHide": [{
      type: _core.Input
    }],
    "type": [{
      type: _core.Input
    }],
    "panelChange": [{
      type: _core.Output
    }]
  };
  return NgbAccordion;
}();

exports.NgbAccordion = NgbAccordion;

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbAccordion", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbAccordion;
  }
});
Object.defineProperty(exports, "NgbPanel", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbPanel;
  }
});
Object.defineProperty(exports, "NgbPanelTitle", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbPanelTitle;
  }
});
Object.defineProperty(exports, "NgbPanelContent", {
  enumerable: true,
  get: function get() {
    return _accordion.NgbPanelContent;
  }
});
Object.defineProperty(exports, "NgbAccordionConfig", {
  enumerable: true,
  get: function get() {
    return _accordionConfig.NgbAccordionConfig;
  }
});
exports.NgbAccordionModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _accordion = __webpack_require__(323);

var _accordionConfig = __webpack_require__(144);

var NGB_ACCORDION_DIRECTIVES = [_accordion.NgbAccordion, _accordion.NgbPanel, _accordion.NgbPanelTitle, _accordion.NgbPanelContent];

var NgbAccordionModule =
/** @class */
function () {
  function NgbAccordionModule() {}

  NgbAccordionModule.forRoot = function () {
    return {
      ngModule: NgbAccordionModule,
      providers: [_accordionConfig.NgbAccordionConfig]
    };
  };

  NgbAccordionModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: NGB_ACCORDION_DIRECTIVES,
      exports: NGB_ACCORDION_DIRECTIVES,
      imports: [_common.CommonModule]
    }]
  }];
  return NgbAccordionModule;
}();

exports.NgbAccordionModule = NgbAccordionModule;

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbAlert = void 0;

var _core = __webpack_require__(0);

var _alertConfig = __webpack_require__(145);

/**
 * Alerts can be used to provide feedback messages.
 */
var NgbAlert =
/** @class */
function () {
  function NgbAlert(config) {
    /**
       * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.
       */
    this.close = new _core.EventEmitter();
    this.dismissible = config.dismissible;
    this.type = config.type;
  }

  NgbAlert.prototype.closeHandler = function () {
    this.close.emit(null);
  };

  NgbAlert.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-alert',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      template: "\n    <div [class]=\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\" role=\"alert\">\n      <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n        (click)=\"closeHandler()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <ng-content></ng-content>\n    </div>\n    "
    }]
  }];
  /** @nocollapse */

  NgbAlert.ctorParameters = function () {
    return [{
      type: _alertConfig.NgbAlertConfig
    }];
  };

  NgbAlert.propDecorators = {
    "dismissible": [{
      type: _core.Input
    }],
    "type": [{
      type: _core.Input
    }],
    "close": [{
      type: _core.Output
    }]
  };
  return NgbAlert;
}();

exports.NgbAlert = NgbAlert;

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbAlert", {
  enumerable: true,
  get: function get() {
    return _alert.NgbAlert;
  }
});
Object.defineProperty(exports, "NgbAlertConfig", {
  enumerable: true,
  get: function get() {
    return _alertConfig.NgbAlertConfig;
  }
});
exports.NgbAlertModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _alert = __webpack_require__(325);

var _alertConfig = __webpack_require__(145);

var NgbAlertModule =
/** @class */
function () {
  function NgbAlertModule() {}

  NgbAlertModule.forRoot = function () {
    return {
      ngModule: NgbAlertModule,
      providers: [_alertConfig.NgbAlertConfig]
    };
  };

  NgbAlertModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_alert.NgbAlert],
      exports: [_alert.NgbAlert],
      imports: [_common.CommonModule],
      entryComponents: [_alert.NgbAlert]
    }]
  }];
  return NgbAlertModule;
}();

exports.NgbAlertModule = NgbAlertModule;

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbButtonLabel", {
  enumerable: true,
  get: function get() {
    return _label.NgbButtonLabel;
  }
});
Object.defineProperty(exports, "NgbCheckBox", {
  enumerable: true,
  get: function get() {
    return _checkbox.NgbCheckBox;
  }
});
Object.defineProperty(exports, "NgbRadio", {
  enumerable: true,
  get: function get() {
    return _radio.NgbRadio;
  }
});
Object.defineProperty(exports, "NgbRadioGroup", {
  enumerable: true,
  get: function get() {
    return _radio.NgbRadioGroup;
  }
});
exports.NgbButtonsModule = void 0;

var _core = __webpack_require__(0);

var _label = __webpack_require__(105);

var _checkbox = __webpack_require__(328);

var _radio = __webpack_require__(329);

var NGB_BUTTON_DIRECTIVES = [_label.NgbButtonLabel, _checkbox.NgbCheckBox, _radio.NgbRadioGroup, _radio.NgbRadio];

var NgbButtonsModule =
/** @class */
function () {
  function NgbButtonsModule() {}

  NgbButtonsModule.forRoot = function () {
    return {
      ngModule: NgbButtonsModule,
      providers: []
    };
  };

  NgbButtonsModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: NGB_BUTTON_DIRECTIVES,
      exports: NGB_BUTTON_DIRECTIVES
    }]
  }];
  return NgbButtonsModule;
}();

exports.NgbButtonsModule = NgbButtonsModule;

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbCheckBox = void 0;

var _core = __webpack_require__(0);

var _forms = __webpack_require__(34);

var _label2 = __webpack_require__(105);

var NGB_CHECKBOX_VALUE_ACCESSOR = {
  provide: _forms.NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbCheckBox;
  }),
  multi: true
};
/**
 * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable
 * specified via ngModel.
 */

var NgbCheckBox =
/** @class */
function () {
  function NgbCheckBox(_label) {
    this._label = _label;
    /**
       * A flag indicating if a given checkbox button is disabled.
       */

    this.disabled = false;
    /**
       * Value to be propagated as model when the checkbox is checked.
       */

    this.valueChecked = true;
    /**
       * Value to be propagated as model when the checkbox is unchecked.
       */

    this.valueUnChecked = false;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  Object.defineProperty(NgbCheckBox.prototype, "focused", {
    set: function set(isFocused) {
      this._label.focused = isFocused;

      if (!isFocused) {
        this.onTouched();
      }
    },
    enumerable: true,
    configurable: true
  });

  NgbCheckBox.prototype.onInputChange = function ($event) {
    var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;
    this.onChange(modelToPropagate);
    this.onTouched();
    this.writeValue(modelToPropagate);
  };

  NgbCheckBox.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  NgbCheckBox.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  NgbCheckBox.prototype.setDisabledState = function (isDisabled) {
    this.disabled = isDisabled;
    this._label.disabled = isDisabled;
  };

  NgbCheckBox.prototype.writeValue = function (value) {
    this.checked = value === this.valueChecked;
    this._label.active = this.checked;
  };

  NgbCheckBox.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbButton][type=checkbox]',
      host: {
        'autocomplete': 'off',
        '[checked]': 'checked',
        '[disabled]': 'disabled',
        '(change)': 'onInputChange($event)',
        '(focus)': 'focused = true',
        '(blur)': 'focused = false'
      },
      providers: [NGB_CHECKBOX_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbCheckBox.ctorParameters = function () {
    return [{
      type: _label2.NgbButtonLabel
    }];
  };

  NgbCheckBox.propDecorators = {
    "disabled": [{
      type: _core.Input
    }],
    "valueChecked": [{
      type: _core.Input
    }],
    "valueUnChecked": [{
      type: _core.Input
    }]
  };
  return NgbCheckBox;
}();

exports.NgbCheckBox = NgbCheckBox;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbRadio = exports.NgbRadioGroup = void 0;

var _core = __webpack_require__(0);

var _forms = __webpack_require__(34);

var _label2 = __webpack_require__(105);

var NGB_RADIO_VALUE_ACCESSOR = {
  provide: _forms.NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbRadioGroup;
  }),
  multi: true
};
var nextId = 0;
/**
 * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable
 * specified via ngModel.
 */

var NgbRadioGroup =
/** @class */
function () {
  function NgbRadioGroup() {
    this._radios = new Set();
    this._value = null;
    /**
       * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the
       * enclosed inputs. If not specified, a name is generated automatically.
       */

    this.name = "ngb-radio-" + nextId++;

    this.onChange = function (_) {};

    this.onTouched = function () {};
  }

  Object.defineProperty(NgbRadioGroup.prototype, "disabled", {
    get: function get() {
      return this._disabled;
    },
    set: function set(isDisabled) {
      this.setDisabledState(isDisabled);
    },
    enumerable: true,
    configurable: true
  });

  NgbRadioGroup.prototype.onRadioChange = function (radio) {
    this.writeValue(radio.value);
    this.onChange(radio.value);
  };

  NgbRadioGroup.prototype.onRadioValueUpdate = function () {
    this._updateRadiosValue();
  };

  NgbRadioGroup.prototype.register = function (radio) {
    this._radios.add(radio);
  };

  NgbRadioGroup.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  NgbRadioGroup.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  NgbRadioGroup.prototype.setDisabledState = function (isDisabled) {
    this._disabled = isDisabled;

    this._updateRadiosDisabled();
  };

  NgbRadioGroup.prototype.unregister = function (radio) {
    this._radios.delete(radio);
  };

  NgbRadioGroup.prototype.writeValue = function (value) {
    this._value = value;

    this._updateRadiosValue();
  };

  NgbRadioGroup.prototype._updateRadiosValue = function () {
    var _this = this;

    this._radios.forEach(function (radio) {
      return radio.updateValue(_this._value);
    });
  };

  NgbRadioGroup.prototype._updateRadiosDisabled = function () {
    this._radios.forEach(function (radio) {
      return radio.updateDisabled();
    });
  };

  NgbRadioGroup.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbRadioGroup]',
      host: {
        'role': 'group'
      },
      providers: [NGB_RADIO_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbRadioGroup.propDecorators = {
    "name": [{
      type: _core.Input
    }]
  };
  return NgbRadioGroup;
}();

exports.NgbRadioGroup = NgbRadioGroup;

/**
 * Marks an input of type "radio" as part of the NgbRadioGroup.
 */
var NgbRadio =
/** @class */
function () {
  function NgbRadio(_group, _label, _renderer, _element) {
    this._group = _group;
    this._label = _label;
    this._renderer = _renderer;
    this._element = _element;
    this._value = null;

    this._group.register(this);
  }

  Object.defineProperty(NgbRadio.prototype, "value", {
    get: function get() {
      return this._value;
    },
    set:
    /**
    * You can specify model value of a given radio by binding to the value property.
    */
    function set(value) {
      this._value = value;
      var stringValue = value ? value.toString() : '';

      this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);

      this._group.onRadioValueUpdate();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "disabled", {
    get: function get() {
      return this._group.disabled || this._disabled;
    },
    set:
    /**
    * A flag indicating if a given radio button is disabled.
    */
    function set(isDisabled) {
      this._disabled = isDisabled !== false;
      this.updateDisabled();
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "focused", {
    set: function set(isFocused) {
      if (this._label) {
        this._label.focused = isFocused;
      }

      if (!isFocused) {
        this._group.onTouched();
      }
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "checked", {
    get: function get() {
      return this._checked;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(NgbRadio.prototype, "nameAttr", {
    get: function get() {
      return this.name || this._group.name;
    },
    enumerable: true,
    configurable: true
  });

  NgbRadio.prototype.ngOnDestroy = function () {
    this._group.unregister(this);
  };

  NgbRadio.prototype.onChange = function () {
    this._group.onRadioChange(this);
  };

  NgbRadio.prototype.updateValue = function (value) {
    this._checked = this.value === value;
    this._label.active = this._checked;
  };

  NgbRadio.prototype.updateDisabled = function () {
    this._label.disabled = this.disabled;
  };

  NgbRadio.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbButton][type=radio]',
      host: {
        '[checked]': 'checked',
        '[disabled]': 'disabled',
        '[name]': 'nameAttr',
        '(change)': 'onChange()',
        '(focus)': 'focused = true',
        '(blur)': 'focused = false'
      }
    }]
  }];
  /** @nocollapse */

  NgbRadio.ctorParameters = function () {
    return [{
      type: NgbRadioGroup
    }, {
      type: _label2.NgbButtonLabel
    }, {
      type: _core.Renderer2
    }, {
      type: _core.ElementRef
    }];
  };

  NgbRadio.propDecorators = {
    "name": [{
      type: _core.Input
    }],
    "value": [{
      type: _core.Input,
      args: ['value']
    }],
    "disabled": [{
      type: _core.Input,
      args: ['disabled']
    }]
  };
  return NgbRadio;
}();

exports.NgbRadio = NgbRadio;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NGB_CAROUSEL_DIRECTIVES = exports.NgbSlideEventDirection = exports.NgbCarousel = exports.NgbSlide = void 0;

var _core = __webpack_require__(0);

var _carouselConfig = __webpack_require__(146);

var nextId = 0;
/**
 * Represents an individual slide to be used within a carousel.
 */

var NgbSlide =
/** @class */
function () {
  function NgbSlide(tplRef) {
    this.tplRef = tplRef;
    /**
       * Unique slide identifier. Must be unique for the entire document for proper accessibility support.
       * Will be auto-generated if not provided.
       */

    this.id = "ngb-slide-" + nextId++;
  }

  NgbSlide.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'ng-template[ngbSlide]'
    }]
  }];
  /** @nocollapse */

  NgbSlide.ctorParameters = function () {
    return [{
      type: _core.TemplateRef
    }];
  };

  NgbSlide.propDecorators = {
    "id": [{
      type: _core.Input
    }]
  };
  return NgbSlide;
}();

exports.NgbSlide = NgbSlide;

/**
 * Directive to easily create carousels based on Bootstrap's markup.
 */
var NgbCarousel =
/** @class */
function () {
  function NgbCarousel(config) {
    /**
       * A carousel slide event fired when the slide transition is completed.
       * See NgbSlideEvent for payload details
       */
    this.slide = new _core.EventEmitter();
    this.interval = config.interval;
    this.wrap = config.wrap;
    this.keyboard = config.keyboard;
    this.pauseOnHover = config.pauseOnHover;
    this.showNavigationArrows = config.showNavigationArrows;
    this.showNavigationIndicators = config.showNavigationIndicators;
  }

  NgbCarousel.prototype.ngAfterContentChecked = function () {
    var activeSlide = this._getSlideById(this.activeId);

    this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : null;
  };

  NgbCarousel.prototype.ngOnInit = function () {
    this._startTimer();
  };

  NgbCarousel.prototype.ngOnChanges = function (changes) {
    if ('interval' in changes && !changes['interval'].isFirstChange()) {
      this._restartTimer();
    }
  };

  NgbCarousel.prototype.ngOnDestroy = function () {
    clearInterval(this._slideChangeInterval);
  };
  /**
   * Navigate to a slide with the specified identifier.
   */

  /**
     * Navigate to a slide with the specified identifier.
     */


  NgbCarousel.prototype.select =
  /**
  * Navigate to a slide with the specified identifier.
  */
  function (slideId) {
    this.cycleToSelected(slideId, this.getSlideEventDirection(this.activeId, slideId));

    this._restartTimer();
  };
  /**
   * Navigate to the next slide.
   */

  /**
     * Navigate to the next slide.
     */


  NgbCarousel.prototype.prev =
  /**
  * Navigate to the next slide.
  */
  function () {
    this.cycleToPrev();

    this._restartTimer();
  };
  /**
   * Navigate to the next slide.
   */

  /**
     * Navigate to the next slide.
     */


  NgbCarousel.prototype.next =
  /**
  * Navigate to the next slide.
  */
  function () {
    this.cycleToNext();

    this._restartTimer();
  };
  /**
   * Stops the carousel from cycling through items.
   */

  /**
     * Stops the carousel from cycling through items.
     */


  NgbCarousel.prototype.pause =
  /**
  * Stops the carousel from cycling through items.
  */
  function () {
    this._stopTimer();
  };
  /**
   * Restarts cycling through the carousel slides from left to right.
   */

  /**
     * Restarts cycling through the carousel slides from left to right.
     */


  NgbCarousel.prototype.cycle =
  /**
  * Restarts cycling through the carousel slides from left to right.
  */
  function () {
    this._startTimer();
  };

  NgbCarousel.prototype.cycleToNext = function () {
    this.cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT);
  };

  NgbCarousel.prototype.cycleToPrev = function () {
    this.cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT);
  };

  NgbCarousel.prototype.cycleToSelected = function (slideIdx, direction) {
    var selectedSlide = this._getSlideById(slideIdx);

    if (selectedSlide) {
      if (selectedSlide.id !== this.activeId) {
        this.slide.emit({
          prev: this.activeId,
          current: selectedSlide.id,
          direction: direction
        });
      }

      this.activeId = selectedSlide.id;
    }
  };

  NgbCarousel.prototype.getSlideEventDirection = function (currentActiveSlideId, nextActiveSlideId) {
    var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);

    var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);

    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;
  };

  NgbCarousel.prototype.keyPrev = function () {
    if (this.keyboard) {
      this.prev();
    }
  };

  NgbCarousel.prototype.keyNext = function () {
    if (this.keyboard) {
      this.next();
    }
  };

  NgbCarousel.prototype.onMouseEnter = function () {
    if (this.pauseOnHover) {
      this.pause();
    }
  };

  NgbCarousel.prototype.onMouseLeave = function () {
    if (this.pauseOnHover) {
      this.cycle();
    }
  };

  NgbCarousel.prototype._restartTimer = function () {
    this._stopTimer();

    this._startTimer();
  };

  NgbCarousel.prototype._startTimer = function () {
    var _this = this;

    if (this.interval > 0) {
      this._slideChangeInterval = setInterval(function () {
        _this.cycleToNext();
      }, this.interval);
    }
  };

  NgbCarousel.prototype._stopTimer = function () {
    clearInterval(this._slideChangeInterval);
  };

  NgbCarousel.prototype._getSlideById = function (slideId) {
    var slideWithId = this.slides.filter(function (slide) {
      return slide.id === slideId;
    });
    return slideWithId.length ? slideWithId[0] : null;
  };

  NgbCarousel.prototype._getSlideIdxById = function (slideId) {
    return this.slides.toArray().indexOf(this._getSlideById(slideId));
  };

  NgbCarousel.prototype._getNextSlide = function (currentSlideId) {
    var slideArr = this.slides.toArray();

    var currentSlideIdx = this._getSlideIdxById(currentSlideId);

    var isLastSlide = currentSlideIdx === slideArr.length - 1;
    return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;
  };

  NgbCarousel.prototype._getPrevSlide = function (currentSlideId) {
    var slideArr = this.slides.toArray();

    var currentSlideIdx = this._getSlideIdxById(currentSlideId);

    var isFirstSlide = currentSlideIdx === 0;
    return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;
  };

  NgbCarousel.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-carousel',
      exportAs: 'ngbCarousel',
      host: {
        'class': 'carousel slide',
        '[style.display]': '"block"',
        'tabIndex': '0',
        '(mouseenter)': 'onMouseEnter()',
        '(mouseleave)': 'onMouseLeave()',
        '(keydown.arrowLeft)': 'keyPrev()',
        '(keydown.arrowRight)': 'keyNext()'
      },
      template: "\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"cycleToSelected(slide.id, getSlideEventDirection(activeId, slide.id))\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"cycleToPrev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"cycleToNext()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n    "
    }]
  }];
  /** @nocollapse */

  NgbCarousel.ctorParameters = function () {
    return [{
      type: _carouselConfig.NgbCarouselConfig
    }];
  };

  NgbCarousel.propDecorators = {
    "slides": [{
      type: _core.ContentChildren,
      args: [NgbSlide]
    }],
    "activeId": [{
      type: _core.Input
    }],
    "interval": [{
      type: _core.Input
    }],
    "wrap": [{
      type: _core.Input
    }],
    "keyboard": [{
      type: _core.Input
    }],
    "pauseOnHover": [{
      type: _core.Input
    }],
    "showNavigationArrows": [{
      type: _core.Input
    }],
    "showNavigationIndicators": [{
      type: _core.Input
    }],
    "slide": [{
      type: _core.Output
    }]
  };
  return NgbCarousel;
}();

exports.NgbCarousel = NgbCarousel;

/**
 * Enum to define the carousel slide event direction
 */

/**
 * Enum to define the carousel slide event direction
 */
var NgbSlideEventDirection;
/**
 * Enum to define the carousel slide event direction
 */

exports.NgbSlideEventDirection = NgbSlideEventDirection;

(function (NgbSlideEventDirection) {
  NgbSlideEventDirection[NgbSlideEventDirection["LEFT"] = 'left'] = "LEFT";
  NgbSlideEventDirection[NgbSlideEventDirection["RIGHT"] = 'right'] = "RIGHT";
})(NgbSlideEventDirection || (exports.NgbSlideEventDirection = NgbSlideEventDirection = {}));

var NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];
exports.NGB_CAROUSEL_DIRECTIVES = NGB_CAROUSEL_DIRECTIVES;

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbCarousel", {
  enumerable: true,
  get: function get() {
    return _carousel.NgbCarousel;
  }
});
Object.defineProperty(exports, "NgbSlide", {
  enumerable: true,
  get: function get() {
    return _carousel.NgbSlide;
  }
});
Object.defineProperty(exports, "NgbCarouselConfig", {
  enumerable: true,
  get: function get() {
    return _carouselConfig.NgbCarouselConfig;
  }
});
exports.NgbCarouselModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _carousel = __webpack_require__(330);

var _carouselConfig = __webpack_require__(146);

var NgbCarouselModule =
/** @class */
function () {
  function NgbCarouselModule() {}

  NgbCarouselModule.forRoot = function () {
    return {
      ngModule: NgbCarouselModule,
      providers: [_carouselConfig.NgbCarouselConfig]
    };
  };

  NgbCarouselModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: _carousel.NGB_CAROUSEL_DIRECTIVES,
      exports: _carousel.NGB_CAROUSEL_DIRECTIVES,
      imports: [_common.CommonModule]
    }]
  }];
  return NgbCarouselModule;
}();

exports.NgbCarouselModule = NgbCarouselModule;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbCollapse = void 0;

var _core = __webpack_require__(0);

/**
 * The NgbCollapse directive provides a simple way to hide and show an element with animations.
 */
var NgbCollapse =
/** @class */
function () {
  function NgbCollapse() {
    /**
       * A flag indicating collapsed (true) or open (false) state.
       */
    this.collapsed = false;
  }

  NgbCollapse.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbCollapse]',
      exportAs: 'ngbCollapse',
      host: {
        '[class.collapse]': 'true',
        '[class.show]': '!collapsed'
      }
    }]
  }];
  /** @nocollapse */

  NgbCollapse.propDecorators = {
    "collapsed": [{
      type: _core.Input,
      args: ['ngbCollapse']
    }]
  };
  return NgbCollapse;
}();

exports.NgbCollapse = NgbCollapse;

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbCollapse", {
  enumerable: true,
  get: function get() {
    return _collapse.NgbCollapse;
  }
});
exports.NgbCollapseModule = void 0;

var _core = __webpack_require__(0);

var _collapse = __webpack_require__(332);

var NgbCollapseModule =
/** @class */
function () {
  function NgbCollapseModule() {}

  NgbCollapseModule.forRoot = function () {
    return {
      ngModule: NgbCollapseModule,
      providers: []
    };
  };

  NgbCollapseModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_collapse.NgbCollapse],
      exports: [_collapse.NgbCollapse]
    }]
  }];
  return NgbCollapseModule;
}();

exports.NgbCollapseModule = NgbCollapseModule;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDateNativeAdapter = void 0;

var _core = __webpack_require__(0);

var _ngbDateAdapter = __webpack_require__(82);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var NgbDateNativeAdapter =
/** @class */
function (_super) {
  __extends(NgbDateNativeAdapter, _super);

  function NgbDateNativeAdapter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  NgbDateNativeAdapter.prototype.fromModel = function (date) {
    return date && date.getFullYear ? {
      year: date.getFullYear(),
      month: date.getMonth() + 1,
      day: date.getDate()
    } : null;
  };

  NgbDateNativeAdapter.prototype.toModel = function (date) {
    return date && date.year && date.month ? new Date(date.year, date.month - 1, date.day) : null;
  };

  NgbDateNativeAdapter.decorators = [{
    type: _core.Injectable
  }];
  return NgbDateNativeAdapter;
}(_ngbDateAdapter.NgbDateAdapter);

exports.NgbDateNativeAdapter = NgbDateNativeAdapter;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerDayView = void 0;

var _core = __webpack_require__(0);

var NgbDatepickerDayView =
/** @class */
function () {
  function NgbDatepickerDayView() {}

  NgbDatepickerDayView.prototype.isMuted = function () {
    return !this.selected && (this.date.month !== this.currentMonth || this.disabled);
  };

  NgbDatepickerDayView.decorators = [{
    type: _core.Component,
    args: [{
      selector: '[ngbDatepickerDayView]',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      styles: ["\n    :host {\n      text-align: center;\n      width: 2rem;\n      height: 2rem;\n      line-height: 2rem;\n      border-radius: 0.25rem;\n      background: transparent;\n    }\n    :host.outside {\n      opacity: 0.5;\n    }\n  "],
      host: {
        'class': 'btn-light',
        '[class.bg-primary]': 'selected',
        '[class.text-white]': 'selected',
        '[class.text-muted]': 'isMuted()',
        '[class.outside]': 'isMuted()',
        '[class.active]': 'focused'
      },
      template: "{{ date.day }}"
    }]
  }];
  /** @nocollapse */

  NgbDatepickerDayView.propDecorators = {
    "currentMonth": [{
      type: _core.Input
    }],
    "date": [{
      type: _core.Input
    }],
    "disabled": [{
      type: _core.Input
    }],
    "focused": [{
      type: _core.Input
    }],
    "selected": [{
      type: _core.Input
    }]
  };
  return NgbDatepickerDayView;
}();

exports.NgbDatepickerDayView = NgbDatepickerDayView;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbInputDatepicker = void 0;

var _core = __webpack_require__(0);

var _forms = __webpack_require__(34);

var _common = __webpack_require__(10);

var _ngbDate = __webpack_require__(35);

var _datepicker = __webpack_require__(150);

var _ngbDateParserFormatter = __webpack_require__(153);

var _positioning = __webpack_require__(64);

var _focusTrap = __webpack_require__(171);

var _key = __webpack_require__(53);

var _ngbDateAdapter2 = __webpack_require__(82);

var _ngbCalendar = __webpack_require__(52);

var _datepickerService = __webpack_require__(106);

var _rxjs = __webpack_require__(31);

var _operators = __webpack_require__(33);

var NGB_DATEPICKER_VALUE_ACCESSOR = {
  provide: _forms.NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbInputDatepicker;
  }),
  multi: true
};
var NGB_DATEPICKER_VALIDATOR = {
  provide: _forms.NG_VALIDATORS,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbInputDatepicker;
  }),
  multi: true
};
/**
 * A directive that makes it possible to have datepickers on input fields.
 * Manages integration with the input field itself (data entry) and ngModel (validation etc.).
 */

var NgbInputDatepicker =
/** @class */
function () {
  function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, ngZone, _service, _calendar, _ngbDateAdapter, _document) {
    var _this = this;

    this._parserFormatter = _parserFormatter;
    this._elRef = _elRef;
    this._vcRef = _vcRef;
    this._renderer = _renderer;
    this._cfr = _cfr;
    this._service = _service;
    this._calendar = _calendar;
    this._ngbDateAdapter = _ngbDateAdapter;
    this._document = _document;
    this._closed$ = new _rxjs.Subject();
    this._cRef = null;
    this._disabled = false;
    /**
       * Indicates whether the datepicker popup should be closed automatically after date selection or not.
       * If the value is 'false', the popup can be closed via 'close()' or 'toggle()' methods.
       *
       * @since 1.1.0
       */

    this.autoClose = true;
    /**
       * Placement of a datepicker popup accepts:
       *    "top", "top-left", "top-right", "bottom", "bottom-left", "bottom-right",
       *    "left", "left-top", "left-bottom", "right", "right-top", "right-bottom"
       * and array of above values.
       */

    this.placement = 'bottom-left';
    /**
       * An event fired when user selects a date using keyboard or mouse.
       * The payload of the event is currently selected NgbDateStruct.
       *
       * @since 1.1.1
       */

    this.dateSelect = new _core.EventEmitter();
    /**
       * An event fired when navigation happens and currently displayed month changes.
       * See NgbDatepickerNavigateEvent for the payload info.
       */

    this.navigate = new _core.EventEmitter();

    this._onChange = function (_) {};

    this._onTouched = function () {};

    this._validatorChange = function () {};

    this._zoneSubscription = ngZone.onStable.subscribe(function () {
      if (_this._cRef) {
        (0, _positioning.positionElements)(_this._elRef.nativeElement, _this._cRef.location.nativeElement, _this.placement, _this.container === 'body');
      }
    });
  }

  Object.defineProperty(NgbInputDatepicker.prototype, "disabled", {
    get: function get() {
      return this._disabled;
    },
    set: function set(value) {
      this._disabled = value === '' || value && value !== 'false';

      if (this.isOpen()) {
        this._cRef.instance.setDisabledState(this._disabled);
      }
    },
    enumerable: true,
    configurable: true
  });

  NgbInputDatepicker.prototype.registerOnChange = function (fn) {
    this._onChange = fn;
  };

  NgbInputDatepicker.prototype.registerOnTouched = function (fn) {
    this._onTouched = fn;
  };

  NgbInputDatepicker.prototype.registerOnValidatorChange = function (fn) {
    this._validatorChange = fn;
  };

  ;

  NgbInputDatepicker.prototype.setDisabledState = function (isDisabled) {
    this.disabled = isDisabled;
  };

  NgbInputDatepicker.prototype.validate = function (c) {
    var value = c.value;

    if (value === null || value === undefined) {
      return null;
    }

    var ngbDate = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));

    if (!this._calendar.isValid(ngbDate)) {
      return {
        'ngbDate': {
          invalid: c.value
        }
      };
    }

    if (this.minDate && ngbDate.before(_ngbDate.NgbDate.from(this.minDate))) {
      return {
        'ngbDate': {
          requiredBefore: this.minDate
        }
      };
    }

    if (this.maxDate && ngbDate.after(_ngbDate.NgbDate.from(this.maxDate))) {
      return {
        'ngbDate': {
          requiredAfter: this.maxDate
        }
      };
    }
  };

  NgbInputDatepicker.prototype.writeValue = function (value) {
    this._model = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));

    this._writeModelValue(this._model);
  };

  NgbInputDatepicker.prototype.manualDateChange = function (value, updateView) {
    if (updateView === void 0) {
      updateView = false;
    }

    this._model = this._fromDateStruct(this._parserFormatter.parse(value));

    this._onChange(this._model ? this._ngbDateAdapter.toModel(this._model) : value === '' ? null : value);

    if (updateView && this._model) {
      this._writeModelValue(this._model);
    }
  };

  NgbInputDatepicker.prototype.isOpen = function () {
    return !!this._cRef;
  };
  /**
   * Opens the datepicker with the selected date indicated by the ngModel value.
   */

  /**
     * Opens the datepicker with the selected date indicated by the ngModel value.
     */


  NgbInputDatepicker.prototype.open =
  /**
  * Opens the datepicker with the selected date indicated by the ngModel value.
  */
  function () {
    var _this = this;

    if (!this.isOpen()) {
      var cf = this._cfr.resolveComponentFactory(_datepicker.NgbDatepicker);

      this._cRef = this._vcRef.createComponent(cf);

      this._applyPopupStyling(this._cRef.location.nativeElement);

      this._applyDatepickerInputs(this._cRef.instance);

      this._subscribeForDatepickerOutputs(this._cRef.instance);

      this._cRef.instance.ngOnInit();

      this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(this._model)); // date selection event handling


      this._cRef.instance.registerOnChange(function (selectedDate) {
        _this.writeValue(selectedDate);

        _this._onChange(selectedDate);
      });

      this._cRef.changeDetectorRef.detectChanges();

      this._cRef.instance.setDisabledState(this.disabled);

      if (this.container === 'body') {
        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);
      } // focus handling


      (0, _focusTrap.ngbFocusTrap)(this._cRef.location.nativeElement, this._closed$);

      this._cRef.instance.focus(); // closing on ESC


      (0, _rxjs.fromEvent)(this._document, 'keyup').pipe((0, _operators.takeUntil)(this._closed$), (0, _operators.filter)(function (e) {
        return e.which === _key.Key.Escape;
      })).subscribe(function () {
        return _this.close();
      });
    }
  };
  /**
   * Closes the datepicker popup.
   */

  /**
     * Closes the datepicker popup.
     */


  NgbInputDatepicker.prototype.close =
  /**
  * Closes the datepicker popup.
  */
  function () {
    if (this.isOpen()) {
      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));

      this._cRef = null;

      this._closed$.next();
    }
  };
  /**
   * Toggles the datepicker popup (opens when closed and closes when opened).
   */

  /**
     * Toggles the datepicker popup (opens when closed and closes when opened).
     */


  NgbInputDatepicker.prototype.toggle =
  /**
  * Toggles the datepicker popup (opens when closed and closes when opened).
  */
  function () {
    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  };
  /**
   * Navigates current view to provided date.
   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
   * If nothing or invalid date provided calendar will open current month.
   * Use 'startDate' input as an alternative
   */

  /**
     * Navigates current view to provided date.
     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
     * If nothing or invalid date provided calendar will open current month.
     * Use 'startDate' input as an alternative
     */


  NgbInputDatepicker.prototype.navigateTo =
  /**
  * Navigates current view to provided date.
  * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.
  * If nothing or invalid date provided calendar will open current month.
  * Use 'startDate' input as an alternative
  */
  function (date) {
    if (this.isOpen()) {
      this._cRef.instance.navigateTo(date);
    }
  };

  NgbInputDatepicker.prototype.onBlur = function () {
    this._onTouched();
  };

  NgbInputDatepicker.prototype.ngOnChanges = function (changes) {
    if (changes['minDate'] || changes['maxDate']) {
      this._validatorChange();
    }
  };

  NgbInputDatepicker.prototype.ngOnDestroy = function () {
    this.close();

    this._zoneSubscription.unsubscribe();
  };

  NgbInputDatepicker.prototype._applyDatepickerInputs = function (datepickerInstance) {
    var _this = this;

    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers'].forEach(function (optionName) {
      if (_this[optionName] !== undefined) {
        datepickerInstance[optionName] = _this[optionName];
      }
    });
    datepickerInstance.startDate = this.startDate || this._model;
  };

  NgbInputDatepicker.prototype._applyPopupStyling = function (nativeElement) {
    this._renderer.addClass(nativeElement, 'dropdown-menu');

    this._renderer.setStyle(nativeElement, 'padding', '0');

    this._renderer.addClass(nativeElement, 'show');
  };

  NgbInputDatepicker.prototype._subscribeForDatepickerOutputs = function (datepickerInstance) {
    var _this = this;

    datepickerInstance.navigate.subscribe(function (date) {
      return _this.navigate.emit(date);
    });
    datepickerInstance.select.subscribe(function (date) {
      _this.dateSelect.emit(date);

      if (_this.autoClose) {
        _this.close();
      }
    });
  };

  NgbInputDatepicker.prototype._writeModelValue = function (model) {
    this._renderer.setProperty(this._elRef.nativeElement, 'value', this._parserFormatter.format(model));

    if (this.isOpen()) {
      this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(model));

      this._onTouched();
    }
  };

  NgbInputDatepicker.prototype._fromDateStruct = function (date) {
    var ngbDate = date ? new _ngbDate.NgbDate(date.year, date.month, date.day) : null;
    return this._calendar.isValid(ngbDate) ? ngbDate : null;
  };

  NgbInputDatepicker.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input[ngbDatepicker]',
      exportAs: 'ngbDatepicker',
      host: {
        '(input)': 'manualDateChange($event.target.value)',
        '(change)': 'manualDateChange($event.target.value, true)',
        '(blur)': 'onBlur()',
        '[disabled]': 'disabled'
      },
      providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, _datepickerService.NgbDatepickerService]
    }]
  }];
  /** @nocollapse */

  NgbInputDatepicker.ctorParameters = function () {
    return [{
      type: _ngbDateParserFormatter.NgbDateParserFormatter
    }, {
      type: _core.ElementRef
    }, {
      type: _core.ViewContainerRef
    }, {
      type: _core.Renderer2
    }, {
      type: _core.ComponentFactoryResolver
    }, {
      type: _core.NgZone
    }, {
      type: _datepickerService.NgbDatepickerService
    }, {
      type: _ngbCalendar.NgbCalendar
    }, {
      type: _ngbDateAdapter2.NgbDateAdapter
    }, {
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_common.DOCUMENT]
      }]
    }];
  };

  NgbInputDatepicker.propDecorators = {
    "autoClose": [{
      type: _core.Input
    }],
    "dayTemplate": [{
      type: _core.Input
    }],
    "displayMonths": [{
      type: _core.Input
    }],
    "firstDayOfWeek": [{
      type: _core.Input
    }],
    "markDisabled": [{
      type: _core.Input
    }],
    "minDate": [{
      type: _core.Input
    }],
    "maxDate": [{
      type: _core.Input
    }],
    "navigation": [{
      type: _core.Input
    }],
    "outsideDays": [{
      type: _core.Input
    }],
    "placement": [{
      type: _core.Input
    }],
    "showWeekdays": [{
      type: _core.Input
    }],
    "showWeekNumbers": [{
      type: _core.Input
    }],
    "startDate": [{
      type: _core.Input
    }],
    "container": [{
      type: _core.Input
    }],
    "dateSelect": [{
      type: _core.Output
    }],
    "navigate": [{
      type: _core.Output
    }],
    "disabled": [{
      type: _core.Input
    }]
  };
  return NgbInputDatepicker;
}();

exports.NgbInputDatepicker = NgbInputDatepicker;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerKeyMapService = void 0;

var _core = __webpack_require__(0);

var _datepickerService = __webpack_require__(106);

var _ngbCalendar = __webpack_require__(52);

var _util = __webpack_require__(14);

var _key = __webpack_require__(53);

var NgbDatepickerKeyMapService =
/** @class */
function () {
  function NgbDatepickerKeyMapService(_service, _calendar) {
    var _this = this;

    this._service = _service;
    this._calendar = _calendar;

    _service.model$.subscribe(function (model) {
      _this._minDate = model.minDate;
      _this._maxDate = model.maxDate;
      _this._firstViewDate = model.firstDate;
      _this._lastViewDate = model.lastDate;
    });
  }

  NgbDatepickerKeyMapService.prototype.processKey = function (event) {
    if (_key.Key[(0, _util.toString)(event.which)]) {
      switch (event.which) {
        case _key.Key.PageUp:
          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);

          break;

        case _key.Key.PageDown:
          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);

          break;

        case _key.Key.End:
          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);

          break;

        case _key.Key.Home:
          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);

          break;

        case _key.Key.ArrowLeft:
          this._service.focusMove('d', -1);

          break;

        case _key.Key.ArrowUp:
          this._service.focusMove('d', -this._calendar.getDaysPerWeek());

          break;

        case _key.Key.ArrowRight:
          this._service.focusMove('d', 1);

          break;

        case _key.Key.ArrowDown:
          this._service.focusMove('d', this._calendar.getDaysPerWeek());

          break;

        case _key.Key.Enter:
        case _key.Key.Space:
          this._service.focusSelect();

          break;

        default:
          return;
      }

      event.preventDefault();
      event.stopPropagation();
    }
  };

  NgbDatepickerKeyMapService.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  NgbDatepickerKeyMapService.ctorParameters = function () {
    return [{
      type: _datepickerService.NgbDatepickerService
    }, {
      type: _ngbCalendar.NgbCalendar
    }];
  };

  return NgbDatepickerKeyMapService;
}();

exports.NgbDatepickerKeyMapService = NgbDatepickerKeyMapService;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerMonthView = void 0;

var _core = __webpack_require__(0);

var _ngbDate = __webpack_require__(35);

var _datepickerI18n = __webpack_require__(51);

var NgbDatepickerMonthView =
/** @class */
function () {
  function NgbDatepickerMonthView(i18n) {
    this.i18n = i18n;
    this.select = new _core.EventEmitter();
  }

  NgbDatepickerMonthView.prototype.doSelect = function (day) {
    if (!day.context.disabled && !day.hidden) {
      this.select.emit(_ngbDate.NgbDate.from(day.date));
    }
  };

  NgbDatepickerMonthView.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-datepicker-month-view',
      host: {
        'role': 'grid'
      },
      styles: ["\n    :host {\n      display: block;\n    }\n    .ngb-dp-weekday, .ngb-dp-week-number {\n      line-height: 2rem;\n      text-align: center;\n      font-style: italic;\n    }\n    .ngb-dp-weekday {\n      color: #5bc0de;\n      color: var(--info);\n    }\n    .ngb-dp-week {\n      border-radius: 0.25rem;\n      display: -ms-flexbox;\n      display: flex;\n    }\n    .ngb-dp-weekdays {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n      border-radius: 0;\n    }\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\n      width: 2rem;\n      height: 2rem;\n    }\n    .ngb-dp-day {\n      cursor: pointer;\n    }\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\n      cursor: default;\n    }\n  "],
      template: "\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ week.number }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  "
    }]
  }];
  /** @nocollapse */

  NgbDatepickerMonthView.ctorParameters = function () {
    return [{
      type: _datepickerI18n.NgbDatepickerI18n
    }];
  };

  NgbDatepickerMonthView.propDecorators = {
    "dayTemplate": [{
      type: _core.Input
    }],
    "month": [{
      type: _core.Input
    }],
    "showWeekdays": [{
      type: _core.Input
    }],
    "showWeekNumbers": [{
      type: _core.Input
    }],
    "select": [{
      type: _core.Output
    }]
  };
  return NgbDatepickerMonthView;
}();

exports.NgbDatepickerMonthView = NgbDatepickerMonthView;

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerNavigationSelect = void 0;

var _core = __webpack_require__(0);

var _ngbDate = __webpack_require__(35);

var _util = __webpack_require__(14);

var _datepickerI18n = __webpack_require__(51);

var NgbDatepickerNavigationSelect =
/** @class */
function () {
  function NgbDatepickerNavigationSelect(i18n) {
    this.i18n = i18n;
    this.select = new _core.EventEmitter();
  }

  NgbDatepickerNavigationSelect.prototype.changeMonth = function (month) {
    this.select.emit(new _ngbDate.NgbDate(this.date.year, (0, _util.toInteger)(month), 1));
  };

  NgbDatepickerNavigationSelect.prototype.changeYear = function (year) {
    this.select.emit(new _ngbDate.NgbDate((0, _util.toInteger)(year), this.date.month, 1));
  };

  NgbDatepickerNavigationSelect.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-datepicker-navigation-select',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      styles: ["\n    :host>select {\n      display: flex;\n      display: -ms-flexbox;\n      -ms-flex: 1 1 auto;\n      width: 100%;\n      padding: 0 0.5rem;\n      font-size: 0.875rem;\n      height: 1.85rem;\n    }\n  "],
      template: "\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m)\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ y }}</option>\n    </select>\n  "
    }]
  }];
  /** @nocollapse */

  NgbDatepickerNavigationSelect.ctorParameters = function () {
    return [{
      type: _datepickerI18n.NgbDatepickerI18n
    }];
  };

  NgbDatepickerNavigationSelect.propDecorators = {
    "date": [{
      type: _core.Input
    }],
    "disabled": [{
      type: _core.Input
    }],
    "months": [{
      type: _core.Input
    }],
    "years": [{
      type: _core.Input
    }],
    "select": [{
      type: _core.Output
    }]
  };
  return NgbDatepickerNavigationSelect;
}();

exports.NgbDatepickerNavigationSelect = NgbDatepickerNavigationSelect;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDatepickerNavigation = void 0;

var _core = __webpack_require__(0);

var _datepickerViewModel = __webpack_require__(149);

var _ngbDate = __webpack_require__(35);

var _datepickerI18n = __webpack_require__(51);

// The -ms- and -webkit- element for the CSS can be removed if we are generating the CSS using SASS.
var NgbDatepickerNavigation =
/** @class */
function () {
  function NgbDatepickerNavigation(i18n) {
    this.i18n = i18n;
    this.navigation = _datepickerViewModel.NavigationEvent;
    this.months = [];
    this.navigate = new _core.EventEmitter();
    this.select = new _core.EventEmitter();
  }

  NgbDatepickerNavigation.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-datepicker-navigation',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      styles: ["\n    :host {\n      display: -ms-flexbox;\n      display: flex;\n      align-items: center;\n    }\n    .ngb-dp-navigation-chevron {\n      border-style: solid;\n      border-width: 0.2em 0.2em 0 0;\n      display: inline-block;\n      width: 0.75em;\n      height: 0.75em;\n      margin-left: 0.25em;\n      margin-right: 0.15em;\n      transform: rotate(-135deg);\n      -ms-transform: rotate(-135deg);\n    }\n    .right .ngb-dp-navigation-chevron {\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin-left: 0.15em;\n      margin-right: 0.25em;\n    }\n    .ngb-dp-arrow {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex: 1 1 auto;\n      flex-grow: 1;\n      padding-right: 0;\n      padding-left: 0;\n      margin: 0;\n      width: 2rem;\n      height: 2rem;\n    }\n    .ngb-dp-arrow.right {\n      -ms-flex-pack: end;\n      justify-content: flex-end;\n    }\n    .ngb-dp-arrow-btn {\n      padding: 0 0.25rem;\n      margin: 0 0.5rem;\n      border: none;\n      background-color: transparent;\n      z-index: 1;\n    }\n    .ngb-dp-arrow-btn:focus {\n      outline: auto 1px;\n    }\n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n      text-align: center;\n    }\n    .ngb-dp-navigation-select {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex: 1 1 9rem;\n      flex-grow: 1;\n      flex-basis: 9rem;\n    }\n  "],
      template: "\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    "
    }]
  }];
  /** @nocollapse */

  NgbDatepickerNavigation.ctorParameters = function () {
    return [{
      type: _datepickerI18n.NgbDatepickerI18n
    }];
  };

  NgbDatepickerNavigation.propDecorators = {
    "date": [{
      type: _core.Input
    }],
    "disabled": [{
      type: _core.Input
    }],
    "months": [{
      type: _core.Input
    }],
    "showSelect": [{
      type: _core.Input
    }],
    "prevDisabled": [{
      type: _core.Input
    }],
    "nextDisabled": [{
      type: _core.Input
    }],
    "selectBoxes": [{
      type: _core.Input
    }],
    "navigate": [{
      type: _core.Output
    }],
    "select": [{
      type: _core.Output
    }]
  };
  return NgbDatepickerNavigation;
}();

exports.NgbDatepickerNavigation = NgbDatepickerNavigation;

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbDatepicker", {
  enumerable: true,
  get: function get() {
    return _datepicker.NgbDatepicker;
  }
});
Object.defineProperty(exports, "NgbDatepickerMonthView", {
  enumerable: true,
  get: function get() {
    return _datepickerMonthView.NgbDatepickerMonthView;
  }
});
Object.defineProperty(exports, "NgbDatepickerNavigation", {
  enumerable: true,
  get: function get() {
    return _datepickerNavigation.NgbDatepickerNavigation;
  }
});
Object.defineProperty(exports, "NgbInputDatepicker", {
  enumerable: true,
  get: function get() {
    return _datepickerInput.NgbInputDatepicker;
  }
});
Object.defineProperty(exports, "NgbDatepickerDayView", {
  enumerable: true,
  get: function get() {
    return _datepickerDayView.NgbDatepickerDayView;
  }
});
Object.defineProperty(exports, "NgbDatepickerI18n", {
  enumerable: true,
  get: function get() {
    return _datepickerI18n.NgbDatepickerI18n;
  }
});
Object.defineProperty(exports, "NgbCalendar", {
  enumerable: true,
  get: function get() {
    return _ngbCalendar.NgbCalendar;
  }
});
Object.defineProperty(exports, "NgbDateParserFormatter", {
  enumerable: true,
  get: function get() {
    return _ngbDateParserFormatter.NgbDateParserFormatter;
  }
});
Object.defineProperty(exports, "NgbDateAdapter", {
  enumerable: true,
  get: function get() {
    return _ngbDateAdapter.NgbDateAdapter;
  }
});
Object.defineProperty(exports, "NgbDatepickerNavigationSelect", {
  enumerable: true,
  get: function get() {
    return _datepickerNavigationSelect.NgbDatepickerNavigationSelect;
  }
});
Object.defineProperty(exports, "NgbDatepickerConfig", {
  enumerable: true,
  get: function get() {
    return _datepickerConfig.NgbDatepickerConfig;
  }
});
Object.defineProperty(exports, "NgbCalendarIslamicCivil", {
  enumerable: true,
  get: function get() {
    return _ngbCalendarIslamicCivil.NgbCalendarIslamicCivil;
  }
});
Object.defineProperty(exports, "NgbCalendarIslamicUmalqura", {
  enumerable: true,
  get: function get() {
    return _ngbCalendarIslamicUmalqura.NgbCalendarIslamicUmalqura;
  }
});
Object.defineProperty(exports, "NgbDateNativeAdapter", {
  enumerable: true,
  get: function get() {
    return _ngbDateNativeAdapter.NgbDateNativeAdapter;
  }
});
exports.NgbDatepickerModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _forms = __webpack_require__(34);

var _datepicker = __webpack_require__(150);

var _datepickerMonthView = __webpack_require__(338);

var _datepickerNavigation = __webpack_require__(340);

var _datepickerInput = __webpack_require__(336);

var _datepickerDayView = __webpack_require__(335);

var _datepickerI18n = __webpack_require__(51);

var _ngbCalendar = __webpack_require__(52);

var _ngbDateParserFormatter = __webpack_require__(153);

var _ngbDateAdapter = __webpack_require__(82);

var _datepickerNavigationSelect = __webpack_require__(339);

var _datepickerConfig = __webpack_require__(147);

var _ngbCalendarIslamicCivil = __webpack_require__(152);

var _ngbCalendarIslamicUmalqura = __webpack_require__(342);

var _ngbDateNativeAdapter = __webpack_require__(334);

var NgbDatepickerModule =
/** @class */
function () {
  function NgbDatepickerModule() {}

  NgbDatepickerModule.forRoot = function () {
    return {
      ngModule: NgbDatepickerModule,
      providers: [{
        provide: _ngbCalendar.NgbCalendar,
        useClass: _ngbCalendar.NgbCalendarGregorian
      }, {
        provide: _datepickerI18n.NgbDatepickerI18n,
        useClass: _datepickerI18n.NgbDatepickerI18nDefault
      }, {
        provide: _ngbDateParserFormatter.NgbDateParserFormatter,
        useClass: _ngbDateParserFormatter.NgbDateISOParserFormatter
      }, {
        provide: _ngbDateAdapter.NgbDateAdapter,
        useClass: _ngbDateAdapter.NgbDateStructAdapter
      }, _datepickerConfig.NgbDatepickerConfig, _common.DatePipe]
    };
  };

  NgbDatepickerModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_datepicker.NgbDatepicker, _datepickerMonthView.NgbDatepickerMonthView, _datepickerNavigation.NgbDatepickerNavigation, _datepickerNavigationSelect.NgbDatepickerNavigationSelect, _datepickerDayView.NgbDatepickerDayView, _datepickerInput.NgbInputDatepicker],
      exports: [_datepicker.NgbDatepicker, _datepickerInput.NgbInputDatepicker],
      imports: [_common.CommonModule, _forms.FormsModule],
      entryComponents: [_datepicker.NgbDatepicker]
    }]
  }];
  return NgbDatepickerModule;
}();

exports.NgbDatepickerModule = NgbDatepickerModule;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbCalendarIslamicUmalqura = void 0;

var _ngbCalendarIslamicCivil = __webpack_require__(152);

var _ngbCalendarHijri = __webpack_require__(151);

var _ngbDate = __webpack_require__(35);

var _core = __webpack_require__(0);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 * Umalqura calendar is one type of Hijri calendars used in islamic countries.
 * This Calendar is used by Saudi Arabia for administrative purpose.
 * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.
 * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types
 */
var GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);
var GREGORIAN_LAST_DATE = new Date(2174, 10, 25);
var HIJRI_BEGIN = 1300;
var HIJRI_END = 1600;
var ONE_DAY = 1000 * 60 * 60 * 24;
var ISLAMIC_CIVIL = new _ngbCalendarIslamicCivil.NgbCalendarIslamicCivil();
var MONTH_LENGTH = ['101010101010', '110101010100', '111011001001', '011011010100', '011011101010', '001101101100', '101010101101', '010101010101', '011010101001', '011110010010', '101110101001', '010111010100', '101011011010', '010101011100', '110100101101', '011010010101', '011101001010', '101101010100', '101101101010', '010110101101', '010010101110', '101001001111', '010100010111', '011010001011', '011010100101', '101011010101', '001011010110', '100101011011', '010010011101', '101001001101', '110100100110', '110110010101', '010110101100', '100110110110', '001010111010', '101001011011', '010100101011', '101010010101', '011011001010', '101011101001', '001011110100', '100101110110', '001010110110', '100101010110', '101011001010', '101110100100', '101111010010', '010111011001', '001011011100', '100101101101', '010101001101', '101010100101', '101101010010', '101110100101', '010110110100', '100110110110', '010101010111', '001010010111', '010101001011', '011010100011', '011101010010', '101101100101', '010101101010', '101010101011', '010100101011', '110010010101', '110101001010', '110110100101', '010111001010', '101011010110', '100101010111', '010010101011', '100101001011', '101010100101', '101101010010', '101101101010', '010101110101', '001001110110', '100010110111', '010001011011', '010101010101', '010110101001', '010110110100', '100111011010', '010011011101', '001001101110', '100100110110', '101010101010', '110101010100', '110110110010', '010111010101', '001011011010', '100101011011', '010010101011', '101001010101', '101101001001', '101101100100', '101101110001', '010110110100', '101010110101', '101001010101', '110100100101', '111010010010', '111011001001', '011011010100', '101011101001', '100101101011', '010010101011', '101010010011', '110101001001', '110110100100', '110110110010', '101010111001', '010010111010', '101001011011', '010100101011', '101010010101', '101100101010', '101101010101', '010101011100', '010010111101', '001000111101', '100100011101', '101010010101', '101101001010', '101101011010', '010101101101', '001010110110', '100100111011', '010010011011', '011001010101', '011010101001', '011101010100', '101101101010', '010101101100', '101010101101', '010101010101', '101100101001', '101110010010', '101110101001', '010111010100', '101011011010', '010101011010', '101010101011', '010110010101', '011101001001', '011101100100', '101110101010', '010110110101', '001010110110', '101001010110', '111001001101', '101100100101', '101101010010', '101101101010', '010110101101', '001010101110', '100100101111', '010010010111', '011001001011', '011010100101', '011010101100', '101011010110', '010101011101', '010010011101', '101001001101', '110100010110', '110110010101', '010110101010', '010110110101', '001011011010', '100101011011', '010010101101', '010110010101', '011011001010', '011011100100', '101011101010', '010011110101', '001010110110', '100101010110', '101010101010', '101101010100', '101111010010', '010111011001', '001011101010', '100101101101', '010010101101', '101010010101', '101101001010', '101110100101', '010110110010', '100110110101', '010011010110', '101010010111', '010101000111', '011010010011', '011101001001', '101101010101', '010101101010', '101001101011', '010100101011', '101010001011', '110101000110', '110110100011', '010111001010', '101011010110', '010011011011', '001001101011', '100101001011', '101010100101', '101101010010', '101101101001', '010101110101', '000101110110', '100010110111', '001001011011', '010100101011', '010101100101', '010110110100', '100111011010', '010011101101', '000101101101', '100010110110', '101010100110', '110101010010', '110110101001', '010111010100', '101011011010', '100101011011', '010010101011', '011001010011', '011100101001', '011101100010', '101110101001', '010110110010', '101010110101', '010101010101', '101100100101', '110110010010', '111011001001', '011011010010', '101011101001', '010101101011', '010010101011', '101001010101', '110100101001', '110101010100', '110110101010', '100110110101', '010010111010', '101000111011', '010010011011', '101001001101', '101010101010', '101011010101', '001011011010', '100101011101', '010001011110', '101000101110', '110010011010', '110101010101', '011010110010', '011010111001', '010010111010', '101001011101', '010100101101', '101010010101', '101101010010', '101110101000', '101110110100', '010110111001', '001011011010', '100101011010', '101101001010', '110110100100', '111011010001', '011011101000', '101101101010', '010101101101', '010100110101', '011010010101', '110101001010', '110110101000', '110111010100', '011011011010', '010101011011', '001010011101', '011000101011', '101100010101', '101101001010', '101110010101', '010110101010', '101010101110', '100100101110', '110010001111', '010100100111', '011010010101', '011010101010', '101011010110', '010101011101', '001010011101'];

function getDaysDiff(date1, date2) {
  var diff = Math.abs(date1.getTime() - date2.getTime());
  return Math.round(diff / ONE_DAY);
}

var NgbCalendarIslamicUmalqura =
/** @class */
function (_super) {
  __extends(NgbCalendarIslamicUmalqura, _super);

  function NgbCalendarIslamicUmalqura() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.
  * `gdate` is s JS Date to be converted to Hijri.
  */

  /**
    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.
    * `gdate` is s JS Date to be converted to Hijri.
    */


  NgbCalendarIslamicUmalqura.prototype.fromGregorian =
  /**
  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.
  * `gdate` is s JS Date to be converted to Hijri.
  */
  function (gDate) {
    var hDay = 1,
        hMonth = 0,
        hYear = 1300;
    var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);

    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {
      var year = 1300;

      for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {
        for (var j = 0; j < 12; j++) {
          var numOfDays = +MONTH_LENGTH[i][j] + 29;

          if (daysDiff <= numOfDays) {
            hDay = daysDiff + 1;

            if (hDay > numOfDays) {
              hDay = 1;
              j++;
            }

            if (j > 11) {
              j = 0;
              year++;
            }

            hMonth = j;
            hYear = year;
            return new _ngbDate.NgbDate(hYear, hMonth + 1, hDay);
          }

          daysDiff = daysDiff - numOfDays;
        }
      }
    } else {
      return ISLAMIC_CIVIL.fromGregorian(gDate);
    }
  };
  /**
  * Converts the current Hijri date to Gregorian.
  */

  /**
    * Converts the current Hijri date to Gregorian.
    */


  NgbCalendarIslamicUmalqura.prototype.toGregorian =
  /**
  * Converts the current Hijri date to Gregorian.
  */
  function (hijriDate) {
    var hYear = hijriDate.year;
    var hMonth = hijriDate.month - 1;
    var hDay = hijriDate.day;
    var gDate = new Date(GREGORIAN_FIRST_DATE);
    var dayDiff = hDay - 1;

    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {
      for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {
        for (var m = 0; m < 12; m++) {
          dayDiff += +MONTH_LENGTH[y][m] + 29;
        }
      }

      for (var m = 0; m < hMonth; m++) {
        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;
      }

      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);
    } else {
      gDate = ISLAMIC_CIVIL.toGregorian(hijriDate);
    }

    return gDate;
  };
  /**
  * Returns the number of days in a specific Hijri month.
  * `month` is 1 for Muharram, 2 for Safar, etc.
  * `year` is any Hijri year.
  */

  /**
    * Returns the number of days in a specific Hijri month.
    * `month` is 1 for Muharram, 2 for Safar, etc.
    * `year` is any Hijri year.
    */


  NgbCalendarIslamicUmalqura.prototype.getDaysInIslamicMonth =
  /**
  * Returns the number of days in a specific Hijri month.
  * `month` is 1 for Muharram, 2 for Safar, etc.
  * `year` is any Hijri year.
  */
  function (month, year) {
    if (year >= HIJRI_BEGIN && year <= HIJRI_END) {
      var pos = year - HIJRI_BEGIN;
      return MONTH_LENGTH[pos].charAt(month - 1) === '1' ? 30 : 29;
    }

    return ISLAMIC_CIVIL.getDaysInIslamicMonth(month, year);
  };

  NgbCalendarIslamicUmalqura.prototype.getNext = function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    date = _ngbDate.NgbDate.from(date);

    switch (period) {
      case 'y':
        date = this.setYear(date, date.year + number);
        date.month = 1;
        date.day = 1;
        return date;

      case 'm':
        date = this.setMonth(date, date.month + number);
        date.day = 1;
        return date;

      case 'd':
        return this.setDay(date, date.day + number);

      default:
        return date;
    }
  };

  NgbCalendarIslamicUmalqura.prototype.getPrev = function (date, period, number) {
    if (period === void 0) {
      period = 'd';
    }

    if (number === void 0) {
      number = 1;
    }

    return this.getNext(date, period, -number);
  };

  NgbCalendarIslamicUmalqura.prototype.getWeekday = function (date) {
    var day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7

    return day === 0 ? 7 : day;
  };

  NgbCalendarIslamicUmalqura.prototype.getWeekNumber = function (week, firstDayOfWeek) {
    // in JS Date Sun=0, in ISO 8601 Sun=7
    if (firstDayOfWeek === 7) {
      firstDayOfWeek = 0;
    }

    var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;
    var date = week[thursdayIndex];
    var jsDate = this.toGregorian(date);
    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday

    var time = jsDate.getTime();
    var MuhDate = this.toGregorian(new _ngbDate.NgbDate(date.year, 1, 1)); // Compare with Muharram 1

    return Math.floor(Math.round((time - MuhDate.getTime()) / ONE_DAY) / 7) + 1;
  };

  NgbCalendarIslamicUmalqura.prototype.getToday = function () {
    return this.fromGregorian(new Date());
  };

  NgbCalendarIslamicUmalqura.decorators = [{
    type: _core.Injectable
  }];
  return NgbCalendarIslamicUmalqura;
}(_ngbCalendarHijri.NgbCalendarHijri);

exports.NgbCalendarIslamicUmalqura = NgbCalendarIslamicUmalqura;

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbDropdown = exports.NgbDropdownToggle = exports.NgbDropdownAnchor = exports.NgbDropdownMenu = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _rxjs = __webpack_require__(31);

var _operators = __webpack_require__(33);

var _dropdownConfig = __webpack_require__(154);

var _positioning = __webpack_require__(64);

var _key = __webpack_require__(53);

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 */
var NgbDropdownMenu =
/** @class */
function () {
  function NgbDropdownMenu(dropdown, _elementRef, _renderer) {
    this.dropdown = dropdown;
    this._elementRef = _elementRef;
    this._renderer = _renderer;
    this.placement = 'bottom';
    this.isOpen = false;
  }

  NgbDropdownMenu.prototype.isEventFrom = function ($event) {
    return this._elementRef.nativeElement.contains($event.target);
  };

  NgbDropdownMenu.prototype.position = function (triggerEl, placement) {
    this.applyPlacement((0, _positioning.positionElements)(triggerEl, this._elementRef.nativeElement, placement));
  };

  NgbDropdownMenu.prototype.applyPlacement = function (_placement) {
    // remove the current placement classes
    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');

    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');

    this.placement = _placement;
    /**
         * apply the new placement
         * in case of top use up-arrow or down-arrow otherwise
         */

    if (_placement.search('^top') !== -1) {
      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');
    } else {
      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');
    }
  };

  NgbDropdownMenu.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbDropdownMenu]',
      host: {
        '[class.dropdown-menu]': 'true',
        '[class.show]': 'dropdown.isOpen()',
        '[attr.x-placement]': 'placement'
      }
    }]
  }];
  /** @nocollapse */

  NgbDropdownMenu.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [(0, _core.forwardRef)(function () {
          return NgbDropdown;
        })]
      }]
    }, {
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }];
  };

  return NgbDropdownMenu;
}();

exports.NgbDropdownMenu = NgbDropdownMenu;

/**
 * Marks an element to which dropdown menu will be anchored. This is a simple version
 * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but
 * doesn't listen to click events to toggle dropdown menu thus enabling support for
 * events other than click.
 *
 * @since 1.1.0
 */
var NgbDropdownAnchor =
/** @class */
function () {
  function NgbDropdownAnchor(dropdown, _elementRef) {
    this.dropdown = dropdown;
    this._elementRef = _elementRef;
    this.anchorEl = _elementRef.nativeElement;
  }

  NgbDropdownAnchor.prototype.isEventFrom = function ($event) {
    return this._elementRef.nativeElement.contains($event.target);
  };

  NgbDropdownAnchor.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbDropdownAnchor]',
      host: {
        'class': 'dropdown-toggle',
        'aria-haspopup': 'true',
        '[attr.aria-expanded]': 'dropdown.isOpen()'
      }
    }]
  }];
  /** @nocollapse */

  NgbDropdownAnchor.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [(0, _core.forwardRef)(function () {
          return NgbDropdown;
        })]
      }]
    }, {
      type: _core.ElementRef
    }];
  };

  return NgbDropdownAnchor;
}();

exports.NgbDropdownAnchor = NgbDropdownAnchor;

/**
 * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an
 * alternative.
 */
var NgbDropdownToggle =
/** @class */
function (_super) {
  __extends(NgbDropdownToggle, _super);

  function NgbDropdownToggle(dropdown, elementRef) {
    return _super.call(this, dropdown, elementRef) || this;
  }

  NgbDropdownToggle.prototype.toggleOpen = function () {
    this.dropdown.toggle();
  };

  NgbDropdownToggle.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbDropdownToggle]',
      host: {
        'class': 'dropdown-toggle',
        'aria-haspopup': 'true',
        '[attr.aria-expanded]': 'dropdown.isOpen()',
        '(click)': 'toggleOpen()'
      },
      providers: [{
        provide: NgbDropdownAnchor,
        useExisting: (0, _core.forwardRef)(function () {
          return NgbDropdownToggle;
        })
      }]
    }]
  }];
  /** @nocollapse */

  NgbDropdownToggle.ctorParameters = function () {
    return [{
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [(0, _core.forwardRef)(function () {
          return NgbDropdown;
        })]
      }]
    }, {
      type: _core.ElementRef
    }];
  };

  return NgbDropdownToggle;
}(NgbDropdownAnchor);

exports.NgbDropdownToggle = NgbDropdownToggle;

/**
 * Transforms a node into a dropdown.
 */
var NgbDropdown =
/** @class */
function () {
  function NgbDropdown(_changeDetector, config, _document, _ngZone) {
    var _this = this;

    this._changeDetector = _changeDetector;
    this._document = _document;
    this._ngZone = _ngZone;
    this._closed$ = new _rxjs.Subject();
    /**
       *  Defines whether or not the dropdown-menu is open initially.
       */

    this._open = false;
    /**
       *  An event fired when the dropdown is opened or closed.
       *  Event's payload equals whether dropdown is open.
       */

    this.openChange = new _core.EventEmitter();
    this.placement = config.placement;
    this.autoClose = config.autoClose;
    this._zoneSubscription = _ngZone.onStable.subscribe(function () {
      _this._positionMenu();
    });
  }

  NgbDropdown.prototype.ngOnInit = function () {
    if (this._menu) {
      this._menu.applyPlacement(Array.isArray(this.placement) ? this.placement[0] : this.placement);
    }

    if (this._open) {
      this._setCloseHandlers();
    }
  };
  /**
   * Checks if the dropdown menu is open or not.
   */

  /**
     * Checks if the dropdown menu is open or not.
     */


  NgbDropdown.prototype.isOpen =
  /**
  * Checks if the dropdown menu is open or not.
  */
  function () {
    return this._open;
  };
  /**
   * Opens the dropdown menu of a given navbar or tabbed navigation.
   */

  /**
     * Opens the dropdown menu of a given navbar or tabbed navigation.
     */


  NgbDropdown.prototype.open =
  /**
  * Opens the dropdown menu of a given navbar or tabbed navigation.
  */
  function () {
    if (!this._open) {
      this._open = true;

      this._positionMenu();

      this.openChange.emit(true);

      this._setCloseHandlers();
    }
  };

  NgbDropdown.prototype._setCloseHandlers = function () {
    var _this = this;

    if (this.autoClose) {
      this._ngZone.runOutsideAngular(function () {
        var escapes$ = (0, _rxjs.fromEvent)(_this._document, 'keyup').pipe((0, _operators.takeUntil)(_this._closed$), (0, _operators.filter)(function (event) {
          return event.which === _key.Key.Escape;
        }));
        var clicks$ = (0, _rxjs.fromEvent)(_this._document, 'click').pipe((0, _operators.takeUntil)(_this._closed$), (0, _operators.filter)(function (event) {
          return _this._shouldCloseFromClick(event);
        }));
        (0, _rxjs.race)([escapes$, clicks$]).pipe((0, _operators.takeUntil)(_this._closed$)).subscribe(function () {
          return _this._ngZone.run(function () {
            _this.close();

            _this._changeDetector.markForCheck();
          });
        });
      });
    }
  };
  /**
   * Closes the dropdown menu of a given navbar or tabbed navigation.
   */

  /**
     * Closes the dropdown menu of a given navbar or tabbed navigation.
     */


  NgbDropdown.prototype.close =
  /**
  * Closes the dropdown menu of a given navbar or tabbed navigation.
  */
  function () {
    if (this._open) {
      this._open = false;

      this._closed$.next();

      this.openChange.emit(false);
    }
  };
  /**
   * Toggles the dropdown menu of a given navbar or tabbed navigation.
   */

  /**
     * Toggles the dropdown menu of a given navbar or tabbed navigation.
     */


  NgbDropdown.prototype.toggle =
  /**
  * Toggles the dropdown menu of a given navbar or tabbed navigation.
  */
  function () {
    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  };

  NgbDropdown.prototype._shouldCloseFromClick = function (event) {
    if (event.button !== 2 && !this._isEventFromToggle(event)) {
      if (this.autoClose === true) {
        return true;
      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {
        return true;
      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {
        return true;
      }
    }

    return false;
  };

  NgbDropdown.prototype.ngOnDestroy = function () {
    this._closed$.next();

    this._zoneSubscription.unsubscribe();
  };

  NgbDropdown.prototype._isEventFromToggle = function ($event) {
    return this._anchor.isEventFrom($event);
  };

  NgbDropdown.prototype._isEventFromMenu = function ($event) {
    return this._menu ? this._menu.isEventFrom($event) : false;
  };

  NgbDropdown.prototype._positionMenu = function () {
    if (this.isOpen() && this._menu) {
      this._menu.position(this._anchor.anchorEl, this.placement);
    }
  };

  NgbDropdown.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbDropdown]',
      exportAs: 'ngbDropdown',
      host: {
        '[class.show]': 'isOpen()'
      }
    }]
  }];
  /** @nocollapse */

  NgbDropdown.ctorParameters = function () {
    return [{
      type: _core.ChangeDetectorRef
    }, {
      type: _dropdownConfig.NgbDropdownConfig
    }, {
      type: undefined,
      decorators: [{
        type: _core.Inject,
        args: [_common.DOCUMENT]
      }]
    }, {
      type: _core.NgZone
    }];
  };

  NgbDropdown.propDecorators = {
    "_menu": [{
      type: _core.ContentChild,
      args: [NgbDropdownMenu]
    }],
    "_anchor": [{
      type: _core.ContentChild,
      args: [NgbDropdownAnchor]
    }],
    "autoClose": [{
      type: _core.Input
    }],
    "_open": [{
      type: _core.Input,
      args: ['open']
    }],
    "placement": [{
      type: _core.Input
    }],
    "openChange": [{
      type: _core.Output
    }]
  };
  return NgbDropdown;
}();

exports.NgbDropdown = NgbDropdown;

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbDropdown", {
  enumerable: true,
  get: function get() {
    return _dropdown.NgbDropdown;
  }
});
Object.defineProperty(exports, "NgbDropdownToggle", {
  enumerable: true,
  get: function get() {
    return _dropdown.NgbDropdownToggle;
  }
});
Object.defineProperty(exports, "NgbDropdownMenu", {
  enumerable: true,
  get: function get() {
    return _dropdown.NgbDropdownMenu;
  }
});
Object.defineProperty(exports, "NgbDropdownConfig", {
  enumerable: true,
  get: function get() {
    return _dropdownConfig.NgbDropdownConfig;
  }
});
exports.NgbDropdownModule = void 0;

var _core = __webpack_require__(0);

var _dropdown = __webpack_require__(343);

var _dropdownConfig = __webpack_require__(154);

var NGB_DROPDOWN_DIRECTIVES = [_dropdown.NgbDropdown, _dropdown.NgbDropdownAnchor, _dropdown.NgbDropdownToggle, _dropdown.NgbDropdownMenu];

var NgbDropdownModule =
/** @class */
function () {
  function NgbDropdownModule() {}

  NgbDropdownModule.forRoot = function () {
    return {
      ngModule: NgbDropdownModule,
      providers: [_dropdownConfig.NgbDropdownConfig]
    };
  };

  NgbDropdownModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: NGB_DROPDOWN_DIRECTIVES,
      exports: NGB_DROPDOWN_DIRECTIVES
    }]
  }];
  return NgbDropdownModule;
}();

exports.NgbDropdownModule = NgbDropdownModule;

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbModal = void 0;

var _core = __webpack_require__(0);

var _modalStack2 = __webpack_require__(158);

/**
 * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to
 * the "open" method!
 */
var NgbModal =
/** @class */
function () {
  function NgbModal(_moduleCFR, _injector, _modalStack) {
    this._moduleCFR = _moduleCFR;
    this._injector = _injector;
    this._modalStack = _modalStack;
  }
  /**
   * Opens a new modal window with the specified content and using supplied options. Content can be provided
   * as a TemplateRef or a component type. If you pass a component type as content than instances of those
   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the
   * NgbActiveModal class to close / dismiss modals from "inside" of a component.
   */

  /**
     * Opens a new modal window with the specified content and using supplied options. Content can be provided
     * as a TemplateRef or a component type. If you pass a component type as content than instances of those
     * components can be injected with an instance of the NgbActiveModal class. You can use methods on the
     * NgbActiveModal class to close / dismiss modals from "inside" of a component.
     */


  NgbModal.prototype.open =
  /**
  * Opens a new modal window with the specified content and using supplied options. Content can be provided
  * as a TemplateRef or a component type. If you pass a component type as content than instances of those
  * components can be injected with an instance of the NgbActiveModal class. You can use methods on the
  * NgbActiveModal class to close / dismiss modals from "inside" of a component.
  */
  function (content, options) {
    if (options === void 0) {
      options = {};
    }

    return this._modalStack.open(this._moduleCFR, this._injector, content, options);
  };

  NgbModal.decorators = [{
    type: _core.Injectable
  }];
  /** @nocollapse */

  NgbModal.ctorParameters = function () {
    return [{
      type: _core.ComponentFactoryResolver
    }, {
      type: _core.Injector
    }, {
      type: _modalStack2.NgbModalStack
    }];
  };

  return NgbModal;
}();

exports.NgbModal = NgbModal;

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbModal", {
  enumerable: true,
  get: function get() {
    return _modal.NgbModal;
  }
});
Object.defineProperty(exports, "NgbModalRef", {
  enumerable: true,
  get: function get() {
    return _modalRef.NgbModalRef;
  }
});
Object.defineProperty(exports, "NgbActiveModal", {
  enumerable: true,
  get: function get() {
    return _modalRef.NgbActiveModal;
  }
});
Object.defineProperty(exports, "ModalDismissReasons", {
  enumerable: true,
  get: function get() {
    return _modalDismissReasons.ModalDismissReasons;
  }
});
exports.NgbModalModule = void 0;

var _core = __webpack_require__(0);

var _modalBackdrop = __webpack_require__(155);

var _modalWindow = __webpack_require__(159);

var _modalStack = __webpack_require__(158);

var _modal = __webpack_require__(345);

var _scrollbar = __webpack_require__(172);

var _modalRef = __webpack_require__(157);

var _modalDismissReasons = __webpack_require__(156);

var NgbModalModule =
/** @class */
function () {
  function NgbModalModule() {}

  NgbModalModule.forRoot = function () {
    return {
      ngModule: NgbModalModule,
      providers: [_modal.NgbModal, _modalStack.NgbModalStack, _scrollbar.ScrollBar]
    };
  };

  NgbModalModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_modalBackdrop.NgbModalBackdrop, _modalWindow.NgbModalWindow],
      entryComponents: [_modalBackdrop.NgbModalBackdrop, _modalWindow.NgbModalWindow],
      providers: [_modal.NgbModal]
    }]
  }];
  return NgbModalModule;
}();

exports.NgbModalModule = NgbModalModule;

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbPagination = void 0;

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var _paginationConfig = __webpack_require__(160);

/**
 * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!
 */
var NgbPagination =
/** @class */
function () {
  function NgbPagination(config) {
    this.pageCount = 0;
    this.pages = [];
    /**
       *  Current page. Page numbers start with 1
       */

    this.page = 1;
    /**
       *  An event fired when the page is changed.
       *  Event's payload equals to the newly selected page.
       *  Will fire only if collection size is set and all values are valid.
       *  Page numbers start with 1
       */

    this.pageChange = new _core.EventEmitter(true);
    this.disabled = config.disabled;
    this.boundaryLinks = config.boundaryLinks;
    this.directionLinks = config.directionLinks;
    this.ellipses = config.ellipses;
    this.maxSize = config.maxSize;
    this.pageSize = config.pageSize;
    this.rotate = config.rotate;
    this.size = config.size;
  }

  NgbPagination.prototype.hasPrevious = function () {
    return this.page > 1;
  };

  NgbPagination.prototype.hasNext = function () {
    return this.page < this.pageCount;
  };

  NgbPagination.prototype.selectPage = function (pageNumber) {
    this._updatePages(pageNumber);
  };

  NgbPagination.prototype.ngOnChanges = function (changes) {
    this._updatePages(this.page);
  };

  NgbPagination.prototype.isEllipsis = function (pageNumber) {
    return pageNumber === -1;
  };
  /**
   * Appends ellipses and first/last page number to the displayed pages
   */

  /**
     * Appends ellipses and first/last page number to the displayed pages
     */


  NgbPagination.prototype._applyEllipses =
  /**
  * Appends ellipses and first/last page number to the displayed pages
  */
  function (start, end) {
    if (this.ellipses) {
      if (start > 0) {
        if (start > 1) {
          this.pages.unshift(-1);
        }

        this.pages.unshift(1);
      }

      if (end < this.pageCount) {
        if (end < this.pageCount - 1) {
          this.pages.push(-1);
        }

        this.pages.push(this.pageCount);
      }
    }
  };
  /**
   * Rotates page numbers based on maxSize items visible.
   * Currently selected page stays in the middle:
   *
   * Ex. for selected page = 6:
   * [5,*6*,7] for maxSize = 3
   * [4,5,*6*,7] for maxSize = 4
   */

  /**
     * Rotates page numbers based on maxSize items visible.
     * Currently selected page stays in the middle:
     *
     * Ex. for selected page = 6:
     * [5,*6*,7] for maxSize = 3
     * [4,5,*6*,7] for maxSize = 4
     */


  NgbPagination.prototype._applyRotation =
  /**
  * Rotates page numbers based on maxSize items visible.
  * Currently selected page stays in the middle:
  *
  * Ex. for selected page = 6:
  * [5,*6*,7] for maxSize = 3
  * [4,5,*6*,7] for maxSize = 4
  */
  function () {
    var start = 0;
    var end = this.pageCount;
    var leftOffset = Math.floor(this.maxSize / 2);
    var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;

    if (this.page <= leftOffset) {
      // very beginning, no rotation -> [0..maxSize]
      end = this.maxSize;
    } else if (this.pageCount - this.page < leftOffset) {
      // very end, no rotation -> [len-maxSize..len]
      start = this.pageCount - this.maxSize;
    } else {
      // rotate
      start = this.page - leftOffset - 1;
      end = this.page + rightOffset;
    }

    return [start, end];
  };
  /**
   * Paginates page numbers based on maxSize items per page
   */

  /**
     * Paginates page numbers based on maxSize items per page
     */


  NgbPagination.prototype._applyPagination =
  /**
  * Paginates page numbers based on maxSize items per page
  */
  function () {
    var page = Math.ceil(this.page / this.maxSize) - 1;
    var start = page * this.maxSize;
    var end = start + this.maxSize;
    return [start, end];
  };

  NgbPagination.prototype._setPageInRange = function (newPageNo) {
    var prevPageNo = this.page;
    this.page = (0, _util.getValueInRange)(newPageNo, this.pageCount, 1);

    if (this.page !== prevPageNo && (0, _util.isNumber)(this.collectionSize)) {
      this.pageChange.emit(this.page);
    }
  };

  NgbPagination.prototype._updatePages = function (newPage) {
    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);

    if (!(0, _util.isNumber)(this.pageCount)) {
      this.pageCount = 0;
    } // fill-in model needed to render pages


    this.pages.length = 0;

    for (var i = 1; i <= this.pageCount; i++) {
      this.pages.push(i);
    } // set page within 1..max range


    this._setPageInRange(newPage); // apply maxSize if necessary


    if (this.maxSize > 0 && this.pageCount > this.maxSize) {
      var start = 0;
      var end = this.pageCount; // either paginating or rotating page numbers

      if (this.rotate) {
        _a = this._applyRotation(), start = _a[0], end = _a[1];
      } else {
        _b = this._applyPagination(), start = _b[0], end = _b[1];
      }

      this.pages = this.pages.slice(start, end); // adding ellipses

      this._applyEllipses(start, end);
    }

    var _a, _b;
  };

  NgbPagination.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-pagination',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      host: {
        'role': 'navigation'
      },
      template: "\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(page-1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"!!selectPage(pageNumber)\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(page+1)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(pageCount)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  "
    }]
  }];
  /** @nocollapse */

  NgbPagination.ctorParameters = function () {
    return [{
      type: _paginationConfig.NgbPaginationConfig
    }];
  };

  NgbPagination.propDecorators = {
    "disabled": [{
      type: _core.Input
    }],
    "boundaryLinks": [{
      type: _core.Input
    }],
    "directionLinks": [{
      type: _core.Input
    }],
    "ellipses": [{
      type: _core.Input
    }],
    "rotate": [{
      type: _core.Input
    }],
    "collectionSize": [{
      type: _core.Input
    }],
    "maxSize": [{
      type: _core.Input
    }],
    "page": [{
      type: _core.Input
    }],
    "pageSize": [{
      type: _core.Input
    }],
    "pageChange": [{
      type: _core.Output
    }],
    "size": [{
      type: _core.Input
    }]
  };
  return NgbPagination;
}();

exports.NgbPagination = NgbPagination;

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbPagination", {
  enumerable: true,
  get: function get() {
    return _pagination.NgbPagination;
  }
});
Object.defineProperty(exports, "NgbPaginationConfig", {
  enumerable: true,
  get: function get() {
    return _paginationConfig.NgbPaginationConfig;
  }
});
exports.NgbPaginationModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _pagination = __webpack_require__(347);

var _paginationConfig = __webpack_require__(160);

var NgbPaginationModule =
/** @class */
function () {
  function NgbPaginationModule() {}

  NgbPaginationModule.forRoot = function () {
    return {
      ngModule: NgbPaginationModule,
      providers: [_paginationConfig.NgbPaginationConfig]
    };
  };

  NgbPaginationModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_pagination.NgbPagination],
      exports: [_pagination.NgbPagination],
      imports: [_common.CommonModule]
    }]
  }];
  return NgbPaginationModule;
}();

exports.NgbPaginationModule = NgbPaginationModule;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbPopover = exports.NgbPopoverWindow = void 0;

var _core = __webpack_require__(0);

var _triggers = __webpack_require__(173);

var _positioning = __webpack_require__(64);

var _popup = __webpack_require__(83);

var _popoverConfig = __webpack_require__(161);

var nextId = 0;

var NgbPopoverWindow =
/** @class */
function () {
  function NgbPopoverWindow(_element, _renderer) {
    this._element = _element;
    this._renderer = _renderer;
    this.placement = 'top';
  }

  NgbPopoverWindow.prototype.applyPlacement = function (_placement) {
    // remove the current placement classes
    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);

    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString()); // set the new placement classes


    this.placement = _placement; // apply the new placement

    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);

    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());
  };

  NgbPopoverWindow.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-popover-window',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      host: {
        '[class]': '"popover bs-popover-" + placement.split("-")[0]+" bs-popover-" + placement + (popoverClass ? " " + popoverClass : "")',
        'role': 'tooltip',
        '[id]': 'id'
      },
      template: "\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\">{{title}}</h3><div class=\"popover-body\"><ng-content></ng-content></div>",
      styles: ["\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: 50%;\n      margin-left: -5px;\n    }\n\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\n      left: 2em;\n    }\n\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\n      left: auto;\n      right: 2em;\n    }\n\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: 50%;\n      margin-top: -5px;\n    }\n\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\n      top: 0.7em;\n    }\n\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\n      top: auto;\n      bottom: 0.7em;\n    }\n  "]
    }]
  }];
  /** @nocollapse */

  NgbPopoverWindow.ctorParameters = function () {
    return [{
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }];
  };

  NgbPopoverWindow.propDecorators = {
    "placement": [{
      type: _core.Input
    }],
    "title": [{
      type: _core.Input
    }],
    "id": [{
      type: _core.Input
    }],
    "popoverClass": [{
      type: _core.Input
    }]
  };
  return NgbPopoverWindow;
}();

exports.NgbPopoverWindow = NgbPopoverWindow;

/**
 * A lightweight, extensible directive for fancy popover creation.
 */
var NgbPopover =
/** @class */
function () {
  function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {
    var _this = this;

    this._elementRef = _elementRef;
    this._renderer = _renderer;
    /**
       * Emits an event when the popover is shown
       */

    this.shown = new _core.EventEmitter();
    /**
       * Emits an event when the popover is hidden
       */

    this.hidden = new _core.EventEmitter();
    this._ngbPopoverWindowId = "ngb-popover-" + nextId++;
    this.placement = config.placement;
    this.triggers = config.triggers;
    this.container = config.container;
    this.disablePopover = config.disablePopover;
    this.popoverClass = config.popoverClass;
    this._popupService = new _popup.PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);
    this._zoneSubscription = ngZone.onStable.subscribe(function () {
      if (_this._windowRef) {
        _this._windowRef.instance.applyPlacement((0, _positioning.positionElements)(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));
      }
    });
  }

  NgbPopover.prototype._isDisabled = function () {
    if (this.disablePopover) {
      return true;
    }

    if (!this.ngbPopover && !this.popoverTitle) {
      return true;
    }

    return false;
  };
  /**
   * Opens an element’s popover. This is considered a “manual” triggering of the popover.
   * The context is an optional value to be injected into the popover template when it is created.
   */

  /**
     * Opens an element’s popover. This is considered a “manual” triggering of the popover.
     * The context is an optional value to be injected into the popover template when it is created.
     */


  NgbPopover.prototype.open =
  /**
  * Opens an element’s popover. This is considered a “manual” triggering of the popover.
  * The context is an optional value to be injected into the popover template when it is created.
  */
  function (context) {
    if (!this._windowRef && !this._isDisabled()) {
      this._windowRef = this._popupService.open(this.ngbPopover, context);
      this._windowRef.instance.title = this.popoverTitle;
      this._windowRef.instance.popoverClass = this.popoverClass;
      this._windowRef.instance.id = this._ngbPopoverWindowId;

      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);

      if (this.container === 'body') {
        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);
      } // apply styling to set basic css-classes on target element, before going for positioning


      this._windowRef.changeDetectorRef.detectChanges();

      this._windowRef.changeDetectorRef.markForCheck(); // position popover along the element


      this._windowRef.instance.applyPlacement((0, _positioning.positionElements)(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));

      this.shown.emit();
    }
  };
  /**
   * Closes an element’s popover. This is considered a “manual” triggering of the popover.
   */

  /**
     * Closes an element’s popover. This is considered a “manual” triggering of the popover.
     */


  NgbPopover.prototype.close =
  /**
  * Closes an element’s popover. This is considered a “manual” triggering of the popover.
  */
  function () {
    if (this._windowRef) {
      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');

      this._popupService.close();

      this._windowRef = null;
      this.hidden.emit();
    }
  };
  /**
   * Toggles an element’s popover. This is considered a “manual” triggering of the popover.
   */

  /**
     * Toggles an element’s popover. This is considered a “manual” triggering of the popover.
     */


  NgbPopover.prototype.toggle =
  /**
  * Toggles an element’s popover. This is considered a “manual” triggering of the popover.
  */
  function () {
    if (this._windowRef) {
      this.close();
    } else {
      this.open();
    }
  };
  /**
   * Returns whether or not the popover is currently being shown
   */

  /**
     * Returns whether or not the popover is currently being shown
     */


  NgbPopover.prototype.isOpen =
  /**
  * Returns whether or not the popover is currently being shown
  */
  function () {
    return this._windowRef != null;
  };

  NgbPopover.prototype.ngOnInit = function () {
    this._unregisterListenersFn = (0, _triggers.listenToTriggers)(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));
  };

  NgbPopover.prototype.ngOnChanges = function (changes) {
    // close popover if title and content become empty, or disablePopover set to true
    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {
      this.close();
    }
  };

  NgbPopover.prototype.ngOnDestroy = function () {
    this.close();

    this._unregisterListenersFn();

    this._zoneSubscription.unsubscribe();
  };

  NgbPopover.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbPopover]',
      exportAs: 'ngbPopover'
    }]
  }];
  /** @nocollapse */

  NgbPopover.ctorParameters = function () {
    return [{
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }, {
      type: _core.Injector
    }, {
      type: _core.ComponentFactoryResolver
    }, {
      type: _core.ViewContainerRef
    }, {
      type: _popoverConfig.NgbPopoverConfig
    }, {
      type: _core.NgZone
    }];
  };

  NgbPopover.propDecorators = {
    "ngbPopover": [{
      type: _core.Input
    }],
    "popoverTitle": [{
      type: _core.Input
    }],
    "placement": [{
      type: _core.Input
    }],
    "triggers": [{
      type: _core.Input
    }],
    "container": [{
      type: _core.Input
    }],
    "disablePopover": [{
      type: _core.Input
    }],
    "popoverClass": [{
      type: _core.Input
    }],
    "shown": [{
      type: _core.Output
    }],
    "hidden": [{
      type: _core.Output
    }]
  };
  return NgbPopover;
}();

exports.NgbPopover = NgbPopover;

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbPopover", {
  enumerable: true,
  get: function get() {
    return _popover.NgbPopover;
  }
});
Object.defineProperty(exports, "NgbPopoverConfig", {
  enumerable: true,
  get: function get() {
    return _popoverConfig.NgbPopoverConfig;
  }
});
exports.NgbPopoverModule = void 0;

var _core = __webpack_require__(0);

var _popover = __webpack_require__(349);

var _popoverConfig = __webpack_require__(161);

var NgbPopoverModule =
/** @class */
function () {
  function NgbPopoverModule() {}

  NgbPopoverModule.forRoot = function () {
    return {
      ngModule: NgbPopoverModule,
      providers: [_popoverConfig.NgbPopoverConfig]
    };
  };

  NgbPopoverModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_popover.NgbPopover, _popover.NgbPopoverWindow],
      exports: [_popover.NgbPopover],
      entryComponents: [_popover.NgbPopoverWindow]
    }]
  }];
  return NgbPopoverModule;
}();

exports.NgbPopoverModule = NgbPopoverModule;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbProgressbar = void 0;

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var _progressbarConfig = __webpack_require__(162);

/**
 * Directive that can be used to provide feedback on the progress of a workflow or an action.
 */
var NgbProgressbar =
/** @class */
function () {
  function NgbProgressbar(config) {
    /**
       * Current value to be displayed in the progressbar. Should be smaller or equal to "max" value.
       */
    this.value = 0;
    this.max = config.max;
    this.animated = config.animated;
    this.striped = config.striped;
    this.type = config.type;
    this.showValue = config.showValue;
    this.height = config.height;
  }

  NgbProgressbar.prototype.getValue = function () {
    return (0, _util.getValueInRange)(this.value, this.max);
  };

  NgbProgressbar.prototype.getPercentValue = function () {
    return 100 * this.getValue() / this.max;
  };

  NgbProgressbar.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-progressbar',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      template: "\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  "
    }]
  }];
  /** @nocollapse */

  NgbProgressbar.ctorParameters = function () {
    return [{
      type: _progressbarConfig.NgbProgressbarConfig
    }];
  };

  NgbProgressbar.propDecorators = {
    "max": [{
      type: _core.Input
    }],
    "animated": [{
      type: _core.Input
    }],
    "striped": [{
      type: _core.Input
    }],
    "showValue": [{
      type: _core.Input
    }],
    "type": [{
      type: _core.Input
    }],
    "value": [{
      type: _core.Input
    }],
    "height": [{
      type: _core.Input
    }]
  };
  return NgbProgressbar;
}();

exports.NgbProgressbar = NgbProgressbar;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbProgressbar", {
  enumerable: true,
  get: function get() {
    return _progressbar.NgbProgressbar;
  }
});
Object.defineProperty(exports, "NgbProgressbarConfig", {
  enumerable: true,
  get: function get() {
    return _progressbarConfig.NgbProgressbarConfig;
  }
});
exports.NgbProgressbarModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _progressbar = __webpack_require__(351);

var _progressbarConfig = __webpack_require__(162);

var NgbProgressbarModule =
/** @class */
function () {
  function NgbProgressbarModule() {}

  NgbProgressbarModule.forRoot = function () {
    return {
      ngModule: NgbProgressbarModule,
      providers: [_progressbarConfig.NgbProgressbarConfig]
    };
  };

  NgbProgressbarModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_progressbar.NgbProgressbar],
      exports: [_progressbar.NgbProgressbar],
      imports: [_common.CommonModule]
    }]
  }];
  return NgbProgressbarModule;
}();

exports.NgbProgressbarModule = NgbProgressbarModule;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbRating = void 0;

var _core = __webpack_require__(0);

var _ratingConfig = __webpack_require__(163);

var _util = __webpack_require__(14);

var _key = __webpack_require__(53);

var _forms = __webpack_require__(34);

var NGB_RATING_VALUE_ACCESSOR = {
  provide: _forms.NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbRating;
  }),
  multi: true
};
/**
 * Rating directive that will take care of visualising a star rating bar.
 */

var NgbRating =
/** @class */
function () {
  function NgbRating(config, _changeDetectorRef) {
    this._changeDetectorRef = _changeDetectorRef;
    this.contexts = [];
    this.disabled = false;
    /**
       * An event fired when a user is hovering over a given rating.
       * Event's payload equals to the rating being hovered over.
       */

    this.hover = new _core.EventEmitter();
    /**
       * An event fired when a user stops hovering over a given rating.
       * Event's payload equals to the rating of the last item being hovered over.
       */

    this.leave = new _core.EventEmitter();
    /**
       * An event fired when a user selects a new rating.
       * Event's payload equals to the newly selected rating.
       */

    this.rateChange = new _core.EventEmitter(true);

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this.max = config.max;
    this.readonly = config.readonly;
  }

  NgbRating.prototype.ariaValueText = function () {
    return this.nextRate + " out of " + this.max;
  };

  NgbRating.prototype.enter = function (value) {
    if (!this.readonly && !this.disabled) {
      this._updateState(value);
    }

    this.hover.emit(value);
  };

  NgbRating.prototype.handleBlur = function () {
    this.onTouched();
  };

  NgbRating.prototype.handleClick = function (value) {
    this.update(this.resettable && this.rate === value ? 0 : value);
  };

  NgbRating.prototype.handleKeyDown = function (event) {
    if (_key.Key[(0, _util.toString)(event.which)]) {
      event.preventDefault();

      switch (event.which) {
        case _key.Key.ArrowDown:
        case _key.Key.ArrowLeft:
          this.update(this.rate - 1);
          break;

        case _key.Key.ArrowUp:
        case _key.Key.ArrowRight:
          this.update(this.rate + 1);
          break;

        case _key.Key.Home:
          this.update(0);
          break;

        case _key.Key.End:
          this.update(this.max);
          break;
      }
    }
  };

  NgbRating.prototype.ngOnChanges = function (changes) {
    if (changes['rate']) {
      this.update(this.rate);
    }
  };

  NgbRating.prototype.ngOnInit = function () {
    this.contexts = Array.from({
      length: this.max
    }, function (v, k) {
      return {
        fill: 0,
        index: k
      };
    });

    this._updateState(this.rate);
  };

  NgbRating.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  NgbRating.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  NgbRating.prototype.reset = function () {
    this.leave.emit(this.nextRate);

    this._updateState(this.rate);
  };

  NgbRating.prototype.setDisabledState = function (isDisabled) {
    this.disabled = isDisabled;
  };

  NgbRating.prototype.update = function (value, internalChange) {
    if (internalChange === void 0) {
      internalChange = true;
    }

    var newRate = (0, _util.getValueInRange)(value, this.max, 0);

    if (!this.readonly && !this.disabled && this.rate !== newRate) {
      this.rate = newRate;
      this.rateChange.emit(this.rate);
    }

    if (internalChange) {
      this.onChange(this.rate);
      this.onTouched();
    }

    this._updateState(this.rate);
  };

  NgbRating.prototype.writeValue = function (value) {
    this.update(value, false);

    this._changeDetectorRef.markForCheck();
  };

  NgbRating.prototype._getFillValue = function (index) {
    var diff = this.nextRate - index;

    if (diff >= 1) {
      return 100;
    }

    if (diff < 1 && diff > 0) {
      return Number.parseInt((diff * 100).toFixed(2));
    }

    return 0;
  };

  NgbRating.prototype._updateState = function (nextValue) {
    var _this = this;

    this.nextRate = nextValue;
    this.contexts.forEach(function (context, index) {
      return context.fill = _this._getFillValue(index);
    });
  };

  NgbRating.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-rating',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      host: {
        'class': 'd-inline-flex',
        'tabindex': '0',
        'role': 'slider',
        'aria-valuemin': '0',
        '[attr.aria-valuemax]': 'max',
        '[attr.aria-valuenow]': 'nextRate',
        '[attr.aria-valuetext]': 'ariaValueText()',
        '[attr.aria-disabled]': 'readonly ? true : null',
        '(blur)': 'handleBlur()',
        '(keydown)': 'handleKeyDown($event)',
        '(mouseleave)': 'reset()'
      },
      template: "\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  ",
      providers: [NGB_RATING_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbRating.ctorParameters = function () {
    return [{
      type: _ratingConfig.NgbRatingConfig
    }, {
      type: _core.ChangeDetectorRef
    }];
  };

  NgbRating.propDecorators = {
    "max": [{
      type: _core.Input
    }],
    "rate": [{
      type: _core.Input
    }],
    "readonly": [{
      type: _core.Input
    }],
    "resettable": [{
      type: _core.Input
    }],
    "starTemplate": [{
      type: _core.Input
    }, {
      type: _core.ContentChild,
      args: [_core.TemplateRef]
    }],
    "hover": [{
      type: _core.Output
    }],
    "leave": [{
      type: _core.Output
    }],
    "rateChange": [{
      type: _core.Output
    }]
  };
  return NgbRating;
}();

exports.NgbRating = NgbRating;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbRatingConfig", {
  enumerable: true,
  get: function get() {
    return _ratingConfig.NgbRatingConfig;
  }
});
Object.defineProperty(exports, "NgbRating", {
  enumerable: true,
  get: function get() {
    return _rating.NgbRating;
  }
});
exports.NgbRatingModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _ratingConfig = __webpack_require__(163);

var _rating = __webpack_require__(353);

var NgbRatingModule =
/** @class */
function () {
  function NgbRatingModule() {}

  NgbRatingModule.forRoot = function () {
    return {
      ngModule: NgbRatingModule,
      providers: [_ratingConfig.NgbRatingConfig]
    };
  };

  NgbRatingModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_rating.NgbRating],
      exports: [_rating.NgbRating],
      imports: [_common.CommonModule]
    }]
  }];
  return NgbRatingModule;
}();

exports.NgbRatingModule = NgbRatingModule;

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTabset = exports.NgbTab = exports.NgbTabContent = exports.NgbTabTitle = void 0;

var _core = __webpack_require__(0);

var _tabsetConfig = __webpack_require__(164);

var nextId = 0;
/**
 * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.
 */

var NgbTabTitle =
/** @class */
function () {
  function NgbTabTitle(templateRef) {
    this.templateRef = templateRef;
  }

  NgbTabTitle.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'ng-template[ngbTabTitle]'
    }]
  }];
  /** @nocollapse */

  NgbTabTitle.ctorParameters = function () {
    return [{
      type: _core.TemplateRef
    }];
  };

  return NgbTabTitle;
}();

exports.NgbTabTitle = NgbTabTitle;

/**
 * This directive must be used to wrap content to be displayed in a tab.
 */
var NgbTabContent =
/** @class */
function () {
  function NgbTabContent(templateRef) {
    this.templateRef = templateRef;
  }

  NgbTabContent.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'ng-template[ngbTabContent]'
    }]
  }];
  /** @nocollapse */

  NgbTabContent.ctorParameters = function () {
    return [{
      type: _core.TemplateRef
    }];
  };

  return NgbTabContent;
}();

exports.NgbTabContent = NgbTabContent;

/**
 * A directive representing an individual tab.
 */
var NgbTab =
/** @class */
function () {
  function NgbTab() {
    /**
       * Unique tab identifier. Must be unique for the entire document for proper accessibility support.
       */
    this.id = "ngb-tab-" + nextId++;
    /**
       * Allows toggling disabled state of a given state. Disabled tabs can't be selected.
       */

    this.disabled = false;
  }

  NgbTab.prototype.ngAfterContentChecked = function () {
    // We are using @ContentChildren instead of @ContantChild as in the Angular version being used
    // only @ContentChildren allows us to specify the {descendants: false} option.
    // Without {descendants: false} we are hitting bugs described in:
    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240
    this.titleTpl = this.titleTpls.first;
    this.contentTpl = this.contentTpls.first;
  };

  NgbTab.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'ngb-tab'
    }]
  }];
  /** @nocollapse */

  NgbTab.propDecorators = {
    "id": [{
      type: _core.Input
    }],
    "title": [{
      type: _core.Input
    }],
    "disabled": [{
      type: _core.Input
    }],
    "titleTpls": [{
      type: _core.ContentChildren,
      args: [NgbTabTitle, {
        descendants: false
      }]
    }],
    "contentTpls": [{
      type: _core.ContentChildren,
      args: [NgbTabContent, {
        descendants: false
      }]
    }]
  };
  return NgbTab;
}();

exports.NgbTab = NgbTab;

/**
 * A component that makes it easy to create tabbed interface.
 */
var NgbTabset =
/** @class */
function () {
  function NgbTabset(config) {
    /**
       * Whether the closed tabs should be hidden without destroying them
       */
    this.destroyOnHide = true;
    /**
       * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details
       */

    this.tabChange = new _core.EventEmitter();
    this.type = config.type;
    this.justify = config.justify;
    this.orientation = config.orientation;
  }

  Object.defineProperty(NgbTabset.prototype, "justify", {
    set:
    /**
    * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or
    * 'justified'
    * The default value is 'start'.
    */
    function set(className) {
      if (className === 'fill' || className === 'justified') {
        this.justifyClass = "nav-" + className;
      } else {
        this.justifyClass = "justify-content-" + className;
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Selects the tab with the given id and shows its associated pane.
   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.
   */

  /**
     * Selects the tab with the given id and shows its associated pane.
     * Any other tab that was previously selected becomes unselected and its associated pane is hidden.
     */

  NgbTabset.prototype.select =
  /**
  * Selects the tab with the given id and shows its associated pane.
  * Any other tab that was previously selected becomes unselected and its associated pane is hidden.
  */
  function (tabId) {
    var selectedTab = this._getTabById(tabId);

    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {
      var defaultPrevented_1 = false;
      this.tabChange.emit({
        activeId: this.activeId,
        nextId: selectedTab.id,
        preventDefault: function preventDefault() {
          defaultPrevented_1 = true;
        }
      });

      if (!defaultPrevented_1) {
        this.activeId = selectedTab.id;
      }
    }
  };

  NgbTabset.prototype.ngAfterContentChecked = function () {
    // auto-correct activeId that might have been set incorrectly as input
    var activeTab = this._getTabById(this.activeId);

    this.activeId = activeTab ? activeTab.id : this.tabs.length ? this.tabs.first.id : null;
  };

  NgbTabset.prototype._getTabById = function (id) {
    var tabsWithId = this.tabs.filter(function (tab) {
      return tab.id === id;
    });
    return tabsWithId.length ? tabsWithId[0] : null;
  };

  NgbTabset.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-tabset',
      exportAs: 'ngbTabset',
      template: "\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"!!select(tab.id)\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  "
    }]
  }];
  /** @nocollapse */

  NgbTabset.ctorParameters = function () {
    return [{
      type: _tabsetConfig.NgbTabsetConfig
    }];
  };

  NgbTabset.propDecorators = {
    "tabs": [{
      type: _core.ContentChildren,
      args: [NgbTab]
    }],
    "activeId": [{
      type: _core.Input
    }],
    "destroyOnHide": [{
      type: _core.Input
    }],
    "justify": [{
      type: _core.Input
    }],
    "orientation": [{
      type: _core.Input
    }],
    "type": [{
      type: _core.Input
    }],
    "tabChange": [{
      type: _core.Output
    }]
  };
  return NgbTabset;
}();

exports.NgbTabset = NgbTabset;

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbTabset", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabset;
  }
});
Object.defineProperty(exports, "NgbTab", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTab;
  }
});
Object.defineProperty(exports, "NgbTabContent", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabContent;
  }
});
Object.defineProperty(exports, "NgbTabTitle", {
  enumerable: true,
  get: function get() {
    return _tabset.NgbTabTitle;
  }
});
Object.defineProperty(exports, "NgbTabsetConfig", {
  enumerable: true,
  get: function get() {
    return _tabsetConfig.NgbTabsetConfig;
  }
});
exports.NgbTabsetModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _tabset = __webpack_require__(355);

var _tabsetConfig = __webpack_require__(164);

var NGB_TABSET_DIRECTIVES = [_tabset.NgbTabset, _tabset.NgbTab, _tabset.NgbTabContent, _tabset.NgbTabTitle];

var NgbTabsetModule =
/** @class */
function () {
  function NgbTabsetModule() {}

  NgbTabsetModule.forRoot = function () {
    return {
      ngModule: NgbTabsetModule,
      providers: [_tabsetConfig.NgbTabsetConfig]
    };
  };

  NgbTabsetModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: NGB_TABSET_DIRECTIVES,
      exports: NGB_TABSET_DIRECTIVES,
      imports: [_common.CommonModule]
    }]
  }];
  return NgbTabsetModule;
}();

exports.NgbTabsetModule = NgbTabsetModule;

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTime = void 0;

var _util = __webpack_require__(14);

var NgbTime =
/** @class */
function () {
  function NgbTime(hour, minute, second) {
    this.hour = (0, _util.toInteger)(hour);
    this.minute = (0, _util.toInteger)(minute);
    this.second = (0, _util.toInteger)(second);
  }

  NgbTime.prototype.changeHour = function (step) {
    if (step === void 0) {
      step = 1;
    }

    this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);
  };

  NgbTime.prototype.updateHour = function (hour) {
    if ((0, _util.isNumber)(hour)) {
      this.hour = (hour < 0 ? 24 + hour : hour) % 24;
    } else {
      this.hour = NaN;
    }
  };

  NgbTime.prototype.changeMinute = function (step) {
    if (step === void 0) {
      step = 1;
    }

    this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);
  };

  NgbTime.prototype.updateMinute = function (minute) {
    if ((0, _util.isNumber)(minute)) {
      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;
      this.changeHour(Math.floor(minute / 60));
    } else {
      this.minute = NaN;
    }
  };

  NgbTime.prototype.changeSecond = function (step) {
    if (step === void 0) {
      step = 1;
    }

    this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);
  };

  NgbTime.prototype.updateSecond = function (second) {
    if ((0, _util.isNumber)(second)) {
      this.second = second < 0 ? 60 + second % 60 : second % 60;
      this.changeMinute(Math.floor(second / 60));
    } else {
      this.second = NaN;
    }
  };

  NgbTime.prototype.isValid = function (checkSecs) {
    if (checkSecs === void 0) {
      checkSecs = true;
    }

    return (0, _util.isNumber)(this.hour) && (0, _util.isNumber)(this.minute) && (checkSecs ? (0, _util.isNumber)(this.second) : true);
  };

  NgbTime.prototype.toString = function () {
    return (this.hour || 0) + ":" + (this.minute || 0) + ":" + (this.second || 0);
  };

  return NgbTime;
}();

exports.NgbTime = NgbTime;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTimepicker = void 0;

var _core = __webpack_require__(0);

var _forms = __webpack_require__(34);

var _util = __webpack_require__(14);

var _ngbTime = __webpack_require__(357);

var _timepickerConfig = __webpack_require__(166);

var _ngbTimeAdapter2 = __webpack_require__(165);

var NGB_TIMEPICKER_VALUE_ACCESSOR = {
  provide: _forms.NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbTimepicker;
  }),
  multi: true
};
/**
 * A lightweight & configurable timepicker directive.
 */

var NgbTimepicker =
/** @class */
function () {
  function NgbTimepicker(config, _ngbTimeAdapter) {
    this._ngbTimeAdapter = _ngbTimeAdapter;

    this.onChange = function (_) {};

    this.onTouched = function () {};

    this.meridian = config.meridian;
    this.spinners = config.spinners;
    this.seconds = config.seconds;
    this.hourStep = config.hourStep;
    this.minuteStep = config.minuteStep;
    this.secondStep = config.secondStep;
    this.disabled = config.disabled;
    this.readonlyInputs = config.readonlyInputs;
    this.size = config.size;
  }

  NgbTimepicker.prototype.writeValue = function (value) {
    var structValue = this._ngbTimeAdapter.fromModel(value);

    this.model = structValue ? new _ngbTime.NgbTime(structValue.hour, structValue.minute, structValue.second) : new _ngbTime.NgbTime();

    if (!this.seconds && (!structValue || !(0, _util.isNumber)(structValue.second))) {
      this.model.second = 0;
    }
  };

  NgbTimepicker.prototype.registerOnChange = function (fn) {
    this.onChange = fn;
  };

  NgbTimepicker.prototype.registerOnTouched = function (fn) {
    this.onTouched = fn;
  };

  NgbTimepicker.prototype.setDisabledState = function (isDisabled) {
    this.disabled = isDisabled;
  };

  NgbTimepicker.prototype.changeHour = function (step) {
    this.model.changeHour(step);
    this.propagateModelChange();
  };

  NgbTimepicker.prototype.changeMinute = function (step) {
    this.model.changeMinute(step);
    this.propagateModelChange();
  };

  NgbTimepicker.prototype.changeSecond = function (step) {
    this.model.changeSecond(step);
    this.propagateModelChange();
  };

  NgbTimepicker.prototype.updateHour = function (newVal) {
    var isPM = this.model.hour >= 12;
    var enteredHour = (0, _util.toInteger)(newVal);

    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {
      this.model.updateHour(enteredHour + 12);
    } else {
      this.model.updateHour(enteredHour);
    }

    this.propagateModelChange();
  };

  NgbTimepicker.prototype.updateMinute = function (newVal) {
    this.model.updateMinute((0, _util.toInteger)(newVal));
    this.propagateModelChange();
  };

  NgbTimepicker.prototype.updateSecond = function (newVal) {
    this.model.updateSecond((0, _util.toInteger)(newVal));
    this.propagateModelChange();
  };

  NgbTimepicker.prototype.toggleMeridian = function () {
    if (this.meridian) {
      this.changeHour(12);
    }
  };

  NgbTimepicker.prototype.formatHour = function (value) {
    if ((0, _util.isNumber)(value)) {
      if (this.meridian) {
        return (0, _util.padNumber)(value % 12 === 0 ? 12 : value % 12);
      } else {
        return (0, _util.padNumber)(value % 24);
      }
    } else {
      return (0, _util.padNumber)(NaN);
    }
  };

  NgbTimepicker.prototype.formatMinSec = function (value) {
    return (0, _util.padNumber)(value);
  };

  NgbTimepicker.prototype.setFormControlSize = function () {
    return {
      'form-control-sm': this.size === 'small',
      'form-control-lg': this.size === 'large'
    };
  };

  NgbTimepicker.prototype.setButtonSize = function () {
    return {
      'btn-sm': this.size === 'small',
      'btn-lg': this.size === 'large'
    };
  };

  NgbTimepicker.prototype.ngOnChanges = function (changes) {
    if (changes['seconds'] && !this.seconds && this.model && !(0, _util.isNumber)(this.model.second)) {
      this.model.second = 0;
      this.propagateModelChange(false);
    }
  };

  NgbTimepicker.prototype.propagateModelChange = function (touched) {
    if (touched === void 0) {
      touched = true;
    }

    if (touched) {
      this.onTouched();
    }

    if (this.model.isValid(this.seconds)) {
      this.onChange(this._ngbTimeAdapter.toModel({
        hour: this.model.hour,
        minute: this.model.minute,
        second: this.model.second
      }));
    } else {
      this.onChange(this._ngbTimeAdapter.toModel(null));
    }
  };

  NgbTimepicker.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-timepicker',
      styles: ["\n\n    :host {\n      font-size: 1rem;\n    }\n\n    .ngb-tp {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-align: center;\n      align-items: center;\n    }\n\n    .ngb-tp-input-container {\n      width: 4em;\n    }\n\n    .ngb-tp-hour, .ngb-tp-minute, .ngb-tp-second, .ngb-tp-meridian {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-direction: column;\n      flex-direction: column;\n      -ms-flex-align: center;\n      align-items: center;\n      -ms-flex-pack: distribute;\n      justify-content: space-around;\n    }\n\n    .ngb-tp-spacer {\n      width: 1em;\n      text-align: center;\n    }\n\n    .chevron::before {\n      border-style: solid;\n      border-width: 0.29em 0.29em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.69em;\n      left: 0.05em;\n      position: relative;\n      top: 0.15em;\n      transform: rotate(-45deg);\n      -webkit-transform: rotate(-45deg);\n      -ms-transform: rotate(-45deg);\n      vertical-align: middle;\n      width: 0.71em;\n    }\n\n    .chevron.bottom:before {\n      top: -.3em;\n      -webkit-transform: rotate(135deg);\n      -ms-transform: rotate(135deg);\n      transform: rotate(135deg);\n    }\n\n    input {\n      text-align: center;\n    }\n  "],
      template: "\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(-hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(-minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(-secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [ngClass]=\"setButtonSize()\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  ",
      providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbTimepicker.ctorParameters = function () {
    return [{
      type: _timepickerConfig.NgbTimepickerConfig
    }, {
      type: _ngbTimeAdapter2.NgbTimeAdapter
    }];
  };

  NgbTimepicker.propDecorators = {
    "meridian": [{
      type: _core.Input
    }],
    "spinners": [{
      type: _core.Input
    }],
    "seconds": [{
      type: _core.Input
    }],
    "hourStep": [{
      type: _core.Input
    }],
    "minuteStep": [{
      type: _core.Input
    }],
    "secondStep": [{
      type: _core.Input
    }],
    "readonlyInputs": [{
      type: _core.Input
    }],
    "size": [{
      type: _core.Input
    }]
  };
  return NgbTimepicker;
}();

exports.NgbTimepicker = NgbTimepicker;

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbTimepicker", {
  enumerable: true,
  get: function get() {
    return _timepicker.NgbTimepicker;
  }
});
Object.defineProperty(exports, "NgbTimepickerConfig", {
  enumerable: true,
  get: function get() {
    return _timepickerConfig.NgbTimepickerConfig;
  }
});
Object.defineProperty(exports, "NgbTimeAdapter", {
  enumerable: true,
  get: function get() {
    return _ngbTimeAdapter.NgbTimeAdapter;
  }
});
exports.NgbTimepickerModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _timepicker = __webpack_require__(358);

var _timepickerConfig = __webpack_require__(166);

var _ngbTimeAdapter = __webpack_require__(165);

var NgbTimepickerModule =
/** @class */
function () {
  function NgbTimepickerModule() {}

  NgbTimepickerModule.forRoot = function () {
    return {
      ngModule: NgbTimepickerModule,
      providers: [_timepickerConfig.NgbTimepickerConfig, {
        provide: _ngbTimeAdapter.NgbTimeAdapter,
        useClass: _ngbTimeAdapter.NgbTimeStructAdapter
      }]
    };
  };

  NgbTimepickerModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_timepicker.NgbTimepicker],
      exports: [_timepicker.NgbTimepicker],
      imports: [_common.CommonModule]
    }]
  }];
  return NgbTimepickerModule;
}();

exports.NgbTimepickerModule = NgbTimepickerModule;

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTooltip = exports.NgbTooltipWindow = void 0;

var _core = __webpack_require__(0);

var _triggers = __webpack_require__(173);

var _positioning = __webpack_require__(64);

var _popup = __webpack_require__(83);

var _tooltipConfig = __webpack_require__(167);

var nextId = 0;

var NgbTooltipWindow =
/** @class */
function () {
  function NgbTooltipWindow(_element, _renderer) {
    this._element = _element;
    this._renderer = _renderer;
    this.placement = 'top';
  }

  NgbTooltipWindow.prototype.applyPlacement = function (_placement) {
    // remove the current placement classes
    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);

    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString()); // set the new placement classes


    this.placement = _placement; // apply the new placement

    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);

    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());
  };

  NgbTooltipWindow.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-tooltip-window',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      host: {
        '[class]': '"tooltip show bs-tooltip-" + placement.split("-")[0]+" bs-tooltip-" + placement',
        'role': 'tooltip',
        '[id]': 'id'
      },
      template: "<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>",
      styles: ["\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: calc(50% - 0.4rem);\n    }\n\n    :host.bs-tooltip-top-left .arrow, :host.bs-tooltip-bottom-left .arrow {\n      left: 1em;\n    }\n\n    :host.bs-tooltip-top-right .arrow, :host.bs-tooltip-bottom-right .arrow {\n      left: auto;\n      right: 0.8rem;\n    }\n\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: calc(50% - 0.4rem);\n    }\n\n    :host.bs-tooltip-left-top .arrow, :host.bs-tooltip-right-top .arrow {\n      top: 0.4rem;\n    }\n\n    :host.bs-tooltip-left-bottom .arrow, :host.bs-tooltip-right-bottom .arrow {\n      top: auto;\n      bottom: 0.4rem;\n    }\n  "]
    }]
  }];
  /** @nocollapse */

  NgbTooltipWindow.ctorParameters = function () {
    return [{
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }];
  };

  NgbTooltipWindow.propDecorators = {
    "placement": [{
      type: _core.Input
    }],
    "id": [{
      type: _core.Input
    }]
  };
  return NgbTooltipWindow;
}();

exports.NgbTooltipWindow = NgbTooltipWindow;

/**
 * A lightweight, extensible directive for fancy tooltip creation.
 */
var NgbTooltip =
/** @class */
function () {
  function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {
    var _this = this;

    this._elementRef = _elementRef;
    this._renderer = _renderer;
    /**
       * Emits an event when the tooltip is shown
       */

    this.shown = new _core.EventEmitter();
    /**
       * Emits an event when the tooltip is hidden
       */

    this.hidden = new _core.EventEmitter();
    this._ngbTooltipWindowId = "ngb-tooltip-" + nextId++;
    this.placement = config.placement;
    this.triggers = config.triggers;
    this.container = config.container;
    this.disableTooltip = config.disableTooltip;
    this._popupService = new _popup.PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);
    this._zoneSubscription = ngZone.onStable.subscribe(function () {
      if (_this._windowRef) {
        _this._windowRef.instance.applyPlacement((0, _positioning.positionElements)(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));
      }
    });
  }

  Object.defineProperty(NgbTooltip.prototype, "ngbTooltip", {
    get: function get() {
      return this._ngbTooltip;
    },
    set:
    /**
    * Content to be displayed as tooltip. If falsy, the tooltip won't open.
    */
    function set(value) {
      this._ngbTooltip = value;

      if (!value && this._windowRef) {
        this.close();
      }
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   * The context is an optional value to be injected into the tooltip template when it is created.
   */

  /**
     * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.
     * The context is an optional value to be injected into the tooltip template when it is created.
     */

  NgbTooltip.prototype.open =
  /**
  * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.
  * The context is an optional value to be injected into the tooltip template when it is created.
  */
  function (context) {
    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {
      this._windowRef = this._popupService.open(this._ngbTooltip, context);
      this._windowRef.instance.id = this._ngbTooltipWindowId;

      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);

      if (this.container === 'body') {
        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);
      }

      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement; // apply styling to set basic css-classes on target element, before going for positioning

      this._windowRef.changeDetectorRef.detectChanges();

      this._windowRef.changeDetectorRef.markForCheck(); // position tooltip along the element


      this._windowRef.instance.applyPlacement((0, _positioning.positionElements)(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));

      this.shown.emit();
    }
  };
  /**
   * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   */

  /**
     * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.
     */


  NgbTooltip.prototype.close =
  /**
  * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.
  */
  function () {
    if (this._windowRef != null) {
      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');

      this._popupService.close();

      this._windowRef = null;
      this.hidden.emit();
    }
  };
  /**
   * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.
   */

  /**
     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.
     */


  NgbTooltip.prototype.toggle =
  /**
  * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.
  */
  function () {
    if (this._windowRef) {
      this.close();
    } else {
      this.open();
    }
  };
  /**
   * Returns whether or not the tooltip is currently being shown
   */

  /**
     * Returns whether or not the tooltip is currently being shown
     */


  NgbTooltip.prototype.isOpen =
  /**
  * Returns whether or not the tooltip is currently being shown
  */
  function () {
    return this._windowRef != null;
  };

  NgbTooltip.prototype.ngOnInit = function () {
    this._unregisterListenersFn = (0, _triggers.listenToTriggers)(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));
  };

  NgbTooltip.prototype.ngOnDestroy = function () {
    this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit
    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199

    if (this._unregisterListenersFn) {
      this._unregisterListenersFn();
    }

    this._zoneSubscription.unsubscribe();
  };

  NgbTooltip.decorators = [{
    type: _core.Directive,
    args: [{
      selector: '[ngbTooltip]',
      exportAs: 'ngbTooltip'
    }]
  }];
  /** @nocollapse */

  NgbTooltip.ctorParameters = function () {
    return [{
      type: _core.ElementRef
    }, {
      type: _core.Renderer2
    }, {
      type: _core.Injector
    }, {
      type: _core.ComponentFactoryResolver
    }, {
      type: _core.ViewContainerRef
    }, {
      type: _tooltipConfig.NgbTooltipConfig
    }, {
      type: _core.NgZone
    }];
  };

  NgbTooltip.propDecorators = {
    "placement": [{
      type: _core.Input
    }],
    "triggers": [{
      type: _core.Input
    }],
    "container": [{
      type: _core.Input
    }],
    "disableTooltip": [{
      type: _core.Input
    }],
    "shown": [{
      type: _core.Output
    }],
    "hidden": [{
      type: _core.Output
    }],
    "ngbTooltip": [{
      type: _core.Input
    }]
  };
  return NgbTooltip;
}();

exports.NgbTooltip = NgbTooltip;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbTooltip", {
  enumerable: true,
  get: function get() {
    return _tooltip.NgbTooltip;
  }
});
Object.defineProperty(exports, "NgbTooltipConfig", {
  enumerable: true,
  get: function get() {
    return _tooltipConfig.NgbTooltipConfig;
  }
});
exports.NgbTooltipModule = void 0;

var _core = __webpack_require__(0);

var _tooltip = __webpack_require__(360);

var _tooltipConfig = __webpack_require__(167);

var NgbTooltipModule =
/** @class */
function () {
  function NgbTooltipModule() {}

  NgbTooltipModule.forRoot = function () {
    return {
      ngModule: NgbTooltipModule,
      providers: [_tooltipConfig.NgbTooltipConfig]
    };
  };

  NgbTooltipModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_tooltip.NgbTooltip, _tooltip.NgbTooltipWindow],
      exports: [_tooltip.NgbTooltip],
      entryComponents: [_tooltip.NgbTooltipWindow]
    }]
  }];
  return NgbTooltipModule;
}();

exports.NgbTooltipModule = NgbTooltipModule;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbHighlight = void 0;

var _core = __webpack_require__(0);

var _util = __webpack_require__(14);

var NgbHighlight =
/** @class */
function () {
  function NgbHighlight() {
    this.highlightClass = 'ngb-highlight';
  }

  NgbHighlight.prototype.ngOnChanges = function (changes) {
    var resultStr = (0, _util.toString)(this.result);
    var resultLC = resultStr.toLowerCase();
    var termLC = (0, _util.toString)(this.term).toLowerCase();
    var currentIdx = 0;

    if (termLC.length > 0) {
      this.parts = resultLC.split(new RegExp("(" + (0, _util.regExpEscape)(termLC) + ")")).map(function (part) {
        var originalPart = resultStr.substr(currentIdx, part.length);
        currentIdx += part.length;
        return originalPart;
      });
    } else {
      this.parts = [resultStr];
    }
  };

  NgbHighlight.decorators = [{
    type: _core.Component,
    args: [{
      selector: 'ngb-highlight',
      changeDetection: _core.ChangeDetectionStrategy.OnPush,
      template: "<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">" + "<span *ngIf=\"isOdd\" class=\"{{highlightClass}}\">{{part}}</span><ng-template [ngIf]=\"!isOdd\">{{part}}</ng-template>" + "</ng-template>",
      // template needs to be formatted in a certain way so we don't add empty text nodes
      styles: ["\n    .ngb-highlight {\n      font-weight: bold;\n    }\n  "]
    }]
  }];
  /** @nocollapse */

  NgbHighlight.propDecorators = {
    "highlightClass": [{
      type: _core.Input
    }],
    "result": [{
      type: _core.Input
    }],
    "term": [{
      type: _core.Input
    }]
  };
  return NgbHighlight;
}();

exports.NgbHighlight = NgbHighlight;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTypeahead = void 0;

var _core = __webpack_require__(0);

var _forms = __webpack_require__(34);

var _rxjs = __webpack_require__(31);

var _positioning = __webpack_require__(64);

var _typeaheadWindow = __webpack_require__(169);

var _popup = __webpack_require__(83);

var _util = __webpack_require__(14);

var _key = __webpack_require__(53);

var _live2 = __webpack_require__(170);

var _typeaheadConfig = __webpack_require__(168);

var _operators = __webpack_require__(33);

var NGB_TYPEAHEAD_VALUE_ACCESSOR = {
  provide: _forms.NG_VALUE_ACCESSOR,
  useExisting: (0, _core.forwardRef)(function () {
    return NgbTypeahead;
  }),
  multi: true
};
var nextWindowId = 0;
/**
 * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input
 */

var NgbTypeahead =
/** @class */
function () {
  function NgbTypeahead(_elementRef, _viewContainerRef, _renderer, _injector, componentFactoryResolver, config, ngZone, _live) {
    var _this = this;

    this._elementRef = _elementRef;
    this._viewContainerRef = _viewContainerRef;
    this._renderer = _renderer;
    this._injector = _injector;
    this._live = _live;
    /**
       * Value for the configurable autocomplete attribute.
       * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem
       * to be always correctly taken into account.
       *
       * @since 2.1.0
       */

    this.autocomplete = 'off';
    /** Placement of a typeahead accepts:
       *    "top", "top-left", "top-right", "bottom", "bottom-left", "bottom-right",
       *    "left", "left-top", "left-bottom", "right", "right-top", "right-bottom"
       * and array of above values.
      */

    this.placement = 'bottom-left';
    /**
       * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.
       */

    this.selectItem = new _core.EventEmitter();
    this.popupId = "ngb-typeahead-" + nextWindowId++;

    this._onTouched = function () {};

    this._onChange = function (_) {};

    this.container = config.container;
    this.editable = config.editable;
    this.focusFirst = config.focusFirst;
    this.showHint = config.showHint;
    this.placement = config.placement;
    this._valueChanges = (0, _rxjs.fromEvent)(_elementRef.nativeElement, 'input').pipe((0, _operators.map)(function ($event) {
      return $event.target.value;
    }));
    this._resubscribeTypeahead = new _rxjs.BehaviorSubject(null);
    this._popupService = new _popup.PopupService(_typeaheadWindow.NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);
    this._zoneSubscription = ngZone.onStable.subscribe(function () {
      if (_this.isPopupOpen()) {
        (0, _positioning.positionElements)(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body');
      }
    });
  }

  NgbTypeahead.prototype.ngOnInit = function () {
    var _this = this;

    var inputValues$ = this._valueChanges.pipe((0, _operators.tap)(function (value) {
      _this._inputValueBackup = value;

      if (_this.editable) {
        _this._onChange(value);
      }
    }));

    var results$ = inputValues$.pipe(this.ngbTypeahead);
    var processedResults$ = results$.pipe((0, _operators.tap)(function () {
      if (!_this.editable) {
        _this._onChange(undefined);
      }
    }));

    var userInput$ = this._resubscribeTypeahead.pipe((0, _operators.switchMap)(function () {
      return processedResults$;
    }));

    this._subscription = this._subscribeToUserInput(userInput$);
  };

  NgbTypeahead.prototype.ngOnDestroy = function () {
    this._closePopup();

    this._unsubscribeFromUserInput();

    this._zoneSubscription.unsubscribe();
  };

  NgbTypeahead.prototype.registerOnChange = function (fn) {
    this._onChange = fn;
  };

  NgbTypeahead.prototype.registerOnTouched = function (fn) {
    this._onTouched = fn;
  };

  NgbTypeahead.prototype.writeValue = function (value) {
    this._writeInputValue(this._formatItemForInput(value));
  };

  NgbTypeahead.prototype.setDisabledState = function (isDisabled) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
  };

  NgbTypeahead.prototype.onDocumentClick = function (event) {
    if (event.target !== this._elementRef.nativeElement) {
      this.dismissPopup();
    }
  };
  /**
   * Dismisses typeahead popup window
   */

  /**
     * Dismisses typeahead popup window
     */


  NgbTypeahead.prototype.dismissPopup =
  /**
  * Dismisses typeahead popup window
  */
  function () {
    if (this.isPopupOpen()) {
      this._closePopup();

      this._writeInputValue(this._inputValueBackup);
    }
  };
  /**
   * Returns true if the typeahead popup window is displayed
   */

  /**
     * Returns true if the typeahead popup window is displayed
     */


  NgbTypeahead.prototype.isPopupOpen =
  /**
  * Returns true if the typeahead popup window is displayed
  */
  function () {
    return this._windowRef != null;
  };

  NgbTypeahead.prototype.handleBlur = function () {
    this._resubscribeTypeahead.next(null);

    this._onTouched();
  };

  NgbTypeahead.prototype.handleKeyDown = function (event) {
    if (!this.isPopupOpen()) {
      return;
    }

    if (_key.Key[(0, _util.toString)(event.which)]) {
      switch (event.which) {
        case _key.Key.ArrowDown:
          event.preventDefault();

          this._windowRef.instance.next();

          this._showHint();

          break;

        case _key.Key.ArrowUp:
          event.preventDefault();

          this._windowRef.instance.prev();

          this._showHint();

          break;

        case _key.Key.Enter:
        case _key.Key.Tab:
          var result = this._windowRef.instance.getActive();

          if ((0, _util.isDefined)(result)) {
            event.preventDefault();
            event.stopPropagation();

            this._selectResult(result);
          }

          this._closePopup();

          break;

        case _key.Key.Escape:
          event.preventDefault();

          this._resubscribeTypeahead.next(null);

          this.dismissPopup();
          break;
      }
    }
  };

  NgbTypeahead.prototype._openPopup = function () {
    var _this = this;

    if (!this.isPopupOpen()) {
      this._inputValueBackup = this._elementRef.nativeElement.value;
      this._windowRef = this._popupService.open();
      this._windowRef.instance.id = this.popupId;

      this._windowRef.instance.selectEvent.subscribe(function (result) {
        return _this._selectResultClosePopup(result);
      });

      this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) {
        return _this.activeDescendant = activeId;
      });

      if (this.container === 'body') {
        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);
      }
    }
  };

  NgbTypeahead.prototype._closePopup = function () {
    this._popupService.close();

    this._windowRef = null;
    this.activeDescendant = undefined;
  };

  NgbTypeahead.prototype._selectResult = function (result) {
    var defaultPrevented = false;
    this.selectItem.emit({
      item: result,
      preventDefault: function preventDefault() {
        defaultPrevented = true;
      }
    });

    this._resubscribeTypeahead.next(null);

    if (!defaultPrevented) {
      this.writeValue(result);

      this._onChange(result);
    }
  };

  NgbTypeahead.prototype._selectResultClosePopup = function (result) {
    this._selectResult(result);

    this._closePopup();
  };

  NgbTypeahead.prototype._showHint = function () {
    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {
      var userInputLowerCase = this._inputValueBackup.toLowerCase();

      var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());

      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {
        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));

        this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);
      } else {
        this.writeValue(this._windowRef.instance.getActive());
      }
    }
  };

  NgbTypeahead.prototype._formatItemForInput = function (item) {
    return item != null && this.inputFormatter ? this.inputFormatter(item) : (0, _util.toString)(item);
  };

  NgbTypeahead.prototype._writeInputValue = function (value) {
    this._renderer.setProperty(this._elementRef.nativeElement, 'value', (0, _util.toString)(value));
  };

  NgbTypeahead.prototype._subscribeToUserInput = function (userInput$) {
    var _this = this;

    return userInput$.subscribe(function (results) {
      if (!results || results.length === 0) {
        _this._closePopup();
      } else {
        _this._openPopup();

        _this._windowRef.instance.focusFirst = _this.focusFirst;
        _this._windowRef.instance.results = results;
        _this._windowRef.instance.term = _this._elementRef.nativeElement.value;

        if (_this.resultFormatter) {
          _this._windowRef.instance.formatter = _this.resultFormatter;
        }

        if (_this.resultTemplate) {
          _this._windowRef.instance.resultTemplate = _this.resultTemplate;
        }

        _this._windowRef.instance.resetActive(); // The observable stream we are subscribing to might have async steps
        // and if a component containing typeahead is using the OnPush strategy
        // the change detection turn wouldn't be invoked automatically.
        // The observable stream we are subscribing to might have async steps
        // and if a component containing typeahead is using the OnPush strategy
        // the change detection turn wouldn't be invoked automatically.


        _this._windowRef.changeDetectorRef.detectChanges();

        _this._showHint();
      } // live announcer


      var count = results ? results.length : 0;

      _this._live.say(count === 0 ? 'No results available' : count + " result" + (count === 1 ? '' : 's') + " available");
    });
  };

  NgbTypeahead.prototype._unsubscribeFromUserInput = function () {
    if (this._subscription) {
      this._subscription.unsubscribe();
    }

    this._subscription = null;
  };

  NgbTypeahead.decorators = [{
    type: _core.Directive,
    args: [{
      selector: 'input[ngbTypeahead]',
      exportAs: 'ngbTypeahead',
      host: {
        '(blur)': 'handleBlur()',
        '[class.open]': 'isPopupOpen()',
        '(document:click)': 'onDocumentClick($event)',
        '(keydown)': 'handleKeyDown($event)',
        '[autocomplete]': 'autocomplete',
        'autocapitalize': 'off',
        'autocorrect': 'off',
        'role': 'combobox',
        'aria-multiline': 'false',
        '[attr.aria-autocomplete]': 'showHint ? "both" : "list"',
        '[attr.aria-activedescendant]': 'activeDescendant',
        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',
        '[attr.aria-expanded]': 'isPopupOpen()'
      },
      providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]
    }]
  }];
  /** @nocollapse */

  NgbTypeahead.ctorParameters = function () {
    return [{
      type: _core.ElementRef
    }, {
      type: _core.ViewContainerRef
    }, {
      type: _core.Renderer2
    }, {
      type: _core.Injector
    }, {
      type: _core.ComponentFactoryResolver
    }, {
      type: _typeaheadConfig.NgbTypeaheadConfig
    }, {
      type: _core.NgZone
    }, {
      type: _live2.Live
    }];
  };

  NgbTypeahead.propDecorators = {
    "autocomplete": [{
      type: _core.Input
    }],
    "container": [{
      type: _core.Input
    }],
    "editable": [{
      type: _core.Input
    }],
    "focusFirst": [{
      type: _core.Input
    }],
    "inputFormatter": [{
      type: _core.Input
    }],
    "ngbTypeahead": [{
      type: _core.Input
    }],
    "resultFormatter": [{
      type: _core.Input
    }],
    "resultTemplate": [{
      type: _core.Input
    }],
    "showHint": [{
      type: _core.Input
    }],
    "placement": [{
      type: _core.Input
    }],
    "selectItem": [{
      type: _core.Output
    }]
  };
  return NgbTypeahead;
}();

exports.NgbTypeahead = NgbTypeahead;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NgbHighlight", {
  enumerable: true,
  get: function get() {
    return _highlight.NgbHighlight;
  }
});
Object.defineProperty(exports, "NgbTypeaheadWindow", {
  enumerable: true,
  get: function get() {
    return _typeaheadWindow.NgbTypeaheadWindow;
  }
});
Object.defineProperty(exports, "NgbTypeahead", {
  enumerable: true,
  get: function get() {
    return _typeahead.NgbTypeahead;
  }
});
Object.defineProperty(exports, "NgbTypeaheadConfig", {
  enumerable: true,
  get: function get() {
    return _typeaheadConfig.NgbTypeaheadConfig;
  }
});
exports.NgbTypeaheadModule = void 0;

var _core = __webpack_require__(0);

var _common = __webpack_require__(10);

var _highlight = __webpack_require__(362);

var _typeaheadWindow = __webpack_require__(169);

var _typeahead = __webpack_require__(363);

var _typeaheadConfig = __webpack_require__(168);

var _live = __webpack_require__(170);

var NgbTypeaheadModule =
/** @class */
function () {
  function NgbTypeaheadModule() {}

  NgbTypeaheadModule.forRoot = function () {
    return {
      ngModule: NgbTypeaheadModule,
      providers: [_live.Live, _typeaheadConfig.NgbTypeaheadConfig, {
        provide: _live.ARIA_LIVE_DELAY,
        useValue: _live.DEFAULT_ARIA_LIVE_DELAY
      }]
    };
  };

  NgbTypeaheadModule.decorators = [{
    type: _core.NgModule,
    args: [{
      declarations: [_typeahead.NgbTypeahead, _highlight.NgbHighlight, _typeaheadWindow.NgbTypeaheadWindow],
      exports: [_typeahead.NgbTypeahead, _highlight.NgbHighlight],
      imports: [_common.CommonModule],
      entryComponents: [_typeaheadWindow.NgbTypeaheadWindow]
    }]
  }];
  return NgbTypeaheadModule;
}();

exports.NgbTypeaheadModule = NgbTypeaheadModule;

/***/ }),
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var rxjs_1 = __webpack_require__(31);

var map_1 = __webpack_require__(503);

rxjs_1.Observable.prototype.map = map_1.map;

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var rxjs_1 = __webpack_require__(31);

var mergeMap_1 = __webpack_require__(504);

rxjs_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;
rxjs_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var operators_1 = __webpack_require__(33);
/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */


function map(project, thisArg) {
  return operators_1.map(project, thisArg)(this);
}

exports.map = map;

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var operators_1 = __webpack_require__(33);
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */


function mergeMap(project, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  return operators_1.mergeMap(project, concurrent)(this);
}

exports.mergeMap = mergeMap;

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InnerSubscriber = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
var InnerSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(InnerSubscriber, _super);

  function InnerSubscriber(parent, outerValue, outerIndex) {
    var _this = _super.call(this) || this;

    _this.parent = parent;
    _this.outerValue = outerValue;
    _this.outerIndex = outerIndex;
    _this.index = 0;
    return _this;
  }

  InnerSubscriber.prototype._next = function (value) {
    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
  };

  InnerSubscriber.prototype._error = function (error) {
    this.parent.notifyError(error, this);
    this.unsubscribe();
  };

  InnerSubscriber.prototype._complete = function () {
    this.parent.notifyComplete(this);
    this.unsubscribe();
  };

  return InnerSubscriber;
}(_Subscriber.Subscriber);

exports.InnerSubscriber = InnerSubscriber;

/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SubscribeOnObservable = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Observable = __webpack_require__(5);

var _asap = __webpack_require__(229);

var _isNumeric = __webpack_require__(101);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */
var SubscribeOnObservable =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SubscribeOnObservable, _super);

  function SubscribeOnObservable(source, delayTime, scheduler) {
    if (delayTime === void 0) {
      delayTime = 0;
    }

    if (scheduler === void 0) {
      scheduler = _asap.asap;
    }

    var _this = _super.call(this) || this;

    _this.source = source;
    _this.delayTime = delayTime;
    _this.scheduler = scheduler;

    if (!(0, _isNumeric.isNumeric)(delayTime) || delayTime < 0) {
      _this.delayTime = 0;
    }

    if (!scheduler || typeof scheduler.schedule !== 'function') {
      _this.scheduler = _asap.asap;
    }

    return _this;
  }

  SubscribeOnObservable.create = function (source, delay, scheduler) {
    if (delay === void 0) {
      delay = 0;
    }

    if (scheduler === void 0) {
      scheduler = _asap.asap;
    }

    return new SubscribeOnObservable(source, delay, scheduler);
  };

  SubscribeOnObservable.dispatch = function (arg) {
    var source = arg.source,
        subscriber = arg.subscriber;
    return this.add(source.subscribe(subscriber));
  };

  SubscribeOnObservable.prototype._subscribe = function (subscriber) {
    var delay = this.delayTime;
    var source = this.source;
    var scheduler = this.scheduler;
    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
      source: source,
      subscriber: subscriber
    });
  };

  return SubscribeOnObservable;
}(_Observable.Observable);

exports.SubscribeOnObservable = SubscribeOnObservable;

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindCallback = bindCallback;

var _Observable = __webpack_require__(5);

var _AsyncSubject = __webpack_require__(93);

var _map = __webpack_require__(25);

var _isArray = __webpack_require__(20);

var _isScheduler = __webpack_require__(27);

/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isArray,_util_isScheduler PURE_IMPORTS_END */
function bindCallback(callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if ((0, _isScheduler.isScheduler)(resultSelector)) {
      scheduler = resultSelector;
    } else {
      return function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe((0, _map.map)(function (args) {
          return (0, _isArray.isArray)(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
        }));
      };
    }
  }

  return function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var context = this;
    var subject;
    var params = {
      context: context,
      subject: subject,
      callbackFunc: callbackFunc,
      scheduler: scheduler
    };
    return new _Observable.Observable(function (subscriber) {
      if (!scheduler) {
        if (!subject) {
          subject = new _AsyncSubject.AsyncSubject();

          var handler = function handler() {
            var innerArgs = [];

            for (var _i = 0; _i < arguments.length; _i++) {
              innerArgs[_i] = arguments[_i];
            }

            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };

          try {
            callbackFunc.apply(context, args.concat([handler]));
          } catch (err) {
            subject.error(err);
          }
        }

        return subject.subscribe(subscriber);
      } else {
        var state = {
          args: args,
          subscriber: subscriber,
          params: params
        };
        return scheduler.schedule(dispatch, 0, state);
      }
    });
  };
}

function dispatch(state) {
  var _this = this;

  var self = this;
  var args = state.args,
      subscriber = state.subscriber,
      params = state.params;
  var callbackFunc = params.callbackFunc,
      context = params.context,
      scheduler = params.scheduler;
  var subject = params.subject;

  if (!subject) {
    subject = params.subject = new _AsyncSubject.AsyncSubject();

    var handler = function handler() {
      var innerArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        innerArgs[_i] = arguments[_i];
      }

      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;

      _this.add(scheduler.schedule(dispatchNext, 0, {
        value: value,
        subject: subject
      }));
    };

    try {
      callbackFunc.apply(context, args.concat([handler]));
    } catch (err) {
      subject.error(err);
    }
  }

  this.add(subject.subscribe(subscriber));
}

function dispatchNext(state) {
  var value = state.value,
      subject = state.subject;
  subject.next(value);
  subject.complete();
}

function dispatchError(state) {
  var err = state.err,
      subject = state.subject;
  subject.error(err);
}

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindNodeCallback = bindNodeCallback;

var _Observable = __webpack_require__(5);

var _AsyncSubject = __webpack_require__(93);

var _map = __webpack_require__(25);

var _isScheduler = __webpack_require__(27);

var _isArray = __webpack_require__(20);

/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isScheduler,_util_isArray PURE_IMPORTS_END */
function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if ((0, _isScheduler.isScheduler)(resultSelector)) {
      scheduler = resultSelector;
    } else {
      return function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe((0, _map.map)(function (args) {
          return (0, _isArray.isArray)(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
        }));
      };
    }
  }

  return function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var params = {
      subject: undefined,
      args: args,
      callbackFunc: callbackFunc,
      scheduler: scheduler,
      context: this
    };
    return new _Observable.Observable(function (subscriber) {
      var context = params.context;
      var subject = params.subject;

      if (!scheduler) {
        if (!subject) {
          subject = params.subject = new _AsyncSubject.AsyncSubject();

          var handler = function handler() {
            var innerArgs = [];

            for (var _i = 0; _i < arguments.length; _i++) {
              innerArgs[_i] = arguments[_i];
            }

            var err = innerArgs.shift();

            if (err) {
              subject.error(err);
              return;
            }

            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };

          try {
            callbackFunc.apply(context, args.concat([handler]));
          } catch (err) {
            subject.error(err);
          }
        }

        return subject.subscribe(subscriber);
      } else {
        return scheduler.schedule(dispatch, 0, {
          params: params,
          subscriber: subscriber,
          context: context
        });
      }
    });
  };
}

function dispatch(state) {
  var _this = this;

  var params = state.params,
      subscriber = state.subscriber,
      context = state.context;
  var callbackFunc = params.callbackFunc,
      args = params.args,
      scheduler = params.scheduler;
  var subject = params.subject;

  if (!subject) {
    subject = params.subject = new _AsyncSubject.AsyncSubject();

    var handler = function handler() {
      var innerArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        innerArgs[_i] = arguments[_i];
      }

      var err = innerArgs.shift();

      if (err) {
        _this.add(scheduler.schedule(dispatchError, 0, {
          err: err,
          subject: subject
        }));
      } else {
        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;

        _this.add(scheduler.schedule(dispatchNext, 0, {
          value: value,
          subject: subject
        }));
      }
    };

    try {
      callbackFunc.apply(context, args.concat([handler]));
    } catch (err) {
      this.add(scheduler.schedule(dispatchError, 0, {
        err: err,
        subject: subject
      }));
    }
  }

  this.add(subject.subscribe(subscriber));
}

function dispatchNext(arg) {
  var value = arg.value,
      subject = arg.subject;
  subject.next(value);
  subject.complete();
}

function dispatchError(arg) {
  var err = arg.err,
      subject = arg.subject;
  subject.error(err);
}

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.forkJoin = forkJoin;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Observable = __webpack_require__(5);

var _isArray = __webpack_require__(20);

var _empty = __webpack_require__(23);

var _subscribeToResult = __webpack_require__(7);

var _OuterSubscriber = __webpack_require__(6);

var _map = __webpack_require__(25);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */
function forkJoin() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  var resultSelector;

  if (typeof sources[sources.length - 1] === 'function') {
    resultSelector = sources.pop();
  }

  if (sources.length === 1 && (0, _isArray.isArray)(sources[0])) {
    sources = sources[0];
  }

  if (sources.length === 0) {
    return _empty.EMPTY;
  }

  if (resultSelector) {
    return forkJoin(sources).pipe((0, _map.map)(function (args) {
      return resultSelector.apply(void 0, args);
    }));
  }

  return new _Observable.Observable(function (subscriber) {
    return new ForkJoinSubscriber(subscriber, sources);
  });
}

var ForkJoinSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ForkJoinSubscriber, _super);

  function ForkJoinSubscriber(destination, sources) {
    var _this = _super.call(this, destination) || this;

    _this.sources = sources;
    _this.completed = 0;
    _this.haveValues = 0;
    var len = sources.length;
    _this.values = new Array(len);

    for (var i = 0; i < len; i++) {
      var source = sources[i];
      var innerSubscription = (0, _subscribeToResult.subscribeToResult)(_this, source, null, i);

      if (innerSubscription) {
        _this.add(innerSubscription);
      }
    }

    return _this;
  }

  ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values[outerIndex] = innerValue;

    if (!innerSub._hasValue) {
      innerSub._hasValue = true;
      this.haveValues++;
    }
  };

  ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {
    var _a = this,
        destination = _a.destination,
        haveValues = _a.haveValues,
        values = _a.values;

    var len = values.length;

    if (!innerSub._hasValue) {
      destination.complete();
      return;
    }

    this.completed++;

    if (this.completed !== len) {
      return;
    }

    if (haveValues === len) {
      destination.next(values);
    }

    destination.complete();
  };

  return ForkJoinSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromEvent = fromEvent;

var _Observable = __webpack_require__(5);

var _isArray = __webpack_require__(20);

var _isFunction = __webpack_require__(80);

var _map = __webpack_require__(25);

/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */
var toString = Object.prototype.toString;

function fromEvent(target, eventName, options, resultSelector) {
  if ((0, _isFunction.isFunction)(options)) {
    resultSelector = options;
    options = undefined;
  }

  if (resultSelector) {
    return fromEvent(target, eventName, options).pipe((0, _map.map)(function (args) {
      return (0, _isArray.isArray)(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
    }));
  }

  return new _Observable.Observable(function (subscriber) {
    function handler(e) {
      if (arguments.length > 1) {
        subscriber.next(Array.prototype.slice.call(arguments));
      } else {
        subscriber.next(e);
      }
    }

    setupSubscription(target, eventName, handler, subscriber, options);
  });
}

function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
  var unsubscribe;

  if (isEventTarget(sourceObj)) {
    var source_1 = sourceObj;
    sourceObj.addEventListener(eventName, handler, options);

    unsubscribe = function unsubscribe() {
      return source_1.removeEventListener(eventName, handler, options);
    };
  } else if (isJQueryStyleEventEmitter(sourceObj)) {
    var source_2 = sourceObj;
    sourceObj.on(eventName, handler);

    unsubscribe = function unsubscribe() {
      return source_2.off(eventName, handler);
    };
  } else if (isNodeStyleEventEmitter(sourceObj)) {
    var source_3 = sourceObj;
    sourceObj.addListener(eventName, handler);

    unsubscribe = function unsubscribe() {
      return source_3.removeListener(eventName, handler);
    };
  } else if (sourceObj && sourceObj.length) {
    for (var i = 0, len = sourceObj.length; i < len; i++) {
      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
    }
  } else {
    throw new TypeError('Invalid event target');
  }

  subscriber.add(unsubscribe);
}

function isNodeStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}

function isJQueryStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}

function isEventTarget(sourceObj) {
  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromEventPattern = fromEventPattern;

var _Observable = __webpack_require__(5);

var _isArray = __webpack_require__(20);

var _isFunction = __webpack_require__(80);

var _map = __webpack_require__(25);

/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */
function fromEventPattern(addHandler, removeHandler, resultSelector) {
  if (resultSelector) {
    return fromEventPattern(addHandler, removeHandler).pipe((0, _map.map)(function (args) {
      return (0, _isArray.isArray)(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
    }));
  }

  return new _Observable.Observable(function (subscriber) {
    var handler = function handler() {
      var e = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        e[_i] = arguments[_i];
      }

      return subscriber.next(e.length === 1 ? e[0] : e);
    };

    var retValue;

    try {
      retValue = addHandler(handler);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    if (!(0, _isFunction.isFunction)(removeHandler)) {
      return undefined;
    }

    return function () {
      return removeHandler(handler, retValue);
    };
  });
}

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromIterable = fromIterable;

var _Observable = __webpack_require__(5);

var _Subscription = __webpack_require__(15);

var _iterator = __webpack_require__(77);

var _subscribeToIterable = __webpack_require__(239);

/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */
function fromIterable(input, scheduler) {
  if (!input) {
    throw new Error('Iterable cannot be null');
  }

  if (!scheduler) {
    return new _Observable.Observable((0, _subscribeToIterable.subscribeToIterable)(input));
  } else {
    return new _Observable.Observable(function (subscriber) {
      var sub = new _Subscription.Subscription();
      var iterator;
      sub.add(function () {
        if (iterator && typeof iterator.return === 'function') {
          iterator.return();
        }
      });
      sub.add(scheduler.schedule(function () {
        iterator = input[_iterator.iterator]();
        sub.add(scheduler.schedule(function () {
          if (subscriber.closed) {
            return;
          }

          var value;
          var done;

          try {
            var result = iterator.next();
            value = result.value;
            done = result.done;
          } catch (err) {
            subscriber.error(err);
            return;
          }

          if (done) {
            subscriber.complete();
          } else {
            subscriber.next(value);
            this.schedule();
          }
        }));
      }));
      return sub;
    });
  }
}

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromObservable = fromObservable;

var _Observable = __webpack_require__(5);

var _Subscription = __webpack_require__(15);

var _observable = __webpack_require__(61);

var _subscribeToObservable = __webpack_require__(240);

/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */
function fromObservable(input, scheduler) {
  if (!scheduler) {
    return new _Observable.Observable((0, _subscribeToObservable.subscribeToObservable)(input));
  } else {
    return new _Observable.Observable(function (subscriber) {
      var sub = new _Subscription.Subscription();
      sub.add(scheduler.schedule(function () {
        var observable = input[_observable.observable]();

        sub.add(observable.subscribe({
          next: function next(value) {
            sub.add(scheduler.schedule(function () {
              return subscriber.next(value);
            }));
          },
          error: function error(err) {
            sub.add(scheduler.schedule(function () {
              return subscriber.error(err);
            }));
          },
          complete: function complete() {
            sub.add(scheduler.schedule(function () {
              return subscriber.complete();
            }));
          }
        }));
      }));
      return sub;
    });
  }
}

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromPromise = fromPromise;

var _Observable = __webpack_require__(5);

var _Subscription = __webpack_require__(15);

var _subscribeToPromise = __webpack_require__(241);

/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */
function fromPromise(input, scheduler) {
  if (!scheduler) {
    return new _Observable.Observable((0, _subscribeToPromise.subscribeToPromise)(input));
  } else {
    return new _Observable.Observable(function (subscriber) {
      var sub = new _Subscription.Subscription();
      sub.add(scheduler.schedule(function () {
        return input.then(function (value) {
          sub.add(scheduler.schedule(function () {
            subscriber.next(value);
            sub.add(scheduler.schedule(function () {
              return subscriber.complete();
            }));
          }));
        }, function (err) {
          sub.add(scheduler.schedule(function () {
            return subscriber.error(err);
          }));
        });
      }));
      return sub;
    });
  }
}

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generate = generate;

var _Observable = __webpack_require__(5);

var _identity = __webpack_require__(62);

var _isScheduler = __webpack_require__(27);

/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */
function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
  var resultSelector;
  var initialState;

  if (arguments.length == 1) {
    var options = initialStateOrOptions;
    initialState = options.initialState;
    condition = options.condition;
    iterate = options.iterate;
    resultSelector = options.resultSelector || _identity.identity;
    scheduler = options.scheduler;
  } else if (resultSelectorOrObservable === undefined || (0, _isScheduler.isScheduler)(resultSelectorOrObservable)) {
    initialState = initialStateOrOptions;
    resultSelector = _identity.identity;
    scheduler = resultSelectorOrObservable;
  } else {
    initialState = initialStateOrOptions;
    resultSelector = resultSelectorOrObservable;
  }

  return new _Observable.Observable(function (subscriber) {
    var state = initialState;

    if (scheduler) {
      return scheduler.schedule(dispatch, 0, {
        subscriber: subscriber,
        iterate: iterate,
        condition: condition,
        resultSelector: resultSelector,
        state: state
      });
    }

    do {
      if (condition) {
        var conditionResult = void 0;

        try {
          conditionResult = condition(state);
        } catch (err) {
          subscriber.error(err);
          return undefined;
        }

        if (!conditionResult) {
          subscriber.complete();
          break;
        }
      }

      var value = void 0;

      try {
        value = resultSelector(state);
      } catch (err) {
        subscriber.error(err);
        return undefined;
      }

      subscriber.next(value);

      if (subscriber.closed) {
        break;
      }

      try {
        state = iterate(state);
      } catch (err) {
        subscriber.error(err);
        return undefined;
      }
    } while (true);

    return undefined;
  });
}

function dispatch(state) {
  var subscriber = state.subscriber,
      condition = state.condition;

  if (subscriber.closed) {
    return undefined;
  }

  if (state.needIterate) {
    try {
      state.state = state.iterate(state.state);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }
  } else {
    state.needIterate = true;
  }

  if (condition) {
    var conditionResult = void 0;

    try {
      conditionResult = condition(state.state);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    if (!conditionResult) {
      subscriber.complete();
      return undefined;
    }

    if (subscriber.closed) {
      return undefined;
    }
  }

  var value;

  try {
    value = state.resultSelector(state.state);
  } catch (err) {
    subscriber.error(err);
    return undefined;
  }

  if (subscriber.closed) {
    return undefined;
  }

  subscriber.next(value);

  if (subscriber.closed) {
    return undefined;
  }

  return this.schedule(state);
}

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iif = iif;

var _defer = __webpack_require__(127);

var _empty = __webpack_require__(23);

/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */
function iif(condition, trueResult, falseResult) {
  if (trueResult === void 0) {
    trueResult = _empty.EMPTY;
  }

  if (falseResult === void 0) {
    falseResult = _empty.EMPTY;
  }

  return (0, _defer.defer)(function () {
    return condition() ? trueResult : falseResult;
  });
}

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interval = interval;

var _Observable = __webpack_require__(5);

var _async = __webpack_require__(19);

var _isNumeric = __webpack_require__(101);

/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */
function interval(period, scheduler) {
  if (period === void 0) {
    period = 0;
  }

  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  if (!(0, _isNumeric.isNumeric)(period) || period < 0) {
    period = 0;
  }

  if (!scheduler || typeof scheduler.schedule !== 'function') {
    scheduler = _async.async;
  }

  return new _Observable.Observable(function (subscriber) {
    subscriber.add(scheduler.schedule(dispatch, period, {
      subscriber: subscriber,
      counter: 0,
      period: period
    }));
    return subscriber;
  });
}

function dispatch(state) {
  var subscriber = state.subscriber,
      counter = state.counter,
      period = state.period;
  subscriber.next(counter);
  this.schedule({
    subscriber: subscriber,
    counter: counter + 1,
    period: period
  }, period);
}

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.never = never;
exports.NEVER = void 0;

var _Observable = __webpack_require__(5);

var _noop = __webpack_require__(102);

/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */
var NEVER =
/*@__PURE__*/
new _Observable.Observable(_noop.noop);
exports.NEVER = NEVER;

function never() {
  return NEVER;
}

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onErrorResumeNext = onErrorResumeNext;

var _Observable = __webpack_require__(5);

var _from = __webpack_require__(38);

var _isArray = __webpack_require__(20);

var _empty = __webpack_require__(23);

/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */
function onErrorResumeNext() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  if (sources.length === 0) {
    return _empty.EMPTY;
  }

  var first = sources[0],
      remainder = sources.slice(1);

  if (sources.length === 1 && (0, _isArray.isArray)(first)) {
    return onErrorResumeNext.apply(void 0, first);
  }

  return new _Observable.Observable(function (subscriber) {
    var subNext = function subNext() {
      return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber));
    };

    return (0, _from.from)(first).subscribe({
      next: function next(value) {
        subscriber.next(value);
      },
      error: subNext,
      complete: subNext
    });
  });
}

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pairs = pairs;
exports.dispatch = dispatch;

var _Observable = __webpack_require__(5);

var _Subscription = __webpack_require__(15);

/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */
function pairs(obj, scheduler) {
  if (!scheduler) {
    return new _Observable.Observable(function (subscriber) {
      var keys = Object.keys(obj);

      for (var i = 0; i < keys.length && !subscriber.closed; i++) {
        var key = keys[i];

        if (obj.hasOwnProperty(key)) {
          subscriber.next([key, obj[key]]);
        }
      }

      subscriber.complete();
    });
  } else {
    return new _Observable.Observable(function (subscriber) {
      var keys = Object.keys(obj);
      var subscription = new _Subscription.Subscription();
      subscription.add(scheduler.schedule(dispatch, 0, {
        keys: keys,
        index: 0,
        subscriber: subscriber,
        subscription: subscription,
        obj: obj
      }));
      return subscription;
    });
  }
}

function dispatch(state) {
  var keys = state.keys,
      index = state.index,
      subscriber = state.subscriber,
      subscription = state.subscription,
      obj = state.obj;

  if (!subscriber.closed) {
    if (index < keys.length) {
      var key = keys[index];
      subscriber.next([key, obj[key]]);
      subscription.add(this.schedule({
        keys: keys,
        index: index + 1,
        subscriber: subscriber,
        subscription: subscription,
        obj: obj
      }));
    } else {
      subscriber.complete();
    }
  }
}

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.range = range;
exports.dispatch = dispatch;

var _Observable = __webpack_require__(5);

/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */
function range(start, count, scheduler) {
  if (start === void 0) {
    start = 0;
  }

  if (count === void 0) {
    count = 0;
  }

  return new _Observable.Observable(function (subscriber) {
    var index = 0;
    var current = start;

    if (scheduler) {
      return scheduler.schedule(dispatch, 0, {
        index: index,
        count: count,
        start: start,
        subscriber: subscriber
      });
    } else {
      do {
        if (index++ >= count) {
          subscriber.complete();
          break;
        }

        subscriber.next(current++);

        if (subscriber.closed) {
          break;
        }
      } while (true);
    }

    return undefined;
  });
}

function dispatch(state) {
  var start = state.start,
      index = state.index,
      count = state.count,
      subscriber = state.subscriber;

  if (index >= count) {
    subscriber.complete();
    return;
  }

  subscriber.next(start);

  if (subscriber.closed) {
    return;
  }

  state.index = index + 1;
  state.start = start + 1;
  this.schedule(state);
}

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.using = using;

var _Observable = __webpack_require__(5);

var _from = __webpack_require__(38);

var _empty = __webpack_require__(23);

/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */
function using(resourceFactory, observableFactory) {
  return new _Observable.Observable(function (subscriber) {
    var resource;

    try {
      resource = resourceFactory();
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var result;

    try {
      result = observableFactory(resource);
    } catch (err) {
      subscriber.error(err);
      return undefined;
    }

    var source = result ? (0, _from.from)(result) : _empty.EMPTY;
    var subscription = source.subscribe(subscriber);
    return function () {
      subscription.unsubscribe();

      if (resource) {
        resource.unsubscribe();
      }
    };
  });
}

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.auditTime = auditTime;

var _async = __webpack_require__(19);

var _audit = __webpack_require__(219);

var _timer = __webpack_require__(218);

/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */
function auditTime(duration, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  return (0, _audit.audit)(function () {
    return (0, _timer.timer)(duration, scheduler);
  });
}

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buffer = buffer;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function buffer(closingNotifier) {
  return function bufferOperatorFunction(source) {
    return source.lift(new BufferOperator(closingNotifier));
  };
}

var BufferOperator =
/*@__PURE__*/
function () {
  function BufferOperator(closingNotifier) {
    this.closingNotifier = closingNotifier;
  }

  BufferOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
  };

  return BufferOperator;
}();

var BufferSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(BufferSubscriber, _super);

  function BufferSubscriber(destination, closingNotifier) {
    var _this = _super.call(this, destination) || this;

    _this.buffer = [];

    _this.add((0, _subscribeToResult.subscribeToResult)(_this, closingNotifier));

    return _this;
  }

  BufferSubscriber.prototype._next = function (value) {
    this.buffer.push(value);
  };

  BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var buffer = this.buffer;
    this.buffer = [];
    this.destination.next(buffer);
  };

  return BufferSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferCount = bufferCount;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function bufferCount(bufferSize, startBufferEvery) {
  if (startBufferEvery === void 0) {
    startBufferEvery = null;
  }

  return function bufferCountOperatorFunction(source) {
    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
  };
}

var BufferCountOperator =
/*@__PURE__*/
function () {
  function BufferCountOperator(bufferSize, startBufferEvery) {
    this.bufferSize = bufferSize;
    this.startBufferEvery = startBufferEvery;

    if (!startBufferEvery || bufferSize === startBufferEvery) {
      this.subscriberClass = BufferCountSubscriber;
    } else {
      this.subscriberClass = BufferSkipCountSubscriber;
    }
  }

  BufferCountOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
  };

  return BufferCountOperator;
}();

var BufferCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(BufferCountSubscriber, _super);

  function BufferCountSubscriber(destination, bufferSize) {
    var _this = _super.call(this, destination) || this;

    _this.bufferSize = bufferSize;
    _this.buffer = [];
    return _this;
  }

  BufferCountSubscriber.prototype._next = function (value) {
    var buffer = this.buffer;
    buffer.push(value);

    if (buffer.length == this.bufferSize) {
      this.destination.next(buffer);
      this.buffer = [];
    }
  };

  BufferCountSubscriber.prototype._complete = function () {
    var buffer = this.buffer;

    if (buffer.length > 0) {
      this.destination.next(buffer);
    }

    _super.prototype._complete.call(this);
  };

  return BufferCountSubscriber;
}(_Subscriber.Subscriber);

var BufferSkipCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(BufferSkipCountSubscriber, _super);

  function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
    var _this = _super.call(this, destination) || this;

    _this.bufferSize = bufferSize;
    _this.startBufferEvery = startBufferEvery;
    _this.buffers = [];
    _this.count = 0;
    return _this;
  }

  BufferSkipCountSubscriber.prototype._next = function (value) {
    var _a = this,
        bufferSize = _a.bufferSize,
        startBufferEvery = _a.startBufferEvery,
        buffers = _a.buffers,
        count = _a.count;

    this.count++;

    if (count % startBufferEvery === 0) {
      buffers.push([]);
    }

    for (var i = buffers.length; i--;) {
      var buffer = buffers[i];
      buffer.push(value);

      if (buffer.length === bufferSize) {
        buffers.splice(i, 1);
        this.destination.next(buffer);
      }
    }
  };

  BufferSkipCountSubscriber.prototype._complete = function () {
    var _a = this,
        buffers = _a.buffers,
        destination = _a.destination;

    while (buffers.length > 0) {
      var buffer = buffers.shift();

      if (buffer.length > 0) {
        destination.next(buffer);
      }
    }

    _super.prototype._complete.call(this);
  };

  return BufferSkipCountSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferTime = bufferTime;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _async = __webpack_require__(19);

var _Subscriber = __webpack_require__(3);

var _isScheduler = __webpack_require__(27);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */
function bufferTime(bufferTimeSpan) {
  var length = arguments.length;
  var scheduler = _async.async;

  if ((0, _isScheduler.isScheduler)(arguments[arguments.length - 1])) {
    scheduler = arguments[arguments.length - 1];
    length--;
  }

  var bufferCreationInterval = null;

  if (length >= 2) {
    bufferCreationInterval = arguments[1];
  }

  var maxBufferSize = Number.POSITIVE_INFINITY;

  if (length >= 3) {
    maxBufferSize = arguments[2];
  }

  return function bufferTimeOperatorFunction(source) {
    return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
  };
}

var BufferTimeOperator =
/*@__PURE__*/
function () {
  function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
    this.bufferTimeSpan = bufferTimeSpan;
    this.bufferCreationInterval = bufferCreationInterval;
    this.maxBufferSize = maxBufferSize;
    this.scheduler = scheduler;
  }

  BufferTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
  };

  return BufferTimeOperator;
}();

var Context =
/*@__PURE__*/
function () {
  function Context() {
    this.buffer = [];
  }

  return Context;
}();

var BufferTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(BufferTimeSubscriber, _super);

  function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.bufferTimeSpan = bufferTimeSpan;
    _this.bufferCreationInterval = bufferCreationInterval;
    _this.maxBufferSize = maxBufferSize;
    _this.scheduler = scheduler;
    _this.contexts = [];

    var context = _this.openContext();

    _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;

    if (_this.timespanOnly) {
      var timeSpanOnlyState = {
        subscriber: _this,
        context: context,
        bufferTimeSpan: bufferTimeSpan
      };

      _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
    } else {
      var closeState = {
        subscriber: _this,
        context: context
      };
      var creationState = {
        bufferTimeSpan: bufferTimeSpan,
        bufferCreationInterval: bufferCreationInterval,
        subscriber: _this,
        scheduler: scheduler
      };

      _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));

      _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
    }

    return _this;
  }

  BufferTimeSubscriber.prototype._next = function (value) {
    var contexts = this.contexts;
    var len = contexts.length;
    var filledBufferContext;

    for (var i = 0; i < len; i++) {
      var context_1 = contexts[i];
      var buffer = context_1.buffer;
      buffer.push(value);

      if (buffer.length == this.maxBufferSize) {
        filledBufferContext = context_1;
      }
    }

    if (filledBufferContext) {
      this.onBufferFull(filledBufferContext);
    }
  };

  BufferTimeSubscriber.prototype._error = function (err) {
    this.contexts.length = 0;

    _super.prototype._error.call(this, err);
  };

  BufferTimeSubscriber.prototype._complete = function () {
    var _a = this,
        contexts = _a.contexts,
        destination = _a.destination;

    while (contexts.length > 0) {
      var context_2 = contexts.shift();
      destination.next(context_2.buffer);
    }

    _super.prototype._complete.call(this);
  };

  BufferTimeSubscriber.prototype._unsubscribe = function () {
    this.contexts = null;
  };

  BufferTimeSubscriber.prototype.onBufferFull = function (context) {
    this.closeContext(context);
    var closeAction = context.closeAction;
    closeAction.unsubscribe();
    this.remove(closeAction);

    if (!this.closed && this.timespanOnly) {
      context = this.openContext();
      var bufferTimeSpan = this.bufferTimeSpan;
      var timeSpanOnlyState = {
        subscriber: this,
        context: context,
        bufferTimeSpan: bufferTimeSpan
      };
      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
    }
  };

  BufferTimeSubscriber.prototype.openContext = function () {
    var context = new Context();
    this.contexts.push(context);
    return context;
  };

  BufferTimeSubscriber.prototype.closeContext = function (context) {
    this.destination.next(context.buffer);
    var contexts = this.contexts;
    var spliceIndex = contexts ? contexts.indexOf(context) : -1;

    if (spliceIndex >= 0) {
      contexts.splice(contexts.indexOf(context), 1);
    }
  };

  return BufferTimeSubscriber;
}(_Subscriber.Subscriber);

function dispatchBufferTimeSpanOnly(state) {
  var subscriber = state.subscriber;
  var prevContext = state.context;

  if (prevContext) {
    subscriber.closeContext(prevContext);
  }

  if (!subscriber.closed) {
    state.context = subscriber.openContext();
    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
  }
}

function dispatchBufferCreation(state) {
  var bufferCreationInterval = state.bufferCreationInterval,
      bufferTimeSpan = state.bufferTimeSpan,
      subscriber = state.subscriber,
      scheduler = state.scheduler;
  var context = subscriber.openContext();
  var action = this;

  if (!subscriber.closed) {
    subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, {
      subscriber: subscriber,
      context: context
    }));
    action.schedule(state, bufferCreationInterval);
  }
}

function dispatchBufferClose(arg) {
  var subscriber = arg.subscriber,
      context = arg.context;
  subscriber.closeContext(context);
}

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferToggle = bufferToggle;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscription = __webpack_require__(15);

var _subscribeToResult = __webpack_require__(7);

var _OuterSubscriber = __webpack_require__(6);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */
function bufferToggle(openings, closingSelector) {
  return function bufferToggleOperatorFunction(source) {
    return source.lift(new BufferToggleOperator(openings, closingSelector));
  };
}

var BufferToggleOperator =
/*@__PURE__*/
function () {
  function BufferToggleOperator(openings, closingSelector) {
    this.openings = openings;
    this.closingSelector = closingSelector;
  }

  BufferToggleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
  };

  return BufferToggleOperator;
}();

var BufferToggleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(BufferToggleSubscriber, _super);

  function BufferToggleSubscriber(destination, openings, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.openings = openings;
    _this.closingSelector = closingSelector;
    _this.contexts = [];

    _this.add((0, _subscribeToResult.subscribeToResult)(_this, openings));

    return _this;
  }

  BufferToggleSubscriber.prototype._next = function (value) {
    var contexts = this.contexts;
    var len = contexts.length;

    for (var i = 0; i < len; i++) {
      contexts[i].buffer.push(value);
    }
  };

  BufferToggleSubscriber.prototype._error = function (err) {
    var contexts = this.contexts;

    while (contexts.length > 0) {
      var context_1 = contexts.shift();
      context_1.subscription.unsubscribe();
      context_1.buffer = null;
      context_1.subscription = null;
    }

    this.contexts = null;

    _super.prototype._error.call(this, err);
  };

  BufferToggleSubscriber.prototype._complete = function () {
    var contexts = this.contexts;

    while (contexts.length > 0) {
      var context_2 = contexts.shift();
      this.destination.next(context_2.buffer);
      context_2.subscription.unsubscribe();
      context_2.buffer = null;
      context_2.subscription = null;
    }

    this.contexts = null;

    _super.prototype._complete.call(this);
  };

  BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
  };

  BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
    this.closeBuffer(innerSub.context);
  };

  BufferToggleSubscriber.prototype.openBuffer = function (value) {
    try {
      var closingSelector = this.closingSelector;
      var closingNotifier = closingSelector.call(this, value);

      if (closingNotifier) {
        this.trySubscribe(closingNotifier);
      }
    } catch (err) {
      this._error(err);
    }
  };

  BufferToggleSubscriber.prototype.closeBuffer = function (context) {
    var contexts = this.contexts;

    if (contexts && context) {
      var buffer = context.buffer,
          subscription = context.subscription;
      this.destination.next(buffer);
      contexts.splice(contexts.indexOf(context), 1);
      this.remove(subscription);
      subscription.unsubscribe();
    }
  };

  BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
    var contexts = this.contexts;
    var buffer = [];
    var subscription = new _Subscription.Subscription();
    var context = {
      buffer: buffer,
      subscription: subscription
    };
    contexts.push(context);
    var innerSubscription = (0, _subscribeToResult.subscribeToResult)(this, closingNotifier, context);

    if (!innerSubscription || innerSubscription.closed) {
      this.closeBuffer(context);
    } else {
      innerSubscription.context = context;
      this.add(innerSubscription);
      subscription.add(innerSubscription);
    }
  };

  return BufferToggleSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferWhen = bufferWhen;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscription = __webpack_require__(15);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function bufferWhen(closingSelector) {
  return function (source) {
    return source.lift(new BufferWhenOperator(closingSelector));
  };
}

var BufferWhenOperator =
/*@__PURE__*/
function () {
  function BufferWhenOperator(closingSelector) {
    this.closingSelector = closingSelector;
  }

  BufferWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
  };

  return BufferWhenOperator;
}();

var BufferWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(BufferWhenSubscriber, _super);

  function BufferWhenSubscriber(destination, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.closingSelector = closingSelector;
    _this.subscribing = false;

    _this.openBuffer();

    return _this;
  }

  BufferWhenSubscriber.prototype._next = function (value) {
    this.buffer.push(value);
  };

  BufferWhenSubscriber.prototype._complete = function () {
    var buffer = this.buffer;

    if (buffer) {
      this.destination.next(buffer);
    }

    _super.prototype._complete.call(this);
  };

  BufferWhenSubscriber.prototype._unsubscribe = function () {
    this.buffer = null;
    this.subscribing = false;
  };

  BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.openBuffer();
  };

  BufferWhenSubscriber.prototype.notifyComplete = function () {
    if (this.subscribing) {
      this.complete();
    } else {
      this.openBuffer();
    }
  };

  BufferWhenSubscriber.prototype.openBuffer = function () {
    var closingSubscription = this.closingSubscription;

    if (closingSubscription) {
      this.remove(closingSubscription);
      closingSubscription.unsubscribe();
    }

    var buffer = this.buffer;

    if (this.buffer) {
      this.destination.next(buffer);
    }

    this.buffer = [];
    var closingNotifier = (0, _tryCatch.tryCatch)(this.closingSelector)();

    if (closingNotifier === _errorObject.errorObject) {
      this.error(_errorObject.errorObject.e);
    } else {
      closingSubscription = new _Subscription.Subscription();
      this.closingSubscription = closingSubscription;
      this.add(closingSubscription);
      this.subscribing = true;
      closingSubscription.add((0, _subscribeToResult.subscribeToResult)(this, closingNotifier));
      this.subscribing = false;
    }
  };

  return BufferWhenSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.catchError = catchError;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function catchError(selector) {
  return function catchErrorOperatorFunction(source) {
    var operator = new CatchOperator(selector);
    var caught = source.lift(operator);
    return operator.caught = caught;
  };
}

var CatchOperator =
/*@__PURE__*/
function () {
  function CatchOperator(selector) {
    this.selector = selector;
  }

  CatchOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
  };

  return CatchOperator;
}();

var CatchSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(CatchSubscriber, _super);

  function CatchSubscriber(destination, selector, caught) {
    var _this = _super.call(this, destination) || this;

    _this.selector = selector;
    _this.caught = caught;
    return _this;
  }

  CatchSubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var result = void 0;

      try {
        result = this.selector(err, this.caught);
      } catch (err2) {
        _super.prototype.error.call(this, err2);

        return;
      }

      this._unsubscribeAndRecycle();

      this.add((0, _subscribeToResult.subscribeToResult)(this, result));
    }
  };

  return CatchSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineAll = combineAll;

var _combineLatest = __webpack_require__(126);

/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */
function combineAll(project) {
  return function (source) {
    return source.lift(new _combineLatest.CombineLatestOperator(project));
  };
}

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineLatest = combineLatest;

var _isArray = __webpack_require__(20);

var _combineLatest = __webpack_require__(126);

var _from = __webpack_require__(38);

/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */
var none = {};

function combineLatest() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  var project = null;

  if (typeof observables[observables.length - 1] === 'function') {
    project = observables.pop();
  }

  if (observables.length === 1 && (0, _isArray.isArray)(observables[0])) {
    observables = observables[0].slice();
  }

  return function (source) {
    return source.lift.call((0, _from.from)([source].concat(observables)), new _combineLatest.CombineLatestOperator(project));
  };
}

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = concat;

var _concat = __webpack_require__(96);

/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */
function concat() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function (source) {
    return source.lift.call(_concat.concat.apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatMapTo = concatMapTo;

var _concatMap = __webpack_require__(221);

/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */
function concatMapTo(innerObservable, resultSelector) {
  return (0, _concatMap.concatMap)(function () {
    return innerObservable;
  }, resultSelector);
}

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.count = count;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function count(predicate) {
  return function (source) {
    return source.lift(new CountOperator(predicate, source));
  };
}

var CountOperator =
/*@__PURE__*/
function () {
  function CountOperator(predicate, source) {
    this.predicate = predicate;
    this.source = source;
  }

  CountOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
  };

  return CountOperator;
}();

var CountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(CountSubscriber, _super);

  function CountSubscriber(destination, predicate, source) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.source = source;
    _this.count = 0;
    _this.index = 0;
    return _this;
  }

  CountSubscriber.prototype._next = function (value) {
    if (this.predicate) {
      this._tryPredicate(value);
    } else {
      this.count++;
    }
  };

  CountSubscriber.prototype._tryPredicate = function (value) {
    var result;

    try {
      result = this.predicate(value, this.index++, this.source);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    if (result) {
      this.count++;
    }
  };

  CountSubscriber.prototype._complete = function () {
    this.destination.next(this.count);
    this.destination.complete();
  };

  return CountSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounce = debounce;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function debounce(durationSelector) {
  return function (source) {
    return source.lift(new DebounceOperator(durationSelector));
  };
}

var DebounceOperator =
/*@__PURE__*/
function () {
  function DebounceOperator(durationSelector) {
    this.durationSelector = durationSelector;
  }

  DebounceOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
  };

  return DebounceOperator;
}();

var DebounceSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DebounceSubscriber, _super);

  function DebounceSubscriber(destination, durationSelector) {
    var _this = _super.call(this, destination) || this;

    _this.durationSelector = durationSelector;
    _this.hasValue = false;
    _this.durationSubscription = null;
    return _this;
  }

  DebounceSubscriber.prototype._next = function (value) {
    try {
      var result = this.durationSelector.call(this, value);

      if (result) {
        this._tryNext(value, result);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  DebounceSubscriber.prototype._complete = function () {
    this.emitValue();
    this.destination.complete();
  };

  DebounceSubscriber.prototype._tryNext = function (value, duration) {
    var subscription = this.durationSubscription;
    this.value = value;
    this.hasValue = true;

    if (subscription) {
      subscription.unsubscribe();
      this.remove(subscription);
    }

    subscription = (0, _subscribeToResult.subscribeToResult)(this, duration);

    if (subscription && !subscription.closed) {
      this.add(this.durationSubscription = subscription);
    }
  };

  DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.emitValue();
  };

  DebounceSubscriber.prototype.notifyComplete = function () {
    this.emitValue();
  };

  DebounceSubscriber.prototype.emitValue = function () {
    if (this.hasValue) {
      var value = this.value;
      var subscription = this.durationSubscription;

      if (subscription) {
        this.durationSubscription = null;
        subscription.unsubscribe();
        this.remove(subscription);
      }

      this.value = null;
      this.hasValue = false;

      _super.prototype._next.call(this, value);
    }
  };

  return DebounceSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounceTime = debounceTime;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _async = __webpack_require__(19);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */
function debounceTime(dueTime, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  return function (source) {
    return source.lift(new DebounceTimeOperator(dueTime, scheduler));
  };
}

var DebounceTimeOperator =
/*@__PURE__*/
function () {
  function DebounceTimeOperator(dueTime, scheduler) {
    this.dueTime = dueTime;
    this.scheduler = scheduler;
  }

  DebounceTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
  };

  return DebounceTimeOperator;
}();

var DebounceTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DebounceTimeSubscriber, _super);

  function DebounceTimeSubscriber(destination, dueTime, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.dueTime = dueTime;
    _this.scheduler = scheduler;
    _this.debouncedSubscription = null;
    _this.lastValue = null;
    _this.hasValue = false;
    return _this;
  }

  DebounceTimeSubscriber.prototype._next = function (value) {
    this.clearDebounce();
    this.lastValue = value;
    this.hasValue = true;
    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
  };

  DebounceTimeSubscriber.prototype._complete = function () {
    this.debouncedNext();
    this.destination.complete();
  };

  DebounceTimeSubscriber.prototype.debouncedNext = function () {
    this.clearDebounce();

    if (this.hasValue) {
      var lastValue = this.lastValue;
      this.lastValue = null;
      this.hasValue = false;
      this.destination.next(lastValue);
    }
  };

  DebounceTimeSubscriber.prototype.clearDebounce = function () {
    var debouncedSubscription = this.debouncedSubscription;

    if (debouncedSubscription !== null) {
      this.remove(debouncedSubscription);
      debouncedSubscription.unsubscribe();
      this.debouncedSubscription = null;
    }
  };

  return DebounceTimeSubscriber;
}(_Subscriber.Subscriber);

function dispatchNext(subscriber) {
  subscriber.debouncedNext();
}

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delay = delay;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _async = __webpack_require__(19);

var _isDate = __webpack_require__(234);

var _Subscriber = __webpack_require__(3);

var _Notification = __webpack_require__(94);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */
function delay(delay, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  var absoluteDelay = (0, _isDate.isDate)(delay);
  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);
  return function (source) {
    return source.lift(new DelayOperator(delayFor, scheduler));
  };
}

var DelayOperator =
/*@__PURE__*/
function () {
  function DelayOperator(delay, scheduler) {
    this.delay = delay;
    this.scheduler = scheduler;
  }

  DelayOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
  };

  return DelayOperator;
}();

var DelaySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DelaySubscriber, _super);

  function DelaySubscriber(destination, delay, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.delay = delay;
    _this.scheduler = scheduler;
    _this.queue = [];
    _this.active = false;
    _this.errored = false;
    return _this;
  }

  DelaySubscriber.dispatch = function (state) {
    var source = state.source;
    var queue = source.queue;
    var scheduler = state.scheduler;
    var destination = state.destination;

    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {
      queue.shift().notification.observe(destination);
    }

    if (queue.length > 0) {
      var delay_1 = Math.max(0, queue[0].time - scheduler.now());
      this.schedule(state, delay_1);
    } else {
      this.unsubscribe();
      source.active = false;
    }
  };

  DelaySubscriber.prototype._schedule = function (scheduler) {
    this.active = true;
    this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
      source: this,
      destination: this.destination,
      scheduler: scheduler
    }));
  };

  DelaySubscriber.prototype.scheduleNotification = function (notification) {
    if (this.errored === true) {
      return;
    }

    var scheduler = this.scheduler;
    var message = new DelayMessage(scheduler.now() + this.delay, notification);
    this.queue.push(message);

    if (this.active === false) {
      this._schedule(scheduler);
    }
  };

  DelaySubscriber.prototype._next = function (value) {
    this.scheduleNotification(_Notification.Notification.createNext(value));
  };

  DelaySubscriber.prototype._error = function (err) {
    this.errored = true;
    this.queue = [];
    this.destination.error(err);
  };

  DelaySubscriber.prototype._complete = function () {
    this.scheduleNotification(_Notification.Notification.createComplete());
  };

  return DelaySubscriber;
}(_Subscriber.Subscriber);

var DelayMessage =
/*@__PURE__*/
function () {
  function DelayMessage(time, notification) {
    this.time = time;
    this.notification = notification;
  }

  return DelayMessage;
}();

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delayWhen = delayWhen;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _Observable = __webpack_require__(5);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function delayWhen(delayDurationSelector, subscriptionDelay) {
  if (subscriptionDelay) {
    return function (source) {
      return new SubscriptionDelayObservable(source, subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));
    };
  }

  return function (source) {
    return source.lift(new DelayWhenOperator(delayDurationSelector));
  };
}

var DelayWhenOperator =
/*@__PURE__*/
function () {
  function DelayWhenOperator(delayDurationSelector) {
    this.delayDurationSelector = delayDurationSelector;
  }

  DelayWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
  };

  return DelayWhenOperator;
}();

var DelayWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DelayWhenSubscriber, _super);

  function DelayWhenSubscriber(destination, delayDurationSelector) {
    var _this = _super.call(this, destination) || this;

    _this.delayDurationSelector = delayDurationSelector;
    _this.completed = false;
    _this.delayNotifierSubscriptions = [];
    return _this;
  }

  DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(outerValue);
    this.removeSubscription(innerSub);
    this.tryComplete();
  };

  DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
    var value = this.removeSubscription(innerSub);

    if (value) {
      this.destination.next(value);
    }

    this.tryComplete();
  };

  DelayWhenSubscriber.prototype._next = function (value) {
    try {
      var delayNotifier = this.delayDurationSelector(value);

      if (delayNotifier) {
        this.tryDelay(delayNotifier, value);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  DelayWhenSubscriber.prototype._complete = function () {
    this.completed = true;
    this.tryComplete();
  };

  DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
    subscription.unsubscribe();
    var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);

    if (subscriptionIdx !== -1) {
      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
    }

    return subscription.outerValue;
  };

  DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
    var notifierSubscription = (0, _subscribeToResult.subscribeToResult)(this, delayNotifier, value);

    if (notifierSubscription && !notifierSubscription.closed) {
      this.add(notifierSubscription);
      this.delayNotifierSubscriptions.push(notifierSubscription);
    }
  };

  DelayWhenSubscriber.prototype.tryComplete = function () {
    if (this.completed && this.delayNotifierSubscriptions.length === 0) {
      this.destination.complete();
    }
  };

  return DelayWhenSubscriber;
}(_OuterSubscriber.OuterSubscriber);

var SubscriptionDelayObservable =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SubscriptionDelayObservable, _super);

  function SubscriptionDelayObservable(source, subscriptionDelay) {
    var _this = _super.call(this) || this;

    _this.source = source;
    _this.subscriptionDelay = subscriptionDelay;
    return _this;
  }

  SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
  };

  return SubscriptionDelayObservable;
}(_Observable.Observable);

var SubscriptionDelaySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SubscriptionDelaySubscriber, _super);

  function SubscriptionDelaySubscriber(parent, source) {
    var _this = _super.call(this) || this;

    _this.parent = parent;
    _this.source = source;
    _this.sourceSubscribed = false;
    return _this;
  }

  SubscriptionDelaySubscriber.prototype._next = function (unused) {
    this.subscribeToSource();
  };

  SubscriptionDelaySubscriber.prototype._error = function (err) {
    this.unsubscribe();
    this.parent.error(err);
  };

  SubscriptionDelaySubscriber.prototype._complete = function () {
    this.subscribeToSource();
  };

  SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
    if (!this.sourceSubscribed) {
      this.sourceSubscribed = true;
      this.unsubscribe();
      this.source.subscribe(this.parent);
    }
  };

  return SubscriptionDelaySubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dematerialize = dematerialize;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function dematerialize() {
  return function dematerializeOperatorFunction(source) {
    return source.lift(new DeMaterializeOperator());
  };
}

var DeMaterializeOperator =
/*@__PURE__*/
function () {
  function DeMaterializeOperator() {}

  DeMaterializeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DeMaterializeSubscriber(subscriber));
  };

  return DeMaterializeOperator;
}();

var DeMaterializeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DeMaterializeSubscriber, _super);

  function DeMaterializeSubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  DeMaterializeSubscriber.prototype._next = function (value) {
    value.observe(this.destination);
  };

  return DeMaterializeSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distinct = distinct;
exports.DistinctSubscriber = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function distinct(keySelector, flushes) {
  return function (source) {
    return source.lift(new DistinctOperator(keySelector, flushes));
  };
}

var DistinctOperator =
/*@__PURE__*/
function () {
  function DistinctOperator(keySelector, flushes) {
    this.keySelector = keySelector;
    this.flushes = flushes;
  }

  DistinctOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
  };

  return DistinctOperator;
}();

var DistinctSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(DistinctSubscriber, _super);

  function DistinctSubscriber(destination, keySelector, flushes) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.values = new Set();

    if (flushes) {
      _this.add((0, _subscribeToResult.subscribeToResult)(_this, flushes));
    }

    return _this;
  }

  DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values.clear();
  };

  DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  DistinctSubscriber.prototype._next = function (value) {
    if (this.keySelector) {
      this._useKeySelector(value);
    } else {
      this._finalizeNext(value, value);
    }
  };

  DistinctSubscriber.prototype._useKeySelector = function (value) {
    var key;
    var destination = this.destination;

    try {
      key = this.keySelector(value);
    } catch (err) {
      destination.error(err);
      return;
    }

    this._finalizeNext(key, value);
  };

  DistinctSubscriber.prototype._finalizeNext = function (key, value) {
    var values = this.values;

    if (!values.has(key)) {
      values.add(key);
      this.destination.next(value);
    }
  };

  return DistinctSubscriber;
}(_OuterSubscriber.OuterSubscriber);

exports.DistinctSubscriber = DistinctSubscriber;

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;

var _distinctUntilChanged = __webpack_require__(222);

/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */
function distinctUntilKeyChanged(key, compare) {
  return (0, _distinctUntilChanged.distinctUntilChanged)(function (x, y) {
    return compare ? compare(x[key], y[key]) : x[key] === y[key];
  });
}

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elementAt = elementAt;

var _ArgumentOutOfRangeError = __webpack_require__(78);

var _filter = __webpack_require__(74);

var _throwIfEmpty = __webpack_require__(99);

var _defaultIfEmpty = __webpack_require__(73);

var _take = __webpack_require__(136);

/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */
function elementAt(index, defaultValue) {
  if (index < 0) {
    throw new _ArgumentOutOfRangeError.ArgumentOutOfRangeError();
  }

  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe((0, _filter.filter)(function (v, i) {
      return i === index;
    }), (0, _take.take)(1), hasDefaultValue ? (0, _defaultIfEmpty.defaultIfEmpty)(defaultValue) : (0, _throwIfEmpty.throwIfEmpty)(function () {
      return new _ArgumentOutOfRangeError.ArgumentOutOfRangeError();
    }));
  };
}

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.endWith = endWith;

var _fromArray = __webpack_require__(46);

var _scalar = __webpack_require__(129);

var _empty = __webpack_require__(23);

var _concat = __webpack_require__(96);

var _isScheduler = __webpack_require__(27);

/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */
function endWith() {
  var array = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    array[_i] = arguments[_i];
  }

  return function (source) {
    var scheduler = array[array.length - 1];

    if ((0, _isScheduler.isScheduler)(scheduler)) {
      array.pop();
    } else {
      scheduler = null;
    }

    var len = array.length;

    if (len === 1 && !scheduler) {
      return (0, _concat.concat)(source, (0, _scalar.scalar)(array[0]));
    } else if (len > 0) {
      return (0, _concat.concat)(source, (0, _fromArray.fromArray)(array, scheduler));
    } else {
      return (0, _concat.concat)(source, (0, _empty.empty)(scheduler));
    }
  };
}

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.every = every;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function every(predicate, thisArg) {
  return function (source) {
    return source.lift(new EveryOperator(predicate, thisArg, source));
  };
}

var EveryOperator =
/*@__PURE__*/
function () {
  function EveryOperator(predicate, thisArg, source) {
    this.predicate = predicate;
    this.thisArg = thisArg;
    this.source = source;
  }

  EveryOperator.prototype.call = function (observer, source) {
    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
  };

  return EveryOperator;
}();

var EverySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(EverySubscriber, _super);

  function EverySubscriber(destination, predicate, thisArg, source) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.thisArg = thisArg;
    _this.source = source;
    _this.index = 0;
    _this.thisArg = thisArg || _this;
    return _this;
  }

  EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
    this.destination.next(everyValueMatch);
    this.destination.complete();
  };

  EverySubscriber.prototype._next = function (value) {
    var result = false;

    try {
      result = this.predicate.call(this.thisArg, value, this.index++, this.source);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    if (!result) {
      this.notifyComplete(false);
    }
  };

  EverySubscriber.prototype._complete = function () {
    this.notifyComplete(true);
  };

  return EverySubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exhaust = exhaust;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function exhaust() {
  return function (source) {
    return source.lift(new SwitchFirstOperator());
  };
}

var SwitchFirstOperator =
/*@__PURE__*/
function () {
  function SwitchFirstOperator() {}

  SwitchFirstOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SwitchFirstSubscriber(subscriber));
  };

  return SwitchFirstOperator;
}();

var SwitchFirstSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SwitchFirstSubscriber, _super);

  function SwitchFirstSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.hasCompleted = false;
    _this.hasSubscription = false;
    return _this;
  }

  SwitchFirstSubscriber.prototype._next = function (value) {
    if (!this.hasSubscription) {
      this.hasSubscription = true;
      this.add((0, _subscribeToResult.subscribeToResult)(this, value));
    }
  };

  SwitchFirstSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (!this.hasSubscription) {
      this.destination.complete();
    }
  };

  SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
    this.remove(innerSub);
    this.hasSubscription = false;

    if (this.hasCompleted) {
      this.destination.complete();
    }
  };

  return SwitchFirstSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exhaustMap = exhaustMap;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

var _map = __webpack_require__(25);

var _from = __webpack_require__(38);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */
function exhaustMap(project, resultSelector) {
  if (resultSelector) {
    return function (source) {
      return source.pipe(exhaustMap(function (a, i) {
        return (0, _from.from)(project(a, i)).pipe((0, _map.map)(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return function (source) {
    return source.lift(new ExhauseMapOperator(project));
  };
}

var ExhauseMapOperator =
/*@__PURE__*/
function () {
  function ExhauseMapOperator(project) {
    this.project = project;
  }

  ExhauseMapOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
  };

  return ExhauseMapOperator;
}();

var ExhaustMapSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ExhaustMapSubscriber, _super);

  function ExhaustMapSubscriber(destination, project) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.hasSubscription = false;
    _this.hasCompleted = false;
    _this.index = 0;
    return _this;
  }

  ExhaustMapSubscriber.prototype._next = function (value) {
    if (!this.hasSubscription) {
      this.tryNext(value);
    }
  };

  ExhaustMapSubscriber.prototype.tryNext = function (value) {
    var index = this.index++;
    var destination = this.destination;

    try {
      var result = this.project(value, index);
      this.hasSubscription = true;
      this.add((0, _subscribeToResult.subscribeToResult)(this, result, value, index));
    } catch (err) {
      destination.error(err);
    }
  };

  ExhaustMapSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (!this.hasSubscription) {
      this.destination.complete();
    }
  };

  ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };

  ExhaustMapSubscriber.prototype.notifyError = function (err) {
    this.destination.error(err);
  };

  ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {
    this.remove(innerSub);
    this.hasSubscription = false;

    if (this.hasCompleted) {
      this.destination.complete();
    }
  };

  return ExhaustMapSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expand = expand;
exports.ExpandSubscriber = exports.ExpandOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function expand(project, concurrent, scheduler) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  if (scheduler === void 0) {
    scheduler = undefined;
  }

  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
  return function (source) {
    return source.lift(new ExpandOperator(project, concurrent, scheduler));
  };
}

var ExpandOperator =
/*@__PURE__*/
function () {
  function ExpandOperator(project, concurrent, scheduler) {
    this.project = project;
    this.concurrent = concurrent;
    this.scheduler = scheduler;
  }

  ExpandOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
  };

  return ExpandOperator;
}();

exports.ExpandOperator = ExpandOperator;

var ExpandSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ExpandSubscriber, _super);

  function ExpandSubscriber(destination, project, concurrent, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.project = project;
    _this.concurrent = concurrent;
    _this.scheduler = scheduler;
    _this.index = 0;
    _this.active = 0;
    _this.hasCompleted = false;

    if (concurrent < Number.POSITIVE_INFINITY) {
      _this.buffer = [];
    }

    return _this;
  }

  ExpandSubscriber.dispatch = function (arg) {
    var subscriber = arg.subscriber,
        result = arg.result,
        value = arg.value,
        index = arg.index;
    subscriber.subscribeToProjection(result, value, index);
  };

  ExpandSubscriber.prototype._next = function (value) {
    var destination = this.destination;

    if (destination.closed) {
      this._complete();

      return;
    }

    var index = this.index++;

    if (this.active < this.concurrent) {
      destination.next(value);
      var result = (0, _tryCatch.tryCatch)(this.project)(value, index);

      if (result === _errorObject.errorObject) {
        destination.error(_errorObject.errorObject.e);
      } else if (!this.scheduler) {
        this.subscribeToProjection(result, value, index);
      } else {
        var state = {
          subscriber: this,
          result: result,
          value: value,
          index: index
        };
        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
      }
    } else {
      this.buffer.push(value);
    }
  };

  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
    this.active++;
    this.add((0, _subscribeToResult.subscribeToResult)(this, result, value, index));
  };

  ExpandSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (this.hasCompleted && this.active === 0) {
      this.destination.complete();
    }
  };

  ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this._next(innerValue);
  };

  ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
    var buffer = this.buffer;
    this.remove(innerSub);
    this.active--;

    if (buffer && buffer.length > 0) {
      this._next(buffer.shift());
    }

    if (this.hasCompleted && this.active === 0) {
      this.destination.complete();
    }
  };

  return ExpandSubscriber;
}(_OuterSubscriber.OuterSubscriber);

exports.ExpandSubscriber = ExpandSubscriber;

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.finalize = finalize;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _Subscription = __webpack_require__(15);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */
function finalize(callback) {
  return function (source) {
    return source.lift(new FinallyOperator(callback));
  };
}

var FinallyOperator =
/*@__PURE__*/
function () {
  function FinallyOperator(callback) {
    this.callback = callback;
  }

  FinallyOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new FinallySubscriber(subscriber, this.callback));
  };

  return FinallyOperator;
}();

var FinallySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(FinallySubscriber, _super);

  function FinallySubscriber(destination, callback) {
    var _this = _super.call(this, destination) || this;

    _this.add(new _Subscription.Subscription(callback));

    return _this;
  }

  return FinallySubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findIndex = findIndex;

var _find = __webpack_require__(223);

/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */
function findIndex(predicate, thisArg) {
  return function (source) {
    return source.lift(new _find.FindValueOperator(predicate, source, true, thisArg));
  };
}

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.first = first;

var _EmptyError = __webpack_require__(79);

var _filter = __webpack_require__(74);

var _take = __webpack_require__(136);

var _defaultIfEmpty = __webpack_require__(73);

var _throwIfEmpty = __webpack_require__(99);

var _identity = __webpack_require__(62);

/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */
function first(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? (0, _filter.filter)(function (v, i) {
      return predicate(v, i, source);
    }) : _identity.identity, (0, _take.take)(1), hasDefaultValue ? (0, _defaultIfEmpty.defaultIfEmpty)(defaultValue) : (0, _throwIfEmpty.throwIfEmpty)(function () {
      return new _EmptyError.EmptyError();
    }));
  };
}

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ignoreElements = ignoreElements;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function ignoreElements() {
  return function ignoreElementsOperatorFunction(source) {
    return source.lift(new IgnoreElementsOperator());
  };
}

var IgnoreElementsOperator =
/*@__PURE__*/
function () {
  function IgnoreElementsOperator() {}

  IgnoreElementsOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new IgnoreElementsSubscriber(subscriber));
  };

  return IgnoreElementsOperator;
}();

var IgnoreElementsSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(IgnoreElementsSubscriber, _super);

  function IgnoreElementsSubscriber() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  IgnoreElementsSubscriber.prototype._next = function (unused) {};

  return IgnoreElementsSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEmpty = isEmpty;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function isEmpty() {
  return function (source) {
    return source.lift(new IsEmptyOperator());
  };
}

var IsEmptyOperator =
/*@__PURE__*/
function () {
  function IsEmptyOperator() {}

  IsEmptyOperator.prototype.call = function (observer, source) {
    return source.subscribe(new IsEmptySubscriber(observer));
  };

  return IsEmptyOperator;
}();

var IsEmptySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(IsEmptySubscriber, _super);

  function IsEmptySubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
    var destination = this.destination;
    destination.next(isEmpty);
    destination.complete();
  };

  IsEmptySubscriber.prototype._next = function (value) {
    this.notifyComplete(false);
  };

  IsEmptySubscriber.prototype._complete = function () {
    this.notifyComplete(true);
  };

  return IsEmptySubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.last = last;

var _EmptyError = __webpack_require__(79);

var _filter = __webpack_require__(74);

var _takeLast = __webpack_require__(137);

var _throwIfEmpty = __webpack_require__(99);

var _defaultIfEmpty = __webpack_require__(73);

var _identity = __webpack_require__(62);

/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */
function last(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? (0, _filter.filter)(function (v, i) {
      return predicate(v, i, source);
    }) : _identity.identity, (0, _takeLast.takeLast)(1), hasDefaultValue ? (0, _defaultIfEmpty.defaultIfEmpty)(defaultValue) : (0, _throwIfEmpty.throwIfEmpty)(function () {
      return new _EmptyError.EmptyError();
    }));
  };
}

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapTo = mapTo;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function mapTo(value) {
  return function (source) {
    return source.lift(new MapToOperator(value));
  };
}

var MapToOperator =
/*@__PURE__*/
function () {
  function MapToOperator(value) {
    this.value = value;
  }

  MapToOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MapToSubscriber(subscriber, this.value));
  };

  return MapToOperator;
}();

var MapToSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(MapToSubscriber, _super);

  function MapToSubscriber(destination, value) {
    var _this = _super.call(this, destination) || this;

    _this.value = value;
    return _this;
  }

  MapToSubscriber.prototype._next = function (x) {
    this.destination.next(this.value);
  };

  return MapToSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.materialize = materialize;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _Notification = __webpack_require__(94);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */
function materialize() {
  return function materializeOperatorFunction(source) {
    return source.lift(new MaterializeOperator());
  };
}

var MaterializeOperator =
/*@__PURE__*/
function () {
  function MaterializeOperator() {}

  MaterializeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MaterializeSubscriber(subscriber));
  };

  return MaterializeOperator;
}();

var MaterializeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(MaterializeSubscriber, _super);

  function MaterializeSubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  MaterializeSubscriber.prototype._next = function (value) {
    this.destination.next(_Notification.Notification.createNext(value));
  };

  MaterializeSubscriber.prototype._error = function (err) {
    var destination = this.destination;
    destination.next(_Notification.Notification.createError(err));
    destination.complete();
  };

  MaterializeSubscriber.prototype._complete = function () {
    var destination = this.destination;
    destination.next(_Notification.Notification.createComplete());
    destination.complete();
  };

  return MaterializeSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = max;

var _reduce = __webpack_require__(98);

/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */
function max(comparer) {
  var max = typeof comparer === 'function' ? function (x, y) {
    return comparer(x, y) > 0 ? x : y;
  } : function (x, y) {
    return x > y ? x : y;
  };
  return (0, _reduce.reduce)(max);
}

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.merge = merge;

var _merge = __webpack_require__(216);

/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */
function merge() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function (source) {
    return source.lift.call(_merge.merge.apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeMapTo = mergeMapTo;

var _mergeMap = __webpack_require__(97);

/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */
function mergeMapTo(innerObservable, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  if (typeof resultSelector === 'function') {
    return (0, _mergeMap.mergeMap)(function () {
      return innerObservable;
    }, resultSelector, concurrent);
  }

  if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return (0, _mergeMap.mergeMap)(function () {
    return innerObservable;
  }, concurrent);
}

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeScan = mergeScan;
exports.MergeScanSubscriber = exports.MergeScanOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _subscribeToResult = __webpack_require__(7);

var _OuterSubscriber = __webpack_require__(6);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */
function mergeScan(accumulator, seed, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }

  return function (source) {
    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));
  };
}

var MergeScanOperator =
/*@__PURE__*/
function () {
  function MergeScanOperator(accumulator, seed, concurrent) {
    this.accumulator = accumulator;
    this.seed = seed;
    this.concurrent = concurrent;
  }

  MergeScanOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
  };

  return MergeScanOperator;
}();

exports.MergeScanOperator = MergeScanOperator;

var MergeScanSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(MergeScanSubscriber, _super);

  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
    var _this = _super.call(this, destination) || this;

    _this.accumulator = accumulator;
    _this.acc = acc;
    _this.concurrent = concurrent;
    _this.hasValue = false;
    _this.hasCompleted = false;
    _this.buffer = [];
    _this.active = 0;
    _this.index = 0;
    return _this;
  }

  MergeScanSubscriber.prototype._next = function (value) {
    if (this.active < this.concurrent) {
      var index = this.index++;
      var ish = (0, _tryCatch.tryCatch)(this.accumulator)(this.acc, value);
      var destination = this.destination;

      if (ish === _errorObject.errorObject) {
        destination.error(_errorObject.errorObject.e);
      } else {
        this.active++;

        this._innerSub(ish, value, index);
      }
    } else {
      this.buffer.push(value);
    }
  };

  MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
    this.add((0, _subscribeToResult.subscribeToResult)(this, ish, value, index));
  };

  MergeScanSubscriber.prototype._complete = function () {
    this.hasCompleted = true;

    if (this.active === 0 && this.buffer.length === 0) {
      if (this.hasValue === false) {
        this.destination.next(this.acc);
      }

      this.destination.complete();
    }
  };

  MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var destination = this.destination;
    this.acc = innerValue;
    this.hasValue = true;
    destination.next(innerValue);
  };

  MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
    var buffer = this.buffer;
    this.remove(innerSub);
    this.active--;

    if (buffer.length > 0) {
      this._next(buffer.shift());
    } else if (this.active === 0 && this.hasCompleted) {
      if (this.hasValue === false) {
        this.destination.next(this.acc);
      }

      this.destination.complete();
    }
  };

  return MergeScanSubscriber;
}(_OuterSubscriber.OuterSubscriber);

exports.MergeScanSubscriber = MergeScanSubscriber;

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.min = min;

var _reduce = __webpack_require__(98);

/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */
function min(comparer) {
  var min = typeof comparer === 'function' ? function (x, y) {
    return comparer(x, y) < 0 ? x : y;
  } : function (x, y) {
    return x < y ? x : y;
  };
  return (0, _reduce.reduce)(min);
}

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onErrorResumeNext = onErrorResumeNext;
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _from = __webpack_require__(38);

var _isArray = __webpack_require__(20);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function onErrorResumeNext() {
  var nextSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    nextSources[_i] = arguments[_i];
  }

  if (nextSources.length === 1 && (0, _isArray.isArray)(nextSources[0])) {
    nextSources = nextSources[0];
  }

  return function (source) {
    return source.lift(new OnErrorResumeNextOperator(nextSources));
  };
}

function onErrorResumeNextStatic() {
  var nextSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    nextSources[_i] = arguments[_i];
  }

  var source = null;

  if (nextSources.length === 1 && (0, _isArray.isArray)(nextSources[0])) {
    nextSources = nextSources[0];
  }

  source = nextSources.shift();
  return (0, _from.from)(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}

var OnErrorResumeNextOperator =
/*@__PURE__*/
function () {
  function OnErrorResumeNextOperator(nextSources) {
    this.nextSources = nextSources;
  }

  OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
  };

  return OnErrorResumeNextOperator;
}();

var OnErrorResumeNextSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(OnErrorResumeNextSubscriber, _super);

  function OnErrorResumeNextSubscriber(destination, nextSources) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.nextSources = nextSources;
    return _this;
  }

  OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype._error = function (err) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype._complete = function () {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
    var next = this.nextSources.shift();

    if (next) {
      this.add((0, _subscribeToResult.subscribeToResult)(this, next));
    } else {
      this.destination.complete();
    }
  };

  return OnErrorResumeNextSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pairwise = pairwise;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function pairwise() {
  return function (source) {
    return source.lift(new PairwiseOperator());
  };
}

var PairwiseOperator =
/*@__PURE__*/
function () {
  function PairwiseOperator() {}

  PairwiseOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new PairwiseSubscriber(subscriber));
  };

  return PairwiseOperator;
}();

var PairwiseSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(PairwiseSubscriber, _super);

  function PairwiseSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.hasPrev = false;
    return _this;
  }

  PairwiseSubscriber.prototype._next = function (value) {
    if (this.hasPrev) {
      this.destination.next([this.prev, value]);
    } else {
      this.hasPrev = true;
    }

    this.prev = value;
  };

  return PairwiseSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partition = partition;

var _not = __webpack_require__(616);

var _filter = __webpack_require__(74);

/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */
function partition(predicate, thisArg) {
  return function (source) {
    return [(0, _filter.filter)(predicate, thisArg)(source), (0, _filter.filter)((0, _not.not)(predicate, thisArg))(source)];
  };
}

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pluck = pluck;

var _map = __webpack_require__(25);

/** PURE_IMPORTS_START _map PURE_IMPORTS_END */
function pluck() {
  var properties = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    properties[_i] = arguments[_i];
  }

  var length = properties.length;

  if (length === 0) {
    throw new Error('list of properties cannot be empty.');
  }

  return function (source) {
    return (0, _map.map)(plucker(properties, length))(source);
  };
}

function plucker(props, length) {
  var mapper = function mapper(x) {
    var currentProp = x;

    for (var i = 0; i < length; i++) {
      var p = currentProp[props[i]];

      if (typeof p !== 'undefined') {
        currentProp = p;
      } else {
        return undefined;
      }
    }

    return currentProp;
  };

  return mapper;
}

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publish = publish;

var _Subject = __webpack_require__(18);

var _multicast = __webpack_require__(60);

/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */
function publish(selector) {
  return selector ? (0, _multicast.multicast)(function () {
    return new _Subject.Subject();
  }, selector) : (0, _multicast.multicast)(new _Subject.Subject());
}

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publishBehavior = publishBehavior;

var _BehaviorSubject = __webpack_require__(211);

var _multicast = __webpack_require__(60);

/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */
function publishBehavior(value) {
  return function (source) {
    return (0, _multicast.multicast)(new _BehaviorSubject.BehaviorSubject(value))(source);
  };
}

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publishLast = publishLast;

var _AsyncSubject = __webpack_require__(93);

var _multicast = __webpack_require__(60);

/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */
function publishLast() {
  return function (source) {
    return (0, _multicast.multicast)(new _AsyncSubject.AsyncSubject())(source);
  };
}

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publishReplay = publishReplay;

var _ReplaySubject = __webpack_require__(125);

var _multicast = __webpack_require__(60);

/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */
function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
    scheduler = selectorOrScheduler;
  }

  var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
  var subject = new _ReplaySubject.ReplaySubject(bufferSize, windowTime, scheduler);
  return function (source) {
    return (0, _multicast.multicast)(function () {
      return subject;
    }, selector)(source);
  };
}

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.race = race;

var _isArray = __webpack_require__(20);

var _race = __webpack_require__(217);

/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */
function race() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function raceOperatorFunction(source) {
    if (observables.length === 1 && (0, _isArray.isArray)(observables[0])) {
      observables = observables[0];
    }

    return source.lift.call(_race.race.apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeat = repeat;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _empty = __webpack_require__(23);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */
function repeat(count) {
  if (count === void 0) {
    count = -1;
  }

  return function (source) {
    if (count === 0) {
      return (0, _empty.empty)();
    } else if (count < 0) {
      return source.lift(new RepeatOperator(-1, source));
    } else {
      return source.lift(new RepeatOperator(count - 1, source));
    }
  };
}

var RepeatOperator =
/*@__PURE__*/
function () {
  function RepeatOperator(count, source) {
    this.count = count;
    this.source = source;
  }

  RepeatOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
  };

  return RepeatOperator;
}();

var RepeatSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(RepeatSubscriber, _super);

  function RepeatSubscriber(destination, count, source) {
    var _this = _super.call(this, destination) || this;

    _this.count = count;
    _this.source = source;
    return _this;
  }

  RepeatSubscriber.prototype.complete = function () {
    if (!this.isStopped) {
      var _a = this,
          source = _a.source,
          count = _a.count;

      if (count === 0) {
        return _super.prototype.complete.call(this);
      } else if (count > -1) {
        this.count = count - 1;
      }

      source.subscribe(this._unsubscribeAndRecycle());
    }
  };

  return RepeatSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeatWhen = repeatWhen;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function repeatWhen(notifier) {
  return function (source) {
    return source.lift(new RepeatWhenOperator(notifier));
  };
}

var RepeatWhenOperator =
/*@__PURE__*/
function () {
  function RepeatWhenOperator(notifier) {
    this.notifier = notifier;
  }

  RepeatWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
  };

  return RepeatWhenOperator;
}();

var RepeatWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(RepeatWhenSubscriber, _super);

  function RepeatWhenSubscriber(destination, notifier, source) {
    var _this = _super.call(this, destination) || this;

    _this.notifier = notifier;
    _this.source = source;
    _this.sourceIsBeingSubscribedTo = true;
    return _this;
  }

  RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.sourceIsBeingSubscribedTo = true;
    this.source.subscribe(this);
  };

  RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
    if (this.sourceIsBeingSubscribedTo === false) {
      return _super.prototype.complete.call(this);
    }
  };

  RepeatWhenSubscriber.prototype.complete = function () {
    this.sourceIsBeingSubscribedTo = false;

    if (!this.isStopped) {
      if (!this.retries) {
        this.subscribeToRetries();
      }

      if (!this.retriesSubscription || this.retriesSubscription.closed) {
        return _super.prototype.complete.call(this);
      }

      this._unsubscribeAndRecycle();

      this.notifications.next();
    }
  };

  RepeatWhenSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        notifications = _a.notifications,
        retriesSubscription = _a.retriesSubscription;

    if (notifications) {
      notifications.unsubscribe();
      this.notifications = null;
    }

    if (retriesSubscription) {
      retriesSubscription.unsubscribe();
      this.retriesSubscription = null;
    }

    this.retries = null;
  };

  RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
    var _unsubscribe = this._unsubscribe;
    this._unsubscribe = null;

    _super.prototype._unsubscribeAndRecycle.call(this);

    this._unsubscribe = _unsubscribe;
    return this;
  };

  RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
    this.notifications = new _Subject.Subject();
    var retries = (0, _tryCatch.tryCatch)(this.notifier)(this.notifications);

    if (retries === _errorObject.errorObject) {
      return _super.prototype.complete.call(this);
    }

    this.retries = retries;
    this.retriesSubscription = (0, _subscribeToResult.subscribeToResult)(this, retries);
  };

  return RepeatWhenSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.retry = retry;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function retry(count) {
  if (count === void 0) {
    count = -1;
  }

  return function (source) {
    return source.lift(new RetryOperator(count, source));
  };
}

var RetryOperator =
/*@__PURE__*/
function () {
  function RetryOperator(count, source) {
    this.count = count;
    this.source = source;
  }

  RetryOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
  };

  return RetryOperator;
}();

var RetrySubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(RetrySubscriber, _super);

  function RetrySubscriber(destination, count, source) {
    var _this = _super.call(this, destination) || this;

    _this.count = count;
    _this.source = source;
    return _this;
  }

  RetrySubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var _a = this,
          source = _a.source,
          count = _a.count;

      if (count === 0) {
        return _super.prototype.error.call(this, err);
      } else if (count > -1) {
        this.count = count - 1;
      }

      source.subscribe(this._unsubscribeAndRecycle());
    }
  };

  return RetrySubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.retryWhen = retryWhen;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function retryWhen(notifier) {
  return function (source) {
    return source.lift(new RetryWhenOperator(notifier, source));
  };
}

var RetryWhenOperator =
/*@__PURE__*/
function () {
  function RetryWhenOperator(notifier, source) {
    this.notifier = notifier;
    this.source = source;
  }

  RetryWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
  };

  return RetryWhenOperator;
}();

var RetryWhenSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(RetryWhenSubscriber, _super);

  function RetryWhenSubscriber(destination, notifier, source) {
    var _this = _super.call(this, destination) || this;

    _this.notifier = notifier;
    _this.source = source;
    return _this;
  }

  RetryWhenSubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var errors = this.errors;
      var retries = this.retries;
      var retriesSubscription = this.retriesSubscription;

      if (!retries) {
        errors = new _Subject.Subject();
        retries = (0, _tryCatch.tryCatch)(this.notifier)(errors);

        if (retries === _errorObject.errorObject) {
          return _super.prototype.error.call(this, _errorObject.errorObject.e);
        }

        retriesSubscription = (0, _subscribeToResult.subscribeToResult)(this, retries);
      } else {
        this.errors = null;
        this.retriesSubscription = null;
      }

      this._unsubscribeAndRecycle();

      this.errors = errors;
      this.retries = retries;
      this.retriesSubscription = retriesSubscription;
      errors.next(err);
    }
  };

  RetryWhenSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        errors = _a.errors,
        retriesSubscription = _a.retriesSubscription;

    if (errors) {
      errors.unsubscribe();
      this.errors = null;
    }

    if (retriesSubscription) {
      retriesSubscription.unsubscribe();
      this.retriesSubscription = null;
    }

    this.retries = null;
  };

  RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var _unsubscribe = this._unsubscribe;
    this._unsubscribe = null;

    this._unsubscribeAndRecycle();

    this._unsubscribe = _unsubscribe;
    this.source.subscribe(this);
  };

  return RetryWhenSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sample = sample;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function sample(notifier) {
  return function (source) {
    return source.lift(new SampleOperator(notifier));
  };
}

var SampleOperator =
/*@__PURE__*/
function () {
  function SampleOperator(notifier) {
    this.notifier = notifier;
  }

  SampleOperator.prototype.call = function (subscriber, source) {
    var sampleSubscriber = new SampleSubscriber(subscriber);
    var subscription = source.subscribe(sampleSubscriber);
    subscription.add((0, _subscribeToResult.subscribeToResult)(sampleSubscriber, this.notifier));
    return subscription;
  };

  return SampleOperator;
}();

var SampleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SampleSubscriber, _super);

  function SampleSubscriber() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.hasValue = false;
    return _this;
  }

  SampleSubscriber.prototype._next = function (value) {
    this.value = value;
    this.hasValue = true;
  };

  SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.emitValue();
  };

  SampleSubscriber.prototype.notifyComplete = function () {
    this.emitValue();
  };

  SampleSubscriber.prototype.emitValue = function () {
    if (this.hasValue) {
      this.hasValue = false;
      this.destination.next(this.value);
    }
  };

  return SampleSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sampleTime = sampleTime;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _async = __webpack_require__(19);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */
function sampleTime(period, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  return function (source) {
    return source.lift(new SampleTimeOperator(period, scheduler));
  };
}

var SampleTimeOperator =
/*@__PURE__*/
function () {
  function SampleTimeOperator(period, scheduler) {
    this.period = period;
    this.scheduler = scheduler;
  }

  SampleTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
  };

  return SampleTimeOperator;
}();

var SampleTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SampleTimeSubscriber, _super);

  function SampleTimeSubscriber(destination, period, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.period = period;
    _this.scheduler = scheduler;
    _this.hasValue = false;

    _this.add(scheduler.schedule(dispatchNotification, period, {
      subscriber: _this,
      period: period
    }));

    return _this;
  }

  SampleTimeSubscriber.prototype._next = function (value) {
    this.lastValue = value;
    this.hasValue = true;
  };

  SampleTimeSubscriber.prototype.notifyNext = function () {
    if (this.hasValue) {
      this.hasValue = false;
      this.destination.next(this.lastValue);
    }
  };

  return SampleTimeSubscriber;
}(_Subscriber.Subscriber);

function dispatchNotification(state) {
  var subscriber = state.subscriber,
      period = state.period;
  subscriber.notifyNext();
  this.schedule(state, period);
}

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sequenceEqual = sequenceEqual;
exports.SequenceEqualSubscriber = exports.SequenceEqualOperator = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */
function sequenceEqual(compareTo, comparor) {
  return function (source) {
    return source.lift(new SequenceEqualOperator(compareTo, comparor));
  };
}

var SequenceEqualOperator =
/*@__PURE__*/
function () {
  function SequenceEqualOperator(compareTo, comparor) {
    this.compareTo = compareTo;
    this.comparor = comparor;
  }

  SequenceEqualOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));
  };

  return SequenceEqualOperator;
}();

exports.SequenceEqualOperator = SequenceEqualOperator;

var SequenceEqualSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SequenceEqualSubscriber, _super);

  function SequenceEqualSubscriber(destination, compareTo, comparor) {
    var _this = _super.call(this, destination) || this;

    _this.compareTo = compareTo;
    _this.comparor = comparor;
    _this._a = [];
    _this._b = [];
    _this._oneComplete = false;

    _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));

    return _this;
  }

  SequenceEqualSubscriber.prototype._next = function (value) {
    if (this._oneComplete && this._b.length === 0) {
      this.emit(false);
    } else {
      this._a.push(value);

      this.checkValues();
    }
  };

  SequenceEqualSubscriber.prototype._complete = function () {
    if (this._oneComplete) {
      this.emit(this._a.length === 0 && this._b.length === 0);
    } else {
      this._oneComplete = true;
    }
  };

  SequenceEqualSubscriber.prototype.checkValues = function () {
    var _c = this,
        _a = _c._a,
        _b = _c._b,
        comparor = _c.comparor;

    while (_a.length > 0 && _b.length > 0) {
      var a = _a.shift();

      var b = _b.shift();

      var areEqual = false;

      if (comparor) {
        areEqual = (0, _tryCatch.tryCatch)(comparor)(a, b);

        if (areEqual === _errorObject.errorObject) {
          this.destination.error(_errorObject.errorObject.e);
        }
      } else {
        areEqual = a === b;
      }

      if (!areEqual) {
        this.emit(false);
      }
    }
  };

  SequenceEqualSubscriber.prototype.emit = function (value) {
    var destination = this.destination;
    destination.next(value);
    destination.complete();
  };

  SequenceEqualSubscriber.prototype.nextB = function (value) {
    if (this._oneComplete && this._a.length === 0) {
      this.emit(false);
    } else {
      this._b.push(value);

      this.checkValues();
    }
  };

  return SequenceEqualSubscriber;
}(_Subscriber.Subscriber);

exports.SequenceEqualSubscriber = SequenceEqualSubscriber;

var SequenceEqualCompareToSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);

  function SequenceEqualCompareToSubscriber(destination, parent) {
    var _this = _super.call(this, destination) || this;

    _this.parent = parent;
    return _this;
  }

  SequenceEqualCompareToSubscriber.prototype._next = function (value) {
    this.parent.nextB(value);
  };

  SequenceEqualCompareToSubscriber.prototype._error = function (err) {
    this.parent.error(err);
  };

  SequenceEqualCompareToSubscriber.prototype._complete = function () {
    this.parent._complete();
  };

  return SequenceEqualCompareToSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.share = share;

var _multicast = __webpack_require__(60);

var _refCount = __webpack_require__(133);

var _Subject = __webpack_require__(18);

/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */
function shareSubjectFactory() {
  return new _Subject.Subject();
}

function share() {
  return function (source) {
    return (0, _refCount.refCount)()((0, _multicast.multicast)(shareSubjectFactory)(source));
  };
}

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shareReplay = shareReplay;

var _ReplaySubject = __webpack_require__(125);

/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */
function shareReplay(bufferSize, windowTime, scheduler) {
  return function (source) {
    return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));
  };
}

function shareReplayOperator(bufferSize, windowTime, scheduler) {
  var subject;
  var refCount = 0;
  var subscription;
  var hasError = false;
  var isComplete = false;
  return function shareReplayOperation(source) {
    refCount++;

    if (!subject || hasError) {
      hasError = false;
      subject = new _ReplaySubject.ReplaySubject(bufferSize, windowTime, scheduler);
      subscription = source.subscribe({
        next: function next(value) {
          subject.next(value);
        },
        error: function error(err) {
          hasError = true;
          subject.error(err);
        },
        complete: function complete() {
          isComplete = true;
          subject.complete();
        }
      });
    }

    var innerSub = subject.subscribe(this);
    return function () {
      refCount--;
      innerSub.unsubscribe();

      if (subscription && refCount === 0 && isComplete) {
        subscription.unsubscribe();
      }
    };
  };
}

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.single = single;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _EmptyError = __webpack_require__(79);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */
function single(predicate) {
  return function (source) {
    return source.lift(new SingleOperator(predicate, source));
  };
}

var SingleOperator =
/*@__PURE__*/
function () {
  function SingleOperator(predicate, source) {
    this.predicate = predicate;
    this.source = source;
  }

  SingleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
  };

  return SingleOperator;
}();

var SingleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SingleSubscriber, _super);

  function SingleSubscriber(destination, predicate, source) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.source = source;
    _this.seenValue = false;
    _this.index = 0;
    return _this;
  }

  SingleSubscriber.prototype.applySingleValue = function (value) {
    if (this.seenValue) {
      this.destination.error('Sequence contains more than one element');
    } else {
      this.seenValue = true;
      this.singleValue = value;
    }
  };

  SingleSubscriber.prototype._next = function (value) {
    var index = this.index++;

    if (this.predicate) {
      this.tryNext(value, index);
    } else {
      this.applySingleValue(value);
    }
  };

  SingleSubscriber.prototype.tryNext = function (value, index) {
    try {
      if (this.predicate(value, index, this.source)) {
        this.applySingleValue(value);
      }
    } catch (err) {
      this.destination.error(err);
    }
  };

  SingleSubscriber.prototype._complete = function () {
    var destination = this.destination;

    if (this.index > 0) {
      destination.next(this.seenValue ? this.singleValue : undefined);
      destination.complete();
    } else {
      destination.error(new _EmptyError.EmptyError());
    }
  };

  return SingleSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skip = skip;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function skip(count) {
  return function (source) {
    return source.lift(new SkipOperator(count));
  };
}

var SkipOperator =
/*@__PURE__*/
function () {
  function SkipOperator(total) {
    this.total = total;
  }

  SkipOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SkipSubscriber(subscriber, this.total));
  };

  return SkipOperator;
}();

var SkipSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SkipSubscriber, _super);

  function SkipSubscriber(destination, total) {
    var _this = _super.call(this, destination) || this;

    _this.total = total;
    _this.count = 0;
    return _this;
  }

  SkipSubscriber.prototype._next = function (x) {
    if (++this.count > this.total) {
      this.destination.next(x);
    }
  };

  return SkipSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skipLast = skipLast;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _ArgumentOutOfRangeError = __webpack_require__(78);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */
function skipLast(count) {
  return function (source) {
    return source.lift(new SkipLastOperator(count));
  };
}

var SkipLastOperator =
/*@__PURE__*/
function () {
  function SkipLastOperator(_skipCount) {
    this._skipCount = _skipCount;

    if (this._skipCount < 0) {
      throw new _ArgumentOutOfRangeError.ArgumentOutOfRangeError();
    }
  }

  SkipLastOperator.prototype.call = function (subscriber, source) {
    if (this._skipCount === 0) {
      return source.subscribe(new _Subscriber.Subscriber(subscriber));
    } else {
      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
    }
  };

  return SkipLastOperator;
}();

var SkipLastSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SkipLastSubscriber, _super);

  function SkipLastSubscriber(destination, _skipCount) {
    var _this = _super.call(this, destination) || this;

    _this._skipCount = _skipCount;
    _this._count = 0;
    _this._ring = new Array(_skipCount);
    return _this;
  }

  SkipLastSubscriber.prototype._next = function (value) {
    var skipCount = this._skipCount;
    var count = this._count++;

    if (count < skipCount) {
      this._ring[count] = value;
    } else {
      var currentIndex = count % skipCount;
      var ring = this._ring;
      var oldValue = ring[currentIndex];
      ring[currentIndex] = value;
      this.destination.next(oldValue);
    }
  };

  return SkipLastSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skipUntil = skipUntil;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function skipUntil(notifier) {
  return function (source) {
    return source.lift(new SkipUntilOperator(notifier));
  };
}

var SkipUntilOperator =
/*@__PURE__*/
function () {
  function SkipUntilOperator(notifier) {
    this.notifier = notifier;
  }

  SkipUntilOperator.prototype.call = function (destination, source) {
    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
  };

  return SkipUntilOperator;
}();

var SkipUntilSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SkipUntilSubscriber, _super);

  function SkipUntilSubscriber(destination, notifier) {
    var _this = _super.call(this, destination) || this;

    _this.hasValue = false;

    _this.add(_this.innerSubscription = (0, _subscribeToResult.subscribeToResult)(_this, notifier));

    return _this;
  }

  SkipUntilSubscriber.prototype._next = function (value) {
    if (this.hasValue) {
      _super.prototype._next.call(this, value);
    }
  };

  SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.hasValue = true;

    if (this.innerSubscription) {
      this.innerSubscription.unsubscribe();
    }
  };

  SkipUntilSubscriber.prototype.notifyComplete = function () {};

  return SkipUntilSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skipWhile = skipWhile;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function skipWhile(predicate) {
  return function (source) {
    return source.lift(new SkipWhileOperator(predicate));
  };
}

var SkipWhileOperator =
/*@__PURE__*/
function () {
  function SkipWhileOperator(predicate) {
    this.predicate = predicate;
  }

  SkipWhileOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
  };

  return SkipWhileOperator;
}();

var SkipWhileSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(SkipWhileSubscriber, _super);

  function SkipWhileSubscriber(destination, predicate) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.skipping = true;
    _this.index = 0;
    return _this;
  }

  SkipWhileSubscriber.prototype._next = function (value) {
    var destination = this.destination;

    if (this.skipping) {
      this.tryCallPredicate(value);
    }

    if (!this.skipping) {
      destination.next(value);
    }
  };

  SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
    try {
      var result = this.predicate(value, this.index++);
      this.skipping = Boolean(result);
    } catch (err) {
      this.destination.error(err);
    }
  };

  return SkipWhileSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startWith = startWith;

var _fromArray = __webpack_require__(46);

var _scalar = __webpack_require__(129);

var _empty = __webpack_require__(23);

var _concat = __webpack_require__(96);

var _isScheduler = __webpack_require__(27);

/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */
function startWith() {
  var array = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    array[_i] = arguments[_i];
  }

  return function (source) {
    var scheduler = array[array.length - 1];

    if ((0, _isScheduler.isScheduler)(scheduler)) {
      array.pop();
    } else {
      scheduler = null;
    }

    var len = array.length;

    if (len === 1 && !scheduler) {
      return (0, _concat.concat)((0, _scalar.scalar)(array[0]), source);
    } else if (len > 0) {
      return (0, _concat.concat)((0, _fromArray.fromArray)(array, scheduler), source);
    } else {
      return (0, _concat.concat)((0, _empty.empty)(scheduler), source);
    }
  };
}

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeOn = subscribeOn;

var _SubscribeOnObservable = __webpack_require__(506);

/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */
function subscribeOn(scheduler, delay) {
  if (delay === void 0) {
    delay = 0;
  }

  return function subscribeOnOperatorFunction(source) {
    return source.lift(new SubscribeOnOperator(scheduler, delay));
  };
}

var SubscribeOnOperator =
/*@__PURE__*/
function () {
  function SubscribeOnOperator(scheduler, delay) {
    this.scheduler = scheduler;
    this.delay = delay;
  }

  SubscribeOnOperator.prototype.call = function (subscriber, source) {
    return new _SubscribeOnObservable.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);
  };

  return SubscribeOnOperator;
}();

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchAll = switchAll;

var _switchMap = __webpack_require__(135);

var _identity = __webpack_require__(62);

/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */
function switchAll() {
  return (0, _switchMap.switchMap)(_identity.identity);
}

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchMapTo = switchMapTo;

var _switchMap = __webpack_require__(135);

/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */
function switchMapTo(innerObservable, resultSelector) {
  return resultSelector ? (0, _switchMap.switchMap)(function () {
    return innerObservable;
  }, resultSelector) : (0, _switchMap.switchMap)(function () {
    return innerObservable;
  });
}

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeUntil = takeUntil;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function takeUntil(notifier) {
  return function (source) {
    return source.lift(new TakeUntilOperator(notifier));
  };
}

var TakeUntilOperator =
/*@__PURE__*/
function () {
  function TakeUntilOperator(notifier) {
    this.notifier = notifier;
  }

  TakeUntilOperator.prototype.call = function (subscriber, source) {
    var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
    var notifierSubscription = (0, _subscribeToResult.subscribeToResult)(takeUntilSubscriber, this.notifier);

    if (notifierSubscription && !notifierSubscription.closed) {
      takeUntilSubscriber.add(notifierSubscription);
      return source.subscribe(takeUntilSubscriber);
    }

    return takeUntilSubscriber;
  };

  return TakeUntilOperator;
}();

var TakeUntilSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(TakeUntilSubscriber, _super);

  function TakeUntilSubscriber(destination) {
    return _super.call(this, destination) || this;
  }

  TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.complete();
  };

  TakeUntilSubscriber.prototype.notifyComplete = function () {};

  return TakeUntilSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeWhile = takeWhile;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
function takeWhile(predicate) {
  return function (source) {
    return source.lift(new TakeWhileOperator(predicate));
  };
}

var TakeWhileOperator =
/*@__PURE__*/
function () {
  function TakeWhileOperator(predicate) {
    this.predicate = predicate;
  }

  TakeWhileOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));
  };

  return TakeWhileOperator;
}();

var TakeWhileSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(TakeWhileSubscriber, _super);

  function TakeWhileSubscriber(destination, predicate) {
    var _this = _super.call(this, destination) || this;

    _this.predicate = predicate;
    _this.index = 0;
    return _this;
  }

  TakeWhileSubscriber.prototype._next = function (value) {
    var destination = this.destination;
    var result;

    try {
      result = this.predicate(value, this.index++);
    } catch (err) {
      destination.error(err);
      return;
    }

    this.nextOrComplete(value, result);
  };

  TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
    var destination = this.destination;

    if (Boolean(predicateResult)) {
      destination.next(value);
    } else {
      destination.complete();
    }
  };

  return TakeWhileSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throttleTime = throttleTime;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _async = __webpack_require__(19);

var _throttle = __webpack_require__(227);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */
function throttleTime(duration, scheduler, config) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  if (config === void 0) {
    config = _throttle.defaultThrottleConfig;
  }

  return function (source) {
    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));
  };
}

var ThrottleTimeOperator =
/*@__PURE__*/
function () {
  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
    this.duration = duration;
    this.scheduler = scheduler;
    this.leading = leading;
    this.trailing = trailing;
  }

  ThrottleTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
  };

  return ThrottleTimeOperator;
}();

var ThrottleTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(ThrottleTimeSubscriber, _super);

  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
    var _this = _super.call(this, destination) || this;

    _this.duration = duration;
    _this.scheduler = scheduler;
    _this.leading = leading;
    _this.trailing = trailing;
    _this._hasTrailingValue = false;
    _this._trailingValue = null;
    return _this;
  }

  ThrottleTimeSubscriber.prototype._next = function (value) {
    if (this.throttled) {
      if (this.trailing) {
        this._trailingValue = value;
        this._hasTrailingValue = true;
      }
    } else {
      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {
        subscriber: this
      }));

      if (this.leading) {
        this.destination.next(value);
      }
    }
  };

  ThrottleTimeSubscriber.prototype._complete = function () {
    if (this._hasTrailingValue) {
      this.destination.next(this._trailingValue);
      this.destination.complete();
    } else {
      this.destination.complete();
    }
  };

  ThrottleTimeSubscriber.prototype.clearThrottle = function () {
    var throttled = this.throttled;

    if (throttled) {
      if (this.trailing && this._hasTrailingValue) {
        this.destination.next(this._trailingValue);
        this._trailingValue = null;
        this._hasTrailingValue = false;
      }

      throttled.unsubscribe();
      this.remove(throttled);
      this.throttled = null;
    }
  };

  return ThrottleTimeSubscriber;
}(_Subscriber.Subscriber);

function dispatchNext(arg) {
  var subscriber = arg.subscriber;
  subscriber.clearThrottle();
}

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timeInterval = timeInterval;
exports.TimeInterval = void 0;

var _async = __webpack_require__(19);

var _scan = __webpack_require__(134);

var _defer = __webpack_require__(127);

var _map = __webpack_require__(25);

/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */
function timeInterval(scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  return function (source) {
    return (0, _defer.defer)(function () {
      return source.pipe((0, _scan.scan)(function (_a, value) {
        var current = _a.current;
        return {
          value: value,
          current: scheduler.now(),
          last: current
        };
      }, {
        current: scheduler.now(),
        value: undefined,
        last: undefined
      }), (0, _map.map)(function (_a) {
        var current = _a.current,
            last = _a.last,
            value = _a.value;
        return new TimeInterval(value, current - last);
      }));
    });
  };
}

var TimeInterval =
/*@__PURE__*/
function () {
  function TimeInterval(value, interval) {
    this.value = value;
    this.interval = interval;
  }

  return TimeInterval;
}();

exports.TimeInterval = TimeInterval;

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timeout = timeout;

var _async = __webpack_require__(19);

var _TimeoutError = __webpack_require__(231);

var _timeoutWith = __webpack_require__(228);

var _throwError = __webpack_require__(130);

/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */
function timeout(due, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  return (0, _timeoutWith.timeoutWith)(due, (0, _throwError.throwError)(new _TimeoutError.TimeoutError()), scheduler);
}

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timestamp = timestamp;
exports.Timestamp = void 0;

var _async = __webpack_require__(19);

var _map = __webpack_require__(25);

/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */
function timestamp(scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  return (0, _map.map)(function (value) {
    return new Timestamp(value, scheduler.now());
  });
}

var Timestamp =
/*@__PURE__*/
function () {
  function Timestamp(value, timestamp) {
    this.value = value;
    this.timestamp = timestamp;
  }

  return Timestamp;
}();

exports.Timestamp = Timestamp;

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toArray = toArray;

var _reduce = __webpack_require__(98);

/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */
function toArrayReducer(arr, item, index) {
  if (index === 0) {
    return [item];
  }

  arr.push(item);
  return arr;
}

function toArray() {
  return (0, _reduce.reduce)(toArrayReducer, []);
}

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.window = window;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function window(windowBoundaries) {
  return function windowOperatorFunction(source) {
    return source.lift(new WindowOperator(windowBoundaries));
  };
}

var WindowOperator =
/*@__PURE__*/
function () {
  function WindowOperator(windowBoundaries) {
    this.windowBoundaries = windowBoundaries;
  }

  WindowOperator.prototype.call = function (subscriber, source) {
    var windowSubscriber = new WindowSubscriber(subscriber);
    var sourceSubscription = source.subscribe(windowSubscriber);

    if (!sourceSubscription.closed) {
      windowSubscriber.add((0, _subscribeToResult.subscribeToResult)(windowSubscriber, this.windowBoundaries));
    }

    return sourceSubscription;
  };

  return WindowOperator;
}();

var WindowSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(WindowSubscriber, _super);

  function WindowSubscriber(destination) {
    var _this = _super.call(this, destination) || this;

    _this.window = new _Subject.Subject();
    destination.next(_this.window);
    return _this;
  }

  WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.openWindow();
  };

  WindowSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  WindowSubscriber.prototype.notifyComplete = function (innerSub) {
    this._complete();
  };

  WindowSubscriber.prototype._next = function (value) {
    this.window.next(value);
  };

  WindowSubscriber.prototype._error = function (err) {
    this.window.error(err);
    this.destination.error(err);
  };

  WindowSubscriber.prototype._complete = function () {
    this.window.complete();
    this.destination.complete();
  };

  WindowSubscriber.prototype._unsubscribe = function () {
    this.window = null;
  };

  WindowSubscriber.prototype.openWindow = function () {
    var prevWindow = this.window;

    if (prevWindow) {
      prevWindow.complete();
    }

    var destination = this.destination;
    var newWindow = this.window = new _Subject.Subject();
    destination.next(newWindow);
  };

  return WindowSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowCount = windowCount;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscriber = __webpack_require__(3);

var _Subject = __webpack_require__(18);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */
function windowCount(windowSize, startWindowEvery) {
  if (startWindowEvery === void 0) {
    startWindowEvery = 0;
  }

  return function windowCountOperatorFunction(source) {
    return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
  };
}

var WindowCountOperator =
/*@__PURE__*/
function () {
  function WindowCountOperator(windowSize, startWindowEvery) {
    this.windowSize = windowSize;
    this.startWindowEvery = startWindowEvery;
  }

  WindowCountOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
  };

  return WindowCountOperator;
}();

var WindowCountSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(WindowCountSubscriber, _super);

  function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.windowSize = windowSize;
    _this.startWindowEvery = startWindowEvery;
    _this.windows = [new _Subject.Subject()];
    _this.count = 0;
    destination.next(_this.windows[0]);
    return _this;
  }

  WindowCountSubscriber.prototype._next = function (value) {
    var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;
    var destination = this.destination;
    var windowSize = this.windowSize;
    var windows = this.windows;
    var len = windows.length;

    for (var i = 0; i < len && !this.closed; i++) {
      windows[i].next(value);
    }

    var c = this.count - windowSize + 1;

    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
      windows.shift().complete();
    }

    if (++this.count % startWindowEvery === 0 && !this.closed) {
      var window_1 = new _Subject.Subject();
      windows.push(window_1);
      destination.next(window_1);
    }
  };

  WindowCountSubscriber.prototype._error = function (err) {
    var windows = this.windows;

    if (windows) {
      while (windows.length > 0 && !this.closed) {
        windows.shift().error(err);
      }
    }

    this.destination.error(err);
  };

  WindowCountSubscriber.prototype._complete = function () {
    var windows = this.windows;

    if (windows) {
      while (windows.length > 0 && !this.closed) {
        windows.shift().complete();
      }
    }

    this.destination.complete();
  };

  WindowCountSubscriber.prototype._unsubscribe = function () {
    this.count = 0;
    this.windows = null;
  };

  return WindowCountSubscriber;
}(_Subscriber.Subscriber);

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowTime = windowTime;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _async = __webpack_require__(19);

var _Subscriber = __webpack_require__(3);

var _isNumeric = __webpack_require__(101);

var _isScheduler = __webpack_require__(27);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */
function windowTime(windowTimeSpan) {
  var scheduler = _async.async;
  var windowCreationInterval = null;
  var maxWindowSize = Number.POSITIVE_INFINITY;

  if ((0, _isScheduler.isScheduler)(arguments[3])) {
    scheduler = arguments[3];
  }

  if ((0, _isScheduler.isScheduler)(arguments[2])) {
    scheduler = arguments[2];
  } else if ((0, _isNumeric.isNumeric)(arguments[2])) {
    maxWindowSize = arguments[2];
  }

  if ((0, _isScheduler.isScheduler)(arguments[1])) {
    scheduler = arguments[1];
  } else if ((0, _isNumeric.isNumeric)(arguments[1])) {
    windowCreationInterval = arguments[1];
  }

  return function windowTimeOperatorFunction(source) {
    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
  };
}

var WindowTimeOperator =
/*@__PURE__*/
function () {
  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
    this.windowTimeSpan = windowTimeSpan;
    this.windowCreationInterval = windowCreationInterval;
    this.maxWindowSize = maxWindowSize;
    this.scheduler = scheduler;
  }

  WindowTimeOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
  };

  return WindowTimeOperator;
}();

var CountedSubject =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(CountedSubject, _super);

  function CountedSubject() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this._numberOfNextedValues = 0;
    return _this;
  }

  CountedSubject.prototype.next = function (value) {
    this._numberOfNextedValues++;

    _super.prototype.next.call(this, value);
  };

  Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
    get: function get() {
      return this._numberOfNextedValues;
    },
    enumerable: true,
    configurable: true
  });
  return CountedSubject;
}(_Subject.Subject);

var WindowTimeSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(WindowTimeSubscriber, _super);

  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.windowTimeSpan = windowTimeSpan;
    _this.windowCreationInterval = windowCreationInterval;
    _this.maxWindowSize = maxWindowSize;
    _this.scheduler = scheduler;
    _this.windows = [];

    var window = _this.openWindow();

    if (windowCreationInterval !== null && windowCreationInterval >= 0) {
      var closeState = {
        subscriber: _this,
        window: window,
        context: null
      };
      var creationState = {
        windowTimeSpan: windowTimeSpan,
        windowCreationInterval: windowCreationInterval,
        subscriber: _this,
        scheduler: scheduler
      };

      _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));

      _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
    } else {
      var timeSpanOnlyState = {
        subscriber: _this,
        window: window,
        windowTimeSpan: windowTimeSpan
      };

      _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
    }

    return _this;
  }

  WindowTimeSubscriber.prototype._next = function (value) {
    var windows = this.windows;
    var len = windows.length;

    for (var i = 0; i < len; i++) {
      var window_1 = windows[i];

      if (!window_1.closed) {
        window_1.next(value);

        if (window_1.numberOfNextedValues >= this.maxWindowSize) {
          this.closeWindow(window_1);
        }
      }
    }
  };

  WindowTimeSubscriber.prototype._error = function (err) {
    var windows = this.windows;

    while (windows.length > 0) {
      windows.shift().error(err);
    }

    this.destination.error(err);
  };

  WindowTimeSubscriber.prototype._complete = function () {
    var windows = this.windows;

    while (windows.length > 0) {
      var window_2 = windows.shift();

      if (!window_2.closed) {
        window_2.complete();
      }
    }

    this.destination.complete();
  };

  WindowTimeSubscriber.prototype.openWindow = function () {
    var window = new CountedSubject();
    this.windows.push(window);
    var destination = this.destination;
    destination.next(window);
    return window;
  };

  WindowTimeSubscriber.prototype.closeWindow = function (window) {
    window.complete();
    var windows = this.windows;
    windows.splice(windows.indexOf(window), 1);
  };

  return WindowTimeSubscriber;
}(_Subscriber.Subscriber);

function dispatchWindowTimeSpanOnly(state) {
  var subscriber = state.subscriber,
      windowTimeSpan = state.windowTimeSpan,
      window = state.window;

  if (window) {
    subscriber.closeWindow(window);
  }

  state.window = subscriber.openWindow();
  this.schedule(state, windowTimeSpan);
}

function dispatchWindowCreation(state) {
  var windowTimeSpan = state.windowTimeSpan,
      subscriber = state.subscriber,
      scheduler = state.scheduler,
      windowCreationInterval = state.windowCreationInterval;
  var window = subscriber.openWindow();
  var action = this;
  var context = {
    action: action,
    subscription: null
  };
  var timeSpanState = {
    subscriber: subscriber,
    window: window,
    context: context
  };
  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
  action.add(context.subscription);
  action.schedule(state, windowCreationInterval);
}

function dispatchWindowClose(state) {
  var subscriber = state.subscriber,
      window = state.window,
      context = state.context;

  if (context && context.action && context.subscription) {
    context.action.remove(context.subscription);
  }

  subscriber.closeWindow(window);
}

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowToggle = windowToggle;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _Subscription = __webpack_require__(15);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function windowToggle(openings, closingSelector) {
  return function (source) {
    return source.lift(new WindowToggleOperator(openings, closingSelector));
  };
}

var WindowToggleOperator =
/*@__PURE__*/
function () {
  function WindowToggleOperator(openings, closingSelector) {
    this.openings = openings;
    this.closingSelector = closingSelector;
  }

  WindowToggleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
  };

  return WindowToggleOperator;
}();

var WindowToggleSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(WindowToggleSubscriber, _super);

  function WindowToggleSubscriber(destination, openings, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.openings = openings;
    _this.closingSelector = closingSelector;
    _this.contexts = [];

    _this.add(_this.openSubscription = (0, _subscribeToResult.subscribeToResult)(_this, openings, openings));

    return _this;
  }

  WindowToggleSubscriber.prototype._next = function (value) {
    var contexts = this.contexts;

    if (contexts) {
      var len = contexts.length;

      for (var i = 0; i < len; i++) {
        contexts[i].window.next(value);
      }
    }
  };

  WindowToggleSubscriber.prototype._error = function (err) {
    var contexts = this.contexts;
    this.contexts = null;

    if (contexts) {
      var len = contexts.length;
      var index = -1;

      while (++index < len) {
        var context_1 = contexts[index];
        context_1.window.error(err);
        context_1.subscription.unsubscribe();
      }
    }

    _super.prototype._error.call(this, err);
  };

  WindowToggleSubscriber.prototype._complete = function () {
    var contexts = this.contexts;
    this.contexts = null;

    if (contexts) {
      var len = contexts.length;
      var index = -1;

      while (++index < len) {
        var context_2 = contexts[index];
        context_2.window.complete();
        context_2.subscription.unsubscribe();
      }
    }

    _super.prototype._complete.call(this);
  };

  WindowToggleSubscriber.prototype._unsubscribe = function () {
    var contexts = this.contexts;
    this.contexts = null;

    if (contexts) {
      var len = contexts.length;
      var index = -1;

      while (++index < len) {
        var context_3 = contexts[index];
        context_3.window.unsubscribe();
        context_3.subscription.unsubscribe();
      }
    }
  };

  WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    if (outerValue === this.openings) {
      var closingSelector = this.closingSelector;
      var closingNotifier = (0, _tryCatch.tryCatch)(closingSelector)(innerValue);

      if (closingNotifier === _errorObject.errorObject) {
        return this.error(_errorObject.errorObject.e);
      } else {
        var window_1 = new _Subject.Subject();
        var subscription = new _Subscription.Subscription();
        var context_4 = {
          window: window_1,
          subscription: subscription
        };
        this.contexts.push(context_4);
        var innerSubscription = (0, _subscribeToResult.subscribeToResult)(this, closingNotifier, context_4);

        if (innerSubscription.closed) {
          this.closeWindow(this.contexts.length - 1);
        } else {
          innerSubscription.context = context_4;
          subscription.add(innerSubscription);
        }

        this.destination.next(window_1);
      }
    } else {
      this.closeWindow(this.contexts.indexOf(outerValue));
    }
  };

  WindowToggleSubscriber.prototype.notifyError = function (err) {
    this.error(err);
  };

  WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
    if (inner !== this.openSubscription) {
      this.closeWindow(this.contexts.indexOf(inner.context));
    }
  };

  WindowToggleSubscriber.prototype.closeWindow = function (index) {
    if (index === -1) {
      return;
    }

    var contexts = this.contexts;
    var context = contexts[index];
    var window = context.window,
        subscription = context.subscription;
    contexts.splice(index, 1);
    window.complete();
    subscription.unsubscribe();
  };

  return WindowToggleSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowWhen = windowWhen;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subject = __webpack_require__(18);

var _tryCatch = __webpack_require__(32);

var _errorObject = __webpack_require__(26);

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function windowWhen(closingSelector) {
  return function windowWhenOperatorFunction(source) {
    return source.lift(new WindowOperator(closingSelector));
  };
}

var WindowOperator =
/*@__PURE__*/
function () {
  function WindowOperator(closingSelector) {
    this.closingSelector = closingSelector;
  }

  WindowOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
  };

  return WindowOperator;
}();

var WindowSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(WindowSubscriber, _super);

  function WindowSubscriber(destination, closingSelector) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.closingSelector = closingSelector;

    _this.openWindow();

    return _this;
  }

  WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.openWindow(innerSub);
  };

  WindowSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  WindowSubscriber.prototype.notifyComplete = function (innerSub) {
    this.openWindow(innerSub);
  };

  WindowSubscriber.prototype._next = function (value) {
    this.window.next(value);
  };

  WindowSubscriber.prototype._error = function (err) {
    this.window.error(err);
    this.destination.error(err);
    this.unsubscribeClosingNotification();
  };

  WindowSubscriber.prototype._complete = function () {
    this.window.complete();
    this.destination.complete();
    this.unsubscribeClosingNotification();
  };

  WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
    if (this.closingNotification) {
      this.closingNotification.unsubscribe();
    }
  };

  WindowSubscriber.prototype.openWindow = function (innerSub) {
    if (innerSub === void 0) {
      innerSub = null;
    }

    if (innerSub) {
      this.remove(innerSub);
      innerSub.unsubscribe();
    }

    var prevWindow = this.window;

    if (prevWindow) {
      prevWindow.complete();
    }

    var window = this.window = new _Subject.Subject();
    this.destination.next(window);
    var closingNotifier = (0, _tryCatch.tryCatch)(this.closingSelector)();

    if (closingNotifier === _errorObject.errorObject) {
      var err = _errorObject.errorObject.e;
      this.destination.error(err);
      this.window.error(err);
    } else {
      this.add(this.closingNotification = (0, _subscribeToResult.subscribeToResult)(this, closingNotifier));
    }
  };

  return WindowSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withLatestFrom = withLatestFrom;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _OuterSubscriber = __webpack_require__(6);

var _subscribeToResult = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
function withLatestFrom() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  return function (source) {
    var project;

    if (typeof args[args.length - 1] === 'function') {
      project = args.pop();
    }

    var observables = args;
    return source.lift(new WithLatestFromOperator(observables, project));
  };
}

var WithLatestFromOperator =
/*@__PURE__*/
function () {
  function WithLatestFromOperator(observables, project) {
    this.observables = observables;
    this.project = project;
  }

  WithLatestFromOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
  };

  return WithLatestFromOperator;
}();

var WithLatestFromSubscriber =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(WithLatestFromSubscriber, _super);

  function WithLatestFromSubscriber(destination, observables, project) {
    var _this = _super.call(this, destination) || this;

    _this.observables = observables;
    _this.project = project;
    _this.toRespond = [];
    var len = observables.length;
    _this.values = new Array(len);

    for (var i = 0; i < len; i++) {
      _this.toRespond.push(i);
    }

    for (var i = 0; i < len; i++) {
      var observable = observables[i];

      _this.add((0, _subscribeToResult.subscribeToResult)(_this, observable, observable, i));
    }

    return _this;
  }

  WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values[outerIndex] = innerValue;
    var toRespond = this.toRespond;

    if (toRespond.length > 0) {
      var found = toRespond.indexOf(outerIndex);

      if (found !== -1) {
        toRespond.splice(found, 1);
      }
    }
  };

  WithLatestFromSubscriber.prototype.notifyComplete = function () {};

  WithLatestFromSubscriber.prototype._next = function (value) {
    if (this.toRespond.length === 0) {
      var args = [value].concat(this.values);

      if (this.project) {
        this._tryProject(args);
      } else {
        this.destination.next(args);
      }
    }
  };

  WithLatestFromSubscriber.prototype._tryProject = function (args) {
    var result;

    try {
      result = this.project.apply(this, args);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return WithLatestFromSubscriber;
}(_OuterSubscriber.OuterSubscriber);

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zip = zip;

var _zip = __webpack_require__(131);

/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */
function zip() {
  var observables = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }

  return function zipOperatorFunction(source) {
    return source.lift.call(_zip.zip.apply(void 0, [source].concat(observables)));
  };
}

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zipAll = zipAll;

var _zip = __webpack_require__(131);

/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */
function zipAll(project) {
  return function (source) {
    return source.lift(new _zip.ZipOperator(project));
  };
}

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Action = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Subscription = __webpack_require__(15);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */
var Action =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(Action, _super);

  function Action(scheduler, work) {
    return _super.call(this) || this;
  }

  Action.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return this;
  };

  return Action;
}(_Subscription.Subscription);

exports.Action = Action;

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnimationFrameAction = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _AsyncAction = __webpack_require__(75);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */
var AnimationFrameAction =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AnimationFrameAction, _super);

  function AnimationFrameAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    }

    scheduler.actions.push(this);
    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () {
      return scheduler.flush(null);
    }));
  };

  AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
    }

    if (scheduler.actions.length === 0) {
      cancelAnimationFrame(id);
      scheduler.scheduled = undefined;
    }

    return undefined;
  };

  return AnimationFrameAction;
}(_AsyncAction.AsyncAction);

exports.AnimationFrameAction = AnimationFrameAction;

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnimationFrameScheduler = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _AsyncScheduler = __webpack_require__(76);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */
var AnimationFrameScheduler =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AnimationFrameScheduler, _super);

  function AnimationFrameScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AnimationFrameScheduler.prototype.flush = function (action) {
    this.active = true;
    this.scheduled = undefined;
    var actions = this.actions;
    var error;
    var index = -1;
    var count = actions.length;
    action = action || actions.shift();

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (++index < count && (action = actions.shift()));

    this.active = false;

    if (error) {
      while (++index < count && (action = actions.shift())) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AnimationFrameScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.AnimationFrameScheduler = AnimationFrameScheduler;

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsapAction = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _Immediate = __webpack_require__(612);

var _AsyncAction = __webpack_require__(75);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */
var AsapAction =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AsapAction, _super);

  function AsapAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    }

    scheduler.actions.push(this);
    return scheduler.scheduled || (scheduler.scheduled = _Immediate.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
  };

  AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
    }

    if (scheduler.actions.length === 0) {
      _Immediate.Immediate.clearImmediate(id);

      scheduler.scheduled = undefined;
    }

    return undefined;
  };

  return AsapAction;
}(_AsyncAction.AsyncAction);

exports.AsapAction = AsapAction;

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsapScheduler = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _AsyncScheduler = __webpack_require__(76);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */
var AsapScheduler =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(AsapScheduler, _super);

  function AsapScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AsapScheduler.prototype.flush = function (action) {
    this.active = true;
    this.scheduled = undefined;
    var actions = this.actions;
    var error;
    var index = -1;
    var count = actions.length;
    action = action || actions.shift();

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (++index < count && (action = actions.shift()));

    this.active = false;

    if (error) {
      while (++index < count && (action = actions.shift())) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AsapScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.AsapScheduler = AsapScheduler;

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueueAction = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _AsyncAction = __webpack_require__(75);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */
var QueueAction =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(QueueAction, _super);

  function QueueAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  QueueAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay > 0) {
      return _super.prototype.schedule.call(this, state, delay);
    }

    this.delay = delay;
    this.state = state;
    this.scheduler.flush(this);
    return this;
  };

  QueueAction.prototype.execute = function (state, delay) {
    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);
  };

  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    }

    return scheduler.flush(this);
  };

  return QueueAction;
}(_AsyncAction.AsyncAction);

exports.QueueAction = QueueAction;

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueueScheduler = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _AsyncScheduler = __webpack_require__(76);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */
var QueueScheduler =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(QueueScheduler, _super);

  function QueueScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return QueueScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.QueueScheduler = QueueScheduler;

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VirtualAction = exports.VirtualTimeScheduler = void 0;

var tslib_1 = _interopRequireWildcard(__webpack_require__(1));

var _AsyncAction = __webpack_require__(75);

var _AsyncScheduler = __webpack_require__(76);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */
var VirtualTimeScheduler =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(VirtualTimeScheduler, _super);

  function VirtualTimeScheduler(SchedulerAction, maxFrames) {
    if (SchedulerAction === void 0) {
      SchedulerAction = VirtualAction;
    }

    if (maxFrames === void 0) {
      maxFrames = Number.POSITIVE_INFINITY;
    }

    var _this = _super.call(this, SchedulerAction, function () {
      return _this.frame;
    }) || this;

    _this.maxFrames = maxFrames;
    _this.frame = 0;
    _this.index = -1;
    return _this;
  }

  VirtualTimeScheduler.prototype.flush = function () {
    var _a = this,
        actions = _a.actions,
        maxFrames = _a.maxFrames;

    var error, action;

    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    }

    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  VirtualTimeScheduler.frameTimeFactor = 10;
  return VirtualTimeScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.VirtualTimeScheduler = VirtualTimeScheduler;

var VirtualAction =
/*@__PURE__*/
function (_super) {
  tslib_1.__extends(VirtualAction, _super);

  function VirtualAction(scheduler, work, index) {
    if (index === void 0) {
      index = scheduler.index += 1;
    }

    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    _this.index = index;
    _this.active = true;
    _this.index = scheduler.index = index;
    return _this;
  }

  VirtualAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (!this.id) {
      return _super.prototype.schedule.call(this, state, delay);
    }

    this.active = false;
    var action = new VirtualAction(this.scheduler, this.work);
    this.add(action);
    return action.schedule(state, delay);
  };

  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    this.delay = scheduler.frame + delay;
    var actions = scheduler.actions;
    actions.push(this);
    actions.sort(VirtualAction.sortActions);
    return true;
  };

  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return undefined;
  };

  VirtualAction.prototype._execute = function (state, delay) {
    if (this.active === true) {
      return _super.prototype._execute.call(this, state, delay);
    }
  };

  VirtualAction.sortActions = function (a, b) {
    if (a.delay === b.delay) {
      if (a.index === b.index) {
        return 0;
      } else if (a.index > b.index) {
        return 1;
      } else {
        return -1;
      }
    } else if (a.delay > b.delay) {
      return 1;
    } else {
      return -1;
    }
  };

  return VirtualAction;
}(_AsyncAction.AsyncAction);

exports.VirtualAction = VirtualAction;

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.animationFrame = void 0;

var _AnimationFrameAction = __webpack_require__(604);

var _AnimationFrameScheduler = __webpack_require__(605);

/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */
var animationFrame =
/*@__PURE__*/
new _AnimationFrameScheduler.AnimationFrameScheduler(_AnimationFrameAction.AnimationFrameAction);
exports.animationFrame = animationFrame;

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Immediate = void 0;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 1;
var tasksByHandle = {};

function runIfPresent(handle) {
  var cb = tasksByHandle[handle];

  if (cb) {
    cb();
  }
}

var Immediate = {
  setImmediate: function setImmediate(cb) {
    var handle = nextHandle++;
    tasksByHandle[handle] = cb;
    Promise.resolve().then(function () {
      return runIfPresent(handle);
    });
    return handle;
  },
  clearImmediate: function clearImmediate(handle) {
    delete tasksByHandle[handle];
  }
};
exports.Immediate = Immediate;

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInteropObservable = isInteropObservable;

var _observable = __webpack_require__(61);

/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */
function isInteropObservable(input) {
  return input && typeof input[_observable.observable] === 'function';
}

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIterable = isIterable;

var _iterator = __webpack_require__(77);

/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */
function isIterable(input) {
  return input && typeof input[_iterator.iterator] === 'function';
}

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isObservable = isObservable;

var _Observable = __webpack_require__(5);

/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */
function isObservable(obj) {
  return !!obj && (obj instanceof _Observable.Observable || typeof obj.lift === 'function' && typeof obj.subscribe === 'function');
}

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.not = not;

/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
  function notPred() {
    return !notPred.pred.apply(notPred.thisArg, arguments);
  }

  notPred.pred = pred;
  notPred.thisArg = thisArg;
  return notPred;
}

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toSubscriber = toSubscriber;

var _Subscriber = __webpack_require__(3);

var _rxSubscriber = __webpack_require__(138);

var _Observer = __webpack_require__(212);

/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */
function toSubscriber(nextOrObserver, error, complete) {
  if (nextOrObserver) {
    if (nextOrObserver instanceof _Subscriber.Subscriber) {
      return nextOrObserver;
    }

    if (nextOrObserver[_rxSubscriber.rxSubscriber]) {
      return nextOrObserver[_rxSubscriber.rxSubscriber]();
    }
  }

  if (!nextOrObserver && !error && !complete) {
    return new _Subscriber.Subscriber(_Observer.empty);
  }

  return new _Subscriber.Subscriber(nextOrObserver, error, complete);
}

/***/ }),
/* 618 */,
/* 619 */,
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(59)();
// imports


// module
exports.push([module.i, "/*!\n * Boosted v4.1.3 (http://boosted.orange.com)\n * Copyright 2014-2018 The Boosted Authors\n * Copyright 2014-2018 Orange\n * Licensed under MIT (https://github.com/orange-opensource/orange-boosted-bootstrap/blob/master/LICENSE)\n * This a fork of Bootstrap : Initial license below\n * Bootstrap v4.1.3 (https://getbootstrap.com)\n * Copyright 2011-2018 The Bootstrap Authors\n * Copyright 2011-2018 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */:root{--blue:#527edb;--indigo:#6610f2;--purple:#a885d8;--pink:#ffb4e6;--red:#cd3c14;--orange:#f16e00;--yellow:#fc0;--green:#32c832;--teal:#50be87;--cyan:#4bb4e6;--white:#fff;--gray:#999;--gray-dark:#595959;--primary:#f16e00;--secondary:#000;--success:#32c832;--info:#527edb;--warning:#fc0;--danger:#cd3c14;--light:#ddd;--dark:#000;--breakpoint-xs:0;--breakpoint-sm:480px;--breakpoint-md:768px;--breakpoint-lg:980px;--breakpoint-xl:1220px;--breakpoint-xxl:1380px;--font-family-sans-serif:\"HelvNeueOrange\",\"Helvetica Neue\",Helvetica,Arial,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}*,:after,:before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:rgba(0,0,0,0)}@-ms-viewport{width:device-width}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:HelvNeueOrange,Helvetica Neue,Helvetica,Arial,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,sans-serif;font-size:1rem;font-weight:400;line-height:1.25;color:#000;text-align:left;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:1.25rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0}address{font-style:normal;line-height:inherit}address,dl,ol,ul{margin-bottom:1rem}dl,ol,ul{margin-top:0}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}dfn{font-style:italic}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#000;text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects}a:hover{color:#f16e00;text-decoration:none}p a,p a:focus,p a:hover{text-decoration:underline}a:not([href]):not([tabindex]),a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{border-style:none}img,svg{vertical-align:middle}svg{overflow:hidden}table{border-collapse:collapse}caption{padding-top:.625rem .625rem .625rem 0;padding-bottom:.625rem .625rem .625rem 0;color:#666;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.625rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:1.25rem;font-family:inherit;font-weight:700;line-height:1.1;color:inherit}.h1,h1{font-size:2.125rem}.h2,h2{font-size:1.875rem}.h3,h3{font-size:1.5rem}.h4,h4{font-size:1.25rem}.h5,h5{font-size:1.125rem}.h6,h6{font-size:1rem}@media (max-width:767.98px){.h1,h1{font-size:1.25rem}.h2,h2{font-size:1.125rem}.h3,h3{font-size:1rem}.h4,.h5,.h6,h4,h5,h6{font-size:.875rem}}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:3.75rem}.display-1,.display-2{font-weight:700;line-height:1.1}.display-2{font-size:3.125rem}.display-3{font-size:2.5rem}.display-3,.display-4{font-weight:700;line-height:1.1}.display-4{font-size:2.125rem}hr{margin-top:1.25rem;margin-bottom:1.25rem;border:0;border-top:1px solid #eee}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#f16e00}.list-inline,.list-unstyled{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.3125rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1.25rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#666}.blockquote-footer:before{content:\"\\2014   \\A0\"}.img-fluid,.img-thumbnail{max-width:100%;height:auto}.img-thumbnail{padding:.625rem;background-color:#fff;border:2px solid #000}.figure{display:inline-block}.figure-img{margin-bottom:.625rem;line-height:1}.figure-caption{font-size:90%;color:#333}code{font-size:87.5%;color:#333;word-break:break-word}a>code{color:inherit}kbd{padding:.0625rem;font-size:87.5%;color:#000;background-color:#eee}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#333}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{padding-right:5px;padding-left:5px;margin-right:1.25%;margin-left:1.25%;max-width:312px;margin-right:auto;margin-left:auto;width:100%}@media (min-width:480px){.container{padding-right:5px;padding-left:5px}}@media (min-width:768px){.container{padding-right:10px;padding-left:10px}}@media (min-width:980px){.container{padding-right:10px;padding-left:10px}}@media (min-width:1220px){.container{padding-right:10px;padding-left:10px}}@media (min-width:1380px){.container{padding-right:10px;padding-left:10px}}.container .container-fluid{margin-right:auto;margin-left:auto}@media (min-width:480px){.container{margin-right:1.25%;margin-left:1.25%}.container .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:768px){.container{margin-right:1.5625%;margin-left:1.5625%}.container .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:980px){.container{margin-right:3.125%;margin-left:3.125%}.container .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:1220px){.container{margin-right:3.125%;margin-left:3.125%}.container .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:1380px){.container{margin-right:4.16667%;margin-left:4.16667%}.container .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:480px){.container{max-width:468px;margin-right:auto;margin-left:auto}}@media (min-width:768px){.container{max-width:744px;margin-right:auto;margin-left:auto}}@media (min-width:980px){.container{max-width:960px;margin-right:auto;margin-left:auto}}@media (min-width:1220px){.container{max-width:1200px;margin-right:auto;margin-left:auto}}@media (min-width:1380px){.container{max-width:1320px;margin-right:auto;margin-left:auto}}.container-fluid{margin-right:auto;margin-left:auto;padding-right:5px;padding-left:5px;margin-right:1.25%;margin-left:1.25%;width:auto}@media (min-width:480px){.container-fluid{padding-right:5px;padding-left:5px}}@media (min-width:768px){.container-fluid{padding-right:10px;padding-left:10px}}@media (min-width:980px){.container-fluid{padding-right:10px;padding-left:10px}}@media (min-width:1220px){.container-fluid{padding-right:10px;padding-left:10px}}@media (min-width:1380px){.container-fluid{padding-right:10px;padding-left:10px}}.container-fluid .container-fluid{margin-right:auto;margin-left:auto}@media (min-width:480px){.container-fluid{margin-right:1.25%;margin-left:1.25%}.container-fluid .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:768px){.container-fluid{margin-right:1.5625%;margin-left:1.5625%}.container-fluid .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:980px){.container-fluid{margin-right:3.125%;margin-left:3.125%}.container-fluid .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:1220px){.container-fluid{margin-right:3.125%;margin-left:3.125%}.container-fluid .container-fluid{margin-right:auto;margin-left:auto}}@media (min-width:1380px){.container-fluid{margin-right:4.16667%;margin-left:4.16667%}.container-fluid .container-fluid{margin-right:auto;margin-left:auto}}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}@media (min-width:480px){.row{margin-right:-5px;margin-left:-5px}}@media (min-width:768px){.row{margin-right:-10px;margin-left:-10px}}@media (min-width:980px){.row{margin-right:-10px;margin-left:-10px}}@media (min-width:1220px){.row{margin-right:-10px;margin-left:-10px}}@media (min-width:1380px){.row{margin-right:-10px;margin-left:-10px}}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col-auto,.col-lg,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-auto,.col-md,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md-auto,.col-sm,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-auto,.col-xxl,.col-xxl-1,.col-xxl-2,.col-xxl-3,.col-xxl-4,.col-xxl-5,.col-xxl-6,.col-xxl-7,.col-xxl-8,.col-xxl-9,.col-xxl-10,.col-xxl-11,.col-xxl-12,.col-xxl-auto{position:relative;width:100%;min-height:1px;padding-right:5px;padding-left:5px}@media (min-width:480px){.col,.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col-auto,.col-lg,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-auto,.col-md,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md-auto,.col-sm,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-auto,.col-xxl,.col-xxl-1,.col-xxl-2,.col-xxl-3,.col-xxl-4,.col-xxl-5,.col-xxl-6,.col-xxl-7,.col-xxl-8,.col-xxl-9,.col-xxl-10,.col-xxl-11,.col-xxl-12,.col-xxl-auto{padding-right:5px;padding-left:5px}}@media (min-width:768px){.col,.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col-auto,.col-lg,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-auto,.col-md,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md-auto,.col-sm,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-auto,.col-xxl,.col-xxl-1,.col-xxl-2,.col-xxl-3,.col-xxl-4,.col-xxl-5,.col-xxl-6,.col-xxl-7,.col-xxl-8,.col-xxl-9,.col-xxl-10,.col-xxl-11,.col-xxl-12,.col-xxl-auto{padding-right:10px;padding-left:10px}}@media (min-width:980px){.col,.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col-auto,.col-lg,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-auto,.col-md,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md-auto,.col-sm,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-auto,.col-xxl,.col-xxl-1,.col-xxl-2,.col-xxl-3,.col-xxl-4,.col-xxl-5,.col-xxl-6,.col-xxl-7,.col-xxl-8,.col-xxl-9,.col-xxl-10,.col-xxl-11,.col-xxl-12,.col-xxl-auto{padding-right:10px;padding-left:10px}}@media (min-width:1220px){.col,.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col-auto,.col-lg,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-auto,.col-md,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md-auto,.col-sm,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-auto,.col-xxl,.col-xxl-1,.col-xxl-2,.col-xxl-3,.col-xxl-4,.col-xxl-5,.col-xxl-6,.col-xxl-7,.col-xxl-8,.col-xxl-9,.col-xxl-10,.col-xxl-11,.col-xxl-12,.col-xxl-auto{padding-right:10px;padding-left:10px}}@media (min-width:1380px){.col,.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col-auto,.col-lg,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-auto,.col-md,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md-auto,.col-sm,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-auto,.col-xxl,.col-xxl-1,.col-xxl-2,.col-xxl-3,.col-xxl-4,.col-xxl-5,.col-xxl-6,.col-xxl-7,.col-xxl-8,.col-xxl-9,.col-xxl-10,.col-xxl-11,.col-xxl-12,.col-xxl-auto{padding-right:10px;padding-left:10px}}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width:480px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width:768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width:980px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width:1220px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}@media (min-width:1380px){.col-xxl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-xxl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:none}.col-xxl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xxl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xxl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xxl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xxl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xxl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xxl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xxl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xxl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xxl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xxl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xxl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xxl-first{-ms-flex-order:-1;order:-1}.order-xxl-last{-ms-flex-order:13;order:13}.order-xxl-0{-ms-flex-order:0;order:0}.order-xxl-1{-ms-flex-order:1;order:1}.order-xxl-2{-ms-flex-order:2;order:2}.order-xxl-3{-ms-flex-order:3;order:3}.order-xxl-4{-ms-flex-order:4;order:4}.order-xxl-5{-ms-flex-order:5;order:5}.order-xxl-6{-ms-flex-order:6;order:6}.order-xxl-7{-ms-flex-order:7;order:7}.order-xxl-8{-ms-flex-order:8;order:8}.order-xxl-9{-ms-flex-order:9;order:9}.order-xxl-10{-ms-flex-order:10;order:10}.order-xxl-11{-ms-flex-order:11;order:11}.order-xxl-12{-ms-flex-order:12;order:12}.offset-xxl-0{margin-left:0}.offset-xxl-1{margin-left:8.333333%}.offset-xxl-2{margin-left:16.666667%}.offset-xxl-3{margin-left:25%}.offset-xxl-4{margin-left:33.333333%}.offset-xxl-5{margin-left:41.666667%}.offset-xxl-6{margin-left:50%}.offset-xxl-7{margin-left:58.333333%}.offset-xxl-8{margin-left:66.666667%}.offset-xxl-9{margin-left:75%}.offset-xxl-10{margin-left:83.333333%}.offset-xxl-11{margin-left:91.666667%}}.table{width:100%;margin-bottom:1.25rem;background-color:#fff}.table td,.table th{padding:.625rem .625rem .625rem 0;vertical-align:top;border-top:1px solid #ccc}.table thead th{vertical-align:bottom;border-bottom:2px solid #ccc}.table tbody+tbody{border-top:2px solid #ccc}.table .table{background-color:#fff}.table-sm td,.table-sm th{padding:.3125rem .3125rem .3125rem 0}.table-bordered,.table-bordered td,.table-bordered th{border:1px solid #ccc}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-borderless tbody+tbody,.table-borderless td,.table-borderless th,.table-borderless thead th{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:#f6f6f6}.table-hover tbody tr:hover{background-color:#eee}.table-primary,.table-primary>td,.table-primary>th{background-color:#f16e00}.table-hover .table-primary:hover,.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#d86200}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#000;color:#fff}.table-hover .table-secondary:hover,.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#000}.table-success,.table-success>td,.table-success>th{background-color:#32c832}.table-hover .table-success:hover,.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#2db42d}.table-info,.table-info>td,.table-info>th{background-color:#527edb}.table-hover .table-info:hover,.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#3d6ed7}.table-warning,.table-warning>td,.table-warning>th{background-color:#fc0}.table-hover .table-warning:hover,.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#e6b800}.table-danger,.table-danger>td,.table-danger>th{background-color:#cd3c14;color:#fff}.table-hover .table-danger:hover,.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#b63512}.table-light,.table-light>td,.table-light>th{background-color:#ddd}.table-hover .table-light:hover,.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#d0d0d0}.table-dark,.table-dark>td,.table-dark>th{background-color:#000;color:#fff}.table-hover .table-dark:hover,.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#000}.table-active,.table-active>td,.table-active>th{background-color:#ddd}.table-hover .table-active:hover,.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:#d0d0d0}.table .thead-dark th{color:#fff;background-color:#000;border-color:#ccc}.table .thead-light th{color:#000;background-color:#fff;border-color:#ccc}.table-dark{color:#fff;background-color:#000}.table-dark td,.table-dark th,.table-dark thead th{border-color:#ccc}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:#333}.table-dark.table-hover tbody tr:hover{background-color:#666}@media (max-width:479.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-sm>.table-bordered{border:0}}@media (max-width:767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-md>.table-bordered{border:0}}@media (max-width:979.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-lg>.table-bordered{border:0}}@media (max-width:1219.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-xl>.table-bordered{border:0}}@media (max-width:1379.98px){.table-responsive-xxl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-xxl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive>.table-bordered{border:0}label{font-weight:700}.form-control{display:block;width:100%;height:calc(2.25rem + 4px);padding:.5rem .625rem;font-size:1rem;line-height:1.25;color:#000;background-color:#fff;background-clip:padding-box;border:2px solid #ccc;border-radius:0;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#000;background-color:#fff;border-color:#999;outline:0}.form-control::-webkit-input-placeholder{color:#666;opacity:1}.form-control::-moz-placeholder{color:#666;opacity:1}.form-control:-ms-input-placeholder,.form-control::-ms-input-placeholder{color:#666;opacity:1}.form-control::placeholder{color:#666;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#eee;opacity:1}select.form-control:focus::-ms-value{color:#000;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(.5rem + 2px);padding-bottom:calc(.5rem + 2px);margin-bottom:0;font-size:inherit;font-weight:700;line-height:1.25}.col-form-label-lg{padding-top:calc(.875rem + 2px);padding-bottom:calc(.875rem + 2px);font-size:1.125rem;line-height:1.5}.col-form-label-sm{padding-top:calc(.375rem + 2px);padding-bottom:calc(.375rem + 2px);font-size:.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0;line-height:1.25;color:#000;background-color:transparent;border:solid transparent;border-width:2px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{height:2.0625rem;padding:.375rem .625rem;font-size:.875rem;line-height:1.5}.form-control-lg{height:3.4375rem;padding:.875rem 1.25rem;font-size:1.125rem;line-height:1.5}select.form-control[multiple],select.form-control[size],textarea.form-control{height:auto}.form-group{margin-bottom:1.25rem}.form-text{display:block;margin-top:.625rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem;margin-bottom:.625rem}.form-check-input{position:absolute;margin-top:.25rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label{color:#666}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:.625rem;font-size:80%;color:#32c832}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:1.25rem;margin-top:.1rem;font-size:.875rem;line-height:1.25;color:#000;background-color:rgba(50,200,50,.9)}.custom-select.is-valid,.custom-select.is-valid:focus,.form-control.is-valid,.form-control.is-valid:focus,.was-validated .custom-select:valid,.was-validated .custom-select:valid:focus,.was-validated .form-control:valid,.was-validated .form-control:valid:focus{border-color:#32c832}.custom-select.is-valid~.valid-feedback,.custom-select.is-valid~.valid-tooltip,.form-control-file.is-valid~.valid-feedback,.form-control-file.is-valid~.valid-tooltip,.form-control.is-valid~.valid-feedback,.form-control.is-valid~.valid-tooltip,.was-validated .custom-select:valid~.valid-feedback,.was-validated .custom-select:valid~.valid-tooltip,.was-validated .form-control-file:valid~.valid-feedback,.was-validated .form-control-file:valid~.valid-tooltip,.was-validated .form-control:valid~.valid-feedback,.was-validated .form-control:valid~.valid-tooltip{display:block}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#32c832}.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip,.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid~.custom-control-label,.was-validated .custom-control-input:valid~.custom-control-label{color:#32c832}.custom-control-input.is-valid~.custom-control-label:before,.was-validated .custom-control-input:valid~.custom-control-label:before{background-color:#95e595}.custom-control-input.is-valid~.valid-feedback,.custom-control-input.is-valid~.valid-tooltip,.was-validated .custom-control-input:valid~.valid-feedback,.was-validated .custom-control-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid:checked~.custom-control-label:before,.was-validated .custom-control-input:valid:checked~.custom-control-label:before{background-color:#58d558}.custom-file-input.is-valid~.custom-file-label,.was-validated .custom-file-input:valid~.custom-file-label{border-color:#32c832}.custom-file-input.is-valid~.custom-file-label:after,.was-validated .custom-file-input:valid~.custom-file-label:after{border-color:inherit}.custom-file-input.is-valid~.valid-feedback,.custom-file-input.is-valid~.valid-tooltip,.was-validated .custom-file-input:valid~.valid-feedback,.was-validated .custom-file-input:valid~.valid-tooltip{display:block}.invalid-feedback{display:none;width:100%;margin-top:.625rem;font-size:80%;color:#cd3c14}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:1.25rem;margin-top:.1rem;font-size:.875rem;line-height:1.25;color:#fff;background-color:rgba(205,60,20,.9)}.custom-select.is-invalid,.custom-select.is-invalid:focus,.form-control.is-invalid,.form-control.is-invalid:focus,.was-validated .custom-select:invalid,.was-validated .custom-select:invalid:focus,.was-validated .form-control:invalid,.was-validated .form-control:invalid:focus{border-color:#cd3c14}.custom-select.is-invalid~.invalid-feedback,.custom-select.is-invalid~.invalid-tooltip,.form-control-file.is-invalid~.invalid-feedback,.form-control-file.is-invalid~.invalid-tooltip,.form-control.is-invalid~.invalid-feedback,.form-control.is-invalid~.invalid-tooltip,.was-validated .custom-select:invalid~.invalid-feedback,.was-validated .custom-select:invalid~.invalid-tooltip,.was-validated .form-control-file:invalid~.invalid-feedback,.was-validated .form-control-file:invalid~.invalid-tooltip,.was-validated .form-control:invalid~.invalid-feedback,.was-validated .form-control:invalid~.invalid-tooltip{display:block}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#cd3c14}.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip,.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid~.custom-control-label,.was-validated .custom-control-input:invalid~.custom-control-label{color:#cd3c14}.custom-control-input.is-invalid~.custom-control-label:before,.was-validated .custom-control-input:invalid~.custom-control-label:before{background-color:#f18c70}.custom-control-input.is-invalid~.invalid-feedback,.custom-control-input.is-invalid~.invalid-tooltip,.was-validated .custom-control-input:invalid~.invalid-feedback,.was-validated .custom-control-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid:checked~.custom-control-label:before,.was-validated .custom-control-input:invalid:checked~.custom-control-label:before{background-color:#ea532a}.custom-file-input.is-invalid~.custom-file-label,.was-validated .custom-file-input:invalid~.custom-file-label{border-color:#cd3c14}.custom-file-input.is-invalid~.custom-file-label:after,.was-validated .custom-file-input:invalid~.custom-file-label:after{border-color:inherit}.custom-file-input.is-invalid~.invalid-feedback,.custom-file-input.is-invalid~.invalid-tooltip,.was-validated .custom-file-input:invalid~.invalid-feedback,.was-validated .custom-file-input:invalid~.invalid-tooltip{display:block}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width:480px){.form-inline label{-ms-flex-align:center;-ms-flex-pack:center;justify-content:center}.form-inline .form-group,.form-inline label{display:-ms-flexbox;display:flex;align-items:center;margin-bottom:0}.form-inline .form-group{-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .custom-select,.form-inline .input-group{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:700;text-align:center;white-space:nowrap;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:2px solid transparent;padding:.5rem 1.125rem;font-size:1rem;line-height:1.25;border-radius:0;transition:all .2s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:focus,.btn:hover{text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:none}.btn.disabled,.btn:disabled{opacity:1}.btn:not(:disabled):not(.disabled){cursor:pointer}a.btn{text-decoration:none}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary,.btn-warning{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-primary:focus,.btn-primary:hover,.btn-warning:focus,.btn-warning:hover{color:#fff;background-color:#000;border-color:#000}.btn-primary.disabled,.btn-primary:disabled,.btn-warning.disabled,.btn-warning:disabled{color:#fff;background-color:#ccc;border-color:#ccc}.btn-primary:not(:disabled):not(.disabled).active,.btn-primary:not(:disabled):not(.disabled):active,.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-primary.dropdown-toggle,.show>.btn-warning.dropdown-toggle{color:#000;background-color:#fff;border-color:#000}.btn-primary.btn-inverse,.btn-warning.btn-inverse{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-primary.btn-inverse:focus,.btn-primary.btn-inverse:hover,.btn-warning.btn-inverse:focus,.btn-warning.btn-inverse:hover{color:#000;background-color:#fff;border-color:#fff}.btn-primary.btn-inverse.disabled,.btn-primary.btn-inverse:disabled,.btn-warning.btn-inverse.disabled,.btn-warning.btn-inverse:disabled{color:#000;background-color:#666;border-color:#666}.btn-primary.btn-inverse:not(:disabled):not(.disabled).active,.btn-primary.btn-inverse:not(:disabled):not(.disabled):active,.btn-warning.btn-inverse:not(:disabled):not(.disabled).active,.btn-warning.btn-inverse:not(:disabled):not(.disabled):active,.show>.btn-primary.btn-inverse.dropdown-toggle,.show>.btn-warning.btn-inverse.dropdown-toggle{color:#fff;background-color:#000;border-color:#fff}.btn-light,.btn-secondary{color:#000;background-color:transparent;border-color:#000}.btn-light:focus,.btn-light:hover,.btn-secondary:focus,.btn-secondary:hover{color:#fff;background-color:#000;border-color:#000}.btn-light.disabled,.btn-light:disabled,.btn-secondary.disabled,.btn-secondary:disabled{color:#ccc;background-color:transparent;border-color:#ccc}.btn-light:not(:disabled):not(.disabled).active,.btn-light:not(:disabled):not(.disabled):active,.btn-secondary:not(:disabled):not(.disabled).active,.btn-secondary:not(:disabled):not(.disabled):active,.show>.btn-light.dropdown-toggle,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-light.btn-inverse,.btn-secondary.btn-inverse{color:#000;background-color:#fff;border-color:#fff}.btn-light.btn-inverse:focus,.btn-light.btn-inverse:hover,.btn-secondary.btn-inverse:focus,.btn-secondary.btn-inverse:hover{color:#fff;background-color:#000;border-color:#fff}.btn-light.btn-inverse.disabled,.btn-light.btn-inverse:disabled,.btn-secondary.btn-inverse.disabled,.btn-secondary.btn-inverse:disabled{color:#000;background-color:#666;border-color:#666}.btn-light.btn-inverse:not(:disabled):not(.disabled).active,.btn-light.btn-inverse:not(:disabled):not(.disabled):active,.btn-secondary.btn-inverse:not(:disabled):not(.disabled).active,.btn-secondary.btn-inverse:not(:disabled):not(.disabled):active,.show>.btn-light.btn-inverse.dropdown-toggle,.show>.btn-secondary.btn-inverse.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-success{color:#000;background-color:#32c832;border-color:#32c832}.btn-success:focus,.btn-success:hover{color:#fff;background-color:#000;border-color:#000}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#ccc;border-color:#ccc}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-success.btn-inverse{color:#000;background-color:#32c832;border-color:#32c832}.btn-success.btn-inverse:focus,.btn-success.btn-inverse:hover{color:#000;background-color:#fff;border-color:#fff}.btn-success.btn-inverse.disabled,.btn-success.btn-inverse:disabled{color:#000;background-color:#666;border-color:#666}.btn-success.btn-inverse:not(:disabled):not(.disabled).active,.btn-success.btn-inverse:not(:disabled):not(.disabled):active,.show>.btn-success.btn-inverse.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-dark,.btn-info{color:#fff;background-color:#000;border-color:#000}.btn-dark:focus,.btn-dark:hover,.btn-info:focus,.btn-info:hover{color:#000;background-color:#fff;border-color:#000}.btn-dark.disabled,.btn-dark:disabled,.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#ccc;border-color:#ccc}.btn-dark:not(:disabled):not(.disabled).active,.btn-dark:not(:disabled):not(.disabled):active,.btn-info:not(:disabled):not(.disabled).active,.btn-info:not(:disabled):not(.disabled):active,.show>.btn-dark.dropdown-toggle,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-dark.btn-inverse,.btn-info.btn-inverse{color:#fff;background-color:transparent;border-color:#fff}.btn-dark.btn-inverse:focus,.btn-dark.btn-inverse:hover,.btn-info.btn-inverse:focus,.btn-info.btn-inverse:hover{color:#000;background-color:#fff;border-color:#fff}.btn-dark.btn-inverse.disabled,.btn-dark.btn-inverse:disabled,.btn-info.btn-inverse.disabled,.btn-info.btn-inverse:disabled{color:#666;background-color:transparent;border-color:#666}.btn-dark.btn-inverse:not(:disabled):not(.disabled).active,.btn-dark.btn-inverse:not(:disabled):not(.disabled):active,.btn-info.btn-inverse:not(:disabled):not(.disabled).active,.btn-info.btn-inverse:not(:disabled):not(.disabled):active,.show>.btn-dark.btn-inverse.dropdown-toggle,.show>.btn-info.btn-inverse.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-danger{color:#fff;background-color:#cd3c14;border-color:#cd3c14}.btn-danger:focus,.btn-danger:hover{color:#fff;background-color:#000;border-color:#000}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#ccc;border-color:#ccc}.btn-danger:not(:disabled):not(.disabled).active,.btn-danger:not(:disabled):not(.disabled):active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-danger.btn-inverse{color:#fff;background-color:#cd3c14;border-color:#cd3c14}.btn-danger.btn-inverse:focus,.btn-danger.btn-inverse:hover{color:#000;background-color:#fff;border-color:#fff}.btn-danger.btn-inverse.disabled,.btn-danger.btn-inverse:disabled{color:#000;background-color:#666;border-color:#666}.btn-danger.btn-inverse:not(:disabled):not(.disabled).active,.btn-danger.btn-inverse:not(:disabled):not(.disabled):active,.show>.btn-danger.btn-inverse.dropdown-toggle{color:#fff;background-color:#f16e00;border-color:#f16e00}.btn-outline-primary{color:#f16e00;background-color:transparent;background-image:none;border-color:#f16e00}.btn-outline-primary:focus,.btn-outline-primary:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#f16e00;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled).active,.btn-outline-primary:not(:disabled):not(.disabled):active,.show>.btn-outline-primary.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-outline-secondary{color:#000;background-color:transparent;background-image:none;border-color:#000}.btn-outline-secondary:focus,.btn-outline-secondary:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#000;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled).active,.btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.btn-outline-secondary.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-outline-success{color:#32c832;background-color:transparent;background-image:none;border-color:#32c832}.btn-outline-success:focus,.btn-outline-success:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#32c832;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled).active,.btn-outline-success:not(:disabled):not(.disabled):active,.show>.btn-outline-success.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-outline-info{color:#000;background-color:transparent;background-image:none;border-color:#000}.btn-outline-info:focus,.btn-outline-info:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#000;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled).active,.btn-outline-info:not(:disabled):not(.disabled):active,.show>.btn-outline-info.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-outline-warning{color:#f16e00;background-color:transparent;background-image:none;border-color:#f16e00}.btn-outline-warning:focus,.btn-outline-warning:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#f16e00;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled).active,.btn-outline-warning:not(:disabled):not(.disabled):active,.show>.btn-outline-warning.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-outline-danger{color:#cd3c14;background-color:transparent;background-image:none;border-color:#cd3c14}.btn-outline-danger:focus,.btn-outline-danger:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#cd3c14;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled).active,.btn-outline-danger:not(:disabled):not(.disabled):active,.show>.btn-outline-danger.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-outline-light{color:#ddd;background-color:transparent;background-image:none;border-color:#ddd}.btn-outline-light:focus,.btn-outline-light:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#ddd;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled).active,.btn-outline-light:not(:disabled):not(.disabled):active,.show>.btn-outline-light.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-outline-dark{color:#000;background-color:transparent;background-image:none;border-color:#000}.btn-outline-dark:focus,.btn-outline-dark:hover{color:#fff;background-color:#000;border-color:#000}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#000;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled).active,.btn-outline-dark:not(:disabled):not(.disabled):active,.show>.btn-outline-dark.dropdown-toggle{color:#000;background-color:#f16e00;border-color:#f16e00}.btn-link{color:#000;background-color:transparent}.btn-link.btn-inverse{color:#fff}.btn-link:hover{color:#f16e00;text-decoration:none;background-color:transparent;border-color:transparent}.btn-link.focus,.btn-link:focus{text-decoration:none;border-color:transparent;box-shadow:none}.btn-link.disabled,.btn-link:disabled{color:#ccc;pointer-events:none}.btn-group-lg>.btn,.btn-lg{padding:.875rem 1.25rem;font-size:1.125rem;line-height:1.5;border-radius:0}.btn-group-sm>.btn,.btn-sm{padding:.375rem .625rem;font-size:.875rem;line-height:1.5;border-radius:0}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{transition:opacity .15s linear}@media screen and (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}@media screen and (prefers-reduced-motion:reduce){.collapsing{transition:none}}.dropdown,.dropleft,.dropright,.dropup{position:relative}.dropdown-toggle:after{display:inline-block;width:0;height:0;margin-left:.371875em;vertical-align:.371875em;content:\"\";border-top:.4375em solid;border-right:.4375em solid transparent;border-bottom:0;border-left:.4375em solid transparent}.dropdown-toggle:empty:after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:0;margin:-2px 0 0;font-size:1rem;color:#000;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:2px solid #000}.dropdown-menu-right{right:0;left:auto}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:-2px}.dropup .dropdown-toggle:after{display:inline-block;width:0;height:0;margin-left:.371875em;vertical-align:.371875em;content:\"\";border-top:0;border-right:.4375em solid transparent;border-bottom:.4375em solid;border-left:.4375em solid transparent}.dropup .dropdown-toggle:empty:after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:-2px}.dropright .dropdown-toggle:after{display:inline-block;width:0;height:0;margin-left:.371875em;vertical-align:.371875em;content:\"\";border-top:.4375em solid transparent;border-right:0;border-bottom:.4375em solid transparent;border-left:.4375em solid}.dropright .dropdown-toggle:empty:after{margin-left:0}.dropright .dropdown-toggle:after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:-2px}.dropleft .dropdown-toggle:after{display:inline-block;width:0;height:0;margin-left:.371875em;vertical-align:.371875em;content:\"\";display:none}.dropleft .dropdown-toggle:before{display:inline-block;width:0;height:0;margin-right:.371875em;vertical-align:.371875em;content:\"\";border-top:.4375em solid transparent;border-right:.4375em solid;border-bottom:.4375em solid transparent}.dropleft .dropdown-toggle:empty:after{margin-left:0}.dropleft .dropdown-toggle:before{vertical-align:0}.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=top]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.625rem 0;overflow:hidden;border-top:1px solid #eee}.dropdown-item{display:block;width:100%;padding:.625rem;clear:both;font-weight:400;color:#000;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item.active,.dropdown-item:active,.dropdown-item:focus,.dropdown-item:hover{color:#fff;text-decoration:none;background-color:#000}.dropdown-item.disabled,.dropdown-item:disabled{color:#666;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:0 .625rem;margin-bottom:0;font-size:.875rem;color:#000;white-space:nowrap}.dropdown-item-text{display:block;padding:.625rem;color:#000}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;-ms-flex:0 1 auto;flex:0 1 auto}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:1}.btn-group-vertical .btn+.btn,.btn-group-vertical .btn+.btn-group,.btn-group-vertical .btn-group+.btn,.btn-group-vertical .btn-group+.btn-group,.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-2px}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:first-child{margin-left:0}.dropdown-toggle-split{padding-right:.84375rem;padding-left:.84375rem}.dropdown-toggle-split:after,.dropright .dropdown-toggle-split:after,.dropup .dropdown-toggle-split:after{margin-left:0}.dropleft .dropdown-toggle-split:before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.46875rem;padding-left:.46875rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.9375rem;padding-left:.9375rem}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical .btn,.btn-group-vertical .btn-group{width:100%}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-2px;margin-left:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn-group>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio],.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;margin-bottom:0}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control{margin-left:-2px}.input-group>.custom-file .custom-file-input:focus~.custom-file-label,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.custom-file{-ms-flex-align:center;align-items:center}.input-group-append,.input-group-prepend,.input-group>.custom-file{display:-ms-flexbox;display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-2px}.input-group-prepend{margin-right:-2px}.input-group-append{margin-left:-2px}.input-group-prepend+.form-control{border-left-color:transparent}.custom-select:focus+.input-group-append,.form-control:focus+.input-group-append{position:relative;z-index:5}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.5rem .625rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.25;color:#000;text-align:center;white-space:nowrap;background-color:#eee;border:2px solid #ccc}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{height:3.4375rem;padding:.875rem 1.25rem;font-size:1.125rem;line-height:1.5}.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{height:2.0625rem;padding:.375rem .625rem;font-size:.875rem;line-height:1.5}.custom-control{position:relative;display:block;min-height:1.25rem;padding-left:1.875rem;margin-bottom:.625rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1.25rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-label:before{color:#fff;border-color:#f16e00;background-color:#f16e00}.custom-control-input:checked~.custom-control-label:before:before{background-color:#f16e00}.custom-control-input:focus~.custom-control-label:before{outline:1px dotted #000;box-shadow:none}.custom-control-input:active~.custom-control-label:before{color:#fff;background-color:#f16e00;border-color:#f16e00}.custom-control-input:disabled~.custom-control-label{color:#767676}.custom-control-input:disabled~.custom-control-label:before{border-color:#ccc}.custom-control-input:disabled:checked~.custom-control-label:before{background-color:#ccc}.custom-control-label{margin-bottom:0}.custom-control-label:before{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#fff;border:2px solid #666}.custom-control-label:after,.custom-control-label:before{position:absolute;top:0;left:0;display:block;width:1.25rem;height:1.25rem;content:\"\"}.custom-control-label:after{background-repeat:no-repeat;background-position:50%;background-size:1rem}.custom-checkbox .custom-control-input:checked~.custom-control-label:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M14%202l-8%208-3-3-2%202%205%205L16%204l-2-2z%22%20fill%3D%22%23FFF%22%2F%3E%3C%2Fsvg%3E\")}.custom-checkbox .custom-control-input:checked:focus~.custom-control-label:before{outline-color:#000}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label:before{border-color:#f16e00;background-color:#f16e00}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath stroke='%23fff' d='M1 4h6'/%3E%3C/svg%3E\")}.custom-radio .custom-control-label:before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='2' fill='%23fff'/%3E%3C/svg%3E\")}.custom-select{display:inline-block;width:100%;height:calc(2.25rem + 4px);padding:.4375rem 1.5rem .4375rem .5rem;font-weight:700;line-height:1.25;color:#000;vertical-align:middle;background:#fff url(\"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2014%207%22%3E%3Cpath%20d%3D%22M0%200h14L7%207%200%200z%22%2F%3E%3C%2Fsvg%3E\") no-repeat right .5rem center;background-size:8px 10px;border:2px solid #ccc;border-radius:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#999;outline:0;box-shadow:none}.custom-select:focus::-ms-value{color:#000;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size=\"1\"]){height:auto;padding-right:.5rem;background-image:none}.custom-select:disabled{color:#999;background-color:#eee}.custom-select::-ms-expand{opacity:0}.custom-select-sm{height:2.0625rem;font-size:75%}.custom-select-lg,.custom-select-sm{padding-top:.4375rem;padding-bottom:.4375rem}.custom-select-lg{height:3.4375rem;font-size:125%}.custom-file{display:inline-block;margin-bottom:0}.custom-file,.custom-file-input{position:relative;width:100%;height:calc(2.25rem + 4px)}.custom-file-input{z-index:2;margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#999;box-shadow:none}.custom-file-input:focus~.custom-file-label:after{border-color:#999}.custom-file-input:disabled~.custom-file-label{background-color:#eee}.custom-file-input:lang(en)~.custom-file-label:after{content:\"Browse\"}.custom-file-label{left:0;z-index:1;height:calc(2.25rem + 4px);background-color:#fff;border:2px solid #ccc}.custom-file-label,.custom-file-label:after{position:absolute;top:0;right:0;padding:.5rem .625rem;line-height:1.25;color:#000}.custom-file-label:after{bottom:0;z-index:3;display:block;height:2.25rem;content:\"Browse\";background-color:#eee;border-left:2px solid #ccc}.custom-range{width:100%;padding-left:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:none}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,none}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,none}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,none}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#000;border:0;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media screen and (prefers-reduced-motion:reduce){.custom-range::-webkit-slider-thumb{transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#595959}.custom-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#eee;border-color:transparent}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#000;border:0;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media screen and (prefers-reduced-motion:reduce){.custom-range::-moz-range-thumb{transition:none}}.custom-range::-moz-range-thumb:active{background-color:#595959}.custom-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#eee;border-color:transparent}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:.2rem;margin-left:.2rem;background-color:#000;border:0;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;appearance:none}@media screen and (prefers-reduced-motion:reduce){.custom-range::-ms-thumb{transition:none}}.custom-range::-ms-thumb:active{background-color:#595959}.custom-range::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem}.custom-range::-ms-fill-lower{background-color:#eee}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#eee}.custom-control-label:before,.custom-file-label,.custom-select{transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.custom-control-label:before,.custom-file-label,.custom-select{transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.625rem 1.25rem;font-weight:700}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#666}.nav-tabs{border-bottom:2px solid #000}.nav-tabs .nav-item{margin-bottom:-2px}.nav-tabs .nav-link{padding:.625rem calc(1.25rem - 2px);line-height:1rem;border:2px solid transparent;border-bottom-width:0}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{color:#fff;background-color:#000;border-color:#000}.nav-tabs .nav-link.disabled{color:#666;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#000;background-color:#fff;border-color:#000}.nav-tabs .dropdown-menu{margin-top:-2px}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#000}.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;padding:0;font-weight:700}.navbar,.navbar>.container,.navbar>.container-fluid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar>.container,.navbar>.container-fluid{-ms-flex-positive:1;flex-grow:1;padding-right:0;padding-left:0}.navbar-brand{display:inline-block;-ms-flex-item-align:end;align-self:flex-end;padding-top:0;padding-bottom:0;margin:.625rem .3125rem;font-size:.875rem;font-weight:700;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-brand+.navbar-brand{margin-right:0;margin-left:1.25rem}.navbar-brand:focus{outline:1px dotted #fff;outline-offset:.625rem}.navbar-brand img{-ms-flex-wrap:wrap;flex-wrap:wrap;width:1.875rem;height:1.875rem;margin-top:0;margin-bottom:.25rem}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-top:auto;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding:.875rem .625rem;margin-top:0}.navbar-nav .nav-link.active:before{display:none}.navbar-nav .nav-link.icon{padding:.78125rem .625rem;margin-top:0}.navbar-nav .nav-link[class^=svg-]{margin:.625rem}.navbar-nav .nav-link[role=menuitem]:before{float:right;margin-right:1rem;font-family:icon-orange,sans-serif;font-size:1rem;font-weight:400;color:#fff;content:\"\\E93E\"}.navbar-nav .nav-link:focus{outline-offset:.625rem}.navbar-nav .dropdown-menu{position:static;top:2rem;float:none}.navbar-nav .nav-item{margin-left:0;font-size:1.125rem;border-top:1px solid #333}.navbar-nav .dropdown{padding:0}.navbar-nav .dropdown .dropdown-item,.navbar-nav .dropdown .dropdown-toggle{padding:.875rem 0 .875rem .625rem}.navbar-nav .dropdown.show .dropdown-toggle:after{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-nav .dropdown .dropdown-item{color:#fff;white-space:normal;background-color:#000;border-top:1px solid #333}.navbar-nav .dropdown .dropdown-item:focus{color:#f16e00}.navbar-text{display:inline-block;padding-top:.625rem;padding-bottom:.625rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-item-align:end;align-self:flex-end}.navbar-collapse .navbar-nav{-ms-flex-align:stretch;align-items:stretch}.navbar-toggler{padding:.5rem;margin:.3125rem 0;font-size:1rem;line-height:1;background-color:transparent;border:2px solid transparent}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none;background-color:#fff}.navbar-toggler:focus .navbar-toggler-icon,.navbar-toggler:hover .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 1024 1024' width='20px' height='20px' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23000' d='M106.906 754.176c-10.957-2.15-21.299-10.65-26.419-21.402-2.765-6.042-3.174-7.782-3.174-15.974 0-8.397 0.307-9.83 3.379-16.077 4.301-8.704 10.138-14.541 18.637-18.637l6.656-3.174h812.032l6.656 3.174c8.397 4.096 14.848 10.445 18.637 18.432 9.114 19.456 1.024 41.574-18.637 50.995l-6.656 3.174-403.456 0.102c-221.901 0.102-405.402-0.205-407.654-0.614zM105.37 497.766c-10.65-2.867-19.251-10.035-24.678-20.582-2.97-5.53-3.277-7.066-3.277-15.872-0.102-8.806 0.205-10.342 3.072-16.384 3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.277c7.475 3.686 9.216 5.018 14.438 11.571 5.53 6.861 7.578 13.312 7.578 23.552 0 7.578-0.41 9.523-3.174 15.36-3.994 8.499-10.342 14.848-18.842 18.842l-6.656 3.174-403.968 0.205c-317.85 0.102-404.992-0.102-408.678-1.126zM104.96 241.766c-11.366-3.584-19.354-10.547-24.474-21.094-2.765-5.939-3.174-7.68-3.174-15.872s0.41-9.933 3.174-15.872c3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.174c8.499 3.994 14.848 10.342 18.842 18.842 2.867 5.939 3.174 7.68 3.174 15.872s-0.307 9.933-3.174 15.872c-3.994 8.397-10.342 14.746-18.842 18.842l-6.656 3.174-404.48 0.205c-324.915 0.102-405.299-0.102-408.576-1.126z'/%3E%3C/svg%3E\")}.navbar-toggler:active{background-color:#f16e00}.navbar-toggler:active .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 1024 1024' width='20px' height='20px' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23fff' d='M106.906 754.176c-10.957-2.15-21.299-10.65-26.419-21.402-2.765-6.042-3.174-7.782-3.174-15.974 0-8.397 0.307-9.83 3.379-16.077 4.301-8.704 10.138-14.541 18.637-18.637l6.656-3.174h812.032l6.656 3.174c8.397 4.096 14.848 10.445 18.637 18.432 9.114 19.456 1.024 41.574-18.637 50.995l-6.656 3.174-403.456 0.102c-221.901 0.102-405.402-0.205-407.654-0.614zM105.37 497.766c-10.65-2.867-19.251-10.035-24.678-20.582-2.97-5.53-3.277-7.066-3.277-15.872-0.102-8.806 0.205-10.342 3.072-16.384 3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.277c7.475 3.686 9.216 5.018 14.438 11.571 5.53 6.861 7.578 13.312 7.578 23.552 0 7.578-0.41 9.523-3.174 15.36-3.994 8.499-10.342 14.848-18.842 18.842l-6.656 3.174-403.968 0.205c-317.85 0.102-404.992-0.102-408.678-1.126zM104.96 241.766c-11.366-3.584-19.354-10.547-24.474-21.094-2.765-5.939-3.174-7.68-3.174-15.872s0.41-9.933 3.174-15.872c3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.174c8.499 3.994 14.848 10.342 18.842 18.842 2.867 5.939 3.174 7.68 3.174 15.872s-0.307 9.933-3.174 15.872c-3.994 8.397-10.342 14.746-18.842 18.842l-6.656 3.174-404.48 0.205c-324.915 0.102-405.299-0.102-408.576-1.126z'/%3E%3C/svg%3E\")}.navbar-toggler:focus{outline:0}.navbar-toggler:not(:disabled):not(.disabled){cursor:pointer}.navbar-toggler-icon{display:inline-block;width:1.25rem;height:1.25rem;vertical-align:middle;content:\"\";background:no-repeat 50%;background-size:100% 100%}@media (min-width:480px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;padding:1.5625rem 0 1.3125rem}.navbar-expand-sm .navbar-brand{margin:0 .625rem 0 0}.navbar-expand-sm .navbar-brand img{width:3.125rem;height:3.125rem}.navbar-expand-sm.minimized{padding-top:1.25rem;padding-bottom:1rem}.navbar-expand-sm.minimized .navbar-brand img{width:2.5rem;height:2.5rem}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .dropdown-item{color:#000;background-color:#fff;border:0}.navbar-expand-sm .navbar-nav .dropdown-item.active,.navbar-expand-sm .navbar-nav .dropdown-item:hover{color:#fff;background-color:#000}.navbar-expand-sm .navbar-nav .nav-item{font-size:1rem;border:0}.navbar-expand-sm .navbar-nav .nav-item.dropdown{-ms-flex-item-align:end;align-self:flex-end}.navbar-expand-sm .navbar-nav .nav-link{padding:0;margin-left:1.25rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding-right:10px;padding-left:10px}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (min-width:768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;padding:1.5625rem 0 1.3125rem}.navbar-expand-md .navbar-brand{margin:0 .625rem 0 0}.navbar-expand-md .navbar-brand img{width:3.125rem;height:3.125rem}.navbar-expand-md.minimized{padding-top:1.25rem;padding-bottom:1rem}.navbar-expand-md.minimized .navbar-brand img{width:2.5rem;height:2.5rem}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .dropdown-item{color:#000;background-color:#fff;border:0}.navbar-expand-md .navbar-nav .dropdown-item.active,.navbar-expand-md .navbar-nav .dropdown-item:hover{color:#fff;background-color:#000}.navbar-expand-md .navbar-nav .nav-item{font-size:1rem;border:0}.navbar-expand-md .navbar-nav .nav-item.dropdown{-ms-flex-item-align:end;align-self:flex-end}.navbar-expand-md .navbar-nav .nav-link{padding:0;margin-left:1.25rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding-right:10px;padding-left:10px}.navbar-expand-md .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (min-width:980px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;padding:1.5625rem 0 1.3125rem}.navbar-expand-lg .navbar-brand{margin:0 .625rem 0 0}.navbar-expand-lg .navbar-brand img{width:3.125rem;height:3.125rem}.navbar-expand-lg.minimized{padding-top:1.25rem;padding-bottom:1rem}.navbar-expand-lg.minimized .navbar-brand img{width:2.5rem;height:2.5rem}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .dropdown-item{color:#000;background-color:#fff;border:0}.navbar-expand-lg .navbar-nav .dropdown-item.active,.navbar-expand-lg .navbar-nav .dropdown-item:hover{color:#fff;background-color:#000}.navbar-expand-lg .navbar-nav .nav-item{font-size:1rem;border:0}.navbar-expand-lg .navbar-nav .nav-item.dropdown{-ms-flex-item-align:end;align-self:flex-end}.navbar-expand-lg .navbar-nav .nav-link{padding:0;margin-left:1.25rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding-right:10px;padding-left:10px}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (min-width:1220px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;padding:1.5625rem 0 1.3125rem}.navbar-expand-xl .navbar-brand{margin:0 .625rem 0 0}.navbar-expand-xl .navbar-brand img{width:3.125rem;height:3.125rem}.navbar-expand-xl.minimized{padding-top:1.25rem;padding-bottom:1rem}.navbar-expand-xl.minimized .navbar-brand img{width:2.5rem;height:2.5rem}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .dropdown-item{color:#000;background-color:#fff;border:0}.navbar-expand-xl .navbar-nav .dropdown-item.active,.navbar-expand-xl .navbar-nav .dropdown-item:hover{color:#fff;background-color:#000}.navbar-expand-xl .navbar-nav .nav-item{font-size:1rem;border:0}.navbar-expand-xl .navbar-nav .nav-item.dropdown{-ms-flex-item-align:end;align-self:flex-end}.navbar-expand-xl .navbar-nav .nav-link{padding:0;margin-left:1.25rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding-right:10px;padding-left:10px}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}@media (min-width:1380px){.navbar-expand-xxl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;padding:1.5625rem 0 1.3125rem}.navbar-expand-xxl .navbar-brand{margin:0 .625rem 0 0}.navbar-expand-xxl .navbar-brand img{width:3.125rem;height:3.125rem}.navbar-expand-xxl.minimized{padding-top:1.25rem;padding-bottom:1rem}.navbar-expand-xxl.minimized .navbar-brand img{width:2.5rem;height:2.5rem}.navbar-expand-xxl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xxl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xxl .navbar-nav .dropdown-item{color:#000;background-color:#fff;border:0}.navbar-expand-xxl .navbar-nav .dropdown-item.active,.navbar-expand-xxl .navbar-nav .dropdown-item:hover{color:#fff;background-color:#000}.navbar-expand-xxl .navbar-nav .nav-item{font-size:1rem;border:0}.navbar-expand-xxl .navbar-nav .nav-item.dropdown{-ms-flex-item-align:end;align-self:flex-end}.navbar-expand-xxl .navbar-nav .nav-link{padding:0;margin-left:1.25rem}.navbar-expand-xxl>.container,.navbar-expand-xxl>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding-right:10px;padding-left:10px}.navbar-expand-xxl .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xxl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;padding:1.5625rem 0 1.3125rem}.navbar-expand .navbar-brand{margin:0 .625rem 0 0}.navbar-expand .navbar-brand img{width:3.125rem;height:3.125rem}.navbar-expand.minimized{padding-top:1.25rem;padding-bottom:1rem}.navbar-expand.minimized .navbar-brand img{width:2.5rem;height:2.5rem}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .dropdown-item{color:#000;background-color:#fff;border:0}.navbar-expand .navbar-nav .dropdown-item.active,.navbar-expand .navbar-nav .dropdown-item:hover{color:#fff;background-color:#000}.navbar-expand .navbar-nav .nav-item{font-size:1rem;border:0}.navbar-expand .navbar-nav .nav-item.dropdown{-ms-flex-item-align:end;align-self:flex-end}.navbar-expand .navbar-nav .nav-link{padding:0;margin-left:1.25rem}.navbar-expand>.container,.navbar-expand>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding-right:10px;padding-left:10px}.navbar-expand .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:#000}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:#f16e00}.navbar-light .navbar-nav .nav-link{color:#000}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:#f16e00}.navbar-light .navbar-nav .nav-link.disabled{color:#ddd}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:#f16e00}.navbar-light .navbar-toggler{color:#000;border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 1024 1024' width='20px' height='20px' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23fff' d='M106.906 754.176c-10.957-2.15-21.299-10.65-26.419-21.402-2.765-6.042-3.174-7.782-3.174-15.974 0-8.397 0.307-9.83 3.379-16.077 4.301-8.704 10.138-14.541 18.637-18.637l6.656-3.174h812.032l6.656 3.174c8.397 4.096 14.848 10.445 18.637 18.432 9.114 19.456 1.024 41.574-18.637 50.995l-6.656 3.174-403.456 0.102c-221.901 0.102-405.402-0.205-407.654-0.614zM105.37 497.766c-10.65-2.867-19.251-10.035-24.678-20.582-2.97-5.53-3.277-7.066-3.277-15.872-0.102-8.806 0.205-10.342 3.072-16.384 3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.277c7.475 3.686 9.216 5.018 14.438 11.571 5.53 6.861 7.578 13.312 7.578 23.552 0 7.578-0.41 9.523-3.174 15.36-3.994 8.499-10.342 14.848-18.842 18.842l-6.656 3.174-403.968 0.205c-317.85 0.102-404.992-0.102-408.678-1.126zM104.96 241.766c-11.366-3.584-19.354-10.547-24.474-21.094-2.765-5.939-3.174-7.68-3.174-15.872s0.41-9.933 3.174-15.872c3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.174c8.499 3.994 14.848 10.342 18.842 18.842 2.867 5.939 3.174 7.68 3.174 15.872s-0.307 9.933-3.174 15.872c-3.994 8.397-10.342 14.746-18.842 18.842l-6.656 3.174-404.48 0.205c-324.915 0.102-405.299-0.102-408.576-1.126z'/%3E%3C/svg%3E\")}.navbar-light .navbar-text{color:#000}.navbar-light .navbar-text a,.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:#f16e00}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#f16e00}.navbar-dark .navbar-nav .nav-link{color:#fff}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:#f16e00}.navbar-dark .navbar-nav .nav-link.disabled{color:#ddd}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#f16e00}.navbar-dark .navbar-toggler{color:#fff;border-color:hsla(0,0%,100%,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 1024 1024' width='20px' height='20px' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23fff' d='M106.906 754.176c-10.957-2.15-21.299-10.65-26.419-21.402-2.765-6.042-3.174-7.782-3.174-15.974 0-8.397 0.307-9.83 3.379-16.077 4.301-8.704 10.138-14.541 18.637-18.637l6.656-3.174h812.032l6.656 3.174c8.397 4.096 14.848 10.445 18.637 18.432 9.114 19.456 1.024 41.574-18.637 50.995l-6.656 3.174-403.456 0.102c-221.901 0.102-405.402-0.205-407.654-0.614zM105.37 497.766c-10.65-2.867-19.251-10.035-24.678-20.582-2.97-5.53-3.277-7.066-3.277-15.872-0.102-8.806 0.205-10.342 3.072-16.384 3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.277c7.475 3.686 9.216 5.018 14.438 11.571 5.53 6.861 7.578 13.312 7.578 23.552 0 7.578-0.41 9.523-3.174 15.36-3.994 8.499-10.342 14.848-18.842 18.842l-6.656 3.174-403.968 0.205c-317.85 0.102-404.992-0.102-408.678-1.126zM104.96 241.766c-11.366-3.584-19.354-10.547-24.474-21.094-2.765-5.939-3.174-7.68-3.174-15.872s0.41-9.933 3.174-15.872c3.994-8.397 10.342-14.746 18.842-18.842l6.656-3.174h812.032l6.656 3.174c8.499 3.994 14.848 10.342 18.842 18.842 2.867 5.939 3.174 7.68 3.174 15.872s-0.307 9.933-3.174 15.872c-3.994 8.397-10.342 14.746-18.842 18.842l-6.656 3.174-404.48 0.205c-324.915 0.102-405.299-0.102-408.576-1.126z'/%3E%3C/svg%3E\")}.navbar-dark .navbar-text{color:#fff}.navbar-dark .navbar-text a,.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#f16e00}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:2px solid #000}.card>hr{margin-right:0;margin-left:0}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem}.card-subtitle,.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;font-weight:700;color:#fff;background-color:#000;border-bottom:2px solid #000}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:.75rem 1.25rem;background-color:#fff;border-top:2px solid #000}.card-header-tabs{margin-bottom:-.75rem;border-bottom:0}.card-header-pills,.card-header-tabs{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img,.card-img-bottom,.card-img-top{width:100%}.card-deck{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-deck .card{margin-bottom:2.5rem}@media (min-width:480px){.card-deck{-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-2.5rem;margin-left:-2.5rem}.card-deck .card{display:-ms-flexbox;display:flex;-ms-flex:1 0 0%;flex:1 0 0%;-ms-flex-direction:column;flex-direction:column;margin-right:2.5rem;margin-bottom:0;margin-left:2.5rem}}.card-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-group>.card{margin-bottom:10px}@media (min-width:480px){.card-group{-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}}.card-columns .card{margin-bottom:2.5rem}@media (min-width:480px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion .card{margin-bottom:0;border:0;border-top:1px solid #ccc;border-bottom:1px solid #ccc}.accordion .card~.card{border-top:0}.accordion .card-header{padding:0;background-color:#fff;border:0}.accordion .card-header,.accordion .card-header h5{margin:0;font-size:1rem;font-weight:700;line-height:1}.accordion .card-header a,.accordion .card-header button{position:relative;display:block;width:100%;padding:1rem 2.125rem 1rem 0;line-height:1.125rem;text-align:left;border:0}.accordion .card-header a:after,.accordion .card-header button:after{position:absolute;top:1.3125rem;right:.625rem;width:.875rem;height:.4375rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2014%207%22%3E%3Cpath%20d%3D%22M7%207L0%200h14L7%207z%22%2F%3E%3C%2Fsvg%3E\")}.accordion .card-header a[aria-expanded=true]:after,.accordion .card-header button[aria-expanded=true]:after{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.accordion .card-body{padding:0 1.5rem 0 0;margin:0 0 1.25rem}@media (max-width:767.98px){.accordion .card{border-top-width:2px;border-bottom-width:2px}.accordion .card~.card{border-top:0}}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:.625rem 0;font-size:.875rem;font-weight:700;line-height:1.428571;list-style:none;background-color:#fff}.breadcrumb-item+.breadcrumb-item{padding-left:.625rem}.breadcrumb-item+.breadcrumb-item:before{display:inline-block;padding-right:.625rem;font-family:icon-orange;font-size:.625rem;line-height:1;color:#000;content:\"\\E93E\"}.breadcrumb-item+.breadcrumb-item:hover:before{text-decoration:underline;text-decoration:none}.breadcrumb-item.active{color:#f16e00}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none}.page-link{position:relative;display:block;min-width:2.5rem;min-height:2.5rem;padding:.625rem .8rem;margin-left:0;font-weight:700;line-height:1;border:2px solid transparent}.page-link,.page-link:hover{color:#000;background-color:#fff}.page-link:hover{z-index:2;text-decoration:none;border-color:#000}.page-link:hover span{color:#000}.page-link:focus{z-index:2;outline:0;box-shadow:none}.page-link span{color:#fff}.page-link:not(:disabled):not(.disabled){cursor:pointer}.page-item.presentation{padding:.625rem 0;font-weight:700}.page-item.presentation+.page-item .page-link,.page-item:first-child .page-link{margin-left:0;border-color:#000}.page-item.presentation+.page-item .page-link:before,.page-item:first-child .page-link:before{position:absolute;top:.6875rem;left:.8125rem;width:.5625rem;height:.875rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%209%2014%22%3E%3Cpath%20d%3D%22M9%202L7%200%200%207l7%207%202-2-5-5%205-5z%22%2F%3E%3C%2Fsvg%3E\");background-repeat:no-repeat}.page-item.presentation+.page-item .page-link:focus:before,.page-item.presentation+.page-item .page-link:hover:before,.page-item:first-child .page-link:focus:before,.page-item:first-child .page-link:hover:before{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%209%2014%22%3E%3Cpath%20d%3D%22M9%202L7%200%200%207l7%207%202-2-5-5%205-5z%22%20fill%3D%22%23fff%22%2F%3E%3C%2Fsvg%3E\")}.page-item.presentation+.page-item .page-link.has-label,.page-item:first-child .page-link.has-label{padding-right:1.125rem;padding-left:2rem}.page-item.presentation+.page-item .page-link:focus,.page-item.presentation+.page-item .page-link:hover,.page-item:first-child .page-link:focus,.page-item:first-child .page-link:hover,.page-item:last-child .page-link:focus,.page-item:last-child .page-link:hover{color:#fff;background-color:#000;border-color:#000}.page-item:last-child .page-link{border-color:#000}.page-item:last-child .page-link:before{position:absolute;top:.6875rem;right:.8125rem;width:.5625rem;height:.875rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%209%2014%22%3E%3Cpath%20d%3D%22M0%202l2-2%207%207-7%207-2-2%205-5-5-5z%22%2F%3E%3C%2Fsvg%3E\");background-repeat:no-repeat}.page-item:last-child .page-link:focus:before,.page-item:last-child .page-link:hover:before{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%209%2014%22%3E%3Cpath%20d%3D%22M0%202l2-2%207%207-7%207-2-2%205-5-5-5z%22%20fill%3D%22%23fff%22%2F%3E%3C%2Fsvg%3E\")}.page-item:last-child .page-link.has-label{padding-right:2rem;padding-left:1.125rem}.page-item.active .page-link{z-index:1;color:#fff;background-color:#000;border-color:#000}.page-item.active:first-child .page-link:before{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%209%2014%22%3E%3Cpath%20d%3D%22M9%202L7%200%200%207l7%207%202-2-5-5%205-5z%22%20fill%3D%22%23fff%22%2F%3E%3C%2Fsvg%3E\")}.page-item.active:last-child .page-link:before{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%209%2014%22%3E%3Cpath%20d%3D%22M0%202l2-2%207%207-7%207-2-2%205-5-5-5z%22%20fill%3D%22%23fff%22%2F%3E%3C%2Fsvg%3E\")}.page-item.disabled .page-link{color:#ccc;pointer-events:none;cursor:auto;background-color:#fff;border-color:#ccc}.page-item.disabled:first-child .page-link:before{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20viewBox%3D%220%200%209%2014%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M9%202L7%200%200%207l7%207%202-2-5-5%205-5z%22%20fill%3D%22%23DDD%22%2F%3E%3C%2Fsvg%3E\")}.page-item.disabled:last-child .page-link:before{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20viewBox%3D%220%200%209%2014%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M0%202l2-2%207%207-7%207-2-2%205-5-5-5z%22%20fill%3D%22%23DDD%22%2F%3E%3C%2Fsvg%3E\")}.page-item+.page-item{margin-left:.625rem}.pagination-lg .page-link{min-width:3.125rem;min-height:3.125rem;padding:.875rem 1.125rem;font-size:1.125rem;line-height:1.111111}.pagination-lg .page-item:first-child .page-link:before,.pagination-lg .page-item:last-child .page-link:before{top:1rem}.pagination-sm .page-link{min-width:1.875rem;min-height:1.875rem;padding:.375rem .625rem;font-size:.875rem;line-height:1.428571}.pagination-sm .page-item:first-child .page-link:before,.pagination-sm .page-item:last-child .page-link:before{top:auto}.badge{display:inline-block;padding:.1875rem .625rem;font-size:.875rem;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.625rem;padding-left:.625rem}.badge-primary{color:#fff;background-color:#f16e00}.badge-primary[href]:focus,.badge-primary[href]:hover{color:#fff;text-decoration:none;background-color:#be5700}.badge-secondary{color:#fff;background-color:#000}.badge-secondary[href]:focus,.badge-secondary[href]:hover{color:#fff;text-decoration:none;background-color:#000}.badge-success{color:#000;background-color:#32c832}.badge-success[href]:focus,.badge-success[href]:hover{color:#000;text-decoration:none;background-color:#289f28}.badge-info{color:#000;background-color:#527edb}.badge-info[href]:focus,.badge-info[href]:hover{color:#000;text-decoration:none;background-color:#2b60cf}.badge-warning{color:#000;background-color:#fc0}.badge-warning[href]:focus,.badge-warning[href]:hover{color:#000;text-decoration:none;background-color:#cca300}.badge-danger{color:#fff;background-color:#cd3c14}.badge-danger[href]:focus,.badge-danger[href]:hover{color:#fff;text-decoration:none;background-color:#9f2e0f}.badge-light{color:#000;background-color:#ddd}.badge-light[href]:focus,.badge-light[href]:hover{color:#000;text-decoration:none;background-color:#c4c4c4}.badge-dark{color:#fff;background-color:#000}.badge-dark[href]:focus,.badge-dark[href]:hover{color:#fff;text-decoration:none;background-color:#000}.badge[href]:focus{outline-color:#fff;outline-offset:-1px}.badge[href]:focus.badge-light{outline-color:#000}.jumbotron{padding:2.5rem 1.25rem;margin-bottom:2.5rem;background-color:#fff}@media (min-width:480px){.jumbotron{padding:5rem 2.5rem}}.jumbotron-fluid{padding-right:0;padding-left:0}.alert{position:relative;padding:1.25rem;margin-bottom:1.25rem;border:0 solid transparent}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:1.25rem;line-height:1.25rem;color:inherit}.alert-primary{color:#000;background-color:#f16e00;border-color:#f16e00}.alert-primary hr{border-top-color:#d86200}.alert-primary .alert-link{color:#000}.alert-secondary{color:#fff;background-color:#000;border-color:#000}.alert-secondary hr{border-top-color:#000}.alert-secondary .alert-link{color:#e6e6e6}.alert-success{color:#000;background-color:#32c832;border-color:#32c832}.alert-success hr{border-top-color:#2db42d}.alert-success .alert-link{color:#000}.alert-info{color:#000;background-color:#527edb;border-color:#527edb}.alert-info hr{border-top-color:#3d6ed7}.alert-info .alert-link{color:#000}.alert-warning{color:#000;background-color:#fc0;border-color:#fc0}.alert-warning hr{border-top-color:#e6b800}.alert-warning .alert-link{color:#000}.alert-danger{color:#fff;background-color:#cd3c14;border-color:#cd3c14}.alert-danger hr{border-top-color:#b63512}.alert-danger .alert-link{color:#e6e6e6}.alert-light{color:#000;background-color:#ddd;border-color:#ddd}.alert-light hr{border-top-color:#d0d0d0}.alert-light .alert-link{color:#000}.alert-dark{color:#fff;background-color:#000;border-color:#000}.alert-dark hr{border-top-color:#000}.alert-dark .alert-link{color:#e6e6e6}@-webkit-keyframes progress-bar-stripes{0%{background-position:1.25rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{0%{background-position:1.25rem 0}to{background-position:0 0}}.progress{height:1.25rem;overflow:hidden;font-size:1rem;background-color:#ccc}.progress,.progress-bar{display:-ms-flexbox;display:flex}.progress-bar{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;color:#000;text-align:center;white-space:nowrap;background-color:#f16e00;transition:width .6s ease}@media screen and (prefers-reduced-motion:reduce){.progress-bar{transition:none}}@media (max-width:979.98px){.progress{width:100%;height:.625rem;line-height:.625rem}.progress-bar{font-size:.875rem;line-height:.625rem}}.progress-bar-striped{background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent);background-size:1.25rem 1.25rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#000;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{color:#f16e00;text-decoration:none;background-color:#f6f6f6}.list-group-item-action:active{color:#000;background-color:#eee}.list-group-item{position:relative;display:block;padding:.625rem;margin-bottom:-2px;background-color:#fff;border:2px solid #000}.list-group-item:last-child{margin-bottom:0}.list-group-item:focus,.list-group-item:hover{z-index:1;text-decoration:none}.list-group-item.disabled,.list-group-item:disabled{color:#ccc;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#000;border-color:#000}.list-group-flush .list-group-item{border-right:0;border-left:0}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom:0}.list-group-item-primary{color:#000;background-color:#f16e00}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#000;background-color:#d86200}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.list-group-item-secondary,.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#fff;background-color:#000}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.list-group-item-success{color:#000;background-color:#32c832}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#000;background-color:#2db42d}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.list-group-item-info{color:#000;background-color:#527edb}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#000;background-color:#3d6ed7}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.list-group-item-warning{color:#000;background-color:#fc0}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#000;background-color:#e6b800}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.list-group-item-danger{color:#000;background-color:#cd3c14}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#000;background-color:#b63512}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.list-group-item-light{color:#000;background-color:#ddd}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#000;background-color:#d0d0d0}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.list-group-item-dark,.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#fff;background-color:#000}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#000;border-color:#000}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:not(:disabled):not(.disabled){cursor:pointer}.close:not(:disabled):not(.disabled):focus,.close:not(:disabled):not(.disabled):hover{color:#000;text-decoration:none;opacity:.75}button.close{padding:0;background-color:transparent;border:0;-webkit-appearance:none}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:.625rem;pointer-events:none}.modal.fade .modal-dialog{transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out,-webkit-transform .3s ease-out;-webkit-transform:translateY(-25%);transform:translateY(-25%)}@media screen and (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{-webkit-transform:translate(0);transform:translate(0)}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1.25rem)}.modal-dialog-centered:before{display:block;height:calc(100vh - 1.25rem);content:\"\"}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:2px solid #000;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#333}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:.625rem;border-bottom:2px solid #000}.modal-header .close{padding:.625rem;margin:-.625rem -.625rem -.625rem auto}.modal-title{margin-bottom:0;line-height:1.25}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:.625rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:.625rem;border-top:2px solid #000}.modal-footer>:not(:first-child){margin-left:.25rem}.modal-footer>:not(:last-child){margin-right:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:480px){.modal-dialog{max-width:700px;margin:1.875rem auto}.modal-dialog-centered{min-height:calc(100% - 3.75rem)}.modal-dialog-centered:before{height:calc(100vh - 3.75rem)}.modal-sm{max-width:300px}}@media (min-width:980px){.modal-lg{max-width:700px}}.tooltip{position:absolute;z-index:1070;display:block;margin:.3125rem;font-family:HelvNeueOrange,Helvetica Neue,Helvetica,Arial,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,sans-serif;font-style:normal;font-weight:400;line-height:1.25;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;font-weight:700;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:.625rem;height:.625rem}.tooltip .arrow:before{position:absolute;content:\"\";border-color:transparent;border-style:solid}.bs-tooltip-auto[x-placement^=top],.bs-tooltip-top{padding:.625rem 0}.bs-tooltip-auto[x-placement^=top] .arrow,.bs-tooltip-top .arrow{bottom:0}.bs-tooltip-auto[x-placement^=top] .arrow:before,.bs-tooltip-top .arrow:before{top:0;border-width:.625rem .3125rem 0;border-top-color:#ddd}.bs-tooltip-auto[x-placement^=right],.bs-tooltip-right{padding:0 .625rem}.bs-tooltip-auto[x-placement^=right] .arrow,.bs-tooltip-right .arrow{left:0;width:.625rem;height:.625rem}.bs-tooltip-auto[x-placement^=right] .arrow:before,.bs-tooltip-right .arrow:before{right:0;border-width:.3125rem .625rem .3125rem 0;border-right-color:#ddd}.bs-tooltip-auto[x-placement^=bottom],.bs-tooltip-bottom{padding:.625rem 0}.bs-tooltip-auto[x-placement^=bottom] .arrow,.bs-tooltip-bottom .arrow{top:0}.bs-tooltip-auto[x-placement^=bottom] .arrow:before,.bs-tooltip-bottom .arrow:before{bottom:0;border-width:0 .3125rem .625rem;border-bottom-color:#ddd}.bs-tooltip-auto[x-placement^=left],.bs-tooltip-left{padding:0 .625rem}.bs-tooltip-auto[x-placement^=left] .arrow,.bs-tooltip-left .arrow{right:0;width:.625rem;height:.625rem}.bs-tooltip-auto[x-placement^=left] .arrow:before,.bs-tooltip-left .arrow:before{left:0;border-width:.3125rem 0 .3125rem .625rem;border-left-color:#ddd}.tooltip-inner{max-width:200px;padding:1.25rem;color:#000;text-align:center;background-color:#ddd}.popover{top:0;left:0;z-index:1060;max-width:276px;font-family:HelvNeueOrange,Helvetica Neue,Helvetica,Arial,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,sans-serif;font-style:normal;font-weight:400;line-height:1.25;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;font-weight:700;word-wrap:break-word;background-color:#ddd;background-clip:padding-box;border:2px solid #ddd}.popover,.popover .arrow{position:absolute;display:block}.popover .arrow{width:.625rem;height:.3125rem;margin:0 .3rem}.popover .arrow:after,.popover .arrow:before{position:absolute;display:block;content:\"\";border-color:transparent;border-style:solid}.bs-popover-auto[x-placement^=top],.bs-popover-top{margin-bottom:.3125rem}.bs-popover-auto[x-placement^=top] .arrow,.bs-popover-top .arrow{bottom:calc((.3125rem + 2px) * -1)}.bs-popover-auto[x-placement^=top] .arrow:after,.bs-popover-auto[x-placement^=top] .arrow:before,.bs-popover-top .arrow:after,.bs-popover-top .arrow:before{border-width:.3125rem .3125rem 0}.bs-popover-auto[x-placement^=top] .arrow:before,.bs-popover-top .arrow:before{bottom:0;border-top-color:#ddd}.bs-popover-auto[x-placement^=top] .arrow:after,.bs-popover-top .arrow:after{bottom:2px;border-top-color:#ddd}.bs-popover-auto[x-placement^=right],.bs-popover-right{margin-left:.3125rem}.bs-popover-auto[x-placement^=right] .arrow,.bs-popover-right .arrow{left:calc((.3125rem + 2px) * -1);width:.3125rem;height:.625rem;margin:.3rem 0}.bs-popover-auto[x-placement^=right] .arrow:after,.bs-popover-auto[x-placement^=right] .arrow:before,.bs-popover-right .arrow:after,.bs-popover-right .arrow:before{border-width:.3125rem .3125rem .3125rem 0}.bs-popover-auto[x-placement^=right] .arrow:before,.bs-popover-right .arrow:before{left:0;border-right-color:#ddd}.bs-popover-auto[x-placement^=right] .arrow:after,.bs-popover-right .arrow:after{left:2px;border-right-color:#ddd}.bs-popover-auto[x-placement^=bottom],.bs-popover-bottom{margin-top:.3125rem}.bs-popover-auto[x-placement^=bottom] .arrow,.bs-popover-bottom .arrow{top:calc((.3125rem + 2px) * -1)}.bs-popover-auto[x-placement^=bottom] .arrow:after,.bs-popover-auto[x-placement^=bottom] .arrow:before,.bs-popover-bottom .arrow:after,.bs-popover-bottom .arrow:before{border-width:0 .3125rem .3125rem}.bs-popover-auto[x-placement^=bottom] .arrow:before,.bs-popover-bottom .arrow:before{top:0;border-bottom-color:#ddd}.bs-popover-auto[x-placement^=bottom] .arrow:after,.bs-popover-bottom .arrow:after{top:2px;border-bottom-color:#ddd}.bs-popover-auto[x-placement^=bottom] .popover-header:before,.bs-popover-bottom .popover-header:before{position:absolute;top:0;left:50%;display:block;width:.625rem;margin-left:-.3125rem;content:\"\";border-bottom:2px solid #ddd}.bs-popover-auto[x-placement^=left],.bs-popover-left{margin-right:.3125rem}.bs-popover-auto[x-placement^=left] .arrow,.bs-popover-left .arrow{right:calc((.3125rem + 2px) * -1);width:.3125rem;height:.625rem;margin:.3rem 0}.bs-popover-auto[x-placement^=left] .arrow:after,.bs-popover-auto[x-placement^=left] .arrow:before,.bs-popover-left .arrow:after,.bs-popover-left .arrow:before{border-width:.3125rem 0 .3125rem .3125rem}.bs-popover-auto[x-placement^=left] .arrow:before,.bs-popover-left .arrow:before{right:0;border-left-color:#ddd}.bs-popover-auto[x-placement^=left] .arrow:after,.bs-popover-left .arrow:after{right:2px;border-left-color:#ddd}.popover-header{padding:.625rem;margin-bottom:0;font-size:1rem;color:inherit;background-color:#ddd;border-bottom:2px solid #d0d0d0}.popover-header:empty{display:none}.popover-body{padding:.625rem;color:#000}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-item{position:relative;display:none;-ms-flex-align:center;align-items:center;width:100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block;transition:-webkit-transform .6s ease;transition:transform .6s ease;transition:transform .6s ease,-webkit-transform .6s ease}@media screen and (prefers-reduced-motion:reduce){.carousel-item-next,.carousel-item-prev,.carousel-item.active{transition:none}}.carousel-item-next,.carousel-item-prev{position:absolute;top:0}.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{-webkit-transform:translateX(0);transform:translateX(0)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{-webkit-transform:translateZ(0);transform:translateZ(0)}}.active.carousel-item-right,.carousel-item-next{-webkit-transform:translateX(100%);transform:translateX(100%)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.active.carousel-item-right,.carousel-item-next{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}.active.carousel-item-left,.carousel-item-prev{-webkit-transform:translateX(-100%);transform:translateX(-100%)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.active.carousel-item-left,.carousel-item-prev{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.carousel-fade .carousel-item{opacity:0;transition-duration:.6s;transition-property:opacity}.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right,.carousel-fade .carousel-item.active{opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{opacity:0}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{-webkit-transform:translateX(0);transform:translateX(0)}@supports ((-webkit-transform-style:preserve-3d) or (transform-style:preserve-3d)){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{-webkit-transform:translateZ(0);transform:translateZ(0)}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:1.875rem;color:#000;text-align:center;opacity:.5}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#000;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:transparent no-repeat 50%;background-size:100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' viewBox='0 0 8 8'%3E%3Cpath d='M4 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\")}.carousel-control-next-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' viewBox='0 0 8 8'%3E%3Cpath d='M1.5 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\")}.carousel-indicators{position:absolute;right:0;bottom:10px;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:1.875rem;margin-left:1.875rem;list-style:none}.carousel-indicators li{position:relative;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:rgba(241,110,0,.5)}.carousel-indicators li:before{top:-10px}.carousel-indicators li:after,.carousel-indicators li:before{position:absolute;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.carousel-indicators li:after{bottom:-10px}.carousel-indicators .active{background-color:#f16e00}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#000;text-align:center}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary{background-color:#f16e00!important}a.bg-primary:focus,a.bg-primary:hover,button.bg-primary:focus,button.bg-primary:hover{background-color:#be5700!important}.bg-secondary,a.bg-secondary:focus,a.bg-secondary:hover,button.bg-secondary:focus,button.bg-secondary:hover{background-color:#000!important}.bg-success{background-color:#32c832!important}a.bg-success:focus,a.bg-success:hover,button.bg-success:focus,button.bg-success:hover{background-color:#289f28!important}.bg-info{background-color:#527edb!important}a.bg-info:focus,a.bg-info:hover,button.bg-info:focus,button.bg-info:hover{background-color:#2b60cf!important}.bg-warning{background-color:#fc0!important}a.bg-warning:focus,a.bg-warning:hover,button.bg-warning:focus,button.bg-warning:hover{background-color:#cca300!important}.bg-danger{background-color:#cd3c14!important}a.bg-danger:focus,a.bg-danger:hover,button.bg-danger:focus,button.bg-danger:hover{background-color:#9f2e0f!important}.bg-light{background-color:#ddd!important}a.bg-light:focus,a.bg-light:hover,button.bg-light:focus,button.bg-light:hover{background-color:#c4c4c4!important}.bg-dark,a.bg-dark:focus,a.bg-dark:hover,button.bg-dark:focus,button.bg-dark:hover{background-color:#000!important}.bg-white{background-color:#fff!important}.bg-transparent{background-color:transparent!important}.border{border:2px solid #f6f6f6!important}.border-top{border-top:2px solid #f6f6f6!important}.border-right{border-right:2px solid #f6f6f6!important}.border-bottom{border-bottom:2px solid #f6f6f6!important}.border-left{border-left:2px solid #f6f6f6!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#f16e00!important}.border-secondary{border-color:#000!important}.border-success{border-color:#32c832!important}.border-info{border-color:#527edb!important}.border-warning{border-color:#fc0!important}.border-danger{border-color:#cd3c14!important}.border-light{border-color:#ddd!important}.border-dark{border-color:#000!important}.border-white{border-color:#fff!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important}.rounded-right,.rounded-top{border-top-right-radius:.25rem!important}.rounded-bottom,.rounded-right{border-bottom-right-radius:.25rem!important}.rounded-bottom,.rounded-left{border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important}.rounded-circle{border-radius:50%!important}.rounded-0{border-radius:0!important}.clearfix:after{display:block;clear:both;content:\"\"}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:-ms-flexbox!important;display:flex!important}.d-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}@media (min-width:480px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:-ms-flexbox!important;display:flex!important}.d-sm-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:-ms-flexbox!important;display:flex!important}.d-md-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:980px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:-ms-flexbox!important;display:flex!important}.d-lg-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1220px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:-ms-flexbox!important;display:flex!important}.d-xl-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1380px){.d-xxl-none{display:none!important}.d-xxl-inline{display:inline!important}.d-xxl-inline-block{display:inline-block!important}.d-xxl-block{display:block!important}.d-xxl-table{display:table!important}.d-xxl-table-row{display:table-row!important}.d-xxl-table-cell{display:table-cell!important}.d-xxl-flex{display:-ms-flexbox!important;display:flex!important}.d-xxl-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media print{.d-print-none{display:none!important}.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:-ms-flexbox!important;display:flex!important}.d-print-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive:before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9:before{padding-top:42.857143%}.embed-responsive-16by9:before{padding-top:56.25%}.embed-responsive-4by3:before{padding-top:75%}.embed-responsive-1by1:before{padding-top:100%}.flex-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-center{-ms-flex-align:center!important;align-items:center!important}.align-items-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}@media (min-width:480px){.flex-sm-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-sm-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-sm-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-sm-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-sm-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-sm-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-sm-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-sm-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-sm-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-sm-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-sm-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-sm-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-sm-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-sm-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-sm-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-sm-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-sm-center{-ms-flex-align:center!important;align-items:center!important}.align-items-sm-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-sm-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-sm-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-sm-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-sm-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-sm-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-sm-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-sm-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-sm-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-sm-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-sm-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-sm-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-sm-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-sm-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.flex-md-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-md-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-md-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-md-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-md-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-md-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-md-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-md-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-md-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-md-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-md-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-md-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-md-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-md-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-md-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-md-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-md-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-md-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-md-center{-ms-flex-align:center!important;align-items:center!important}.align-items-md-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-md-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-md-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-md-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-md-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-md-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-md-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-md-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-md-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-md-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-md-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-md-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-md-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-md-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:980px){.flex-lg-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-lg-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-lg-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-lg-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-lg-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-lg-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-lg-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-lg-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-lg-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-lg-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-lg-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-lg-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-lg-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-lg-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-lg-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-lg-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-lg-center{-ms-flex-align:center!important;align-items:center!important}.align-items-lg-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-lg-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-lg-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-lg-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-lg-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-lg-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-lg-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-lg-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-lg-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-lg-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-lg-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-lg-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-lg-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-lg-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:1220px){.flex-xl-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-xl-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-xl-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-xl-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-xl-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-xl-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-xl-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-xl-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-xl-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-xl-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-xl-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-xl-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-xl-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-xl-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-xl-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-xl-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-xl-center{-ms-flex-align:center!important;align-items:center!important}.align-items-xl-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-xl-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-xl-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-xl-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-xl-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-xl-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-xl-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-xl-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-xl-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-xl-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-xl-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-xl-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-xl-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-xl-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:1380px){.flex-xxl-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-xxl-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-xxl-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-xxl-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-xxl-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-xxl-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-xxl-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-xxl-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-xxl-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-xxl-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-xxl-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-xxl-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-xxl-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-xxl-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-xxl-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-xxl-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-xxl-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-xxl-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-xxl-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-xxl-center{-ms-flex-align:center!important;align-items:center!important}.align-items-xxl-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-xxl-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-xxl-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-xxl-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-xxl-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-xxl-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-xxl-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-xxl-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-xxl-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-xxl-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-xxl-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-xxl-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-xxl-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-xxl-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:480px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:980px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1220px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}@media (min-width:1380px){.float-xxl-left{float:left!important}.float-xxl-right{float:right!important}.float-xxl-none{float:none!important}}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.fixed-top{top:0}.fixed-bottom,.fixed-top{position:fixed;right:0;left:0;z-index:1030}.fixed-bottom{bottom:0}@supports ((position:-webkit-sticky) or (position:sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:0}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.m-0{margin:0!important}.mt-0,.my-0{margin-top:0!important}.mr-0,.mx-0{margin-right:0!important}.mb-0,.my-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.m-1{margin:.3125rem!important}.mt-1,.my-1{margin-top:.3125rem!important}.mr-1,.mx-1{margin-right:.3125rem!important}.mb-1,.my-1{margin-bottom:.3125rem!important}.ml-1,.mx-1{margin-left:.3125rem!important}.m-2{margin:.625rem!important}.mt-2,.my-2{margin-top:.625rem!important}.mr-2,.mx-2{margin-right:.625rem!important}.mb-2,.my-2{margin-bottom:.625rem!important}.ml-2,.mx-2{margin-left:.625rem!important}.m-3{margin:1.25rem!important}.mt-3,.my-3{margin-top:1.25rem!important}.mr-3,.mx-3{margin-right:1.25rem!important}.mb-3,.my-3{margin-bottom:1.25rem!important}.ml-3,.mx-3{margin-left:1.25rem!important}.m-4{margin:1.875rem!important}.mt-4,.my-4{margin-top:1.875rem!important}.mr-4,.mx-4{margin-right:1.875rem!important}.mb-4,.my-4{margin-bottom:1.875rem!important}.ml-4,.mx-4{margin-left:1.875rem!important}.m-5{margin:3.75rem!important}.mt-5,.my-5{margin-top:3.75rem!important}.mr-5,.mx-5{margin-right:3.75rem!important}.mb-5,.my-5{margin-bottom:3.75rem!important}.ml-5,.mx-5{margin-left:3.75rem!important}.p-0{padding:0!important}.pt-0,.py-0{padding-top:0!important}.pr-0,.px-0{padding-right:0!important}.pb-0,.py-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.p-1{padding:.3125rem!important}.pt-1,.py-1{padding-top:.3125rem!important}.pr-1,.px-1{padding-right:.3125rem!important}.pb-1,.py-1{padding-bottom:.3125rem!important}.pl-1,.px-1{padding-left:.3125rem!important}.p-2{padding:.625rem!important}.pt-2,.py-2{padding-top:.625rem!important}.pr-2,.px-2{padding-right:.625rem!important}.pb-2,.py-2{padding-bottom:.625rem!important}.pl-2,.px-2{padding-left:.625rem!important}.p-3{padding:1.25rem!important}.pt-3,.py-3{padding-top:1.25rem!important}.pr-3,.px-3{padding-right:1.25rem!important}.pb-3,.py-3{padding-bottom:1.25rem!important}.pl-3,.px-3{padding-left:1.25rem!important}.p-4{padding:1.875rem!important}.pt-4,.py-4{padding-top:1.875rem!important}.pr-4,.px-4{padding-right:1.875rem!important}.pb-4,.py-4{padding-bottom:1.875rem!important}.pl-4,.px-4{padding-left:1.875rem!important}.p-5{padding:3.75rem!important}.pt-5,.py-5{padding-top:3.75rem!important}.pr-5,.px-5{padding-right:3.75rem!important}.pb-5,.py-5{padding-bottom:3.75rem!important}.pl-5,.px-5{padding-left:3.75rem!important}.m-auto{margin:auto!important}.mt-auto,.my-auto{margin-top:auto!important}.mr-auto,.mx-auto{margin-right:auto!important}.mb-auto,.my-auto{margin-bottom:auto!important}.ml-auto,.mx-auto{margin-left:auto!important}@media (min-width:480px){.m-sm-0{margin:0!important}.mt-sm-0,.my-sm-0{margin-top:0!important}.mr-sm-0,.mx-sm-0{margin-right:0!important}.mb-sm-0,.my-sm-0{margin-bottom:0!important}.ml-sm-0,.mx-sm-0{margin-left:0!important}.m-sm-1{margin:.3125rem!important}.mt-sm-1,.my-sm-1{margin-top:.3125rem!important}.mr-sm-1,.mx-sm-1{margin-right:.3125rem!important}.mb-sm-1,.my-sm-1{margin-bottom:.3125rem!important}.ml-sm-1,.mx-sm-1{margin-left:.3125rem!important}.m-sm-2{margin:.625rem!important}.mt-sm-2,.my-sm-2{margin-top:.625rem!important}.mr-sm-2,.mx-sm-2{margin-right:.625rem!important}.mb-sm-2,.my-sm-2{margin-bottom:.625rem!important}.ml-sm-2,.mx-sm-2{margin-left:.625rem!important}.m-sm-3{margin:1.25rem!important}.mt-sm-3,.my-sm-3{margin-top:1.25rem!important}.mr-sm-3,.mx-sm-3{margin-right:1.25rem!important}.mb-sm-3,.my-sm-3{margin-bottom:1.25rem!important}.ml-sm-3,.mx-sm-3{margin-left:1.25rem!important}.m-sm-4{margin:1.875rem!important}.mt-sm-4,.my-sm-4{margin-top:1.875rem!important}.mr-sm-4,.mx-sm-4{margin-right:1.875rem!important}.mb-sm-4,.my-sm-4{margin-bottom:1.875rem!important}.ml-sm-4,.mx-sm-4{margin-left:1.875rem!important}.m-sm-5{margin:3.75rem!important}.mt-sm-5,.my-sm-5{margin-top:3.75rem!important}.mr-sm-5,.mx-sm-5{margin-right:3.75rem!important}.mb-sm-5,.my-sm-5{margin-bottom:3.75rem!important}.ml-sm-5,.mx-sm-5{margin-left:3.75rem!important}.p-sm-0{padding:0!important}.pt-sm-0,.py-sm-0{padding-top:0!important}.pr-sm-0,.px-sm-0{padding-right:0!important}.pb-sm-0,.py-sm-0{padding-bottom:0!important}.pl-sm-0,.px-sm-0{padding-left:0!important}.p-sm-1{padding:.3125rem!important}.pt-sm-1,.py-sm-1{padding-top:.3125rem!important}.pr-sm-1,.px-sm-1{padding-right:.3125rem!important}.pb-sm-1,.py-sm-1{padding-bottom:.3125rem!important}.pl-sm-1,.px-sm-1{padding-left:.3125rem!important}.p-sm-2{padding:.625rem!important}.pt-sm-2,.py-sm-2{padding-top:.625rem!important}.pr-sm-2,.px-sm-2{padding-right:.625rem!important}.pb-sm-2,.py-sm-2{padding-bottom:.625rem!important}.pl-sm-2,.px-sm-2{padding-left:.625rem!important}.p-sm-3{padding:1.25rem!important}.pt-sm-3,.py-sm-3{padding-top:1.25rem!important}.pr-sm-3,.px-sm-3{padding-right:1.25rem!important}.pb-sm-3,.py-sm-3{padding-bottom:1.25rem!important}.pl-sm-3,.px-sm-3{padding-left:1.25rem!important}.p-sm-4{padding:1.875rem!important}.pt-sm-4,.py-sm-4{padding-top:1.875rem!important}.pr-sm-4,.px-sm-4{padding-right:1.875rem!important}.pb-sm-4,.py-sm-4{padding-bottom:1.875rem!important}.pl-sm-4,.px-sm-4{padding-left:1.875rem!important}.p-sm-5{padding:3.75rem!important}.pt-sm-5,.py-sm-5{padding-top:3.75rem!important}.pr-sm-5,.px-sm-5{padding-right:3.75rem!important}.pb-sm-5,.py-sm-5{padding-bottom:3.75rem!important}.pl-sm-5,.px-sm-5{padding-left:3.75rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto,.my-sm-auto{margin-top:auto!important}.mr-sm-auto,.mx-sm-auto{margin-right:auto!important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto!important}.ml-sm-auto,.mx-sm-auto{margin-left:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0,.my-md-0{margin-top:0!important}.mr-md-0,.mx-md-0{margin-right:0!important}.mb-md-0,.my-md-0{margin-bottom:0!important}.ml-md-0,.mx-md-0{margin-left:0!important}.m-md-1{margin:.3125rem!important}.mt-md-1,.my-md-1{margin-top:.3125rem!important}.mr-md-1,.mx-md-1{margin-right:.3125rem!important}.mb-md-1,.my-md-1{margin-bottom:.3125rem!important}.ml-md-1,.mx-md-1{margin-left:.3125rem!important}.m-md-2{margin:.625rem!important}.mt-md-2,.my-md-2{margin-top:.625rem!important}.mr-md-2,.mx-md-2{margin-right:.625rem!important}.mb-md-2,.my-md-2{margin-bottom:.625rem!important}.ml-md-2,.mx-md-2{margin-left:.625rem!important}.m-md-3{margin:1.25rem!important}.mt-md-3,.my-md-3{margin-top:1.25rem!important}.mr-md-3,.mx-md-3{margin-right:1.25rem!important}.mb-md-3,.my-md-3{margin-bottom:1.25rem!important}.ml-md-3,.mx-md-3{margin-left:1.25rem!important}.m-md-4{margin:1.875rem!important}.mt-md-4,.my-md-4{margin-top:1.875rem!important}.mr-md-4,.mx-md-4{margin-right:1.875rem!important}.mb-md-4,.my-md-4{margin-bottom:1.875rem!important}.ml-md-4,.mx-md-4{margin-left:1.875rem!important}.m-md-5{margin:3.75rem!important}.mt-md-5,.my-md-5{margin-top:3.75rem!important}.mr-md-5,.mx-md-5{margin-right:3.75rem!important}.mb-md-5,.my-md-5{margin-bottom:3.75rem!important}.ml-md-5,.mx-md-5{margin-left:3.75rem!important}.p-md-0{padding:0!important}.pt-md-0,.py-md-0{padding-top:0!important}.pr-md-0,.px-md-0{padding-right:0!important}.pb-md-0,.py-md-0{padding-bottom:0!important}.pl-md-0,.px-md-0{padding-left:0!important}.p-md-1{padding:.3125rem!important}.pt-md-1,.py-md-1{padding-top:.3125rem!important}.pr-md-1,.px-md-1{padding-right:.3125rem!important}.pb-md-1,.py-md-1{padding-bottom:.3125rem!important}.pl-md-1,.px-md-1{padding-left:.3125rem!important}.p-md-2{padding:.625rem!important}.pt-md-2,.py-md-2{padding-top:.625rem!important}.pr-md-2,.px-md-2{padding-right:.625rem!important}.pb-md-2,.py-md-2{padding-bottom:.625rem!important}.pl-md-2,.px-md-2{padding-left:.625rem!important}.p-md-3{padding:1.25rem!important}.pt-md-3,.py-md-3{padding-top:1.25rem!important}.pr-md-3,.px-md-3{padding-right:1.25rem!important}.pb-md-3,.py-md-3{padding-bottom:1.25rem!important}.pl-md-3,.px-md-3{padding-left:1.25rem!important}.p-md-4{padding:1.875rem!important}.pt-md-4,.py-md-4{padding-top:1.875rem!important}.pr-md-4,.px-md-4{padding-right:1.875rem!important}.pb-md-4,.py-md-4{padding-bottom:1.875rem!important}.pl-md-4,.px-md-4{padding-left:1.875rem!important}.p-md-5{padding:3.75rem!important}.pt-md-5,.py-md-5{padding-top:3.75rem!important}.pr-md-5,.px-md-5{padding-right:3.75rem!important}.pb-md-5,.py-md-5{padding-bottom:3.75rem!important}.pl-md-5,.px-md-5{padding-left:3.75rem!important}.m-md-auto{margin:auto!important}.mt-md-auto,.my-md-auto{margin-top:auto!important}.mr-md-auto,.mx-md-auto{margin-right:auto!important}.mb-md-auto,.my-md-auto{margin-bottom:auto!important}.ml-md-auto,.mx-md-auto{margin-left:auto!important}}@media (min-width:980px){.m-lg-0{margin:0!important}.mt-lg-0,.my-lg-0{margin-top:0!important}.mr-lg-0,.mx-lg-0{margin-right:0!important}.mb-lg-0,.my-lg-0{margin-bottom:0!important}.ml-lg-0,.mx-lg-0{margin-left:0!important}.m-lg-1{margin:.3125rem!important}.mt-lg-1,.my-lg-1{margin-top:.3125rem!important}.mr-lg-1,.mx-lg-1{margin-right:.3125rem!important}.mb-lg-1,.my-lg-1{margin-bottom:.3125rem!important}.ml-lg-1,.mx-lg-1{margin-left:.3125rem!important}.m-lg-2{margin:.625rem!important}.mt-lg-2,.my-lg-2{margin-top:.625rem!important}.mr-lg-2,.mx-lg-2{margin-right:.625rem!important}.mb-lg-2,.my-lg-2{margin-bottom:.625rem!important}.ml-lg-2,.mx-lg-2{margin-left:.625rem!important}.m-lg-3{margin:1.25rem!important}.mt-lg-3,.my-lg-3{margin-top:1.25rem!important}.mr-lg-3,.mx-lg-3{margin-right:1.25rem!important}.mb-lg-3,.my-lg-3{margin-bottom:1.25rem!important}.ml-lg-3,.mx-lg-3{margin-left:1.25rem!important}.m-lg-4{margin:1.875rem!important}.mt-lg-4,.my-lg-4{margin-top:1.875rem!important}.mr-lg-4,.mx-lg-4{margin-right:1.875rem!important}.mb-lg-4,.my-lg-4{margin-bottom:1.875rem!important}.ml-lg-4,.mx-lg-4{margin-left:1.875rem!important}.m-lg-5{margin:3.75rem!important}.mt-lg-5,.my-lg-5{margin-top:3.75rem!important}.mr-lg-5,.mx-lg-5{margin-right:3.75rem!important}.mb-lg-5,.my-lg-5{margin-bottom:3.75rem!important}.ml-lg-5,.mx-lg-5{margin-left:3.75rem!important}.p-lg-0{padding:0!important}.pt-lg-0,.py-lg-0{padding-top:0!important}.pr-lg-0,.px-lg-0{padding-right:0!important}.pb-lg-0,.py-lg-0{padding-bottom:0!important}.pl-lg-0,.px-lg-0{padding-left:0!important}.p-lg-1{padding:.3125rem!important}.pt-lg-1,.py-lg-1{padding-top:.3125rem!important}.pr-lg-1,.px-lg-1{padding-right:.3125rem!important}.pb-lg-1,.py-lg-1{padding-bottom:.3125rem!important}.pl-lg-1,.px-lg-1{padding-left:.3125rem!important}.p-lg-2{padding:.625rem!important}.pt-lg-2,.py-lg-2{padding-top:.625rem!important}.pr-lg-2,.px-lg-2{padding-right:.625rem!important}.pb-lg-2,.py-lg-2{padding-bottom:.625rem!important}.pl-lg-2,.px-lg-2{padding-left:.625rem!important}.p-lg-3{padding:1.25rem!important}.pt-lg-3,.py-lg-3{padding-top:1.25rem!important}.pr-lg-3,.px-lg-3{padding-right:1.25rem!important}.pb-lg-3,.py-lg-3{padding-bottom:1.25rem!important}.pl-lg-3,.px-lg-3{padding-left:1.25rem!important}.p-lg-4{padding:1.875rem!important}.pt-lg-4,.py-lg-4{padding-top:1.875rem!important}.pr-lg-4,.px-lg-4{padding-right:1.875rem!important}.pb-lg-4,.py-lg-4{padding-bottom:1.875rem!important}.pl-lg-4,.px-lg-4{padding-left:1.875rem!important}.p-lg-5{padding:3.75rem!important}.pt-lg-5,.py-lg-5{padding-top:3.75rem!important}.pr-lg-5,.px-lg-5{padding-right:3.75rem!important}.pb-lg-5,.py-lg-5{padding-bottom:3.75rem!important}.pl-lg-5,.px-lg-5{padding-left:3.75rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto,.my-lg-auto{margin-top:auto!important}.mr-lg-auto,.mx-lg-auto{margin-right:auto!important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto!important}.ml-lg-auto,.mx-lg-auto{margin-left:auto!important}}@media (min-width:1220px){.m-xl-0{margin:0!important}.mt-xl-0,.my-xl-0{margin-top:0!important}.mr-xl-0,.mx-xl-0{margin-right:0!important}.mb-xl-0,.my-xl-0{margin-bottom:0!important}.ml-xl-0,.mx-xl-0{margin-left:0!important}.m-xl-1{margin:.3125rem!important}.mt-xl-1,.my-xl-1{margin-top:.3125rem!important}.mr-xl-1,.mx-xl-1{margin-right:.3125rem!important}.mb-xl-1,.my-xl-1{margin-bottom:.3125rem!important}.ml-xl-1,.mx-xl-1{margin-left:.3125rem!important}.m-xl-2{margin:.625rem!important}.mt-xl-2,.my-xl-2{margin-top:.625rem!important}.mr-xl-2,.mx-xl-2{margin-right:.625rem!important}.mb-xl-2,.my-xl-2{margin-bottom:.625rem!important}.ml-xl-2,.mx-xl-2{margin-left:.625rem!important}.m-xl-3{margin:1.25rem!important}.mt-xl-3,.my-xl-3{margin-top:1.25rem!important}.mr-xl-3,.mx-xl-3{margin-right:1.25rem!important}.mb-xl-3,.my-xl-3{margin-bottom:1.25rem!important}.ml-xl-3,.mx-xl-3{margin-left:1.25rem!important}.m-xl-4{margin:1.875rem!important}.mt-xl-4,.my-xl-4{margin-top:1.875rem!important}.mr-xl-4,.mx-xl-4{margin-right:1.875rem!important}.mb-xl-4,.my-xl-4{margin-bottom:1.875rem!important}.ml-xl-4,.mx-xl-4{margin-left:1.875rem!important}.m-xl-5{margin:3.75rem!important}.mt-xl-5,.my-xl-5{margin-top:3.75rem!important}.mr-xl-5,.mx-xl-5{margin-right:3.75rem!important}.mb-xl-5,.my-xl-5{margin-bottom:3.75rem!important}.ml-xl-5,.mx-xl-5{margin-left:3.75rem!important}.p-xl-0{padding:0!important}.pt-xl-0,.py-xl-0{padding-top:0!important}.pr-xl-0,.px-xl-0{padding-right:0!important}.pb-xl-0,.py-xl-0{padding-bottom:0!important}.pl-xl-0,.px-xl-0{padding-left:0!important}.p-xl-1{padding:.3125rem!important}.pt-xl-1,.py-xl-1{padding-top:.3125rem!important}.pr-xl-1,.px-xl-1{padding-right:.3125rem!important}.pb-xl-1,.py-xl-1{padding-bottom:.3125rem!important}.pl-xl-1,.px-xl-1{padding-left:.3125rem!important}.p-xl-2{padding:.625rem!important}.pt-xl-2,.py-xl-2{padding-top:.625rem!important}.pr-xl-2,.px-xl-2{padding-right:.625rem!important}.pb-xl-2,.py-xl-2{padding-bottom:.625rem!important}.pl-xl-2,.px-xl-2{padding-left:.625rem!important}.p-xl-3{padding:1.25rem!important}.pt-xl-3,.py-xl-3{padding-top:1.25rem!important}.pr-xl-3,.px-xl-3{padding-right:1.25rem!important}.pb-xl-3,.py-xl-3{padding-bottom:1.25rem!important}.pl-xl-3,.px-xl-3{padding-left:1.25rem!important}.p-xl-4{padding:1.875rem!important}.pt-xl-4,.py-xl-4{padding-top:1.875rem!important}.pr-xl-4,.px-xl-4{padding-right:1.875rem!important}.pb-xl-4,.py-xl-4{padding-bottom:1.875rem!important}.pl-xl-4,.px-xl-4{padding-left:1.875rem!important}.p-xl-5{padding:3.75rem!important}.pt-xl-5,.py-xl-5{padding-top:3.75rem!important}.pr-xl-5,.px-xl-5{padding-right:3.75rem!important}.pb-xl-5,.py-xl-5{padding-bottom:3.75rem!important}.pl-xl-5,.px-xl-5{padding-left:3.75rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto,.my-xl-auto{margin-top:auto!important}.mr-xl-auto,.mx-xl-auto{margin-right:auto!important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto!important}.ml-xl-auto,.mx-xl-auto{margin-left:auto!important}}@media (min-width:1380px){.m-xxl-0{margin:0!important}.mt-xxl-0,.my-xxl-0{margin-top:0!important}.mr-xxl-0,.mx-xxl-0{margin-right:0!important}.mb-xxl-0,.my-xxl-0{margin-bottom:0!important}.ml-xxl-0,.mx-xxl-0{margin-left:0!important}.m-xxl-1{margin:.3125rem!important}.mt-xxl-1,.my-xxl-1{margin-top:.3125rem!important}.mr-xxl-1,.mx-xxl-1{margin-right:.3125rem!important}.mb-xxl-1,.my-xxl-1{margin-bottom:.3125rem!important}.ml-xxl-1,.mx-xxl-1{margin-left:.3125rem!important}.m-xxl-2{margin:.625rem!important}.mt-xxl-2,.my-xxl-2{margin-top:.625rem!important}.mr-xxl-2,.mx-xxl-2{margin-right:.625rem!important}.mb-xxl-2,.my-xxl-2{margin-bottom:.625rem!important}.ml-xxl-2,.mx-xxl-2{margin-left:.625rem!important}.m-xxl-3{margin:1.25rem!important}.mt-xxl-3,.my-xxl-3{margin-top:1.25rem!important}.mr-xxl-3,.mx-xxl-3{margin-right:1.25rem!important}.mb-xxl-3,.my-xxl-3{margin-bottom:1.25rem!important}.ml-xxl-3,.mx-xxl-3{margin-left:1.25rem!important}.m-xxl-4{margin:1.875rem!important}.mt-xxl-4,.my-xxl-4{margin-top:1.875rem!important}.mr-xxl-4,.mx-xxl-4{margin-right:1.875rem!important}.mb-xxl-4,.my-xxl-4{margin-bottom:1.875rem!important}.ml-xxl-4,.mx-xxl-4{margin-left:1.875rem!important}.m-xxl-5{margin:3.75rem!important}.mt-xxl-5,.my-xxl-5{margin-top:3.75rem!important}.mr-xxl-5,.mx-xxl-5{margin-right:3.75rem!important}.mb-xxl-5,.my-xxl-5{margin-bottom:3.75rem!important}.ml-xxl-5,.mx-xxl-5{margin-left:3.75rem!important}.p-xxl-0{padding:0!important}.pt-xxl-0,.py-xxl-0{padding-top:0!important}.pr-xxl-0,.px-xxl-0{padding-right:0!important}.pb-xxl-0,.py-xxl-0{padding-bottom:0!important}.pl-xxl-0,.px-xxl-0{padding-left:0!important}.p-xxl-1{padding:.3125rem!important}.pt-xxl-1,.py-xxl-1{padding-top:.3125rem!important}.pr-xxl-1,.px-xxl-1{padding-right:.3125rem!important}.pb-xxl-1,.py-xxl-1{padding-bottom:.3125rem!important}.pl-xxl-1,.px-xxl-1{padding-left:.3125rem!important}.p-xxl-2{padding:.625rem!important}.pt-xxl-2,.py-xxl-2{padding-top:.625rem!important}.pr-xxl-2,.px-xxl-2{padding-right:.625rem!important}.pb-xxl-2,.py-xxl-2{padding-bottom:.625rem!important}.pl-xxl-2,.px-xxl-2{padding-left:.625rem!important}.p-xxl-3{padding:1.25rem!important}.pt-xxl-3,.py-xxl-3{padding-top:1.25rem!important}.pr-xxl-3,.px-xxl-3{padding-right:1.25rem!important}.pb-xxl-3,.py-xxl-3{padding-bottom:1.25rem!important}.pl-xxl-3,.px-xxl-3{padding-left:1.25rem!important}.p-xxl-4{padding:1.875rem!important}.pt-xxl-4,.py-xxl-4{padding-top:1.875rem!important}.pr-xxl-4,.px-xxl-4{padding-right:1.875rem!important}.pb-xxl-4,.py-xxl-4{padding-bottom:1.875rem!important}.pl-xxl-4,.px-xxl-4{padding-left:1.875rem!important}.p-xxl-5{padding:3.75rem!important}.pt-xxl-5,.py-xxl-5{padding-top:3.75rem!important}.pr-xxl-5,.px-xxl-5{padding-right:3.75rem!important}.pb-xxl-5,.py-xxl-5{padding-bottom:3.75rem!important}.pl-xxl-5,.px-xxl-5{padding-left:3.75rem!important}.m-xxl-auto{margin:auto!important}.mt-xxl-auto,.my-xxl-auto{margin-top:auto!important}.mr-xxl-auto,.mx-xxl-auto{margin-right:auto!important}.mb-xxl-auto,.my-xxl-auto{margin-bottom:auto!important}.ml-xxl-auto,.mx-xxl-auto{margin-left:auto!important}}.text-monospace{font-family:SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.text-justify{text-align:justify!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:480px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:980px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1220px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}@media (min-width:1380px){.text-xxl-left{text-align:left!important}.text-xxl-right{text-align:right!important}.text-xxl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-light{font-weight:300!important}.font-weight-normal{font-weight:400!important}.font-weight-bold{font-weight:700!important}.font-italic{font-style:italic!important}.text-white{color:#fff!important}.text-primary{color:#f16e00!important}a.text-primary:focus,a.text-primary:hover{color:#be5700!important}.text-secondary,a.text-secondary:focus,a.text-secondary:hover{color:#000!important}.text-success{color:#32c832!important}a.text-success:focus,a.text-success:hover{color:#289f28!important}.text-info{color:#527edb!important}a.text-info:focus,a.text-info:hover{color:#2b60cf!important}.text-warning{color:#fc0!important}a.text-warning:focus,a.text-warning:hover{color:#cca300!important}.text-danger{color:#cd3c14!important}a.text-danger:focus,a.text-danger:hover{color:#9f2e0f!important}.text-light{color:#ddd!important}a.text-light:focus,a.text-light:hover{color:#c4c4c4!important}.text-body,.text-dark,a.text-dark:focus,a.text-dark:hover{color:#000!important}.text-muted{color:#666!important}.text-black-50{color:rgba(0,0,0,.5)!important}.text-white-50{color:hsla(0,0%,100%,.5)!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media print{*,:after,:before{text-shadow:none!important;box-shadow:none!important}a:not(.btn){text-decoration:underline}abbr[title]:after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap!important}blockquote,pre{border:2px solid #ccc;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}.container,body{min-width:980px!important}.navbar{display:none}.badge{border:2px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #eee!important}.table-dark{color:inherit}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#ccc}.table .thead-dark th{color:inherit;border-color:#ccc}}.card-deck .o-card-link{margin:0 1rem}.o-card-link .card-title{-ms-flex-item-align:center;align-self:center;width:100%;margin:auto 0;font-weight:700;word-break:normal}.o-card-link .card-img{padding:0;text-align:center}.o-card-link .card-img img{width:100%;height:auto}.o-card-link .card-body{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;text-align:center}.card-deck{margin:0}@media (max-width:479.98px){.card.o-card-link{-ms-flex-preferred-size:calc(50% - 2rem);flex-basis:calc(50% - 2rem);margin:1rem}.card-deck{-ms-flex-direction:column;flex-direction:column}.card-deck .o-card-link,.o-card-link{-ms-flex-direction:row;flex-direction:row;height:3.75rem;margin:0;margin-bottom:.625rem;border:0}.o-card-link .card-img{-ms-flex-preferred-size:20%;flex-basis:20%;width:auto;padding:0}.o-card-link .card-img img{width:auto;height:3.75rem}.o-card-link .card-body{-ms-flex-preferred-size:80%;flex-basis:80%;-ms-flex-item-align:center;align-self:center;padding:0 1rem;text-align:left}.o-card-link .card-title{-ms-flex-item-align:start;align-self:flex-start;margin:0}.o-card-link .card-title:after{position:absolute;top:calc(50% - .5rem);right:.25rem;width:1rem;height:1rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 24'%3E%3Cpath d='M3 0L0 3l9 9-9 9 3 3 12-12' fill='%23999'/%3E%3C/svg%3E\");background-repeat:no-repeat}}@media (min-width:480px) and (max-width:767.98px){.card.o-card-link{-ms-flex-preferred-size:calc(50% - 2rem);flex-basis:calc(50% - 2rem);margin:1rem}}.o-switch .toggle,.o-switch .toggle .off,.o-switch .toggle .on,.o-switch .toggle:before{transition:.4s}.o-switch .toggle{position:relative;display:block;width:auto;min-width:3.75rem;height:1.875rem;margin:.3125rem 0;background:#666;border:2px solid #666}.o-switch .toggle.toggle-rounded,.o-switch .toggle.toggle-rounded:before{border-radius:1.625rem}.o-switch .toggle .off,.o-switch .toggle .on{display:none;font-weight:700;line-height:1.625rem;color:#fff;text-align:left;cursor:default;opacity:0}.o-switch .toggle .on.svg-checkbox-tick:after{top:.1875rem;left:-.125rem}.o-switch .toggle .off{display:block;text-align:right;opacity:1}.o-switch .toggle .off.svg-delete:after{top:.1875rem;right:-.125rem;left:auto}.o-switch .toggle:before{position:absolute;top:0;left:0;z-index:1;display:block;width:1.625rem;height:1.625rem;content:\"\";background:#fff}.o-switch .checkbox:focus+.toggle:before{outline:1px dotted #fff}.o-switch .checkbox:checked+.toggle{background:#f16e00;border-color:#f16e00}.o-switch .checkbox:checked+.toggle .on{display:block;opacity:1}.o-switch .checkbox:checked+.toggle .off{display:none;opacity:0}.o-switch .checkbox:checked+.toggle:before{right:0;left:auto}.o-switch .checkbox.success:checked+.toggle{background:#32c832;border-color:#32c832}.o-switch .checkbox.success:checked+.toggle .on{color:#000}.o-switch .checkbox.success:checked+.toggle .on.icon-checkbox-tick{color:#fff}.form-group.row .o-switch .col-form-label.toggle{padding:0 .375rem}.form-group.row .o-switch .col-form-label.toggle.toggle-rounded{padding:0 .875rem}.o-switch.btn-group-toggle{border:2px solid #000}.o-switch.btn-group-toggle .btn{width:2.5rem;padding-right:0;padding-left:0;margin:0;border-top:0;border-right:2px solid #fff;border-bottom:0;border-left:2px solid #fff}.o-switch.btn-group-toggle .btn:first-child{margin-left:-2px;border-left-color:#000}.o-switch.btn-group-toggle .btn:last-child{margin-right:-2px;border-right-color:#000}.o-switch.btn-group-toggle .btn.active{color:#fff;background-color:#000;border-right-color:#000;border-left-color:#000}.o-switch.btn-group-toggle .btn.focus{outline:1px dotted #fff;outline-offset:-2px}.o-switch.btn-group-toggle .btn:hover{color:#f16e00;background-color:#fff}.o-switch.btn-group-toggle .btn:hover.active{color:#fff;background-color:#000;border-right-color:#000;border-left-color:#000}.o-switch.btn-group-toggle.no-outline{border-color:transparent}.o-switch.btn-group-toggle.no-outline .btn{border-top:2px solid transparent;border-bottom:2px solid transparent}.o-switch.btn-group-toggle.no-outline .btn:first-child{border-left-color:transparent}.o-switch.btn-group-toggle.no-outline .btn:last-child{border-right-color:transparent}.o-switch.btn-group-toggle.no-outline .btn.active{color:#f16e00;background-color:#fff;border-color:transparent;outline-color:#000}.o-switch.btn-group-toggle.no-outline .btn:hover{color:#000;background-color:#fff;border-color:#000}.o-switch.btn-group-toggle.no-outline .btn:hover.active{color:#f16e00;background-color:#fff;border-color:transparent;outline-color:#000}.form-group input[type=checkbox],.form-group input[type=radio]{width:auto}.form-group.row .form-control-feedback{padding-left:0}.form-group.row.has-danger.top{-ms-flex-direction:row;flex-direction:row}.form-group.row.has-danger.top .col-form-label,.form-group.row.has-danger.top label{-ms-flex-order:1;order:1}.form-group.row.has-danger.top .form-control{-ms-flex-order:2;order:2;margin-top:0}.form-group.row.has-danger.top .form-control-feedback{-ms-flex-order:0;order:0}.form-group.row.has-danger.right .col-form-label,.form-group.row.has-danger.right label{min-width:auto}.form-group.row.has-danger.right .form-control-feedback{-ms-flex-item-align:center;align-self:center;margin-top:0}.form-group.is-required .col-form-label:after{margin-left:6px;font-weight:700;color:#f16e00;content:\"*\"}.form-group .form-control:invalid{outline:none;box-shadow:none}.form-group.has-danger .col-form-label,.form-group.has-success .col-form-label,.form-group.has-warning .col-form-label{color:#000}.form-group .form-control-feedback{margin-top:.625rem;font-size:.875rem;font-weight:400;line-height:1}.form-group.has-danger{position:relative}.form-group.has-danger .form-control-feedback{margin-top:.8125rem;font-weight:700;color:#cd3c14}.form-group.has-danger .form-control-danger{background-image:none}.form-group.has-danger.top{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.form-group.has-danger.top .col-form-label{margin-bottom:0}.form-group.has-danger.top .form-control{-ms-flex-order:2;order:2}.form-group.has-danger.top .form-control-feedback{-ms-flex-order:1;order:1;margin-top:0;margin-bottom:.8125rem}.form-group.has-danger.right{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.form-group.has-danger.right .col-form-label,.form-group.has-danger.right label{min-width:100%}.form-group.has-danger.right .form-control-feedback,.form-group.has-danger.right .form-control-message{margin-left:.625rem}select.form-control:not([size]):not([multiple]){height:auto;padding-top:.4375rem;padding-bottom:.4375rem}select.form-control:not([size]):not([multiple]).form-control-lg{padding-top:.65625rem;padding-bottom:.65625rem}select.form-control:not([size]):not([multiple]).form-control-sm{padding-top:.1875rem;padding-bottom:.1875rem}.has-feedback label~.form-control-feedback{top:1.75}.o-square-list{padding-left:0;color:#f16e00;text-align:left}.o-square-list,.o-square-list ul *{list-style-type:none}.o-square-list li{color:#000}.o-square-list li:before{margin-right:1rem;font-size:.875rem;line-height:1.25rem;color:#f16e00;vertical-align:text-top;content:\"\\25A0\"}.o-square-list li span{display:inline-block;margin-bottom:.625rem}.o-square-list li>ul{padding-left:1rem}.o-square-list ul>li:before{color:#999}.o-square-list ul ul>li:before{color:#ccc}.o-stepbar,.o-stepbar ol,.o-stepbar ul{padding:0;margin:0;overflow:hidden}.o-stepbar .stepbar-item:first-child:last-child{width:100%}.o-stepbar .stepbar-item:first-child:nth-last-child(2),.o-stepbar .stepbar-item:first-child:nth-last-child(2)~.stepbar-item{width:50%}.o-stepbar .stepbar-item:first-child:nth-last-child(3),.o-stepbar .stepbar-item:first-child:nth-last-child(3)~.stepbar-item{width:33.3333%}.o-stepbar .stepbar-item:first-child:nth-last-child(4),.o-stepbar .stepbar-item:first-child:nth-last-child(4)~.stepbar-item{width:25%}.o-stepbar .stepbar-item:first-child:nth-last-child(5),.o-stepbar .stepbar-item:first-child:nth-last-child(5)~.stepbar-item{width:20%}.o-stepbar .stepbar-item{position:relative;float:left;padding:.625rem 1.25rem;padding-left:2rem;font-size:1rem;font-weight:700;line-height:1.25;color:#000;white-space:nowrap;list-style:none;background-color:#ddd}.o-stepbar .stepbar-item:after{position:absolute;top:0;right:-1rem;z-index:500;display:block;width:1rem;height:2.5rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='40' viewBox='0 0 16 40'%3E%3Cpath d='M0 0l14 20L0 40z' fill='%23ddd'/%3E%3Cpath d='M2 0H0l14 20L0 40h2l14-20z' fill='%23fff'/%3E%3C/svg%3E\");background-size:1rem 2.5rem}.o-stepbar .stepbar-item:first-child{padding-left:1.25rem}.o-stepbar .stepbar-item:last-child:after{display:none}.o-stepbar .stepbar-item.done{background-color:#000}.o-stepbar .stepbar-item.done:after{position:absolute;top:0;right:-1rem;z-index:500;display:block;width:1rem;height:2.5rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='40' viewBox='0 0 16 40'%3E%3Cpath d='M0 0l14 20L0 40z'/%3E%3Cpath d='M2 0H0l14 20L0 40h2l14-20z' fill='%23fff'/%3E%3C/svg%3E\");background-size:1rem 2.5rem}.o-stepbar .stepbar-item.done .stepbar-link{color:#fff}.o-stepbar .stepbar-item.done:last-child:after{display:none}.o-stepbar .stepbar-item.current{background-color:#f16e00}.o-stepbar .stepbar-item.current:after{position:absolute;top:0;right:-1rem;z-index:500;display:block;width:1rem;height:2.5rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='40' viewBox='0 0 16 40'%3E%3Cpath d='M0 0l14 20L0 40z' fill='%23f16e00'/%3E%3Cpath d='M2 0H0l14 20L0 40h2l14-20z' fill='%23fff'/%3E%3C/svg%3E\");background-size:1rem 2.5rem}.o-stepbar .stepbar-item.current .stepbar-link{color:#fff}.o-stepbar .stepbar-item.current:last-child:after{display:none}.o-stepbar .stepbar-item .stepbar-link{text-decoration:none}.o-stepbar .stepbar-item .stepbar-link .step-number:after{content:\".\"}@media (max-width:479.98px){.o-stepbar .stepbar-item{padding:.3125rem .625rem .3125rem 2rem;line-height:1.25}.o-stepbar .stepbar-item.current:after,.o-stepbar .stepbar-item.done:after,.o-stepbar .stepbar-item.next:after,.o-stepbar .stepbar-item:after{right:-.6875rem;width:.75rem;height:1.875rem;background-size:cover}.o-stepbar.xs-numbers .step-number:after{display:none}.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(3),.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(3)~.stepbar-item{width:20%}.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(3).current,.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(3)~.stepbar-item.current{width:60%}.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(4),.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(4)~.stepbar-item,.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(5),.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(5)~.stepbar-item{width:20%}.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(4).current,.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(4)~.stepbar-item.current,.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(5).current,.o-stepbar.xs-numbers .stepbar-item:first-child:nth-last-child(5)~.stepbar-item.current{width:40%}.o-stepbar.xs-numbers .stepbar-item{width:20%;padding-right:0;padding-left:.75rem;text-align:center}.o-stepbar.xs-numbers .stepbar-item:first-child{padding-left:0}.o-stepbar.xs-numbers .stepbar-item.current{width:60%}.o-stepbar.xs-labels .step-number,.o-stepbar.xs-numbers .stepbar-item.current .step-number,.o-stepbar.xs-numbers .stepbar-item:not(.current) .step-title{display:none}}.o-link-arrow{font-size:1rem;font-weight:700;text-decoration:none}.o-link-arrow:after{padding:0 .625rem;font-family:icon-orange,sans-serif;font-size:.625rem;color:#000;content:\"\\E93E\"}.o-link-arrow:focus:after,.o-link-arrow:hover:after{color:#f16e00;text-decoration:none}.o-link-arrow.back:after{padding:0;content:\"\"}.o-link-arrow.back:before{padding:0 .625rem 0 0;font-family:icon-orange,sans-serif;font-size:.625rem;color:#000;content:\"\\E93F\"}.o-link-arrow.back:focus:before,.o-link-arrow.back:hover:before{color:#f16e00;text-decoration:none}.mega-menu{overflow:hidden}.mega-menu>.navbar-nav{transition:-webkit-transform .5s;transition:transform .5s;transition:transform .5s,-webkit-transform .5s;-webkit-transform:translateX(0);transform:translateX(0)}.mega-menu-panel>.container>.navbar-nav,.mega-menu-panel>.navbar-nav{-ms-flex-direction:column;flex-direction:column}.mega-menu-panel>.container>.navbar-nav .navbar-nav,.mega-menu-panel>.navbar-nav .navbar-nav{position:absolute;top:0;left:100%;display:none;width:100%}.fixed-header{position:fixed;top:0;z-index:1030;width:100%}.navbar .nav-link.icon{margin-top:0}.navbar .nav-link.icon span[class^=icon-]{font-size:1.5rem;font-weight:400}.navbar .nav-link.icon[class*=svg-],.navbar .nav-link.icon[class*=svg-]:after{width:1.875rem;height:1.875rem}.navbar .nav-link:not(.icon)[class*=svg-]:after{top:0;right:0;left:auto}.navbar.supra{height:2.5rem;min-height:2.5rem;padding-top:0;padding-bottom:0;border-bottom:1px solid #333}@media (max-width:479.98px){.navbar.supra{display:none}}.navbar.supra>.container,.navbar.supra>.container .navbar-nav{-ms-flex-align:center;align-items:center}.navbar.supra .navbar-brand{display:none}.navbar.supra .navbar-nav{margin:0}.navbar.supra .navbar-nav .nav-item:first-child .nav-link,.navbar.supra .navbar-nav>.nav-link:first-child{margin-left:0}.navbar.supra .dropdown-toggle,.navbar.supra .nav-link{font-size:.875rem;line-height:1}.navbar.supra .dropdown-toggle:focus,.navbar.supra .nav-link:focus{outline-offset:.5rem}.navbar.supra .dropdown-toggle span[class^=icon-],.navbar.supra .nav-link span[class^=icon-]{font-size:1.125rem;font-weight:400}.navbar.supra .nav-link.icon span[class^=icon-]{font-size:1rem;font-weight:400}.navbar.supra .nav-link.icon[class*=svg-],.navbar.supra .nav-link.icon[class*=svg-]:after{width:1.25rem;height:1.25rem}.navbar.supra .dropdown-menu{right:0;left:auto}@media (max-width:479.98px){.navbar-expand-sm .mega-menu .nav-link,.navbar-expand-sm.minimized .mega-menu .nav-link{padding-right:0;outline-offset:-1px}.navbar-expand-sm .mega-menu .nav-link[data-toggle=collapse]:before,.navbar-expand-sm.minimized .mega-menu .nav-link[data-toggle=collapse]:before{margin-top:.3125rem;margin-right:.9375rem;content:\"\";border-top:.4375em solid;border-right:.4375em solid transparent;border-left:.4375em solid transparent;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-sm .mega-menu .nav-link[data-toggle=collapse].collapsed:before,.navbar-expand-sm.minimized .mega-menu .nav-link[data-toggle=collapse].collapsed:before{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.navbar-expand-sm .mega-menu-panel .nav-link.back,.navbar-expand-sm.minimized .mega-menu-panel .nav-link.back{display:block}.navbar-expand-sm .mega-menu-panel .nav-link.back:before,.navbar-expand-sm.minimized .mega-menu-panel .nav-link.back:before{float:left;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-sm .mega-menu-panel>.container,.navbar-expand-sm.minimized .mega-menu-panel>.container{width:100%;padding:0;margin:0}.navbar-expand-sm .mega-menu-panel>.container a[data-toggle=collapse],.navbar-expand-sm.minimized .mega-menu-panel>.container a[data-toggle=collapse]{display:none}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav>.nav-item,.navbar-expand-sm.minimized .mega-menu-panel>.container>.navbar-nav>.nav-item{padding:0;border:0}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child,.navbar-expand-sm.minimized .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child{border-bottom:1px solid #333}}@media (min-width:480px){.navbar-expand-sm .mega-menu{overflow:visible}.navbar-expand-sm .mega-menu>.navbar-nav{transition:none;-webkit-transform:none;transform:none}.navbar-expand-sm .mega-menu>.navbar-nav .nav-link:before{display:none}.navbar-expand-sm .mega-menu-panel{position:absolute;top:100px;left:0;z-index:1030;width:100%;padding:1rem 0;background-color:#000;border-top:1px solid #333}.navbar-expand-sm .mega-menu-panel a[data-toggle=collapse]{display:block;float:right;margin:1.25rem;color:#fff}.navbar-expand-sm .mega-menu-panel .nav-link{margin-left:0}.navbar-expand-sm .mega-menu-panel .svg-delete{width:1.25rem;height:1.25rem}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav>.nav-item{-ms-flex-positive:1;flex-grow:1;padding:1rem 0}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav>.nav-item>.nav-link{padding:0;margin-right:.625rem;margin-bottom:1rem;font-size:1.25rem}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav .navbar-nav{position:static;display:block!important;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-link{padding:0;line-height:1.25rem;outline-offset:1px}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav .nav-item+.nav-item,.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav .nav-item:first-child{margin-left:0}.navbar-expand-sm .mega-menu-panel>.container>.navbar-nav .nav-link.back{display:none}}@media (max-width:767.98px){.navbar-expand-md .mega-menu .nav-link,.navbar-expand-md.minimized .mega-menu .nav-link{padding-right:0;outline-offset:-1px}.navbar-expand-md .mega-menu .nav-link[data-toggle=collapse]:before,.navbar-expand-md.minimized .mega-menu .nav-link[data-toggle=collapse]:before{margin-top:.3125rem;margin-right:.9375rem;content:\"\";border-top:.4375em solid;border-right:.4375em solid transparent;border-left:.4375em solid transparent;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-md .mega-menu .nav-link[data-toggle=collapse].collapsed:before,.navbar-expand-md.minimized .mega-menu .nav-link[data-toggle=collapse].collapsed:before{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.navbar-expand-md .mega-menu-panel .nav-link.back,.navbar-expand-md.minimized .mega-menu-panel .nav-link.back{display:block}.navbar-expand-md .mega-menu-panel .nav-link.back:before,.navbar-expand-md.minimized .mega-menu-panel .nav-link.back:before{float:left;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-md .mega-menu-panel>.container,.navbar-expand-md.minimized .mega-menu-panel>.container{width:100%;padding:0;margin:0}.navbar-expand-md .mega-menu-panel>.container a[data-toggle=collapse],.navbar-expand-md.minimized .mega-menu-panel>.container a[data-toggle=collapse]{display:none}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav>.nav-item,.navbar-expand-md.minimized .mega-menu-panel>.container>.navbar-nav>.nav-item{padding:0;border:0}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child,.navbar-expand-md.minimized .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child{border-bottom:1px solid #333}}@media (min-width:768px){.navbar-expand-md .mega-menu{overflow:visible}.navbar-expand-md .mega-menu>.navbar-nav{transition:none;-webkit-transform:none;transform:none}.navbar-expand-md .mega-menu>.navbar-nav .nav-link:before{display:none}.navbar-expand-md .mega-menu-panel{position:absolute;top:100px;left:0;z-index:1030;width:100%;padding:1rem 0;background-color:#000;border-top:1px solid #333}.navbar-expand-md .mega-menu-panel a[data-toggle=collapse]{display:block;float:right;margin:1.25rem;color:#fff}.navbar-expand-md .mega-menu-panel .nav-link{margin-left:0}.navbar-expand-md .mega-menu-panel .svg-delete{width:1.25rem;height:1.25rem}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav>.nav-item{-ms-flex-positive:1;flex-grow:1;padding:1rem 0}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav>.nav-item>.nav-link{padding:0;margin-right:.625rem;margin-bottom:1rem;font-size:1.25rem}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav .navbar-nav{position:static;display:block!important;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-link{padding:0;line-height:1.25rem;outline-offset:1px}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav .nav-item+.nav-item,.navbar-expand-md .mega-menu-panel>.container>.navbar-nav .nav-item:first-child{margin-left:0}.navbar-expand-md .mega-menu-panel>.container>.navbar-nav .nav-link.back{display:none}}@media (max-width:979.98px){.navbar-expand-lg .mega-menu .nav-link,.navbar-expand-lg.minimized .mega-menu .nav-link{padding-right:0;outline-offset:-1px}.navbar-expand-lg .mega-menu .nav-link[data-toggle=collapse]:before,.navbar-expand-lg.minimized .mega-menu .nav-link[data-toggle=collapse]:before{margin-top:.3125rem;margin-right:.9375rem;content:\"\";border-top:.4375em solid;border-right:.4375em solid transparent;border-left:.4375em solid transparent;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-lg .mega-menu .nav-link[data-toggle=collapse].collapsed:before,.navbar-expand-lg.minimized .mega-menu .nav-link[data-toggle=collapse].collapsed:before{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.navbar-expand-lg .mega-menu-panel .nav-link.back,.navbar-expand-lg.minimized .mega-menu-panel .nav-link.back{display:block}.navbar-expand-lg .mega-menu-panel .nav-link.back:before,.navbar-expand-lg.minimized .mega-menu-panel .nav-link.back:before{float:left;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-lg .mega-menu-panel>.container,.navbar-expand-lg.minimized .mega-menu-panel>.container{width:100%;padding:0;margin:0}.navbar-expand-lg .mega-menu-panel>.container a[data-toggle=collapse],.navbar-expand-lg.minimized .mega-menu-panel>.container a[data-toggle=collapse]{display:none}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav>.nav-item,.navbar-expand-lg.minimized .mega-menu-panel>.container>.navbar-nav>.nav-item{padding:0;border:0}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child,.navbar-expand-lg.minimized .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child{border-bottom:1px solid #333}}@media (min-width:980px){.navbar-expand-lg .mega-menu{overflow:visible}.navbar-expand-lg .mega-menu>.navbar-nav{transition:none;-webkit-transform:none;transform:none}.navbar-expand-lg .mega-menu>.navbar-nav .nav-link:before{display:none}.navbar-expand-lg .mega-menu-panel{position:absolute;top:100px;left:0;z-index:1030;width:100%;padding:1rem 0;background-color:#000;border-top:1px solid #333}.navbar-expand-lg .mega-menu-panel a[data-toggle=collapse]{display:block;float:right;margin:1.25rem;color:#fff}.navbar-expand-lg .mega-menu-panel .nav-link{margin-left:0}.navbar-expand-lg .mega-menu-panel .svg-delete{width:1.25rem;height:1.25rem}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav>.nav-item{-ms-flex-positive:1;flex-grow:1;padding:1rem 0}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav>.nav-item>.nav-link{padding:0;margin-right:.625rem;margin-bottom:1rem;font-size:1.25rem}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav .navbar-nav{position:static;display:block!important;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-link{padding:0;line-height:1.25rem;outline-offset:1px}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav .nav-item+.nav-item,.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav .nav-item:first-child{margin-left:0}.navbar-expand-lg .mega-menu-panel>.container>.navbar-nav .nav-link.back{display:none}}@media (max-width:1219.98px){.navbar-expand-xl .mega-menu .nav-link,.navbar-expand-xl.minimized .mega-menu .nav-link{padding-right:0;outline-offset:-1px}.navbar-expand-xl .mega-menu .nav-link[data-toggle=collapse]:before,.navbar-expand-xl.minimized .mega-menu .nav-link[data-toggle=collapse]:before{margin-top:.3125rem;margin-right:.9375rem;content:\"\";border-top:.4375em solid;border-right:.4375em solid transparent;border-left:.4375em solid transparent;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-xl .mega-menu .nav-link[data-toggle=collapse].collapsed:before,.navbar-expand-xl.minimized .mega-menu .nav-link[data-toggle=collapse].collapsed:before{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.navbar-expand-xl .mega-menu-panel .nav-link.back,.navbar-expand-xl.minimized .mega-menu-panel .nav-link.back{display:block}.navbar-expand-xl .mega-menu-panel .nav-link.back:before,.navbar-expand-xl.minimized .mega-menu-panel .nav-link.back:before{float:left;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-xl .mega-menu-panel>.container,.navbar-expand-xl.minimized .mega-menu-panel>.container{width:100%;padding:0;margin:0}.navbar-expand-xl .mega-menu-panel>.container a[data-toggle=collapse],.navbar-expand-xl.minimized .mega-menu-panel>.container a[data-toggle=collapse]{display:none}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav>.nav-item,.navbar-expand-xl.minimized .mega-menu-panel>.container>.navbar-nav>.nav-item{padding:0;border:0}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child,.navbar-expand-xl.minimized .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child{border-bottom:1px solid #333}}@media (min-width:1220px){.navbar-expand-xl .mega-menu{overflow:visible}.navbar-expand-xl .mega-menu>.navbar-nav{transition:none;-webkit-transform:none;transform:none}.navbar-expand-xl .mega-menu>.navbar-nav .nav-link:before{display:none}.navbar-expand-xl .mega-menu-panel{position:absolute;top:100px;left:0;z-index:1030;width:100%;padding:1rem 0;background-color:#000;border-top:1px solid #333}.navbar-expand-xl .mega-menu-panel a[data-toggle=collapse]{display:block;float:right;margin:1.25rem;color:#fff}.navbar-expand-xl .mega-menu-panel .nav-link{margin-left:0}.navbar-expand-xl .mega-menu-panel .svg-delete{width:1.25rem;height:1.25rem}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav>.nav-item{-ms-flex-positive:1;flex-grow:1;padding:1rem 0}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav>.nav-item>.nav-link{padding:0;margin-right:.625rem;margin-bottom:1rem;font-size:1.25rem}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav .navbar-nav{position:static;display:block!important;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-link{padding:0;line-height:1.25rem;outline-offset:1px}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav .nav-item+.nav-item,.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav .nav-item:first-child{margin-left:0}.navbar-expand-xl .mega-menu-panel>.container>.navbar-nav .nav-link.back{display:none}}@media (max-width:1379.98px){.navbar-expand-xxl .mega-menu .nav-link,.navbar-expand-xxl.minimized .mega-menu .nav-link{padding-right:0;outline-offset:-1px}.navbar-expand-xxl .mega-menu .nav-link[data-toggle=collapse]:before,.navbar-expand-xxl.minimized .mega-menu .nav-link[data-toggle=collapse]:before{margin-top:.3125rem;margin-right:.9375rem;content:\"\";border-top:.4375em solid;border-right:.4375em solid transparent;border-left:.4375em solid transparent;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-xxl .mega-menu .nav-link[data-toggle=collapse].collapsed:before,.navbar-expand-xxl.minimized .mega-menu .nav-link[data-toggle=collapse].collapsed:before{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.navbar-expand-xxl .mega-menu-panel .nav-link.back,.navbar-expand-xxl.minimized .mega-menu-panel .nav-link.back{display:block}.navbar-expand-xxl .mega-menu-panel .nav-link.back:before,.navbar-expand-xxl.minimized .mega-menu-panel .nav-link.back:before{float:left;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand-xxl .mega-menu-panel>.container,.navbar-expand-xxl.minimized .mega-menu-panel>.container{width:100%;padding:0;margin:0}.navbar-expand-xxl .mega-menu-panel>.container a[data-toggle=collapse],.navbar-expand-xxl.minimized .mega-menu-panel>.container a[data-toggle=collapse]{display:none}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav>.nav-item,.navbar-expand-xxl.minimized .mega-menu-panel>.container>.navbar-nav>.nav-item{padding:0;border:0}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child,.navbar-expand-xxl.minimized .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child{border-bottom:1px solid #333}}@media (min-width:1380px){.navbar-expand-xxl .mega-menu{overflow:visible}.navbar-expand-xxl .mega-menu>.navbar-nav{transition:none;-webkit-transform:none;transform:none}.navbar-expand-xxl .mega-menu>.navbar-nav .nav-link:before{display:none}.navbar-expand-xxl .mega-menu-panel{position:absolute;top:100px;left:0;z-index:1030;width:100%;padding:1rem 0;background-color:#000;border-top:1px solid #333}.navbar-expand-xxl .mega-menu-panel a[data-toggle=collapse]{display:block;float:right;margin:1.25rem;color:#fff}.navbar-expand-xxl .mega-menu-panel .nav-link{margin-left:0}.navbar-expand-xxl .mega-menu-panel .svg-delete{width:1.25rem;height:1.25rem}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav>.nav-item{-ms-flex-positive:1;flex-grow:1;padding:1rem 0}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav>.nav-item>.nav-link{padding:0;margin-right:.625rem;margin-bottom:1rem;font-size:1.25rem}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav .navbar-nav{position:static;display:block!important;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-link{padding:0;line-height:1.25rem;outline-offset:1px}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav .nav-item+.nav-item,.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav .nav-item:first-child{margin-left:0}.navbar-expand-xxl .mega-menu-panel>.container>.navbar-nav .nav-link.back{display:none}}.navbar-expand .mega-menu .nav-link,.navbar-expand.minimized .mega-menu .nav-link{padding-right:0;outline-offset:-1px}.navbar-expand .mega-menu .nav-link[data-toggle=collapse]:before,.navbar-expand.minimized .mega-menu .nav-link[data-toggle=collapse]:before{margin-top:.3125rem;margin-right:.9375rem;content:\"\";border-top:.4375em solid;border-right:.4375em solid transparent;border-left:.4375em solid transparent;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand .mega-menu .nav-link[data-toggle=collapse].collapsed:before,.navbar-expand.minimized .mega-menu .nav-link[data-toggle=collapse].collapsed:before{-webkit-transform:rotate(0deg);transform:rotate(0deg)}.navbar-expand .mega-menu-panel .nav-link.back,.navbar-expand.minimized .mega-menu-panel .nav-link.back{display:block}.navbar-expand .mega-menu-panel .nav-link.back:before,.navbar-expand.minimized .mega-menu-panel .nav-link.back:before{float:left;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.navbar-expand .mega-menu-panel>.container,.navbar-expand.minimized .mega-menu-panel>.container{width:100%;padding:0;margin:0}.navbar-expand .mega-menu-panel>.container a[data-toggle=collapse],.navbar-expand.minimized .mega-menu-panel>.container a[data-toggle=collapse]{display:none}.navbar-expand .mega-menu-panel>.container>.navbar-nav>.nav-item,.navbar-expand.minimized .mega-menu-panel>.container>.navbar-nav>.nav-item{padding:0;border:0}.navbar-expand .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child,.navbar-expand.minimized .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-item:last-child{border-bottom:1px solid #333}.navbar-expand .mega-menu{overflow:visible}.navbar-expand .mega-menu>.navbar-nav{transition:none;-webkit-transform:none;transform:none}.navbar-expand .mega-menu>.navbar-nav .nav-link:before{display:none}.navbar-expand .mega-menu-panel{position:absolute;top:100px;left:0;z-index:1030;width:100%;padding:1rem 0;background-color:#000;border-top:1px solid #333}.navbar-expand .mega-menu-panel a[data-toggle=collapse]{display:block;float:right;margin:1.25rem;color:#fff}.navbar-expand .mega-menu-panel .nav-link{margin-left:0}.navbar-expand .mega-menu-panel .svg-delete{width:1.25rem;height:1.25rem}.navbar-expand .mega-menu-panel>.container>.navbar-nav{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}.navbar-expand .mega-menu-panel>.container>.navbar-nav>.nav-item{-ms-flex-positive:1;flex-grow:1;padding:1rem 0}.navbar-expand .mega-menu-panel>.container>.navbar-nav>.nav-item>.nav-link{padding:0;margin-right:.625rem;margin-bottom:1rem;font-size:1.25rem}.navbar-expand .mega-menu-panel>.container>.navbar-nav .navbar-nav{position:static;display:block!important;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start}.navbar-expand .mega-menu-panel>.container>.navbar-nav .navbar-nav .nav-link{padding:0;line-height:1.25rem;outline-offset:1px}.navbar-expand .mega-menu-panel>.container>.navbar-nav .nav-item+.nav-item,.navbar-expand .mega-menu-panel>.container>.navbar-nav .nav-item:first-child{margin-left:0}.navbar-expand .mega-menu-panel>.container>.navbar-nav .nav-link.back{display:none}@media (max-width:767.98px){.navbar-brand,.navbar-brand+.navbar-brand{-ms-flex-item-align:center;align-self:center}}.table>tbody>tr,.table>tfoot>tr,.table>thead>tr{border-bottom:1px solid #ccc}.table>tbody>tr>td,.table>tbody>tr>th,.table>tfoot>tr>td,.table>tfoot>tr>th,.table>thead>tr>td,.table>thead>tr>th{font-size:.875rem;line-height:1.25rem;vertical-align:middle;border:0}.table>tbody>tr>td:first-child,.table>tbody>tr>th:first-child,.table>tfoot>tr>td:first-child,.table>tfoot>tr>th:first-child,.table>thead>tr>td:first-child,.table>thead>tr>th:first-child{padding-left:.625rem}.table>tbody>tr [class*=\" icon-\"],.table>tbody>tr [class^=icon-],.table>tfoot>tr [class*=\" icon-\"],.table>tfoot>tr [class^=icon-],.table>thead>tr [class*=\" icon-\"],.table>thead>tr [class^=icon-]{font-size:1.8125rem}.table>tbody>tr [class^=svg-],.table>tfoot>tr [class^=svg-],.table>thead>tr [class^=svg-]{display:block;width:1.8125rem;height:1.8125rem;margin:0 auto}.table>tbody>tr [class^=svg-]:after,.table>tfoot>tr [class^=svg-]:after,.table>thead>tr [class^=svg-]:after{width:1.8125rem;height:1.8125rem}.table thead>tr{border-bottom-width:2px}.table thead>tr>th{font-size:1rem;font-weight:700}.table tbody>th{font-weight:400}.table.has-checkbox tr.selected>td,.table.has-checkbox tr.selected>th{background-color:#ddd}.table.has-checkbox tr>td:first-child,.table.has-checkbox tr>th:first-child{width:1.25rem;padding-top:0;padding-bottom:0}.table.has-checkbox tr>td:first-child .custom-control.custom-checkbox,.table.has-checkbox tr>th:first-child .custom-control.custom-checkbox{padding-top:0;padding-left:1.25rem;margin-bottom:0;vertical-align:middle}.table.has-icon tr>td,.table.has-icon tr>th{height:3.1875rem;padding-top:.6875rem;vertical-align:middle}.table.has-icon tr>td img,.table.has-icon tr>td span,.table.has-icon tr>th img,.table.has-icon tr>th span{vertical-align:middle}.table.has-icon tr>td img,.table.has-icon tr>th img{width:1.875rem;height:1.875rem;margin-right:.625rem}.table.has-icon tr>td [class^=icon-],.table.has-icon tr>th [class^=icon-]{width:1.875rem;margin-right:.375rem;font-size:1.8125rem;line-height:0;vertical-align:middle}.table.table-reflow tbody>tr,.table.table-reflow thead>tr{border:0}.table.table-reflow tbody>tr>td,.table.table-reflow thead>tr>td{line-height:1.25rem}.table.table-reflow tbody>tr>th:first-child,.table.table-reflow thead>tr>th:first-child{border-bottom:2px solid #ccc}.table.table-reflow tbody>tr>td,.table.table-reflow tbody>tr>th,.table.table-reflow thead>tr>td,.table.table-reflow thead>tr>th{border-bottom:1px solid #ccc}.table.table-reflow tbody>tr>td:last-child,.table.table-reflow thead>tr>td:last-child{border-right:0}.table.table-reflow thead>tr{border:0}.table.table-reflow thead>tr>th:not(:first-child){padding-left:.625rem;border-bottom:1px solid #ccc}.table.table-reflow thead>tr>th:last-child{border-right:0}.table.table-reflow tbody>tr>th:first-child{padding-left:0}.table>tbody>tr.success>td,.table>tbody>tr.success>th,.table>tbody>tr>td.success,.table>tbody>tr>th.success,.table>tfoot>tr.success>td,.table>tfoot>tr.success>th,.table>tfoot>tr>td.success,.table>tfoot>tr>th.success,.table>thead>tr.success>td,.table>thead>tr.success>th,.table>thead>tr>td.success,.table>thead>tr>th.success{background-color:#32c832}.table-hover>tbody>tr.success:hover>td,.table-hover>tbody>tr.success:hover>th,.table-hover>tbody>tr:hover>.success,.table-hover>tbody>tr>td.success:hover,.table-hover>tbody>tr>th.success:hover{background-color:#2db42d}.table>tbody>tr.info>td,.table>tbody>tr.info>th,.table>tbody>tr>td.info,.table>tbody>tr>th.info,.table>tfoot>tr.info>td,.table>tfoot>tr.info>th,.table>tfoot>tr>td.info,.table>tfoot>tr>th.info,.table>thead>tr.info>td,.table>thead>tr.info>th,.table>thead>tr>td.info,.table>thead>tr>th.info{background-color:#527edb}.table-hover>tbody>tr.info:hover>td,.table-hover>tbody>tr.info:hover>th,.table-hover>tbody>tr:hover>.info,.table-hover>tbody>tr>td.info:hover,.table-hover>tbody>tr>th.info:hover{background-color:#3d6ed7}.table>tbody>tr.warning>td,.table>tbody>tr.warning>th,.table>tbody>tr>td.warning,.table>tbody>tr>th.warning,.table>tfoot>tr.warning>td,.table>tfoot>tr.warning>th,.table>tfoot>tr>td.warning,.table>tfoot>tr>th.warning,.table>thead>tr.warning>td,.table>thead>tr.warning>th,.table>thead>tr>td.warning,.table>thead>tr>th.warning{background-color:#fc0}.table-hover>tbody>tr.warning:hover>td,.table-hover>tbody>tr.warning:hover>th,.table-hover>tbody>tr:hover>.warning,.table-hover>tbody>tr>td.warning:hover,.table-hover>tbody>tr>th.warning:hover{background-color:#e6b800}.table>tbody>tr.danger>td,.table>tbody>tr.danger>th,.table>tbody>tr>td.danger,.table>tbody>tr>th.danger,.table>tfoot>tr.danger>td,.table>tfoot>tr.danger>th,.table>tfoot>tr>td.danger,.table>tfoot>tr>th.danger,.table>thead>tr.danger>td,.table>thead>tr.danger>th,.table>thead>tr>td.danger,.table>thead>tr>th.danger{background-color:#cd3c14}.table-hover>tbody>tr.danger:hover>td,.table-hover>tbody>tr.danger:hover>th,.table-hover>tbody>tr:hover>.danger,.table-hover>tbody>tr>td.danger:hover,.table-hover>tbody>tr>th.danger:hover{background-color:#b63512}caption{caption-side:top}.tablesorter caption,caption{padding:.75rem 0;font-size:2.125rem;font-weight:700;color:#000;background-color:#fff}.tablesorter th{padding-right:30px;text-align:left;cursor:pointer}.tablesorter th.header{position:relative}.tablesorter th .tablesorter-header-inner span{padding-right:1.6875rem}.tablesorter th.tablesorter-headerDesc .tablesorter-header-inner span:after{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.tablesorter th.tablesorter-headerAsc .tablesorter-header-inner span:after,.tablesorter th.tablesorter-headerDesc .tablesorter-header-inner span:after{position:absolute;top:45%;width:.875rem;height:.4375rem;margin-left:.625rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2014%207%22%3E%3Cpath%20d%3D%22M7%207L0%200h14L7%207z%22%2F%3E%3C%2Fsvg%3E\")}.tablesorter th.tablesorter-headerUnSorted .tablesorter-header-inner:focus span:after,.tablesorter th.tablesorter-headerUnSorted .tablesorter-header-inner:hover span:after{position:absolute;top:31%;width:.875rem;height:1.0625rem;margin-left:.625rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2014%2017%22%3E%3Cpath%20d%3D%22M%207%2C17%200%2C10%20h%2014%20l%20-7%2C7%20z%22%2F%3E%3Cpath%20d%3D%22M%207%2C0%2014%2C7%200%2C7%207%2C0%20z%22%2F%3E%3C%2Fsvg%3E\")}.tablesorter th a{color:#000;text-decoration:none}.tablesorter th a:focus,.tablesorter th a:hover{color:#f16e00;text-decoration:underline}.tablesorter td{text-align:left}.modal .modal-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:2.5rem;border:0}.modal .modal-header{position:relative;min-height:1.25rem;padding:0;margin-bottom:2.5rem;border:0}.modal .modal-header .btn{position:absolute;top:-.625rem;right:-.625rem;padding:.625rem;background-color:transparent;border:0}.modal .modal-header .btn .close{width:1.25rem;height:1.25rem;margin:0;background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22852.063%22%20height%3D%22852.063%22%20viewBox%3D%220%200%20852.063%20852.063%22%3E%3Cpath%20id%3D%22closing_cross.svg%22%20data-name%3D%22closing%20cross.svg%22%20class%3D%22cls-1%22%20d%3D%22M.987%2057.125L57.125.987%20851.048%20794.91l-56.138%2056.138zM794.91.987l56.138%2056.138L57.125%20851.048.987%20794.91z%22%20fill%3D%22%23666%22%2F%3E%3C%2Fsvg%3E\");background-size:1.25rem;opacity:1}.modal .modal-body{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:0;border:0}.modal .modal-body .card{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;padding:0;border:0}.modal .modal-body .card-body{padding:0}.modal .modal-body .card-icon{margin-right:1.25rem}.modal .modal-body [class^=svg],.modal .modal-body [class^=svg]:after{width:2.875rem;height:2.875rem}.modal .modal-body [class^=svg]{display:block}.modal .modal-body [class^=svg]:after{top:auto}.modal .modal-body .card-title{margin-bottom:1.25rem;font-size:1.5rem}.modal .modal-footer{-ms-flex-item-align:end;align-self:flex-end;padding:0;margin-top:2.5rem;border:0}.modal .modal-footer .btn+.btn{margin-left:1.25rem}@media (max-width:479.98px){.modal .modal-content{padding:1.25rem}.modal .modal-header{margin:0}.modal .modal-body .card{-ms-flex-direction:column;flex-direction:column}.modal .modal-body .card-icon{-ms-flex-item-align:center;align-self:center;margin-right:0}.modal .modal-body .card-icon,.modal .modal-body [class^=svg]:after{width:4rem;height:4rem}.modal .modal-body .card-title{font-size:1rem}.modal .modal-body .card-body{margin-top:1.25rem}.modal .modal-footer{-ms-flex-item-align:center;align-self:center}}.nav .nav-item:first-child{margin-left:-.625rem}.nav.flex-column .nav-item:first-child{margin-left:0}.nav .nav-link{padding:.625rem;line-height:1.25rem}.nav-tabs .nav-item:first-child{margin-left:0}.nav-tabs .nav-item+.nav-item{margin-left:.5rem}@media (max-width:979.98px){.nav-tabs .nav-item+.nav-item{margin-left:0}}.nav-tabs .nav-link:not(.disabled).dropdown-toggle:focus,.nav-tabs .nav-link:not(.disabled):focus{outline-width:1px;outline-style:dotted;outline-offset:-6px}.nav-tabs .nav-link:not(.disabled)+.nav-link{margin-left:.5rem}@media (max-width:979.98px){.nav-tabs .nav-link:not(.disabled)+.nav-link{margin-left:0}}.o-tab-container{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.o-tab-container .o-tab-heading{position:relative;display:inline-block;padding:.625rem 1.25rem;margin-left:.5rem;font-weight:700;color:#000;text-align:center;background-color:#fff;border:0;border-bottom:2px solid #000}.o-tab-container .o-tab-heading:first-child{margin-left:0;border-top:0}.o-tab-container .o-tab-heading[aria-expanded=false]{border-bottom:2px solid #000}.o-tab-container .o-tab-heading[aria-expanded=true]{padding-top:.5rem;border:2px solid #000;border-bottom:0}.o-tab-container .o-tab-heading:focus{outline-offset:-4px}.o-tab-container .o-tab-heading:hover:not([aria-expanded=true]){color:#fff;background-color:#000}.o-tab-container .o-tab-content{display:none;-ms-flex-item-align:end;align-self:flex-end;-ms-flex-order:1;order:1;width:100%;padding:.625rem 1.25rem;background-color:#fff;box-shadow:0 -2px 0 #000}.o-tab-container .o-tab-content.show{display:block}@media (max-width:479.98px){.o-tab-container .o-tab-heading{-ms-flex-positive:1;flex-grow:1;margin-left:0;text-align:center}.o-tab-container .o-tab-heading[aria-expanded=false]{color:#fff;background-color:#666}.o-tab-container .o-tab-heading[aria-expanded=false]:active{color:#fff;background-color:#f16e00}.o-tab-container.accordion-layout{display:block}.o-tab-container.accordion-layout .o-tab-heading{position:relative;display:block;padding:.9375rem 0;margin-left:0;font-weight:700;color:#000;text-align:left;background-color:#fff;border:0}.o-tab-container.accordion-layout .o-tab-heading:focus{outline-offset:0}.o-tab-container.accordion-layout .o-tab-heading:hover{color:#f16e00;background-color:#fff}.o-tab-container.accordion-layout .o-tab-heading[aria-expanded=false]{border-bottom:1px solid #ccc}.o-tab-container.accordion-layout .o-tab-heading[aria-expanded=true]:after{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.o-tab-container.accordion-layout .o-tab-heading:first-child{margin-left:0;border-top:1px solid #ccc}.o-tab-container.accordion-layout .o-tab-heading:after{position:absolute;top:1.375rem;right:.625rem;width:.875rem;height:.4375rem;content:\"\";background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2014%207%22%3E%3Cpath%20d%3D%22M7%207L0%200h14L7%207z%22%2F%3E%3C%2Fsvg%3E\")}.o-tab-container.accordion-layout .o-tab-content{padding-left:0;border-bottom:1px solid #ccc;box-shadow:none}}.nav-pills.nav-stacked .nav-item{margin:0}.nav-pills .nav-item:first-child,.nav-pills.nav-stacked .nav-item+.nav-item{margin-left:0}.nav-pills .nav-item+.nav-item{margin-left:5px}.nav-pills .nav-link{padding-top:1.25rem;padding-bottom:1.25rem}.nav-pills .nav-link:active{background-color:#000}.nav-pills .nav-link:hover{color:#fff;cursor:default;background-color:#000}.nav-pills .nav-link:hover.disabled{color:#666;background-color:transparent}.nav-pills .nav-link:focus{color:#fff;background-color:#f16e00;outline:none}.nav-pills .nav-link:focus.disabled{color:#666;background-color:transparent}.nav-pills .dropdown-menu{right:0;left:auto}.nav-pills .dropdown-menu .nav-item{margin:0}.nav-pills .dropdown-menu .nav-item .nav-link{display:block;padding:.625rem .625rem .625rem 1.25rem;margin:0;color:#000;background:#fff;border:0}.nav-pills .dropdown-menu .nav-item .nav-link:focus{outline:1px dotted #000;outline-offset:-2px}.nav-pills .dropdown-menu .nav-item .nav-link:hover{color:#fff;background:#000}.tab-content{padding:1.125rem;border-color:#000;border-style:solid;border-width:0 2px 2px}.tab-content .tab-pane p{margin-bottom:0}.tab-content-clear{border:0}.breadcrum{line-height:1}.overflow-nav{display:none}.o-nav-local.resizing{overflow:hidden}.hide{display:none!important}.show-inline-block{display:inline-block!important}.overflow-nav-list .nav-link{border:0}.overflow-nav-list .nav-link:focus{outline-offset:-2px}.overflow-nav-list .nav-item:last-child{margin-bottom:0}.o-nav-local .overflow-nav-list{margin-top:1px;border:0;box-shadow:0 .3125rem .625rem -.375rem #999}.o-nav-local{margin-bottom:2.5rem;border-top:1px solid #ccc;border-bottom:1px solid #ccc}.o-nav-local>.container,.o-nav-local>.container-fluid{display:-ms-flexbox;display:flex}.o-nav-local ul+ul{-ms-flex-negative:0;flex-shrink:0;margin-left:1rem}.o-nav-local .nav-item+.nav-item{margin-left:1rem}.o-nav-local .nav.flex-column .nav-item{margin-left:0}.o-nav-local .nav .dropdown-toggle,.o-nav-local .nav .nav-link{display:inline-block;padding:1rem .625rem 1.125rem;font-size:1rem;font-weight:700;line-height:1}.o-nav-local .nav .dropdown-toggle:focus,.o-nav-local .nav .nav-link:focus{outline:1px dotted;outline-offset:-1px}.o-nav-local .nav-link.active{color:#f16e00}.o-nav-local .dropdown-toggle.show{color:#000}.o-nav-local .dropdown-menu .nav-item,.o-nav-local .dropdown-menu .nav-item+.nav-item{margin:0}.o-nav-local .dropdown-menu .nav-link{display:block;padding:.625rem .625rem .625rem 1.25rem}.o-nav-local .dropdown-menu .nav-link:focus{outline-offset:-2px}.o-nav-local .dropdown-menu .nav-link:hover{color:#fff;background:#000}.o-nav-local.inverse{background-color:#000;border-top-color:#333;border-bottom-color:#333}.o-nav-local.inverse .nav-link{color:#fff;background-color:#000}.o-nav-local.inverse .nav-link:focus,.o-nav-local.inverse .nav-link:hover{color:#f16e00}.o-nav-local.inverse .nav-link:focus{outline-color:#fff}.o-nav-local.inverse .nav-link.active{color:#f16e00}.skiplinks{z-index:99999}.skiplinks .skiplinks-section li{float:left}.skiplinks .skiplinks-section a{display:block;padding:10px;font-weight:700;border-color:#999;border-style:none solid none none;border-width:0 1px 0 0}.skiplinks .skiplinks-section.skiplinks-show{position:absolute;top:20px;left:50%;z-index:10000000;width:auto;height:auto;margin-left:-175px;overflow:hidden;background:none repeat scroll 0 0 #ccc;border:2px solid #000;border-radius:0;box-shadow:2px 2px 1634px 1604px rgba(0,0,0,.3)}.skiplinks .skiplinks-section a:hover{cursor:pointer}.skiplinks .skiplinks-section a:focus,.skiplinks .skiplinks-section a:hover{color:#f16e00;background-color:#fff;outline:0 none}.skiplinks a,.skiplinks div,.skiplinks li,.skiplinks ul{float:none;padding:0;margin:0;font-size:.95em;font-weight:400;line-height:normal;color:#000;text-decoration:none;text-shadow:none;list-style:none;background:none repeat scroll 0 0 transparent;border:0 none}.o-footer{margin-top:2.5rem;font-size:.875rem;font-weight:700;color:#fff;background-color:#000}.o-footer .nav-link{padding:.625rem;font-size:.875rem;line-height:1.25rem}.o-footer .nav-link:not(:hover),.o-footer .nav-link:not([href]){color:#fff}.o-footer .o-footer-body,.o-footer .o-footer-bottom,.o-footer .o-footer-top{padding-top:.625rem;padding-bottom:.625rem}.o-footer .o-footer-top{border-bottom:1px solid #333}.o-footer .o-footer-body .row{margin-bottom:.625rem}.o-footer .o-footer-body h2{margin-top:.625rem;font-size:.875rem;color:#fff}.o-footer .o-footer-body p,.o-footer .o-footer-body p a{color:#fff}.o-footer .o-footer-body .flex-column .nav-link{padding:0;line-height:1.25}.o-footer .o-footer-bottom{border-top:1px solid #333}@media (max-width:979.98px){.o-responsive-table thead{display:none}.o-responsive-table tbody,.o-responsive-table td,.o-responsive-table th,.o-responsive-table tr{display:block}}@media (max-width:979.98px) and (min-width:768px){.o-responsive-table tr{float:left;width:45%}.o-responsive-table tr:nth-child(odd){margin-right:10%}}@media (max-width:979.98px){.o-responsive-table td,.o-responsive-table th{vertical-align:middle}.o-responsive-table td[data-title]:before{float:left;width:50%;font-weight:700;content:attr(data-title)}.o-responsive-table tr{margin-bottom:2em;border-right:0;border-left:0}.o-responsive-table tbody th[scope=row]{font-weight:700;border-top:0;border-bottom:2px solid #ccc}}.o-scroll-up{position:fixed;right:0;bottom:2.5rem;z-index:1080;display:none;right:1.25%;bottom:.25rem}.o-scroll-up .o-scroll-up-icon{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;float:right;width:2.5rem;height:2.5rem;color:#fff;text-align:center;text-decoration:none;background-color:#666;opacity:.8;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.o-scroll-up .o-scroll-up-icon:before{font-family:icon-orange,sans-serif;font-size:1.25rem;line-height:2;text-align:center;content:\"\\E93F\"}@media (min-width:480px){.o-scroll-up{right:1.25%}}@media (min-width:768px){.o-scroll-up{right:1.5625%}}@media (min-width:980px){.o-scroll-up{right:3.125%}}@media (min-width:1220px){.o-scroll-up{right:3.125%}}@media (min-width:1380px){.o-scroll-up{right:4.16667%}}@media (min-width:480px){.o-scroll-up{bottom:.375rem}}@media (min-width:768px){.o-scroll-up{bottom:.75rem}}@media (min-width:980px){.o-scroll-up{bottom:2rem}}@media (min-width:1220px){.o-scroll-up{bottom:2.5rem}}@media (min-width:1380px){.o-scroll-up{bottom:3.75rem}}.o-scroll-up .o-scroll-up-text{display:inline-block;padding:.625rem;font-weight:700;background-color:#fff;opacity:.8}.o-scroll-up.static{position:static;z-index:auto;display:inline;float:left}.o-scroll-up.static .o-scroll-up-text{float:left}.o-scroll-up.static .o-scroll-up-icon{position:relative;display:inline-block;float:none}.o-scroll-up:focus,.o-scroll-up:hover{color:#f16e00}.dropdown-toggle:after{margin-left:.625rem;vertical-align:10%}.dropdown-item{padding-left:1.25rem;font-weight:700}.dropdown-item:focus{color:#000;background-color:#fff;outline:1px dotted}.dropdown-item:focus:hover{color:#fff;background-color:#000}.carousel{margin-bottom:1.875rem}.carousel .carousel-item img{width:100%}.carousel-control-next,.carousel-control-prev{top:auto;bottom:calc(50% - 1.875rem);width:3.75rem;height:3.75rem;text-decoration:none;text-shadow:none;background-color:transparent;opacity:.8;transition:width .5s ease}.carousel-control-next:focus,.carousel-control-prev:focus{outline:1px dotted #000;outline-offset:-1px}.carousel-control-next-icon,.carousel-control-prev-icon{margin-top:-1.125rem;font-size:1.875rem;color:#000;text-shadow:1px 0 0 #fff,0 1px 0 #fff,-1px 0 0 #fff,0 -1px 0 #fff;background-image:none;background-repeat:no-repeat}.carousel-control-next-icon:before,.carousel-control-prev-icon:before{font-family:icon-orange,sans-serif}.carousel-control-prev-icon:before{content:\"\\E93F\"}.carousel-control-next-icon:before{content:\"\\E93E\"}.carousel-indicators{bottom:0;-ms-flex-align:center;align-items:center}.carousel-indicators:hover{cursor:default}.carousel-indicators li{-ms-flex-positive:0;flex-grow:0;width:.625rem;height:.625rem;margin-right:.375rem;background-color:#000;border:1px solid #fff;border-radius:50%}.carousel-indicators li:hover{cursor:pointer}.carousel-indicators li.active{background-color:#f16e00}.swiper-button-next,.swiper-button-prev{top:calc(50% - 10px);width:auto;height:auto;text-shadow:1px 0 0 #fff,0 1px 0 #fff,-1px 0 0 #fff,0 -1px 0 #fff;cursor:pointer;background-image:none;background-size:0}.swiper-button-next:before,.swiper-button-prev:before{font-family:icon-orange,sans-serif;font-size:1.875rem;content:\"\\E93F\"}.swiper-button-next:before{content:\"\\E93E\"}.swiper-pagination-bullet,.swiper-pagination-bullet-active{width:.625rem;height:.625rem;border:0}.swiper-pagination-bullet{opacity:1}.swiper-pagination-bullet-active{background:#f16e00}.swiper-container{width:100%!important;overflow:hidden}.swiper-container,.swiper-wrapper{margin-bottom:30px}.swiper-pagination{bottom:6px}.swiper-slide .card{border:0}.swiper-slide .card-img{padding:0}.swiper-slide .card-img img{width:100%;height:40vh}.swiper-slide .card-title{margin:0;font-weight:700}.swiper-slide .card-body{position:absolute;bottom:20px;left:40px;background-color:#fff}.swiper-slide .card-body p{margin:0}@media (max-width:979.98px){.swiper-button-next,.swiper-button-prev{display:none}.swiper-container{overflow:visible}.swiper-slide{width:80%}.swiper-slide .card-img img{height:auto}.swiper-slide .card-body{position:static}.swiper-container-horizontal>.swiper-pagination-bullets{bottom:-26px}.swiper-pagination-bullet{width:8px;height:8px;border:0}}a:focus,div.active:focus{outline:1px dotted}a:focus{color:#f16e00}.close:focus,.close:hover{outline:1px dotted}.progress.progress-default[value]::-webkit-progress-value{background-color:#f16e00}.progress.progress-default[value]::-moz-progress-bar{background-color:#f16e00}.hero-container .frame{position:absolute;top:0;left:0;max-width:15%;margin:30px}.hero-container .caption{margin:50px 30px}.hero-container .category{font-size:1.25rem;color:#f16e00}", ""]);

// exports


/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(59)();
// imports


// module
exports.push([module.i, "@font-face{font-family:HelvNeueOrange;font-style:normal;font-weight:400;src:url(" + __webpack_require__(626) + ") format(\"woff2\"),url(" + __webpack_require__(625) + ") format(\"woff\")}@font-face{font-family:HelvNeueOrange;font-style:normal;font-weight:700;src:url(" + __webpack_require__(628) + ") format(\"woff2\"),url(" + __webpack_require__(627) + ") format(\"woff\")}", ""]);

// exports


/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(59)();
// imports


// module
exports.push([module.i, "@font-face{font-family:icon-orange;font-style:normal;font-weight:400;src:url(" + __webpack_require__(630) + ") format(\"woff2\"),url(" + __webpack_require__(629) + ") format(\"woff\")}.icon-2for1cinematicket,.icon-3g,.icon-4g,.icon-4g-cam,.icon-4G-Cam--Live-80,.icon-4G-Cam-Camera-80,.icon-4G-Cam-Compact,.icon-4G-Cam-Inbox80,.icon-4G-Cam-Outbox-80,.icon-4G-Cam-Rec-80,.icon-4g-plus,.icon-1013-Reseau,.icon-about-event,.icon-Accessability,.icon-accessibility-cognition,.icon-accessibility-dexterity,.icon-accessibility-hearing,.icon-accessibility-mobility,.icon-accessibility-speech,.icon-accessibility-vision,.icon-accessory-headphones,.icon-accessory-shop,.icon-Add,.icon-add-more,.icon-Add-person,.icon-address-book,.icon-administrator,.icon-Adult,.icon-Adultcode,.icon-advertising,.icon-aeroplane,.icon-Age-rating-3,.icon-Age-rating-4,.icon-Age-rating-7,.icon-Age-rating-9,.icon-Age-rating-12,.icon-Age-rating-16,.icon-Age-rating-17,.icon-Age-rating-18,.icon-age-rating-mono-3,.icon-age-rating-mono-4,.icon-age-rating-mono-7,.icon-age-rating-mono-9,.icon-age-rating-mono-12,.icon-age-rating-mono-16,.icon-age-rating-mono-17,.icon-age-rating-mono-18,.icon-agriculture,.icon-airbox-auto,.icon-alarm-clock,.icon-alarm-off,.icon-Alias-numbers,.icon-all-channels,.icon-antenna,.icon-anti-spam,.icon-antivirus,.icon-Apartment-building,.icon-Apps,.icon-Apps-disabled,.icon-Archive,.icon-arrow-down,.icon-arrow-next,.icon-arrow-previous,.icon-arrow-up,.icon-Art,.icon-assistance,.icon-attachment,.icon-Auditorium,.icon-avatar,.icon-Baby,.icon-backup,.icon-banking,.icon-battery-1-bar,.icon-battery-2-bar,.icon-battery-charging,.icon-battery-empty,.icon-battery-full,.icon-battery-full-2,.icon-Betting,.icon-bill-euro,.icon-billboard,.icon-birthday,.icon-bluetooth,.icon-Book-award,.icon-book-download,.icon-bookmark,.icon-bookmark-smart,.icon-Boxes,.icon-broadcast,.icon-burst-mode,.icon-Business-everywhere,.icon-business-invoices,.icon-business-lounge,.icon-business-telephonie,.icon-buy,.icon-buy-back-euro,.icon-buzz,.icon-Calculator,.icon-calendar-30,.icon-calendar-day,.icon-Calendar-fixtures-results,.icon-Calendar-football-match,.icon-calendar-month,.icon-calendar-week,.icon-calendaralarm,.icon-call,.icon-call-forward,.icon-call-invite,.icon-call-log,.icon-camera,.icon-Car-park,.icon-Car-pooling,.icon-Casting,.icon-Categories,.icon-CD,.icon-change-wallpaper,.icon-Change-wallpaper-1,.icon-charger,.icon-check-your-balance,.icon-checkbox-tick,.icon-Child,.icon-child-protection,.icon-Children-channel,.icon-cineday-silhouette,.icon-clock,.icon-cloud-backup,.icon-Coat-hanger,.icon-Collective-class-training,.icon-Colour-Call,.icon-Comedy-channel,.icon-Comic,.icon-Comments,.icon-commercial-representitive,.icon-community-sms,.icon-Concierge-bell,.icon-conference-call,.icon-connected-object,.icon-connection,.icon-construction,.icon-contact-card,.icon-control-centre,.icon-control-mydata,.icon-copy,.icon-Courier,.icon-CPU,.icon-crane,.icon-Crop,.icon-Currency-brazilian-real,.icon-currency-converter,.icon-Currency-dollar,.icon-currency-euro,.icon-Currency-sterling,.icon-Currency-yen,.icon-data-protection,.icon-data-services,.icon-decoder,.icon-Decrease-test-size,.icon-Defibrillator,.icon-delete,.icon-device-connected-printer,.icon-device-desktop-computer,.icon-device-desktop-computer-connected,.icon-device-fixed-line-phone,.icon-device-laptop-computer,.icon-device-laptop-computer-connected,.icon-device-manager,.icon-device-managment-express,.icon-device-smart-phone,.icon-device-status,.icon-device-tablet,.icon-device-tablet-connected,.icon-device-tv,.icon-dialler,.icon-Digital-frame,.icon-disable-apps,.icon-Discovery-offer,.icon-Discussion-author,.icon-Discussion-more,.icon-Doctor,.icon-Doctors-bag,.icon-Doctors-communicating,.icon-Document-compose,.icon-document-stack,.icon-document-word,.icon-document-zip,.icon-Documentary,.icon-done-modifier,.icon-download,.icon-draft,.icon-dual-sim-packaging,.icon-easy-internet,.icon-ebook,.icon-Eco-mode,.icon-edashboard,.icon-edit-draft,.icon-edit-email,.icon-edit-image,.icon-Elderly-person,.icon-electric-car,.icon-electric-car-charging,.icon-electricity-provider,.icon-elevator,.icon-email,.icon-email-forwarded,.icon-Email-replied,.icon-emap,.icon-emergency-firemen,.icon-emergency-police,.icon-emergency-service,.icon-emergency-sos,.icon-employees-1,.icon-Empty-trash,.icon-End-call,.icon-Entertainment-channel,.icon-epg,.icon-erase,.icon-error-severe,.icon-Ethenet,.icon-event-agenda,.icon-event-organiser,.icon-event-speaker,.icon-Excel,.icon-Expand-screen,.icon-expert,.icon-external-drive,.icon-Factory,.icon-family-place,.icon-Fast-delivery,.icon-Favorite-music,.icon-favourite,.icon-Featured,.icon-filter,.icon-Filter-effects,.icon-finance,.icon-fire,.icon-Fire-extinguisher,.icon-Firewall,.icon-flexible-storage,.icon-folder-camera,.icon-folder-document,.icon-folder-favourite,.icon-folder-sd,.icon-football,.icon-Football-match,.icon-Football-quiz,.icon-Forward,.icon-Forward-curved-arrow,.icon-forward-the-number,.icon-frame-care,.icon-frame-connectivity,.icon-frame-family,.icon-frame-fun,.icon-frame-home,.icon-frame-money,.icon-frame-my-customers,.icon-frame-on-the-move,.icon-frame-performance,.icon-frame-security,.icon-frame-tariff,.icon-frame-teamwork,.icon-frame-tech,.icon-frame-wellbeing,.icon-frame-work,.icon-free-tag,.icon-Free-up-space,.icon-front-end-dashboard,.icon-Full-screen-view,.icon-Gallery,.icon-games,.icon-Gas-tank,.icon-gauge-counter,.icon-gauge-mon-reseau,.icon-gauge-rate,.icon-gaugecapacity,.icon-generic-document,.icon-geolocation,.icon-hands-free,.icon-HDMI-Card,.icon-health,.icon-health-monitor,.icon-Health-patient,.icon-Heart-rate,.icon-Heartbeats,.icon-help-guide,.icon-history,.icon-home,.icon-Home-1,.icon-home-alarm,.icon-Homelive,.icon-homescreen,.icon-Horoscopes,.icon-hospital,.icon-hotel,.icon-Hourglass,.icon-Im-driving,.icon-image,.icon-image-file,.icon-improvement,.icon-inbox,.icon-Incoming-call-curved-arrow,.icon-Increase-test-size,.icon-info,.icon-Information-data,.icon-international-globe,.icon-internationaltv,.icon-internet,.icon-internet-browser,.icon-Internet-security-desktop,.icon-Internet-security-mobile,.icon-Internet-security-password,.icon-Internet-security-server,.icon-internet-usage,.icon-Interventions,.icon-IT-infrastructure,.icon-keeper,.icon-keyboard,.icon-Keypad,.icon-La-Cle,.icon-Language,.icon-Latest,.icon-Le-Bloc,.icon-Leave-session,.icon-lightbulb-sh,.icon-ligue-1,.icon-Link,.icon-live,.icon-livebox,.icon-livebox-info,.icon-livebox-phone,.icon-location-pin-compass,.icon-lock,.icon-Lock-screen-settings,.icon-logistics,.icon-logout,.icon-Maintenance-man,.icon-manage-android,.icon-managing-equipment,.icon-Map,.icon-map-pin,.icon-Medal,.icon-Medical-app,.icon-Medical-app-phone,.icon-medical-chart,.icon-Medical-files,.icon-menu,.icon-Message-download,.icon-messaging,.icon-messaging-compose-sms,.icon-messaging-unified,.icon-messaging-untitled-compose,.icon-microphone,.icon-Microscope,.icon-mini-games,.icon-mirroring,.icon-Missed-call-boxed-arrow,.icon-Missed-call-curved-arrow,.icon-mobile-applications,.icon-Mobile-backup-restore,.icon-mobile-box,.icon-mobile-data-toggle,.icon-mobile-insurance,.icon-mobile-network-coverage,.icon-mobile-security,.icon-mobile-setup,.icon-Modem,.icon-modifier-add,.icon-Modifier-delete,.icon-Modifier-download,.icon-Modifier-favorite,.icon-modifier-new,.icon-modifier-no-access,.icon-modifier-synchro,.icon-modifier-upload,.icon-modifier-wizard,.icon-mon-reseau,.icon-money,.icon-More-dots,.icon-move-to-folder,.icon-multi-sim,.icon-multiple-timezone,.icon-Music-artist,.icon-music-file,.icon-Music-genre,.icon-music-player,.icon-Mute-microphone,.icon-my-account,.icon-my-bill-uk,.icon-my-boutique,.icon-my-essential,.icon-my-essential-tablet,.icon-my-livebox,.icon-my-media,.icon-My-Office-Phone,.icon-my-orange,.icon-my-plug,.icon-my-services,.icon-my-travels,.icon-Nature,.icon-Network-add,.icon-Network-livebox,.icon-networks,.icon-new,.icon-newspaper,.icon-nfc,.icon-NFC-tag,.icon-no-sim,.icon-Notification,.icon-Notification-Bell,.icon-nouveau-contract-social,.icon-numero-unique,.icon-office,.icon-oil-and-gas,.icon-On-board-unit,.icon-online-help,.icon-orange-assistant,.icon-orange-cash,.icon-orange-corporate,.icon-Orange-Detente,.icon-orange-events,.icon-Orange-Experts-Class-Training,.icon-Orange-Experts-Copy-Keep,.icon-orange-experts-expert,.icon-orange-experts-insurance,.icon-Orange-Experts-One2One-Coach,.icon-orange-experts-orange-business-consultant,.icon-orange-experts-orange-startup-smartphone,.icon-orange-experts-recycle,.icon-orange-experts-repair,.icon-orange-experts-tranquil,.icon-Orange-Football-Club,.icon-orange-foundation,.icon-Orange-garden,.icon-orange-gesture,.icon-Orange-Guest,.icon-orange-jobs,.icon-orange-messenger,.icon-Orange-Messenger-1,.icon-orange-money,.icon-orange-Photography,.icon-orange-pro,.icon-orange-protect,.icon-orange-radio,.icon-orange-reflections,.icon-Orange-rewards,.icon-Orange-security-suite,.icon-orange-travel,.icon-orange-tv,.icon-orange-wallet,.icon-orange-wifi,.icon-orangewallet,.icon-organisation,.icon-outbox,.icon-outdoor-sports-mountain-biking,.icon-outdoor-sports-skiing,.icon-Package,.icon-Package-content,.icon-parabole-tv,.icon-parental-control,.icon-Parrasol,.icon-pass-video,.icon-Pause,.icon-Payment-euro,.icon-pda-device,.icon-pdf-file,.icon-Pencil,.icon-personal-smartphone-trainer,.icon-phone-advisor,.icon-phone-fund,.icon-phone-protection,.icon-Photo-dialer,.icon-picture-messaging,.icon-Pills,.icon-pioneering,.icon-Play,.icon-play-and-win,.icon-playmode-random,.icon-polls,.icon-popout-care,.icon-popout-connectivity,.icon-popout-family,.icon-popout-fun,.icon-popout-home,.icon-popout-money,.icon-popout-my-customers,.icon-popout-on-the-move,.icon-popout-performance,.icon-popout-security,.icon-popout-tariff,.icon-popout-teamwork,.icon-popout-tech,.icon-popout-wellbeing,.icon-popout-work,.icon-portfolio,.icon-POS-payment,.icon-power,.icon-powerpoint-file,.icon-presentation,.icon-previous,.icon-printer,.icon-profileringtone,.icon-public-transport,.icon-publish,.icon-Quirky-stories,.icon-Quiz,.icon-Radiography,.icon-ratings-stars,.icon-Real-time,.icon-recommend,.icon-record,.icon-Record-1,.icon-recycle-device,.icon-Redo,.icon-relationship,.icon-reload,.icon-remote-control,.icon-Remote-control-1,.icon-remove-modifier,.icon-Replay-boxed-arrow,.icon-Reply-boxed-arrow,.icon-Reply-curved-arrow,.icon-report,.icon-responsible,.icon-Restaurant,.icon-restore-to-phone,.icon-Restrictied-content,.icon-rewards,.icon-ringtones,.icon-running,.icon-Scales,.icon-scan-ticket,.icon-School,.icon-Science,.icon-Scissors,.icon-sd-card,.icon-SD-card-1,.icon-search,.icon-Send,.icon-Send-to-person,.icon-Server,.icon-servers,.icon-settings,.icon-setup-and-repair,.icon-setup-and-repair-cog,.icon-setup-internet,.icon-share,.icon-Share-wifi,.icon-shipping,.icon-Shop,.icon-shop-pin,.icon-shop-subscriptions,.icon-Shopping,.icon-Show-front-back-camera,.icon-Shower,.icon-showroom-mobile-pro,.icon-signal-1-5,.icon-signal-2-5,.icon-signal-3-5,.icon-signal-4-5,.icon-signal-5-5,.icon-signal-boost,.icon-Silent,.icon-sim,.icon-simple-mode,.icon-Simplicity,.icon-Skip-backward,.icon-Skip-forward,.icon-Sleep,.icon-Smart-electric-meter,.icon-Smart-heating-switch,.icon-smart-home,.icon-smart-lightswitch,.icon-smart-powerstation,.icon-Smart-Sensor,.icon-smart-tap,.icon-smart-watch,.icon-social-network,.icon-software-update,.icon-Sport-channel,.icon-Start-services,.icon-startup-wizard,.icon-stocks,.icon-stop-secret,.icon-Stop-video,.icon-Storage-cloud,.icon-store-locator,.icon-Street,.icon-Stretcher,.icon-subscription-package,.icon-Sudoku,.icon-support,.icon-surveillance-camera,.icon-Syncronise,.icon-target-location,.icon-tarif,.icon-tariff,.icon-task-list,.icon-Taxi,.icon-team-connect,.icon-temperature,.icon-terms-conditions,.icon-text-alerts,.icon-Thumb-down,.icon-Thumb-up,.icon-tick,.icon-tick-circle,.icon-tickets,.icon-Top-10,.icon-top-up-dollar,.icon-top-up-euro,.icon-top-up-uk-bank,.icon-touch-screen,.icon-town,.icon-townhall,.icon-track-your-delivery,.icon-track-your-order,.icon-Trading,.icon-trash,.icon-tv-plus,.icon-TV-series,.icon-Undo,.icon-unique,.icon-unknown-file,.icon-unlimited-calls,.icon-unlocked,.icon-Unmissable,.icon-upload,.icon-USB,.icon-usb-key,.icon-Value,.icon-vehicle,.icon-video,.icon-video-file,.icon-video-meeting2,.icon-video-phone,.icon-Vinyl,.icon-vip-contact,.icon-virtual-gamepad,.icon-visual-voicemail,.icon-vod-portrait,.icon-volte,.icon-volume-high,.icon-volume-low,.icon-volume-mid,.icon-volume-none,.icon-vowifi,.icon-vvm-message-read-full,.icon-Warehouse,.icon-Warning-important,.icon-Warningimportant,.icon-web-cam,.icon-web-fax-widget,.icon-Wholesale-retail,.icon-Widget,.icon-widget-tour,.icon-wifi,.icon-wifi-0,.icon-wifi-1,.icon-wifi-2,.icon-wps-pairing,.icon-WPT,.icon-zoom-in,.icon-zoom-out{font-family:icon-orange,sans-serif!important;font-style:normal;font-variant:normal;line-height:1;text-transform:none;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-frame-care,.icon-frame-connectivity,.icon-frame-family,.icon-frame-fun,.icon-frame-home,.icon-frame-money,.icon-frame-my-customers,.icon-frame-on-the-move,.icon-frame-performance,.icon-frame-security,.icon-frame-tariff,.icon-frame-teamwork,.icon-frame-tech,.icon-frame-wellbeing,.icon-frame-work,.icon-popout-care,.icon-popout-connectivity,.icon-popout-family,.icon-popout-fun,.icon-popout-home,.icon-popout-money,.icon-popout-my-customers,.icon-popout-on-the-move,.icon-popout-performance,.icon-popout-security,.icon-popout-tariff,.icon-popout-teamwork,.icon-popout-tech,.icon-popout-wellbeing,.icon-popout-work{color:#f16e00}.icon-checkbox-tick:before{content:\"\\EB77\"}.icon-2for1cinematicket:before{content:\"\\E900\"}.icon-3g:before{content:\"\\E901\"}.icon-4g:before{content:\"\\E902\"}.icon-4g-cam:before{content:\"\\E903\"}.icon-4G-Cam--Live-80:before{content:\"\\E904\"}.icon-4G-Cam-Camera-80:before{content:\"\\E905\"}.icon-4G-Cam-Inbox80:before{content:\"\\E906\"}.icon-4G-Cam-Outbox-80:before{content:\"\\E907\"}.icon-4G-Cam-Rec-80:before{content:\"\\E908\"}.icon-4g-plus:before{content:\"\\E909\"}.icon-4G-Cam-Compact:before{content:\"\\E90A\"}.icon-1013-Reseau:before{content:\"\\E90B\"}.icon-about-event:before{content:\"\\E90C\"}.icon-Accessability:before{content:\"\\E90D\"}.icon-accessibility-cognition:before{content:\"\\E90E\"}.icon-accessibility-dexterity:before{content:\"\\E90F\"}.icon-accessibility-hearing:before{content:\"\\E910\"}.icon-accessibility-mobility:before{content:\"\\E911\"}.icon-accessibility-speech:before{content:\"\\E912\"}.icon-accessibility-vision:before{content:\"\\E913\"}.icon-accessory-headphones:before{content:\"\\E914\"}.icon-accessory-shop:before{content:\"\\E915\"}.icon-Add:before{content:\"\\E916\"}.icon-add-more:before{content:\"\\E917\"}.icon-Add-person:before{content:\"\\E918\"}.icon-address-book:before{content:\"\\E919\"}.icon-administrator:before{content:\"\\E91A\"}.icon-Adultcode:before{content:\"\\E91B\"}.icon-Adult:before{content:\"\\E91C\"}.icon-advertising:before{content:\"\\E91D\"}.icon-aeroplane:before{content:\"\\E91E\"}.icon-Age-rating-3:before{content:\"\\E91F\"}.icon-Age-rating-4:before{content:\"\\E920\"}.icon-Age-rating-7:before{content:\"\\E921\"}.icon-Age-rating-9:before{content:\"\\E922\"}.icon-Age-rating-12:before{content:\"\\E923\"}.icon-Age-rating-16:before{content:\"\\E924\"}.icon-Age-rating-17:before{content:\"\\E925\"}.icon-Age-rating-18:before{content:\"\\E926\"}.icon-age-rating-mono-3:before{content:\"\\E927\"}.icon-age-rating-mono-4:before{content:\"\\E928\"}.icon-age-rating-mono-7:before{content:\"\\E929\"}.icon-age-rating-mono-9:before{content:\"\\E92A\"}.icon-age-rating-mono-12:before{content:\"\\E92B\"}.icon-age-rating-mono-16:before{content:\"\\E92C\"}.icon-age-rating-mono-17:before{content:\"\\E92D\"}.icon-age-rating-mono-18:before{content:\"\\E92E\"}.icon-agriculture:before{content:\"\\E92F\"}.icon-airbox-auto:before{content:\"\\E930\"}.icon-alarm-clock:before{content:\"\\E931\"}.icon-alarm-off:before{content:\"\\E932\"}.icon-Alias-numbers:before{content:\"\\E933\"}.icon-all-channels:before{content:\"\\E934\"}.icon-antenna:before{content:\"\\E935\"}.icon-anti-spam:before{content:\"\\E936\"}.icon-antivirus:before{content:\"\\E937\"}.icon-Apartment-building:before{content:\"\\E938\"}.icon-Apps:before{content:\"\\E939\"}.icon-Apps-disabled:before{content:\"\\E93A\"}.icon-Archive:before{content:\"\\E93B\"}.icon-arrow-down:before{content:\"\\E93C\"}.icon-arrow-up:before{content:\"\\E93D\"}.icon-arrow-next:before{content:\"\\E93E\"}.icon-arrow-previous:before{content:\"\\E93F\"}.icon-Art:before{content:\"\\E940\"}.icon-assistance:before{content:\"\\E941\"}.icon-attachment:before{content:\"\\E942\"}.icon-Auditorium:before{content:\"\\E943\"}.icon-avatar:before{content:\"\\E944\"}.icon-Baby:before{content:\"\\E945\"}.icon-backup:before{content:\"\\E946\"}.icon-banking:before{content:\"\\E947\"}.icon-battery-1-bar:before{content:\"\\E948\"}.icon-battery-2-bar:before{content:\"\\E949\"}.icon-battery-charging:before{content:\"\\E94A\"}.icon-battery-empty:before{content:\"\\E94B\"}.icon-battery-full:before{content:\"\\E94C\"}.icon-battery-full-2:before{content:\"\\E94D\"}.icon-Betting:before{content:\"\\E94E\"}.icon-bill-euro:before{content:\"\\E94F\"}.icon-billboard:before{content:\"\\E950\"}.icon-birthday:before{content:\"\\E951\"}.icon-bluetooth:before{content:\"\\E952\"}.icon-Book-award:before{content:\"\\E953\"}.icon-book-download:before{content:\"\\E954\"}.icon-bookmark:before{content:\"\\E955\"}.icon-bookmark-smart:before{content:\"\\E956\"}.icon-Boxes:before{content:\"\\E957\"}.icon-broadcast:before{content:\"\\E958\"}.icon-burst-mode:before{content:\"\\E959\"}.icon-Business-everywhere:before{content:\"\\E95A\"}.icon-business-invoices:before{content:\"\\E95B\"}.icon-business-lounge:before{content:\"\\E95C\"}.icon-business-telephonie:before{content:\"\\E95D\"}.icon-buy:before{content:\"\\E95E\"}.icon-buy-back-euro:before{content:\"\\E95F\"}.icon-buzz:before{content:\"\\E960\"}.icon-Calculator:before{content:\"\\E961\"}.icon-calendaralarm:before{content:\"\\E962\"}.icon-calendar-30:before{content:\"\\E963\"}.icon-calendar-day:before{content:\"\\E964\"}.icon-Calendar-fixtures-results:before{content:\"\\E965\"}.icon-Calendar-football-match:before{content:\"\\E966\"}.icon-calendar-month:before{content:\"\\E967\"}.icon-calendar-week:before{content:\"\\E968\"}.icon-call:before{content:\"\\E969\"}.icon-call-forward:before{content:\"\\E96A\"}.icon-call-invite:before{content:\"\\E96B\"}.icon-call-log:before{content:\"\\E96C\"}.icon-camera:before{content:\"\\E96D\"}.icon-Car-park:before{content:\"\\E96E\"}.icon-Car-pooling:before{content:\"\\E96F\"}.icon-Casting:before{content:\"\\E970\"}.icon-Categories:before{content:\"\\E971\"}.icon-CD:before{content:\"\\E972\"}.icon-change-wallpaper:before{content:\"\\E973\"}.icon-Change-wallpaper-1:before{content:\"\\E974\"}.icon-charger:before{content:\"\\E975\"}.icon-check-your-balance:before{content:\"\\E976\"}.icon-Child:before{content:\"\\E977\"}.icon-child-protection:before{content:\"\\E978\"}.icon-Children-channel:before{content:\"\\E979\"}.icon-cineday-silhouette:before{content:\"\\E97A\"}.icon-clock:before{content:\"\\E97B\"}.icon-cloud-backup:before{content:\"\\E97C\"}.icon-Coat-hanger:before{content:\"\\E97D\"}.icon-Collective-class-training:before{content:\"\\E97E\"}.icon-Colour-Call:before{content:\"\\E97F\"}.icon-Comedy-channel:before{content:\"\\E980\"}.icon-Comic:before{content:\"\\E981\"}.icon-Comments:before{content:\"\\E982\"}.icon-commercial-representitive:before{content:\"\\E983\"}.icon-community-sms:before{content:\"\\E984\"}.icon-Concierge-bell:before{content:\"\\E985\"}.icon-conference-call:before{content:\"\\E986\"}.icon-connected-object:before{content:\"\\E987\"}.icon-connection:before{content:\"\\E988\"}.icon-construction:before{content:\"\\E989\"}.icon-contact-card:before{content:\"\\E98A\"}.icon-control-centre:before{content:\"\\E98B\"}.icon-control-mydata:before{content:\"\\E98C\"}.icon-copy:before{content:\"\\E98D\"}.icon-Courier:before{content:\"\\E98E\"}.icon-CPU:before{content:\"\\E98F\"}.icon-crane:before{content:\"\\E990\"}.icon-Crop:before{content:\"\\E991\"}.icon-Currency-brazilian-real:before{content:\"\\E992\"}.icon-currency-converter:before{content:\"\\E993\"}.icon-Currency-dollar:before{content:\"\\E994\"}.icon-currency-euro:before{content:\"\\E995\"}.icon-Currency-sterling:before{content:\"\\E996\"}.icon-Currency-yen:before{content:\"\\E997\"}.icon-data-protection:before{content:\"\\E998\"}.icon-data-services:before{content:\"\\E999\"}.icon-decoder:before{content:\"\\E99A\"}.icon-Decrease-test-size:before{content:\"\\E99B\"}.icon-Defibrillator:before{content:\"\\E99C\"}.icon-delete:before{content:\"\\E99D\"}.icon-device-desktop-computer:before{content:\"\\E99E\"}.icon-device-desktop-computer-connected:before{content:\"\\E99F\"}.icon-device-fixed-line-phone:before{content:\"\\E9A0\"}.icon-device-laptop-computer:before{content:\"\\E9A1\"}.icon-device-laptop-computer-connected:before{content:\"\\E9A2\"}.icon-device-smart-phone:before{content:\"\\E9A3\"}.icon-device-status:before{content:\"\\E9A4\"}.icon-device-tablet:before{content:\"\\E9A5\"}.icon-device-tablet-connected:before{content:\"\\E9A6\"}.icon-device-tv:before{content:\"\\E9A7\"}.icon-device-connected-printer:before{content:\"\\E9A8\"}.icon-device-manager:before{content:\"\\E9A9\"}.icon-device-managment-express:before{content:\"\\E9AA\"}.icon-dialler:before{content:\"\\E9AB\"}.icon-Digital-frame:before{content:\"\\E9AC\"}.icon-disable-apps:before{content:\"\\E9AD\"}.icon-Discovery-offer:before{content:\"\\E9AE\"}.icon-Discussion-author:before{content:\"\\E9AF\"}.icon-Discussion-more:before{content:\"\\E9B0\"}.icon-Doctor:before{content:\"\\E9B1\"}.icon-Doctors-bag:before{content:\"\\E9B2\"}.icon-Doctors-communicating:before{content:\"\\E9B3\"}.icon-Document-compose:before{content:\"\\E9B4\"}.icon-document-stack:before{content:\"\\E9B5\"}.icon-document-word:before{content:\"\\E9B6\"}.icon-document-zip:before{content:\"\\E9B7\"}.icon-Documentary:before{content:\"\\E9B8\"}.icon-done-modifier:before{content:\"\\E9B9\"}.icon-download:before{content:\"\\E9BA\"}.icon-draft:before{content:\"\\E9BB\"}.icon-dual-sim-packaging:before{content:\"\\E9BC\"}.icon-easy-internet:before{content:\"\\E9BD\"}.icon-ebook:before{content:\"\\E9BE\"}.icon-Eco-mode:before{content:\"\\E9BF\"}.icon-edashboard:before{content:\"\\E9C0\"}.icon-edit-draft:before{content:\"\\E9C1\"}.icon-edit-email:before{content:\"\\E9C2\"}.icon-edit-image:before{content:\"\\E9C3\"}.icon-Elderly-person:before{content:\"\\E9C4\"}.icon-electric-car:before{content:\"\\E9C5\"}.icon-electric-car-charging:before{content:\"\\E9C6\"}.icon-electricity-provider:before{content:\"\\E9C7\"}.icon-elevator:before{content:\"\\E9C8\"}.icon-email:before{content:\"\\E9C9\"}.icon-email-forwarded:before{content:\"\\E9CA\"}.icon-Email-replied:before{content:\"\\E9CB\"}.icon-emap:before{content:\"\\E9CC\"}.icon-emergency-firemen:before{content:\"\\E9CD\"}.icon-emergency-police:before{content:\"\\E9CE\"}.icon-emergency-sos:before{content:\"\\E9CF\"}.icon-emergency-service:before{content:\"\\E9D0\"}.icon-employees-1:before{content:\"\\E9D1\"}.icon-Empty-trash:before{content:\"\\E9D2\"}.icon-End-call:before{content:\"\\E9D3\"}.icon-Entertainment-channel:before{content:\"\\E9D4\"}.icon-epg:before{content:\"\\E9D5\"}.icon-erase:before{content:\"\\E9D6\"}.icon-error-severe:before{content:\"\\E9D7\"}.icon-Ethenet:before{content:\"\\E9D8\"}.icon-event-agenda:before{content:\"\\E9D9\"}.icon-event-organiser:before{content:\"\\E9DA\"}.icon-event-speaker:before{content:\"\\E9DB\"}.icon-Excel:before{content:\"\\E9DC\"}.icon-Expand-screen:before{content:\"\\E9DD\"}.icon-expert:before{content:\"\\E9DE\"}.icon-external-drive:before{content:\"\\E9DF\"}.icon-Factory:before{content:\"\\E9E0\"}.icon-family-place:before{content:\"\\E9E1\"}.icon-Fast-delivery:before{content:\"\\E9E2\"}.icon-Favorite-music:before{content:\"\\E9E3\"}.icon-favourite:before{content:\"\\E9E4\"}.icon-Featured:before{content:\"\\E9E5\"}.icon-filter:before{content:\"\\E9E6\"}.icon-Filter-effects:before{content:\"\\E9E7\"}.icon-finance:before{content:\"\\E9E8\"}.icon-fire:before{content:\"\\E9E9\"}.icon-Fire-extinguisher:before{content:\"\\E9EA\"}.icon-Firewall:before{content:\"\\E9EB\"}.icon-flexible-storage:before{content:\"\\E9EC\"}.icon-folder-camera:before{content:\"\\E9ED\"}.icon-folder-document:before{content:\"\\E9EE\"}.icon-folder-favourite:before{content:\"\\E9EF\"}.icon-folder-sd:before{content:\"\\E9F0\"}.icon-football:before{content:\"\\E9F1\"}.icon-Football-match:before{content:\"\\E9F2\"}.icon-Football-quiz:before{content:\"\\E9F3\"}.icon-Forward:before{content:\"\\E9F4\"}.icon-Forward-curved-arrow:before{content:\"\\E9F5\"}.icon-forward-the-number:before{content:\"\\E9F6\"}.icon-free-tag:before{content:\"\\E9F7\"}.icon-Free-up-space:before{content:\"\\E9F8\"}.icon-front-end-dashboard:before{content:\"\\E9F9\"}.icon-Full-screen-view:before{content:\"\\E9FA\"}.icon-Gallery:before{content:\"\\E9FB\"}.icon-games:before{content:\"\\E9FC\"}.icon-Gas-tank:before{content:\"\\E9FD\"}.icon-gaugecapacity:before{content:\"\\E9FE\"}.icon-gauge-counter:before{content:\"\\E9FF\"}.icon-gauge-rate:before{content:\"\\EA00\"}.icon-gauge-mon-reseau:before{content:\"\\EA01\"}.icon-generic-document:before{content:\"\\EA02\"}.icon-geolocation:before{content:\"\\EA03\"}.icon-hands-free:before{content:\"\\EA04\"}.icon-HDMI-Card:before{content:\"\\EA05\"}.icon-health:before{content:\"\\EA06\"}.icon-health-monitor:before{content:\"\\EA07\"}.icon-Health-patient:before{content:\"\\EA08\"}.icon-Heart-rate:before{content:\"\\EA09\"}.icon-Heartbeats:before{content:\"\\EA0A\"}.icon-help-guide:before{content:\"\\EA0B\"}.icon-history:before{content:\"\\EA0C\"}.icon-home:before{content:\"\\EA0D\"}.icon-Home-1:before{content:\"\\EA0E\"}.icon-home-alarm:before{content:\"\\EA0F\"}.icon-Homelive:before{content:\"\\EA10\"}.icon-homescreen:before{content:\"\\EA11\"}.icon-Horoscopes:before{content:\"\\EA12\"}.icon-hospital:before{content:\"\\EA13\"}.icon-hotel:before{content:\"\\EA14\"}.icon-Hourglass:before{content:\"\\EA15\"}.icon-Im-driving:before{content:\"\\EA16\"}.icon-image:before{content:\"\\EA17\"}.icon-image-file:before{content:\"\\EA18\"}.icon-improvement:before{content:\"\\EA19\"}.icon-inbox:before{content:\"\\EA1A\"}.icon-Incoming-call-curved-arrow:before{content:\"\\EA1B\"}.icon-Increase-test-size:before{content:\"\\EA1C\"}.icon-info:before{content:\"\\EA1D\"}.icon-Information-data:before{content:\"\\EA1E\"}.icon-internationaltv:before{content:\"\\EA1F\"}.icon-international-globe:before{content:\"\\EA20\"}.icon-internet:before{content:\"\\EA21\"}.icon-internet-browser:before{content:\"\\EA22\"}.icon-Internet-security-desktop:before{content:\"\\EA23\"}.icon-Internet-security-mobile:before{content:\"\\EA24\"}.icon-Internet-security-password:before{content:\"\\EA25\"}.icon-Internet-security-server:before{content:\"\\EA26\"}.icon-internet-usage:before{content:\"\\EA27\"}.icon-Interventions:before{content:\"\\EA28\"}.icon-IT-infrastructure:before{content:\"\\EA29\"}.icon-keeper:before{content:\"\\EA2A\"}.icon-keyboard:before{content:\"\\EA2B\"}.icon-Keypad:before{content:\"\\EA2C\"}.icon-La-Cle:before{content:\"\\EA2D\"}.icon-Language:before{content:\"\\EA2E\"}.icon-Latest:before{content:\"\\EA2F\"}.icon-Le-Bloc:before{content:\"\\EA30\"}.icon-Leave-session:before{content:\"\\EA31\"}.icon-lightbulb-sh:before{content:\"\\EA32\"}.icon-ligue-1:before{content:\"\\EA33\"}.icon-Link:before{content:\"\\EA34\"}.icon-live:before{content:\"\\EA35\"}.icon-livebox:before{content:\"\\EA36\"}.icon-livebox-info:before{content:\"\\EA37\"}.icon-livebox-phone:before{content:\"\\EA38\"}.icon-location-pin-compass:before{content:\"\\EA39\"}.icon-lock:before{content:\"\\EA3A\"}.icon-Lock-screen-settings:before{content:\"\\EA3B\"}.icon-logistics:before{content:\"\\EA3C\"}.icon-logout:before{content:\"\\EA3D\"}.icon-Maintenance-man:before{content:\"\\EA3E\"}.icon-manage-android:before{content:\"\\EA3F\"}.icon-managing-equipment:before{content:\"\\EA40\"}.icon-Map:before{content:\"\\EA41\"}.icon-map-pin:before{content:\"\\EA42\"}.icon-Medal:before{content:\"\\EA43\"}.icon-Medical-app:before{content:\"\\EA44\"}.icon-Medical-app-phone:before{content:\"\\EA45\"}.icon-medical-chart:before{content:\"\\EA46\"}.icon-Medical-files:before{content:\"\\EA47\"}.icon-menu:before{content:\"\\EA48\"}.icon-Message-download:before{content:\"\\EA49\"}.icon-messaging:before{content:\"\\EA4A\"}.icon-messaging-compose-sms:before{content:\"\\EA4B\"}.icon-messaging-unified:before{content:\"\\EA4C\"}.icon-messaging-untitled-compose:before{content:\"\\EA4D\"}.icon-microphone:before{content:\"\\EA4E\"}.icon-Microscope:before{content:\"\\EA4F\"}.icon-mini-games:before{content:\"\\EA50\"}.icon-mirroring:before{content:\"\\EA51\"}.icon-Missed-call-boxed-arrow:before{content:\"\\EA52\"}.icon-Missed-call-curved-arrow:before{content:\"\\EA53\"}.icon-mobile-applications:before{content:\"\\EA54\"}.icon-Mobile-backup-restore:before{content:\"\\EA55\"}.icon-mobile-box:before{content:\"\\EA56\"}.icon-mobile-data-toggle:before{content:\"\\EA57\"}.icon-mobile-insurance:before{content:\"\\EA58\"}.icon-mobile-network-coverage:before{content:\"\\EA59\"}.icon-mobile-security:before{content:\"\\EA5A\"}.icon-mobile-setup:before{content:\"\\EA5B\"}.icon-Modem:before{content:\"\\EA5C\"}.icon-modifier-add:before{content:\"\\EA5D\"}.icon-Modifier-delete:before{content:\"\\EA5E\"}.icon-Modifier-favorite:before{content:\"\\EA5F\"}.icon-modifier-new:before{content:\"\\EA60\"}.icon-modifier-no-access:before{content:\"\\EA61\"}.icon-modifier-synchro:before{content:\"\\EA62\"}.icon-modifier-upload:before{content:\"\\EA63\"}.icon-modifier-wizard:before{content:\"\\EA64\"}.icon-Modifier-download:before{content:\"\\EA65\"}.icon-mon-reseau:before{content:\"\\EA66\"}.icon-money:before{content:\"\\EA67\"}.icon-More-dots:before{content:\"\\EA68\"}.icon-move-to-folder:before{content:\"\\EA69\"}.icon-multi-sim:before{content:\"\\EA6A\"}.icon-multiple-timezone:before{content:\"\\EA6B\"}.icon-Music-artist:before{content:\"\\EA6C\"}.icon-music-file:before{content:\"\\EA6D\"}.icon-Music-genre:before{content:\"\\EA6E\"}.icon-music-player:before{content:\"\\EA6F\"}.icon-Mute-microphone:before{content:\"\\EA70\"}.icon-my-account:before{content:\"\\EA71\"}.icon-my-bill-uk:before{content:\"\\EA72\"}.icon-my-boutique:before{content:\"\\EA73\"}.icon-my-essential:before{content:\"\\EA74\"}.icon-my-essential-tablet:before{content:\"\\EA75\"}.icon-my-livebox:before{content:\"\\EA76\"}.icon-my-media:before{content:\"\\EA77\"}.icon-My-Office-Phone:before{content:\"\\EA78\"}.icon-my-orange:before{content:\"\\EA79\"}.icon-my-plug:before{content:\"\\EA7A\"}.icon-my-services:before{content:\"\\EA7B\"}.icon-my-travels:before{content:\"\\EA7C\"}.icon-Nature:before{content:\"\\EA7D\"}.icon-Network-add:before{content:\"\\EA7E\"}.icon-Network-livebox:before{content:\"\\EA7F\"}.icon-networks:before{content:\"\\EA80\"}.icon-new:before{content:\"\\EA81\"}.icon-newspaper:before{content:\"\\EA82\"}.icon-nfc:before{content:\"\\EA83\"}.icon-NFC-tag:before{content:\"\\EA84\"}.icon-no-sim:before{content:\"\\EA85\"}.icon-Notification:before{content:\"\\EA86\"}.icon-Notification-Bell:before{content:\"\\EA87\"}.icon-nouveau-contract-social:before{content:\"\\EA88\"}.icon-numero-unique:before{content:\"\\EA89\"}.icon-office:before{content:\"\\EA8A\"}.icon-oil-and-gas:before{content:\"\\EA8B\"}.icon-On-board-unit:before{content:\"\\EA8C\"}.icon-online-help:before{content:\"\\EA8D\"}.icon-orangewallet:before{content:\"\\EA8E\"}.icon-orange-assistant:before{content:\"\\EA8F\"}.icon-orange-cash:before{content:\"\\EA90\"}.icon-orange-corporate:before{content:\"\\EA91\"}.icon-Orange-Detente:before{content:\"\\EA92\"}.icon-orange-events:before{content:\"\\EA93\"}.icon-Orange-Experts-Class-Training:before{content:\"\\EA94\"}.icon-Orange-Experts-Copy-Keep:before{content:\"\\EA95\"}.icon-orange-experts-expert:before{content:\"\\EA96\"}.icon-orange-experts-insurance:before{content:\"\\EA97\"}.icon-Orange-Experts-One2One-Coach:before{content:\"\\EA98\"}.icon-orange-experts-orange-business-consultant:before{content:\"\\EA99\"}.icon-orange-experts-orange-startup-smartphone:before{content:\"\\EA9A\"}.icon-orange-experts-recycle:before{content:\"\\EA9B\"}.icon-orange-experts-repair:before{content:\"\\EA9C\"}.icon-orange-experts-tranquil:before{content:\"\\EA9D\"}.icon-Orange-Football-Club:before{content:\"\\EA9E\"}.icon-orange-foundation:before{content:\"\\EA9F\"}.icon-Orange-garden:before{content:\"\\EAA0\"}.icon-orange-gesture:before{content:\"\\EAA1\"}.icon-orange-jobs:before{content:\"\\EAA2\"}.icon-orange-messenger:before{content:\"\\EAA3\"}.icon-Orange-Messenger-1:before{content:\"\\EAA4\"}.icon-orange-money:before{content:\"\\EAA5\"}.icon-orange-Photography:before{content:\"\\EAA6\"}.icon-orange-pro:before{content:\"\\EAA7\"}.icon-orange-protect:before{content:\"\\EAA8\"}.icon-orange-radio:before{content:\"\\EAA9\"}.icon-orange-reflections:before{content:\"\\EAAA\"}.icon-Orange-rewards:before{content:\"\\EAAB\"}.icon-Orange-security-suite:before{content:\"\\EAAC\"}.icon-orange-travel:before{content:\"\\EAAD\"}.icon-orange-tv:before{content:\"\\EAAE\"}.icon-orange-wallet:before{content:\"\\EAAF\"}.icon-orange-wifi:before{content:\"\\EAB0\"}.icon-Orange-Guest:before{content:\"\\EAB1\"}.icon-organisation:before{content:\"\\EAB2\"}.icon-outbox:before{content:\"\\EAB3\"}.icon-outdoor-sports-mountain-biking:before{content:\"\\EAB4\"}.icon-outdoor-sports-skiing:before{content:\"\\EAB5\"}.icon-Package:before{content:\"\\EAB6\"}.icon-Package-content:before{content:\"\\EAB7\"}.icon-parabole-tv:before{content:\"\\EAB8\"}.icon-parental-control:before{content:\"\\EAB9\"}.icon-Parrasol:before{content:\"\\EABA\"}.icon-pass-video:before{content:\"\\EABB\"}.icon-Pause:before{content:\"\\EABC\"}.icon-Payment-euro:before{content:\"\\EABD\"}.icon-pda-device:before{content:\"\\EABE\"}.icon-pdf-file:before{content:\"\\EABF\"}.icon-Pencil:before{content:\"\\EAC0\"}.icon-personal-smartphone-trainer:before{content:\"\\EAC1\"}.icon-phone-advisor:before{content:\"\\EAC2\"}.icon-phone-fund:before{content:\"\\EAC3\"}.icon-phone-protection:before{content:\"\\EAC4\"}.icon-Photo-dialer:before{content:\"\\EAC5\"}.icon-picture-messaging:before{content:\"\\EAC6\"}.icon-Pills:before{content:\"\\EAC7\"}.icon-pioneering:before{content:\"\\EAC8\"}.icon-Play:before{content:\"\\EAC9\"}.icon-play-and-win:before{content:\"\\EACA\"}.icon-playmode-random:before{content:\"\\EACB\"}.icon-polls:before{content:\"\\EACC\"}.icon-portfolio:before{content:\"\\EACD\"}.icon-POS-payment:before{content:\"\\EACE\"}.icon-power:before{content:\"\\EACF\"}.icon-powerpoint-file:before{content:\"\\EAD0\"}.icon-presentation:before{content:\"\\EAD1\"}.icon-previous:before{content:\"\\EAD2\"}.icon-printer:before{content:\"\\EAD3\"}.icon-profileringtone:before{content:\"\\EAD4\"}.icon-public-transport:before{content:\"\\EAD5\"}.icon-publish:before{content:\"\\EAD6\"}.icon-Quirky-stories:before{content:\"\\EAD7\"}.icon-Quiz:before{content:\"\\EAD8\"}.icon-Radiography:before{content:\"\\EAD9\"}.icon-ratings-stars:before{content:\"\\EADA\"}.icon-Real-time:before{content:\"\\EADB\"}.icon-recommend:before{content:\"\\EADC\"}.icon-record:before{content:\"\\EADD\"}.icon-Record-1:before{content:\"\\EADE\"}.icon-recycle-device:before{content:\"\\EADF\"}.icon-Redo:before{content:\"\\EAE0\"}.icon-relationship:before{content:\"\\EAE1\"}.icon-reload:before{content:\"\\EAE2\"}.icon-remote-control:before{content:\"\\EAE3\"}.icon-Remote-control-1:before{content:\"\\EAE4\"}.icon-remove-modifier:before{content:\"\\EAE5\"}.icon-Replay-boxed-arrow:before{content:\"\\EAE6\"}.icon-Reply-boxed-arrow:before{content:\"\\EAE7\"}.icon-Reply-curved-arrow:before{content:\"\\EAE8\"}.icon-report:before{content:\"\\EAE9\"}.icon-responsible:before{content:\"\\EAEA\"}.icon-Restaurant:before{content:\"\\EAEB\"}.icon-restore-to-phone:before{content:\"\\EAEC\"}.icon-Restrictied-content:before{content:\"\\EAED\"}.icon-rewards:before{content:\"\\EAEE\"}.icon-ringtones:before{content:\"\\EAEF\"}.icon-running:before{content:\"\\EAF0\"}.icon-Scales:before{content:\"\\EAF1\"}.icon-scan-ticket:before{content:\"\\EAF2\"}.icon-School:before{content:\"\\EAF3\"}.icon-Science:before{content:\"\\EAF4\"}.icon-Scissors:before{content:\"\\EAF5\"}.icon-sd-card:before{content:\"\\EAF6\"}.icon-SD-card-1:before{content:\"\\EAF7\"}.icon-search:before{content:\"\\EAF8\"}.icon-Send:before{content:\"\\EAF9\"}.icon-Send-to-person:before{content:\"\\EAFA\"}.icon-Server:before{content:\"\\EAFB\"}.icon-servers:before{content:\"\\EAFC\"}.icon-settings:before{content:\"\\EAFD\"}.icon-setup-and-repair:before{content:\"\\EAFE\"}.icon-setup-and-repair-cog:before{content:\"\\EAFF\"}.icon-setup-internet:before{content:\"\\EB00\"}.icon-share:before{content:\"\\EB01\"}.icon-Share-wifi:before{content:\"\\EB02\"}.icon-shipping:before{content:\"\\EB03\"}.icon-Shop:before{content:\"\\EB04\"}.icon-shop-pin:before{content:\"\\EB05\"}.icon-shop-subscriptions:before{content:\"\\EB06\"}.icon-Shopping:before{content:\"\\EB07\"}.icon-Show-front-back-camera:before{content:\"\\EB08\"}.icon-Shower:before{content:\"\\EB09\"}.icon-showroom-mobile-pro:before{content:\"\\EB0A\"}.icon-signal-1-5:before{content:\"\\EB0B\"}.icon-signal-2-5:before{content:\"\\EB0C\"}.icon-signal-3-5:before{content:\"\\EB0D\"}.icon-signal-4-5:before{content:\"\\EB0E\"}.icon-signal-5-5:before{content:\"\\EB0F\"}.icon-signal-boost:before{content:\"\\EB10\"}.icon-Silent:before{content:\"\\EB11\"}.icon-sim:before{content:\"\\EB12\"}.icon-simple-mode:before{content:\"\\EB13\"}.icon-Simplicity:before{content:\"\\EB14\"}.icon-Skip-backward:before{content:\"\\EB15\"}.icon-Skip-forward:before{content:\"\\EB16\"}.icon-Sleep:before{content:\"\\EB17\"}.icon-Smart-electric-meter:before{content:\"\\EB18\"}.icon-Smart-heating-switch:before{content:\"\\EB19\"}.icon-smart-home:before{content:\"\\EB1A\"}.icon-smart-lightswitch:before{content:\"\\EB1B\"}.icon-smart-powerstation:before{content:\"\\EB1C\"}.icon-Smart-Sensor:before{content:\"\\EB1D\"}.icon-smart-tap:before{content:\"\\EB1E\"}.icon-smart-watch:before{content:\"\\EB1F\"}.icon-social-network:before{content:\"\\EB20\"}.icon-software-update:before{content:\"\\EB21\"}.icon-Sport-channel:before{content:\"\\EB22\"}.icon-Start-services:before{content:\"\\EB23\"}.icon-startup-wizard:before{content:\"\\EB24\"}.icon-stocks:before{content:\"\\EB25\"}.icon-stop-secret:before{content:\"\\EB26\"}.icon-Stop-video:before{content:\"\\EB27\"}.icon-Storage-cloud:before{content:\"\\EB28\"}.icon-store-locator:before{content:\"\\EB29\"}.icon-Street:before{content:\"\\EB2A\"}.icon-Stretcher:before{content:\"\\EB2B\"}.icon-subscription-package:before{content:\"\\EB2C\"}.icon-Sudoku:before{content:\"\\EB2D\"}.icon-support:before{content:\"\\EB2E\"}.icon-surveillance-camera:before{content:\"\\EB2F\"}.icon-Syncronise:before{content:\"\\EB30\"}.icon-target-location:before{content:\"\\EB31\"}.icon-tarif:before{content:\"\\EB32\"}.icon-tariff:before{content:\"\\EB33\"}.icon-task-list:before{content:\"\\EB34\"}.icon-Taxi:before{content:\"\\EB35\"}.icon-team-connect:before{content:\"\\EB36\"}.icon-temperature:before{content:\"\\EB37\"}.icon-terms-conditions:before{content:\"\\EB38\"}.icon-text-alerts:before{content:\"\\EB39\"}.icon-Thumb-down:before{content:\"\\EB3A\"}.icon-Thumb-up:before{content:\"\\EB3B\"}.icon-tick:before{content:\"\\EB3C\"}.icon-tick-circle:before{content:\"\\EB3D\"}.icon-tickets:before{content:\"\\EB3E\"}.icon-Top-10:before{content:\"\\EB3F\"}.icon-top-up-dollar:before{content:\"\\EB40\"}.icon-top-up-euro:before{content:\"\\EB41\"}.icon-top-up-uk-bank:before{content:\"\\EB42\"}.icon-touch-screen:before{content:\"\\EB43\"}.icon-town:before{content:\"\\EB44\"}.icon-townhall:before{content:\"\\EB45\"}.icon-track-your-delivery:before{content:\"\\EB46\"}.icon-track-your-order:before{content:\"\\EB47\"}.icon-Trading:before{content:\"\\EB48\"}.icon-trash:before{content:\"\\EB49\"}.icon-tv-plus:before{content:\"\\EB4A\"}.icon-TV-series:before{content:\"\\EB4B\"}.icon-Undo:before{content:\"\\EB4C\"}.icon-unique:before{content:\"\\EB4D\"}.icon-unknown-file:before{content:\"\\EB4E\"}.icon-unlimited-calls:before{content:\"\\EB4F\"}.icon-unlocked:before{content:\"\\EB50\"}.icon-Unmissable:before{content:\"\\EB51\"}.icon-upload:before{content:\"\\EB52\"}.icon-USB:before{content:\"\\EB53\"}.icon-usb-key:before{content:\"\\EB54\"}.icon-Value:before{content:\"\\EB55\"}.icon-vehicle:before{content:\"\\EB56\"}.icon-video:before{content:\"\\EB57\"}.icon-video-file:before{content:\"\\EB58\"}.icon-video-phone:before{content:\"\\EB59\"}.icon-video-meeting2:before{content:\"\\EB5A\"}.icon-Vinyl:before{content:\"\\EB5B\"}.icon-vip-contact:before{content:\"\\EB5C\"}.icon-virtual-gamepad:before{content:\"\\EB5D\"}.icon-visual-voicemail:before{content:\"\\EB5E\"}.icon-vod-portrait:before{content:\"\\EB5F\"}.icon-volte:before{content:\"\\EB60\"}.icon-volume-high:before{content:\"\\EB61\"}.icon-volume-low:before{content:\"\\EB62\"}.icon-volume-mid:before{content:\"\\EB63\"}.icon-volume-none:before{content:\"\\EB64\"}.icon-vowifi:before{content:\"\\EB65\"}.icon-vvm-message-read-full:before{content:\"\\EB66\"}.icon-Warehouse:before{content:\"\\EB67\"}.icon-Warningimportant:before{content:\"\\EB68\"}.icon-Warning-important:before{content:\"\\EB69\"}.icon-web-cam:before{content:\"\\EB6A\"}.icon-web-fax-widget:before{content:\"\\EB6B\"}.icon-Wholesale-retail:before{content:\"\\EB6C\"}.icon-Widget:before{content:\"\\EB6D\"}.icon-widget-tour:before{content:\"\\EB6E\"}.icon-wifi:before{content:\"\\EB6F\"}.icon-wifi-0:before{content:\"\\EB70\"}.icon-wifi-1:before{content:\"\\EB71\"}.icon-wifi-2:before{content:\"\\EB72\"}.icon-wps-pairing:before{content:\"\\EB73\"}.icon-WPT:before{content:\"\\EB74\"}.icon-zoom-in:before{content:\"\\EB75\"}.icon-zoom-out:before{content:\"\\EB76\"}.icon-popout-tech:before{content:\"\\E634\"}.icon-frame-care:before{content:\"\\E640\"}.icon-frame-family:before{content:\"\\E637\"}.icon-frame-fun:before{content:\"\\E638\"}.icon-frame-home:before{content:\"\\E639\"}.icon-frame-money:before{content:\"\\E63A\"}.icon-frame-on-the-move:before{content:\"\\E63B\"}.icon-frame-tariff:before{content:\"\\E63C\"}.icon-frame-tech:before{content:\"\\E63D\"}.icon-frame-wellbeing:before{content:\"\\E63E\"}.icon-frame-work:before{content:\"\\E63F\"}.icon-popout-care:before{content:\"\\E62D\"}.icon-popout-family:before{content:\"\\E62E\"}.icon-popout-fun:before{content:\"\\E62F\"}.icon-popout-home:before{content:\"\\E630\"}.icon-popout-money:before{content:\"\\E631\"}.icon-popout-on-the-move:before{content:\"\\E632\"}.icon-popout-tariff:before{content:\"\\E633\"}.icon-popout-wellbeing:before{content:\"\\E635\"}.icon-popout-work:before{content:\"\\E636\"}.icon-frame-connectivity:before{content:\"\\EB78\"}.icon-frame-my-customers:before{content:\"\\EB79\"}.icon-frame-performance:before{content:\"\\EB7A\"}.icon-frame-security:before{content:\"\\EB7B\"}.icon-frame-teamwork:before{content:\"\\EB7C\"}.icon-popout-connectivity:before{content:\"\\EB7D\"}.icon-popout-my-customers:before{content:\"\\EB7E\"}.icon-popout-performance:before{content:\"\\EB7F\"}.icon-popout-security:before{content:\"\\EB80\"}.icon-popout-teamwork:before{content:\"\\EB81\"}.svg-arrow-next,.svg-arrow-previous,.svg-avatar,.svg-buy,.svg-checkbox-tick,.svg-delete,.svg-menu,.svg-search,.svg-settings,.svg-tick,.svg-warning-circle{position:relative}.svg-arrow-next:after,.svg-arrow-previous:after,.svg-avatar:after,.svg-buy:after,.svg-checkbox-tick:after,.svg-delete:after,.svg-menu:after,.svg-search:after,.svg-settings:after,.svg-tick:after,.svg-warning-circle:after{position:absolute;top:0;left:0;width:1.25rem;height:1.25rem;content:\"\";background-repeat:no-repeat;background-size:cover}.svg-delete:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M343.625 211.5c-4.875 1.125-12 4.125-15.875 6.5-8.5 5.25-102 98.25-108.625 108-8.875 13.25-12.25 31.5-8.625 46.875C215 392.25 209.625 386.25 334.125 511l114 114-114 114.125c-113.375 113.375-114 114-118.5 123.625-5.375 11.75-6.875 18.75-6.25 30.625.5 12.125 4.375 23.375 11.375 33.5 4.125 5.875 100.25 101 105.5 104.375 13.75 8.875 33.25 11.875 48.875 7.625 17.625-4.75 14.875-2.25 136.375-123.625L625 801.875l114 114C848.875 1025.625 853.5 1030 862.25 1034.25c20.625 9.75 45.25 8.375 62.125-3.625 7.75-5.5 100.75-98.125 105.75-105.25 9.25-13.375 13.125-33.375 9.25-48.625-4.875-19.5.625-13.375-123.5-137.75l-114-114L915.75 510.875c80.75-80.75 114.875-115.75 117.25-120.125 11.5-21.125 10.25-46.75-3.125-66.375-3.875-5.75-98.625-100.625-104.25-104.5-11.125-7.5-24.5-11.25-37.875-10.5-11.875.5-21.125 3.375-30.25 9-4.5 2.875-46.125 43.625-119.625 117L625 448.125l-114-114C386.375 209.75 392.25 215 373 210.5c-10-2.25-17.625-2-29.375 1z' fill='%23fff'/%3E%3C/svg%3E\")}.svg-checkbox-tick:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20'%3E%3Cpath d='M7.5 12.5L3.75 8.75l-2.5 2.5L7.5 17.5 20 5l-2.5-2.5-10 10z' fill='%23fff'/%3E%3C/svg%3E\")}.svg-warning-circle:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M593.75 94.125c-.375.25-6.25.875-13.125 1.375-6.875.375-13.875 1-15.625 1.25s-5.875.875-9.375 1.375c-10.75 1.375-29.75 4.375-35 5.625-2.75.625-9.25 2.125-14.375 3.25-70.625 15.625-147.25 51.625-204.375 96.125C256.625 238.375 219.625 277 188 322.5c-35 50.125-62.375 109.375-77.875 168.75-4.75 18.375-10.75 48.625-12.5 63.125-.75 6.125-1.625 13.5-2 16.25-3.25 26.5-3.25 85.375 0 111.5 5.625 45.75 12 74.5 24.875 113.5 10.75 32.25 28.25 71.25 43.25 96.375 2.75 4.75 5.5 9.375 6 10.125 3.875 6.625 14.75 23.125 21.875 33.125 64.125 90 156.75 159.375 260.375 194.875 27.125 9.25 70.5 19.875 94.875 23.125 3.5.5 7.375 1 8.75 1.25 1.25.25 6.125.875 10.625 1.25 4.5.5 9.875 1.125 11.875 1.375 9.5 1.375 81 1.25 95.625-.25 33.625-3.375 49.25-6 79.375-13.375 134.75-32.875 252.375-118.625 325.75-237.25 45.25-73.125 72.75-158.375 78.25-243.125 1.625-25.5.875-77.375-1.5-92.125-.25-1.5-1.375-10.25-2.5-19.125-10.25-79.75-43.75-164.25-92.125-232.75-7-10-10-13.875-22.625-29.75-16.125-20.125-44-48.75-66.125-67.75-68.875-59.125-152-99.625-241.625-117.75-6.875-1.375-14.75-2.875-17.375-3.25s-6-.875-7.5-1.25c-1.5-.25-5.375-.875-8.875-1.25-3.375-.375-8.5-1-11.25-1.375s-7.25-.875-10-1.25c-6.75-.75-81.125-2-81.875-1.375zM647 278.75c14.875 4.875 28.25 15 36 27.375 7.625 12.125 13 33.125 12.5 49.5-.125 8.25-1.75 36.25-2.375 43.125-.125 2.375-.75 9.375-1.125 15.625-.875 11.75-1.625 22.375-2.625 35-.375 4.125-.875 11.75-1.25 16.875-1.5 21.75-2 27.125-2.5 32.5-.25 3.125-.875 9.875-1.25 15-1.25 16.875-1.75 23-3 37.5-.75 7.875-1.625 18.875-2 24.375s-.875 12.5-1.25 15.625c-.25 3.125-.875 9-1.25 13.125s-.875 10-1.25 13.125c-.25 3.125-.875 10.125-1.25 15.625s-1 12.25-1.25 15c-.375 2.75-.875 8.375-1.25 12.5-1.625 17.75-2.5 26.75-4.375 42.5-.75 6.125-1.625 14-2 17.5-1.25 11.375-3 17.25-6.75 22.25-7.125 9.75-16.75 14.125-31.875 14.5-16.625.375-27.5-4.5-34.875-15.5-3.5-5.125-4.5-8.25-5.625-17.5-.875-6.25-1.75-12.625-2-14.375s-1.125-9.875-1.875-18.125c-1.25-14.25-2-21.625-3.125-30-.25-2.125-.875-8.25-1.25-13.75s-1-12.25-1.25-15c-1-9.125-1.75-18.625-2.5-28.75-.375-5.5-1-11.75-1.25-13.75-.25-2.125-.875-9.375-1.25-16.25-.5-6.875-1.125-13.875-1.25-15.625-.25-1.75-.75-8.25-1.25-14.375-.375-6.25-1-13-1.25-15-.25-2.125-.875-8.875-1.25-15-.375-6.25-1-13.75-1.25-16.875-.5-5.25-1.25-15.25-2.5-31.25-.25-3.75-.875-11.375-1.25-16.875-.875-11.625-1.625-21.625-2.5-33.125-.25-4.5-.875-12.375-1.25-17.5-.25-5.125-.875-14.125-1.375-20-3.125-39.875 2.375-64 18.625-81.625C593.25 277.875 622 270.5 647 278.75zm.625 563.375c23.375 8 41.875 28.5 46.625 51.625 2.75 13.625 1.125 30.875-3.875 43.125-7.125 17-24.375 32-43.5 37.75-11.25 3.375-33.5 3-44.375-.75-15.125-5.25-29.625-16.125-36.875-27.625C554 927.875 552.5 898 562.125 878c9.25-19.125 27.625-33.5 48.5-38 8.25-1.875 29.125-.625 37 2.125z' fill='%23527edb'/%3E%3C/svg%3E\")}.svg-menu:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M130.5 251.25c-13.375 2.625-26 13-32.25 26.125-3.375 7.375-3.875 9.5-3.875 19.5 0 10.25.375 12 4.125 19.625 5.25 10.625 12.375 17.75 22.75 22.75l8.125 3.875h991.25l8.125-3.875c10.25-5 18.125-12.75 22.75-22.5 11.125-23.75 1.25-50.75-22.75-62.25l-8.125-3.875-492.5-.125c-270.875-.125-494.875.25-497.625.75zM128.625 564.25c-13 3.5-23.5 12.25-30.125 25.125-3.625 6.75-4 8.625-4 19.375-.125 10.75.25 12.625 3.75 20 4.875 10.25 12.625 18 23 23l8.125 3.875h991.25l8.125-4c9.125-4.5 11.25-6.125 17.625-14.125 6.75-8.375 9.25-16.25 9.25-28.75 0-9.25-.5-11.625-3.875-18.75-4.875-10.375-12.625-18.125-23-23l-8.125-3.875-493.125-.25c-388-.125-494.375.125-498.875 1.375zM128.125 876.75c-13.875 4.375-23.625 12.875-29.875 25.75-3.375 7.25-3.875 9.375-3.875 19.375s.5 12.125 3.875 19.375c4.875 10.25 12.625 18 23 23l8.125 3.875h991.25l8.125-3.875c10.375-4.875 18.125-12.625 23-23 3.5-7.25 3.875-9.375 3.875-19.375s-.375-12.125-3.875-19.375c-4.875-10.25-12.625-18-23-23l-8.125-3.875-493.75-.25c-396.625-.125-494.75.125-498.75 1.375z' fill='%23fff'/%3E%3C/svg%3E\")}.svg-menu:hover:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M130.5 251.25c-13.375 2.625-26 13-32.25 26.125-3.375 7.375-3.875 9.5-3.875 19.5 0 10.25.375 12 4.125 19.625 5.25 10.625 12.375 17.75 22.75 22.75l8.125 3.875h991.25l8.125-3.875c10.25-5 18.125-12.75 22.75-22.5 11.125-23.75 1.25-50.75-22.75-62.25l-8.125-3.875-492.5-.125c-270.875-.125-494.875.25-497.625.75zM128.625 564.25c-13 3.5-23.5 12.25-30.125 25.125-3.625 6.75-4 8.625-4 19.375-.125 10.75.25 12.625 3.75 20 4.875 10.25 12.625 18 23 23l8.125 3.875h991.25l8.125-4c9.125-4.5 11.25-6.125 17.625-14.125 6.75-8.375 9.25-16.25 9.25-28.75 0-9.25-.5-11.625-3.875-18.75-4.875-10.375-12.625-18.125-23-23l-8.125-3.875-493.125-.25c-388-.125-494.375.125-498.875 1.375zM128.125 876.75c-13.875 4.375-23.625 12.875-29.875 25.75-3.375 7.25-3.875 9.375-3.875 19.375s.5 12.125 3.875 19.375c4.875 10.25 12.625 18 23 23l8.125 3.875h991.25l8.125-3.875c10.375-4.875 18.125-12.625 23-23 3.5-7.25 3.875-9.375 3.875-19.375s-.375-12.125-3.875-19.375c-4.875-10.25-12.625-18-23-23l-8.125-3.875-493.75-.25c-396.625-.125-494.75.125-498.75 1.375z' fill='%23000'/%3E%3C/svg%3E\")}.svg-tick:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M993.75 221.125c-10.5 2.875-15.75 5.25-24 10.5-8.5 5.5-6.375 3.625-48.125 44.25-19.625 19.125-40 38.875-45.25 44C859 336.75 789.875 404 764.5 428.75c-13.625 13.375-27.875 27.125-31.375 30.625-3.625 3.375-24.125 23.5-45.75 44.5-21.625 21.125-42.625 41.5-46.75 45.5s-18.25 17.75-31.375 30.5C542 645.5 502.875 683.625 497.625 688.625c-3.125 3-8.625 8.25-12 11.625l-6.375 6-10.125-11.5c-5.625-6.375-11.5-13-13.125-14.75-2.5-2.625-89.875-100.125-122.75-136.875C321.5 530 321.375 530 313 524.375c-25.5-16.875-59-17.25-86-1-8.5 5.125-47.125 43-55.375 54.25-17.75 24.5-20.125 57.875-6 84.75 2.75 5.125 21.125 29.375 45.125 59.625 70.625 88.75 138.75 174.375 173 217.375C402 962.25 418.25 982.75 420 985c19.25 25.5 31.125 35.375 50.625 41.875 28.5 9.625 60.25 2.25 81.5-19 3.25-3.25 10.625-11.875 16.25-19.125s13.75-17.375 17.875-22.5 10.125-12.75 13.375-16.875c35.875-45.25 62.125-78.125 69.125-86.875 4.75-5.875 21.125-26.375 36.375-45.625 26-32.625 59-74.25 96.125-120.75 8.625-10.875 22.75-28.625 31.375-39.5s33.375-42 55-69.125 46-57.875 54.25-68.125c29.125-36.75 64.125-80.625 99.25-124.75 40.125-50.25 42.25-53.25 46.75-64.75 15.375-38.625-1.5-83.125-38.5-102.25-16.375-8.375-38.875-11-55.625-6.5z' fill='%2332c832'/%3E%3C/svg%3E\")}.svg-arrow-previous:after{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 24'%3E%3Cpath d='M15 3l-3-3L0 12l12 12 3-3-9-9'/%3E%3C/svg%3E\")}.svg-arrow-previous:active:after,.svg-arrow-previous:focus:after,.svg-arrow-previous:hover:after{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 24'%3E%3Cpath d='M15 3l-3-3L0 12l12 12 3-3-9-9' fill='%23fff'/%3E%3C/svg%3E\")}.svg-arrow-next:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 24'%3E%3Cpath d='M3 0L0 3l9 9-9 9 3 3 12-12' fill='%23000'/%3E%3C/svg%3E\")}.svg-arrow-next.btn-primary:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 24'%3E%3Cpath d='M3 0L0 3l9 9-9 9 3 3 12-12' fill='%23fff'/%3E%3C/svg%3E\")}.svg-arrow-next.btn-primary:active:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 24'%3E%3Cpath d='M3 0L0 3l9 9-9 9 3 3 12-12' fill='%23000'/%3E%3C/svg%3E\")}.svg-settings:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M470.625 118.75c-20.125 4.25-46 13.875-72.5 26.875-42.875 21.125-57.375 39.125-52 64.375.75 3.625 4.25 13.75 7.875 22.375 8.25 20.375 11 31 11.125 42.625.125 19.875-10 39.75-30.875 60.5-21.125 21.125-40.375 30.75-61.125 30.75-11.25 0-20.75-2.375-36.25-8.75-29.375-12.375-40.625-13.875-53.625-7.625-13.125 6.375-27.5 25.125-40.75 53-18.5 39-27.5 69.375-27 91.625.5 22 8.625 31.375 38.125 43.625C176 547.5 182.75 551.5 192.375 560.5c15.125 14.375 21.375 33.5 21.5 64.75 0 22.5-2.25 34.625-9.5 49.125-8.75 17.625-21.75 27.375-52.5 39.375-28.75 11.375-38.25 24.25-36.5 49.75 2.625 36.5 31.75 104.625 54.75 128 8.25 8.25 16.875 12.625 26.375 13.25 9.25.75 15.125-.875 37.25-9.75 10-4 19.875-7.625 21.875-8 2.125-.375 5.125-1.125 6.875-1.5 3.875-.75 18.25-.75 22.375.125 16.125 3.125 33.125 13.75 50.5 31.25 19.75 20 29.375 39.125 29.75 58.625.125 13.25-2.5 23-14 50.125-4.75 11.375-5.25 13.5-5.375 23.75-.125 9.5.375 12.25 3 17.375 8 16.25 31.625 32.5 71.875 49.25 57 23.75 88.5 24.875 104.125 3.625 5.25-7 6.125-8.875 14.5-28.875 12.125-29 23.375-41.125 45.25-49.125 21.75-7.875 59.875-7.5 81.375.625 21.375 8.125 32 20.5 45.375 52.75 10.625 25.5 17 33.125 31.75 37.75 20.125 6.25 56.125-2.5 104.125-25.25 28-13.25 46.625-27.625 52.875-40.625 6.125-12.625 4.875-24-5.25-48.125-9.25-22.125-10.375-26.625-10.375-42.5.125-12.875.375-15.25 3.625-23.125 11.75-28.625 45.25-59.5 72.375-66.5 16.25-4.125 27.875-2.25 58.375 9.875 18.25 7.25 20 7.75 30 7.75 8.875.125 11.625-.375 16.875-3 13.375-6.625 26.875-24.25 40-51.75 17.625-36.75 26.875-66.125 27.625-87.25.625-17.375-3.5-28.125-13.75-36.25-6.5-5.125-8-6-30.75-15.75-28.625-12.25-37.25-20.25-48.875-45.375-2.625-5.875-5.125-24.375-5.125-38.625-.125-41.875 12.375-65.625 41.75-79.75 4.375-2.125 13.5-6.125 20.375-9 27.375-11.5 35-20.375 36.5-41.75 1.375-20.875-11-61.625-29.875-98.75-17.25-33.75-32.875-49.25-51.25-50.5-9.125-.75-15.25.875-34.75 8.75-20.5 8.375-30.875 11-42.5 11-20.75 0-39.75-9.875-61.75-32-14.375-14.375-23.25-28.375-27.5-43-2.125-7.25-2.875-21.875-1.375-28.125 2-8.5 5.75-19.375 10.375-30.625 7.375-17.375 9.375-25.375 8.75-34.25-.625-9.75-4.5-17.75-12.75-26.25-10-10.25-18.5-15.75-42.625-27.5-43.875-21.5-80.625-31.25-101.25-27-17.75 3.625-24.375 11.25-37.5 43.125-5.25 12.75-10.125 21.875-15.5 28.5-13.5 17-36.5 25.875-67.625 26.125-39.25.25-63-10.5-77.375-35-2.75-4.625-7.875-15.375-11.375-24-3.625-8.625-8.5-18.625-10.875-22.25-11-16.375-28.125-21.125-56-15.25zm200 261.75c40.375 7.625 78.25 25 110.625 50.75 12 9.625 32.875 30.625 41.375 41.875 27 35.375 44.125 76.5 50.375 121.25 2.25 16 1.75 55.75-.875 70.75C862.375 720.25 838.5 766.5 800.375 804c-40 39.5-87.125 62.375-144.75 70.375-11.875 1.625-52.875 1.75-60.625.25-1.75-.375-7.375-1.375-12.5-2.125-29.75-4.75-61.625-16.875-90-34.5-9.5-5.875-26.625-18.25-30.75-22.25-.75-.75-4.125-4-7.5-7.125-20.125-18.625-40-45.25-52.25-69.5-18.125-36.5-26.75-72.25-26.75-112.25.125-56.375 17.875-109 52.125-153.75 8-10.625 29-32 40.125-41 35.625-28.75 79.875-47.75 125.625-53.875 21.5-2.875 55.625-1.875 77.5 2.25z' fill='%23fff'/%3E%3C/svg%3E\")}.svg-settings:focus:after,.svg-settings:hover:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M470.625 118.75c-20.125 4.25-46 13.875-72.5 26.875-42.875 21.125-57.375 39.125-52 64.375.75 3.625 4.25 13.75 7.875 22.375 8.25 20.375 11 31 11.125 42.625.125 19.875-10 39.75-30.875 60.5-21.125 21.125-40.375 30.75-61.125 30.75-11.25 0-20.75-2.375-36.25-8.75-29.375-12.375-40.625-13.875-53.625-7.625-13.125 6.375-27.5 25.125-40.75 53-18.5 39-27.5 69.375-27 91.625.5 22 8.625 31.375 38.125 43.625C176 547.5 182.75 551.5 192.375 560.5c15.125 14.375 21.375 33.5 21.5 64.75 0 22.5-2.25 34.625-9.5 49.125-8.75 17.625-21.75 27.375-52.5 39.375-28.75 11.375-38.25 24.25-36.5 49.75 2.625 36.5 31.75 104.625 54.75 128 8.25 8.25 16.875 12.625 26.375 13.25 9.25.75 15.125-.875 37.25-9.75 10-4 19.875-7.625 21.875-8 2.125-.375 5.125-1.125 6.875-1.5 3.875-.75 18.25-.75 22.375.125 16.125 3.125 33.125 13.75 50.5 31.25 19.75 20 29.375 39.125 29.75 58.625.125 13.25-2.5 23-14 50.125-4.75 11.375-5.25 13.5-5.375 23.75-.125 9.5.375 12.25 3 17.375 8 16.25 31.625 32.5 71.875 49.25 57 23.75 88.5 24.875 104.125 3.625 5.25-7 6.125-8.875 14.5-28.875 12.125-29 23.375-41.125 45.25-49.125 21.75-7.875 59.875-7.5 81.375.625 21.375 8.125 32 20.5 45.375 52.75 10.625 25.5 17 33.125 31.75 37.75 20.125 6.25 56.125-2.5 104.125-25.25 28-13.25 46.625-27.625 52.875-40.625 6.125-12.625 4.875-24-5.25-48.125-9.25-22.125-10.375-26.625-10.375-42.5.125-12.875.375-15.25 3.625-23.125 11.75-28.625 45.25-59.5 72.375-66.5 16.25-4.125 27.875-2.25 58.375 9.875 18.25 7.25 20 7.75 30 7.75 8.875.125 11.625-.375 16.875-3 13.375-6.625 26.875-24.25 40-51.75 17.625-36.75 26.875-66.125 27.625-87.25.625-17.375-3.5-28.125-13.75-36.25-6.5-5.125-8-6-30.75-15.75-28.625-12.25-37.25-20.25-48.875-45.375-2.625-5.875-5.125-24.375-5.125-38.625-.125-41.875 12.375-65.625 41.75-79.75 4.375-2.125 13.5-6.125 20.375-9 27.375-11.5 35-20.375 36.5-41.75 1.375-20.875-11-61.625-29.875-98.75-17.25-33.75-32.875-49.25-51.25-50.5-9.125-.75-15.25.875-34.75 8.75-20.5 8.375-30.875 11-42.5 11-20.75 0-39.75-9.875-61.75-32-14.375-14.375-23.25-28.375-27.5-43-2.125-7.25-2.875-21.875-1.375-28.125 2-8.5 5.75-19.375 10.375-30.625 7.375-17.375 9.375-25.375 8.75-34.25-.625-9.75-4.5-17.75-12.75-26.25-10-10.25-18.5-15.75-42.625-27.5-43.875-21.5-80.625-31.25-101.25-27-17.75 3.625-24.375 11.25-37.5 43.125-5.25 12.75-10.125 21.875-15.5 28.5-13.5 17-36.5 25.875-67.625 26.125-39.25.25-63-10.5-77.375-35-2.75-4.625-7.875-15.375-11.375-24-3.625-8.625-8.5-18.625-10.875-22.25-11-16.375-28.125-21.125-56-15.25zm200 261.75c40.375 7.625 78.25 25 110.625 50.75 12 9.625 32.875 30.625 41.375 41.875 27 35.375 44.125 76.5 50.375 121.25 2.25 16 1.75 55.75-.875 70.75C862.375 720.25 838.5 766.5 800.375 804c-40 39.5-87.125 62.375-144.75 70.375-11.875 1.625-52.875 1.75-60.625.25-1.75-.375-7.375-1.375-12.5-2.125-29.75-4.75-61.625-16.875-90-34.5-9.5-5.875-26.625-18.25-30.75-22.25-.75-.75-4.125-4-7.5-7.125-20.125-18.625-40-45.25-52.25-69.5-18.125-36.5-26.75-72.25-26.75-112.25.125-56.375 17.875-109 52.125-153.75 8-10.625 29-32 40.125-41 35.625-28.75 79.875-47.75 125.625-53.875 21.5-2.875 55.625-1.875 77.5 2.25z' fill='%23f16e00'/%3E%3C/svg%3E\")}.svg-search:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M491.125 125.5c-.25.25-5.25.75-11.125 1.25-26.5 2-59.875 9-87.625 18.25-108.5 36.125-195.875 118.125-239 224.375-18.25 45.125-27 88.875-27.75 140-.625 39.5 2.5 66.875 11.375 102.25 19.75 78.625 64.375 149.75 127.375 203 39.25 33.25 87.125 59.25 136.875 74.5 21.25 6.5 47.75 12.125 65.625 14 4.125.5 8.875 1.125 10.625 1.5 8.125 1.5 59.25 1.375 75.125-.25 66-6.625 125.875-27.875 179-63.375l11-7.375 143 143c90 90 144.75 143.875 147.75 145.375 6.875 3.375 20.625 3.125 27.25-.375 5.75-3 56.875-53.75 60.875-60.375s4.25-19 .5-27c-2.375-5-28.875-32.125-145.625-148.875l-142.75-142.75 7.375-11c33-49.375 55.5-109.875 62.125-167.25.375-3.5 1.25-10.5 1.875-15.625 1.125-9.875.625-64.625-.625-73.125-.375-2.75-1.625-10.875-2.625-18.125-17.375-124-98.125-234.625-212.625-291.75-37.875-18.875-83.25-32.75-123.5-37.625-3.375-.375-8.25-1-10.625-1.375-4.875-.75-63.125-1.875-63.875-1.25zm58.25 126.375c61.25 9.25 112 34.25 153.75 76.125 42.125 42.25 67.625 94 76.25 154.5 1.375 10.125 1.75 51.625.5 61.875-5.5 44.625-19.625 82.75-44 119.375-42.5 63.875-114.125 107.5-190 115.875-11.625 1.25-50.125 1.25-61.5-.125-30.125-3.375-67.875-15.375-94.375-29.875C312.25 707 259.75 629 251.5 543.75c-1.625-17-.875-52.25 1.375-66.875 13.5-87.75 66.5-160.25 145.625-199.375 29.625-14.625 59.5-23.125 94-26.625 6.375-.625 51 .125 56.875 1z' fill='%23fff'/%3E%3C/svg%3E\")}.svg-search:hover:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M491.125 125.5c-.25.25-5.25.75-11.125 1.25-26.5 2-59.875 9-87.625 18.25-108.5 36.125-195.875 118.125-239 224.375-18.25 45.125-27 88.875-27.75 140-.625 39.5 2.5 66.875 11.375 102.25 19.75 78.625 64.375 149.75 127.375 203 39.25 33.25 87.125 59.25 136.875 74.5 21.25 6.5 47.75 12.125 65.625 14 4.125.5 8.875 1.125 10.625 1.5 8.125 1.5 59.25 1.375 75.125-.25 66-6.625 125.875-27.875 179-63.375l11-7.375 143 143c90 90 144.75 143.875 147.75 145.375 6.875 3.375 20.625 3.125 27.25-.375 5.75-3 56.875-53.75 60.875-60.375s4.25-19 .5-27c-2.375-5-28.875-32.125-145.625-148.875l-142.75-142.75 7.375-11c33-49.375 55.5-109.875 62.125-167.25.375-3.5 1.25-10.5 1.875-15.625 1.125-9.875.625-64.625-.625-73.125-.375-2.75-1.625-10.875-2.625-18.125-17.375-124-98.125-234.625-212.625-291.75-37.875-18.875-83.25-32.75-123.5-37.625-3.375-.375-8.25-1-10.625-1.375-4.875-.75-63.125-1.875-63.875-1.25zm58.25 126.375c61.25 9.25 112 34.25 153.75 76.125 42.125 42.25 67.625 94 76.25 154.5 1.375 10.125 1.75 51.625.5 61.875-5.5 44.625-19.625 82.75-44 119.375-42.5 63.875-114.125 107.5-190 115.875-11.625 1.25-50.125 1.25-61.5-.125-30.125-3.375-67.875-15.375-94.375-29.875C312.25 707 259.75 629 251.5 543.75c-1.625-17-.875-52.25 1.375-66.875 13.5-87.75 66.5-160.25 145.625-199.375 29.625-14.625 59.5-23.125 94-26.625 6.375-.625 51 .125 56.875 1z' fill='%23f16e00'/%3E%3C/svg%3E\")}.svg-avatar:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M603.75 94.5c-85.75 9-156.625 61.625-188.375 139.875-7.25 17.625-12 34.75-13.75 49.375-.375 3.125-1.125 8.125-1.625 11.25-1.125 6-.75 46 .625 54.375C405.25 380 417.75 414.25 433.25 438.5c13.625 21.125 33 42.625 52.375 57.75 63.625 49.875 151 61.25 225.625 29.625 74.5-31.625 126.5-100.75 135.875-180.875 1.75-14.875 1-48.375-1.375-62.375-6.375-36.875-20.75-70.625-42.5-99.5-9-11.75-30.75-34-41.375-42.125-32.25-24.5-70.375-40.25-109.125-45.375-11.125-1.375-39.75-2.125-49-1.125z' fill='%23fff'/%3E%3Cpath d='M418.125 532.75c-22.75 14.25-41.75 29.125-58 45.875-43.375 44.75-70.125 100.5-78.25 163.875-1.375 10.5-1.625 42.375-1.375 160.625.25 135.875.375 148.125 2.375 155.625C286.25 1071 290 1081.125 294 1088.625c18.625 34.5 48 56.625 86 65 11.875 2.5 13 2.5 299.75 2.625h287.875l-.5-205.25c-.125-113-.75-206.75-1.125-208.5-.5-1.75-1.5-7.375-2.25-12.5-6.5-44.25-27.75-92.5-57.125-129.625-16.25-20.625-39-42-60.125-56.375-12.75-8.75-23.625-15.25-25.375-15.25-.625 0-3.375 2-6 4.375-31.75 29.375-76.5 53.125-121.125 64.25-25.125 6.375-39.625 8.125-67.125 8.125-33.875.125-53.25-2.25-81.125-10-26.875-7.5-61.75-23.625-81.375-37.375-12-8.5-23.75-17.625-29.75-23.125-3.75-3.375-7.625-6.25-8.5-6.125-1 0-4.5 1.75-8 3.875z' fill='%23fff'/%3E%3C/svg%3E\")}.svg-avatar:active:after,.svg-avatar:hover:after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M603.75 94.5c-85.75 9-156.625 61.625-188.375 139.875-7.25 17.625-12 34.75-13.75 49.375-.375 3.125-1.125 8.125-1.625 11.25-1.125 6-.75 46 .625 54.375C405.25 380 417.75 414.25 433.25 438.5c13.625 21.125 33 42.625 52.375 57.75 63.625 49.875 151 61.25 225.625 29.625 74.5-31.625 126.5-100.75 135.875-180.875 1.75-14.875 1-48.375-1.375-62.375-6.375-36.875-20.75-70.625-42.5-99.5-9-11.75-30.75-34-41.375-42.125-32.25-24.5-70.375-40.25-109.125-45.375-11.125-1.375-39.75-2.125-49-1.125z' fill='%23f16e00'/%3E%3Cpath d='M418.125 532.75c-22.75 14.25-41.75 29.125-58 45.875-43.375 44.75-70.125 100.5-78.25 163.875-1.375 10.5-1.625 42.375-1.375 160.625.25 135.875.375 148.125 2.375 155.625C286.25 1071 290 1081.125 294 1088.625c18.625 34.5 48 56.625 86 65 11.875 2.5 13 2.5 299.75 2.625h287.875l-.5-205.25c-.125-113-.75-206.75-1.125-208.5-.5-1.75-1.5-7.375-2.25-12.5-6.5-44.25-27.75-92.5-57.125-129.625-16.25-20.625-39-42-60.125-56.375-12.75-8.75-23.625-15.25-25.375-15.25-.625 0-3.375 2-6 4.375-31.75 29.375-76.5 53.125-121.125 64.25-25.125 6.375-39.625 8.125-67.125 8.125-33.875.125-53.25-2.25-81.125-10-26.875-7.5-61.75-23.625-81.375-37.375-12-8.5-23.75-17.625-29.75-23.125-3.75-3.375-7.625-6.25-8.5-6.125-1 0-4.5 1.75-8 3.875z' fill='%23f16e00'/%3E%3C/svg%3E\")}.svg-buy:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M608.625 139.375c-.25.25-4.5.875-9.25 1.25C580.5 142.5 550.25 152 531.25 162.25c-53.625 28.75-92.375 81.75-103 140.875-3 17-3.125 20.375-3.125 102.75L425 482.5H280.25c-157.875 0-151.125-.25-166.5 7.125-4 1.875-10.375 6.875-15.125 11.5-13.375 13.375-19.75 30.25-18.125 48 1 10.75 2.625 16.625 8 27.75 2.375 4.75 9.875 21.125 16.75 36.25s13.625 30 15 33.125c1.5 3.125 5.5 12.125 9.125 20s8 17.5 9.75 21.25 29.875 65.875 62.75 138.125c32.75 72.125 61 134.375 62.75 138.125 1.625 3.75 14.375 31.625 28.125 61.875s26.375 58.125 28.125 61.875 4.5 9.875 6.125 13.5l3 6.5 290.75-.25 290.875-.375 10.375-22.5c14.5-31.375 16.5-35.875 28-60.625 5.625-12 11.375-24.375 12.75-27.5s8.25-17.75 15-32.5c14.25-30.5 16.5-35.5 27-58.125 8.375-18.5 12.75-27.75 20.25-43.75 2.875-6.25 6.625-14.125 8.125-17.5 3.625-8 8.25-18.125 18.75-40.625 7.5-16.25 49.5-106.875 58.125-125.625 1.875-4.125 7.25-15.625 11.875-25.625 11.75-25.375 14.375-30.875 23.125-50 4.25-9.25 10.125-21.75 13.125-27.625 7.75-15.25 9.875-23.375 9-34.25-1.875-24.125-17.375-44.375-41.75-54.125l-8.5-3.375-146.5-.375-146.625-.25-.125-77.25c0-42.375-.25-78.875-.375-80.875-1.625-18.875-5.625-37-12.25-54.875-28.875-78.125-102.875-129.875-186.75-130.5-8.375-.125-15.375.125-15.625.375zm42.5 96.875C688 246.5 716 274.125 726.5 310.75c2.75 9.75 2.75 11.25 3.25 90.75l.375 81h-211.5l.5-80.375c.125-44.125.75-82 1.25-84C528.625 285 544 263.75 571.75 247c6.875-4.125 17.875-8.875 23.875-10.375 20.125-4.75 39.25-4.875 55.5-.375zM424.25 610.875c.375 2 1.875 11.125 3.25 20.375 4.625 31.25 8.75 58 10.625 70 1.125 6.5 2.75 17.25 3.75 23.75s2.625 17.5 3.75 24.375c1 6.875 1.875 12.875 1.875 13.375 0 .625-38 1-84.5 1h-84.375l-5.375-11.625c-3-6.25-8.875-18.75-13.125-27.625-4.125-8.75-7.625-16.125-7.625-16.375 0-.125-4.375-9.5-9.875-20.75-5.375-11.25-11-23.25-12.5-26.5S224 647.75 219.75 639c-4.125-8.75-9.125-19.375-11.125-23.75l-3.5-7.75H423.5l.75 3.375zM730 608.5c0 .5-.875 7.75-1.875 15.875-2.75 20.875-2.75 21.625-5 41.25-2 17.25-2.625 22.625-3.75 30-.25 2-.875 6.25-1.125 9.375-1.125 9.625-5.875 49.25-6.375 52.5-.25 1.75-.5 3.875-.5 4.625-.125 1.25-17.875 1.625-84.5 1.625-46.375 0-84.375-.375-84.5-1 0-.5-.25-2.25-.625-4-1.75-10.25-6.875-42-8-49.375-.625-4.875-1.5-10.125-1.875-11.875-.25-1.625-.875-5.25-1.25-8.125-.5-2.75-2.625-16.875-5-31.25-2.375-14.5-4.875-30.25-5.625-35-.75-4.875-1.625-10.25-2-12.25l-.75-3.375h106.375c58.5 0 106.375.5 106.375 1zm305.875.5c-.375.875-6.625 15.375-14 32.25s-19.125 44.125-26.25 60.625-16 37-19.75 45.625l-6.75 15.625-85.875.375-85.75.25.625-2.75c.25-1.625 4-30.5 8.125-64.125 4.25-33.75 7.875-62.625 8.125-64.375s.875-6.75 1.375-11.25 1.125-8.5 1.25-9.125c.125-.5.25-1.75.375-2.75.125-1.625 13.25-1.875 109.625-1.875 87.125 0 109.375.375 108.875 1.5zM463 862.75c.75 4.75 2.5 15.625 8.375 54.125.75 4.75 1.75 11.875 2.375 15.625s3.375 21.75 6.125 40 5.375 35 5.875 37.125l.875 4.125h-94.25l-6.625-14.125C382 992 375 977.125 370 966.875c-5-10.375-11.75-24.375-15-31.25s-9.625-20.125-14.125-29.375c-4.375-9.25-11.25-23.625-15.25-31.875-3.875-8.25-7.375-15.375-7.75-16-.25-.5 32.125-.875 71.875-.875h72.375l.875 5.25zm235.25-1.875c-.375 2-2.5 14.5-4.625 27.875s-4.625 29.125-5.5 35c-6.5 40.375-8.25 51.375-10.5 66.875-1.5 9.625-3 18.75-3.375 20.375l-.5 2.75H574l-.75-3.5c-.375-1.875-1-5.625-1.375-8.375s-1-6.375-1.25-8.125c-.375-1.75-.875-4.875-1.125-6.875-.375-2.125-2-12.5-3.75-23.125s-4.625-28.625-6.375-40c-1.875-11.375-3.5-22-3.875-23.75-.25-1.75-1.125-6.75-1.75-11.25s-2-12.875-3.125-18.75c-1-5.875-1.875-11-1.875-11.625 0-.5 33.75-.875 75.125-.875H699l-.75 3.375zm224.375 11.875c-7.125 14.875-13.125 27.5-30.75 64.125-4.625 9.625-11.125 23.125-14.375 30s-9.625 20.25-14.125 29.625l-8.25 17.25h-47c-36.625 0-46.875-.375-46.875-1.625 0-.75.875-6.125 1.75-11.75 1-5.625 2.25-12.625 2.625-15.625 1.75-11.75 13.125-82 14.25-87.875.75-3.5 2.125-12.125 3.25-19.375 1-7.25 2.25-14.625 2.625-16.625l.75-3.375h143.375l-7.25 15.25z' fill='%23fff'/%3E%3C/svg%3E\")}.svg-buy:active:after,.svg-buy:hover:after{background-image:url(\"data:image/svg+xml;charset=utf8, %3Csvg xmlns='http://www.w3.org/2000/svg' width='1250' height='1250'%3E%3Cpath d='M608.625 139.375c-.25.25-4.5.875-9.25 1.25C580.5 142.5 550.25 152 531.25 162.25c-53.625 28.75-92.375 81.75-103 140.875-3 17-3.125 20.375-3.125 102.75L425 482.5H280.25c-157.875 0-151.125-.25-166.5 7.125-4 1.875-10.375 6.875-15.125 11.5-13.375 13.375-19.75 30.25-18.125 48 1 10.75 2.625 16.625 8 27.75 2.375 4.75 9.875 21.125 16.75 36.25s13.625 30 15 33.125c1.5 3.125 5.5 12.125 9.125 20s8 17.5 9.75 21.25 29.875 65.875 62.75 138.125c32.75 72.125 61 134.375 62.75 138.125 1.625 3.75 14.375 31.625 28.125 61.875s26.375 58.125 28.125 61.875 4.5 9.875 6.125 13.5l3 6.5 290.75-.25 290.875-.375 10.375-22.5c14.5-31.375 16.5-35.875 28-60.625 5.625-12 11.375-24.375 12.75-27.5s8.25-17.75 15-32.5c14.25-30.5 16.5-35.5 27-58.125 8.375-18.5 12.75-27.75 20.25-43.75 2.875-6.25 6.625-14.125 8.125-17.5 3.625-8 8.25-18.125 18.75-40.625 7.5-16.25 49.5-106.875 58.125-125.625 1.875-4.125 7.25-15.625 11.875-25.625 11.75-25.375 14.375-30.875 23.125-50 4.25-9.25 10.125-21.75 13.125-27.625 7.75-15.25 9.875-23.375 9-34.25-1.875-24.125-17.375-44.375-41.75-54.125l-8.5-3.375-146.5-.375-146.625-.25-.125-77.25c0-42.375-.25-78.875-.375-80.875-1.625-18.875-5.625-37-12.25-54.875-28.875-78.125-102.875-129.875-186.75-130.5-8.375-.125-15.375.125-15.625.375zm42.5 96.875C688 246.5 716 274.125 726.5 310.75c2.75 9.75 2.75 11.25 3.25 90.75l.375 81h-211.5l.5-80.375c.125-44.125.75-82 1.25-84C528.625 285 544 263.75 571.75 247c6.875-4.125 17.875-8.875 23.875-10.375 20.125-4.75 39.25-4.875 55.5-.375zM424.25 610.875c.375 2 1.875 11.125 3.25 20.375 4.625 31.25 8.75 58 10.625 70 1.125 6.5 2.75 17.25 3.75 23.75s2.625 17.5 3.75 24.375c1 6.875 1.875 12.875 1.875 13.375 0 .625-38 1-84.5 1h-84.375l-5.375-11.625c-3-6.25-8.875-18.75-13.125-27.625-4.125-8.75-7.625-16.125-7.625-16.375 0-.125-4.375-9.5-9.875-20.75-5.375-11.25-11-23.25-12.5-26.5S224 647.75 219.75 639c-4.125-8.75-9.125-19.375-11.125-23.75l-3.5-7.75H423.5l.75 3.375zM730 608.5c0 .5-.875 7.75-1.875 15.875-2.75 20.875-2.75 21.625-5 41.25-2 17.25-2.625 22.625-3.75 30-.25 2-.875 6.25-1.125 9.375-1.125 9.625-5.875 49.25-6.375 52.5-.25 1.75-.5 3.875-.5 4.625-.125 1.25-17.875 1.625-84.5 1.625-46.375 0-84.375-.375-84.5-1 0-.5-.25-2.25-.625-4-1.75-10.25-6.875-42-8-49.375-.625-4.875-1.5-10.125-1.875-11.875-.25-1.625-.875-5.25-1.25-8.125-.5-2.75-2.625-16.875-5-31.25-2.375-14.5-4.875-30.25-5.625-35-.75-4.875-1.625-10.25-2-12.25l-.75-3.375h106.375c58.5 0 106.375.5 106.375 1zm305.875.5c-.375.875-6.625 15.375-14 32.25s-19.125 44.125-26.25 60.625-16 37-19.75 45.625l-6.75 15.625-85.875.375-85.75.25.625-2.75c.25-1.625 4-30.5 8.125-64.125 4.25-33.75 7.875-62.625 8.125-64.375s.875-6.75 1.375-11.25 1.125-8.5 1.25-9.125c.125-.5.25-1.75.375-2.75.125-1.625 13.25-1.875 109.625-1.875 87.125 0 109.375.375 108.875 1.5zM463 862.75c.75 4.75 2.5 15.625 8.375 54.125.75 4.75 1.75 11.875 2.375 15.625s3.375 21.75 6.125 40 5.375 35 5.875 37.125l.875 4.125h-94.25l-6.625-14.125C382 992 375 977.125 370 966.875c-5-10.375-11.75-24.375-15-31.25s-9.625-20.125-14.125-29.375c-4.375-9.25-11.25-23.625-15.25-31.875-3.875-8.25-7.375-15.375-7.75-16-.25-.5 32.125-.875 71.875-.875h72.375l.875 5.25zm235.25-1.875c-.375 2-2.5 14.5-4.625 27.875s-4.625 29.125-5.5 35c-6.5 40.375-8.25 51.375-10.5 66.875-1.5 9.625-3 18.75-3.375 20.375l-.5 2.75H574l-.75-3.5c-.375-1.875-1-5.625-1.375-8.375s-1-6.375-1.25-8.125c-.375-1.75-.875-4.875-1.125-6.875-.375-2.125-2-12.5-3.75-23.125s-4.625-28.625-6.375-40c-1.875-11.375-3.5-22-3.875-23.75-.25-1.75-1.125-6.75-1.75-11.25s-2-12.875-3.125-18.75c-1-5.875-1.875-11-1.875-11.625 0-.5 33.75-.875 75.125-.875H699l-.75 3.375zm224.375 11.875c-7.125 14.875-13.125 27.5-30.75 64.125-4.625 9.625-11.125 23.125-14.375 30s-9.625 20.25-14.125 29.625l-8.25 17.25h-47c-36.625 0-46.875-.375-46.875-1.625 0-.75.875-6.125 1.75-11.75 1-5.625 2.25-12.625 2.625-15.625 1.75-11.75 13.125-82 14.25-87.875.75-3.5 2.125-12.125 3.25-19.375 1-7.25 2.25-14.625 2.625-16.625l.75-3.375h143.375l-7.25 15.25z' fill='%23f16e00'/%3E%3C/svg%3E\")}", ""]);

// exports


/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(59)();
// imports


// module
exports.push([module.i, "code[class*=language-],pre[class*=language-]{color:#000;background:none;text-shadow:0 1px #fff;font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{text-shadow:none;background:#b3d4fc}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{text-shadow:none;background:#b3d4fc}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#f5f2f0}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#999}.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#905}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#690}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#9a6e3a;background:hsla(0,0%,100%,.5)}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.class-name,.token.function{color:#dd4a68}.token.important,.token.regex,.token.variable{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}", ""]);

// exports


/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(59)();
// imports


// module
exports.push([module.i, ".swiper-container{margin:0 auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.swiper-container-no-flexbox .swiper-slide{float:left}.swiper-container-vertical>.swiper-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-box-sizing:content-box;box-sizing:content-box}.swiper-container-android .swiper-slide,.swiper-wrapper{-webkit-transform:translateZ(0);transform:translateZ(0)}.swiper-container-multirow>.swiper-wrapper{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.swiper-container-free-mode>.swiper-wrapper{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out;margin:0 auto}.swiper-slide{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;width:100%;height:100%;position:relative;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform}.swiper-slide-invisible-blank{visibility:hidden}.swiper-container-autoheight,.swiper-container-autoheight .swiper-slide{height:auto}.swiper-container-autoheight .swiper-wrapper{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-transition-property:height,-webkit-transform;transition-property:height,-webkit-transform;-o-transition-property:transform,height;transition-property:transform,height;transition-property:transform,height,-webkit-transform}.swiper-container-3d{-webkit-perspective:1200px;perspective:1200px}.swiper-container-3d .swiper-cube-shadow,.swiper-container-3d .swiper-slide,.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top,.swiper-container-3d .swiper-wrapper{-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-container-3d .swiper-slide-shadow-left{background-image:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(right,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(right,rgba(0,0,0,.5),transparent);background-image:linear-gradient(270deg,rgba(0,0,0,.5),transparent)}.swiper-container-3d .swiper-slide-shadow-right{background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(left,rgba(0,0,0,.5),transparent);background-image:linear-gradient(90deg,rgba(0,0,0,.5),transparent)}.swiper-container-3d .swiper-slide-shadow-top{background-image:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(bottom,rgba(0,0,0,.5),transparent);background-image:linear-gradient(0deg,rgba(0,0,0,.5),transparent)}.swiper-container-3d .swiper-slide-shadow-bottom{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(top,rgba(0,0,0,.5),transparent);background-image:linear-gradient(180deg,rgba(0,0,0,.5),transparent)}.swiper-container-wp8-horizontal,.swiper-container-wp8-horizontal>.swiper-wrapper{-ms-touch-action:pan-y;touch-action:pan-y}.swiper-container-wp8-vertical,.swiper-container-wp8-vertical>.swiper-wrapper{-ms-touch-action:pan-x;touch-action:pan-x}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:27px;height:44px;margin-top:-22px;z-index:10;cursor:pointer;background-size:27px 44px;background-position:50%;background-repeat:no-repeat}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-prev,.swiper-container-rtl .swiper-button-next{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 27 44'%3E%3Cpath d='M0 22L22 0l2.1 2.1L4.2 22l19.9 19.9L22 44 0 22z' fill='%23007aff'/%3E%3C/svg%3E\");left:10px;right:auto}.swiper-button-next,.swiper-container-rtl .swiper-button-prev{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 27 44'%3E%3Cpath d='M27 22L5 44l-2.1-2.1L22.8 22 2.9 2.1 5 0l22 22z' fill='%23007aff'/%3E%3C/svg%3E\");right:10px;left:auto}.swiper-button-prev.swiper-button-white,.swiper-container-rtl .swiper-button-next.swiper-button-white{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 27 44'%3E%3Cpath d='M0 22L22 0l2.1 2.1L4.2 22l19.9 19.9L22 44 0 22z' fill='%23fff'/%3E%3C/svg%3E\")}.swiper-button-next.swiper-button-white,.swiper-container-rtl .swiper-button-prev.swiper-button-white{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 27 44'%3E%3Cpath d='M27 22L5 44l-2.1-2.1L22.8 22 2.9 2.1 5 0l22 22z' fill='%23fff'/%3E%3C/svg%3E\")}.swiper-button-prev.swiper-button-black,.swiper-container-rtl .swiper-button-next.swiper-button-black{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 27 44'%3E%3Cpath d='M0 22L22 0l2.1 2.1L4.2 22l19.9 19.9L22 44 0 22z'/%3E%3C/svg%3E\")}.swiper-button-next.swiper-button-black,.swiper-container-rtl .swiper-button-prev.swiper-button-black{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 27 44'%3E%3Cpath d='M27 22L5 44l-2.1-2.1L22.8 22 2.9 2.1 5 0l22 22z'/%3E%3C/svg%3E\")}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;-webkit-transition:opacity .3s;-o-transition:.3s opacity;transition:opacity .3s;-webkit-transform:translateZ(0);transform:translateZ(0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-container-horizontal>.swiper-pagination-bullets,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:10px;left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active,.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullet{width:8px;height:8px;display:inline-block;border-radius:100%;background:#000;opacity:.2}button.swiper-pagination-bullet{border:none;margin:0;padding:0;-webkit-box-shadow:none;box-shadow:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet-active{opacity:1;background:#007aff}.swiper-container-vertical>.swiper-pagination-bullets{right:10px;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.swiper-container-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:6px 0;display:block}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:8px}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;-webkit-transition:top .2s,-webkit-transform .2s;transition:top .2s,-webkit-transform .2s;-o-transition:.2s transform,.2s top;transition:transform .2s,top .2s;transition:transform .2s,top .2s,-webkit-transform .2s}.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 4px}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);white-space:nowrap}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:left .2s,-webkit-transform .2s;transition:left .2s,-webkit-transform .2s;-o-transition:.2s transform,.2s left;transition:transform .2s,left .2s;transition:transform .2s,left .2s,-webkit-transform .2s}.swiper-container-horizontal.swiper-container-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:right .2s,-webkit-transform .2s;transition:right .2s,-webkit-transform .2s;-o-transition:.2s transform,.2s right;transition:transform .2s,right .2s;transition:transform .2s,right .2s,-webkit-transform .2s}.swiper-pagination-progressbar{background:rgba(0,0,0,.25);position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:#007aff;position:absolute;left:0;top:0;width:100%;height:100%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transform-origin:left top;-ms-transform-origin:left top;transform-origin:left top}.swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top}.swiper-container-horizontal>.swiper-pagination-progressbar,.swiper-container-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{width:100%;height:4px;left:0;top:0}.swiper-container-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-container-vertical>.swiper-pagination-progressbar{width:4px;height:100%;left:0;top:0}.swiper-pagination-white .swiper-pagination-bullet-active{background:#fff}.swiper-pagination-progressbar.swiper-pagination-white{background:hsla(0,0%,100%,.25)}.swiper-pagination-progressbar.swiper-pagination-white .swiper-pagination-progressbar-fill{background:#fff}.swiper-pagination-black .swiper-pagination-bullet-active{background:#000}.swiper-pagination-progressbar.swiper-pagination-black{background:rgba(0,0,0,.25)}.swiper-pagination-progressbar.swiper-pagination-black .swiper-pagination-progressbar-fill{background:#000}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:10px;position:relative;-ms-touch-action:none;background:rgba(0,0,0,.1)}.swiper-container-horizontal>.swiper-scrollbar{position:absolute;left:1%;bottom:3px;z-index:50;height:5px;width:98%}.swiper-container-vertical>.swiper-scrollbar{position:absolute;right:3px;top:1%;z-index:50;width:5px;height:98%}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:rgba(0,0,0,.5);border-radius:10px;left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}.swiper-zoom-container{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center}.swiper-zoom-container>canvas,.swiper-zoom-container>img,.swiper-zoom-container>svg{max-width:100%;max-height:100%;-o-object-fit:contain;object-fit:contain}.swiper-slide-zoomed{cursor:move}.swiper-lazy-preloader{width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;-webkit-transform-origin:50%;-ms-transform-origin:50%;transform-origin:50%;-webkit-animation:swiper-preloader-spin 1s steps(12) infinite;animation:swiper-preloader-spin 1s steps(12) infinite}.swiper-lazy-preloader:after{display:block;content:\"\";width:100%;height:100%;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cdefs%3E%3Cpath id='a' stroke='%236c6c6c' stroke-width='11' stroke-linecap='round' d='M60 7v20'/%3E%3C/defs%3E%3Cuse xlink:href='%23a' opacity='.27'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(30 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(60 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(90 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(120 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(150 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.37' transform='rotate(180 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.46' transform='rotate(210 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.56' transform='rotate(240 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.66' transform='rotate(270 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.75' transform='rotate(300 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.85' transform='rotate(330 60 60)'/%3E%3C/svg%3E\");background-position:50%;background-size:100%;background-repeat:no-repeat}.swiper-lazy-preloader-white:after{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cdefs%3E%3Cpath id='a' stroke='%23fff' stroke-width='11' stroke-linecap='round' d='M60 7v20'/%3E%3C/defs%3E%3Cuse xlink:href='%23a' opacity='.27'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(30 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(60 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(90 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(120 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.27' transform='rotate(150 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.37' transform='rotate(180 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.46' transform='rotate(210 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.56' transform='rotate(240 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.66' transform='rotate(270 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.75' transform='rotate(300 60 60)'/%3E%3Cuse xlink:href='%23a' opacity='.85' transform='rotate(330 60 60)'/%3E%3C/svg%3E\")}@-webkit-keyframes swiper-preloader-spin{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes swiper-preloader-spin{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.swiper-container .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-container-fade.swiper-container-free-mode .swiper-slide{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out}.swiper-container-fade .swiper-slide{pointer-events:none;-webkit-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity}.swiper-container-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-fade .swiper-slide-active,.swiper-container-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube{overflow:visible}.swiper-container-cube .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0;width:100%;height:100%}.swiper-container-cube .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-cube.swiper-container-rtl .swiper-slide{-webkit-transform-origin:100% 0;-ms-transform-origin:100% 0;transform-origin:100% 0}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-next,.swiper-container-cube .swiper-slide-next+.swiper-slide,.swiper-container-cube .swiper-slide-prev{pointer-events:auto;visibility:visible}.swiper-container-cube .swiper-slide-shadow-bottom,.swiper-container-cube .swiper-slide-shadow-left,.swiper-container-cube .swiper-slide-shadow-right,.swiper-container-cube .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0;width:100%;height:100%;background:#000;opacity:.6;-webkit-filter:blur(50px);filter:blur(50px);z-index:0}.swiper-container-flip{overflow:visible}.swiper-container-flip .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-container-flip .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-flip .swiper-slide-active,.swiper-container-flip .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-flip .swiper-slide-shadow-bottom,.swiper-container-flip .swiper-slide-shadow-left,.swiper-container-flip .swiper-slide-shadow-right,.swiper-container-flip .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-coverflow .swiper-wrapper{-ms-perspective:1200px}", ""]);

// exports


/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/HelvNeue55_W1G.woff";

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/HelvNeue55_W1G.woff2";

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/HelvNeue75_W1G.woff";

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/HelvNeue75_W1G.woff2";

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/icon-orange.woff";

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/icon-orange.woff2";

/***/ })
],[314]);
//# sourceMappingURL=vendor.3f3d24b9295cb698c698.js.map